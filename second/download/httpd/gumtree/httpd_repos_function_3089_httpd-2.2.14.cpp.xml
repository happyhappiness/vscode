<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3089_httpd-2.2.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">enum<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">XML_Error<pos:position pos:line="1" pos:column="22"/></name></name></type>
<name pos:line="2" pos:column="1">doProlog<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">XML_Parser<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">parser<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>,
	 <parameter><decl><type><specifier pos:line="3" pos:column="10">const<pos:position pos:line="3" pos:column="15"/></specifier> <name pos:line="3" pos:column="16">ENCODING<pos:position pos:line="3" pos:column="24"/></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">enc<pos:position pos:line="3" pos:column="29"/></name></decl></parameter>,
	 <parameter><decl><type><specifier pos:line="4" pos:column="10">const<pos:position pos:line="4" pos:column="15"/></specifier> <name pos:line="4" pos:column="16">char<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">s<pos:position pos:line="4" pos:column="23"/></name></decl></parameter>,
	 <parameter><decl><type><specifier pos:line="5" pos:column="10">const<pos:position pos:line="5" pos:column="15"/></specifier> <name pos:line="5" pos:column="16">char<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">end<pos:position pos:line="5" pos:column="25"/></name></decl></parameter>,
	 <parameter><decl><type><name pos:line="6" pos:column="10">int<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">tok<pos:position pos:line="6" pos:column="17"/></name></decl></parameter>,
	 <parameter><decl><type><specifier pos:line="7" pos:column="10">const<pos:position pos:line="7" pos:column="15"/></specifier> <name pos:line="7" pos:column="16">char<pos:position pos:line="7" pos:column="20"/></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">next<pos:position pos:line="7" pos:column="26"/></name></decl></parameter>,
	 <parameter><decl><type><specifier pos:line="8" pos:column="10">const<pos:position pos:line="8" pos:column="15"/></specifier> <name pos:line="8" pos:column="16">char<pos:position pos:line="8" pos:column="20"/></name> <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier><modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">nextPtr<pos:position pos:line="8" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="8" pos:column="31"/></parameter_list>
<block pos:line="9" pos:column="1">{
<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">XML_DTD<pos:position pos:line="10" pos:column="15"/></name></cpp:ifdef>
  <decl_stmt><decl><specifier pos:line="11" pos:column="3">static<pos:position pos:line="11" pos:column="9"/></specifier> <type><specifier pos:line="11" pos:column="10">const<pos:position pos:line="11" pos:column="15"/></specifier> <name pos:line="11" pos:column="16">XML_Char<pos:position pos:line="11" pos:column="24"/></name></type> <name><name pos:line="11" pos:column="25">externalSubsetName<pos:position pos:line="11" pos:column="43"/></name><index pos:line="11" pos:column="43">[]<pos:position pos:line="11" pos:column="45"/></index></name> <init pos:line="11" pos:column="46">= <expr><block pos:line="11" pos:column="48">{ <expr><literal type="char" pos:line="11" pos:column="50">'#'<pos:position pos:line="11" pos:column="53"/></literal></expr> , <expr><literal type="char" pos:line="11" pos:column="56">'\0'<pos:position pos:line="11" pos:column="60"/></literal></expr> }<pos:position pos:line="11" pos:column="62"/></block></expr></init></decl>;<pos:position pos:line="11" pos:column="63"/></decl_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="12" pos:column="8">/* XML_DTD */</comment>

  <decl_stmt><decl><type><specifier pos:line="14" pos:column="3">const<pos:position pos:line="14" pos:column="8"/></specifier> <name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier><modifier pos:line="14" pos:column="15">*<pos:position pos:line="14" pos:column="16"/></modifier></type><name pos:line="14" pos:column="16">eventPP<pos:position pos:line="14" pos:column="23"/></name></decl>;<pos:position pos:line="14" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="15" pos:column="3">const<pos:position pos:line="15" pos:column="8"/></specifier> <name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier><modifier pos:line="15" pos:column="15">*<pos:position pos:line="15" pos:column="16"/></modifier></type><name pos:line="15" pos:column="16">eventEndPP<pos:position pos:line="15" pos:column="26"/></name></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="16" pos:column="3">enum<pos:position pos:line="16" pos:column="7"/></name> <name pos:line="16" pos:column="8">XML_Content_Quant<pos:position pos:line="16" pos:column="25"/></name></name></type> <name pos:line="16" pos:column="26">quant<pos:position pos:line="16" pos:column="31"/></name></decl>;<pos:position pos:line="16" pos:column="32"/></decl_stmt>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">enc<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">==<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">encoding<pos:position pos:line="18" pos:column="22"/></name></expr>)<pos:position pos:line="18" pos:column="23"/></condition><then pos:line="18" pos:column="23"> <block pos:line="18" pos:column="24">{
    <expr_stmt><expr><name pos:line="19" pos:column="5">eventPP<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <operator pos:line="19" pos:column="15">&amp;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="16">eventPtr<pos:position pos:line="19" pos:column="24"/></name></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">eventEndPP<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <operator pos:line="20" pos:column="18">&amp;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="19">eventEndPtr<pos:position pos:line="20" pos:column="30"/></name></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then>
  <else pos:line="22" pos:column="3">else <block pos:line="22" pos:column="8">{
    <expr_stmt><expr><name pos:line="23" pos:column="5">eventPP<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <operator pos:line="23" pos:column="15">&amp;<pos:position pos:line="23" pos:column="20"/></operator><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><name><name pos:line="23" pos:column="17">openInternalEntities<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">-&gt;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="39">internalEventPtr<pos:position pos:line="23" pos:column="55"/></name></name><operator pos:line="23" pos:column="55">)<pos:position pos:line="23" pos:column="56"/></operator></expr>;<pos:position pos:line="23" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">eventEndPP<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <operator pos:line="24" pos:column="18">&amp;<pos:position pos:line="24" pos:column="23"/></operator><operator pos:line="24" pos:column="19">(<pos:position pos:line="24" pos:column="20"/></operator><name><name pos:line="24" pos:column="20">openInternalEntities<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">-&gt;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="42">internalEventEndPtr<pos:position pos:line="24" pos:column="61"/></name></name><operator pos:line="24" pos:column="61">)<pos:position pos:line="24" pos:column="62"/></operator></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></else></if>
  <for pos:line="26" pos:column="3">for <control pos:line="26" pos:column="7">(<init pos:line="26" pos:column="8">;<pos:position pos:line="26" pos:column="9"/></init><condition pos:line="26" pos:column="9">;<pos:position pos:line="26" pos:column="10"/></condition><incr/>)<pos:position pos:line="26" pos:column="11"/></control> <block pos:line="26" pos:column="12">{
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">int<pos:position pos:line="27" pos:column="8"/></name></type> <name pos:line="27" pos:column="9">role<pos:position pos:line="27" pos:column="13"/></name></decl>;<pos:position pos:line="27" pos:column="14"/></decl_stmt>
    <expr_stmt><expr><operator pos:line="28" pos:column="5">*<pos:position pos:line="28" pos:column="6"/></operator><name pos:line="28" pos:column="6">eventPP<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <name pos:line="28" pos:column="16">s<pos:position pos:line="28" pos:column="17"/></name></expr>;<pos:position pos:line="28" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="29" pos:column="5">*<pos:position pos:line="29" pos:column="6"/></operator><name pos:line="29" pos:column="6">eventEndPP<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="19">next<pos:position pos:line="29" pos:column="23"/></name></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">tok<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">&lt;=<pos:position pos:line="30" pos:column="18"/></operator> <literal type="number" pos:line="30" pos:column="16">0<pos:position pos:line="30" pos:column="17"/></literal></expr>)<pos:position pos:line="30" pos:column="18"/></condition><then pos:line="30" pos:column="18"> <block pos:line="30" pos:column="19">{
      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><name pos:line="31" pos:column="11">nextPtr<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">!=<pos:position pos:line="31" pos:column="21"/></operator> <literal type="number" pos:line="31" pos:column="22">0<pos:position pos:line="31" pos:column="23"/></literal> <operator pos:line="31" pos:column="24">&amp;&amp;<pos:position pos:line="31" pos:column="34"/></operator> <name pos:line="31" pos:column="27">tok<pos:position pos:line="31" pos:column="30"/></name> <operator pos:line="31" pos:column="31">!=<pos:position pos:line="31" pos:column="33"/></operator> <name pos:line="31" pos:column="34">XML_TOK_INVALID<pos:position pos:line="31" pos:column="49"/></name></expr>)<pos:position pos:line="31" pos:column="50"/></condition><then pos:line="31" pos:column="50"> <block pos:line="31" pos:column="51">{
	<expr_stmt><expr><operator pos:line="32" pos:column="9">*<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">nextPtr<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">=<pos:position pos:line="32" pos:column="19"/></operator> <name pos:line="32" pos:column="20">s<pos:position pos:line="32" pos:column="21"/></name></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>
	<return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">XML_ERROR_NONE<pos:position pos:line="33" pos:column="30"/></name></expr>;<pos:position pos:line="33" pos:column="31"/></return>
      }<pos:position pos:line="34" pos:column="8"/></block></then></if>
      <switch pos:line="35" pos:column="7">switch <condition pos:line="35" pos:column="14">(<expr><name pos:line="35" pos:column="15">tok<pos:position pos:line="35" pos:column="18"/></name></expr>)<pos:position pos:line="35" pos:column="19"/></condition> <block pos:line="35" pos:column="20">{
      <case pos:line="36" pos:column="7">case <expr><name pos:line="36" pos:column="12">XML_TOK_INVALID<pos:position pos:line="36" pos:column="27"/></name></expr>:<pos:position pos:line="36" pos:column="28"/></case>
	<expr_stmt><expr><operator pos:line="37" pos:column="9">*<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">eventPP<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <name pos:line="37" pos:column="20">next<pos:position pos:line="37" pos:column="24"/></name></expr>;<pos:position pos:line="37" pos:column="25"/></expr_stmt>
	<return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">XML_ERROR_INVALID_TOKEN<pos:position pos:line="38" pos:column="39"/></name></expr>;<pos:position pos:line="38" pos:column="40"/></return>
      <case pos:line="39" pos:column="7">case <expr><name pos:line="39" pos:column="12">XML_TOK_PARTIAL<pos:position pos:line="39" pos:column="27"/></name></expr>:<pos:position pos:line="39" pos:column="28"/></case>
	<return pos:line="40" pos:column="9">return <expr><name pos:line="40" pos:column="16">XML_ERROR_UNCLOSED_TOKEN<pos:position pos:line="40" pos:column="40"/></name></expr>;<pos:position pos:line="40" pos:column="41"/></return>
      <case pos:line="41" pos:column="7">case <expr><name pos:line="41" pos:column="12">XML_TOK_PARTIAL_CHAR<pos:position pos:line="41" pos:column="32"/></name></expr>:<pos:position pos:line="41" pos:column="33"/></case>
	<return pos:line="42" pos:column="9">return <expr><name pos:line="42" pos:column="16">XML_ERROR_PARTIAL_CHAR<pos:position pos:line="42" pos:column="38"/></name></expr>;<pos:position pos:line="42" pos:column="39"/></return>
      <case pos:line="43" pos:column="7">case <expr><name pos:line="43" pos:column="12">XML_TOK_NONE<pos:position pos:line="43" pos:column="24"/></name></expr>:<pos:position pos:line="43" pos:column="25"/></case>
<cpp:ifdef pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">ifdef<pos:position pos:line="44" pos:column="7"/></cpp:directive> <name pos:line="44" pos:column="8">XML_DTD<pos:position pos:line="44" pos:column="15"/></name></cpp:ifdef>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">enc<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">!=<pos:position pos:line="45" pos:column="19"/></operator> <name pos:line="45" pos:column="20">encoding<pos:position pos:line="45" pos:column="28"/></name></expr>)<pos:position pos:line="45" pos:column="29"/></condition><then pos:line="45" pos:column="29">
	  <block type="pseudo"><return pos:line="46" pos:column="11">return <expr><name pos:line="46" pos:column="18">XML_ERROR_NONE<pos:position pos:line="46" pos:column="32"/></name></expr>;<pos:position pos:line="46" pos:column="33"/></return></block></then></if>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">parentParser<pos:position pos:line="47" pos:column="25"/></name></expr>)<pos:position pos:line="47" pos:column="26"/></condition><then pos:line="47" pos:column="26"> <block pos:line="47" pos:column="27">{
	  <if pos:line="48" pos:column="11">if <condition pos:line="48" pos:column="14">(<expr><call><name pos:line="48" pos:column="15">XmlTokenRole<pos:position pos:line="48" pos:column="27"/></name><argument_list pos:line="48" pos:column="27">(<argument><expr><operator pos:line="48" pos:column="28">&amp;<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="29">prologState<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="42">XML_TOK_NONE<pos:position pos:line="48" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="56">end<pos:position pos:line="48" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="61">end<pos:position pos:line="48" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="66">enc<pos:position pos:line="48" pos:column="69"/></name></expr></argument>)<pos:position pos:line="48" pos:column="70"/></argument_list></call>
	      <operator pos:line="49" pos:column="15">==<pos:position pos:line="49" pos:column="17"/></operator> <name pos:line="49" pos:column="18">XML_ROLE_ERROR<pos:position pos:line="49" pos:column="32"/></name></expr>)<pos:position pos:line="49" pos:column="33"/></condition><then pos:line="49" pos:column="33">
	    <block type="pseudo"><return pos:line="50" pos:column="13">return <expr><name pos:line="50" pos:column="20">XML_ERROR_SYNTAX<pos:position pos:line="50" pos:column="36"/></name></expr>;<pos:position pos:line="50" pos:column="37"/></return></block></then></if>
	  <expr_stmt><expr><name pos:line="51" pos:column="11">hadExternalDoctype<pos:position pos:line="51" pos:column="29"/></name> <operator pos:line="51" pos:column="30">=<pos:position pos:line="51" pos:column="31"/></operator> <literal type="number" pos:line="51" pos:column="32">0<pos:position pos:line="51" pos:column="33"/></literal></expr>;<pos:position pos:line="51" pos:column="34"/></expr_stmt>
	  <return pos:line="52" pos:column="11">return <expr><name pos:line="52" pos:column="18">XML_ERROR_NONE<pos:position pos:line="52" pos:column="32"/></name></expr>;<pos:position pos:line="52" pos:column="33"/></return>
	}<pos:position pos:line="53" pos:column="10"/></block></then></if>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="54" pos:column="8">/* XML_DTD */</comment>
	<return pos:line="55" pos:column="9">return <expr><name pos:line="55" pos:column="16">XML_ERROR_NO_ELEMENTS<pos:position pos:line="55" pos:column="37"/></name></expr>;<pos:position pos:line="55" pos:column="38"/></return>
      <default pos:line="56" pos:column="7">default:<pos:position pos:line="56" pos:column="15"/></default>
	<expr_stmt><expr><name pos:line="57" pos:column="9">tok<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">=<pos:position pos:line="57" pos:column="14"/></operator> <operator pos:line="57" pos:column="15">-<pos:position pos:line="57" pos:column="16"/></operator><name pos:line="57" pos:column="16">tok<pos:position pos:line="57" pos:column="19"/></name></expr>;<pos:position pos:line="57" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name pos:line="58" pos:column="9">next<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">=<pos:position pos:line="58" pos:column="15"/></operator> <name pos:line="58" pos:column="16">end<pos:position pos:line="58" pos:column="19"/></name></expr>;<pos:position pos:line="58" pos:column="20"/></expr_stmt>
	<break pos:line="59" pos:column="9">break;<pos:position pos:line="59" pos:column="15"/></break>
      }<pos:position pos:line="60" pos:column="8"/></block></switch>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="62" pos:column="5">role<pos:position pos:line="62" pos:column="9"/></name> <operator pos:line="62" pos:column="10">=<pos:position pos:line="62" pos:column="11"/></operator> <call><name pos:line="62" pos:column="12">XmlTokenRole<pos:position pos:line="62" pos:column="24"/></name><argument_list pos:line="62" pos:column="24">(<argument><expr><operator pos:line="62" pos:column="25">&amp;<pos:position pos:line="62" pos:column="30"/></operator><name pos:line="62" pos:column="26">prologState<pos:position pos:line="62" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="39">tok<pos:position pos:line="62" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="44">s<pos:position pos:line="62" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="47">next<pos:position pos:line="62" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="53">enc<pos:position pos:line="62" pos:column="56"/></name></expr></argument>)<pos:position pos:line="62" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="58"/></expr_stmt>
    <switch pos:line="63" pos:column="5">switch <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">role<pos:position pos:line="63" pos:column="17"/></name></expr>)<pos:position pos:line="63" pos:column="18"/></condition> <block pos:line="63" pos:column="19">{
    <case pos:line="64" pos:column="5">case <expr><name pos:line="64" pos:column="10">XML_ROLE_XML_DECL<pos:position pos:line="64" pos:column="27"/></name></expr>:<pos:position pos:line="64" pos:column="28"/></case>
      <block pos:line="65" pos:column="7">{
	<decl_stmt><decl><type><name><name pos:line="66" pos:column="9">enum<pos:position pos:line="66" pos:column="13"/></name> <name pos:line="66" pos:column="14">XML_Error<pos:position pos:line="66" pos:column="23"/></name></name></type> <name pos:line="66" pos:column="24">result<pos:position pos:line="66" pos:column="30"/></name> <init pos:line="66" pos:column="31">= <expr><call><name pos:line="66" pos:column="33">processXmlDecl<pos:position pos:line="66" pos:column="47"/></name><argument_list pos:line="66" pos:column="47">(<argument><expr><name pos:line="66" pos:column="48">parser<pos:position pos:line="66" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="56">0<pos:position pos:line="66" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="59">s<pos:position pos:line="66" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="62">next<pos:position pos:line="66" pos:column="66"/></name></expr></argument>)<pos:position pos:line="66" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="66" pos:column="68"/></decl_stmt>
	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">result<pos:position pos:line="67" pos:column="19"/></name> <operator pos:line="67" pos:column="20">!=<pos:position pos:line="67" pos:column="22"/></operator> <name pos:line="67" pos:column="23">XML_ERROR_NONE<pos:position pos:line="67" pos:column="37"/></name></expr>)<pos:position pos:line="67" pos:column="38"/></condition><then pos:line="67" pos:column="38">
	  <block type="pseudo"><return pos:line="68" pos:column="11">return <expr><name pos:line="68" pos:column="18">result<pos:position pos:line="68" pos:column="24"/></name></expr>;<pos:position pos:line="68" pos:column="25"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="69" pos:column="9">enc<pos:position pos:line="69" pos:column="12"/></name> <operator pos:line="69" pos:column="13">=<pos:position pos:line="69" pos:column="14"/></operator> <name pos:line="69" pos:column="15">encoding<pos:position pos:line="69" pos:column="23"/></name></expr>;<pos:position pos:line="69" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="70" pos:column="8"/></block>
      <break pos:line="71" pos:column="7">break;<pos:position pos:line="71" pos:column="13"/></break>
    <case pos:line="72" pos:column="5">case <expr><name pos:line="72" pos:column="10">XML_ROLE_DOCTYPE_NAME<pos:position pos:line="72" pos:column="31"/></name></expr>:<pos:position pos:line="72" pos:column="32"/></case>
      <if pos:line="73" pos:column="7">if <condition pos:line="73" pos:column="10">(<expr><name pos:line="73" pos:column="11">startDoctypeDeclHandler<pos:position pos:line="73" pos:column="34"/></name></expr>)<pos:position pos:line="73" pos:column="35"/></condition><then pos:line="73" pos:column="35"> <block pos:line="73" pos:column="36">{
	<expr_stmt><expr><name pos:line="74" pos:column="9">doctypeName<pos:position pos:line="74" pos:column="20"/></name> <operator pos:line="74" pos:column="21">=<pos:position pos:line="74" pos:column="22"/></operator> <call><name pos:line="74" pos:column="23">poolStoreString<pos:position pos:line="74" pos:column="38"/></name><argument_list pos:line="74" pos:column="38">(<argument><expr><operator pos:line="74" pos:column="39">&amp;<pos:position pos:line="74" pos:column="44"/></operator><name pos:line="74" pos:column="40">tempPool<pos:position pos:line="74" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="50">enc<pos:position pos:line="74" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="55">s<pos:position pos:line="74" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="58">next<pos:position pos:line="74" pos:column="62"/></name></expr></argument>)<pos:position pos:line="74" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="64"/></expr_stmt>
	<if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><operator pos:line="75" pos:column="13">!<pos:position pos:line="75" pos:column="14"/></operator> <name pos:line="75" pos:column="15">doctypeName<pos:position pos:line="75" pos:column="26"/></name></expr>)<pos:position pos:line="75" pos:column="27"/></condition><then pos:line="75" pos:column="27">
	  <block type="pseudo"><return pos:line="76" pos:column="11">return <expr><name pos:line="76" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="76" pos:column="37"/></name></expr>;<pos:position pos:line="76" pos:column="38"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="77" pos:column="9">poolFinish<pos:position pos:line="77" pos:column="19"/></name><argument_list pos:line="77" pos:column="19">(<argument><expr><operator pos:line="77" pos:column="20">&amp;<pos:position pos:line="77" pos:column="25"/></operator><name pos:line="77" pos:column="21">tempPool<pos:position pos:line="77" pos:column="29"/></name></expr></argument>)<pos:position pos:line="77" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="78" pos:column="9">doctypeSysid<pos:position pos:line="78" pos:column="21"/></name> <operator pos:line="78" pos:column="22">=<pos:position pos:line="78" pos:column="23"/></operator> <literal type="number" pos:line="78" pos:column="24">0<pos:position pos:line="78" pos:column="25"/></literal></expr>;<pos:position pos:line="78" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="79" pos:column="9">doctypePubid<pos:position pos:line="79" pos:column="21"/></name> <operator pos:line="79" pos:column="22">=<pos:position pos:line="79" pos:column="23"/></operator> <literal type="number" pos:line="79" pos:column="24">0<pos:position pos:line="79" pos:column="25"/></literal></expr>;<pos:position pos:line="79" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="80" pos:column="8"/></block></then></if>
      <break pos:line="81" pos:column="7">break;<pos:position pos:line="81" pos:column="13"/></break>
    <case pos:line="82" pos:column="5">case <expr><name pos:line="82" pos:column="10">XML_ROLE_DOCTYPE_INTERNAL_SUBSET<pos:position pos:line="82" pos:column="42"/></name></expr>:<pos:position pos:line="82" pos:column="43"/></case>
      <if pos:line="83" pos:column="7">if <condition pos:line="83" pos:column="10">(<expr><name pos:line="83" pos:column="11">startDoctypeDeclHandler<pos:position pos:line="83" pos:column="34"/></name></expr>)<pos:position pos:line="83" pos:column="35"/></condition><then pos:line="83" pos:column="35"> <block pos:line="83" pos:column="36">{
	<expr_stmt><expr><call><name pos:line="84" pos:column="9">startDoctypeDeclHandler<pos:position pos:line="84" pos:column="32"/></name><argument_list pos:line="84" pos:column="32">(<argument><expr><name pos:line="84" pos:column="33">handlerArg<pos:position pos:line="84" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="45">doctypeName<pos:position pos:line="84" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="58">doctypeSysid<pos:position pos:line="84" pos:column="70"/></name></expr></argument>,
				<argument><expr><name pos:line="85" pos:column="33">doctypePubid<pos:position pos:line="85" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="47">1<pos:position pos:line="85" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name pos:line="86" pos:column="9">doctypeName<pos:position pos:line="86" pos:column="20"/></name> <operator pos:line="86" pos:column="21">=<pos:position pos:line="86" pos:column="22"/></operator> <literal type="number" pos:line="86" pos:column="23">0<pos:position pos:line="86" pos:column="24"/></literal></expr>;<pos:position pos:line="86" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="87" pos:column="9">poolClear<pos:position pos:line="87" pos:column="18"/></name><argument_list pos:line="87" pos:column="18">(<argument><expr><operator pos:line="87" pos:column="19">&amp;<pos:position pos:line="87" pos:column="24"/></operator><name pos:line="87" pos:column="20">tempPool<pos:position pos:line="87" pos:column="28"/></name></expr></argument>)<pos:position pos:line="87" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="88" pos:column="8"/></block></then></if>
      <break pos:line="89" pos:column="7">break;<pos:position pos:line="89" pos:column="13"/></break>
<cpp:ifdef pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">ifdef<pos:position pos:line="90" pos:column="7"/></cpp:directive> <name pos:line="90" pos:column="8">XML_DTD<pos:position pos:line="90" pos:column="15"/></name></cpp:ifdef>
    <case pos:line="91" pos:column="5">case <expr><name pos:line="91" pos:column="10">XML_ROLE_TEXT_DECL<pos:position pos:line="91" pos:column="28"/></name></expr>:<pos:position pos:line="91" pos:column="29"/></case>
      <block pos:line="92" pos:column="7">{
	<decl_stmt><decl><type><name><name pos:line="93" pos:column="9">enum<pos:position pos:line="93" pos:column="13"/></name> <name pos:line="93" pos:column="14">XML_Error<pos:position pos:line="93" pos:column="23"/></name></name></type> <name pos:line="93" pos:column="24">result<pos:position pos:line="93" pos:column="30"/></name> <init pos:line="93" pos:column="31">= <expr><call><name pos:line="93" pos:column="33">processXmlDecl<pos:position pos:line="93" pos:column="47"/></name><argument_list pos:line="93" pos:column="47">(<argument><expr><name pos:line="93" pos:column="48">parser<pos:position pos:line="93" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="93" pos:column="56">1<pos:position pos:line="93" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="93" pos:column="59">s<pos:position pos:line="93" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="62">next<pos:position pos:line="93" pos:column="66"/></name></expr></argument>)<pos:position pos:line="93" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="93" pos:column="68"/></decl_stmt>
	<if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><name pos:line="94" pos:column="13">result<pos:position pos:line="94" pos:column="19"/></name> <operator pos:line="94" pos:column="20">!=<pos:position pos:line="94" pos:column="22"/></operator> <name pos:line="94" pos:column="23">XML_ERROR_NONE<pos:position pos:line="94" pos:column="37"/></name></expr>)<pos:position pos:line="94" pos:column="38"/></condition><then pos:line="94" pos:column="38">
	  <block type="pseudo"><return pos:line="95" pos:column="11">return <expr><name pos:line="95" pos:column="18">result<pos:position pos:line="95" pos:column="24"/></name></expr>;<pos:position pos:line="95" pos:column="25"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="96" pos:column="9">enc<pos:position pos:line="96" pos:column="12"/></name> <operator pos:line="96" pos:column="13">=<pos:position pos:line="96" pos:column="14"/></operator> <name pos:line="96" pos:column="15">encoding<pos:position pos:line="96" pos:column="23"/></name></expr>;<pos:position pos:line="96" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="97" pos:column="8"/></block>
      <break pos:line="98" pos:column="7">break;<pos:position pos:line="98" pos:column="13"/></break>
<cpp:endif pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">endif<pos:position pos:line="99" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="99" pos:column="8">/* XML_DTD */</comment>
    <case pos:line="100" pos:column="5">case <expr><name pos:line="100" pos:column="10">XML_ROLE_DOCTYPE_PUBLIC_ID<pos:position pos:line="100" pos:column="36"/></name></expr>:<pos:position pos:line="100" pos:column="37"/></case>
      <if pos:line="101" pos:column="7">if <condition pos:line="101" pos:column="10">(<expr><name pos:line="101" pos:column="11">startDoctypeDeclHandler<pos:position pos:line="101" pos:column="34"/></name></expr>)<pos:position pos:line="101" pos:column="35"/></condition><then pos:line="101" pos:column="35"> <block pos:line="101" pos:column="36">{
	<expr_stmt><expr><name pos:line="102" pos:column="9">doctypePubid<pos:position pos:line="102" pos:column="21"/></name> <operator pos:line="102" pos:column="22">=<pos:position pos:line="102" pos:column="23"/></operator> <call><name pos:line="102" pos:column="24">poolStoreString<pos:position pos:line="102" pos:column="39"/></name><argument_list pos:line="102" pos:column="39">(<argument><expr><operator pos:line="102" pos:column="40">&amp;<pos:position pos:line="102" pos:column="45"/></operator><name pos:line="102" pos:column="41">tempPool<pos:position pos:line="102" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="51">enc<pos:position pos:line="102" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="56">s<pos:position pos:line="102" pos:column="57"/></name> <operator pos:line="102" pos:column="58">+<pos:position pos:line="102" pos:column="59"/></operator> <literal type="number" pos:line="102" pos:column="60">1<pos:position pos:line="102" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="63">next<pos:position pos:line="102" pos:column="67"/></name> <operator pos:line="102" pos:column="68">-<pos:position pos:line="102" pos:column="69"/></operator> <literal type="number" pos:line="102" pos:column="70">1<pos:position pos:line="102" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="73"/></expr_stmt>
	<if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><operator pos:line="103" pos:column="13">!<pos:position pos:line="103" pos:column="14"/></operator> <name pos:line="103" pos:column="15">doctypePubid<pos:position pos:line="103" pos:column="27"/></name></expr>)<pos:position pos:line="103" pos:column="28"/></condition><then pos:line="103" pos:column="28">
	  <block type="pseudo"><return pos:line="104" pos:column="11">return <expr><name pos:line="104" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="104" pos:column="37"/></name></expr>;<pos:position pos:line="104" pos:column="38"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="105" pos:column="9">poolFinish<pos:position pos:line="105" pos:column="19"/></name><argument_list pos:line="105" pos:column="19">(<argument><expr><operator pos:line="105" pos:column="20">&amp;<pos:position pos:line="105" pos:column="25"/></operator><name pos:line="105" pos:column="21">tempPool<pos:position pos:line="105" pos:column="29"/></name></expr></argument>)<pos:position pos:line="105" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="106" pos:column="8"/></block></then></if>
<cpp:ifdef pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">ifdef<pos:position pos:line="107" pos:column="7"/></cpp:directive> <name pos:line="107" pos:column="8">XML_DTD<pos:position pos:line="107" pos:column="15"/></name></cpp:ifdef>
      <expr_stmt><expr><name pos:line="108" pos:column="7">declEntity<pos:position pos:line="108" pos:column="17"/></name> <operator pos:line="108" pos:column="18">=<pos:position pos:line="108" pos:column="19"/></operator> <operator pos:line="108" pos:column="20">(<pos:position pos:line="108" pos:column="21"/></operator><name pos:line="108" pos:column="21">ENTITY<pos:position pos:line="108" pos:column="27"/></name> <operator pos:line="108" pos:column="28">*<pos:position pos:line="108" pos:column="29"/></operator><operator pos:line="108" pos:column="29">)<pos:position pos:line="108" pos:column="30"/></operator><call><name pos:line="108" pos:column="30">lookup<pos:position pos:line="108" pos:column="36"/></name><argument_list pos:line="108" pos:column="36">(<argument><expr><operator pos:line="108" pos:column="37">&amp;<pos:position pos:line="108" pos:column="42"/></operator><name><name pos:line="108" pos:column="38">dtd<pos:position pos:line="108" pos:column="41"/></name><operator pos:line="108" pos:column="41">.<pos:position pos:line="108" pos:column="42"/></operator><name pos:line="108" pos:column="42">paramEntities<pos:position pos:line="108" pos:column="55"/></name></name></expr></argument>,
				    <argument><expr><name pos:line="109" pos:column="37">externalSubsetName<pos:position pos:line="109" pos:column="55"/></name></expr></argument>,
				    <argument><expr><sizeof pos:line="110" pos:column="37">sizeof<argument_list pos:line="110" pos:column="43">(<argument><expr><name pos:line="110" pos:column="44">ENTITY<pos:position pos:line="110" pos:column="50"/></name></expr></argument>)<pos:position pos:line="110" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="110" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="53"/></expr_stmt>
      <if pos:line="111" pos:column="7">if <condition pos:line="111" pos:column="10">(<expr><operator pos:line="111" pos:column="11">!<pos:position pos:line="111" pos:column="12"/></operator><name pos:line="111" pos:column="12">declEntity<pos:position pos:line="111" pos:column="22"/></name></expr>)<pos:position pos:line="111" pos:column="23"/></condition><then pos:line="111" pos:column="23">
	<block type="pseudo"><return pos:line="112" pos:column="9">return <expr><name pos:line="112" pos:column="16">XML_ERROR_NO_MEMORY<pos:position pos:line="112" pos:column="35"/></name></expr>;<pos:position pos:line="112" pos:column="36"/></return></block></then></if>
<cpp:endif pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">endif<pos:position pos:line="113" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="113" pos:column="8">/* XML_DTD */</comment>
      <comment type="block" pos:line="114" pos:column="7">/* fall through */</comment>
    <case pos:line="115" pos:column="5">case <expr><name pos:line="115" pos:column="10">XML_ROLE_ENTITY_PUBLIC_ID<pos:position pos:line="115" pos:column="35"/></name></expr>:<pos:position pos:line="115" pos:column="36"/></case>
      <if pos:line="116" pos:column="7">if <condition pos:line="116" pos:column="10">(<expr><operator pos:line="116" pos:column="11">!<pos:position pos:line="116" pos:column="12"/></operator><call><name pos:line="116" pos:column="12">XmlIsPublicId<pos:position pos:line="116" pos:column="25"/></name><argument_list pos:line="116" pos:column="25">(<argument><expr><name pos:line="116" pos:column="26">enc<pos:position pos:line="116" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="31">s<pos:position pos:line="116" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="34">next<pos:position pos:line="116" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="40">eventPP<pos:position pos:line="116" pos:column="47"/></name></expr></argument>)<pos:position pos:line="116" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="116" pos:column="49"/></condition><then pos:line="116" pos:column="49">
	<block type="pseudo"><return pos:line="117" pos:column="9">return <expr><name pos:line="117" pos:column="16">XML_ERROR_SYNTAX<pos:position pos:line="117" pos:column="32"/></name></expr>;<pos:position pos:line="117" pos:column="33"/></return></block></then></if>
      <if pos:line="118" pos:column="7">if <condition pos:line="118" pos:column="10">(<expr><name pos:line="118" pos:column="11">declEntity<pos:position pos:line="118" pos:column="21"/></name></expr>)<pos:position pos:line="118" pos:column="22"/></condition><then pos:line="118" pos:column="22"> <block pos:line="118" pos:column="23">{
	<decl_stmt><decl><type><name pos:line="119" pos:column="9">XML_Char<pos:position pos:line="119" pos:column="17"/></name> <modifier pos:line="119" pos:column="18">*<pos:position pos:line="119" pos:column="19"/></modifier></type><name pos:line="119" pos:column="19">tem<pos:position pos:line="119" pos:column="22"/></name> <init pos:line="119" pos:column="23">= <expr><call><name pos:line="119" pos:column="25">poolStoreString<pos:position pos:line="119" pos:column="40"/></name><argument_list pos:line="119" pos:column="40">(<argument><expr><operator pos:line="119" pos:column="41">&amp;<pos:position pos:line="119" pos:column="46"/></operator><name><name pos:line="119" pos:column="42">dtd<pos:position pos:line="119" pos:column="45"/></name><operator pos:line="119" pos:column="45">.<pos:position pos:line="119" pos:column="46"/></operator><name pos:line="119" pos:column="46">pool<pos:position pos:line="119" pos:column="50"/></name></name></expr></argument>,
	                                <argument><expr><name pos:line="120" pos:column="41">enc<pos:position pos:line="120" pos:column="44"/></name></expr></argument>,
					<argument><expr><name pos:line="121" pos:column="41">s<pos:position pos:line="121" pos:column="42"/></name> <operator pos:line="121" pos:column="43">+<pos:position pos:line="121" pos:column="44"/></operator> <name><name pos:line="121" pos:column="45">enc<pos:position pos:line="121" pos:column="48"/></name><operator pos:line="121" pos:column="48">-&gt;<pos:position pos:line="121" pos:column="53"/></operator><name pos:line="121" pos:column="50">minBytesPerChar<pos:position pos:line="121" pos:column="65"/></name></name></expr></argument>,
	  				<argument><expr><name pos:line="122" pos:column="41">next<pos:position pos:line="122" pos:column="45"/></name> <operator pos:line="122" pos:column="46">-<pos:position pos:line="122" pos:column="47"/></operator> <name><name pos:line="122" pos:column="48">enc<pos:position pos:line="122" pos:column="51"/></name><operator pos:line="122" pos:column="51">-&gt;<pos:position pos:line="122" pos:column="56"/></operator><name pos:line="122" pos:column="53">minBytesPerChar<pos:position pos:line="122" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="122" pos:column="70"/></decl_stmt>
	<if pos:line="123" pos:column="9">if <condition pos:line="123" pos:column="12">(<expr><operator pos:line="123" pos:column="13">!<pos:position pos:line="123" pos:column="14"/></operator><name pos:line="123" pos:column="14">tem<pos:position pos:line="123" pos:column="17"/></name></expr>)<pos:position pos:line="123" pos:column="18"/></condition><then pos:line="123" pos:column="18">
	  <block type="pseudo"><return pos:line="124" pos:column="11">return <expr><name pos:line="124" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="124" pos:column="37"/></name></expr>;<pos:position pos:line="124" pos:column="38"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="125" pos:column="9">normalizePublicId<pos:position pos:line="125" pos:column="26"/></name><argument_list pos:line="125" pos:column="26">(<argument><expr><name pos:line="125" pos:column="27">tem<pos:position pos:line="125" pos:column="30"/></name></expr></argument>)<pos:position pos:line="125" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="126" pos:column="9">declEntity<pos:position pos:line="126" pos:column="19"/></name><operator pos:line="126" pos:column="19">-&gt;<pos:position pos:line="126" pos:column="24"/></operator><name pos:line="126" pos:column="21">publicId<pos:position pos:line="126" pos:column="29"/></name></name> <operator pos:line="126" pos:column="30">=<pos:position pos:line="126" pos:column="31"/></operator> <name pos:line="126" pos:column="32">tem<pos:position pos:line="126" pos:column="35"/></name></expr>;<pos:position pos:line="126" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="127" pos:column="9">poolFinish<pos:position pos:line="127" pos:column="19"/></name><argument_list pos:line="127" pos:column="19">(<argument><expr><operator pos:line="127" pos:column="20">&amp;<pos:position pos:line="127" pos:column="25"/></operator><name><name pos:line="127" pos:column="21">dtd<pos:position pos:line="127" pos:column="24"/></name><operator pos:line="127" pos:column="24">.<pos:position pos:line="127" pos:column="25"/></operator><name pos:line="127" pos:column="25">pool<pos:position pos:line="127" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="128" pos:column="8"/></block></then></if>
      <break pos:line="129" pos:column="7">break;<pos:position pos:line="129" pos:column="13"/></break>
    <case pos:line="130" pos:column="5">case <expr><name pos:line="130" pos:column="10">XML_ROLE_DOCTYPE_CLOSE<pos:position pos:line="130" pos:column="32"/></name></expr>:<pos:position pos:line="130" pos:column="33"/></case>
      <if pos:line="131" pos:column="7">if <condition pos:line="131" pos:column="10">(<expr><name pos:line="131" pos:column="11">doctypeName<pos:position pos:line="131" pos:column="22"/></name></expr>)<pos:position pos:line="131" pos:column="23"/></condition><then pos:line="131" pos:column="23"> <block pos:line="131" pos:column="24">{
	<expr_stmt><expr><call><name pos:line="132" pos:column="9">startDoctypeDeclHandler<pos:position pos:line="132" pos:column="32"/></name><argument_list pos:line="132" pos:column="32">(<argument><expr><name pos:line="132" pos:column="33">handlerArg<pos:position pos:line="132" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="45">doctypeName<pos:position pos:line="132" pos:column="56"/></name></expr></argument>,
				<argument><expr><name pos:line="133" pos:column="33">doctypeSysid<pos:position pos:line="133" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="47">doctypePubid<pos:position pos:line="133" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="133" pos:column="61">0<pos:position pos:line="133" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="134" pos:column="9">poolClear<pos:position pos:line="134" pos:column="18"/></name><argument_list pos:line="134" pos:column="18">(<argument><expr><operator pos:line="134" pos:column="19">&amp;<pos:position pos:line="134" pos:column="24"/></operator><name pos:line="134" pos:column="20">tempPool<pos:position pos:line="134" pos:column="28"/></name></expr></argument>)<pos:position pos:line="134" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="135" pos:column="8"/></block></then></if>
      <if pos:line="136" pos:column="7">if <condition pos:line="136" pos:column="10">(<expr><name><name pos:line="136" pos:column="11">dtd<pos:position pos:line="136" pos:column="14"/></name><operator pos:line="136" pos:column="14">.<pos:position pos:line="136" pos:column="15"/></operator><name pos:line="136" pos:column="15">complete<pos:position pos:line="136" pos:column="23"/></name></name> <operator pos:line="136" pos:column="24">&amp;&amp;<pos:position pos:line="136" pos:column="34"/></operator> <name pos:line="136" pos:column="27">hadExternalDoctype<pos:position pos:line="136" pos:column="45"/></name></expr>)<pos:position pos:line="136" pos:column="46"/></condition><then pos:line="136" pos:column="46"> <block pos:line="136" pos:column="47">{
	<expr_stmt><expr><name><name pos:line="137" pos:column="9">dtd<pos:position pos:line="137" pos:column="12"/></name><operator pos:line="137" pos:column="12">.<pos:position pos:line="137" pos:column="13"/></operator><name pos:line="137" pos:column="13">complete<pos:position pos:line="137" pos:column="21"/></name></name> <operator pos:line="137" pos:column="22">=<pos:position pos:line="137" pos:column="23"/></operator> <literal type="number" pos:line="137" pos:column="24">0<pos:position pos:line="137" pos:column="25"/></literal></expr>;<pos:position pos:line="137" pos:column="26"/></expr_stmt>
<cpp:ifdef pos:line="138" pos:column="1">#<cpp:directive pos:line="138" pos:column="2">ifdef<pos:position pos:line="138" pos:column="7"/></cpp:directive> <name pos:line="138" pos:column="8">XML_DTD<pos:position pos:line="138" pos:column="15"/></name></cpp:ifdef>
	<if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><name pos:line="139" pos:column="13">paramEntityParsing<pos:position pos:line="139" pos:column="31"/></name> <operator pos:line="139" pos:column="32">&amp;&amp;<pos:position pos:line="139" pos:column="42"/></operator> <name pos:line="139" pos:column="35">externalEntityRefHandler<pos:position pos:line="139" pos:column="59"/></name></expr>)<pos:position pos:line="139" pos:column="60"/></condition><then pos:line="139" pos:column="60"> <block pos:line="139" pos:column="61">{
	  <decl_stmt><decl><type><name pos:line="140" pos:column="11">ENTITY<pos:position pos:line="140" pos:column="17"/></name> <modifier pos:line="140" pos:column="18">*<pos:position pos:line="140" pos:column="19"/></modifier></type><name pos:line="140" pos:column="19">entity<pos:position pos:line="140" pos:column="25"/></name> <init pos:line="140" pos:column="26">= <expr><operator pos:line="140" pos:column="28">(<pos:position pos:line="140" pos:column="29"/></operator><name pos:line="140" pos:column="29">ENTITY<pos:position pos:line="140" pos:column="35"/></name> <operator pos:line="140" pos:column="36">*<pos:position pos:line="140" pos:column="37"/></operator><operator pos:line="140" pos:column="37">)<pos:position pos:line="140" pos:column="38"/></operator><call><name pos:line="140" pos:column="38">lookup<pos:position pos:line="140" pos:column="44"/></name><argument_list pos:line="140" pos:column="44">(<argument><expr><operator pos:line="140" pos:column="45">&amp;<pos:position pos:line="140" pos:column="50"/></operator><name><name pos:line="140" pos:column="46">dtd<pos:position pos:line="140" pos:column="49"/></name><operator pos:line="140" pos:column="49">.<pos:position pos:line="140" pos:column="50"/></operator><name pos:line="140" pos:column="50">paramEntities<pos:position pos:line="140" pos:column="63"/></name></name></expr></argument>,
					    <argument><expr><name pos:line="141" pos:column="45">externalSubsetName<pos:position pos:line="141" pos:column="63"/></name></expr></argument>,
					    <argument><expr><literal type="number" pos:line="142" pos:column="45">0<pos:position pos:line="142" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="142" pos:column="48"/></decl_stmt>
	  <if pos:line="143" pos:column="11">if <condition pos:line="143" pos:column="14">(<expr><operator pos:line="143" pos:column="15">!<pos:position pos:line="143" pos:column="16"/></operator><call><name pos:line="143" pos:column="16">externalEntityRefHandler<pos:position pos:line="143" pos:column="40"/></name><argument_list pos:line="143" pos:column="40">(<argument><expr><name pos:line="143" pos:column="41">externalEntityRefHandlerArg<pos:position pos:line="143" pos:column="68"/></name></expr></argument>,
					<argument><expr><literal type="number" pos:line="144" pos:column="41">0<pos:position pos:line="144" pos:column="42"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="145" pos:column="41">entity<pos:position pos:line="145" pos:column="47"/></name><operator pos:line="145" pos:column="47">-&gt;<pos:position pos:line="145" pos:column="52"/></operator><name pos:line="145" pos:column="49">base<pos:position pos:line="145" pos:column="53"/></name></name></expr></argument>,
					<argument><expr><name><name pos:line="146" pos:column="41">entity<pos:position pos:line="146" pos:column="47"/></name><operator pos:line="146" pos:column="47">-&gt;<pos:position pos:line="146" pos:column="52"/></operator><name pos:line="146" pos:column="49">systemId<pos:position pos:line="146" pos:column="57"/></name></name></expr></argument>,
					<argument><expr><name><name pos:line="147" pos:column="41">entity<pos:position pos:line="147" pos:column="47"/></name><operator pos:line="147" pos:column="47">-&gt;<pos:position pos:line="147" pos:column="52"/></operator><name pos:line="147" pos:column="49">publicId<pos:position pos:line="147" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="147" pos:column="59"/></condition><then pos:line="147" pos:column="59">
	   <block type="pseudo"><return pos:line="148" pos:column="12">return <expr><name pos:line="148" pos:column="19">XML_ERROR_EXTERNAL_ENTITY_HANDLING<pos:position pos:line="148" pos:column="53"/></name></expr>;<pos:position pos:line="148" pos:column="54"/></return></block></then></if>
	}<pos:position pos:line="149" pos:column="10"/></block></then></if>
<cpp:endif pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">endif<pos:position pos:line="150" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="150" pos:column="8">/* XML_DTD */</comment>
	<if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><operator pos:line="151" pos:column="13">!<pos:position pos:line="151" pos:column="14"/></operator><name><name pos:line="151" pos:column="14">dtd<pos:position pos:line="151" pos:column="17"/></name><operator pos:line="151" pos:column="17">.<pos:position pos:line="151" pos:column="18"/></operator><name pos:line="151" pos:column="18">complete<pos:position pos:line="151" pos:column="26"/></name></name>
	    <operator pos:line="152" pos:column="13">&amp;&amp;<pos:position pos:line="152" pos:column="23"/></operator> <operator pos:line="152" pos:column="16">!<pos:position pos:line="152" pos:column="17"/></operator><name><name pos:line="152" pos:column="17">dtd<pos:position pos:line="152" pos:column="20"/></name><operator pos:line="152" pos:column="20">.<pos:position pos:line="152" pos:column="21"/></operator><name pos:line="152" pos:column="21">standalone<pos:position pos:line="152" pos:column="31"/></name></name>
	    <operator pos:line="153" pos:column="13">&amp;&amp;<pos:position pos:line="153" pos:column="23"/></operator> <name pos:line="153" pos:column="16">notStandaloneHandler<pos:position pos:line="153" pos:column="36"/></name>
	    <operator pos:line="154" pos:column="13">&amp;&amp;<pos:position pos:line="154" pos:column="23"/></operator> <operator pos:line="154" pos:column="16">!<pos:position pos:line="154" pos:column="17"/></operator><call><name pos:line="154" pos:column="17">notStandaloneHandler<pos:position pos:line="154" pos:column="37"/></name><argument_list pos:line="154" pos:column="37">(<argument><expr><name pos:line="154" pos:column="38">handlerArg<pos:position pos:line="154" pos:column="48"/></name></expr></argument>)<pos:position pos:line="154" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="154" pos:column="50"/></condition><then pos:line="154" pos:column="50">
	  <block type="pseudo"><return pos:line="155" pos:column="11">return <expr><name pos:line="155" pos:column="18">XML_ERROR_NOT_STANDALONE<pos:position pos:line="155" pos:column="42"/></name></expr>;<pos:position pos:line="155" pos:column="43"/></return></block></then></if>
      }<pos:position pos:line="156" pos:column="8"/></block></then></if>
      <if pos:line="157" pos:column="7">if <condition pos:line="157" pos:column="10">(<expr><name pos:line="157" pos:column="11">endDoctypeDeclHandler<pos:position pos:line="157" pos:column="32"/></name></expr>)<pos:position pos:line="157" pos:column="33"/></condition><then pos:line="157" pos:column="33">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="158" pos:column="9">endDoctypeDeclHandler<pos:position pos:line="158" pos:column="30"/></name><argument_list pos:line="158" pos:column="30">(<argument><expr><name pos:line="158" pos:column="31">handlerArg<pos:position pos:line="158" pos:column="41"/></name></expr></argument>)<pos:position pos:line="158" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="43"/></expr_stmt></block></then></if>
      <break pos:line="159" pos:column="7">break;<pos:position pos:line="159" pos:column="13"/></break>
    <case pos:line="160" pos:column="5">case <expr><name pos:line="160" pos:column="10">XML_ROLE_INSTANCE_START<pos:position pos:line="160" pos:column="33"/></name></expr>:<pos:position pos:line="160" pos:column="34"/></case>
      <expr_stmt><expr><name pos:line="161" pos:column="7">processor<pos:position pos:line="161" pos:column="16"/></name> <operator pos:line="161" pos:column="17">=<pos:position pos:line="161" pos:column="18"/></operator> <name pos:line="161" pos:column="19">contentProcessor<pos:position pos:line="161" pos:column="35"/></name></expr>;<pos:position pos:line="161" pos:column="36"/></expr_stmt>
      <return pos:line="162" pos:column="7">return <expr><call><name pos:line="162" pos:column="14">contentProcessor<pos:position pos:line="162" pos:column="30"/></name><argument_list pos:line="162" pos:column="30">(<argument><expr><name pos:line="162" pos:column="31">parser<pos:position pos:line="162" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="39">s<pos:position pos:line="162" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="42">end<pos:position pos:line="162" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="47">nextPtr<pos:position pos:line="162" pos:column="54"/></name></expr></argument>)<pos:position pos:line="162" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="56"/></return>
    <case pos:line="163" pos:column="5">case <expr><name pos:line="163" pos:column="10">XML_ROLE_ATTLIST_ELEMENT_NAME<pos:position pos:line="163" pos:column="39"/></name></expr>:<pos:position pos:line="163" pos:column="40"/></case>
      <expr_stmt><expr><name pos:line="164" pos:column="7">declElementType<pos:position pos:line="164" pos:column="22"/></name> <operator pos:line="164" pos:column="23">=<pos:position pos:line="164" pos:column="24"/></operator> <call><name pos:line="164" pos:column="25">getElementType<pos:position pos:line="164" pos:column="39"/></name><argument_list pos:line="164" pos:column="39">(<argument><expr><name pos:line="164" pos:column="40">parser<pos:position pos:line="164" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="48">enc<pos:position pos:line="164" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="53">s<pos:position pos:line="164" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="56">next<pos:position pos:line="164" pos:column="60"/></name></expr></argument>)<pos:position pos:line="164" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="62"/></expr_stmt>
      <if pos:line="165" pos:column="7">if <condition pos:line="165" pos:column="10">(<expr><operator pos:line="165" pos:column="11">!<pos:position pos:line="165" pos:column="12"/></operator><name pos:line="165" pos:column="12">declElementType<pos:position pos:line="165" pos:column="27"/></name></expr>)<pos:position pos:line="165" pos:column="28"/></condition><then pos:line="165" pos:column="28">
	<block type="pseudo"><return pos:line="166" pos:column="9">return <expr><name pos:line="166" pos:column="16">XML_ERROR_NO_MEMORY<pos:position pos:line="166" pos:column="35"/></name></expr>;<pos:position pos:line="166" pos:column="36"/></return></block></then></if>
      <break pos:line="167" pos:column="7">break;<pos:position pos:line="167" pos:column="13"/></break>
    <case pos:line="168" pos:column="5">case <expr><name pos:line="168" pos:column="10">XML_ROLE_ATTRIBUTE_NAME<pos:position pos:line="168" pos:column="33"/></name></expr>:<pos:position pos:line="168" pos:column="34"/></case>
      <expr_stmt><expr><name pos:line="169" pos:column="7">declAttributeId<pos:position pos:line="169" pos:column="22"/></name> <operator pos:line="169" pos:column="23">=<pos:position pos:line="169" pos:column="24"/></operator> <call><name pos:line="169" pos:column="25">getAttributeId<pos:position pos:line="169" pos:column="39"/></name><argument_list pos:line="169" pos:column="39">(<argument><expr><name pos:line="169" pos:column="40">parser<pos:position pos:line="169" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="48">enc<pos:position pos:line="169" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="53">s<pos:position pos:line="169" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="56">next<pos:position pos:line="169" pos:column="60"/></name></expr></argument>)<pos:position pos:line="169" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="62"/></expr_stmt>
      <if pos:line="170" pos:column="7">if <condition pos:line="170" pos:column="10">(<expr><operator pos:line="170" pos:column="11">!<pos:position pos:line="170" pos:column="12"/></operator><name pos:line="170" pos:column="12">declAttributeId<pos:position pos:line="170" pos:column="27"/></name></expr>)<pos:position pos:line="170" pos:column="28"/></condition><then pos:line="170" pos:column="28">
	<block type="pseudo"><return pos:line="171" pos:column="9">return <expr><name pos:line="171" pos:column="16">XML_ERROR_NO_MEMORY<pos:position pos:line="171" pos:column="35"/></name></expr>;<pos:position pos:line="171" pos:column="36"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="172" pos:column="7">declAttributeIsCdata<pos:position pos:line="172" pos:column="27"/></name> <operator pos:line="172" pos:column="28">=<pos:position pos:line="172" pos:column="29"/></operator> <literal type="number" pos:line="172" pos:column="30">0<pos:position pos:line="172" pos:column="31"/></literal></expr>;<pos:position pos:line="172" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name pos:line="173" pos:column="7">declAttributeType<pos:position pos:line="173" pos:column="24"/></name> <operator pos:line="173" pos:column="25">=<pos:position pos:line="173" pos:column="26"/></operator> <literal type="number" pos:line="173" pos:column="27">0<pos:position pos:line="173" pos:column="28"/></literal></expr>;<pos:position pos:line="173" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name pos:line="174" pos:column="7">declAttributeIsId<pos:position pos:line="174" pos:column="24"/></name> <operator pos:line="174" pos:column="25">=<pos:position pos:line="174" pos:column="26"/></operator> <literal type="number" pos:line="174" pos:column="27">0<pos:position pos:line="174" pos:column="28"/></literal></expr>;<pos:position pos:line="174" pos:column="29"/></expr_stmt>
      <break pos:line="175" pos:column="7">break;<pos:position pos:line="175" pos:column="13"/></break>
    <case pos:line="176" pos:column="5">case <expr><name pos:line="176" pos:column="10">XML_ROLE_ATTRIBUTE_TYPE_CDATA<pos:position pos:line="176" pos:column="39"/></name></expr>:<pos:position pos:line="176" pos:column="40"/></case>
      <expr_stmt><expr><name pos:line="177" pos:column="7">declAttributeIsCdata<pos:position pos:line="177" pos:column="27"/></name> <operator pos:line="177" pos:column="28">=<pos:position pos:line="177" pos:column="29"/></operator> <literal type="number" pos:line="177" pos:column="30">1<pos:position pos:line="177" pos:column="31"/></literal></expr>;<pos:position pos:line="177" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name pos:line="178" pos:column="7">declAttributeType<pos:position pos:line="178" pos:column="24"/></name> <operator pos:line="178" pos:column="25">=<pos:position pos:line="178" pos:column="26"/></operator> <literal type="string" pos:line="178" pos:column="27">"CDATA"<pos:position pos:line="178" pos:column="34"/></literal></expr>;<pos:position pos:line="178" pos:column="35"/></expr_stmt>
      <break pos:line="179" pos:column="7">break;<pos:position pos:line="179" pos:column="13"/></break>
    <case pos:line="180" pos:column="5">case <expr><name pos:line="180" pos:column="10">XML_ROLE_ATTRIBUTE_TYPE_ID<pos:position pos:line="180" pos:column="36"/></name></expr>:<pos:position pos:line="180" pos:column="37"/></case>
      <expr_stmt><expr><name pos:line="181" pos:column="7">declAttributeIsId<pos:position pos:line="181" pos:column="24"/></name> <operator pos:line="181" pos:column="25">=<pos:position pos:line="181" pos:column="26"/></operator> <literal type="number" pos:line="181" pos:column="27">1<pos:position pos:line="181" pos:column="28"/></literal></expr>;<pos:position pos:line="181" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name pos:line="182" pos:column="7">declAttributeType<pos:position pos:line="182" pos:column="24"/></name> <operator pos:line="182" pos:column="25">=<pos:position pos:line="182" pos:column="26"/></operator> <literal type="string" pos:line="182" pos:column="27">"ID"<pos:position pos:line="182" pos:column="31"/></literal></expr>;<pos:position pos:line="182" pos:column="32"/></expr_stmt>
      <break pos:line="183" pos:column="7">break;<pos:position pos:line="183" pos:column="13"/></break>
    <case pos:line="184" pos:column="5">case <expr><name pos:line="184" pos:column="10">XML_ROLE_ATTRIBUTE_TYPE_IDREF<pos:position pos:line="184" pos:column="39"/></name></expr>:<pos:position pos:line="184" pos:column="40"/></case>
      <expr_stmt><expr><name pos:line="185" pos:column="7">declAttributeType<pos:position pos:line="185" pos:column="24"/></name> <operator pos:line="185" pos:column="25">=<pos:position pos:line="185" pos:column="26"/></operator> <literal type="string" pos:line="185" pos:column="27">"IDREF"<pos:position pos:line="185" pos:column="34"/></literal></expr>;<pos:position pos:line="185" pos:column="35"/></expr_stmt>
      <break pos:line="186" pos:column="7">break;<pos:position pos:line="186" pos:column="13"/></break>
    <case pos:line="187" pos:column="5">case <expr><name pos:line="187" pos:column="10">XML_ROLE_ATTRIBUTE_TYPE_IDREFS<pos:position pos:line="187" pos:column="40"/></name></expr>:<pos:position pos:line="187" pos:column="41"/></case>
      <expr_stmt><expr><name pos:line="188" pos:column="7">declAttributeType<pos:position pos:line="188" pos:column="24"/></name> <operator pos:line="188" pos:column="25">=<pos:position pos:line="188" pos:column="26"/></operator> <literal type="string" pos:line="188" pos:column="27">"IDREFS"<pos:position pos:line="188" pos:column="35"/></literal></expr>;<pos:position pos:line="188" pos:column="36"/></expr_stmt>
      <break pos:line="189" pos:column="7">break;<pos:position pos:line="189" pos:column="13"/></break>
    <case pos:line="190" pos:column="5">case <expr><name pos:line="190" pos:column="10">XML_ROLE_ATTRIBUTE_TYPE_ENTITY<pos:position pos:line="190" pos:column="40"/></name></expr>:<pos:position pos:line="190" pos:column="41"/></case>
      <expr_stmt><expr><name pos:line="191" pos:column="7">declAttributeType<pos:position pos:line="191" pos:column="24"/></name> <operator pos:line="191" pos:column="25">=<pos:position pos:line="191" pos:column="26"/></operator> <literal type="string" pos:line="191" pos:column="27">"ENTITY"<pos:position pos:line="191" pos:column="35"/></literal></expr>;<pos:position pos:line="191" pos:column="36"/></expr_stmt>
      <break pos:line="192" pos:column="7">break;<pos:position pos:line="192" pos:column="13"/></break>
    <case pos:line="193" pos:column="5">case <expr><name pos:line="193" pos:column="10">XML_ROLE_ATTRIBUTE_TYPE_ENTITIES<pos:position pos:line="193" pos:column="42"/></name></expr>:<pos:position pos:line="193" pos:column="43"/></case>
      <expr_stmt><expr><name pos:line="194" pos:column="7">declAttributeType<pos:position pos:line="194" pos:column="24"/></name> <operator pos:line="194" pos:column="25">=<pos:position pos:line="194" pos:column="26"/></operator> <literal type="string" pos:line="194" pos:column="27">"ENTITIES"<pos:position pos:line="194" pos:column="37"/></literal></expr>;<pos:position pos:line="194" pos:column="38"/></expr_stmt>
      <break pos:line="195" pos:column="7">break;<pos:position pos:line="195" pos:column="13"/></break>
    <case pos:line="196" pos:column="5">case <expr><name pos:line="196" pos:column="10">XML_ROLE_ATTRIBUTE_TYPE_NMTOKEN<pos:position pos:line="196" pos:column="41"/></name></expr>:<pos:position pos:line="196" pos:column="42"/></case>
      <expr_stmt><expr><name pos:line="197" pos:column="7">declAttributeType<pos:position pos:line="197" pos:column="24"/></name> <operator pos:line="197" pos:column="25">=<pos:position pos:line="197" pos:column="26"/></operator> <literal type="string" pos:line="197" pos:column="27">"NMTOKEN"<pos:position pos:line="197" pos:column="36"/></literal></expr>;<pos:position pos:line="197" pos:column="37"/></expr_stmt>
      <break pos:line="198" pos:column="7">break;<pos:position pos:line="198" pos:column="13"/></break>
    <case pos:line="199" pos:column="5">case <expr><name pos:line="199" pos:column="10">XML_ROLE_ATTRIBUTE_TYPE_NMTOKENS<pos:position pos:line="199" pos:column="42"/></name></expr>:<pos:position pos:line="199" pos:column="43"/></case>
      <expr_stmt><expr><name pos:line="200" pos:column="7">declAttributeType<pos:position pos:line="200" pos:column="24"/></name> <operator pos:line="200" pos:column="25">=<pos:position pos:line="200" pos:column="26"/></operator> <literal type="string" pos:line="200" pos:column="27">"NMTOKENS"<pos:position pos:line="200" pos:column="37"/></literal></expr>;<pos:position pos:line="200" pos:column="38"/></expr_stmt>
      <break pos:line="201" pos:column="7">break;<pos:position pos:line="201" pos:column="13"/></break>

    <case pos:line="203" pos:column="5">case <expr><name pos:line="203" pos:column="10">XML_ROLE_ATTRIBUTE_ENUM_VALUE<pos:position pos:line="203" pos:column="39"/></name></expr>:<pos:position pos:line="203" pos:column="40"/></case>
    <case pos:line="204" pos:column="5">case <expr><name pos:line="204" pos:column="10">XML_ROLE_ATTRIBUTE_NOTATION_VALUE<pos:position pos:line="204" pos:column="43"/></name></expr>:<pos:position pos:line="204" pos:column="44"/></case>
      <if pos:line="205" pos:column="7">if <condition pos:line="205" pos:column="10">(<expr><name pos:line="205" pos:column="11">attlistDeclHandler<pos:position pos:line="205" pos:column="29"/></name></expr>)<pos:position pos:line="205" pos:column="30"/></condition><then pos:line="205" pos:column="30">
      <block pos:line="206" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="207" pos:column="9">char<pos:position pos:line="207" pos:column="13"/></name> <modifier pos:line="207" pos:column="14">*<pos:position pos:line="207" pos:column="15"/></modifier></type><name pos:line="207" pos:column="15">prefix<pos:position pos:line="207" pos:column="21"/></name></decl>;<pos:position pos:line="207" pos:column="22"/></decl_stmt>
	<if pos:line="208" pos:column="9">if <condition pos:line="208" pos:column="12">(<expr><name pos:line="208" pos:column="13">declAttributeType<pos:position pos:line="208" pos:column="30"/></name></expr>)<pos:position pos:line="208" pos:column="31"/></condition><then pos:line="208" pos:column="31"> <block pos:line="208" pos:column="32">{
	  <expr_stmt><expr><name pos:line="209" pos:column="11">prefix<pos:position pos:line="209" pos:column="17"/></name> <operator pos:line="209" pos:column="18">=<pos:position pos:line="209" pos:column="19"/></operator> <literal type="string" pos:line="209" pos:column="20">"|"<pos:position pos:line="209" pos:column="23"/></literal></expr>;<pos:position pos:line="209" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="210" pos:column="10"/></block></then>
	<else pos:line="211" pos:column="9">else <block pos:line="211" pos:column="14">{
	  <expr_stmt><expr><name pos:line="212" pos:column="11">prefix<pos:position pos:line="212" pos:column="17"/></name> <operator pos:line="212" pos:column="18">=<pos:position pos:line="212" pos:column="19"/></operator> <operator pos:line="212" pos:column="20">(<pos:position pos:line="212" pos:column="21"/></operator><ternary><condition><expr><name pos:line="212" pos:column="21">role<pos:position pos:line="212" pos:column="25"/></name> <operator pos:line="212" pos:column="26">==<pos:position pos:line="212" pos:column="28"/></operator> <name pos:line="212" pos:column="29">XML_ROLE_ATTRIBUTE_NOTATION_VALUE<pos:position pos:line="212" pos:column="62"/></name></expr>
		    ?<pos:position pos:line="213" pos:column="22"/></condition><then pos:line="213" pos:column="22"> <expr><literal type="string" pos:line="213" pos:column="23">"NOTATION("<pos:position pos:line="213" pos:column="34"/></literal></expr>
		    <pos:position pos:line="214" pos:column="7"/></then><else pos:line="214" pos:column="21">: <expr><literal type="string" pos:line="214" pos:column="23">"("<pos:position pos:line="214" pos:column="26"/></literal></expr></else></ternary><operator pos:line="214" pos:column="26">)<pos:position pos:line="214" pos:column="27"/></operator></expr>;<pos:position pos:line="214" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="215" pos:column="10"/></block></else></if>
	<if pos:line="216" pos:column="9">if <condition pos:line="216" pos:column="12">(<expr><operator pos:line="216" pos:column="13">!<pos:position pos:line="216" pos:column="14"/></operator> <call><name pos:line="216" pos:column="15">poolAppendString<pos:position pos:line="216" pos:column="31"/></name><argument_list pos:line="216" pos:column="31">(<argument><expr><operator pos:line="216" pos:column="32">&amp;<pos:position pos:line="216" pos:column="37"/></operator><name pos:line="216" pos:column="33">tempPool<pos:position pos:line="216" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="43">prefix<pos:position pos:line="216" pos:column="49"/></name></expr></argument>)<pos:position pos:line="216" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="216" pos:column="51"/></condition><then pos:line="216" pos:column="51">
	  <block type="pseudo"><return pos:line="217" pos:column="11">return <expr><name pos:line="217" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="217" pos:column="37"/></name></expr>;<pos:position pos:line="217" pos:column="38"/></return></block></then></if>
	<if pos:line="218" pos:column="9">if <condition pos:line="218" pos:column="12">(<expr><operator pos:line="218" pos:column="13">!<pos:position pos:line="218" pos:column="14"/></operator> <call><name pos:line="218" pos:column="15">poolAppend<pos:position pos:line="218" pos:column="25"/></name><argument_list pos:line="218" pos:column="25">(<argument><expr><operator pos:line="218" pos:column="26">&amp;<pos:position pos:line="218" pos:column="31"/></operator><name pos:line="218" pos:column="27">tempPool<pos:position pos:line="218" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="37">enc<pos:position pos:line="218" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="42">s<pos:position pos:line="218" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="45">next<pos:position pos:line="218" pos:column="49"/></name></expr></argument>)<pos:position pos:line="218" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="218" pos:column="51"/></condition><then pos:line="218" pos:column="51">
	  <block type="pseudo"><return pos:line="219" pos:column="11">return <expr><name pos:line="219" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="219" pos:column="37"/></name></expr>;<pos:position pos:line="219" pos:column="38"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="220" pos:column="9">declAttributeType<pos:position pos:line="220" pos:column="26"/></name> <operator pos:line="220" pos:column="27">=<pos:position pos:line="220" pos:column="28"/></operator> <name><name pos:line="220" pos:column="29">tempPool<pos:position pos:line="220" pos:column="37"/></name><operator pos:line="220" pos:column="37">.<pos:position pos:line="220" pos:column="38"/></operator><name pos:line="220" pos:column="38">start<pos:position pos:line="220" pos:column="43"/></name></name></expr>;<pos:position pos:line="220" pos:column="44"/></expr_stmt>
      }<pos:position pos:line="221" pos:column="8"/></block></then></if>
      <break pos:line="222" pos:column="7">break;<pos:position pos:line="222" pos:column="13"/></break>
    <case pos:line="223" pos:column="5">case <expr><name pos:line="223" pos:column="10">XML_ROLE_IMPLIED_ATTRIBUTE_VALUE<pos:position pos:line="223" pos:column="42"/></name></expr>:<pos:position pos:line="223" pos:column="43"/></case>
    <case pos:line="224" pos:column="5">case <expr><name pos:line="224" pos:column="10">XML_ROLE_REQUIRED_ATTRIBUTE_VALUE<pos:position pos:line="224" pos:column="43"/></name></expr>:<pos:position pos:line="224" pos:column="44"/></case>
      <if pos:line="225" pos:column="7">if <condition pos:line="225" pos:column="10">(<expr><name><name pos:line="225" pos:column="11">dtd<pos:position pos:line="225" pos:column="14"/></name><operator pos:line="225" pos:column="14">.<pos:position pos:line="225" pos:column="15"/></operator><name pos:line="225" pos:column="15">complete<pos:position pos:line="225" pos:column="23"/></name></name>
	  <operator pos:line="226" pos:column="11">&amp;&amp;<pos:position pos:line="226" pos:column="21"/></operator> <operator pos:line="226" pos:column="14">!<pos:position pos:line="226" pos:column="15"/></operator><call><name pos:line="226" pos:column="15">defineAttribute<pos:position pos:line="226" pos:column="30"/></name><argument_list pos:line="226" pos:column="30">(<argument><expr><name pos:line="226" pos:column="31">declElementType<pos:position pos:line="226" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="48">declAttributeId<pos:position pos:line="226" pos:column="63"/></name></expr></argument>,
			      <argument><expr><name pos:line="227" pos:column="31">declAttributeIsCdata<pos:position pos:line="227" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="227" pos:column="53">declAttributeIsId<pos:position pos:line="227" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="227" pos:column="72">0<pos:position pos:line="227" pos:column="73"/></literal></expr></argument>,
			      <argument><expr><name pos:line="228" pos:column="31">parser<pos:position pos:line="228" pos:column="37"/></name></expr></argument>)<pos:position pos:line="228" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="228" pos:column="39"/></condition><then pos:line="228" pos:column="39">
	<block type="pseudo"><return pos:line="229" pos:column="9">return <expr><name pos:line="229" pos:column="16">XML_ERROR_NO_MEMORY<pos:position pos:line="229" pos:column="35"/></name></expr>;<pos:position pos:line="229" pos:column="36"/></return></block></then></if>
      <if pos:line="230" pos:column="7">if <condition pos:line="230" pos:column="10">(<expr><name pos:line="230" pos:column="11">attlistDeclHandler<pos:position pos:line="230" pos:column="29"/></name> <operator pos:line="230" pos:column="30">&amp;&amp;<pos:position pos:line="230" pos:column="40"/></operator> <name pos:line="230" pos:column="33">declAttributeType<pos:position pos:line="230" pos:column="50"/></name></expr>)<pos:position pos:line="230" pos:column="51"/></condition><then pos:line="230" pos:column="51"> <block pos:line="230" pos:column="52">{
	<if pos:line="231" pos:column="9">if <condition pos:line="231" pos:column="12">(<expr><operator pos:line="231" pos:column="13">*<pos:position pos:line="231" pos:column="14"/></operator><name pos:line="231" pos:column="14">declAttributeType<pos:position pos:line="231" pos:column="31"/></name> <operator pos:line="231" pos:column="32">==<pos:position pos:line="231" pos:column="34"/></operator> <literal type="char" pos:line="231" pos:column="35">'('<pos:position pos:line="231" pos:column="38"/></literal>
	    <operator pos:line="232" pos:column="13">||<pos:position pos:line="232" pos:column="15"/></operator> <operator pos:line="232" pos:column="16">(<pos:position pos:line="232" pos:column="17"/></operator><operator pos:line="232" pos:column="17">*<pos:position pos:line="232" pos:column="18"/></operator><name pos:line="232" pos:column="18">declAttributeType<pos:position pos:line="232" pos:column="35"/></name> <operator pos:line="232" pos:column="36">==<pos:position pos:line="232" pos:column="38"/></operator> <literal type="char" pos:line="232" pos:column="39">'N'<pos:position pos:line="232" pos:column="42"/></literal> <operator pos:line="232" pos:column="43">&amp;&amp;<pos:position pos:line="232" pos:column="53"/></operator> <name><name pos:line="232" pos:column="46">declAttributeType<pos:position pos:line="232" pos:column="63"/></name><index pos:line="232" pos:column="63">[<expr><literal type="number" pos:line="232" pos:column="64">1<pos:position pos:line="232" pos:column="65"/></literal></expr>]<pos:position pos:line="232" pos:column="66"/></index></name> <operator pos:line="232" pos:column="67">==<pos:position pos:line="232" pos:column="69"/></operator> <literal type="char" pos:line="232" pos:column="70">'O'<pos:position pos:line="232" pos:column="73"/></literal><operator pos:line="232" pos:column="73">)<pos:position pos:line="232" pos:column="74"/></operator></expr>)<pos:position pos:line="232" pos:column="75"/></condition><then pos:line="232" pos:column="75"> <block pos:line="232" pos:column="76">{
	  <comment type="block" pos:line="233" pos:column="11">/* Enumerated or Notation type */</comment>
	  <if pos:line="234" pos:column="11">if <condition pos:line="234" pos:column="14">(<expr><operator pos:line="234" pos:column="15">!<pos:position pos:line="234" pos:column="16"/></operator> <call><name pos:line="234" pos:column="17">poolAppendChar<pos:position pos:line="234" pos:column="31"/></name><argument_list pos:line="234" pos:column="31">(<argument><expr><operator pos:line="234" pos:column="32">&amp;<pos:position pos:line="234" pos:column="37"/></operator><name pos:line="234" pos:column="33">tempPool<pos:position pos:line="234" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="234" pos:column="43">')'<pos:position pos:line="234" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="234" pos:column="47"/></argument_list></call>
	      <operator pos:line="235" pos:column="15">||<pos:position pos:line="235" pos:column="17"/></operator> <operator pos:line="235" pos:column="18">!<pos:position pos:line="235" pos:column="19"/></operator> <call><name pos:line="235" pos:column="20">poolAppendChar<pos:position pos:line="235" pos:column="34"/></name><argument_list pos:line="235" pos:column="34">(<argument><expr><operator pos:line="235" pos:column="35">&amp;<pos:position pos:line="235" pos:column="40"/></operator><name pos:line="235" pos:column="36">tempPool<pos:position pos:line="235" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="235" pos:column="46">'\0'<pos:position pos:line="235" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="235" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="235" pos:column="52"/></condition><then pos:line="235" pos:column="52">
	    <block type="pseudo"><return pos:line="236" pos:column="13">return <expr><name pos:line="236" pos:column="20">XML_ERROR_NO_MEMORY<pos:position pos:line="236" pos:column="39"/></name></expr>;<pos:position pos:line="236" pos:column="40"/></return></block></then></if>
	  <expr_stmt><expr><name pos:line="237" pos:column="11">declAttributeType<pos:position pos:line="237" pos:column="28"/></name> <operator pos:line="237" pos:column="29">=<pos:position pos:line="237" pos:column="30"/></operator> <name><name pos:line="237" pos:column="31">tempPool<pos:position pos:line="237" pos:column="39"/></name><operator pos:line="237" pos:column="39">.<pos:position pos:line="237" pos:column="40"/></operator><name pos:line="237" pos:column="40">start<pos:position pos:line="237" pos:column="45"/></name></name></expr>;<pos:position pos:line="237" pos:column="46"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="238" pos:column="11">poolFinish<pos:position pos:line="238" pos:column="21"/></name><argument_list pos:line="238" pos:column="21">(<argument><expr><operator pos:line="238" pos:column="22">&amp;<pos:position pos:line="238" pos:column="27"/></operator><name pos:line="238" pos:column="23">tempPool<pos:position pos:line="238" pos:column="31"/></name></expr></argument>)<pos:position pos:line="238" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="239" pos:column="10"/></block></then></if>
	<expr_stmt><expr><operator pos:line="240" pos:column="9">*<pos:position pos:line="240" pos:column="10"/></operator><name pos:line="240" pos:column="10">eventEndPP<pos:position pos:line="240" pos:column="20"/></name> <operator pos:line="240" pos:column="21">=<pos:position pos:line="240" pos:column="22"/></operator> <name pos:line="240" pos:column="23">s<pos:position pos:line="240" pos:column="24"/></name></expr>;<pos:position pos:line="240" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="241" pos:column="9">attlistDeclHandler<pos:position pos:line="241" pos:column="27"/></name><argument_list pos:line="241" pos:column="27">(<argument><expr><name pos:line="241" pos:column="28">handlerArg<pos:position pos:line="241" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="241" pos:column="40">declElementType<pos:position pos:line="241" pos:column="55"/></name><operator pos:line="241" pos:column="55">-&gt;<pos:position pos:line="241" pos:column="60"/></operator><name pos:line="241" pos:column="57">name<pos:position pos:line="241" pos:column="61"/></name></name></expr></argument>,
			   <argument><expr><name><name pos:line="242" pos:column="28">declAttributeId<pos:position pos:line="242" pos:column="43"/></name><operator pos:line="242" pos:column="43">-&gt;<pos:position pos:line="242" pos:column="48"/></operator><name pos:line="242" pos:column="45">name<pos:position pos:line="242" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="51">declAttributeType<pos:position pos:line="242" pos:column="68"/></name></expr></argument>,
			   <argument><expr><literal type="number" pos:line="243" pos:column="28">0<pos:position pos:line="243" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="243" pos:column="31">role<pos:position pos:line="243" pos:column="35"/></name> <operator pos:line="243" pos:column="36">==<pos:position pos:line="243" pos:column="38"/></operator> <name pos:line="243" pos:column="39">XML_ROLE_REQUIRED_ATTRIBUTE_VALUE<pos:position pos:line="243" pos:column="72"/></name></expr></argument>)<pos:position pos:line="243" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="244" pos:column="9">poolClear<pos:position pos:line="244" pos:column="18"/></name><argument_list pos:line="244" pos:column="18">(<argument><expr><operator pos:line="244" pos:column="19">&amp;<pos:position pos:line="244" pos:column="24"/></operator><name pos:line="244" pos:column="20">tempPool<pos:position pos:line="244" pos:column="28"/></name></expr></argument>)<pos:position pos:line="244" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="245" pos:column="8"/></block></then></if>
      <break pos:line="246" pos:column="7">break;<pos:position pos:line="246" pos:column="13"/></break>
    <case pos:line="247" pos:column="5">case <expr><name pos:line="247" pos:column="10">XML_ROLE_DEFAULT_ATTRIBUTE_VALUE<pos:position pos:line="247" pos:column="42"/></name></expr>:<pos:position pos:line="247" pos:column="43"/></case>
    <case pos:line="248" pos:column="5">case <expr><name pos:line="248" pos:column="10">XML_ROLE_FIXED_ATTRIBUTE_VALUE<pos:position pos:line="248" pos:column="40"/></name></expr>:<pos:position pos:line="248" pos:column="41"/></case>
      <block pos:line="249" pos:column="7">{
	<decl_stmt><decl><type><specifier pos:line="250" pos:column="9">const<pos:position pos:line="250" pos:column="14"/></specifier> <name pos:line="250" pos:column="15">XML_Char<pos:position pos:line="250" pos:column="23"/></name> <modifier pos:line="250" pos:column="24">*<pos:position pos:line="250" pos:column="25"/></modifier></type><name pos:line="250" pos:column="25">attVal<pos:position pos:line="250" pos:column="31"/></name></decl>;<pos:position pos:line="250" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="251" pos:column="9">enum<pos:position pos:line="251" pos:column="13"/></name> <name pos:line="251" pos:column="14">XML_Error<pos:position pos:line="251" pos:column="23"/></name></name></type> <name pos:line="251" pos:column="24">result<pos:position pos:line="251" pos:column="30"/></name>
	  <init pos:line="252" pos:column="11">= <expr><call><name pos:line="252" pos:column="13">storeAttributeValue<pos:position pos:line="252" pos:column="32"/></name><argument_list pos:line="252" pos:column="32">(<argument><expr><name pos:line="252" pos:column="33">parser<pos:position pos:line="252" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="252" pos:column="41">enc<pos:position pos:line="252" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="252" pos:column="46">declAttributeIsCdata<pos:position pos:line="252" pos:column="66"/></name></expr></argument>,
				<argument><expr><name pos:line="253" pos:column="33">s<pos:position pos:line="253" pos:column="34"/></name> <operator pos:line="253" pos:column="35">+<pos:position pos:line="253" pos:column="36"/></operator> <name><name pos:line="253" pos:column="37">enc<pos:position pos:line="253" pos:column="40"/></name><operator pos:line="253" pos:column="40">-&gt;<pos:position pos:line="253" pos:column="45"/></operator><name pos:line="253" pos:column="42">minBytesPerChar<pos:position pos:line="253" pos:column="57"/></name></name></expr></argument>,
			        <argument><expr><name pos:line="254" pos:column="33">next<pos:position pos:line="254" pos:column="37"/></name> <operator pos:line="254" pos:column="38">-<pos:position pos:line="254" pos:column="39"/></operator> <name><name pos:line="254" pos:column="40">enc<pos:position pos:line="254" pos:column="43"/></name><operator pos:line="254" pos:column="43">-&gt;<pos:position pos:line="254" pos:column="48"/></operator><name pos:line="254" pos:column="45">minBytesPerChar<pos:position pos:line="254" pos:column="60"/></name></name></expr></argument>,
			        <argument><expr><operator pos:line="255" pos:column="33">&amp;<pos:position pos:line="255" pos:column="38"/></operator><name><name pos:line="255" pos:column="34">dtd<pos:position pos:line="255" pos:column="37"/></name><operator pos:line="255" pos:column="37">.<pos:position pos:line="255" pos:column="38"/></operator><name pos:line="255" pos:column="38">pool<pos:position pos:line="255" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="255" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="255" pos:column="44"/></decl_stmt>
	<if pos:line="256" pos:column="9">if <condition pos:line="256" pos:column="12">(<expr><name pos:line="256" pos:column="13">result<pos:position pos:line="256" pos:column="19"/></name></expr>)<pos:position pos:line="256" pos:column="20"/></condition><then pos:line="256" pos:column="20">
	  <block type="pseudo"><return pos:line="257" pos:column="11">return <expr><name pos:line="257" pos:column="18">result<pos:position pos:line="257" pos:column="24"/></name></expr>;<pos:position pos:line="257" pos:column="25"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="258" pos:column="9">attVal<pos:position pos:line="258" pos:column="15"/></name> <operator pos:line="258" pos:column="16">=<pos:position pos:line="258" pos:column="17"/></operator> <call><name pos:line="258" pos:column="18">poolStart<pos:position pos:line="258" pos:column="27"/></name><argument_list pos:line="258" pos:column="27">(<argument><expr><operator pos:line="258" pos:column="28">&amp;<pos:position pos:line="258" pos:column="33"/></operator><name><name pos:line="258" pos:column="29">dtd<pos:position pos:line="258" pos:column="32"/></name><operator pos:line="258" pos:column="32">.<pos:position pos:line="258" pos:column="33"/></operator><name pos:line="258" pos:column="33">pool<pos:position pos:line="258" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="258" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="259" pos:column="9">poolFinish<pos:position pos:line="259" pos:column="19"/></name><argument_list pos:line="259" pos:column="19">(<argument><expr><operator pos:line="259" pos:column="20">&amp;<pos:position pos:line="259" pos:column="25"/></operator><name><name pos:line="259" pos:column="21">dtd<pos:position pos:line="259" pos:column="24"/></name><operator pos:line="259" pos:column="24">.<pos:position pos:line="259" pos:column="25"/></operator><name pos:line="259" pos:column="25">pool<pos:position pos:line="259" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="259" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="31"/></expr_stmt>
	<if pos:line="260" pos:column="9">if <condition pos:line="260" pos:column="12">(<expr><name><name pos:line="260" pos:column="13">dtd<pos:position pos:line="260" pos:column="16"/></name><operator pos:line="260" pos:column="16">.<pos:position pos:line="260" pos:column="17"/></operator><name pos:line="260" pos:column="17">complete<pos:position pos:line="260" pos:column="25"/></name></name>
	    <comment type="block" pos:line="261" pos:column="13">/* ID attributes aren't allowed to have a default */</comment>
	    <operator pos:line="262" pos:column="13">&amp;&amp;<pos:position pos:line="262" pos:column="23"/></operator> <operator pos:line="262" pos:column="16">!<pos:position pos:line="262" pos:column="17"/></operator><call><name pos:line="262" pos:column="17">defineAttribute<pos:position pos:line="262" pos:column="32"/></name><argument_list pos:line="262" pos:column="32">(<argument><expr><name pos:line="262" pos:column="33">declElementType<pos:position pos:line="262" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="262" pos:column="50">declAttributeId<pos:position pos:line="262" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="262" pos:column="67">declAttributeIsCdata<pos:position pos:line="262" pos:column="87"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="262" pos:column="89">0<pos:position pos:line="262" pos:column="90"/></literal></expr></argument>, <argument><expr><name pos:line="262" pos:column="92">attVal<pos:position pos:line="262" pos:column="98"/></name></expr></argument>, <argument><expr><name pos:line="262" pos:column="100">parser<pos:position pos:line="262" pos:column="106"/></name></expr></argument>)<pos:position pos:line="262" pos:column="107"/></argument_list></call></expr>)<pos:position pos:line="262" pos:column="108"/></condition><then pos:line="262" pos:column="108">
	  <block type="pseudo"><return pos:line="263" pos:column="11">return <expr><name pos:line="263" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="263" pos:column="37"/></name></expr>;<pos:position pos:line="263" pos:column="38"/></return></block></then></if>
	<if pos:line="264" pos:column="9">if <condition pos:line="264" pos:column="12">(<expr><name pos:line="264" pos:column="13">attlistDeclHandler<pos:position pos:line="264" pos:column="31"/></name> <operator pos:line="264" pos:column="32">&amp;&amp;<pos:position pos:line="264" pos:column="42"/></operator> <name pos:line="264" pos:column="35">declAttributeType<pos:position pos:line="264" pos:column="52"/></name></expr>)<pos:position pos:line="264" pos:column="53"/></condition><then pos:line="264" pos:column="53"> <block pos:line="264" pos:column="54">{
	  <if pos:line="265" pos:column="11">if <condition pos:line="265" pos:column="14">(<expr><operator pos:line="265" pos:column="15">*<pos:position pos:line="265" pos:column="16"/></operator><name pos:line="265" pos:column="16">declAttributeType<pos:position pos:line="265" pos:column="33"/></name> <operator pos:line="265" pos:column="34">==<pos:position pos:line="265" pos:column="36"/></operator> <literal type="char" pos:line="265" pos:column="37">'('<pos:position pos:line="265" pos:column="40"/></literal>
	      <operator pos:line="266" pos:column="15">||<pos:position pos:line="266" pos:column="17"/></operator> <operator pos:line="266" pos:column="18">(<pos:position pos:line="266" pos:column="19"/></operator><operator pos:line="266" pos:column="19">*<pos:position pos:line="266" pos:column="20"/></operator><name pos:line="266" pos:column="20">declAttributeType<pos:position pos:line="266" pos:column="37"/></name> <operator pos:line="266" pos:column="38">==<pos:position pos:line="266" pos:column="40"/></operator> <literal type="char" pos:line="266" pos:column="41">'N'<pos:position pos:line="266" pos:column="44"/></literal> <operator pos:line="266" pos:column="45">&amp;&amp;<pos:position pos:line="266" pos:column="55"/></operator> <name><name pos:line="266" pos:column="48">declAttributeType<pos:position pos:line="266" pos:column="65"/></name><index pos:line="266" pos:column="65">[<expr><literal type="number" pos:line="266" pos:column="66">1<pos:position pos:line="266" pos:column="67"/></literal></expr>]<pos:position pos:line="266" pos:column="68"/></index></name> <operator pos:line="266" pos:column="69">==<pos:position pos:line="266" pos:column="71"/></operator> <literal type="char" pos:line="266" pos:column="72">'O'<pos:position pos:line="266" pos:column="75"/></literal><operator pos:line="266" pos:column="75">)<pos:position pos:line="266" pos:column="76"/></operator></expr>)<pos:position pos:line="266" pos:column="77"/></condition><then pos:line="266" pos:column="77"> <block pos:line="266" pos:column="78">{
	    <comment type="block" pos:line="267" pos:column="13">/* Enumerated or Notation type */</comment>
	    <if pos:line="268" pos:column="13">if <condition pos:line="268" pos:column="16">(<expr><operator pos:line="268" pos:column="17">!<pos:position pos:line="268" pos:column="18"/></operator> <call><name pos:line="268" pos:column="19">poolAppendChar<pos:position pos:line="268" pos:column="33"/></name><argument_list pos:line="268" pos:column="33">(<argument><expr><operator pos:line="268" pos:column="34">&amp;<pos:position pos:line="268" pos:column="39"/></operator><name pos:line="268" pos:column="35">tempPool<pos:position pos:line="268" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="268" pos:column="45">')'<pos:position pos:line="268" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="268" pos:column="49"/></argument_list></call>
		<operator pos:line="269" pos:column="17">||<pos:position pos:line="269" pos:column="19"/></operator> <operator pos:line="269" pos:column="20">!<pos:position pos:line="269" pos:column="21"/></operator> <call><name pos:line="269" pos:column="22">poolAppendChar<pos:position pos:line="269" pos:column="36"/></name><argument_list pos:line="269" pos:column="36">(<argument><expr><operator pos:line="269" pos:column="37">&amp;<pos:position pos:line="269" pos:column="42"/></operator><name pos:line="269" pos:column="38">tempPool<pos:position pos:line="269" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="269" pos:column="48">'\0'<pos:position pos:line="269" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="269" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="269" pos:column="54"/></condition><then pos:line="269" pos:column="54">
	      <block type="pseudo"><return pos:line="270" pos:column="15">return <expr><name pos:line="270" pos:column="22">XML_ERROR_NO_MEMORY<pos:position pos:line="270" pos:column="41"/></name></expr>;<pos:position pos:line="270" pos:column="42"/></return></block></then></if>
	    <expr_stmt><expr><name pos:line="271" pos:column="13">declAttributeType<pos:position pos:line="271" pos:column="30"/></name> <operator pos:line="271" pos:column="31">=<pos:position pos:line="271" pos:column="32"/></operator> <name><name pos:line="271" pos:column="33">tempPool<pos:position pos:line="271" pos:column="41"/></name><operator pos:line="271" pos:column="41">.<pos:position pos:line="271" pos:column="42"/></operator><name pos:line="271" pos:column="42">start<pos:position pos:line="271" pos:column="47"/></name></name></expr>;<pos:position pos:line="271" pos:column="48"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="272" pos:column="13">poolFinish<pos:position pos:line="272" pos:column="23"/></name><argument_list pos:line="272" pos:column="23">(<argument><expr><operator pos:line="272" pos:column="24">&amp;<pos:position pos:line="272" pos:column="29"/></operator><name pos:line="272" pos:column="25">tempPool<pos:position pos:line="272" pos:column="33"/></name></expr></argument>)<pos:position pos:line="272" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="35"/></expr_stmt>
	  }<pos:position pos:line="273" pos:column="12"/></block></then></if>
	  <expr_stmt><expr><operator pos:line="274" pos:column="11">*<pos:position pos:line="274" pos:column="12"/></operator><name pos:line="274" pos:column="12">eventEndPP<pos:position pos:line="274" pos:column="22"/></name> <operator pos:line="274" pos:column="23">=<pos:position pos:line="274" pos:column="24"/></operator> <name pos:line="274" pos:column="25">s<pos:position pos:line="274" pos:column="26"/></name></expr>;<pos:position pos:line="274" pos:column="27"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="275" pos:column="11">attlistDeclHandler<pos:position pos:line="275" pos:column="29"/></name><argument_list pos:line="275" pos:column="29">(<argument><expr><name pos:line="275" pos:column="30">handlerArg<pos:position pos:line="275" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="275" pos:column="42">declElementType<pos:position pos:line="275" pos:column="57"/></name><operator pos:line="275" pos:column="57">-&gt;<pos:position pos:line="275" pos:column="62"/></operator><name pos:line="275" pos:column="59">name<pos:position pos:line="275" pos:column="63"/></name></name></expr></argument>,
			     <argument><expr><name><name pos:line="276" pos:column="30">declAttributeId<pos:position pos:line="276" pos:column="45"/></name><operator pos:line="276" pos:column="45">-&gt;<pos:position pos:line="276" pos:column="50"/></operator><name pos:line="276" pos:column="47">name<pos:position pos:line="276" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="276" pos:column="53">declAttributeType<pos:position pos:line="276" pos:column="70"/></name></expr></argument>,
			     <argument><expr><name pos:line="277" pos:column="30">attVal<pos:position pos:line="277" pos:column="36"/></name></expr></argument>,
			     <argument><expr><name pos:line="278" pos:column="30">role<pos:position pos:line="278" pos:column="34"/></name> <operator pos:line="278" pos:column="35">==<pos:position pos:line="278" pos:column="37"/></operator> <name pos:line="278" pos:column="38">XML_ROLE_FIXED_ATTRIBUTE_VALUE<pos:position pos:line="278" pos:column="68"/></name></expr></argument>)<pos:position pos:line="278" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="70"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="279" pos:column="11">poolClear<pos:position pos:line="279" pos:column="20"/></name><argument_list pos:line="279" pos:column="20">(<argument><expr><operator pos:line="279" pos:column="21">&amp;<pos:position pos:line="279" pos:column="26"/></operator><name pos:line="279" pos:column="22">tempPool<pos:position pos:line="279" pos:column="30"/></name></expr></argument>)<pos:position pos:line="279" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="280" pos:column="10"/></block></then></if>
	<break pos:line="281" pos:column="9">break;<pos:position pos:line="281" pos:column="15"/></break>
      }<pos:position pos:line="282" pos:column="8"/></block>
    <case pos:line="283" pos:column="5">case <expr><name pos:line="283" pos:column="10">XML_ROLE_ENTITY_VALUE<pos:position pos:line="283" pos:column="31"/></name></expr>:<pos:position pos:line="283" pos:column="32"/></case>
      <block pos:line="284" pos:column="7">{
	<decl_stmt><decl><type><name><name pos:line="285" pos:column="9">enum<pos:position pos:line="285" pos:column="13"/></name> <name pos:line="285" pos:column="14">XML_Error<pos:position pos:line="285" pos:column="23"/></name></name></type> <name pos:line="285" pos:column="24">result<pos:position pos:line="285" pos:column="30"/></name> <init pos:line="285" pos:column="31">= <expr><call><name pos:line="285" pos:column="33">storeEntityValue<pos:position pos:line="285" pos:column="49"/></name><argument_list pos:line="285" pos:column="49">(<argument><expr><name pos:line="285" pos:column="50">parser<pos:position pos:line="285" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="58">enc<pos:position pos:line="285" pos:column="61"/></name></expr></argument>,
						 <argument><expr><name pos:line="286" pos:column="50">s<pos:position pos:line="286" pos:column="51"/></name> <operator pos:line="286" pos:column="52">+<pos:position pos:line="286" pos:column="53"/></operator> <name><name pos:line="286" pos:column="54">enc<pos:position pos:line="286" pos:column="57"/></name><operator pos:line="286" pos:column="57">-&gt;<pos:position pos:line="286" pos:column="62"/></operator><name pos:line="286" pos:column="59">minBytesPerChar<pos:position pos:line="286" pos:column="74"/></name></name></expr></argument>,
						 <argument><expr><name pos:line="287" pos:column="50">next<pos:position pos:line="287" pos:column="54"/></name> <operator pos:line="287" pos:column="55">-<pos:position pos:line="287" pos:column="56"/></operator> <name><name pos:line="287" pos:column="57">enc<pos:position pos:line="287" pos:column="60"/></name><operator pos:line="287" pos:column="60">-&gt;<pos:position pos:line="287" pos:column="65"/></operator><name pos:line="287" pos:column="62">minBytesPerChar<pos:position pos:line="287" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="287" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="287" pos:column="79"/></decl_stmt>
	<if pos:line="288" pos:column="9">if <condition pos:line="288" pos:column="12">(<expr><name pos:line="288" pos:column="13">declEntity<pos:position pos:line="288" pos:column="23"/></name></expr>)<pos:position pos:line="288" pos:column="24"/></condition><then pos:line="288" pos:column="24"> <block pos:line="288" pos:column="25">{
	  <expr_stmt><expr><name><name pos:line="289" pos:column="11">declEntity<pos:position pos:line="289" pos:column="21"/></name><operator pos:line="289" pos:column="21">-&gt;<pos:position pos:line="289" pos:column="26"/></operator><name pos:line="289" pos:column="23">textPtr<pos:position pos:line="289" pos:column="30"/></name></name> <operator pos:line="289" pos:column="31">=<pos:position pos:line="289" pos:column="32"/></operator> <call><name pos:line="289" pos:column="33">poolStart<pos:position pos:line="289" pos:column="42"/></name><argument_list pos:line="289" pos:column="42">(<argument><expr><operator pos:line="289" pos:column="43">&amp;<pos:position pos:line="289" pos:column="48"/></operator><name><name pos:line="289" pos:column="44">dtd<pos:position pos:line="289" pos:column="47"/></name><operator pos:line="289" pos:column="47">.<pos:position pos:line="289" pos:column="48"/></operator><name pos:line="289" pos:column="48">pool<pos:position pos:line="289" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="289" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="54"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="290" pos:column="11">declEntity<pos:position pos:line="290" pos:column="21"/></name><operator pos:line="290" pos:column="21">-&gt;<pos:position pos:line="290" pos:column="26"/></operator><name pos:line="290" pos:column="23">textLen<pos:position pos:line="290" pos:column="30"/></name></name> <operator pos:line="290" pos:column="31">=<pos:position pos:line="290" pos:column="32"/></operator> <call><name pos:line="290" pos:column="33">poolLength<pos:position pos:line="290" pos:column="43"/></name><argument_list pos:line="290" pos:column="43">(<argument><expr><operator pos:line="290" pos:column="44">&amp;<pos:position pos:line="290" pos:column="49"/></operator><name><name pos:line="290" pos:column="45">dtd<pos:position pos:line="290" pos:column="48"/></name><operator pos:line="290" pos:column="48">.<pos:position pos:line="290" pos:column="49"/></operator><name pos:line="290" pos:column="49">pool<pos:position pos:line="290" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="290" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="55"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="291" pos:column="11">poolFinish<pos:position pos:line="291" pos:column="21"/></name><argument_list pos:line="291" pos:column="21">(<argument><expr><operator pos:line="291" pos:column="22">&amp;<pos:position pos:line="291" pos:column="27"/></operator><name><name pos:line="291" pos:column="23">dtd<pos:position pos:line="291" pos:column="26"/></name><operator pos:line="291" pos:column="26">.<pos:position pos:line="291" pos:column="27"/></operator><name pos:line="291" pos:column="27">pool<pos:position pos:line="291" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="291" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="33"/></expr_stmt>
	  <if pos:line="292" pos:column="11">if <condition pos:line="292" pos:column="14">(<expr><name pos:line="292" pos:column="15">entityDeclHandler<pos:position pos:line="292" pos:column="32"/></name></expr>)<pos:position pos:line="292" pos:column="33"/></condition><then pos:line="292" pos:column="33"> <block pos:line="292" pos:column="34">{
	    <expr_stmt><expr><operator pos:line="293" pos:column="13">*<pos:position pos:line="293" pos:column="14"/></operator><name pos:line="293" pos:column="14">eventEndPP<pos:position pos:line="293" pos:column="24"/></name> <operator pos:line="293" pos:column="25">=<pos:position pos:line="293" pos:column="26"/></operator> <name pos:line="293" pos:column="27">s<pos:position pos:line="293" pos:column="28"/></name></expr>;<pos:position pos:line="293" pos:column="29"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="294" pos:column="13">entityDeclHandler<pos:position pos:line="294" pos:column="30"/></name><argument_list pos:line="294" pos:column="30">(<argument><expr><name pos:line="294" pos:column="31">handlerArg<pos:position pos:line="294" pos:column="41"/></name></expr></argument>,
			      <argument><expr><name><name pos:line="295" pos:column="31">declEntity<pos:position pos:line="295" pos:column="41"/></name><operator pos:line="295" pos:column="41">-&gt;<pos:position pos:line="295" pos:column="46"/></operator><name pos:line="295" pos:column="43">name<pos:position pos:line="295" pos:column="47"/></name></name></expr></argument>,
			      <argument><expr><name><name pos:line="296" pos:column="31">declEntity<pos:position pos:line="296" pos:column="41"/></name><operator pos:line="296" pos:column="41">-&gt;<pos:position pos:line="296" pos:column="46"/></operator><name pos:line="296" pos:column="43">is_param<pos:position pos:line="296" pos:column="51"/></name></name></expr></argument>,
			      <argument><expr><name><name pos:line="297" pos:column="31">declEntity<pos:position pos:line="297" pos:column="41"/></name><operator pos:line="297" pos:column="41">-&gt;<pos:position pos:line="297" pos:column="46"/></operator><name pos:line="297" pos:column="43">textPtr<pos:position pos:line="297" pos:column="50"/></name></name></expr></argument>,
			      <argument><expr><name><name pos:line="298" pos:column="31">declEntity<pos:position pos:line="298" pos:column="41"/></name><operator pos:line="298" pos:column="41">-&gt;<pos:position pos:line="298" pos:column="46"/></operator><name pos:line="298" pos:column="43">textLen<pos:position pos:line="298" pos:column="50"/></name></name></expr></argument>,
			      <argument><expr><name pos:line="299" pos:column="31">curBase<pos:position pos:line="299" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="299" pos:column="40">0<pos:position pos:line="299" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="299" pos:column="43">0<pos:position pos:line="299" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="299" pos:column="46">0<pos:position pos:line="299" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="299" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="49"/></expr_stmt>
	  }<pos:position pos:line="300" pos:column="12"/></block></then></if>
	}<pos:position pos:line="301" pos:column="10"/></block></then>
	<else pos:line="302" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="303" pos:column="11">poolDiscard<pos:position pos:line="303" pos:column="22"/></name><argument_list pos:line="303" pos:column="22">(<argument><expr><operator pos:line="303" pos:column="23">&amp;<pos:position pos:line="303" pos:column="28"/></operator><name><name pos:line="303" pos:column="24">dtd<pos:position pos:line="303" pos:column="27"/></name><operator pos:line="303" pos:column="27">.<pos:position pos:line="303" pos:column="28"/></operator><name pos:line="303" pos:column="28">pool<pos:position pos:line="303" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="303" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="34"/></expr_stmt></block></else></if>
	<if pos:line="304" pos:column="9">if <condition pos:line="304" pos:column="12">(<expr><name pos:line="304" pos:column="13">result<pos:position pos:line="304" pos:column="19"/></name> <operator pos:line="304" pos:column="20">!=<pos:position pos:line="304" pos:column="22"/></operator> <name pos:line="304" pos:column="23">XML_ERROR_NONE<pos:position pos:line="304" pos:column="37"/></name></expr>)<pos:position pos:line="304" pos:column="38"/></condition><then pos:line="304" pos:column="38">
	  <block type="pseudo"><return pos:line="305" pos:column="11">return <expr><name pos:line="305" pos:column="18">result<pos:position pos:line="305" pos:column="24"/></name></expr>;<pos:position pos:line="305" pos:column="25"/></return></block></then></if>
      }<pos:position pos:line="306" pos:column="8"/></block>
      <break pos:line="307" pos:column="7">break;<pos:position pos:line="307" pos:column="13"/></break>
    <case pos:line="308" pos:column="5">case <expr><name pos:line="308" pos:column="10">XML_ROLE_DOCTYPE_SYSTEM_ID<pos:position pos:line="308" pos:column="36"/></name></expr>:<pos:position pos:line="308" pos:column="37"/></case>
      <if pos:line="309" pos:column="7">if <condition pos:line="309" pos:column="10">(<expr><name pos:line="309" pos:column="11">startDoctypeDeclHandler<pos:position pos:line="309" pos:column="34"/></name></expr>)<pos:position pos:line="309" pos:column="35"/></condition><then pos:line="309" pos:column="35"> <block pos:line="309" pos:column="36">{
	<expr_stmt><expr><name pos:line="310" pos:column="9">doctypeSysid<pos:position pos:line="310" pos:column="21"/></name> <operator pos:line="310" pos:column="22">=<pos:position pos:line="310" pos:column="23"/></operator> <call><name pos:line="310" pos:column="24">poolStoreString<pos:position pos:line="310" pos:column="39"/></name><argument_list pos:line="310" pos:column="39">(<argument><expr><operator pos:line="310" pos:column="40">&amp;<pos:position pos:line="310" pos:column="45"/></operator><name pos:line="310" pos:column="41">tempPool<pos:position pos:line="310" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="51">enc<pos:position pos:line="310" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="56">s<pos:position pos:line="310" pos:column="57"/></name> <operator pos:line="310" pos:column="58">+<pos:position pos:line="310" pos:column="59"/></operator> <literal type="number" pos:line="310" pos:column="60">1<pos:position pos:line="310" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="310" pos:column="63">next<pos:position pos:line="310" pos:column="67"/></name> <operator pos:line="310" pos:column="68">-<pos:position pos:line="310" pos:column="69"/></operator> <literal type="number" pos:line="310" pos:column="70">1<pos:position pos:line="310" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="310" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="73"/></expr_stmt>
	<if pos:line="311" pos:column="9">if <condition pos:line="311" pos:column="12">(<expr><operator pos:line="311" pos:column="13">!<pos:position pos:line="311" pos:column="14"/></operator> <name pos:line="311" pos:column="15">doctypeSysid<pos:position pos:line="311" pos:column="27"/></name></expr>)<pos:position pos:line="311" pos:column="28"/></condition><then pos:line="311" pos:column="28">
	  <block type="pseudo"><return pos:line="312" pos:column="11">return <expr><name pos:line="312" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="312" pos:column="37"/></name></expr>;<pos:position pos:line="312" pos:column="38"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="313" pos:column="9">poolFinish<pos:position pos:line="313" pos:column="19"/></name><argument_list pos:line="313" pos:column="19">(<argument><expr><operator pos:line="313" pos:column="20">&amp;<pos:position pos:line="313" pos:column="25"/></operator><name pos:line="313" pos:column="21">tempPool<pos:position pos:line="313" pos:column="29"/></name></expr></argument>)<pos:position pos:line="313" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="313" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="314" pos:column="8"/></block></then></if>
      <if pos:line="315" pos:column="7">if <condition pos:line="315" pos:column="10">(<expr><operator pos:line="315" pos:column="11">!<pos:position pos:line="315" pos:column="12"/></operator><name><name pos:line="315" pos:column="12">dtd<pos:position pos:line="315" pos:column="15"/></name><operator pos:line="315" pos:column="15">.<pos:position pos:line="315" pos:column="16"/></operator><name pos:line="315" pos:column="16">standalone<pos:position pos:line="315" pos:column="26"/></name></name>
<cpp:ifdef pos:line="316" pos:column="1">#<cpp:directive pos:line="316" pos:column="2">ifdef<pos:position pos:line="316" pos:column="7"/></cpp:directive> <name pos:line="316" pos:column="8">XML_DTD<pos:position pos:line="316" pos:column="15"/></name></cpp:ifdef>
	  <operator pos:line="317" pos:column="11">&amp;&amp;<pos:position pos:line="317" pos:column="21"/></operator> <operator pos:line="317" pos:column="14">!<pos:position pos:line="317" pos:column="15"/></operator><name pos:line="317" pos:column="15">paramEntityParsing<pos:position pos:line="317" pos:column="33"/></name>
<cpp:endif pos:line="318" pos:column="1">#<cpp:directive pos:line="318" pos:column="2">endif<pos:position pos:line="318" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="318" pos:column="8">/* XML_DTD */</comment>
	  <operator pos:line="319" pos:column="11">&amp;&amp;<pos:position pos:line="319" pos:column="21"/></operator> <name pos:line="319" pos:column="14">notStandaloneHandler<pos:position pos:line="319" pos:column="34"/></name>
	  <operator pos:line="320" pos:column="11">&amp;&amp;<pos:position pos:line="320" pos:column="21"/></operator> <operator pos:line="320" pos:column="14">!<pos:position pos:line="320" pos:column="15"/></operator><call><name pos:line="320" pos:column="15">notStandaloneHandler<pos:position pos:line="320" pos:column="35"/></name><argument_list pos:line="320" pos:column="35">(<argument><expr><name pos:line="320" pos:column="36">handlerArg<pos:position pos:line="320" pos:column="46"/></name></expr></argument>)<pos:position pos:line="320" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="320" pos:column="48"/></condition><then pos:line="320" pos:column="48">
	<block type="pseudo"><return pos:line="321" pos:column="9">return <expr><name pos:line="321" pos:column="16">XML_ERROR_NOT_STANDALONE<pos:position pos:line="321" pos:column="40"/></name></expr>;<pos:position pos:line="321" pos:column="41"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="322" pos:column="7">hadExternalDoctype<pos:position pos:line="322" pos:column="25"/></name> <operator pos:line="322" pos:column="26">=<pos:position pos:line="322" pos:column="27"/></operator> <literal type="number" pos:line="322" pos:column="28">1<pos:position pos:line="322" pos:column="29"/></literal></expr>;<pos:position pos:line="322" pos:column="30"/></expr_stmt>
<cpp:ifndef pos:line="323" pos:column="1">#<cpp:directive pos:line="323" pos:column="2">ifndef<pos:position pos:line="323" pos:column="8"/></cpp:directive> <name pos:line="323" pos:column="9">XML_DTD<pos:position pos:line="323" pos:column="16"/></name></cpp:ifndef>
      <break pos:line="324" pos:column="7">break;<pos:position pos:line="324" pos:column="13"/></break>
<cpp:else pos:line="325" pos:column="1">#<cpp:directive pos:line="325" pos:column="2">else<pos:position pos:line="325" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="325" pos:column="7">/* XML_DTD */</comment>
      <if pos:line="326" pos:column="7">if <condition pos:line="326" pos:column="10">(<expr><operator pos:line="326" pos:column="11">!<pos:position pos:line="326" pos:column="12"/></operator><name pos:line="326" pos:column="12">declEntity<pos:position pos:line="326" pos:column="22"/></name></expr>)<pos:position pos:line="326" pos:column="23"/></condition><then pos:line="326" pos:column="23"> <block pos:line="326" pos:column="24">{
	<expr_stmt><expr><name pos:line="327" pos:column="9">declEntity<pos:position pos:line="327" pos:column="19"/></name> <operator pos:line="327" pos:column="20">=<pos:position pos:line="327" pos:column="21"/></operator> <operator pos:line="327" pos:column="22">(<pos:position pos:line="327" pos:column="23"/></operator><name pos:line="327" pos:column="23">ENTITY<pos:position pos:line="327" pos:column="29"/></name> <operator pos:line="327" pos:column="30">*<pos:position pos:line="327" pos:column="31"/></operator><operator pos:line="327" pos:column="31">)<pos:position pos:line="327" pos:column="32"/></operator><call><name pos:line="327" pos:column="32">lookup<pos:position pos:line="327" pos:column="38"/></name><argument_list pos:line="327" pos:column="38">(<argument><expr><operator pos:line="327" pos:column="39">&amp;<pos:position pos:line="327" pos:column="44"/></operator><name><name pos:line="327" pos:column="40">dtd<pos:position pos:line="327" pos:column="43"/></name><operator pos:line="327" pos:column="43">.<pos:position pos:line="327" pos:column="44"/></operator><name pos:line="327" pos:column="44">paramEntities<pos:position pos:line="327" pos:column="57"/></name></name></expr></argument>,
				      <argument><expr><name pos:line="328" pos:column="39">externalSubsetName<pos:position pos:line="328" pos:column="57"/></name></expr></argument>,
				      <argument><expr><sizeof pos:line="329" pos:column="39">sizeof<argument_list pos:line="329" pos:column="45">(<argument><expr><name pos:line="329" pos:column="46">ENTITY<pos:position pos:line="329" pos:column="52"/></name></expr></argument>)<pos:position pos:line="329" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="329" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="329" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="330" pos:column="9">declEntity<pos:position pos:line="330" pos:column="19"/></name><operator pos:line="330" pos:column="19">-&gt;<pos:position pos:line="330" pos:column="24"/></operator><name pos:line="330" pos:column="21">publicId<pos:position pos:line="330" pos:column="29"/></name></name> <operator pos:line="330" pos:column="30">=<pos:position pos:line="330" pos:column="31"/></operator> <literal type="number" pos:line="330" pos:column="32">0<pos:position pos:line="330" pos:column="33"/></literal></expr>;<pos:position pos:line="330" pos:column="34"/></expr_stmt>
	<if pos:line="331" pos:column="9">if <condition pos:line="331" pos:column="12">(<expr><operator pos:line="331" pos:column="13">!<pos:position pos:line="331" pos:column="14"/></operator><name pos:line="331" pos:column="14">declEntity<pos:position pos:line="331" pos:column="24"/></name></expr>)<pos:position pos:line="331" pos:column="25"/></condition><then pos:line="331" pos:column="25">
	  <block type="pseudo"><return pos:line="332" pos:column="11">return <expr><name pos:line="332" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="332" pos:column="37"/></name></expr>;<pos:position pos:line="332" pos:column="38"/></return></block></then></if>
      }<pos:position pos:line="333" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="334" pos:column="7">/* fall through */</comment>
<cpp:endif pos:line="335" pos:column="1">#<cpp:directive pos:line="335" pos:column="2">endif<pos:position pos:line="335" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="335" pos:column="8">/* XML_DTD */</comment>
    <case pos:line="336" pos:column="5">case <expr><name pos:line="336" pos:column="10">XML_ROLE_ENTITY_SYSTEM_ID<pos:position pos:line="336" pos:column="35"/></name></expr>:<pos:position pos:line="336" pos:column="36"/></case>
      <if pos:line="337" pos:column="7">if <condition pos:line="337" pos:column="10">(<expr><name pos:line="337" pos:column="11">declEntity<pos:position pos:line="337" pos:column="21"/></name></expr>)<pos:position pos:line="337" pos:column="22"/></condition><then pos:line="337" pos:column="22"> <block pos:line="337" pos:column="23">{
	<expr_stmt><expr><name><name pos:line="338" pos:column="9">declEntity<pos:position pos:line="338" pos:column="19"/></name><operator pos:line="338" pos:column="19">-&gt;<pos:position pos:line="338" pos:column="24"/></operator><name pos:line="338" pos:column="21">systemId<pos:position pos:line="338" pos:column="29"/></name></name> <operator pos:line="338" pos:column="30">=<pos:position pos:line="338" pos:column="31"/></operator> <call><name pos:line="338" pos:column="32">poolStoreString<pos:position pos:line="338" pos:column="47"/></name><argument_list pos:line="338" pos:column="47">(<argument><expr><operator pos:line="338" pos:column="48">&amp;<pos:position pos:line="338" pos:column="53"/></operator><name><name pos:line="338" pos:column="49">dtd<pos:position pos:line="338" pos:column="52"/></name><operator pos:line="338" pos:column="52">.<pos:position pos:line="338" pos:column="53"/></operator><name pos:line="338" pos:column="53">pool<pos:position pos:line="338" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="338" pos:column="59">enc<pos:position pos:line="338" pos:column="62"/></name></expr></argument>,
	                                       <argument><expr><name pos:line="339" pos:column="48">s<pos:position pos:line="339" pos:column="49"/></name> <operator pos:line="339" pos:column="50">+<pos:position pos:line="339" pos:column="51"/></operator> <name><name pos:line="339" pos:column="52">enc<pos:position pos:line="339" pos:column="55"/></name><operator pos:line="339" pos:column="55">-&gt;<pos:position pos:line="339" pos:column="60"/></operator><name pos:line="339" pos:column="57">minBytesPerChar<pos:position pos:line="339" pos:column="72"/></name></name></expr></argument>,
	  				       <argument><expr><name pos:line="340" pos:column="48">next<pos:position pos:line="340" pos:column="52"/></name> <operator pos:line="340" pos:column="53">-<pos:position pos:line="340" pos:column="54"/></operator> <name><name pos:line="340" pos:column="55">enc<pos:position pos:line="340" pos:column="58"/></name><operator pos:line="340" pos:column="58">-&gt;<pos:position pos:line="340" pos:column="63"/></operator><name pos:line="340" pos:column="60">minBytesPerChar<pos:position pos:line="340" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="340" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="340" pos:column="77"/></expr_stmt>
	<if pos:line="341" pos:column="9">if <condition pos:line="341" pos:column="12">(<expr><operator pos:line="341" pos:column="13">!<pos:position pos:line="341" pos:column="14"/></operator><name><name pos:line="341" pos:column="14">declEntity<pos:position pos:line="341" pos:column="24"/></name><operator pos:line="341" pos:column="24">-&gt;<pos:position pos:line="341" pos:column="29"/></operator><name pos:line="341" pos:column="26">systemId<pos:position pos:line="341" pos:column="34"/></name></name></expr>)<pos:position pos:line="341" pos:column="35"/></condition><then pos:line="341" pos:column="35">
	  <block type="pseudo"><return pos:line="342" pos:column="11">return <expr><name pos:line="342" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="342" pos:column="37"/></name></expr>;<pos:position pos:line="342" pos:column="38"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="343" pos:column="9">declEntity<pos:position pos:line="343" pos:column="19"/></name><operator pos:line="343" pos:column="19">-&gt;<pos:position pos:line="343" pos:column="24"/></operator><name pos:line="343" pos:column="21">base<pos:position pos:line="343" pos:column="25"/></name></name> <operator pos:line="343" pos:column="26">=<pos:position pos:line="343" pos:column="27"/></operator> <name pos:line="343" pos:column="28">curBase<pos:position pos:line="343" pos:column="35"/></name></expr>;<pos:position pos:line="343" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="344" pos:column="9">poolFinish<pos:position pos:line="344" pos:column="19"/></name><argument_list pos:line="344" pos:column="19">(<argument><expr><operator pos:line="344" pos:column="20">&amp;<pos:position pos:line="344" pos:column="25"/></operator><name><name pos:line="344" pos:column="21">dtd<pos:position pos:line="344" pos:column="24"/></name><operator pos:line="344" pos:column="24">.<pos:position pos:line="344" pos:column="25"/></operator><name pos:line="344" pos:column="25">pool<pos:position pos:line="344" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="344" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="344" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="345" pos:column="8"/></block></then></if>
      <break pos:line="346" pos:column="7">break;<pos:position pos:line="346" pos:column="13"/></break>
    <case pos:line="347" pos:column="5">case <expr><name pos:line="347" pos:column="10">XML_ROLE_ENTITY_COMPLETE<pos:position pos:line="347" pos:column="34"/></name></expr>:<pos:position pos:line="347" pos:column="35"/></case>
      <if pos:line="348" pos:column="7">if <condition pos:line="348" pos:column="10">(<expr><name pos:line="348" pos:column="11">declEntity<pos:position pos:line="348" pos:column="21"/></name> <operator pos:line="348" pos:column="22">&amp;&amp;<pos:position pos:line="348" pos:column="32"/></operator> <name pos:line="348" pos:column="25">entityDeclHandler<pos:position pos:line="348" pos:column="42"/></name></expr>)<pos:position pos:line="348" pos:column="43"/></condition><then pos:line="348" pos:column="43"> <block pos:line="348" pos:column="44">{
	<expr_stmt><expr><operator pos:line="349" pos:column="9">*<pos:position pos:line="349" pos:column="10"/></operator><name pos:line="349" pos:column="10">eventEndPP<pos:position pos:line="349" pos:column="20"/></name> <operator pos:line="349" pos:column="21">=<pos:position pos:line="349" pos:column="22"/></operator> <name pos:line="349" pos:column="23">s<pos:position pos:line="349" pos:column="24"/></name></expr>;<pos:position pos:line="349" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="350" pos:column="9">entityDeclHandler<pos:position pos:line="350" pos:column="26"/></name><argument_list pos:line="350" pos:column="26">(<argument><expr><name pos:line="350" pos:column="27">handlerArg<pos:position pos:line="350" pos:column="37"/></name></expr></argument>,
			  <argument><expr><name><name pos:line="351" pos:column="27">declEntity<pos:position pos:line="351" pos:column="37"/></name><operator pos:line="351" pos:column="37">-&gt;<pos:position pos:line="351" pos:column="42"/></operator><name pos:line="351" pos:column="39">name<pos:position pos:line="351" pos:column="43"/></name></name></expr></argument>,
			  <argument><expr><literal type="number" pos:line="352" pos:column="27">0<pos:position pos:line="352" pos:column="28"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="352" pos:column="29">0<pos:position pos:line="352" pos:column="30"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="352" pos:column="31">0<pos:position pos:line="352" pos:column="32"/></literal></expr></argument>,
			  <argument><expr><name><name pos:line="353" pos:column="27">declEntity<pos:position pos:line="353" pos:column="37"/></name><operator pos:line="353" pos:column="37">-&gt;<pos:position pos:line="353" pos:column="42"/></operator><name pos:line="353" pos:column="39">base<pos:position pos:line="353" pos:column="43"/></name></name></expr></argument>,
			  <argument><expr><name><name pos:line="354" pos:column="27">declEntity<pos:position pos:line="354" pos:column="37"/></name><operator pos:line="354" pos:column="37">-&gt;<pos:position pos:line="354" pos:column="42"/></operator><name pos:line="354" pos:column="39">systemId<pos:position pos:line="354" pos:column="47"/></name></name></expr></argument>,
			  <argument><expr><name><name pos:line="355" pos:column="27">declEntity<pos:position pos:line="355" pos:column="37"/></name><operator pos:line="355" pos:column="37">-&gt;<pos:position pos:line="355" pos:column="42"/></operator><name pos:line="355" pos:column="39">publicId<pos:position pos:line="355" pos:column="47"/></name></name></expr></argument>,
			  <argument><expr><literal type="number" pos:line="356" pos:column="27">0<pos:position pos:line="356" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="356" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="356" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="357" pos:column="8"/></block></then></if>
      <break pos:line="358" pos:column="7">break;<pos:position pos:line="358" pos:column="13"/></break>
    <case pos:line="359" pos:column="5">case <expr><name pos:line="359" pos:column="10">XML_ROLE_ENTITY_NOTATION_NAME<pos:position pos:line="359" pos:column="39"/></name></expr>:<pos:position pos:line="359" pos:column="40"/></case>
      <if pos:line="360" pos:column="7">if <condition pos:line="360" pos:column="10">(<expr><name pos:line="360" pos:column="11">declEntity<pos:position pos:line="360" pos:column="21"/></name></expr>)<pos:position pos:line="360" pos:column="22"/></condition><then pos:line="360" pos:column="22"> <block pos:line="360" pos:column="23">{
	<expr_stmt><expr><name><name pos:line="361" pos:column="9">declEntity<pos:position pos:line="361" pos:column="19"/></name><operator pos:line="361" pos:column="19">-&gt;<pos:position pos:line="361" pos:column="24"/></operator><name pos:line="361" pos:column="21">notation<pos:position pos:line="361" pos:column="29"/></name></name> <operator pos:line="361" pos:column="30">=<pos:position pos:line="361" pos:column="31"/></operator> <call><name pos:line="361" pos:column="32">poolStoreString<pos:position pos:line="361" pos:column="47"/></name><argument_list pos:line="361" pos:column="47">(<argument><expr><operator pos:line="361" pos:column="48">&amp;<pos:position pos:line="361" pos:column="53"/></operator><name><name pos:line="361" pos:column="49">dtd<pos:position pos:line="361" pos:column="52"/></name><operator pos:line="361" pos:column="52">.<pos:position pos:line="361" pos:column="53"/></operator><name pos:line="361" pos:column="53">pool<pos:position pos:line="361" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="361" pos:column="59">enc<pos:position pos:line="361" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="361" pos:column="64">s<pos:position pos:line="361" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="361" pos:column="67">next<pos:position pos:line="361" pos:column="71"/></name></expr></argument>)<pos:position pos:line="361" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="361" pos:column="73"/></expr_stmt>
	<if pos:line="362" pos:column="9">if <condition pos:line="362" pos:column="12">(<expr><operator pos:line="362" pos:column="13">!<pos:position pos:line="362" pos:column="14"/></operator><name><name pos:line="362" pos:column="14">declEntity<pos:position pos:line="362" pos:column="24"/></name><operator pos:line="362" pos:column="24">-&gt;<pos:position pos:line="362" pos:column="29"/></operator><name pos:line="362" pos:column="26">notation<pos:position pos:line="362" pos:column="34"/></name></name></expr>)<pos:position pos:line="362" pos:column="35"/></condition><then pos:line="362" pos:column="35">
	  <block type="pseudo"><return pos:line="363" pos:column="11">return <expr><name pos:line="363" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="363" pos:column="37"/></name></expr>;<pos:position pos:line="363" pos:column="38"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="364" pos:column="9">poolFinish<pos:position pos:line="364" pos:column="19"/></name><argument_list pos:line="364" pos:column="19">(<argument><expr><operator pos:line="364" pos:column="20">&amp;<pos:position pos:line="364" pos:column="25"/></operator><name><name pos:line="364" pos:column="21">dtd<pos:position pos:line="364" pos:column="24"/></name><operator pos:line="364" pos:column="24">.<pos:position pos:line="364" pos:column="25"/></operator><name pos:line="364" pos:column="25">pool<pos:position pos:line="364" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="364" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="31"/></expr_stmt>
	<if pos:line="365" pos:column="9">if <condition pos:line="365" pos:column="12">(<expr><name pos:line="365" pos:column="13">unparsedEntityDeclHandler<pos:position pos:line="365" pos:column="38"/></name></expr>)<pos:position pos:line="365" pos:column="39"/></condition><then pos:line="365" pos:column="39"> <block pos:line="365" pos:column="40">{
	  <expr_stmt><expr><operator pos:line="366" pos:column="11">*<pos:position pos:line="366" pos:column="12"/></operator><name pos:line="366" pos:column="12">eventEndPP<pos:position pos:line="366" pos:column="22"/></name> <operator pos:line="366" pos:column="23">=<pos:position pos:line="366" pos:column="24"/></operator> <name pos:line="366" pos:column="25">s<pos:position pos:line="366" pos:column="26"/></name></expr>;<pos:position pos:line="366" pos:column="27"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="367" pos:column="11">unparsedEntityDeclHandler<pos:position pos:line="367" pos:column="36"/></name><argument_list pos:line="367" pos:column="36">(<argument><expr><name pos:line="367" pos:column="37">handlerArg<pos:position pos:line="367" pos:column="47"/></name></expr></argument>,
				    <argument><expr><name><name pos:line="368" pos:column="37">declEntity<pos:position pos:line="368" pos:column="47"/></name><operator pos:line="368" pos:column="47">-&gt;<pos:position pos:line="368" pos:column="52"/></operator><name pos:line="368" pos:column="49">name<pos:position pos:line="368" pos:column="53"/></name></name></expr></argument>,
				    <argument><expr><name><name pos:line="369" pos:column="37">declEntity<pos:position pos:line="369" pos:column="47"/></name><operator pos:line="369" pos:column="47">-&gt;<pos:position pos:line="369" pos:column="52"/></operator><name pos:line="369" pos:column="49">base<pos:position pos:line="369" pos:column="53"/></name></name></expr></argument>,
				    <argument><expr><name><name pos:line="370" pos:column="37">declEntity<pos:position pos:line="370" pos:column="47"/></name><operator pos:line="370" pos:column="47">-&gt;<pos:position pos:line="370" pos:column="52"/></operator><name pos:line="370" pos:column="49">systemId<pos:position pos:line="370" pos:column="57"/></name></name></expr></argument>,
				    <argument><expr><name><name pos:line="371" pos:column="37">declEntity<pos:position pos:line="371" pos:column="47"/></name><operator pos:line="371" pos:column="47">-&gt;<pos:position pos:line="371" pos:column="52"/></operator><name pos:line="371" pos:column="49">publicId<pos:position pos:line="371" pos:column="57"/></name></name></expr></argument>,
				    <argument><expr><name><name pos:line="372" pos:column="37">declEntity<pos:position pos:line="372" pos:column="47"/></name><operator pos:line="372" pos:column="47">-&gt;<pos:position pos:line="372" pos:column="52"/></operator><name pos:line="372" pos:column="49">notation<pos:position pos:line="372" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="372" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="372" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="373" pos:column="10"/></block></then>
	<elseif pos:line="374" pos:column="9">else <if pos:line="374" pos:column="14">if <condition pos:line="374" pos:column="17">(<expr><name pos:line="374" pos:column="18">entityDeclHandler<pos:position pos:line="374" pos:column="35"/></name></expr>)<pos:position pos:line="374" pos:column="36"/></condition><then pos:line="374" pos:column="36"> <block pos:line="374" pos:column="37">{
	  <expr_stmt><expr><operator pos:line="375" pos:column="11">*<pos:position pos:line="375" pos:column="12"/></operator><name pos:line="375" pos:column="12">eventEndPP<pos:position pos:line="375" pos:column="22"/></name> <operator pos:line="375" pos:column="23">=<pos:position pos:line="375" pos:column="24"/></operator> <name pos:line="375" pos:column="25">s<pos:position pos:line="375" pos:column="26"/></name></expr>;<pos:position pos:line="375" pos:column="27"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="376" pos:column="11">entityDeclHandler<pos:position pos:line="376" pos:column="28"/></name><argument_list pos:line="376" pos:column="28">(<argument><expr><name pos:line="376" pos:column="29">handlerArg<pos:position pos:line="376" pos:column="39"/></name></expr></argument>,
			    <argument><expr><name><name pos:line="377" pos:column="29">declEntity<pos:position pos:line="377" pos:column="39"/></name><operator pos:line="377" pos:column="39">-&gt;<pos:position pos:line="377" pos:column="44"/></operator><name pos:line="377" pos:column="41">name<pos:position pos:line="377" pos:column="45"/></name></name></expr></argument>,
			    <argument><expr><literal type="number" pos:line="378" pos:column="29">0<pos:position pos:line="378" pos:column="30"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="378" pos:column="31">0<pos:position pos:line="378" pos:column="32"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="378" pos:column="33">0<pos:position pos:line="378" pos:column="34"/></literal></expr></argument>,
			    <argument><expr><name><name pos:line="379" pos:column="29">declEntity<pos:position pos:line="379" pos:column="39"/></name><operator pos:line="379" pos:column="39">-&gt;<pos:position pos:line="379" pos:column="44"/></operator><name pos:line="379" pos:column="41">base<pos:position pos:line="379" pos:column="45"/></name></name></expr></argument>,
			    <argument><expr><name><name pos:line="380" pos:column="29">declEntity<pos:position pos:line="380" pos:column="39"/></name><operator pos:line="380" pos:column="39">-&gt;<pos:position pos:line="380" pos:column="44"/></operator><name pos:line="380" pos:column="41">systemId<pos:position pos:line="380" pos:column="49"/></name></name></expr></argument>,
			    <argument><expr><name><name pos:line="381" pos:column="29">declEntity<pos:position pos:line="381" pos:column="39"/></name><operator pos:line="381" pos:column="39">-&gt;<pos:position pos:line="381" pos:column="44"/></operator><name pos:line="381" pos:column="41">publicId<pos:position pos:line="381" pos:column="49"/></name></name></expr></argument>,
			    <argument><expr><name><name pos:line="382" pos:column="29">declEntity<pos:position pos:line="382" pos:column="39"/></name><operator pos:line="382" pos:column="39">-&gt;<pos:position pos:line="382" pos:column="44"/></operator><name pos:line="382" pos:column="41">notation<pos:position pos:line="382" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="382" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="382" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="383" pos:column="10"/></block></then></if></elseif></if>
      }<pos:position pos:line="384" pos:column="8"/></block></then></if>
      <break pos:line="385" pos:column="7">break;<pos:position pos:line="385" pos:column="13"/></break>
    <case pos:line="386" pos:column="5">case <expr><name pos:line="386" pos:column="10">XML_ROLE_GENERAL_ENTITY_NAME<pos:position pos:line="386" pos:column="38"/></name></expr>:<pos:position pos:line="386" pos:column="39"/></case>
      <block pos:line="387" pos:column="7">{
	<decl_stmt><decl><type><specifier pos:line="388" pos:column="9">const<pos:position pos:line="388" pos:column="14"/></specifier> <name pos:line="388" pos:column="15">XML_Char<pos:position pos:line="388" pos:column="23"/></name> <modifier pos:line="388" pos:column="24">*<pos:position pos:line="388" pos:column="25"/></modifier></type><name pos:line="388" pos:column="25">name<pos:position pos:line="388" pos:column="29"/></name></decl>;<pos:position pos:line="388" pos:column="30"/></decl_stmt>
	<if pos:line="389" pos:column="9">if <condition pos:line="389" pos:column="12">(<expr><call><name pos:line="389" pos:column="13">XmlPredefinedEntityName<pos:position pos:line="389" pos:column="36"/></name><argument_list pos:line="389" pos:column="36">(<argument><expr><name pos:line="389" pos:column="37">enc<pos:position pos:line="389" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="389" pos:column="42">s<pos:position pos:line="389" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="389" pos:column="45">next<pos:position pos:line="389" pos:column="49"/></name></expr></argument>)<pos:position pos:line="389" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="389" pos:column="51"/></condition><then pos:line="389" pos:column="51"> <block pos:line="389" pos:column="52">{
	  <expr_stmt><expr><name pos:line="390" pos:column="11">declEntity<pos:position pos:line="390" pos:column="21"/></name> <operator pos:line="390" pos:column="22">=<pos:position pos:line="390" pos:column="23"/></operator> <literal type="number" pos:line="390" pos:column="24">0<pos:position pos:line="390" pos:column="25"/></literal></expr>;<pos:position pos:line="390" pos:column="26"/></expr_stmt>
	  <break pos:line="391" pos:column="11">break;<pos:position pos:line="391" pos:column="17"/></break>
	}<pos:position pos:line="392" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="393" pos:column="9">name<pos:position pos:line="393" pos:column="13"/></name> <operator pos:line="393" pos:column="14">=<pos:position pos:line="393" pos:column="15"/></operator> <call><name pos:line="393" pos:column="16">poolStoreString<pos:position pos:line="393" pos:column="31"/></name><argument_list pos:line="393" pos:column="31">(<argument><expr><operator pos:line="393" pos:column="32">&amp;<pos:position pos:line="393" pos:column="37"/></operator><name><name pos:line="393" pos:column="33">dtd<pos:position pos:line="393" pos:column="36"/></name><operator pos:line="393" pos:column="36">.<pos:position pos:line="393" pos:column="37"/></operator><name pos:line="393" pos:column="37">pool<pos:position pos:line="393" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="393" pos:column="43">enc<pos:position pos:line="393" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="393" pos:column="48">s<pos:position pos:line="393" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="393" pos:column="51">next<pos:position pos:line="393" pos:column="55"/></name></expr></argument>)<pos:position pos:line="393" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="393" pos:column="57"/></expr_stmt>
	<if pos:line="394" pos:column="9">if <condition pos:line="394" pos:column="12">(<expr><operator pos:line="394" pos:column="13">!<pos:position pos:line="394" pos:column="14"/></operator><name pos:line="394" pos:column="14">name<pos:position pos:line="394" pos:column="18"/></name></expr>)<pos:position pos:line="394" pos:column="19"/></condition><then pos:line="394" pos:column="19">
	  <block type="pseudo"><return pos:line="395" pos:column="11">return <expr><name pos:line="395" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="395" pos:column="37"/></name></expr>;<pos:position pos:line="395" pos:column="38"/></return></block></then></if>
	<if pos:line="396" pos:column="9">if <condition pos:line="396" pos:column="12">(<expr><name><name pos:line="396" pos:column="13">dtd<pos:position pos:line="396" pos:column="16"/></name><operator pos:line="396" pos:column="16">.<pos:position pos:line="396" pos:column="17"/></operator><name pos:line="396" pos:column="17">complete<pos:position pos:line="396" pos:column="25"/></name></name></expr>)<pos:position pos:line="396" pos:column="26"/></condition><then pos:line="396" pos:column="26"> <block pos:line="396" pos:column="27">{
	  <expr_stmt><expr><name pos:line="397" pos:column="11">declEntity<pos:position pos:line="397" pos:column="21"/></name> <operator pos:line="397" pos:column="22">=<pos:position pos:line="397" pos:column="23"/></operator> <operator pos:line="397" pos:column="24">(<pos:position pos:line="397" pos:column="25"/></operator><name pos:line="397" pos:column="25">ENTITY<pos:position pos:line="397" pos:column="31"/></name> <operator pos:line="397" pos:column="32">*<pos:position pos:line="397" pos:column="33"/></operator><operator pos:line="397" pos:column="33">)<pos:position pos:line="397" pos:column="34"/></operator><call><name pos:line="397" pos:column="34">lookup<pos:position pos:line="397" pos:column="40"/></name><argument_list pos:line="397" pos:column="40">(<argument><expr><operator pos:line="397" pos:column="41">&amp;<pos:position pos:line="397" pos:column="46"/></operator><name><name pos:line="397" pos:column="42">dtd<pos:position pos:line="397" pos:column="45"/></name><operator pos:line="397" pos:column="45">.<pos:position pos:line="397" pos:column="46"/></operator><name pos:line="397" pos:column="46">generalEntities<pos:position pos:line="397" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="397" pos:column="63">name<pos:position pos:line="397" pos:column="67"/></name></expr></argument>, <argument><expr><sizeof pos:line="397" pos:column="69">sizeof<argument_list pos:line="397" pos:column="75">(<argument><expr><name pos:line="397" pos:column="76">ENTITY<pos:position pos:line="397" pos:column="82"/></name></expr></argument>)<pos:position pos:line="397" pos:column="83"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="397" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="85"/></expr_stmt>
	  <if pos:line="398" pos:column="11">if <condition pos:line="398" pos:column="14">(<expr><operator pos:line="398" pos:column="15">!<pos:position pos:line="398" pos:column="16"/></operator><name pos:line="398" pos:column="16">declEntity<pos:position pos:line="398" pos:column="26"/></name></expr>)<pos:position pos:line="398" pos:column="27"/></condition><then pos:line="398" pos:column="27">
	    <block type="pseudo"><return pos:line="399" pos:column="13">return <expr><name pos:line="399" pos:column="20">XML_ERROR_NO_MEMORY<pos:position pos:line="399" pos:column="39"/></name></expr>;<pos:position pos:line="399" pos:column="40"/></return></block></then></if>
	  <if pos:line="400" pos:column="11">if <condition pos:line="400" pos:column="14">(<expr><name><name pos:line="400" pos:column="15">declEntity<pos:position pos:line="400" pos:column="25"/></name><operator pos:line="400" pos:column="25">-&gt;<pos:position pos:line="400" pos:column="30"/></operator><name pos:line="400" pos:column="27">name<pos:position pos:line="400" pos:column="31"/></name></name> <operator pos:line="400" pos:column="32">!=<pos:position pos:line="400" pos:column="34"/></operator> <name pos:line="400" pos:column="35">name<pos:position pos:line="400" pos:column="39"/></name></expr>)<pos:position pos:line="400" pos:column="40"/></condition><then pos:line="400" pos:column="40"> <block pos:line="400" pos:column="41">{
	    <expr_stmt><expr><call><name pos:line="401" pos:column="13">poolDiscard<pos:position pos:line="401" pos:column="24"/></name><argument_list pos:line="401" pos:column="24">(<argument><expr><operator pos:line="401" pos:column="25">&amp;<pos:position pos:line="401" pos:column="30"/></operator><name><name pos:line="401" pos:column="26">dtd<pos:position pos:line="401" pos:column="29"/></name><operator pos:line="401" pos:column="29">.<pos:position pos:line="401" pos:column="30"/></operator><name pos:line="401" pos:column="30">pool<pos:position pos:line="401" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="401" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="401" pos:column="36"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="402" pos:column="13">declEntity<pos:position pos:line="402" pos:column="23"/></name> <operator pos:line="402" pos:column="24">=<pos:position pos:line="402" pos:column="25"/></operator> <literal type="number" pos:line="402" pos:column="26">0<pos:position pos:line="402" pos:column="27"/></literal></expr>;<pos:position pos:line="402" pos:column="28"/></expr_stmt>
	  }<pos:position pos:line="403" pos:column="12"/></block></then>
	  <else pos:line="404" pos:column="11">else <block pos:line="404" pos:column="16">{
	    <expr_stmt><expr><call><name pos:line="405" pos:column="13">poolFinish<pos:position pos:line="405" pos:column="23"/></name><argument_list pos:line="405" pos:column="23">(<argument><expr><operator pos:line="405" pos:column="24">&amp;<pos:position pos:line="405" pos:column="29"/></operator><name><name pos:line="405" pos:column="25">dtd<pos:position pos:line="405" pos:column="28"/></name><operator pos:line="405" pos:column="28">.<pos:position pos:line="405" pos:column="29"/></operator><name pos:line="405" pos:column="29">pool<pos:position pos:line="405" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="405" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="405" pos:column="35"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="406" pos:column="13">declEntity<pos:position pos:line="406" pos:column="23"/></name><operator pos:line="406" pos:column="23">-&gt;<pos:position pos:line="406" pos:column="28"/></operator><name pos:line="406" pos:column="25">publicId<pos:position pos:line="406" pos:column="33"/></name></name> <operator pos:line="406" pos:column="34">=<pos:position pos:line="406" pos:column="35"/></operator> <literal type="number" pos:line="406" pos:column="36">0<pos:position pos:line="406" pos:column="37"/></literal></expr>;<pos:position pos:line="406" pos:column="38"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="407" pos:column="13">declEntity<pos:position pos:line="407" pos:column="23"/></name><operator pos:line="407" pos:column="23">-&gt;<pos:position pos:line="407" pos:column="28"/></operator><name pos:line="407" pos:column="25">is_param<pos:position pos:line="407" pos:column="33"/></name></name> <operator pos:line="407" pos:column="34">=<pos:position pos:line="407" pos:column="35"/></operator> <literal type="number" pos:line="407" pos:column="36">0<pos:position pos:line="407" pos:column="37"/></literal></expr>;<pos:position pos:line="407" pos:column="38"/></expr_stmt>
	  }<pos:position pos:line="408" pos:column="12"/></block></else></if>
	}<pos:position pos:line="409" pos:column="10"/></block></then>
	<else pos:line="410" pos:column="9">else <block pos:line="410" pos:column="14">{
	  <expr_stmt><expr><call><name pos:line="411" pos:column="11">poolDiscard<pos:position pos:line="411" pos:column="22"/></name><argument_list pos:line="411" pos:column="22">(<argument><expr><operator pos:line="411" pos:column="23">&amp;<pos:position pos:line="411" pos:column="28"/></operator><name><name pos:line="411" pos:column="24">dtd<pos:position pos:line="411" pos:column="27"/></name><operator pos:line="411" pos:column="27">.<pos:position pos:line="411" pos:column="28"/></operator><name pos:line="411" pos:column="28">pool<pos:position pos:line="411" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="411" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="411" pos:column="34"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="412" pos:column="11">declEntity<pos:position pos:line="412" pos:column="21"/></name> <operator pos:line="412" pos:column="22">=<pos:position pos:line="412" pos:column="23"/></operator> <literal type="number" pos:line="412" pos:column="24">0<pos:position pos:line="412" pos:column="25"/></literal></expr>;<pos:position pos:line="412" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="413" pos:column="10"/></block></else></if>
      }<pos:position pos:line="414" pos:column="8"/></block>
      <break pos:line="415" pos:column="7">break;<pos:position pos:line="415" pos:column="13"/></break>
    <case pos:line="416" pos:column="5">case <expr><name pos:line="416" pos:column="10">XML_ROLE_PARAM_ENTITY_NAME<pos:position pos:line="416" pos:column="36"/></name></expr>:<pos:position pos:line="416" pos:column="37"/></case>
<cpp:ifdef pos:line="417" pos:column="1">#<cpp:directive pos:line="417" pos:column="2">ifdef<pos:position pos:line="417" pos:column="7"/></cpp:directive> <name pos:line="417" pos:column="8">XML_DTD<pos:position pos:line="417" pos:column="15"/></name></cpp:ifdef>
      <if pos:line="418" pos:column="7">if <condition pos:line="418" pos:column="10">(<expr><name><name pos:line="418" pos:column="11">dtd<pos:position pos:line="418" pos:column="14"/></name><operator pos:line="418" pos:column="14">.<pos:position pos:line="418" pos:column="15"/></operator><name pos:line="418" pos:column="15">complete<pos:position pos:line="418" pos:column="23"/></name></name></expr>)<pos:position pos:line="418" pos:column="24"/></condition><then pos:line="418" pos:column="24"> <block pos:line="418" pos:column="25">{
	<decl_stmt><decl><type><specifier pos:line="419" pos:column="9">const<pos:position pos:line="419" pos:column="14"/></specifier> <name pos:line="419" pos:column="15">XML_Char<pos:position pos:line="419" pos:column="23"/></name> <modifier pos:line="419" pos:column="24">*<pos:position pos:line="419" pos:column="25"/></modifier></type><name pos:line="419" pos:column="25">name<pos:position pos:line="419" pos:column="29"/></name> <init pos:line="419" pos:column="30">= <expr><call><name pos:line="419" pos:column="32">poolStoreString<pos:position pos:line="419" pos:column="47"/></name><argument_list pos:line="419" pos:column="47">(<argument><expr><operator pos:line="419" pos:column="48">&amp;<pos:position pos:line="419" pos:column="53"/></operator><name><name pos:line="419" pos:column="49">dtd<pos:position pos:line="419" pos:column="52"/></name><operator pos:line="419" pos:column="52">.<pos:position pos:line="419" pos:column="53"/></operator><name pos:line="419" pos:column="53">pool<pos:position pos:line="419" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="419" pos:column="59">enc<pos:position pos:line="419" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="419" pos:column="64">s<pos:position pos:line="419" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="419" pos:column="67">next<pos:position pos:line="419" pos:column="71"/></name></expr></argument>)<pos:position pos:line="419" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="419" pos:column="73"/></decl_stmt>
	<if pos:line="420" pos:column="9">if <condition pos:line="420" pos:column="12">(<expr><operator pos:line="420" pos:column="13">!<pos:position pos:line="420" pos:column="14"/></operator><name pos:line="420" pos:column="14">name<pos:position pos:line="420" pos:column="18"/></name></expr>)<pos:position pos:line="420" pos:column="19"/></condition><then pos:line="420" pos:column="19">
	  <block type="pseudo"><return pos:line="421" pos:column="11">return <expr><name pos:line="421" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="421" pos:column="37"/></name></expr>;<pos:position pos:line="421" pos:column="38"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="422" pos:column="9">declEntity<pos:position pos:line="422" pos:column="19"/></name> <operator pos:line="422" pos:column="20">=<pos:position pos:line="422" pos:column="21"/></operator> <operator pos:line="422" pos:column="22">(<pos:position pos:line="422" pos:column="23"/></operator><name pos:line="422" pos:column="23">ENTITY<pos:position pos:line="422" pos:column="29"/></name> <operator pos:line="422" pos:column="30">*<pos:position pos:line="422" pos:column="31"/></operator><operator pos:line="422" pos:column="31">)<pos:position pos:line="422" pos:column="32"/></operator><call><name pos:line="422" pos:column="32">lookup<pos:position pos:line="422" pos:column="38"/></name><argument_list pos:line="422" pos:column="38">(<argument><expr><operator pos:line="422" pos:column="39">&amp;<pos:position pos:line="422" pos:column="44"/></operator><name><name pos:line="422" pos:column="40">dtd<pos:position pos:line="422" pos:column="43"/></name><operator pos:line="422" pos:column="43">.<pos:position pos:line="422" pos:column="44"/></operator><name pos:line="422" pos:column="44">paramEntities<pos:position pos:line="422" pos:column="57"/></name></name></expr></argument>,
				      <argument><expr><name pos:line="423" pos:column="39">name<pos:position pos:line="423" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="423" pos:column="45">sizeof<argument_list pos:line="423" pos:column="51">(<argument><expr><name pos:line="423" pos:column="52">ENTITY<pos:position pos:line="423" pos:column="58"/></name></expr></argument>)<pos:position pos:line="423" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="423" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="423" pos:column="61"/></expr_stmt>
	<if pos:line="424" pos:column="9">if <condition pos:line="424" pos:column="12">(<expr><operator pos:line="424" pos:column="13">!<pos:position pos:line="424" pos:column="14"/></operator><name pos:line="424" pos:column="14">declEntity<pos:position pos:line="424" pos:column="24"/></name></expr>)<pos:position pos:line="424" pos:column="25"/></condition><then pos:line="424" pos:column="25">
	  <block type="pseudo"><return pos:line="425" pos:column="11">return <expr><name pos:line="425" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="425" pos:column="37"/></name></expr>;<pos:position pos:line="425" pos:column="38"/></return></block></then></if>
	<if pos:line="426" pos:column="9">if <condition pos:line="426" pos:column="12">(<expr><name><name pos:line="426" pos:column="13">declEntity<pos:position pos:line="426" pos:column="23"/></name><operator pos:line="426" pos:column="23">-&gt;<pos:position pos:line="426" pos:column="28"/></operator><name pos:line="426" pos:column="25">name<pos:position pos:line="426" pos:column="29"/></name></name> <operator pos:line="426" pos:column="30">!=<pos:position pos:line="426" pos:column="32"/></operator> <name pos:line="426" pos:column="33">name<pos:position pos:line="426" pos:column="37"/></name></expr>)<pos:position pos:line="426" pos:column="38"/></condition><then pos:line="426" pos:column="38"> <block pos:line="426" pos:column="39">{
	  <expr_stmt><expr><call><name pos:line="427" pos:column="11">poolDiscard<pos:position pos:line="427" pos:column="22"/></name><argument_list pos:line="427" pos:column="22">(<argument><expr><operator pos:line="427" pos:column="23">&amp;<pos:position pos:line="427" pos:column="28"/></operator><name><name pos:line="427" pos:column="24">dtd<pos:position pos:line="427" pos:column="27"/></name><operator pos:line="427" pos:column="27">.<pos:position pos:line="427" pos:column="28"/></operator><name pos:line="427" pos:column="28">pool<pos:position pos:line="427" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="427" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="427" pos:column="34"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="428" pos:column="11">declEntity<pos:position pos:line="428" pos:column="21"/></name> <operator pos:line="428" pos:column="22">=<pos:position pos:line="428" pos:column="23"/></operator> <literal type="number" pos:line="428" pos:column="24">0<pos:position pos:line="428" pos:column="25"/></literal></expr>;<pos:position pos:line="428" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="429" pos:column="10"/></block></then>
	<else pos:line="430" pos:column="9">else <block pos:line="430" pos:column="14">{
	  <expr_stmt><expr><call><name pos:line="431" pos:column="11">poolFinish<pos:position pos:line="431" pos:column="21"/></name><argument_list pos:line="431" pos:column="21">(<argument><expr><operator pos:line="431" pos:column="22">&amp;<pos:position pos:line="431" pos:column="27"/></operator><name><name pos:line="431" pos:column="23">dtd<pos:position pos:line="431" pos:column="26"/></name><operator pos:line="431" pos:column="26">.<pos:position pos:line="431" pos:column="27"/></operator><name pos:line="431" pos:column="27">pool<pos:position pos:line="431" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="431" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="431" pos:column="33"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="432" pos:column="11">declEntity<pos:position pos:line="432" pos:column="21"/></name><operator pos:line="432" pos:column="21">-&gt;<pos:position pos:line="432" pos:column="26"/></operator><name pos:line="432" pos:column="23">publicId<pos:position pos:line="432" pos:column="31"/></name></name> <operator pos:line="432" pos:column="32">=<pos:position pos:line="432" pos:column="33"/></operator> <literal type="number" pos:line="432" pos:column="34">0<pos:position pos:line="432" pos:column="35"/></literal></expr>;<pos:position pos:line="432" pos:column="36"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="433" pos:column="11">declEntity<pos:position pos:line="433" pos:column="21"/></name><operator pos:line="433" pos:column="21">-&gt;<pos:position pos:line="433" pos:column="26"/></operator><name pos:line="433" pos:column="23">is_param<pos:position pos:line="433" pos:column="31"/></name></name> <operator pos:line="433" pos:column="32">=<pos:position pos:line="433" pos:column="33"/></operator> <literal type="number" pos:line="433" pos:column="34">1<pos:position pos:line="433" pos:column="35"/></literal></expr>;<pos:position pos:line="433" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="434" pos:column="10"/></block></else></if>
      }<pos:position pos:line="435" pos:column="8"/></block></then></if>
<cpp:else pos:line="436" pos:column="1">#<cpp:directive pos:line="436" pos:column="2">else<pos:position pos:line="436" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="436" pos:column="7">/* not XML_DTD */</comment>
      <expr_stmt><expr><name pos:line="437" pos:column="7">declEntity<pos:position pos:line="437" pos:column="17"/></name> <operator pos:line="437" pos:column="18">=<pos:position pos:line="437" pos:column="19"/></operator> <literal type="number" pos:line="437" pos:column="20">0<pos:position pos:line="437" pos:column="21"/></literal></expr>;<pos:position pos:line="437" pos:column="22"/></expr_stmt>
<cpp:endif pos:line="438" pos:column="1">#<cpp:directive pos:line="438" pos:column="2">endif<pos:position pos:line="438" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="438" pos:column="8">/* not XML_DTD */</comment>
      <break pos:line="439" pos:column="7">break;<pos:position pos:line="439" pos:column="13"/></break>
    <case pos:line="440" pos:column="5">case <expr><name pos:line="440" pos:column="10">XML_ROLE_NOTATION_NAME<pos:position pos:line="440" pos:column="32"/></name></expr>:<pos:position pos:line="440" pos:column="33"/></case>
      <expr_stmt><expr><name pos:line="441" pos:column="7">declNotationPublicId<pos:position pos:line="441" pos:column="27"/></name> <operator pos:line="441" pos:column="28">=<pos:position pos:line="441" pos:column="29"/></operator> <literal type="number" pos:line="441" pos:column="30">0<pos:position pos:line="441" pos:column="31"/></literal></expr>;<pos:position pos:line="441" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name pos:line="442" pos:column="7">declNotationName<pos:position pos:line="442" pos:column="23"/></name> <operator pos:line="442" pos:column="24">=<pos:position pos:line="442" pos:column="25"/></operator> <literal type="number" pos:line="442" pos:column="26">0<pos:position pos:line="442" pos:column="27"/></literal></expr>;<pos:position pos:line="442" pos:column="28"/></expr_stmt>
      <if pos:line="443" pos:column="7">if <condition pos:line="443" pos:column="10">(<expr><name pos:line="443" pos:column="11">notationDeclHandler<pos:position pos:line="443" pos:column="30"/></name></expr>)<pos:position pos:line="443" pos:column="31"/></condition><then pos:line="443" pos:column="31"> <block pos:line="443" pos:column="32">{
	<expr_stmt><expr><name pos:line="444" pos:column="9">declNotationName<pos:position pos:line="444" pos:column="25"/></name> <operator pos:line="444" pos:column="26">=<pos:position pos:line="444" pos:column="27"/></operator> <call><name pos:line="444" pos:column="28">poolStoreString<pos:position pos:line="444" pos:column="43"/></name><argument_list pos:line="444" pos:column="43">(<argument><expr><operator pos:line="444" pos:column="44">&amp;<pos:position pos:line="444" pos:column="49"/></operator><name pos:line="444" pos:column="45">tempPool<pos:position pos:line="444" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="444" pos:column="55">enc<pos:position pos:line="444" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="444" pos:column="60">s<pos:position pos:line="444" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="444" pos:column="63">next<pos:position pos:line="444" pos:column="67"/></name></expr></argument>)<pos:position pos:line="444" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="444" pos:column="69"/></expr_stmt>
	<if pos:line="445" pos:column="9">if <condition pos:line="445" pos:column="12">(<expr><operator pos:line="445" pos:column="13">!<pos:position pos:line="445" pos:column="14"/></operator><name pos:line="445" pos:column="14">declNotationName<pos:position pos:line="445" pos:column="30"/></name></expr>)<pos:position pos:line="445" pos:column="31"/></condition><then pos:line="445" pos:column="31">
	  <block type="pseudo"><return pos:line="446" pos:column="11">return <expr><name pos:line="446" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="446" pos:column="37"/></name></expr>;<pos:position pos:line="446" pos:column="38"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="447" pos:column="9">poolFinish<pos:position pos:line="447" pos:column="19"/></name><argument_list pos:line="447" pos:column="19">(<argument><expr><operator pos:line="447" pos:column="20">&amp;<pos:position pos:line="447" pos:column="25"/></operator><name pos:line="447" pos:column="21">tempPool<pos:position pos:line="447" pos:column="29"/></name></expr></argument>)<pos:position pos:line="447" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="447" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="448" pos:column="8"/></block></then></if>
      <break pos:line="449" pos:column="7">break;<pos:position pos:line="449" pos:column="13"/></break>
    <case pos:line="450" pos:column="5">case <expr><name pos:line="450" pos:column="10">XML_ROLE_NOTATION_PUBLIC_ID<pos:position pos:line="450" pos:column="37"/></name></expr>:<pos:position pos:line="450" pos:column="38"/></case>
      <if pos:line="451" pos:column="7">if <condition pos:line="451" pos:column="10">(<expr><operator pos:line="451" pos:column="11">!<pos:position pos:line="451" pos:column="12"/></operator><call><name pos:line="451" pos:column="12">XmlIsPublicId<pos:position pos:line="451" pos:column="25"/></name><argument_list pos:line="451" pos:column="25">(<argument><expr><name pos:line="451" pos:column="26">enc<pos:position pos:line="451" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="451" pos:column="31">s<pos:position pos:line="451" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="451" pos:column="34">next<pos:position pos:line="451" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="451" pos:column="40">eventPP<pos:position pos:line="451" pos:column="47"/></name></expr></argument>)<pos:position pos:line="451" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="451" pos:column="49"/></condition><then pos:line="451" pos:column="49">
	<block type="pseudo"><return pos:line="452" pos:column="9">return <expr><name pos:line="452" pos:column="16">XML_ERROR_SYNTAX<pos:position pos:line="452" pos:column="32"/></name></expr>;<pos:position pos:line="452" pos:column="33"/></return></block></then></if>
      <if pos:line="453" pos:column="7">if <condition pos:line="453" pos:column="10">(<expr><name pos:line="453" pos:column="11">declNotationName<pos:position pos:line="453" pos:column="27"/></name></expr>)<pos:position pos:line="453" pos:column="28"/></condition><then pos:line="453" pos:column="28"> <block pos:line="453" pos:column="29">{
	<decl_stmt><decl><type><name pos:line="454" pos:column="9">XML_Char<pos:position pos:line="454" pos:column="17"/></name> <modifier pos:line="454" pos:column="18">*<pos:position pos:line="454" pos:column="19"/></modifier></type><name pos:line="454" pos:column="19">tem<pos:position pos:line="454" pos:column="22"/></name> <init pos:line="454" pos:column="23">= <expr><call><name pos:line="454" pos:column="25">poolStoreString<pos:position pos:line="454" pos:column="40"/></name><argument_list pos:line="454" pos:column="40">(<argument><expr><operator pos:line="454" pos:column="41">&amp;<pos:position pos:line="454" pos:column="46"/></operator><name pos:line="454" pos:column="42">tempPool<pos:position pos:line="454" pos:column="50"/></name></expr></argument>,
	                                <argument><expr><name pos:line="455" pos:column="41">enc<pos:position pos:line="455" pos:column="44"/></name></expr></argument>,
					<argument><expr><name pos:line="456" pos:column="41">s<pos:position pos:line="456" pos:column="42"/></name> <operator pos:line="456" pos:column="43">+<pos:position pos:line="456" pos:column="44"/></operator> <name><name pos:line="456" pos:column="45">enc<pos:position pos:line="456" pos:column="48"/></name><operator pos:line="456" pos:column="48">-&gt;<pos:position pos:line="456" pos:column="53"/></operator><name pos:line="456" pos:column="50">minBytesPerChar<pos:position pos:line="456" pos:column="65"/></name></name></expr></argument>,
	  				<argument><expr><name pos:line="457" pos:column="41">next<pos:position pos:line="457" pos:column="45"/></name> <operator pos:line="457" pos:column="46">-<pos:position pos:line="457" pos:column="47"/></operator> <name><name pos:line="457" pos:column="48">enc<pos:position pos:line="457" pos:column="51"/></name><operator pos:line="457" pos:column="51">-&gt;<pos:position pos:line="457" pos:column="56"/></operator><name pos:line="457" pos:column="53">minBytesPerChar<pos:position pos:line="457" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="457" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="457" pos:column="70"/></decl_stmt>
	<if pos:line="458" pos:column="9">if <condition pos:line="458" pos:column="12">(<expr><operator pos:line="458" pos:column="13">!<pos:position pos:line="458" pos:column="14"/></operator><name pos:line="458" pos:column="14">tem<pos:position pos:line="458" pos:column="17"/></name></expr>)<pos:position pos:line="458" pos:column="18"/></condition><then pos:line="458" pos:column="18">
	  <block type="pseudo"><return pos:line="459" pos:column="11">return <expr><name pos:line="459" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="459" pos:column="37"/></name></expr>;<pos:position pos:line="459" pos:column="38"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="460" pos:column="9">normalizePublicId<pos:position pos:line="460" pos:column="26"/></name><argument_list pos:line="460" pos:column="26">(<argument><expr><name pos:line="460" pos:column="27">tem<pos:position pos:line="460" pos:column="30"/></name></expr></argument>)<pos:position pos:line="460" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="460" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="461" pos:column="9">declNotationPublicId<pos:position pos:line="461" pos:column="29"/></name> <operator pos:line="461" pos:column="30">=<pos:position pos:line="461" pos:column="31"/></operator> <name pos:line="461" pos:column="32">tem<pos:position pos:line="461" pos:column="35"/></name></expr>;<pos:position pos:line="461" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="462" pos:column="9">poolFinish<pos:position pos:line="462" pos:column="19"/></name><argument_list pos:line="462" pos:column="19">(<argument><expr><operator pos:line="462" pos:column="20">&amp;<pos:position pos:line="462" pos:column="25"/></operator><name pos:line="462" pos:column="21">tempPool<pos:position pos:line="462" pos:column="29"/></name></expr></argument>)<pos:position pos:line="462" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="462" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="463" pos:column="8"/></block></then></if>
      <break pos:line="464" pos:column="7">break;<pos:position pos:line="464" pos:column="13"/></break>
    <case pos:line="465" pos:column="5">case <expr><name pos:line="465" pos:column="10">XML_ROLE_NOTATION_SYSTEM_ID<pos:position pos:line="465" pos:column="37"/></name></expr>:<pos:position pos:line="465" pos:column="38"/></case>
      <if pos:line="466" pos:column="7">if <condition pos:line="466" pos:column="10">(<expr><name pos:line="466" pos:column="11">declNotationName<pos:position pos:line="466" pos:column="27"/></name> <operator pos:line="466" pos:column="28">&amp;&amp;<pos:position pos:line="466" pos:column="38"/></operator> <name pos:line="466" pos:column="31">notationDeclHandler<pos:position pos:line="466" pos:column="50"/></name></expr>)<pos:position pos:line="466" pos:column="51"/></condition><then pos:line="466" pos:column="51"> <block pos:line="466" pos:column="52">{
	<decl_stmt><decl><type><specifier pos:line="467" pos:column="9">const<pos:position pos:line="467" pos:column="14"/></specifier> <name pos:line="467" pos:column="15">XML_Char<pos:position pos:line="467" pos:column="23"/></name> <modifier pos:line="467" pos:column="24">*<pos:position pos:line="467" pos:column="25"/></modifier></type><name pos:line="467" pos:column="25">systemId<pos:position pos:line="467" pos:column="33"/></name>
	  <init pos:line="468" pos:column="11">= <expr><call><name pos:line="468" pos:column="13">poolStoreString<pos:position pos:line="468" pos:column="28"/></name><argument_list pos:line="468" pos:column="28">(<argument><expr><operator pos:line="468" pos:column="29">&amp;<pos:position pos:line="468" pos:column="34"/></operator><name pos:line="468" pos:column="30">tempPool<pos:position pos:line="468" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="468" pos:column="40">enc<pos:position pos:line="468" pos:column="43"/></name></expr></argument>,
			    <argument><expr><name pos:line="469" pos:column="29">s<pos:position pos:line="469" pos:column="30"/></name> <operator pos:line="469" pos:column="31">+<pos:position pos:line="469" pos:column="32"/></operator> <name><name pos:line="469" pos:column="33">enc<pos:position pos:line="469" pos:column="36"/></name><operator pos:line="469" pos:column="36">-&gt;<pos:position pos:line="469" pos:column="41"/></operator><name pos:line="469" pos:column="38">minBytesPerChar<pos:position pos:line="469" pos:column="53"/></name></name></expr></argument>,
	  		    <argument><expr><name pos:line="470" pos:column="29">next<pos:position pos:line="470" pos:column="33"/></name> <operator pos:line="470" pos:column="34">-<pos:position pos:line="470" pos:column="35"/></operator> <name><name pos:line="470" pos:column="36">enc<pos:position pos:line="470" pos:column="39"/></name><operator pos:line="470" pos:column="39">-&gt;<pos:position pos:line="470" pos:column="44"/></operator><name pos:line="470" pos:column="41">minBytesPerChar<pos:position pos:line="470" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="470" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="470" pos:column="58"/></decl_stmt>
	<if pos:line="471" pos:column="9">if <condition pos:line="471" pos:column="12">(<expr><operator pos:line="471" pos:column="13">!<pos:position pos:line="471" pos:column="14"/></operator><name pos:line="471" pos:column="14">systemId<pos:position pos:line="471" pos:column="22"/></name></expr>)<pos:position pos:line="471" pos:column="23"/></condition><then pos:line="471" pos:column="23">
	  <block type="pseudo"><return pos:line="472" pos:column="11">return <expr><name pos:line="472" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="472" pos:column="37"/></name></expr>;<pos:position pos:line="472" pos:column="38"/></return></block></then></if>
	<expr_stmt><expr><operator pos:line="473" pos:column="9">*<pos:position pos:line="473" pos:column="10"/></operator><name pos:line="473" pos:column="10">eventEndPP<pos:position pos:line="473" pos:column="20"/></name> <operator pos:line="473" pos:column="21">=<pos:position pos:line="473" pos:column="22"/></operator> <name pos:line="473" pos:column="23">s<pos:position pos:line="473" pos:column="24"/></name></expr>;<pos:position pos:line="473" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="474" pos:column="9">notationDeclHandler<pos:position pos:line="474" pos:column="28"/></name><argument_list pos:line="474" pos:column="28">(<argument><expr><name pos:line="474" pos:column="29">handlerArg<pos:position pos:line="474" pos:column="39"/></name></expr></argument>,
			    <argument><expr><name pos:line="475" pos:column="29">declNotationName<pos:position pos:line="475" pos:column="45"/></name></expr></argument>,
			    <argument><expr><name pos:line="476" pos:column="29">curBase<pos:position pos:line="476" pos:column="36"/></name></expr></argument>,
			    <argument><expr><name pos:line="477" pos:column="29">systemId<pos:position pos:line="477" pos:column="37"/></name></expr></argument>,
			    <argument><expr><name pos:line="478" pos:column="29">declNotationPublicId<pos:position pos:line="478" pos:column="49"/></name></expr></argument>)<pos:position pos:line="478" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="478" pos:column="51"/></expr_stmt>
      }<pos:position pos:line="479" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="480" pos:column="7">poolClear<pos:position pos:line="480" pos:column="16"/></name><argument_list pos:line="480" pos:column="16">(<argument><expr><operator pos:line="480" pos:column="17">&amp;<pos:position pos:line="480" pos:column="22"/></operator><name pos:line="480" pos:column="18">tempPool<pos:position pos:line="480" pos:column="26"/></name></expr></argument>)<pos:position pos:line="480" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="480" pos:column="28"/></expr_stmt>
      <break pos:line="481" pos:column="7">break;<pos:position pos:line="481" pos:column="13"/></break>
    <case pos:line="482" pos:column="5">case <expr><name pos:line="482" pos:column="10">XML_ROLE_NOTATION_NO_SYSTEM_ID<pos:position pos:line="482" pos:column="40"/></name></expr>:<pos:position pos:line="482" pos:column="41"/></case>
      <if pos:line="483" pos:column="7">if <condition pos:line="483" pos:column="10">(<expr><name pos:line="483" pos:column="11">declNotationPublicId<pos:position pos:line="483" pos:column="31"/></name> <operator pos:line="483" pos:column="32">&amp;&amp;<pos:position pos:line="483" pos:column="42"/></operator> <name pos:line="483" pos:column="35">notationDeclHandler<pos:position pos:line="483" pos:column="54"/></name></expr>)<pos:position pos:line="483" pos:column="55"/></condition><then pos:line="483" pos:column="55"> <block pos:line="483" pos:column="56">{
	<expr_stmt><expr><operator pos:line="484" pos:column="9">*<pos:position pos:line="484" pos:column="10"/></operator><name pos:line="484" pos:column="10">eventEndPP<pos:position pos:line="484" pos:column="20"/></name> <operator pos:line="484" pos:column="21">=<pos:position pos:line="484" pos:column="22"/></operator> <name pos:line="484" pos:column="23">s<pos:position pos:line="484" pos:column="24"/></name></expr>;<pos:position pos:line="484" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="485" pos:column="9">notationDeclHandler<pos:position pos:line="485" pos:column="28"/></name><argument_list pos:line="485" pos:column="28">(<argument><expr><name pos:line="485" pos:column="29">handlerArg<pos:position pos:line="485" pos:column="39"/></name></expr></argument>,
			    <argument><expr><name pos:line="486" pos:column="29">declNotationName<pos:position pos:line="486" pos:column="45"/></name></expr></argument>,
			    <argument><expr><name pos:line="487" pos:column="29">curBase<pos:position pos:line="487" pos:column="36"/></name></expr></argument>,
			    <argument><expr><literal type="number" pos:line="488" pos:column="29">0<pos:position pos:line="488" pos:column="30"/></literal></expr></argument>,
			    <argument><expr><name pos:line="489" pos:column="29">declNotationPublicId<pos:position pos:line="489" pos:column="49"/></name></expr></argument>)<pos:position pos:line="489" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="489" pos:column="51"/></expr_stmt>
      }<pos:position pos:line="490" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="491" pos:column="7">poolClear<pos:position pos:line="491" pos:column="16"/></name><argument_list pos:line="491" pos:column="16">(<argument><expr><operator pos:line="491" pos:column="17">&amp;<pos:position pos:line="491" pos:column="22"/></operator><name pos:line="491" pos:column="18">tempPool<pos:position pos:line="491" pos:column="26"/></name></expr></argument>)<pos:position pos:line="491" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="491" pos:column="28"/></expr_stmt>
      <break pos:line="492" pos:column="7">break;<pos:position pos:line="492" pos:column="13"/></break>
    <case pos:line="493" pos:column="5">case <expr><name pos:line="493" pos:column="10">XML_ROLE_ERROR<pos:position pos:line="493" pos:column="24"/></name></expr>:<pos:position pos:line="493" pos:column="25"/></case>
      <switch pos:line="494" pos:column="7">switch <condition pos:line="494" pos:column="14">(<expr><name pos:line="494" pos:column="15">tok<pos:position pos:line="494" pos:column="18"/></name></expr>)<pos:position pos:line="494" pos:column="19"/></condition> <block pos:line="494" pos:column="20">{
      <case pos:line="495" pos:column="7">case <expr><name pos:line="495" pos:column="12">XML_TOK_PARAM_ENTITY_REF<pos:position pos:line="495" pos:column="36"/></name></expr>:<pos:position pos:line="495" pos:column="37"/></case>
	<return pos:line="496" pos:column="9">return <expr><name pos:line="496" pos:column="16">XML_ERROR_PARAM_ENTITY_REF<pos:position pos:line="496" pos:column="42"/></name></expr>;<pos:position pos:line="496" pos:column="43"/></return>
      <case pos:line="497" pos:column="7">case <expr><name pos:line="497" pos:column="12">XML_TOK_XML_DECL<pos:position pos:line="497" pos:column="28"/></name></expr>:<pos:position pos:line="497" pos:column="29"/></case>
	<return pos:line="498" pos:column="9">return <expr><name pos:line="498" pos:column="16">XML_ERROR_MISPLACED_XML_PI<pos:position pos:line="498" pos:column="42"/></name></expr>;<pos:position pos:line="498" pos:column="43"/></return>
      <default pos:line="499" pos:column="7">default:<pos:position pos:line="499" pos:column="15"/></default>
	<return pos:line="500" pos:column="9">return <expr><name pos:line="500" pos:column="16">XML_ERROR_SYNTAX<pos:position pos:line="500" pos:column="32"/></name></expr>;<pos:position pos:line="500" pos:column="33"/></return>
      }<pos:position pos:line="501" pos:column="8"/></block></switch>
<cpp:ifdef pos:line="502" pos:column="1">#<cpp:directive pos:line="502" pos:column="2">ifdef<pos:position pos:line="502" pos:column="7"/></cpp:directive> <name pos:line="502" pos:column="8">XML_DTD<pos:position pos:line="502" pos:column="15"/></name></cpp:ifdef>
    <case pos:line="503" pos:column="5">case <expr><name pos:line="503" pos:column="10">XML_ROLE_IGNORE_SECT<pos:position pos:line="503" pos:column="30"/></name></expr>:<pos:position pos:line="503" pos:column="31"/></case>
      <block pos:line="504" pos:column="7">{
	<decl_stmt><decl><type><name><name pos:line="505" pos:column="9">enum<pos:position pos:line="505" pos:column="13"/></name> <name pos:line="505" pos:column="14">XML_Error<pos:position pos:line="505" pos:column="23"/></name></name></type> <name pos:line="505" pos:column="24">result<pos:position pos:line="505" pos:column="30"/></name></decl>;<pos:position pos:line="505" pos:column="31"/></decl_stmt>
	<if pos:line="506" pos:column="9">if <condition pos:line="506" pos:column="12">(<expr><name pos:line="506" pos:column="13">defaultHandler<pos:position pos:line="506" pos:column="27"/></name></expr>)<pos:position pos:line="506" pos:column="28"/></condition><then pos:line="506" pos:column="28">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="507" pos:column="11">reportDefault<pos:position pos:line="507" pos:column="24"/></name><argument_list pos:line="507" pos:column="24">(<argument><expr><name pos:line="507" pos:column="25">parser<pos:position pos:line="507" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="507" pos:column="33">enc<pos:position pos:line="507" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="507" pos:column="38">s<pos:position pos:line="507" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="507" pos:column="41">next<pos:position pos:line="507" pos:column="45"/></name></expr></argument>)<pos:position pos:line="507" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="507" pos:column="47"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="508" pos:column="9">result<pos:position pos:line="508" pos:column="15"/></name> <operator pos:line="508" pos:column="16">=<pos:position pos:line="508" pos:column="17"/></operator> <call><name pos:line="508" pos:column="18">doIgnoreSection<pos:position pos:line="508" pos:column="33"/></name><argument_list pos:line="508" pos:column="33">(<argument><expr><name pos:line="508" pos:column="34">parser<pos:position pos:line="508" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="508" pos:column="42">enc<pos:position pos:line="508" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="508" pos:column="47">&amp;<pos:position pos:line="508" pos:column="52"/></operator><name pos:line="508" pos:column="48">next<pos:position pos:line="508" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="508" pos:column="54">end<pos:position pos:line="508" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="508" pos:column="59">nextPtr<pos:position pos:line="508" pos:column="66"/></name></expr></argument>)<pos:position pos:line="508" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="508" pos:column="68"/></expr_stmt>
	<if pos:line="509" pos:column="9">if <condition pos:line="509" pos:column="12">(<expr><operator pos:line="509" pos:column="13">!<pos:position pos:line="509" pos:column="14"/></operator><name pos:line="509" pos:column="14">next<pos:position pos:line="509" pos:column="18"/></name></expr>)<pos:position pos:line="509" pos:column="19"/></condition><then pos:line="509" pos:column="19"> <block pos:line="509" pos:column="20">{
	  <expr_stmt><expr><name pos:line="510" pos:column="11">processor<pos:position pos:line="510" pos:column="20"/></name> <operator pos:line="510" pos:column="21">=<pos:position pos:line="510" pos:column="22"/></operator> <name pos:line="510" pos:column="23">ignoreSectionProcessor<pos:position pos:line="510" pos:column="45"/></name></expr>;<pos:position pos:line="510" pos:column="46"/></expr_stmt>
	  <return pos:line="511" pos:column="11">return <expr><name pos:line="511" pos:column="18">result<pos:position pos:line="511" pos:column="24"/></name></expr>;<pos:position pos:line="511" pos:column="25"/></return>
	}<pos:position pos:line="512" pos:column="10"/></block></then></if>
      }<pos:position pos:line="513" pos:column="8"/></block>
      <break pos:line="514" pos:column="7">break;<pos:position pos:line="514" pos:column="13"/></break>
<cpp:endif pos:line="515" pos:column="1">#<cpp:directive pos:line="515" pos:column="2">endif<pos:position pos:line="515" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="515" pos:column="8">/* XML_DTD */</comment>
    <case pos:line="516" pos:column="5">case <expr><name pos:line="516" pos:column="10">XML_ROLE_GROUP_OPEN<pos:position pos:line="516" pos:column="29"/></name></expr>:<pos:position pos:line="516" pos:column="30"/></case>
      <if pos:line="517" pos:column="7">if <condition pos:line="517" pos:column="10">(<expr><name><name pos:line="517" pos:column="11">prologState<pos:position pos:line="517" pos:column="22"/></name><operator pos:line="517" pos:column="22">.<pos:position pos:line="517" pos:column="23"/></operator><name pos:line="517" pos:column="23">level<pos:position pos:line="517" pos:column="28"/></name></name> <operator pos:line="517" pos:column="29">&gt;=<pos:position pos:line="517" pos:column="34"/></operator> <name pos:line="517" pos:column="32">groupSize<pos:position pos:line="517" pos:column="41"/></name></expr>)<pos:position pos:line="517" pos:column="42"/></condition><then pos:line="517" pos:column="42"> <block pos:line="517" pos:column="43">{
	<if pos:line="518" pos:column="9">if <condition pos:line="518" pos:column="12">(<expr><name pos:line="518" pos:column="13">groupSize<pos:position pos:line="518" pos:column="22"/></name></expr>)<pos:position pos:line="518" pos:column="23"/></condition><then pos:line="518" pos:column="23"> <block pos:line="518" pos:column="24">{
	  <expr_stmt><expr><name pos:line="519" pos:column="11">groupConnector<pos:position pos:line="519" pos:column="25"/></name> <operator pos:line="519" pos:column="26">=<pos:position pos:line="519" pos:column="27"/></operator> <call><name pos:line="519" pos:column="28">REALLOC<pos:position pos:line="519" pos:column="35"/></name><argument_list pos:line="519" pos:column="35">(<argument><expr><name pos:line="519" pos:column="36">groupConnector<pos:position pos:line="519" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="519" pos:column="52">groupSize<pos:position pos:line="519" pos:column="61"/></name> <operator pos:line="519" pos:column="62">*=<pos:position pos:line="519" pos:column="64"/></operator> <literal type="number" pos:line="519" pos:column="65">2<pos:position pos:line="519" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="519" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="519" pos:column="68"/></expr_stmt>
	  <if pos:line="520" pos:column="11">if <condition pos:line="520" pos:column="14">(<expr><name><name pos:line="520" pos:column="15">dtd<pos:position pos:line="520" pos:column="18"/></name><operator pos:line="520" pos:column="18">.<pos:position pos:line="520" pos:column="19"/></operator><name pos:line="520" pos:column="19">scaffIndex<pos:position pos:line="520" pos:column="29"/></name></name></expr>)<pos:position pos:line="520" pos:column="30"/></condition><then pos:line="520" pos:column="30">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="521" pos:column="13">dtd<pos:position pos:line="521" pos:column="16"/></name><operator pos:line="521" pos:column="16">.<pos:position pos:line="521" pos:column="17"/></operator><name pos:line="521" pos:column="17">scaffIndex<pos:position pos:line="521" pos:column="27"/></name></name> <operator pos:line="521" pos:column="28">=<pos:position pos:line="521" pos:column="29"/></operator> <call><name pos:line="521" pos:column="30">REALLOC<pos:position pos:line="521" pos:column="37"/></name><argument_list pos:line="521" pos:column="37">(<argument><expr><name><name pos:line="521" pos:column="38">dtd<pos:position pos:line="521" pos:column="41"/></name><operator pos:line="521" pos:column="41">.<pos:position pos:line="521" pos:column="42"/></operator><name pos:line="521" pos:column="42">scaffIndex<pos:position pos:line="521" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="521" pos:column="54">groupSize<pos:position pos:line="521" pos:column="63"/></name> <operator pos:line="521" pos:column="64">*<pos:position pos:line="521" pos:column="65"/></operator> <sizeof pos:line="521" pos:column="66">sizeof<argument_list pos:line="521" pos:column="72">(<argument><expr><name pos:line="521" pos:column="73">int<pos:position pos:line="521" pos:column="76"/></name></expr></argument>)<pos:position pos:line="521" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="521" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="521" pos:column="79"/></expr_stmt></block></then></if>
	}<pos:position pos:line="522" pos:column="10"/></block></then>
	<else pos:line="523" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><name pos:line="524" pos:column="11">groupConnector<pos:position pos:line="524" pos:column="25"/></name> <operator pos:line="524" pos:column="26">=<pos:position pos:line="524" pos:column="27"/></operator> <call><name pos:line="524" pos:column="28">MALLOC<pos:position pos:line="524" pos:column="34"/></name><argument_list pos:line="524" pos:column="34">(<argument><expr><name pos:line="524" pos:column="35">groupSize<pos:position pos:line="524" pos:column="44"/></name> <operator pos:line="524" pos:column="45">=<pos:position pos:line="524" pos:column="46"/></operator> <literal type="number" pos:line="524" pos:column="47">32<pos:position pos:line="524" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="524" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="524" pos:column="51"/></expr_stmt></block></else></if>
	<if pos:line="525" pos:column="9">if <condition pos:line="525" pos:column="12">(<expr><operator pos:line="525" pos:column="13">!<pos:position pos:line="525" pos:column="14"/></operator><name pos:line="525" pos:column="14">groupConnector<pos:position pos:line="525" pos:column="28"/></name></expr>)<pos:position pos:line="525" pos:column="29"/></condition><then pos:line="525" pos:column="29">
	  <block type="pseudo"><return pos:line="526" pos:column="11">return <expr><name pos:line="526" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="526" pos:column="37"/></name></expr>;<pos:position pos:line="526" pos:column="38"/></return></block></then></if>
      }<pos:position pos:line="527" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="528" pos:column="7">groupConnector<pos:position pos:line="528" pos:column="21"/></name><index pos:line="528" pos:column="21">[<expr><name><name pos:line="528" pos:column="22">prologState<pos:position pos:line="528" pos:column="33"/></name><operator pos:line="528" pos:column="33">.<pos:position pos:line="528" pos:column="34"/></operator><name pos:line="528" pos:column="34">level<pos:position pos:line="528" pos:column="39"/></name></name></expr>]<pos:position pos:line="528" pos:column="40"/></index></name> <operator pos:line="528" pos:column="41">=<pos:position pos:line="528" pos:column="42"/></operator> <literal type="number" pos:line="528" pos:column="43">0<pos:position pos:line="528" pos:column="44"/></literal></expr>;<pos:position pos:line="528" pos:column="45"/></expr_stmt>
      <if pos:line="529" pos:column="7">if <condition pos:line="529" pos:column="10">(<expr><name><name pos:line="529" pos:column="11">dtd<pos:position pos:line="529" pos:column="14"/></name><operator pos:line="529" pos:column="14">.<pos:position pos:line="529" pos:column="15"/></operator><name pos:line="529" pos:column="15">in_eldecl<pos:position pos:line="529" pos:column="24"/></name></name></expr>)<pos:position pos:line="529" pos:column="25"/></condition><then pos:line="529" pos:column="25"> <block pos:line="529" pos:column="26">{
	<decl_stmt><decl><type><name pos:line="530" pos:column="9">int<pos:position pos:line="530" pos:column="12"/></name></type> <name pos:line="530" pos:column="13">myindex<pos:position pos:line="530" pos:column="20"/></name> <init pos:line="530" pos:column="21">= <expr><call><name pos:line="530" pos:column="23">nextScaffoldPart<pos:position pos:line="530" pos:column="39"/></name><argument_list pos:line="530" pos:column="39">(<argument><expr><name pos:line="530" pos:column="40">parser<pos:position pos:line="530" pos:column="46"/></name></expr></argument>)<pos:position pos:line="530" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="530" pos:column="48"/></decl_stmt>
	<if pos:line="531" pos:column="9">if <condition pos:line="531" pos:column="12">(<expr><name pos:line="531" pos:column="13">myindex<pos:position pos:line="531" pos:column="20"/></name> <operator pos:line="531" pos:column="21">&lt;<pos:position pos:line="531" pos:column="25"/></operator> <literal type="number" pos:line="531" pos:column="23">0<pos:position pos:line="531" pos:column="24"/></literal></expr>)<pos:position pos:line="531" pos:column="25"/></condition><then pos:line="531" pos:column="25">
	  <block type="pseudo"><return pos:line="532" pos:column="11">return <expr><name pos:line="532" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="532" pos:column="37"/></name></expr>;<pos:position pos:line="532" pos:column="38"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="533" pos:column="9">dtd<pos:position pos:line="533" pos:column="12"/></name><operator pos:line="533" pos:column="12">.<pos:position pos:line="533" pos:column="13"/></operator><name pos:line="533" pos:column="13">scaffIndex<pos:position pos:line="533" pos:column="23"/></name><index pos:line="533" pos:column="23">[<expr><name><name pos:line="533" pos:column="24">dtd<pos:position pos:line="533" pos:column="27"/></name><operator pos:line="533" pos:column="27">.<pos:position pos:line="533" pos:column="28"/></operator><name pos:line="533" pos:column="28">scaffLevel<pos:position pos:line="533" pos:column="38"/></name></name></expr>]<pos:position pos:line="533" pos:column="39"/></index></name> <operator pos:line="533" pos:column="40">=<pos:position pos:line="533" pos:column="41"/></operator> <name pos:line="533" pos:column="42">myindex<pos:position pos:line="533" pos:column="49"/></name></expr>;<pos:position pos:line="533" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="534" pos:column="9">dtd<pos:position pos:line="534" pos:column="12"/></name><operator pos:line="534" pos:column="12">.<pos:position pos:line="534" pos:column="13"/></operator><name pos:line="534" pos:column="13">scaffLevel<pos:position pos:line="534" pos:column="23"/></name></name><operator pos:line="534" pos:column="23">++<pos:position pos:line="534" pos:column="25"/></operator></expr>;<pos:position pos:line="534" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="535" pos:column="9">dtd<pos:position pos:line="535" pos:column="12"/></name><operator pos:line="535" pos:column="12">.<pos:position pos:line="535" pos:column="13"/></operator><name pos:line="535" pos:column="13">scaffold<pos:position pos:line="535" pos:column="21"/></name><index pos:line="535" pos:column="21">[<expr><name pos:line="535" pos:column="22">myindex<pos:position pos:line="535" pos:column="29"/></name></expr>]<pos:position pos:line="535" pos:column="30"/></index></name><operator pos:line="535" pos:column="30">.<pos:position pos:line="535" pos:column="31"/></operator><name pos:line="535" pos:column="31">type<pos:position pos:line="535" pos:column="35"/></name> <operator pos:line="535" pos:column="36">=<pos:position pos:line="535" pos:column="37"/></operator> <name pos:line="535" pos:column="38">XML_CTYPE_SEQ<pos:position pos:line="535" pos:column="51"/></name></expr>;<pos:position pos:line="535" pos:column="52"/></expr_stmt>
      }<pos:position pos:line="536" pos:column="8"/></block></then></if>
      <break pos:line="537" pos:column="7">break;<pos:position pos:line="537" pos:column="13"/></break>
    <case pos:line="538" pos:column="5">case <expr><name pos:line="538" pos:column="10">XML_ROLE_GROUP_SEQUENCE<pos:position pos:line="538" pos:column="33"/></name></expr>:<pos:position pos:line="538" pos:column="34"/></case>
      <if pos:line="539" pos:column="7">if <condition pos:line="539" pos:column="10">(<expr><name><name pos:line="539" pos:column="11">groupConnector<pos:position pos:line="539" pos:column="25"/></name><index pos:line="539" pos:column="25">[<expr><name><name pos:line="539" pos:column="26">prologState<pos:position pos:line="539" pos:column="37"/></name><operator pos:line="539" pos:column="37">.<pos:position pos:line="539" pos:column="38"/></operator><name pos:line="539" pos:column="38">level<pos:position pos:line="539" pos:column="43"/></name></name></expr>]<pos:position pos:line="539" pos:column="44"/></index></name> <operator pos:line="539" pos:column="45">==<pos:position pos:line="539" pos:column="47"/></operator> <literal type="char" pos:line="539" pos:column="48">'|'<pos:position pos:line="539" pos:column="51"/></literal></expr>)<pos:position pos:line="539" pos:column="52"/></condition><then pos:line="539" pos:column="52">
	<block type="pseudo"><return pos:line="540" pos:column="9">return <expr><name pos:line="540" pos:column="16">XML_ERROR_SYNTAX<pos:position pos:line="540" pos:column="32"/></name></expr>;<pos:position pos:line="540" pos:column="33"/></return></block></then></if>
      <expr_stmt><expr><name><name pos:line="541" pos:column="7">groupConnector<pos:position pos:line="541" pos:column="21"/></name><index pos:line="541" pos:column="21">[<expr><name><name pos:line="541" pos:column="22">prologState<pos:position pos:line="541" pos:column="33"/></name><operator pos:line="541" pos:column="33">.<pos:position pos:line="541" pos:column="34"/></operator><name pos:line="541" pos:column="34">level<pos:position pos:line="541" pos:column="39"/></name></name></expr>]<pos:position pos:line="541" pos:column="40"/></index></name> <operator pos:line="541" pos:column="41">=<pos:position pos:line="541" pos:column="42"/></operator> <literal type="char" pos:line="541" pos:column="43">','<pos:position pos:line="541" pos:column="46"/></literal></expr>;<pos:position pos:line="541" pos:column="47"/></expr_stmt>
      <break pos:line="542" pos:column="7">break;<pos:position pos:line="542" pos:column="13"/></break>
    <case pos:line="543" pos:column="5">case <expr><name pos:line="543" pos:column="10">XML_ROLE_GROUP_CHOICE<pos:position pos:line="543" pos:column="31"/></name></expr>:<pos:position pos:line="543" pos:column="32"/></case>
      <if pos:line="544" pos:column="7">if <condition pos:line="544" pos:column="10">(<expr><name><name pos:line="544" pos:column="11">groupConnector<pos:position pos:line="544" pos:column="25"/></name><index pos:line="544" pos:column="25">[<expr><name><name pos:line="544" pos:column="26">prologState<pos:position pos:line="544" pos:column="37"/></name><operator pos:line="544" pos:column="37">.<pos:position pos:line="544" pos:column="38"/></operator><name pos:line="544" pos:column="38">level<pos:position pos:line="544" pos:column="43"/></name></name></expr>]<pos:position pos:line="544" pos:column="44"/></index></name> <operator pos:line="544" pos:column="45">==<pos:position pos:line="544" pos:column="47"/></operator> <literal type="char" pos:line="544" pos:column="48">','<pos:position pos:line="544" pos:column="51"/></literal></expr>)<pos:position pos:line="544" pos:column="52"/></condition><then pos:line="544" pos:column="52">
	<block type="pseudo"><return pos:line="545" pos:column="9">return <expr><name pos:line="545" pos:column="16">XML_ERROR_SYNTAX<pos:position pos:line="545" pos:column="32"/></name></expr>;<pos:position pos:line="545" pos:column="33"/></return></block></then></if>
      <if pos:line="546" pos:column="7">if <condition pos:line="546" pos:column="10">(<expr><name><name pos:line="546" pos:column="11">dtd<pos:position pos:line="546" pos:column="14"/></name><operator pos:line="546" pos:column="14">.<pos:position pos:line="546" pos:column="15"/></operator><name pos:line="546" pos:column="15">in_eldecl<pos:position pos:line="546" pos:column="24"/></name></name>
	  <operator pos:line="547" pos:column="11">&amp;&amp;<pos:position pos:line="547" pos:column="21"/></operator> <operator pos:line="547" pos:column="14">!<pos:position pos:line="547" pos:column="15"/></operator> <name><name pos:line="547" pos:column="16">groupConnector<pos:position pos:line="547" pos:column="30"/></name><index pos:line="547" pos:column="30">[<expr><name><name pos:line="547" pos:column="31">prologState<pos:position pos:line="547" pos:column="42"/></name><operator pos:line="547" pos:column="42">.<pos:position pos:line="547" pos:column="43"/></operator><name pos:line="547" pos:column="43">level<pos:position pos:line="547" pos:column="48"/></name></name></expr>]<pos:position pos:line="547" pos:column="49"/></index></name>
	  <operator pos:line="548" pos:column="11">&amp;&amp;<pos:position pos:line="548" pos:column="21"/></operator> <name><name pos:line="548" pos:column="14">dtd<pos:position pos:line="548" pos:column="17"/></name><operator pos:line="548" pos:column="17">.<pos:position pos:line="548" pos:column="18"/></operator><name pos:line="548" pos:column="18">scaffold<pos:position pos:line="548" pos:column="26"/></name><index pos:line="548" pos:column="26">[<expr><name><name pos:line="548" pos:column="27">dtd<pos:position pos:line="548" pos:column="30"/></name><operator pos:line="548" pos:column="30">.<pos:position pos:line="548" pos:column="31"/></operator><name pos:line="548" pos:column="31">scaffIndex<pos:position pos:line="548" pos:column="41"/></name><index pos:line="548" pos:column="41">[<expr><name><name pos:line="548" pos:column="42">dtd<pos:position pos:line="548" pos:column="45"/></name><operator pos:line="548" pos:column="45">.<pos:position pos:line="548" pos:column="46"/></operator><name pos:line="548" pos:column="46">scaffLevel<pos:position pos:line="548" pos:column="56"/></name></name> <operator pos:line="548" pos:column="57">-<pos:position pos:line="548" pos:column="58"/></operator> <literal type="number" pos:line="548" pos:column="59">1<pos:position pos:line="548" pos:column="60"/></literal></expr>]<pos:position pos:line="548" pos:column="61"/></index></name></expr>]<pos:position pos:line="548" pos:column="62"/></index></name><operator pos:line="548" pos:column="62">.<pos:position pos:line="548" pos:column="63"/></operator><name pos:line="548" pos:column="63">type<pos:position pos:line="548" pos:column="67"/></name> <operator pos:line="548" pos:column="68">!=<pos:position pos:line="548" pos:column="70"/></operator> <name pos:line="548" pos:column="71">XML_CTYPE_MIXED<pos:position pos:line="548" pos:column="86"/></name></expr>
	  )<pos:position pos:line="549" pos:column="12"/></condition><then pos:line="549" pos:column="12"> <block pos:line="549" pos:column="13">{
	<expr_stmt><expr><name><name pos:line="550" pos:column="9">dtd<pos:position pos:line="550" pos:column="12"/></name><operator pos:line="550" pos:column="12">.<pos:position pos:line="550" pos:column="13"/></operator><name pos:line="550" pos:column="13">scaffold<pos:position pos:line="550" pos:column="21"/></name><index pos:line="550" pos:column="21">[<expr><name><name pos:line="550" pos:column="22">dtd<pos:position pos:line="550" pos:column="25"/></name><operator pos:line="550" pos:column="25">.<pos:position pos:line="550" pos:column="26"/></operator><name pos:line="550" pos:column="26">scaffIndex<pos:position pos:line="550" pos:column="36"/></name><index pos:line="550" pos:column="36">[<expr><name><name pos:line="550" pos:column="37">dtd<pos:position pos:line="550" pos:column="40"/></name><operator pos:line="550" pos:column="40">.<pos:position pos:line="550" pos:column="41"/></operator><name pos:line="550" pos:column="41">scaffLevel<pos:position pos:line="550" pos:column="51"/></name></name> <operator pos:line="550" pos:column="52">-<pos:position pos:line="550" pos:column="53"/></operator> <literal type="number" pos:line="550" pos:column="54">1<pos:position pos:line="550" pos:column="55"/></literal></expr>]<pos:position pos:line="550" pos:column="56"/></index></name></expr>]<pos:position pos:line="550" pos:column="57"/></index></name><operator pos:line="550" pos:column="57">.<pos:position pos:line="550" pos:column="58"/></operator><name pos:line="550" pos:column="58">type<pos:position pos:line="550" pos:column="62"/></name> <operator pos:line="550" pos:column="63">=<pos:position pos:line="550" pos:column="64"/></operator> <name pos:line="550" pos:column="65">XML_CTYPE_CHOICE<pos:position pos:line="550" pos:column="81"/></name></expr>;<pos:position pos:line="550" pos:column="82"/></expr_stmt>
      }<pos:position pos:line="551" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="552" pos:column="7">groupConnector<pos:position pos:line="552" pos:column="21"/></name><index pos:line="552" pos:column="21">[<expr><name><name pos:line="552" pos:column="22">prologState<pos:position pos:line="552" pos:column="33"/></name><operator pos:line="552" pos:column="33">.<pos:position pos:line="552" pos:column="34"/></operator><name pos:line="552" pos:column="34">level<pos:position pos:line="552" pos:column="39"/></name></name></expr>]<pos:position pos:line="552" pos:column="40"/></index></name> <operator pos:line="552" pos:column="41">=<pos:position pos:line="552" pos:column="42"/></operator> <literal type="char" pos:line="552" pos:column="43">'|'<pos:position pos:line="552" pos:column="46"/></literal></expr>;<pos:position pos:line="552" pos:column="47"/></expr_stmt>
      <break pos:line="553" pos:column="7">break;<pos:position pos:line="553" pos:column="13"/></break>
    <case pos:line="554" pos:column="5">case <expr><name pos:line="554" pos:column="10">XML_ROLE_PARAM_ENTITY_REF<pos:position pos:line="554" pos:column="35"/></name></expr>:<pos:position pos:line="554" pos:column="36"/></case>
<cpp:ifdef pos:line="555" pos:column="1">#<cpp:directive pos:line="555" pos:column="2">ifdef<pos:position pos:line="555" pos:column="7"/></cpp:directive> <name pos:line="555" pos:column="8">XML_DTD<pos:position pos:line="555" pos:column="15"/></name></cpp:ifdef>
    <case pos:line="556" pos:column="5">case <expr><name pos:line="556" pos:column="10">XML_ROLE_INNER_PARAM_ENTITY_REF<pos:position pos:line="556" pos:column="41"/></name></expr>:<pos:position pos:line="556" pos:column="42"/></case>
      <if pos:line="557" pos:column="7">if <condition pos:line="557" pos:column="10">(<expr><name pos:line="557" pos:column="11">paramEntityParsing<pos:position pos:line="557" pos:column="29"/></name>
	  <operator pos:line="558" pos:column="11">&amp;&amp;<pos:position pos:line="558" pos:column="21"/></operator> <operator pos:line="558" pos:column="14">(<pos:position pos:line="558" pos:column="15"/></operator><name><name pos:line="558" pos:column="15">dtd<pos:position pos:line="558" pos:column="18"/></name><operator pos:line="558" pos:column="18">.<pos:position pos:line="558" pos:column="19"/></operator><name pos:line="558" pos:column="19">complete<pos:position pos:line="558" pos:column="27"/></name></name> <operator pos:line="558" pos:column="28">||<pos:position pos:line="558" pos:column="30"/></operator> <name pos:line="558" pos:column="31">role<pos:position pos:line="558" pos:column="35"/></name> <operator pos:line="558" pos:column="36">==<pos:position pos:line="558" pos:column="38"/></operator> <name pos:line="558" pos:column="39">XML_ROLE_INNER_PARAM_ENTITY_REF<pos:position pos:line="558" pos:column="70"/></name><operator pos:line="558" pos:column="70">)<pos:position pos:line="558" pos:column="71"/></operator></expr>)<pos:position pos:line="558" pos:column="72"/></condition><then pos:line="558" pos:column="72"> <block pos:line="558" pos:column="73">{
	<decl_stmt><decl><type><specifier pos:line="559" pos:column="9">const<pos:position pos:line="559" pos:column="14"/></specifier> <name pos:line="559" pos:column="15">XML_Char<pos:position pos:line="559" pos:column="23"/></name> <modifier pos:line="559" pos:column="24">*<pos:position pos:line="559" pos:column="25"/></modifier></type><name pos:line="559" pos:column="25">name<pos:position pos:line="559" pos:column="29"/></name></decl>;<pos:position pos:line="559" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="560" pos:column="9">ENTITY<pos:position pos:line="560" pos:column="15"/></name> <modifier pos:line="560" pos:column="16">*<pos:position pos:line="560" pos:column="17"/></modifier></type><name pos:line="560" pos:column="17">entity<pos:position pos:line="560" pos:column="23"/></name></decl>;<pos:position pos:line="560" pos:column="24"/></decl_stmt>
	<expr_stmt><expr><name pos:line="561" pos:column="9">name<pos:position pos:line="561" pos:column="13"/></name> <operator pos:line="561" pos:column="14">=<pos:position pos:line="561" pos:column="15"/></operator> <call><name pos:line="561" pos:column="16">poolStoreString<pos:position pos:line="561" pos:column="31"/></name><argument_list pos:line="561" pos:column="31">(<argument><expr><operator pos:line="561" pos:column="32">&amp;<pos:position pos:line="561" pos:column="37"/></operator><name><name pos:line="561" pos:column="33">dtd<pos:position pos:line="561" pos:column="36"/></name><operator pos:line="561" pos:column="36">.<pos:position pos:line="561" pos:column="37"/></operator><name pos:line="561" pos:column="37">pool<pos:position pos:line="561" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="561" pos:column="43">enc<pos:position pos:line="561" pos:column="46"/></name></expr></argument>,
				<argument><expr><name pos:line="562" pos:column="33">s<pos:position pos:line="562" pos:column="34"/></name> <operator pos:line="562" pos:column="35">+<pos:position pos:line="562" pos:column="36"/></operator> <name><name pos:line="562" pos:column="37">enc<pos:position pos:line="562" pos:column="40"/></name><operator pos:line="562" pos:column="40">-&gt;<pos:position pos:line="562" pos:column="45"/></operator><name pos:line="562" pos:column="42">minBytesPerChar<pos:position pos:line="562" pos:column="57"/></name></name></expr></argument>,
				<argument><expr><name pos:line="563" pos:column="33">next<pos:position pos:line="563" pos:column="37"/></name> <operator pos:line="563" pos:column="38">-<pos:position pos:line="563" pos:column="39"/></operator> <name><name pos:line="563" pos:column="40">enc<pos:position pos:line="563" pos:column="43"/></name><operator pos:line="563" pos:column="43">-&gt;<pos:position pos:line="563" pos:column="48"/></operator><name pos:line="563" pos:column="45">minBytesPerChar<pos:position pos:line="563" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="563" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="563" pos:column="62"/></expr_stmt>
	<if pos:line="564" pos:column="9">if <condition pos:line="564" pos:column="12">(<expr><operator pos:line="564" pos:column="13">!<pos:position pos:line="564" pos:column="14"/></operator><name pos:line="564" pos:column="14">name<pos:position pos:line="564" pos:column="18"/></name></expr>)<pos:position pos:line="564" pos:column="19"/></condition><then pos:line="564" pos:column="19">
	  <block type="pseudo"><return pos:line="565" pos:column="11">return <expr><name pos:line="565" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="565" pos:column="37"/></name></expr>;<pos:position pos:line="565" pos:column="38"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="566" pos:column="9">entity<pos:position pos:line="566" pos:column="15"/></name> <operator pos:line="566" pos:column="16">=<pos:position pos:line="566" pos:column="17"/></operator> <operator pos:line="566" pos:column="18">(<pos:position pos:line="566" pos:column="19"/></operator><name pos:line="566" pos:column="19">ENTITY<pos:position pos:line="566" pos:column="25"/></name> <operator pos:line="566" pos:column="26">*<pos:position pos:line="566" pos:column="27"/></operator><operator pos:line="566" pos:column="27">)<pos:position pos:line="566" pos:column="28"/></operator><call><name pos:line="566" pos:column="28">lookup<pos:position pos:line="566" pos:column="34"/></name><argument_list pos:line="566" pos:column="34">(<argument><expr><operator pos:line="566" pos:column="35">&amp;<pos:position pos:line="566" pos:column="40"/></operator><name><name pos:line="566" pos:column="36">dtd<pos:position pos:line="566" pos:column="39"/></name><operator pos:line="566" pos:column="39">.<pos:position pos:line="566" pos:column="40"/></operator><name pos:line="566" pos:column="40">paramEntities<pos:position pos:line="566" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="566" pos:column="55">name<pos:position pos:line="566" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="566" pos:column="61">0<pos:position pos:line="566" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="566" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="566" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="567" pos:column="9">poolDiscard<pos:position pos:line="567" pos:column="20"/></name><argument_list pos:line="567" pos:column="20">(<argument><expr><operator pos:line="567" pos:column="21">&amp;<pos:position pos:line="567" pos:column="26"/></operator><name><name pos:line="567" pos:column="22">dtd<pos:position pos:line="567" pos:column="25"/></name><operator pos:line="567" pos:column="25">.<pos:position pos:line="567" pos:column="26"/></operator><name pos:line="567" pos:column="26">pool<pos:position pos:line="567" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="567" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="567" pos:column="32"/></expr_stmt>
	<if pos:line="568" pos:column="9">if <condition pos:line="568" pos:column="12">(<expr><operator pos:line="568" pos:column="13">!<pos:position pos:line="568" pos:column="14"/></operator><name pos:line="568" pos:column="14">entity<pos:position pos:line="568" pos:column="20"/></name></expr>)<pos:position pos:line="568" pos:column="21"/></condition><then pos:line="568" pos:column="21"> <block pos:line="568" pos:column="22">{
	  <comment type="block" pos:line="569" pos:column="11">/* FIXME what to do if !dtd.complete? */</comment>
	  <return pos:line="570" pos:column="11">return <expr><name pos:line="570" pos:column="18">XML_ERROR_UNDEFINED_ENTITY<pos:position pos:line="570" pos:column="44"/></name></expr>;<pos:position pos:line="570" pos:column="45"/></return>
	}<pos:position pos:line="571" pos:column="10"/></block></then></if>
	<if pos:line="572" pos:column="9">if <condition pos:line="572" pos:column="12">(<expr><name><name pos:line="572" pos:column="13">entity<pos:position pos:line="572" pos:column="19"/></name><operator pos:line="572" pos:column="19">-&gt;<pos:position pos:line="572" pos:column="24"/></operator><name pos:line="572" pos:column="21">open<pos:position pos:line="572" pos:column="25"/></name></name></expr>)<pos:position pos:line="572" pos:column="26"/></condition><then pos:line="572" pos:column="26">
	  <block type="pseudo"><return pos:line="573" pos:column="11">return <expr><name pos:line="573" pos:column="18">XML_ERROR_RECURSIVE_ENTITY_REF<pos:position pos:line="573" pos:column="48"/></name></expr>;<pos:position pos:line="573" pos:column="49"/></return></block></then></if>
	<if pos:line="574" pos:column="9">if <condition pos:line="574" pos:column="12">(<expr><name><name pos:line="574" pos:column="13">entity<pos:position pos:line="574" pos:column="19"/></name><operator pos:line="574" pos:column="19">-&gt;<pos:position pos:line="574" pos:column="24"/></operator><name pos:line="574" pos:column="21">textPtr<pos:position pos:line="574" pos:column="28"/></name></name></expr>)<pos:position pos:line="574" pos:column="29"/></condition><then pos:line="574" pos:column="29"> <block pos:line="574" pos:column="30">{
	  <decl_stmt><decl><type><name><name pos:line="575" pos:column="11">enum<pos:position pos:line="575" pos:column="15"/></name> <name pos:line="575" pos:column="16">XML_Error<pos:position pos:line="575" pos:column="25"/></name></name></type> <name pos:line="575" pos:column="26">result<pos:position pos:line="575" pos:column="32"/></name></decl>;<pos:position pos:line="575" pos:column="33"/></decl_stmt>
	  <expr_stmt><expr><name pos:line="576" pos:column="11">result<pos:position pos:line="576" pos:column="17"/></name> <operator pos:line="576" pos:column="18">=<pos:position pos:line="576" pos:column="19"/></operator> <call><name pos:line="576" pos:column="20">processInternalParamEntity<pos:position pos:line="576" pos:column="46"/></name><argument_list pos:line="576" pos:column="46">(<argument><expr><name pos:line="576" pos:column="47">parser<pos:position pos:line="576" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="576" pos:column="55">entity<pos:position pos:line="576" pos:column="61"/></name></expr></argument>)<pos:position pos:line="576" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="576" pos:column="63"/></expr_stmt>
	  <if pos:line="577" pos:column="11">if <condition pos:line="577" pos:column="14">(<expr><name pos:line="577" pos:column="15">result<pos:position pos:line="577" pos:column="21"/></name> <operator pos:line="577" pos:column="22">!=<pos:position pos:line="577" pos:column="24"/></operator> <name pos:line="577" pos:column="25">XML_ERROR_NONE<pos:position pos:line="577" pos:column="39"/></name></expr>)<pos:position pos:line="577" pos:column="40"/></condition><then pos:line="577" pos:column="40">
	    <block type="pseudo"><return pos:line="578" pos:column="13">return <expr><name pos:line="578" pos:column="20">result<pos:position pos:line="578" pos:column="26"/></name></expr>;<pos:position pos:line="578" pos:column="27"/></return></block></then></if>
	  <break pos:line="579" pos:column="11">break;<pos:position pos:line="579" pos:column="17"/></break>
	}<pos:position pos:line="580" pos:column="10"/></block></then></if>
	<if pos:line="581" pos:column="9">if <condition pos:line="581" pos:column="12">(<expr><name pos:line="581" pos:column="13">role<pos:position pos:line="581" pos:column="17"/></name> <operator pos:line="581" pos:column="18">==<pos:position pos:line="581" pos:column="20"/></operator> <name pos:line="581" pos:column="21">XML_ROLE_INNER_PARAM_ENTITY_REF<pos:position pos:line="581" pos:column="52"/></name></expr>)<pos:position pos:line="581" pos:column="53"/></condition><then pos:line="581" pos:column="53">
	  <block type="pseudo"><return pos:line="582" pos:column="11">return <expr><name pos:line="582" pos:column="18">XML_ERROR_PARAM_ENTITY_REF<pos:position pos:line="582" pos:column="44"/></name></expr>;<pos:position pos:line="582" pos:column="45"/></return></block></then></if>
	<if pos:line="583" pos:column="9">if <condition pos:line="583" pos:column="12">(<expr><name pos:line="583" pos:column="13">externalEntityRefHandler<pos:position pos:line="583" pos:column="37"/></name></expr>)<pos:position pos:line="583" pos:column="38"/></condition><then pos:line="583" pos:column="38"> <block pos:line="583" pos:column="39">{
	  <expr_stmt><expr><name><name pos:line="584" pos:column="11">dtd<pos:position pos:line="584" pos:column="14"/></name><operator pos:line="584" pos:column="14">.<pos:position pos:line="584" pos:column="15"/></operator><name pos:line="584" pos:column="15">complete<pos:position pos:line="584" pos:column="23"/></name></name> <operator pos:line="584" pos:column="24">=<pos:position pos:line="584" pos:column="25"/></operator> <literal type="number" pos:line="584" pos:column="26">0<pos:position pos:line="584" pos:column="27"/></literal></expr>;<pos:position pos:line="584" pos:column="28"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="585" pos:column="11">entity<pos:position pos:line="585" pos:column="17"/></name><operator pos:line="585" pos:column="17">-&gt;<pos:position pos:line="585" pos:column="22"/></operator><name pos:line="585" pos:column="19">open<pos:position pos:line="585" pos:column="23"/></name></name> <operator pos:line="585" pos:column="24">=<pos:position pos:line="585" pos:column="25"/></operator> <literal type="number" pos:line="585" pos:column="26">1<pos:position pos:line="585" pos:column="27"/></literal></expr>;<pos:position pos:line="585" pos:column="28"/></expr_stmt>
	  <if pos:line="586" pos:column="11">if <condition pos:line="586" pos:column="14">(<expr><operator pos:line="586" pos:column="15">!<pos:position pos:line="586" pos:column="16"/></operator><call><name pos:line="586" pos:column="16">externalEntityRefHandler<pos:position pos:line="586" pos:column="40"/></name><argument_list pos:line="586" pos:column="40">(<argument><expr><name pos:line="586" pos:column="41">externalEntityRefHandlerArg<pos:position pos:line="586" pos:column="68"/></name></expr></argument>,
					<argument><expr><literal type="number" pos:line="587" pos:column="41">0<pos:position pos:line="587" pos:column="42"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="588" pos:column="41">entity<pos:position pos:line="588" pos:column="47"/></name><operator pos:line="588" pos:column="47">-&gt;<pos:position pos:line="588" pos:column="52"/></operator><name pos:line="588" pos:column="49">base<pos:position pos:line="588" pos:column="53"/></name></name></expr></argument>,
					<argument><expr><name><name pos:line="589" pos:column="41">entity<pos:position pos:line="589" pos:column="47"/></name><operator pos:line="589" pos:column="47">-&gt;<pos:position pos:line="589" pos:column="52"/></operator><name pos:line="589" pos:column="49">systemId<pos:position pos:line="589" pos:column="57"/></name></name></expr></argument>,
					<argument><expr><name><name pos:line="590" pos:column="41">entity<pos:position pos:line="590" pos:column="47"/></name><operator pos:line="590" pos:column="47">-&gt;<pos:position pos:line="590" pos:column="52"/></operator><name pos:line="590" pos:column="49">publicId<pos:position pos:line="590" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="590" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="590" pos:column="59"/></condition><then pos:line="590" pos:column="59"> <block pos:line="590" pos:column="60">{
	    <expr_stmt><expr><name><name pos:line="591" pos:column="13">entity<pos:position pos:line="591" pos:column="19"/></name><operator pos:line="591" pos:column="19">-&gt;<pos:position pos:line="591" pos:column="24"/></operator><name pos:line="591" pos:column="21">open<pos:position pos:line="591" pos:column="25"/></name></name> <operator pos:line="591" pos:column="26">=<pos:position pos:line="591" pos:column="27"/></operator> <literal type="number" pos:line="591" pos:column="28">0<pos:position pos:line="591" pos:column="29"/></literal></expr>;<pos:position pos:line="591" pos:column="30"/></expr_stmt>
	    <return pos:line="592" pos:column="13">return <expr><name pos:line="592" pos:column="20">XML_ERROR_EXTERNAL_ENTITY_HANDLING<pos:position pos:line="592" pos:column="54"/></name></expr>;<pos:position pos:line="592" pos:column="55"/></return>
	  }<pos:position pos:line="593" pos:column="12"/></block></then></if>
	  <expr_stmt><expr><name><name pos:line="594" pos:column="11">entity<pos:position pos:line="594" pos:column="17"/></name><operator pos:line="594" pos:column="17">-&gt;<pos:position pos:line="594" pos:column="22"/></operator><name pos:line="594" pos:column="19">open<pos:position pos:line="594" pos:column="23"/></name></name> <operator pos:line="594" pos:column="24">=<pos:position pos:line="594" pos:column="25"/></operator> <literal type="number" pos:line="594" pos:column="26">0<pos:position pos:line="594" pos:column="27"/></literal></expr>;<pos:position pos:line="594" pos:column="28"/></expr_stmt>
	  <if pos:line="595" pos:column="11">if <condition pos:line="595" pos:column="14">(<expr><name><name pos:line="595" pos:column="15">dtd<pos:position pos:line="595" pos:column="18"/></name><operator pos:line="595" pos:column="18">.<pos:position pos:line="595" pos:column="19"/></operator><name pos:line="595" pos:column="19">complete<pos:position pos:line="595" pos:column="27"/></name></name></expr>)<pos:position pos:line="595" pos:column="28"/></condition><then pos:line="595" pos:column="28">
	    <block type="pseudo"><break pos:line="596" pos:column="13">break;<pos:position pos:line="596" pos:column="19"/></break></block></then></if>
	}<pos:position pos:line="597" pos:column="10"/></block></then></if>
      }<pos:position pos:line="598" pos:column="8"/></block></then></if>
<cpp:endif pos:line="599" pos:column="1">#<cpp:directive pos:line="599" pos:column="2">endif<pos:position pos:line="599" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="599" pos:column="8">/* XML_DTD */</comment>
      <if pos:line="600" pos:column="7">if <condition pos:line="600" pos:column="10">(<expr><operator pos:line="600" pos:column="11">!<pos:position pos:line="600" pos:column="12"/></operator><name><name pos:line="600" pos:column="12">dtd<pos:position pos:line="600" pos:column="15"/></name><operator pos:line="600" pos:column="15">.<pos:position pos:line="600" pos:column="16"/></operator><name pos:line="600" pos:column="16">standalone<pos:position pos:line="600" pos:column="26"/></name></name>
	  <operator pos:line="601" pos:column="11">&amp;&amp;<pos:position pos:line="601" pos:column="21"/></operator> <name pos:line="601" pos:column="14">notStandaloneHandler<pos:position pos:line="601" pos:column="34"/></name>
	  <operator pos:line="602" pos:column="11">&amp;&amp;<pos:position pos:line="602" pos:column="21"/></operator> <operator pos:line="602" pos:column="14">!<pos:position pos:line="602" pos:column="15"/></operator><call><name pos:line="602" pos:column="15">notStandaloneHandler<pos:position pos:line="602" pos:column="35"/></name><argument_list pos:line="602" pos:column="35">(<argument><expr><name pos:line="602" pos:column="36">handlerArg<pos:position pos:line="602" pos:column="46"/></name></expr></argument>)<pos:position pos:line="602" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="602" pos:column="48"/></condition><then pos:line="602" pos:column="48">
	<block type="pseudo"><return pos:line="603" pos:column="9">return <expr><name pos:line="603" pos:column="16">XML_ERROR_NOT_STANDALONE<pos:position pos:line="603" pos:column="40"/></name></expr>;<pos:position pos:line="603" pos:column="41"/></return></block></then></if>
      <expr_stmt><expr><name><name pos:line="604" pos:column="7">dtd<pos:position pos:line="604" pos:column="10"/></name><operator pos:line="604" pos:column="10">.<pos:position pos:line="604" pos:column="11"/></operator><name pos:line="604" pos:column="11">complete<pos:position pos:line="604" pos:column="19"/></name></name> <operator pos:line="604" pos:column="20">=<pos:position pos:line="604" pos:column="21"/></operator> <literal type="number" pos:line="604" pos:column="22">0<pos:position pos:line="604" pos:column="23"/></literal></expr>;<pos:position pos:line="604" pos:column="24"/></expr_stmt>
      <if pos:line="605" pos:column="7">if <condition pos:line="605" pos:column="10">(<expr><name pos:line="605" pos:column="11">defaultHandler<pos:position pos:line="605" pos:column="25"/></name></expr>)<pos:position pos:line="605" pos:column="26"/></condition><then pos:line="605" pos:column="26">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="606" pos:column="9">reportDefault<pos:position pos:line="606" pos:column="22"/></name><argument_list pos:line="606" pos:column="22">(<argument><expr><name pos:line="606" pos:column="23">parser<pos:position pos:line="606" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="606" pos:column="31">enc<pos:position pos:line="606" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="606" pos:column="36">s<pos:position pos:line="606" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="606" pos:column="39">next<pos:position pos:line="606" pos:column="43"/></name></expr></argument>)<pos:position pos:line="606" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="606" pos:column="45"/></expr_stmt></block></then></if>
      <break pos:line="607" pos:column="7">break;<pos:position pos:line="607" pos:column="13"/></break>

      <comment type="block" pos:line="609" pos:column="7">/* Element declaration stuff */</comment>

    <case pos:line="611" pos:column="5">case <expr><name pos:line="611" pos:column="10">XML_ROLE_ELEMENT_NAME<pos:position pos:line="611" pos:column="31"/></name></expr>:<pos:position pos:line="611" pos:column="32"/></case>
      <if pos:line="612" pos:column="7">if <condition pos:line="612" pos:column="10">(<expr><name pos:line="612" pos:column="11">elementDeclHandler<pos:position pos:line="612" pos:column="29"/></name></expr>)<pos:position pos:line="612" pos:column="30"/></condition><then pos:line="612" pos:column="30"> <block pos:line="612" pos:column="31">{
	<expr_stmt><expr><name pos:line="613" pos:column="9">declElementType<pos:position pos:line="613" pos:column="24"/></name> <operator pos:line="613" pos:column="25">=<pos:position pos:line="613" pos:column="26"/></operator> <call><name pos:line="613" pos:column="27">getElementType<pos:position pos:line="613" pos:column="41"/></name><argument_list pos:line="613" pos:column="41">(<argument><expr><name pos:line="613" pos:column="42">parser<pos:position pos:line="613" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="613" pos:column="50">enc<pos:position pos:line="613" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="613" pos:column="55">s<pos:position pos:line="613" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="613" pos:column="58">next<pos:position pos:line="613" pos:column="62"/></name></expr></argument>)<pos:position pos:line="613" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="613" pos:column="64"/></expr_stmt>
	<if pos:line="614" pos:column="9">if <condition pos:line="614" pos:column="12">(<expr><operator pos:line="614" pos:column="13">!<pos:position pos:line="614" pos:column="14"/></operator> <name pos:line="614" pos:column="15">declElementType<pos:position pos:line="614" pos:column="30"/></name></expr>)<pos:position pos:line="614" pos:column="31"/></condition><then pos:line="614" pos:column="31">
	  <block type="pseudo"><return pos:line="615" pos:column="11">return <expr><name pos:line="615" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="615" pos:column="37"/></name></expr>;<pos:position pos:line="615" pos:column="38"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="616" pos:column="9">dtd<pos:position pos:line="616" pos:column="12"/></name><operator pos:line="616" pos:column="12">.<pos:position pos:line="616" pos:column="13"/></operator><name pos:line="616" pos:column="13">scaffLevel<pos:position pos:line="616" pos:column="23"/></name></name> <operator pos:line="616" pos:column="24">=<pos:position pos:line="616" pos:column="25"/></operator> <literal type="number" pos:line="616" pos:column="26">0<pos:position pos:line="616" pos:column="27"/></literal></expr>;<pos:position pos:line="616" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="617" pos:column="9">dtd<pos:position pos:line="617" pos:column="12"/></name><operator pos:line="617" pos:column="12">.<pos:position pos:line="617" pos:column="13"/></operator><name pos:line="617" pos:column="13">scaffCount<pos:position pos:line="617" pos:column="23"/></name></name> <operator pos:line="617" pos:column="24">=<pos:position pos:line="617" pos:column="25"/></operator> <literal type="number" pos:line="617" pos:column="26">0<pos:position pos:line="617" pos:column="27"/></literal></expr>;<pos:position pos:line="617" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="618" pos:column="9">dtd<pos:position pos:line="618" pos:column="12"/></name><operator pos:line="618" pos:column="12">.<pos:position pos:line="618" pos:column="13"/></operator><name pos:line="618" pos:column="13">in_eldecl<pos:position pos:line="618" pos:column="22"/></name></name> <operator pos:line="618" pos:column="23">=<pos:position pos:line="618" pos:column="24"/></operator> <literal type="number" pos:line="618" pos:column="25">1<pos:position pos:line="618" pos:column="26"/></literal></expr>;<pos:position pos:line="618" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="619" pos:column="8"/></block></then></if>
      <break pos:line="620" pos:column="7">break;<pos:position pos:line="620" pos:column="13"/></break>

    <case pos:line="622" pos:column="5">case <expr><name pos:line="622" pos:column="10">XML_ROLE_CONTENT_ANY<pos:position pos:line="622" pos:column="30"/></name></expr>:<pos:position pos:line="622" pos:column="31"/></case>
    <case pos:line="623" pos:column="5">case <expr><name pos:line="623" pos:column="10">XML_ROLE_CONTENT_EMPTY<pos:position pos:line="623" pos:column="32"/></name></expr>:<pos:position pos:line="623" pos:column="33"/></case>
      <if pos:line="624" pos:column="7">if <condition pos:line="624" pos:column="10">(<expr><name><name pos:line="624" pos:column="11">dtd<pos:position pos:line="624" pos:column="14"/></name><operator pos:line="624" pos:column="14">.<pos:position pos:line="624" pos:column="15"/></operator><name pos:line="624" pos:column="15">in_eldecl<pos:position pos:line="624" pos:column="24"/></name></name></expr>)<pos:position pos:line="624" pos:column="25"/></condition><then pos:line="624" pos:column="25"> <block pos:line="624" pos:column="26">{
	<if pos:line="625" pos:column="9">if <condition pos:line="625" pos:column="12">(<expr><name pos:line="625" pos:column="13">elementDeclHandler<pos:position pos:line="625" pos:column="31"/></name></expr>)<pos:position pos:line="625" pos:column="32"/></condition><then pos:line="625" pos:column="32"> <block pos:line="625" pos:column="33">{
	  <decl_stmt><decl><type><name pos:line="626" pos:column="11">XML_Content<pos:position pos:line="626" pos:column="22"/></name> <modifier pos:line="626" pos:column="23">*<pos:position pos:line="626" pos:column="24"/></modifier></type> <name pos:line="626" pos:column="25">content<pos:position pos:line="626" pos:column="32"/></name> <init pos:line="626" pos:column="33">= <expr><operator pos:line="626" pos:column="35">(<pos:position pos:line="626" pos:column="36"/></operator><name pos:line="626" pos:column="36">XML_Content<pos:position pos:line="626" pos:column="47"/></name> <operator pos:line="626" pos:column="48">*<pos:position pos:line="626" pos:column="49"/></operator><operator pos:line="626" pos:column="49">)<pos:position pos:line="626" pos:column="50"/></operator> <call><name pos:line="626" pos:column="51">MALLOC<pos:position pos:line="626" pos:column="57"/></name><argument_list pos:line="626" pos:column="57">(<argument><expr><sizeof pos:line="626" pos:column="58">sizeof<argument_list pos:line="626" pos:column="64">(<argument><expr><name pos:line="626" pos:column="65">XML_Content<pos:position pos:line="626" pos:column="76"/></name></expr></argument>)<pos:position pos:line="626" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="626" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="626" pos:column="79"/></decl_stmt>
	  <if pos:line="627" pos:column="11">if <condition pos:line="627" pos:column="14">(<expr><operator pos:line="627" pos:column="15">!<pos:position pos:line="627" pos:column="16"/></operator> <name pos:line="627" pos:column="17">content<pos:position pos:line="627" pos:column="24"/></name></expr>)<pos:position pos:line="627" pos:column="25"/></condition><then pos:line="627" pos:column="25">
	    <block type="pseudo"><return pos:line="628" pos:column="13">return <expr><name pos:line="628" pos:column="20">XML_ERROR_NO_MEMORY<pos:position pos:line="628" pos:column="39"/></name></expr>;<pos:position pos:line="628" pos:column="40"/></return></block></then></if>
	  <expr_stmt><expr><name><name pos:line="629" pos:column="11">content<pos:position pos:line="629" pos:column="18"/></name><operator pos:line="629" pos:column="18">-&gt;<pos:position pos:line="629" pos:column="23"/></operator><name pos:line="629" pos:column="20">quant<pos:position pos:line="629" pos:column="25"/></name></name> <operator pos:line="629" pos:column="26">=<pos:position pos:line="629" pos:column="27"/></operator> <name pos:line="629" pos:column="28">XML_CQUANT_NONE<pos:position pos:line="629" pos:column="43"/></name></expr>;<pos:position pos:line="629" pos:column="44"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="630" pos:column="11">content<pos:position pos:line="630" pos:column="18"/></name><operator pos:line="630" pos:column="18">-&gt;<pos:position pos:line="630" pos:column="23"/></operator><name pos:line="630" pos:column="20">name<pos:position pos:line="630" pos:column="24"/></name></name> <operator pos:line="630" pos:column="25">=<pos:position pos:line="630" pos:column="26"/></operator> <literal type="number" pos:line="630" pos:column="27">0<pos:position pos:line="630" pos:column="28"/></literal></expr>;<pos:position pos:line="630" pos:column="29"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="631" pos:column="11">content<pos:position pos:line="631" pos:column="18"/></name><operator pos:line="631" pos:column="18">-&gt;<pos:position pos:line="631" pos:column="23"/></operator><name pos:line="631" pos:column="20">numchildren<pos:position pos:line="631" pos:column="31"/></name></name> <operator pos:line="631" pos:column="32">=<pos:position pos:line="631" pos:column="33"/></operator> <literal type="number" pos:line="631" pos:column="34">0<pos:position pos:line="631" pos:column="35"/></literal></expr>;<pos:position pos:line="631" pos:column="36"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="632" pos:column="11">content<pos:position pos:line="632" pos:column="18"/></name><operator pos:line="632" pos:column="18">-&gt;<pos:position pos:line="632" pos:column="23"/></operator><name pos:line="632" pos:column="20">children<pos:position pos:line="632" pos:column="28"/></name></name> <operator pos:line="632" pos:column="29">=<pos:position pos:line="632" pos:column="30"/></operator> <literal type="number" pos:line="632" pos:column="31">0<pos:position pos:line="632" pos:column="32"/></literal></expr>;<pos:position pos:line="632" pos:column="33"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="633" pos:column="11">content<pos:position pos:line="633" pos:column="18"/></name><operator pos:line="633" pos:column="18">-&gt;<pos:position pos:line="633" pos:column="23"/></operator><name pos:line="633" pos:column="20">type<pos:position pos:line="633" pos:column="24"/></name></name> <operator pos:line="633" pos:column="25">=<pos:position pos:line="633" pos:column="26"/></operator> <operator pos:line="633" pos:column="27">(<pos:position pos:line="633" pos:column="28"/></operator><ternary><condition><expr><operator pos:line="633" pos:column="28">(<pos:position pos:line="633" pos:column="29"/></operator><name pos:line="633" pos:column="29">role<pos:position pos:line="633" pos:column="33"/></name> <operator pos:line="633" pos:column="34">==<pos:position pos:line="633" pos:column="36"/></operator> <name pos:line="633" pos:column="37">XML_ROLE_CONTENT_ANY<pos:position pos:line="633" pos:column="57"/></name><operator pos:line="633" pos:column="57">)<pos:position pos:line="633" pos:column="58"/></operator></expr> ?<pos:position pos:line="633" pos:column="60"/></condition><then pos:line="633" pos:column="60">
			   <expr><name pos:line="634" pos:column="28">XML_CTYPE_ANY<pos:position pos:line="634" pos:column="41"/></name></expr> <pos:position pos:line="634" pos:column="42"/></then><else pos:line="634" pos:column="42">:
			   <expr><name pos:line="635" pos:column="28">XML_CTYPE_EMPTY<pos:position pos:line="635" pos:column="43"/></name></expr></else></ternary><operator pos:line="635" pos:column="43">)<pos:position pos:line="635" pos:column="44"/></operator></expr>;<pos:position pos:line="635" pos:column="45"/></expr_stmt>
	  <expr_stmt><expr><operator pos:line="636" pos:column="11">*<pos:position pos:line="636" pos:column="12"/></operator><name pos:line="636" pos:column="12">eventEndPP<pos:position pos:line="636" pos:column="22"/></name> <operator pos:line="636" pos:column="23">=<pos:position pos:line="636" pos:column="24"/></operator> <name pos:line="636" pos:column="25">s<pos:position pos:line="636" pos:column="26"/></name></expr>;<pos:position pos:line="636" pos:column="27"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="637" pos:column="11">elementDeclHandler<pos:position pos:line="637" pos:column="29"/></name><argument_list pos:line="637" pos:column="29">(<argument><expr><name pos:line="637" pos:column="30">handlerArg<pos:position pos:line="637" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="637" pos:column="42">declElementType<pos:position pos:line="637" pos:column="57"/></name><operator pos:line="637" pos:column="57">-&gt;<pos:position pos:line="637" pos:column="62"/></operator><name pos:line="637" pos:column="59">name<pos:position pos:line="637" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="637" pos:column="65">content<pos:position pos:line="637" pos:column="72"/></name></expr></argument>)<pos:position pos:line="637" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="637" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="638" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="639" pos:column="9">dtd<pos:position pos:line="639" pos:column="12"/></name><operator pos:line="639" pos:column="12">.<pos:position pos:line="639" pos:column="13"/></operator><name pos:line="639" pos:column="13">in_eldecl<pos:position pos:line="639" pos:column="22"/></name></name> <operator pos:line="639" pos:column="23">=<pos:position pos:line="639" pos:column="24"/></operator> <literal type="number" pos:line="639" pos:column="25">0<pos:position pos:line="639" pos:column="26"/></literal></expr>;<pos:position pos:line="639" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="640" pos:column="8"/></block></then></if>
      <break pos:line="641" pos:column="7">break;<pos:position pos:line="641" pos:column="13"/></break>
      
    <case pos:line="643" pos:column="5">case <expr><name pos:line="643" pos:column="10">XML_ROLE_CONTENT_PCDATA<pos:position pos:line="643" pos:column="33"/></name></expr>:<pos:position pos:line="643" pos:column="34"/></case>
      <if pos:line="644" pos:column="7">if <condition pos:line="644" pos:column="10">(<expr><name><name pos:line="644" pos:column="11">dtd<pos:position pos:line="644" pos:column="14"/></name><operator pos:line="644" pos:column="14">.<pos:position pos:line="644" pos:column="15"/></operator><name pos:line="644" pos:column="15">in_eldecl<pos:position pos:line="644" pos:column="24"/></name></name></expr>)<pos:position pos:line="644" pos:column="25"/></condition><then pos:line="644" pos:column="25"> <block pos:line="644" pos:column="26">{
	<expr_stmt><expr><name><name pos:line="645" pos:column="9">dtd<pos:position pos:line="645" pos:column="12"/></name><operator pos:line="645" pos:column="12">.<pos:position pos:line="645" pos:column="13"/></operator><name pos:line="645" pos:column="13">scaffold<pos:position pos:line="645" pos:column="21"/></name><index pos:line="645" pos:column="21">[<expr><name><name pos:line="645" pos:column="22">dtd<pos:position pos:line="645" pos:column="25"/></name><operator pos:line="645" pos:column="25">.<pos:position pos:line="645" pos:column="26"/></operator><name pos:line="645" pos:column="26">scaffIndex<pos:position pos:line="645" pos:column="36"/></name><index pos:line="645" pos:column="36">[<expr><name><name pos:line="645" pos:column="37">dtd<pos:position pos:line="645" pos:column="40"/></name><operator pos:line="645" pos:column="40">.<pos:position pos:line="645" pos:column="41"/></operator><name pos:line="645" pos:column="41">scaffLevel<pos:position pos:line="645" pos:column="51"/></name></name> <operator pos:line="645" pos:column="52">-<pos:position pos:line="645" pos:column="53"/></operator> <literal type="number" pos:line="645" pos:column="54">1<pos:position pos:line="645" pos:column="55"/></literal></expr>]<pos:position pos:line="645" pos:column="56"/></index></name></expr>]<pos:position pos:line="645" pos:column="57"/></index></name><operator pos:line="645" pos:column="57">.<pos:position pos:line="645" pos:column="58"/></operator><name pos:line="645" pos:column="58">type<pos:position pos:line="645" pos:column="62"/></name> <operator pos:line="645" pos:column="63">=<pos:position pos:line="645" pos:column="64"/></operator> <name pos:line="645" pos:column="65">XML_CTYPE_MIXED<pos:position pos:line="645" pos:column="80"/></name></expr>;<pos:position pos:line="645" pos:column="81"/></expr_stmt>
      }<pos:position pos:line="646" pos:column="8"/></block></then></if>
      <break pos:line="647" pos:column="7">break;<pos:position pos:line="647" pos:column="13"/></break>

    <case pos:line="649" pos:column="5">case <expr><name pos:line="649" pos:column="10">XML_ROLE_CONTENT_ELEMENT<pos:position pos:line="649" pos:column="34"/></name></expr>:<pos:position pos:line="649" pos:column="35"/></case>
      <expr_stmt><expr><name pos:line="650" pos:column="7">quant<pos:position pos:line="650" pos:column="12"/></name> <operator pos:line="650" pos:column="13">=<pos:position pos:line="650" pos:column="14"/></operator> <name pos:line="650" pos:column="15">XML_CQUANT_NONE<pos:position pos:line="650" pos:column="30"/></name></expr>;<pos:position pos:line="650" pos:column="31"/></expr_stmt>
      <goto pos:line="651" pos:column="7">goto <name pos:line="651" pos:column="12">elementContent<pos:position pos:line="651" pos:column="26"/></name>;<pos:position pos:line="651" pos:column="27"/></goto>
    <case pos:line="652" pos:column="5">case <expr><name pos:line="652" pos:column="10">XML_ROLE_CONTENT_ELEMENT_OPT<pos:position pos:line="652" pos:column="38"/></name></expr>:<pos:position pos:line="652" pos:column="39"/></case>
      <expr_stmt><expr><name pos:line="653" pos:column="7">quant<pos:position pos:line="653" pos:column="12"/></name> <operator pos:line="653" pos:column="13">=<pos:position pos:line="653" pos:column="14"/></operator> <name pos:line="653" pos:column="15">XML_CQUANT_OPT<pos:position pos:line="653" pos:column="29"/></name></expr>;<pos:position pos:line="653" pos:column="30"/></expr_stmt>
      <goto pos:line="654" pos:column="7">goto <name pos:line="654" pos:column="12">elementContent<pos:position pos:line="654" pos:column="26"/></name>;<pos:position pos:line="654" pos:column="27"/></goto>
    <case pos:line="655" pos:column="5">case <expr><name pos:line="655" pos:column="10">XML_ROLE_CONTENT_ELEMENT_REP<pos:position pos:line="655" pos:column="38"/></name></expr>:<pos:position pos:line="655" pos:column="39"/></case>
      <expr_stmt><expr><name pos:line="656" pos:column="7">quant<pos:position pos:line="656" pos:column="12"/></name> <operator pos:line="656" pos:column="13">=<pos:position pos:line="656" pos:column="14"/></operator> <name pos:line="656" pos:column="15">XML_CQUANT_REP<pos:position pos:line="656" pos:column="29"/></name></expr>;<pos:position pos:line="656" pos:column="30"/></expr_stmt>
      <goto pos:line="657" pos:column="7">goto <name pos:line="657" pos:column="12">elementContent<pos:position pos:line="657" pos:column="26"/></name>;<pos:position pos:line="657" pos:column="27"/></goto>
    <case pos:line="658" pos:column="5">case <expr><name pos:line="658" pos:column="10">XML_ROLE_CONTENT_ELEMENT_PLUS<pos:position pos:line="658" pos:column="39"/></name></expr>:<pos:position pos:line="658" pos:column="40"/></case>
      <expr_stmt><expr><name pos:line="659" pos:column="7">quant<pos:position pos:line="659" pos:column="12"/></name> <operator pos:line="659" pos:column="13">=<pos:position pos:line="659" pos:column="14"/></operator> <name pos:line="659" pos:column="15">XML_CQUANT_PLUS<pos:position pos:line="659" pos:column="30"/></name></expr>;<pos:position pos:line="659" pos:column="31"/></expr_stmt>
    <label><name pos:line="660" pos:column="5">elementContent<pos:position pos:line="660" pos:column="19"/></name>:<pos:position pos:line="660" pos:column="20"/></label>
      <if pos:line="661" pos:column="7">if <condition pos:line="661" pos:column="10">(<expr><name><name pos:line="661" pos:column="11">dtd<pos:position pos:line="661" pos:column="14"/></name><operator pos:line="661" pos:column="14">.<pos:position pos:line="661" pos:column="15"/></operator><name pos:line="661" pos:column="15">in_eldecl<pos:position pos:line="661" pos:column="24"/></name></name></expr>)<pos:position pos:line="661" pos:column="25"/></condition><then pos:line="661" pos:column="25">
	<block pos:line="662" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="663" pos:column="11">ELEMENT_TYPE<pos:position pos:line="663" pos:column="23"/></name> <modifier pos:line="663" pos:column="24">*<pos:position pos:line="663" pos:column="25"/></modifier></type><name pos:line="663" pos:column="25">el<pos:position pos:line="663" pos:column="27"/></name></decl>;<pos:position pos:line="663" pos:column="28"/></decl_stmt>
	  <decl_stmt><decl><type><specifier pos:line="664" pos:column="11">const<pos:position pos:line="664" pos:column="16"/></specifier> <name pos:line="664" pos:column="17">char<pos:position pos:line="664" pos:column="21"/></name> <modifier pos:line="664" pos:column="22">*<pos:position pos:line="664" pos:column="23"/></modifier></type><name pos:line="664" pos:column="23">nxt<pos:position pos:line="664" pos:column="26"/></name> <init pos:line="664" pos:column="27">= <expr><ternary><condition><expr><name pos:line="664" pos:column="29">quant<pos:position pos:line="664" pos:column="34"/></name> <operator pos:line="664" pos:column="35">==<pos:position pos:line="664" pos:column="37"/></operator> <name pos:line="664" pos:column="38">XML_CQUANT_NONE<pos:position pos:line="664" pos:column="53"/></name></expr> ?<pos:position pos:line="664" pos:column="55"/></condition><then pos:line="664" pos:column="55"> <expr><name pos:line="664" pos:column="56">next<pos:position pos:line="664" pos:column="60"/></name></expr> <pos:position pos:line="664" pos:column="61"/></then><else pos:line="664" pos:column="61">: <expr><name pos:line="664" pos:column="63">next<pos:position pos:line="664" pos:column="67"/></name> <operator pos:line="664" pos:column="68">-<pos:position pos:line="664" pos:column="69"/></operator> <literal type="number" pos:line="664" pos:column="70">1<pos:position pos:line="664" pos:column="71"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="664" pos:column="72"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="665" pos:column="11">int<pos:position pos:line="665" pos:column="14"/></name></type> <name pos:line="665" pos:column="15">myindex<pos:position pos:line="665" pos:column="22"/></name> <init pos:line="665" pos:column="23">= <expr><call><name pos:line="665" pos:column="25">nextScaffoldPart<pos:position pos:line="665" pos:column="41"/></name><argument_list pos:line="665" pos:column="41">(<argument><expr><name pos:line="665" pos:column="42">parser<pos:position pos:line="665" pos:column="48"/></name></expr></argument>)<pos:position pos:line="665" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="665" pos:column="50"/></decl_stmt>
	  <if pos:line="666" pos:column="11">if <condition pos:line="666" pos:column="14">(<expr><name pos:line="666" pos:column="15">myindex<pos:position pos:line="666" pos:column="22"/></name> <operator pos:line="666" pos:column="23">&lt;<pos:position pos:line="666" pos:column="27"/></operator> <literal type="number" pos:line="666" pos:column="25">0<pos:position pos:line="666" pos:column="26"/></literal></expr>)<pos:position pos:line="666" pos:column="27"/></condition><then pos:line="666" pos:column="27">
	    <block type="pseudo"><return pos:line="667" pos:column="13">return <expr><name pos:line="667" pos:column="20">XML_ERROR_NO_MEMORY<pos:position pos:line="667" pos:column="39"/></name></expr>;<pos:position pos:line="667" pos:column="40"/></return></block></then></if>
	  <expr_stmt><expr><name><name pos:line="668" pos:column="11">dtd<pos:position pos:line="668" pos:column="14"/></name><operator pos:line="668" pos:column="14">.<pos:position pos:line="668" pos:column="15"/></operator><name pos:line="668" pos:column="15">scaffold<pos:position pos:line="668" pos:column="23"/></name><index pos:line="668" pos:column="23">[<expr><name pos:line="668" pos:column="24">myindex<pos:position pos:line="668" pos:column="31"/></name></expr>]<pos:position pos:line="668" pos:column="32"/></index></name><operator pos:line="668" pos:column="32">.<pos:position pos:line="668" pos:column="33"/></operator><name pos:line="668" pos:column="33">type<pos:position pos:line="668" pos:column="37"/></name> <operator pos:line="668" pos:column="38">=<pos:position pos:line="668" pos:column="39"/></operator> <name pos:line="668" pos:column="40">XML_CTYPE_NAME<pos:position pos:line="668" pos:column="54"/></name></expr>;<pos:position pos:line="668" pos:column="55"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="669" pos:column="11">dtd<pos:position pos:line="669" pos:column="14"/></name><operator pos:line="669" pos:column="14">.<pos:position pos:line="669" pos:column="15"/></operator><name pos:line="669" pos:column="15">scaffold<pos:position pos:line="669" pos:column="23"/></name><index pos:line="669" pos:column="23">[<expr><name pos:line="669" pos:column="24">myindex<pos:position pos:line="669" pos:column="31"/></name></expr>]<pos:position pos:line="669" pos:column="32"/></index></name><operator pos:line="669" pos:column="32">.<pos:position pos:line="669" pos:column="33"/></operator><name pos:line="669" pos:column="33">quant<pos:position pos:line="669" pos:column="38"/></name> <operator pos:line="669" pos:column="39">=<pos:position pos:line="669" pos:column="40"/></operator> <name pos:line="669" pos:column="41">quant<pos:position pos:line="669" pos:column="46"/></name></expr>;<pos:position pos:line="669" pos:column="47"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="670" pos:column="11">el<pos:position pos:line="670" pos:column="13"/></name> <operator pos:line="670" pos:column="14">=<pos:position pos:line="670" pos:column="15"/></operator> <call><name pos:line="670" pos:column="16">getElementType<pos:position pos:line="670" pos:column="30"/></name><argument_list pos:line="670" pos:column="30">(<argument><expr><name pos:line="670" pos:column="31">parser<pos:position pos:line="670" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="670" pos:column="39">enc<pos:position pos:line="670" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="670" pos:column="44">s<pos:position pos:line="670" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="670" pos:column="47">nxt<pos:position pos:line="670" pos:column="50"/></name></expr></argument>)<pos:position pos:line="670" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="670" pos:column="52"/></expr_stmt>
	  <if pos:line="671" pos:column="11">if <condition pos:line="671" pos:column="14">(<expr><operator pos:line="671" pos:column="15">!<pos:position pos:line="671" pos:column="16"/></operator> <name pos:line="671" pos:column="17">el<pos:position pos:line="671" pos:column="19"/></name></expr>)<pos:position pos:line="671" pos:column="20"/></condition><then pos:line="671" pos:column="20">
	    <block type="pseudo"><return pos:line="672" pos:column="13">return <expr><name pos:line="672" pos:column="20">XML_ERROR_NO_MEMORY<pos:position pos:line="672" pos:column="39"/></name></expr>;<pos:position pos:line="672" pos:column="40"/></return></block></then></if>
	  <expr_stmt><expr><name><name pos:line="673" pos:column="11">dtd<pos:position pos:line="673" pos:column="14"/></name><operator pos:line="673" pos:column="14">.<pos:position pos:line="673" pos:column="15"/></operator><name pos:line="673" pos:column="15">scaffold<pos:position pos:line="673" pos:column="23"/></name><index pos:line="673" pos:column="23">[<expr><name pos:line="673" pos:column="24">myindex<pos:position pos:line="673" pos:column="31"/></name></expr>]<pos:position pos:line="673" pos:column="32"/></index></name><operator pos:line="673" pos:column="32">.<pos:position pos:line="673" pos:column="33"/></operator><name pos:line="673" pos:column="33">name<pos:position pos:line="673" pos:column="37"/></name> <operator pos:line="673" pos:column="38">=<pos:position pos:line="673" pos:column="39"/></operator> <name><name pos:line="673" pos:column="40">el<pos:position pos:line="673" pos:column="42"/></name><operator pos:line="673" pos:column="42">-&gt;<pos:position pos:line="673" pos:column="47"/></operator><name pos:line="673" pos:column="44">name<pos:position pos:line="673" pos:column="48"/></name></name></expr>;<pos:position pos:line="673" pos:column="49"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="674" pos:column="11">dtd<pos:position pos:line="674" pos:column="14"/></name><operator pos:line="674" pos:column="14">.<pos:position pos:line="674" pos:column="15"/></operator><name pos:line="674" pos:column="15">contentStringLen<pos:position pos:line="674" pos:column="31"/></name></name> <operator pos:line="674" pos:column="32">+=<pos:position pos:line="674" pos:column="34"/></operator>  <name pos:line="674" pos:column="36">nxt<pos:position pos:line="674" pos:column="39"/></name> <operator pos:line="674" pos:column="40">-<pos:position pos:line="674" pos:column="41"/></operator> <name pos:line="674" pos:column="42">s<pos:position pos:line="674" pos:column="43"/></name> <operator pos:line="674" pos:column="44">+<pos:position pos:line="674" pos:column="45"/></operator> <literal type="number" pos:line="674" pos:column="46">1<pos:position pos:line="674" pos:column="47"/></literal></expr>;<pos:position pos:line="674" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="675" pos:column="10"/></block></then></if>
      <break pos:line="676" pos:column="7">break;<pos:position pos:line="676" pos:column="13"/></break>

    <case pos:line="678" pos:column="5">case <expr><name pos:line="678" pos:column="10">XML_ROLE_GROUP_CLOSE<pos:position pos:line="678" pos:column="30"/></name></expr>:<pos:position pos:line="678" pos:column="31"/></case>
      <expr_stmt><expr><name pos:line="679" pos:column="7">quant<pos:position pos:line="679" pos:column="12"/></name> <operator pos:line="679" pos:column="13">=<pos:position pos:line="679" pos:column="14"/></operator> <name pos:line="679" pos:column="15">XML_CQUANT_NONE<pos:position pos:line="679" pos:column="30"/></name></expr>;<pos:position pos:line="679" pos:column="31"/></expr_stmt>
      <goto pos:line="680" pos:column="7">goto <name pos:line="680" pos:column="12">closeGroup<pos:position pos:line="680" pos:column="22"/></name>;<pos:position pos:line="680" pos:column="23"/></goto>
    <case pos:line="681" pos:column="5">case <expr><name pos:line="681" pos:column="10">XML_ROLE_GROUP_CLOSE_OPT<pos:position pos:line="681" pos:column="34"/></name></expr>:<pos:position pos:line="681" pos:column="35"/></case>
      <expr_stmt><expr><name pos:line="682" pos:column="7">quant<pos:position pos:line="682" pos:column="12"/></name> <operator pos:line="682" pos:column="13">=<pos:position pos:line="682" pos:column="14"/></operator> <name pos:line="682" pos:column="15">XML_CQUANT_OPT<pos:position pos:line="682" pos:column="29"/></name></expr>;<pos:position pos:line="682" pos:column="30"/></expr_stmt>
      <goto pos:line="683" pos:column="7">goto <name pos:line="683" pos:column="12">closeGroup<pos:position pos:line="683" pos:column="22"/></name>;<pos:position pos:line="683" pos:column="23"/></goto>
    <case pos:line="684" pos:column="5">case <expr><name pos:line="684" pos:column="10">XML_ROLE_GROUP_CLOSE_REP<pos:position pos:line="684" pos:column="34"/></name></expr>:<pos:position pos:line="684" pos:column="35"/></case>
      <expr_stmt><expr><name pos:line="685" pos:column="7">quant<pos:position pos:line="685" pos:column="12"/></name> <operator pos:line="685" pos:column="13">=<pos:position pos:line="685" pos:column="14"/></operator> <name pos:line="685" pos:column="15">XML_CQUANT_REP<pos:position pos:line="685" pos:column="29"/></name></expr>;<pos:position pos:line="685" pos:column="30"/></expr_stmt>
      <goto pos:line="686" pos:column="7">goto <name pos:line="686" pos:column="12">closeGroup<pos:position pos:line="686" pos:column="22"/></name>;<pos:position pos:line="686" pos:column="23"/></goto>
    <case pos:line="687" pos:column="5">case <expr><name pos:line="687" pos:column="10">XML_ROLE_GROUP_CLOSE_PLUS<pos:position pos:line="687" pos:column="35"/></name></expr>:<pos:position pos:line="687" pos:column="36"/></case>
      <expr_stmt><expr><name pos:line="688" pos:column="7">quant<pos:position pos:line="688" pos:column="12"/></name> <operator pos:line="688" pos:column="13">=<pos:position pos:line="688" pos:column="14"/></operator> <name pos:line="688" pos:column="15">XML_CQUANT_PLUS<pos:position pos:line="688" pos:column="30"/></name></expr>;<pos:position pos:line="688" pos:column="31"/></expr_stmt>
    <label><name pos:line="689" pos:column="5">closeGroup<pos:position pos:line="689" pos:column="15"/></name>:<pos:position pos:line="689" pos:column="16"/></label>
      <if pos:line="690" pos:column="7">if <condition pos:line="690" pos:column="10">(<expr><name><name pos:line="690" pos:column="11">dtd<pos:position pos:line="690" pos:column="14"/></name><operator pos:line="690" pos:column="14">.<pos:position pos:line="690" pos:column="15"/></operator><name pos:line="690" pos:column="15">in_eldecl<pos:position pos:line="690" pos:column="24"/></name></name></expr>)<pos:position pos:line="690" pos:column="25"/></condition><then pos:line="690" pos:column="25"> <block pos:line="690" pos:column="26">{
	<expr_stmt><expr><name><name pos:line="691" pos:column="9">dtd<pos:position pos:line="691" pos:column="12"/></name><operator pos:line="691" pos:column="12">.<pos:position pos:line="691" pos:column="13"/></operator><name pos:line="691" pos:column="13">scaffLevel<pos:position pos:line="691" pos:column="23"/></name></name><operator pos:line="691" pos:column="23">--<pos:position pos:line="691" pos:column="25"/></operator></expr>;<pos:position pos:line="691" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="692" pos:column="9">dtd<pos:position pos:line="692" pos:column="12"/></name><operator pos:line="692" pos:column="12">.<pos:position pos:line="692" pos:column="13"/></operator><name pos:line="692" pos:column="13">scaffold<pos:position pos:line="692" pos:column="21"/></name><index pos:line="692" pos:column="21">[<expr><name><name pos:line="692" pos:column="22">dtd<pos:position pos:line="692" pos:column="25"/></name><operator pos:line="692" pos:column="25">.<pos:position pos:line="692" pos:column="26"/></operator><name pos:line="692" pos:column="26">scaffIndex<pos:position pos:line="692" pos:column="36"/></name><index pos:line="692" pos:column="36">[<expr><name><name pos:line="692" pos:column="37">dtd<pos:position pos:line="692" pos:column="40"/></name><operator pos:line="692" pos:column="40">.<pos:position pos:line="692" pos:column="41"/></operator><name pos:line="692" pos:column="41">scaffLevel<pos:position pos:line="692" pos:column="51"/></name></name></expr>]<pos:position pos:line="692" pos:column="52"/></index></name></expr>]<pos:position pos:line="692" pos:column="53"/></index></name><operator pos:line="692" pos:column="53">.<pos:position pos:line="692" pos:column="54"/></operator><name pos:line="692" pos:column="54">quant<pos:position pos:line="692" pos:column="59"/></name> <operator pos:line="692" pos:column="60">=<pos:position pos:line="692" pos:column="61"/></operator> <name pos:line="692" pos:column="62">quant<pos:position pos:line="692" pos:column="67"/></name></expr>;<pos:position pos:line="692" pos:column="68"/></expr_stmt>
	<if pos:line="693" pos:column="9">if <condition pos:line="693" pos:column="12">(<expr><name><name pos:line="693" pos:column="13">dtd<pos:position pos:line="693" pos:column="16"/></name><operator pos:line="693" pos:column="16">.<pos:position pos:line="693" pos:column="17"/></operator><name pos:line="693" pos:column="17">scaffLevel<pos:position pos:line="693" pos:column="27"/></name></name> <operator pos:line="693" pos:column="28">==<pos:position pos:line="693" pos:column="30"/></operator> <literal type="number" pos:line="693" pos:column="31">0<pos:position pos:line="693" pos:column="32"/></literal></expr>)<pos:position pos:line="693" pos:column="33"/></condition><then pos:line="693" pos:column="33"> <block pos:line="693" pos:column="34">{
	  <if pos:line="694" pos:column="11">if <condition pos:line="694" pos:column="14">(<expr><name pos:line="694" pos:column="15">elementDeclHandler<pos:position pos:line="694" pos:column="33"/></name></expr>)<pos:position pos:line="694" pos:column="34"/></condition><then pos:line="694" pos:column="34"> <block pos:line="694" pos:column="35">{
	    <decl_stmt><decl><type><name pos:line="695" pos:column="13">XML_Content<pos:position pos:line="695" pos:column="24"/></name> <modifier pos:line="695" pos:column="25">*<pos:position pos:line="695" pos:column="26"/></modifier></type><name pos:line="695" pos:column="26">model<pos:position pos:line="695" pos:column="31"/></name> <init pos:line="695" pos:column="32">= <expr><call><name pos:line="695" pos:column="34">build_model<pos:position pos:line="695" pos:column="45"/></name><argument_list pos:line="695" pos:column="45">(<argument><expr><name pos:line="695" pos:column="46">parser<pos:position pos:line="695" pos:column="52"/></name></expr></argument>)<pos:position pos:line="695" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="695" pos:column="54"/></decl_stmt>
	    <if pos:line="696" pos:column="13">if <condition pos:line="696" pos:column="16">(<expr><operator pos:line="696" pos:column="17">!<pos:position pos:line="696" pos:column="18"/></operator> <name pos:line="696" pos:column="19">model<pos:position pos:line="696" pos:column="24"/></name></expr>)<pos:position pos:line="696" pos:column="25"/></condition><then pos:line="696" pos:column="25">
	      <block type="pseudo"><return pos:line="697" pos:column="15">return <expr><name pos:line="697" pos:column="22">XML_ERROR_NO_MEMORY<pos:position pos:line="697" pos:column="41"/></name></expr>;<pos:position pos:line="697" pos:column="42"/></return></block></then></if>
	    <expr_stmt><expr><operator pos:line="698" pos:column="13">*<pos:position pos:line="698" pos:column="14"/></operator><name pos:line="698" pos:column="14">eventEndPP<pos:position pos:line="698" pos:column="24"/></name> <operator pos:line="698" pos:column="25">=<pos:position pos:line="698" pos:column="26"/></operator> <name pos:line="698" pos:column="27">s<pos:position pos:line="698" pos:column="28"/></name></expr>;<pos:position pos:line="698" pos:column="29"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="699" pos:column="13">elementDeclHandler<pos:position pos:line="699" pos:column="31"/></name><argument_list pos:line="699" pos:column="31">(<argument><expr><name pos:line="699" pos:column="32">handlerArg<pos:position pos:line="699" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="699" pos:column="44">declElementType<pos:position pos:line="699" pos:column="59"/></name><operator pos:line="699" pos:column="59">-&gt;<pos:position pos:line="699" pos:column="64"/></operator><name pos:line="699" pos:column="61">name<pos:position pos:line="699" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="699" pos:column="67">model<pos:position pos:line="699" pos:column="72"/></name></expr></argument>)<pos:position pos:line="699" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="699" pos:column="74"/></expr_stmt>
	  }<pos:position pos:line="700" pos:column="12"/></block></then></if>
	  <expr_stmt><expr><name><name pos:line="701" pos:column="11">dtd<pos:position pos:line="701" pos:column="14"/></name><operator pos:line="701" pos:column="14">.<pos:position pos:line="701" pos:column="15"/></operator><name pos:line="701" pos:column="15">in_eldecl<pos:position pos:line="701" pos:column="24"/></name></name> <operator pos:line="701" pos:column="25">=<pos:position pos:line="701" pos:column="26"/></operator> <literal type="number" pos:line="701" pos:column="27">0<pos:position pos:line="701" pos:column="28"/></literal></expr>;<pos:position pos:line="701" pos:column="29"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="702" pos:column="11">dtd<pos:position pos:line="702" pos:column="14"/></name><operator pos:line="702" pos:column="14">.<pos:position pos:line="702" pos:column="15"/></operator><name pos:line="702" pos:column="15">contentStringLen<pos:position pos:line="702" pos:column="31"/></name></name> <operator pos:line="702" pos:column="32">=<pos:position pos:line="702" pos:column="33"/></operator> <literal type="number" pos:line="702" pos:column="34">0<pos:position pos:line="702" pos:column="35"/></literal></expr>;<pos:position pos:line="702" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="703" pos:column="10"/></block></then></if>
      }<pos:position pos:line="704" pos:column="8"/></block></then></if>
      <break pos:line="705" pos:column="7">break;<pos:position pos:line="705" pos:column="13"/></break>
      <comment type="block" pos:line="706" pos:column="7">/* End element declaration stuff */</comment>

    <case pos:line="708" pos:column="5">case <expr><name pos:line="708" pos:column="10">XML_ROLE_NONE<pos:position pos:line="708" pos:column="23"/></name></expr>:<pos:position pos:line="708" pos:column="24"/></case>
      <switch pos:line="709" pos:column="7">switch <condition pos:line="709" pos:column="14">(<expr><name pos:line="709" pos:column="15">tok<pos:position pos:line="709" pos:column="18"/></name></expr>)<pos:position pos:line="709" pos:column="19"/></condition> <block pos:line="709" pos:column="20">{
      <case pos:line="710" pos:column="7">case <expr><name pos:line="710" pos:column="12">XML_TOK_PI<pos:position pos:line="710" pos:column="22"/></name></expr>:<pos:position pos:line="710" pos:column="23"/></case>
	<if pos:line="711" pos:column="9">if <condition pos:line="711" pos:column="12">(<expr><operator pos:line="711" pos:column="13">!<pos:position pos:line="711" pos:column="14"/></operator><call><name pos:line="711" pos:column="14">reportProcessingInstruction<pos:position pos:line="711" pos:column="41"/></name><argument_list pos:line="711" pos:column="41">(<argument><expr><name pos:line="711" pos:column="42">parser<pos:position pos:line="711" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="711" pos:column="50">enc<pos:position pos:line="711" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="711" pos:column="55">s<pos:position pos:line="711" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="711" pos:column="58">next<pos:position pos:line="711" pos:column="62"/></name></expr></argument>)<pos:position pos:line="711" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="711" pos:column="64"/></condition><then pos:line="711" pos:column="64">
	  <block type="pseudo"><return pos:line="712" pos:column="11">return <expr><name pos:line="712" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="712" pos:column="37"/></name></expr>;<pos:position pos:line="712" pos:column="38"/></return></block></then></if>
	<break pos:line="713" pos:column="9">break;<pos:position pos:line="713" pos:column="15"/></break>
      <case pos:line="714" pos:column="7">case <expr><name pos:line="714" pos:column="12">XML_TOK_COMMENT<pos:position pos:line="714" pos:column="27"/></name></expr>:<pos:position pos:line="714" pos:column="28"/></case>
	<if pos:line="715" pos:column="9">if <condition pos:line="715" pos:column="12">(<expr><operator pos:line="715" pos:column="13">!<pos:position pos:line="715" pos:column="14"/></operator><call><name pos:line="715" pos:column="14">reportComment<pos:position pos:line="715" pos:column="27"/></name><argument_list pos:line="715" pos:column="27">(<argument><expr><name pos:line="715" pos:column="28">parser<pos:position pos:line="715" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="715" pos:column="36">enc<pos:position pos:line="715" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="715" pos:column="41">s<pos:position pos:line="715" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="715" pos:column="44">next<pos:position pos:line="715" pos:column="48"/></name></expr></argument>)<pos:position pos:line="715" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="715" pos:column="50"/></condition><then pos:line="715" pos:column="50">
	  <block type="pseudo"><return pos:line="716" pos:column="11">return <expr><name pos:line="716" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="716" pos:column="37"/></name></expr>;<pos:position pos:line="716" pos:column="38"/></return></block></then></if>
	<break pos:line="717" pos:column="9">break;<pos:position pos:line="717" pos:column="15"/></break>
      }<pos:position pos:line="718" pos:column="8"/></block></switch>
      <break pos:line="719" pos:column="7">break;<pos:position pos:line="719" pos:column="13"/></break>
    }<pos:position pos:line="720" pos:column="6"/></block></switch>
    <if pos:line="721" pos:column="5">if <condition pos:line="721" pos:column="8">(<expr><name pos:line="721" pos:column="9">defaultHandler<pos:position pos:line="721" pos:column="23"/></name></expr>)<pos:position pos:line="721" pos:column="24"/></condition><then pos:line="721" pos:column="24"> <block pos:line="721" pos:column="25">{
      <switch pos:line="722" pos:column="7">switch <condition pos:line="722" pos:column="14">(<expr><name pos:line="722" pos:column="15">tok<pos:position pos:line="722" pos:column="18"/></name></expr>)<pos:position pos:line="722" pos:column="19"/></condition> <block pos:line="722" pos:column="20">{
      <case pos:line="723" pos:column="7">case <expr><name pos:line="723" pos:column="12">XML_TOK_PI<pos:position pos:line="723" pos:column="22"/></name></expr>:<pos:position pos:line="723" pos:column="23"/></case>
      <case pos:line="724" pos:column="7">case <expr><name pos:line="724" pos:column="12">XML_TOK_COMMENT<pos:position pos:line="724" pos:column="27"/></name></expr>:<pos:position pos:line="724" pos:column="28"/></case>
      <case pos:line="725" pos:column="7">case <expr><name pos:line="725" pos:column="12">XML_TOK_BOM<pos:position pos:line="725" pos:column="23"/></name></expr>:<pos:position pos:line="725" pos:column="24"/></case>
      <case pos:line="726" pos:column="7">case <expr><name pos:line="726" pos:column="12">XML_TOK_XML_DECL<pos:position pos:line="726" pos:column="28"/></name></expr>:<pos:position pos:line="726" pos:column="29"/></case>
<cpp:ifdef pos:line="727" pos:column="1">#<cpp:directive pos:line="727" pos:column="2">ifdef<pos:position pos:line="727" pos:column="7"/></cpp:directive> <name pos:line="727" pos:column="8">XML_DTD<pos:position pos:line="727" pos:column="15"/></name></cpp:ifdef>
      <case pos:line="728" pos:column="7">case <expr><name pos:line="728" pos:column="12">XML_TOK_IGNORE_SECT<pos:position pos:line="728" pos:column="31"/></name></expr>:<pos:position pos:line="728" pos:column="32"/></case>
<cpp:endif pos:line="729" pos:column="1">#<cpp:directive pos:line="729" pos:column="2">endif<pos:position pos:line="729" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="729" pos:column="8">/* XML_DTD */</comment>
      <case pos:line="730" pos:column="7">case <expr><name pos:line="730" pos:column="12">XML_TOK_PARAM_ENTITY_REF<pos:position pos:line="730" pos:column="36"/></name></expr>:<pos:position pos:line="730" pos:column="37"/></case>
	<break pos:line="731" pos:column="9">break;<pos:position pos:line="731" pos:column="15"/></break>
      <default pos:line="732" pos:column="7">default:<pos:position pos:line="732" pos:column="15"/></default>
<cpp:ifdef pos:line="733" pos:column="1">#<cpp:directive pos:line="733" pos:column="2">ifdef<pos:position pos:line="733" pos:column="7"/></cpp:directive> <name pos:line="733" pos:column="8">XML_DTD<pos:position pos:line="733" pos:column="15"/></name></cpp:ifdef>
	<if pos:line="734" pos:column="9">if <condition pos:line="734" pos:column="12">(<expr><name pos:line="734" pos:column="13">role<pos:position pos:line="734" pos:column="17"/></name> <operator pos:line="734" pos:column="18">!=<pos:position pos:line="734" pos:column="20"/></operator> <name pos:line="734" pos:column="21">XML_ROLE_IGNORE_SECT<pos:position pos:line="734" pos:column="41"/></name></expr>)<pos:position pos:line="734" pos:column="42"/></condition><then pos:line="734" pos:column="42">
<cpp:endif pos:line="735" pos:column="1">#<cpp:directive pos:line="735" pos:column="2">endif<pos:position pos:line="735" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="735" pos:column="8">/* XML_DTD */</comment>
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="736" pos:column="11">reportDefault<pos:position pos:line="736" pos:column="24"/></name><argument_list pos:line="736" pos:column="24">(<argument><expr><name pos:line="736" pos:column="25">parser<pos:position pos:line="736" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="736" pos:column="33">enc<pos:position pos:line="736" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="736" pos:column="38">s<pos:position pos:line="736" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="736" pos:column="41">next<pos:position pos:line="736" pos:column="45"/></name></expr></argument>)<pos:position pos:line="736" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="736" pos:column="47"/></expr_stmt></block></then></if>
      }<pos:position pos:line="737" pos:column="8"/></block></switch>
    }<pos:position pos:line="738" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="739" pos:column="5">s<pos:position pos:line="739" pos:column="6"/></name> <operator pos:line="739" pos:column="7">=<pos:position pos:line="739" pos:column="8"/></operator> <name pos:line="739" pos:column="9">next<pos:position pos:line="739" pos:column="13"/></name></expr>;<pos:position pos:line="739" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name pos:line="740" pos:column="5">tok<pos:position pos:line="740" pos:column="8"/></name> <operator pos:line="740" pos:column="9">=<pos:position pos:line="740" pos:column="10"/></operator> <call><name pos:line="740" pos:column="11">XmlPrologTok<pos:position pos:line="740" pos:column="23"/></name><argument_list pos:line="740" pos:column="23">(<argument><expr><name pos:line="740" pos:column="24">enc<pos:position pos:line="740" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="740" pos:column="29">s<pos:position pos:line="740" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="740" pos:column="32">end<pos:position pos:line="740" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="740" pos:column="37">&amp;<pos:position pos:line="740" pos:column="42"/></operator><name pos:line="740" pos:column="38">next<pos:position pos:line="740" pos:column="42"/></name></expr></argument>)<pos:position pos:line="740" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="740" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="741" pos:column="4"/></block></for>
  <comment type="block" pos:line="742" pos:column="3">/* not reached */</comment>
}<pos:position pos:line="743" pos:column="2"/></block></function></unit>

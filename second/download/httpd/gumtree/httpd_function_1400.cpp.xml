<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1400.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">reqtimeout_filter<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">ap_filter_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">f<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="2" pos:column="39">apr_bucket_brigade<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">bb<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="3" pos:column="39">ap_input_mode_t<pos:position pos:line="3" pos:column="54"/></name></type> <name pos:line="3" pos:column="55">mode<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="4" pos:column="39">apr_read_type_e<pos:position pos:line="4" pos:column="54"/></name></type> <name pos:line="4" pos:column="55">block<pos:position pos:line="4" pos:column="60"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="5" pos:column="39">apr_off_t<pos:position pos:line="5" pos:column="48"/></name></type> <name pos:line="5" pos:column="49">readbytes<pos:position pos:line="5" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="59"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">reqtimeout_ctx<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">ctx<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_time_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">time_left<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_time_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">now<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_status_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">rv<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_interval_time_t<pos:position pos:line="11" pos:column="24"/></name></type> <name pos:line="11" pos:column="25">saved_sock_timeout<pos:position pos:line="11" pos:column="43"/></name> <init pos:line="11" pos:column="44">= <expr><operator pos:line="11" pos:column="46">-<pos:position pos:line="11" pos:column="47"/></operator><literal type="number" pos:line="11" pos:column="47">1<pos:position pos:line="11" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">reqtimeout_con_cfg<pos:position pos:line="12" pos:column="23"/></name> <modifier pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></modifier></type><name pos:line="12" pos:column="25">ccfg<pos:position pos:line="12" pos:column="29"/></name></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>

    <expr_stmt><expr><name pos:line="14" pos:column="5">ctx<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">=<pos:position pos:line="14" pos:column="10"/></operator> <name><name pos:line="14" pos:column="11">f<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">ctx<pos:position pos:line="14" pos:column="17"/></name></name></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">ctx<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">!=<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="28">NULL<pos:position pos:line="15" pos:column="32"/></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">ccfg<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <call><name pos:line="17" pos:column="12">ap_get_module_config<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name><name pos:line="17" pos:column="33">f<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">-&gt;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="36">c<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">conn_config<pos:position pos:line="17" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="52">&amp;<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="53">reqtimeout_module<pos:position pos:line="17" pos:column="70"/></name></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">ccfg<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">!=<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">NULL<pos:position pos:line="18" pos:column="33"/></name></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">ccfg<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">in_keep_alive<pos:position pos:line="20" pos:column="28"/></name></name></expr>)<pos:position pos:line="20" pos:column="29"/></condition><then pos:line="20" pos:column="29"> <block pos:line="20" pos:column="30">{
        <comment type="block" pos:line="21" pos:column="9">/* For this read, the normal keep-alive timeout must be used */</comment>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">ccfg<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">in_keep_alive<pos:position pos:line="22" pos:column="28"/></name></name> <operator pos:line="22" pos:column="29">=<pos:position pos:line="22" pos:column="30"/></operator> <literal type="number" pos:line="22" pos:column="31">0<pos:position pos:line="22" pos:column="32"/></literal></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><call><name pos:line="23" pos:column="16">ap_get_brigade<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name><name pos:line="23" pos:column="31">f<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">-&gt;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="34">next<pos:position pos:line="23" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="40">bb<pos:position pos:line="23" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="44">mode<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="50">block<pos:position pos:line="23" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="57">readbytes<pos:position pos:line="23" pos:column="66"/></name></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="68"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="26" pos:column="5">now<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <call><name pos:line="26" pos:column="11">apr_time_now<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">()<pos:position pos:line="26" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name><name pos:line="27" pos:column="9">ccfg<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">new_timeout<pos:position pos:line="27" pos:column="26"/></name></name> <operator pos:line="27" pos:column="27">&gt;<pos:position pos:line="27" pos:column="31"/></operator> <literal type="number" pos:line="27" pos:column="29">0<pos:position pos:line="27" pos:column="30"/></literal></expr>)<pos:position pos:line="27" pos:column="31"/></condition><then pos:line="27" pos:column="31"> <block pos:line="27" pos:column="32">{
        <comment type="block" pos:line="28" pos:column="9">/* set new timeout */</comment>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">ccfg<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">-&gt;<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="15">timeout_at<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <name pos:line="29" pos:column="28">now<pos:position pos:line="29" pos:column="31"/></name> <operator pos:line="29" pos:column="32">+<pos:position pos:line="29" pos:column="33"/></operator> <call><name pos:line="29" pos:column="34">apr_time_from_sec<pos:position pos:line="29" pos:column="51"/></name><argument_list pos:line="29" pos:column="51">(<argument><expr><name><name pos:line="29" pos:column="52">ccfg<pos:position pos:line="29" pos:column="56"/></name><operator pos:line="29" pos:column="56">-&gt;<pos:position pos:line="29" pos:column="61"/></operator><name pos:line="29" pos:column="58">new_timeout<pos:position pos:line="29" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">ccfg<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">-&gt;<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="15">new_timeout<pos:position pos:line="30" pos:column="26"/></name></name> <operator pos:line="30" pos:column="27">=<pos:position pos:line="30" pos:column="28"/></operator> <literal type="number" pos:line="30" pos:column="29">0<pos:position pos:line="30" pos:column="30"/></literal></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name><name pos:line="31" pos:column="13">ccfg<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">new_max_timeout<pos:position pos:line="31" pos:column="34"/></name></name> <operator pos:line="31" pos:column="35">&gt;<pos:position pos:line="31" pos:column="39"/></operator> <literal type="number" pos:line="31" pos:column="37">0<pos:position pos:line="31" pos:column="38"/></literal></expr>)<pos:position pos:line="31" pos:column="39"/></condition><then pos:line="31" pos:column="39"> <block pos:line="31" pos:column="40">{
            <expr_stmt><expr><name><name pos:line="32" pos:column="13">ccfg<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">max_timeout_at<pos:position pos:line="32" pos:column="33"/></name></name> <operator pos:line="32" pos:column="34">=<pos:position pos:line="32" pos:column="35"/></operator> <name pos:line="32" pos:column="36">now<pos:position pos:line="32" pos:column="39"/></name> <operator pos:line="32" pos:column="40">+<pos:position pos:line="32" pos:column="41"/></operator> <call><name pos:line="32" pos:column="42">apr_time_from_sec<pos:position pos:line="32" pos:column="59"/></name><argument_list pos:line="32" pos:column="59">(<argument><expr><name><name pos:line="32" pos:column="60">ccfg<pos:position pos:line="32" pos:column="64"/></name><operator pos:line="32" pos:column="64">-&gt;<pos:position pos:line="32" pos:column="69"/></operator><name pos:line="32" pos:column="66">new_max_timeout<pos:position pos:line="32" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="33" pos:column="13">ccfg<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">-&gt;<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="19">new_max_timeout<pos:position pos:line="33" pos:column="34"/></name></name> <operator pos:line="33" pos:column="35">=<pos:position pos:line="33" pos:column="36"/></operator> <literal type="number" pos:line="33" pos:column="37">0<pos:position pos:line="33" pos:column="38"/></literal></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
    }<pos:position pos:line="35" pos:column="6"/></block></then>
    <elseif pos:line="36" pos:column="5">else <if pos:line="36" pos:column="10">if <condition pos:line="36" pos:column="13">(<expr><name><name pos:line="36" pos:column="14">ccfg<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">-&gt;<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="20">timeout_at<pos:position pos:line="36" pos:column="30"/></name></name> <operator pos:line="36" pos:column="31">==<pos:position pos:line="36" pos:column="33"/></operator> <literal type="number" pos:line="36" pos:column="34">0<pos:position pos:line="36" pos:column="35"/></literal></expr>)<pos:position pos:line="36" pos:column="36"/></condition><then pos:line="36" pos:column="36"> <block pos:line="36" pos:column="37">{
        <comment type="block" pos:line="37" pos:column="9">/* no timeout set */</comment>
        <return pos:line="38" pos:column="9">return <expr><call><name pos:line="38" pos:column="16">ap_get_brigade<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">(<argument><expr><name><name pos:line="38" pos:column="31">f<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">-&gt;<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="34">next<pos:position pos:line="38" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="40">bb<pos:position pos:line="38" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="44">mode<pos:position pos:line="38" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="50">block<pos:position pos:line="38" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="57">readbytes<pos:position pos:line="38" pos:column="66"/></name></expr></argument>)<pos:position pos:line="38" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="68"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><name pos:line="41" pos:column="5">time_left<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <name><name pos:line="41" pos:column="17">ccfg<pos:position pos:line="41" pos:column="21"/></name><operator pos:line="41" pos:column="21">-&gt;<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="23">timeout_at<pos:position pos:line="41" pos:column="33"/></name></name> <operator pos:line="41" pos:column="34">-<pos:position pos:line="41" pos:column="35"/></operator> <name pos:line="41" pos:column="36">now<pos:position pos:line="41" pos:column="39"/></name></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">time_left<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">&lt;=<pos:position pos:line="42" pos:column="24"/></operator> <literal type="number" pos:line="42" pos:column="22">0<pos:position pos:line="42" pos:column="23"/></literal></expr>)<pos:position pos:line="42" pos:column="24"/></condition><then pos:line="42" pos:column="24"> <block pos:line="42" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">ap_log_cerror<pos:position pos:line="43" pos:column="22"/></name><argument_list pos:line="43" pos:column="22">(<argument><expr><name pos:line="43" pos:column="23">APLOG_MARK<pos:position pos:line="43" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="35">APLOG_INFO<pos:position pos:line="43" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="47">0<pos:position pos:line="43" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="50">f<pos:position pos:line="43" pos:column="51"/></name><operator pos:line="43" pos:column="51">-&gt;<pos:position pos:line="43" pos:column="56"/></operator><name pos:line="43" pos:column="53">c<pos:position pos:line="43" pos:column="54"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="44" pos:column="23">"Request %s read timeout"<pos:position pos:line="44" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="50">ccfg<pos:position pos:line="44" pos:column="54"/></name><operator pos:line="44" pos:column="54">-&gt;<pos:position pos:line="44" pos:column="59"/></operator><name pos:line="44" pos:column="56">type<pos:position pos:line="44" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="62"/></expr_stmt>
        <return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">APR_TIMEUP<pos:position pos:line="45" pos:column="26"/></name></expr>;<pos:position pos:line="45" pos:column="27"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">block<pos:position pos:line="48" pos:column="14"/></name> <operator pos:line="48" pos:column="15">==<pos:position pos:line="48" pos:column="17"/></operator> <name pos:line="48" pos:column="18">APR_NONBLOCK_READ<pos:position pos:line="48" pos:column="35"/></name> <operator pos:line="48" pos:column="36">||<pos:position pos:line="48" pos:column="38"/></operator> <name pos:line="48" pos:column="39">mode<pos:position pos:line="48" pos:column="43"/></name> <operator pos:line="48" pos:column="44">==<pos:position pos:line="48" pos:column="46"/></operator> <name pos:line="48" pos:column="47">AP_MODE_INIT<pos:position pos:line="48" pos:column="59"/></name>
        <operator pos:line="49" pos:column="9">||<pos:position pos:line="49" pos:column="11"/></operator> <name pos:line="49" pos:column="12">mode<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">==<pos:position pos:line="49" pos:column="19"/></operator> <name pos:line="49" pos:column="20">AP_MODE_EATCRLF<pos:position pos:line="49" pos:column="35"/></name></expr>)<pos:position pos:line="49" pos:column="36"/></condition><then pos:line="49" pos:column="36"> <block pos:line="49" pos:column="37">{
        <expr_stmt><expr><name pos:line="50" pos:column="9">rv<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <call><name pos:line="50" pos:column="14">ap_get_brigade<pos:position pos:line="50" pos:column="28"/></name><argument_list pos:line="50" pos:column="28">(<argument><expr><name><name pos:line="50" pos:column="29">f<pos:position pos:line="50" pos:column="30"/></name><operator pos:line="50" pos:column="30">-&gt;<pos:position pos:line="50" pos:column="35"/></operator><name pos:line="50" pos:column="32">next<pos:position pos:line="50" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="38">bb<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="42">mode<pos:position pos:line="50" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="48">block<pos:position pos:line="50" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="55">readbytes<pos:position pos:line="50" pos:column="64"/></name></expr></argument>)<pos:position pos:line="50" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="66"/></expr_stmt>
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name><name pos:line="51" pos:column="13">ccfg<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">-&gt;<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="19">min_rate<pos:position pos:line="51" pos:column="27"/></name></name> <operator pos:line="51" pos:column="28">&gt;<pos:position pos:line="51" pos:column="32"/></operator> <literal type="number" pos:line="51" pos:column="30">0<pos:position pos:line="51" pos:column="31"/></literal> <operator pos:line="51" pos:column="32">&amp;&amp;<pos:position pos:line="51" pos:column="42"/></operator> <name pos:line="51" pos:column="35">rv<pos:position pos:line="51" pos:column="37"/></name> <operator pos:line="51" pos:column="38">==<pos:position pos:line="51" pos:column="40"/></operator> <name pos:line="51" pos:column="41">APR_SUCCESS<pos:position pos:line="51" pos:column="52"/></name></expr>)<pos:position pos:line="51" pos:column="53"/></condition><then pos:line="51" pos:column="53"> <block pos:line="51" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">extend_timeout<pos:position pos:line="52" pos:column="27"/></name><argument_list pos:line="52" pos:column="27">(<argument><expr><name pos:line="52" pos:column="28">ccfg<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="34">bb<pos:position pos:line="52" pos:column="36"/></name></expr></argument>)<pos:position pos:line="52" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if>
        <return pos:line="54" pos:column="9">return <expr><name pos:line="54" pos:column="16">rv<pos:position pos:line="54" pos:column="18"/></name></expr>;<pos:position pos:line="54" pos:column="19"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name pos:line="57" pos:column="9">time_left<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">&lt;<pos:position pos:line="57" pos:column="23"/></operator> <call><name pos:line="57" pos:column="21">apr_time_from_sec<pos:position pos:line="57" pos:column="38"/></name><argument_list pos:line="57" pos:column="38">(<argument><expr><literal type="number" pos:line="57" pos:column="39">1<pos:position pos:line="57" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="42"/></condition><then pos:line="57" pos:column="42"> <block pos:line="57" pos:column="43">{
        <expr_stmt><expr><name pos:line="58" pos:column="9">time_left<pos:position pos:line="58" pos:column="18"/></name> <operator pos:line="58" pos:column="19">=<pos:position pos:line="58" pos:column="20"/></operator> <call><name pos:line="58" pos:column="21">apr_time_from_sec<pos:position pos:line="58" pos:column="38"/></name><argument_list pos:line="58" pos:column="38">(<argument><expr><literal type="number" pos:line="58" pos:column="39">1<pos:position pos:line="58" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="61" pos:column="5">rv<pos:position pos:line="61" pos:column="7"/></name> <operator pos:line="61" pos:column="8">=<pos:position pos:line="61" pos:column="9"/></operator> <call><name pos:line="61" pos:column="10">apr_socket_timeout_get<pos:position pos:line="61" pos:column="32"/></name><argument_list pos:line="61" pos:column="32">(<argument><expr><name><name pos:line="61" pos:column="33">ctx<pos:position pos:line="61" pos:column="36"/></name><operator pos:line="61" pos:column="36">-&gt;<pos:position pos:line="61" pos:column="41"/></operator><name pos:line="61" pos:column="38">socket<pos:position pos:line="61" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="46">&amp;<pos:position pos:line="61" pos:column="51"/></operator><name pos:line="61" pos:column="47">saved_sock_timeout<pos:position pos:line="61" pos:column="65"/></name></expr></argument>)<pos:position pos:line="61" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="62" pos:column="20"/></name><argument_list pos:line="62" pos:column="20">(<argument><expr><name pos:line="62" pos:column="21">rv<pos:position pos:line="62" pos:column="23"/></name> <operator pos:line="62" pos:column="24">==<pos:position pos:line="62" pos:column="26"/></operator> <name pos:line="62" pos:column="27">APR_SUCCESS<pos:position pos:line="62" pos:column="38"/></name></expr></argument>)<pos:position pos:line="62" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="40"/></expr_stmt>

    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name pos:line="64" pos:column="9">saved_sock_timeout<pos:position pos:line="64" pos:column="27"/></name> <operator pos:line="64" pos:column="28">&gt;=<pos:position pos:line="64" pos:column="33"/></operator> <name pos:line="64" pos:column="31">time_left<pos:position pos:line="64" pos:column="40"/></name></expr>)<pos:position pos:line="64" pos:column="41"/></condition><then pos:line="64" pos:column="41"> <block pos:line="64" pos:column="42">{
        <expr_stmt><expr><name pos:line="65" pos:column="9">rv<pos:position pos:line="65" pos:column="11"/></name> <operator pos:line="65" pos:column="12">=<pos:position pos:line="65" pos:column="13"/></operator> <call><name pos:line="65" pos:column="14">apr_socket_timeout_set<pos:position pos:line="65" pos:column="36"/></name><argument_list pos:line="65" pos:column="36">(<argument><expr><name><name pos:line="65" pos:column="37">ctx<pos:position pos:line="65" pos:column="40"/></name><operator pos:line="65" pos:column="40">-&gt;<pos:position pos:line="65" pos:column="45"/></operator><name pos:line="65" pos:column="42">socket<pos:position pos:line="65" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="50">time_left<pos:position pos:line="65" pos:column="59"/></name></expr></argument>)<pos:position pos:line="65" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">AP_DEBUG_ASSERT<pos:position pos:line="66" pos:column="24"/></name><argument_list pos:line="66" pos:column="24">(<argument><expr><name pos:line="66" pos:column="25">rv<pos:position pos:line="66" pos:column="27"/></name> <operator pos:line="66" pos:column="28">==<pos:position pos:line="66" pos:column="30"/></operator> <name pos:line="66" pos:column="31">APR_SUCCESS<pos:position pos:line="66" pos:column="42"/></name></expr></argument>)<pos:position pos:line="66" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></then>
    <else pos:line="68" pos:column="5">else <block pos:line="68" pos:column="10">{
        <expr_stmt><expr><name pos:line="69" pos:column="9">saved_sock_timeout<pos:position pos:line="69" pos:column="27"/></name> <operator pos:line="69" pos:column="28">=<pos:position pos:line="69" pos:column="29"/></operator> <operator pos:line="69" pos:column="30">-<pos:position pos:line="69" pos:column="31"/></operator><literal type="number" pos:line="69" pos:column="31">1<pos:position pos:line="69" pos:column="32"/></literal></expr>;<pos:position pos:line="69" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="72" pos:column="5">rv<pos:position pos:line="72" pos:column="7"/></name> <operator pos:line="72" pos:column="8">=<pos:position pos:line="72" pos:column="9"/></operator> <call><name pos:line="72" pos:column="10">ap_get_brigade<pos:position pos:line="72" pos:column="24"/></name><argument_list pos:line="72" pos:column="24">(<argument><expr><name><name pos:line="72" pos:column="25">f<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">-&gt;<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="28">next<pos:position pos:line="72" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="34">bb<pos:position pos:line="72" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="38">mode<pos:position pos:line="72" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="44">block<pos:position pos:line="72" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="51">readbytes<pos:position pos:line="72" pos:column="60"/></name></expr></argument>)<pos:position pos:line="72" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="62"/></expr_stmt>

    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name pos:line="74" pos:column="9">saved_sock_timeout<pos:position pos:line="74" pos:column="27"/></name> <operator pos:line="74" pos:column="28">!=<pos:position pos:line="74" pos:column="30"/></operator> <operator pos:line="74" pos:column="31">-<pos:position pos:line="74" pos:column="32"/></operator><literal type="number" pos:line="74" pos:column="32">1<pos:position pos:line="74" pos:column="33"/></literal></expr>)<pos:position pos:line="74" pos:column="34"/></condition><then pos:line="74" pos:column="34"> <block pos:line="74" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">apr_socket_timeout_set<pos:position pos:line="75" pos:column="31"/></name><argument_list pos:line="75" pos:column="31">(<argument><expr><name><name pos:line="75" pos:column="32">ctx<pos:position pos:line="75" pos:column="35"/></name><operator pos:line="75" pos:column="35">-&gt;<pos:position pos:line="75" pos:column="40"/></operator><name pos:line="75" pos:column="37">socket<pos:position pos:line="75" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="45">saved_sock_timeout<pos:position pos:line="75" pos:column="63"/></name></expr></argument>)<pos:position pos:line="75" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>

    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><name><name pos:line="78" pos:column="9">ccfg<pos:position pos:line="78" pos:column="13"/></name><operator pos:line="78" pos:column="13">-&gt;<pos:position pos:line="78" pos:column="18"/></operator><name pos:line="78" pos:column="15">min_rate<pos:position pos:line="78" pos:column="23"/></name></name> <operator pos:line="78" pos:column="24">&gt;<pos:position pos:line="78" pos:column="28"/></operator> <literal type="number" pos:line="78" pos:column="26">0<pos:position pos:line="78" pos:column="27"/></literal> <operator pos:line="78" pos:column="28">&amp;&amp;<pos:position pos:line="78" pos:column="38"/></operator> <name pos:line="78" pos:column="31">rv<pos:position pos:line="78" pos:column="33"/></name> <operator pos:line="78" pos:column="34">==<pos:position pos:line="78" pos:column="36"/></operator> <name pos:line="78" pos:column="37">APR_SUCCESS<pos:position pos:line="78" pos:column="48"/></name></expr>)<pos:position pos:line="78" pos:column="49"/></condition><then pos:line="78" pos:column="49"> <block pos:line="78" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">extend_timeout<pos:position pos:line="79" pos:column="23"/></name><argument_list pos:line="79" pos:column="23">(<argument><expr><name pos:line="79" pos:column="24">ccfg<pos:position pos:line="79" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="30">bb<pos:position pos:line="79" pos:column="32"/></name></expr></argument>)<pos:position pos:line="79" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>

    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><call><name pos:line="82" pos:column="9">APR_STATUS_IS_TIMEUP<pos:position pos:line="82" pos:column="29"/></name><argument_list pos:line="82" pos:column="29">(<argument><expr><name pos:line="82" pos:column="30">rv<pos:position pos:line="82" pos:column="32"/></name></expr></argument>)<pos:position pos:line="82" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="34"/></condition><then pos:line="82" pos:column="34"> <block pos:line="82" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">ap_log_cerror<pos:position pos:line="83" pos:column="22"/></name><argument_list pos:line="83" pos:column="22">(<argument><expr><name pos:line="83" pos:column="23">APLOG_MARK<pos:position pos:line="83" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="35">APLOG_INFO<pos:position pos:line="83" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="47">0<pos:position pos:line="83" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="50">f<pos:position pos:line="83" pos:column="51"/></name><operator pos:line="83" pos:column="51">-&gt;<pos:position pos:line="83" pos:column="56"/></operator><name pos:line="83" pos:column="53">c<pos:position pos:line="83" pos:column="54"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="84" pos:column="23">"Request %s read timeout"<pos:position pos:line="84" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="50">ccfg<pos:position pos:line="84" pos:column="54"/></name><operator pos:line="84" pos:column="54">-&gt;<pos:position pos:line="84" pos:column="59"/></operator><name pos:line="84" pos:column="56">type<pos:position pos:line="84" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>
    <return pos:line="86" pos:column="5">return <expr><name pos:line="86" pos:column="12">rv<pos:position pos:line="86" pos:column="14"/></name></expr>;<pos:position pos:line="86" pos:column="15"/></return>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

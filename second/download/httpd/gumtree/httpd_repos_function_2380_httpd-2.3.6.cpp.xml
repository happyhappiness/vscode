<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2380_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">noloris_conn<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">conn_rec<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">conn<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <struct pos:line="3" pos:column="5">struct <block pos:line="3" pos:column="12">{<public type="default" pos:line="3" pos:column="13"> <decl_stmt><decl><type><name pos:line="3" pos:column="14">int<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">child_num<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt> <decl_stmt><decl><type><name pos:line="3" pos:column="29">int<pos:position pos:line="3" pos:column="32"/></name></type> <name pos:line="3" pos:column="33">thread_num<pos:position pos:line="3" pos:column="43"/></name></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt> <pos:position pos:line="3" pos:column="45"/></public>}<pos:position pos:line="3" pos:column="46"/></block> <decl><modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier><name pos:line="3" pos:column="48">sbh<pos:position pos:line="3" pos:column="51"/></name> <init pos:line="3" pos:column="52">= <expr><name><name pos:line="3" pos:column="54">conn<pos:position pos:line="3" pos:column="58"/></name><operator pos:line="3" pos:column="58">-&gt;<pos:position pos:line="3" pos:column="63"/></operator><name pos:line="3" pos:column="60">sbh<pos:position pos:line="3" pos:column="63"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="64"/></struct>

    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">shm_rec<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">shm<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">==<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr>)<pos:position pos:line="6" pos:column="21"/></condition><then pos:line="6" pos:column="21"> <block pos:line="6" pos:column="22">{
        <return pos:line="7" pos:column="9">return <expr><name pos:line="7" pos:column="16">DECLINED<pos:position pos:line="7" pos:column="24"/></name></expr>;<pos:position pos:line="7" pos:column="25"/></return>  <comment type="block" pos:line="7" pos:column="27">/* we're disabled */</comment>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="10" pos:column="5">/* check the IP is not banned */</comment>
    <expr_stmt><expr><name pos:line="11" pos:column="5">shm_rec<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <call><name pos:line="11" pos:column="15">apr_shm_baseaddr_get<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">shm<pos:position pos:line="11" pos:column="39"/></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>
    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><name><name pos:line="12" pos:column="12">shm_rec<pos:position pos:line="12" pos:column="19"/></name><index pos:line="12" pos:column="19">[<expr><literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr>]<pos:position pos:line="12" pos:column="22"/></index></name> <operator pos:line="12" pos:column="23">!=<pos:position pos:line="12" pos:column="25"/></operator> <literal type="char" pos:line="12" pos:column="26">'\0'<pos:position pos:line="12" pos:column="30"/></literal></expr>)<pos:position pos:line="12" pos:column="31"/></condition> <block pos:line="12" pos:column="32">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">strcmp<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">shm_rec<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="30">conn<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">-&gt;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="36">remote_ip<pos:position pos:line="13" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="47"/></condition><then pos:line="13" pos:column="47"> <block pos:line="13" pos:column="48">{
            <decl_stmt><decl><type><name pos:line="14" pos:column="13">apr_socket_t<pos:position pos:line="14" pos:column="25"/></name> <modifier pos:line="14" pos:column="26">*<pos:position pos:line="14" pos:column="27"/></modifier></type><name pos:line="14" pos:column="27">csd<pos:position pos:line="14" pos:column="30"/></name> <init pos:line="14" pos:column="31">= <expr><call><name pos:line="14" pos:column="33">ap_get_module_config<pos:position pos:line="14" pos:column="53"/></name><argument_list pos:line="14" pos:column="53">(<argument><expr><name><name pos:line="14" pos:column="54">conn<pos:position pos:line="14" pos:column="58"/></name><operator pos:line="14" pos:column="58">-&gt;<pos:position pos:line="14" pos:column="63"/></operator><name pos:line="14" pos:column="60">conn_config<pos:position pos:line="14" pos:column="71"/></name></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="73">&amp;<pos:position pos:line="14" pos:column="78"/></operator><name pos:line="14" pos:column="74">core_module<pos:position pos:line="14" pos:column="85"/></name></expr></argument>)<pos:position pos:line="14" pos:column="86"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="87"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">ap_log_cerror<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">APLOG_MARK<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">APLOG_ERR<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="50">0<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="53">conn<pos:position pos:line="15" pos:column="57"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="16" pos:column="27">"Dropping connection from banned IP %s"<pos:position pos:line="16" pos:column="66"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="17" pos:column="27">conn<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">remote_ip<pos:position pos:line="17" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">apr_socket_close<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">csd<pos:position pos:line="18" pos:column="33"/></name></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>

            <return pos:line="20" pos:column="13">return <expr><name pos:line="20" pos:column="20">DONE<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></return>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="22" pos:column="9">shm_rec<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">+=<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="20">ADDR_MAX_SIZE<pos:position pos:line="22" pos:column="33"/></name></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></while>

    <comment type="block" pos:line="25" pos:column="5">/* store this client IP for the monitor to pick up */</comment>
 
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">ap_update_child_status_from_conn<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><name><name pos:line="27" pos:column="38">conn<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">sbh<pos:position pos:line="27" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="49">SERVER_READY<pos:position pos:line="27" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="63">conn<pos:position pos:line="27" pos:column="67"/></name></expr></argument>)<pos:position pos:line="27" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="69"/></expr_stmt>

    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">DECLINED<pos:position pos:line="29" pos:column="20"/></name></expr>;<pos:position pos:line="29" pos:column="21"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

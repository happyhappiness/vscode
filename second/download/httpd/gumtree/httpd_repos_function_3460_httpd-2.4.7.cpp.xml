<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3460_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">create_listener_thread<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">void<pos:position pos:line="1" pos:column="40"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">unsigned<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">tid<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">num_listeners<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><literal type="number" pos:line="4" pos:column="25">0<pos:position pos:line="4" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* Start an accept thread per listener
     * XXX: Why would we have a NULL sd in our listeners?
     */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ap_listen_rec<pos:position pos:line="8" pos:column="18"/></name> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="20">lr<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* Number of completion_contexts allowed in the system is
     * (ap_threads_per_child + num_listeners). We need the additional
     * completion contexts to prevent server hangs when ThreadsPerChild
     * is configured to something less than or equal to the number
     * of listeners. This is not a usual case, but people have
     * encountered it.
     */</comment>
    <for pos:line="17" pos:column="5">for <control pos:line="17" pos:column="9">(<init><expr><name pos:line="17" pos:column="10">lr<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <name pos:line="17" pos:column="15">ap_listeners<pos:position pos:line="17" pos:column="27"/></name></expr>;<pos:position pos:line="17" pos:column="28"/></init> <condition><expr><name pos:line="17" pos:column="29">lr<pos:position pos:line="17" pos:column="31"/></name></expr> ;<pos:position pos:line="17" pos:column="33"/></condition> <incr><expr><name pos:line="17" pos:column="34">lr<pos:position pos:line="17" pos:column="36"/></name> <operator pos:line="17" pos:column="37">=<pos:position pos:line="17" pos:column="38"/></operator> <name><name pos:line="17" pos:column="39">lr<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">-&gt;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="43">next<pos:position pos:line="17" pos:column="47"/></name></name></expr></incr>)<pos:position pos:line="17" pos:column="48"/></control> <block pos:line="17" pos:column="49">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">num_listeners<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">++<pos:position pos:line="18" pos:column="24"/></operator></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></for>
    <expr_stmt><expr><name pos:line="20" pos:column="5">max_num_completion_contexts<pos:position pos:line="20" pos:column="32"/></name> <operator pos:line="20" pos:column="33">=<pos:position pos:line="20" pos:column="34"/></operator> <name pos:line="20" pos:column="35">ap_threads_per_child<pos:position pos:line="20" pos:column="55"/></name> <operator pos:line="20" pos:column="56">+<pos:position pos:line="20" pos:column="57"/></operator> <name pos:line="20" pos:column="58">num_listeners<pos:position pos:line="20" pos:column="71"/></name></expr>;<pos:position pos:line="20" pos:column="72"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* Now start a thread per listener */</comment>
    <for pos:line="23" pos:column="5">for <control pos:line="23" pos:column="9">(<init><expr><name pos:line="23" pos:column="10">lr<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <name pos:line="23" pos:column="15">ap_listeners<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></init> <condition><expr><name pos:line="23" pos:column="29">lr<pos:position pos:line="23" pos:column="31"/></name></expr>;<pos:position pos:line="23" pos:column="32"/></condition> <incr><expr><name pos:line="23" pos:column="33">lr<pos:position pos:line="23" pos:column="35"/></name> <operator pos:line="23" pos:column="36">=<pos:position pos:line="23" pos:column="37"/></operator> <name><name pos:line="23" pos:column="38">lr<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">-&gt;<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="42">next<pos:position pos:line="23" pos:column="46"/></name></name></expr></incr>)<pos:position pos:line="23" pos:column="47"/></control> <block pos:line="23" pos:column="48">{
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">lr<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">sd<pos:position pos:line="24" pos:column="19"/></name></name> <operator pos:line="24" pos:column="20">!=<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">NULL<pos:position pos:line="24" pos:column="27"/></name></expr>)<pos:position pos:line="24" pos:column="28"/></condition><then pos:line="24" pos:column="28"> <block pos:line="24" pos:column="29">{
            <comment type="block" pos:line="25" pos:column="13">/* A smaller stack is sufficient.
             * To convert to CreateThread, the returned handle cannot be
             * ignored, it must be closed/joined.
             */</comment>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">_beginthreadex<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><name pos:line="29" pos:column="28">NULL<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="34">65536<pos:position pos:line="29" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="41">winnt_accept<pos:position pos:line="29" pos:column="53"/></name></expr></argument>,
                           <argument><expr><operator pos:line="30" pos:column="28">(<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="29">void<pos:position pos:line="30" pos:column="33"/></name> <operator pos:line="30" pos:column="34">*<pos:position pos:line="30" pos:column="35"/></operator><operator pos:line="30" pos:column="35">)<pos:position pos:line="30" pos:column="36"/></operator> <name pos:line="30" pos:column="37">lr<pos:position pos:line="30" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="41">stack_res_flag<pos:position pos:line="30" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="57">&amp;<pos:position pos:line="30" pos:column="62"/></operator><name pos:line="30" pos:column="58">tid<pos:position pos:line="30" pos:column="61"/></name></expr></argument>)<pos:position pos:line="30" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></for>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

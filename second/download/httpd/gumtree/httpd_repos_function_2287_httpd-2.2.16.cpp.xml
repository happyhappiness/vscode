<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2287_httpd-2.2.16.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ap_relieve_child_processes<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">void<pos:position pos:line="1" pos:column="37"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">extra_process_t<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">cur_extra<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">max_daemons<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">ap_mpm_query<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name pos:line="7" pos:column="18">AP_MPMQ_MAX_DAEMON_USED<pos:position pos:line="7" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="43">&amp;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="44">max_daemons<pos:position pos:line="7" pos:column="55"/></name></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* now see who is done */</comment>
    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">(<init><expr><name pos:line="10" pos:column="10">i<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr>;<pos:position pos:line="10" pos:column="16"/></init> <condition><expr><name pos:line="10" pos:column="17">i<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">&lt;<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="21">max_daemons<pos:position pos:line="10" pos:column="32"/></name></expr>;<pos:position pos:line="10" pos:column="33"/></condition> <incr><expr><operator pos:line="10" pos:column="34">++<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="36">i<pos:position pos:line="10" pos:column="37"/></name></expr></incr>)<pos:position pos:line="10" pos:column="38"/></control> <block pos:line="10" pos:column="39">{
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">pid_t<pos:position pos:line="11" pos:column="14"/></name></type> <name pos:line="11" pos:column="15">pid<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><call><name pos:line="11" pos:column="21">MPM_CHILD_PID<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">i<pos:position pos:line="11" pos:column="36"/></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="38"/></decl_stmt>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">pid<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">==<pos:position pos:line="13" pos:column="19"/></operator> <literal type="number" pos:line="13" pos:column="20">0<pos:position pos:line="13" pos:column="21"/></literal></expr>)<pos:position pos:line="13" pos:column="22"/></condition><then pos:line="13" pos:column="22"> <block pos:line="13" pos:column="23">{
            <continue pos:line="14" pos:column="13">continue;<pos:position pos:line="14" pos:column="22"/></continue> <comment type="block" pos:line="14" pos:column="23">/* not every scoreboard entry is in use */</comment>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>

        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">reclaim_one_pid<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">pid<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="34">DO_NOTHING<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="46"/></condition><then pos:line="17" pos:column="46"> <block pos:line="17" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">MPM_NOTE_CHILD_KILLED<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><name pos:line="18" pos:column="35">i<pos:position pos:line="18" pos:column="36"/></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="22" pos:column="5">cur_extra<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <name pos:line="22" pos:column="17">extras<pos:position pos:line="22" pos:column="23"/></name></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
    <while pos:line="23" pos:column="5">while <condition pos:line="23" pos:column="11">(<expr><name pos:line="23" pos:column="12">cur_extra<pos:position pos:line="23" pos:column="21"/></name></expr>)<pos:position pos:line="23" pos:column="22"/></condition> <block pos:line="23" pos:column="23">{
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">extra_process_t<pos:position pos:line="24" pos:column="24"/></name> <modifier pos:line="24" pos:column="25">*<pos:position pos:line="24" pos:column="26"/></modifier></type><name pos:line="24" pos:column="26">next<pos:position pos:line="24" pos:column="30"/></name> <init pos:line="24" pos:column="31">= <expr><name><name pos:line="24" pos:column="33">cur_extra<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">-&gt;<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="44">next<pos:position pos:line="24" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="24" pos:column="49"/></decl_stmt>

        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">reclaim_one_pid<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name><name pos:line="26" pos:column="29">cur_extra<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">-&gt;<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="40">pid<pos:position pos:line="26" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="45">DO_NOTHING<pos:position pos:line="26" pos:column="55"/></name></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="57"/></condition><then pos:line="26" pos:column="57"> <block pos:line="26" pos:column="58">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">AP_DEBUG_ASSERT<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><literal type="number" pos:line="27" pos:column="29">1<pos:position pos:line="27" pos:column="30"/></literal> <operator pos:line="27" pos:column="31">==<pos:position pos:line="27" pos:column="33"/></operator> <call><name pos:line="27" pos:column="34">ap_unregister_extra_mpm_process<pos:position pos:line="27" pos:column="65"/></name><argument_list pos:line="27" pos:column="65">(<argument><expr><name><name pos:line="27" pos:column="66">cur_extra<pos:position pos:line="27" pos:column="75"/></name><operator pos:line="27" pos:column="75">-&gt;<pos:position pos:line="27" pos:column="80"/></operator><name pos:line="27" pos:column="77">pid<pos:position pos:line="27" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="83"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="29" pos:column="9">cur_extra<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">next<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></while>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

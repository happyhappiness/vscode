<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4962.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">core_dump_config<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">apr_pool_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">p<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">server_rec<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">s<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">core_server_config<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">sconf<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><call><name pos:line="3" pos:column="33">ap_get_core_module_config<pos:position pos:line="3" pos:column="58"/></name><argument_list pos:line="3" pos:column="58">(<argument><expr><name><name pos:line="3" pos:column="59">s<pos:position pos:line="3" pos:column="60"/></name><operator pos:line="3" pos:column="60">-&gt;<pos:position pos:line="3" pos:column="65"/></operator><name pos:line="3" pos:column="62">module_config<pos:position pos:line="3" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="77"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_file_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">out<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">NULL<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">tmp<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier><modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">defines<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><call><name pos:line="8" pos:column="10">ap_exists_config_define<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><literal type="string" pos:line="8" pos:column="34">"DUMP_RUN_CFG"<pos:position pos:line="8" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="50"/></condition><then pos:line="8" pos:column="50">
        <block type="pseudo"><return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">apr_file_open_stdout<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><operator pos:line="11" pos:column="26">&amp;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="27">out<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="32">p<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">apr_file_printf<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">out<pos:position pos:line="12" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="26">"ServerRoot: \"%s\"\n"<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="50">ap_server_root<pos:position pos:line="12" pos:column="64"/></name></expr></argument>)<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">tmp<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <call><name pos:line="13" pos:column="11">ap_server_root_relative<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">p<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="38">sconf<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">-&gt;<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="45">ap_document_root<pos:position pos:line="13" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">apr_file_printf<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">out<pos:position pos:line="14" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="26">"Main DocumentRoot: \"%s\"\n"<pos:position pos:line="14" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="57">tmp<pos:position pos:line="14" pos:column="60"/></name></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="62"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">s<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">error_fname<pos:position pos:line="15" pos:column="23"/></name><index pos:line="15" pos:column="23">[<expr><literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr>]<pos:position pos:line="15" pos:column="26"/></index></name> <operator pos:line="15" pos:column="27">!=<pos:position pos:line="15" pos:column="29"/></operator> <literal type="char" pos:line="15" pos:column="30">'|'<pos:position pos:line="15" pos:column="33"/></literal> <operator pos:line="15" pos:column="34">&amp;&amp;<pos:position pos:line="15" pos:column="44"/></operator> <call><name pos:line="15" pos:column="37">strcmp<pos:position pos:line="15" pos:column="43"/></name><argument_list pos:line="15" pos:column="43">(<argument><expr><name><name pos:line="15" pos:column="44">s<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">-&gt;<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="47">error_fname<pos:position pos:line="15" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="60">"syslog"<pos:position pos:line="15" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call> <operator pos:line="15" pos:column="70">!=<pos:position pos:line="15" pos:column="72"/></operator> <literal type="number" pos:line="15" pos:column="73">0<pos:position pos:line="15" pos:column="74"/></literal></expr>)<pos:position pos:line="15" pos:column="75"/></condition><then pos:line="15" pos:column="75">
        <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="9">tmp<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">ap_server_root_relative<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">p<pos:position pos:line="16" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="42">s<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">-&gt;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="45">error_fname<pos:position pos:line="16" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="58"/></expr_stmt></block></then>
    <else pos:line="17" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="9">tmp<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <name><name pos:line="18" pos:column="15">s<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">-&gt;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="18">error_fname<pos:position pos:line="18" pos:column="29"/></name></name></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">apr_file_printf<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">out<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="26">"Main ErrorLog: \"%s\"\n"<pos:position pos:line="19" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="53">tmp<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">ap_scoreboard_fname<pos:position pos:line="20" pos:column="28"/></name></expr>)<pos:position pos:line="20" pos:column="29"/></condition><then pos:line="20" pos:column="29"> <block pos:line="20" pos:column="30">{
        <expr_stmt><expr><name pos:line="21" pos:column="9">tmp<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">ap_server_root_relative<pos:position pos:line="21" pos:column="38"/></name><argument_list pos:line="21" pos:column="38">(<argument><expr><name pos:line="21" pos:column="39">p<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="42">ap_scoreboard_fname<pos:position pos:line="21" pos:column="61"/></name></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">apr_file_printf<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">out<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="30">"ScoreBoardFile: \"%s\"\n"<pos:position pos:line="22" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="58">tmp<pos:position pos:line="22" pos:column="61"/></name></expr></argument>)<pos:position pos:line="22" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">ap_dump_mutexes<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name pos:line="24" pos:column="21">p<pos:position pos:line="24" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="24">s<pos:position pos:line="24" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="27">out<pos:position pos:line="24" pos:column="30"/></name></expr></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">ap_mpm_dump_pidfile<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">p<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="28">out<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name pos:line="27" pos:column="5">defines<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <operator pos:line="27" pos:column="15">(<pos:position pos:line="27" pos:column="16"/></operator><specifier pos:line="27" pos:column="16">const<pos:position pos:line="27" pos:column="21"/></specifier> <name pos:line="27" pos:column="22">char<pos:position pos:line="27" pos:column="26"/></name> <operator pos:line="27" pos:column="27">*<pos:position pos:line="27" pos:column="28"/></operator><operator pos:line="27" pos:column="28">*<pos:position pos:line="27" pos:column="29"/></operator><operator pos:line="27" pos:column="29">)<pos:position pos:line="27" pos:column="30"/></operator><name><name pos:line="27" pos:column="30">ap_server_config_defines<pos:position pos:line="27" pos:column="54"/></name><operator pos:line="27" pos:column="54">-&gt;<pos:position pos:line="27" pos:column="59"/></operator><name pos:line="27" pos:column="56">elts<pos:position pos:line="27" pos:column="60"/></name></name></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt>
    <for pos:line="28" pos:column="5">for <control pos:line="28" pos:column="9">(<init><expr><name pos:line="28" pos:column="10">i<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <literal type="number" pos:line="28" pos:column="14">0<pos:position pos:line="28" pos:column="15"/></literal></expr>;<pos:position pos:line="28" pos:column="16"/></init> <condition><expr><name pos:line="28" pos:column="17">i<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">&lt;<pos:position pos:line="28" pos:column="23"/></operator> <name><name pos:line="28" pos:column="21">ap_server_config_defines<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">-&gt;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="47">nelts<pos:position pos:line="28" pos:column="52"/></name></name></expr>;<pos:position pos:line="28" pos:column="53"/></condition> <incr><expr><name pos:line="28" pos:column="54">i<pos:position pos:line="28" pos:column="55"/></name><operator pos:line="28" pos:column="55">++<pos:position pos:line="28" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="58"/></control> <block pos:line="28" pos:column="59">{
        <decl_stmt><decl><type><specifier pos:line="29" pos:column="9">const<pos:position pos:line="29" pos:column="14"/></specifier> <name pos:line="29" pos:column="15">char<pos:position pos:line="29" pos:column="19"/></name> <modifier pos:line="29" pos:column="20">*<pos:position pos:line="29" pos:column="21"/></modifier></type><name pos:line="29" pos:column="21">name<pos:position pos:line="29" pos:column="25"/></name> <init pos:line="29" pos:column="26">= <expr><name><name pos:line="29" pos:column="28">defines<pos:position pos:line="29" pos:column="35"/></name><index pos:line="29" pos:column="35">[<expr><name pos:line="29" pos:column="36">i<pos:position pos:line="29" pos:column="37"/></name></expr>]<pos:position pos:line="29" pos:column="38"/></index></name></expr></init></decl>;<pos:position pos:line="29" pos:column="39"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="30" pos:column="9">const<pos:position pos:line="30" pos:column="14"/></specifier> <name pos:line="30" pos:column="15">char<pos:position pos:line="30" pos:column="19"/></name> <modifier pos:line="30" pos:column="20">*<pos:position pos:line="30" pos:column="21"/></modifier></type><name pos:line="30" pos:column="21">val<pos:position pos:line="30" pos:column="24"/></name> <init pos:line="30" pos:column="25">= <expr><name pos:line="30" pos:column="27">NULL<pos:position pos:line="30" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="32"/></decl_stmt>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">server_config_defined_vars<pos:position pos:line="31" pos:column="39"/></name></expr>)<pos:position pos:line="31" pos:column="40"/></condition><then pos:line="31" pos:column="40">
           <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="12">val<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <call><name pos:line="32" pos:column="18">apr_table_get<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">server_config_defined_vars<pos:position pos:line="32" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="60">name<pos:position pos:line="32" pos:column="64"/></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt></block></then></if>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">val<pos:position pos:line="33" pos:column="16"/></name></expr>)<pos:position pos:line="33" pos:column="17"/></condition><then pos:line="33" pos:column="17">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="13">apr_file_printf<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><name pos:line="34" pos:column="29">out<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="34">"Define: %s=%s\n"<pos:position pos:line="34" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="53">name<pos:position pos:line="34" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="59">val<pos:position pos:line="34" pos:column="62"/></name></expr></argument>)<pos:position pos:line="34" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="64"/></expr_stmt></block></then>
        <else pos:line="35" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="13">apr_file_printf<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><name pos:line="36" pos:column="29">out<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="34">"Define: %s\n"<pos:position pos:line="36" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="50">name<pos:position pos:line="36" pos:column="54"/></name></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="56"/></expr_stmt></block></else></if>
    }<pos:position pos:line="37" pos:column="6"/></block></for>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_511.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">apr_status_t<pos:position pos:line="2" pos:column="13"/></name></type> <name pos:line="2" pos:column="14">ap_proxy_http_request<pos:position pos:line="2" pos:column="35"/></name><parameter_list pos:line="2" pos:column="35">(<parameter><decl><type><name pos:line="2" pos:column="36">apr_pool_t<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">p<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">request_rec<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">r<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="3" pos:column="36">proxy_http_conn_t<pos:position pos:line="3" pos:column="53"/></name> <modifier pos:line="3" pos:column="54">*<pos:position pos:line="3" pos:column="55"/></modifier></type><name pos:line="3" pos:column="55">p_conn<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="63">conn_rec<pos:position pos:line="3" pos:column="71"/></name> <modifier pos:line="3" pos:column="72">*<pos:position pos:line="3" pos:column="73"/></modifier></type><name pos:line="3" pos:column="73">origin<pos:position pos:line="3" pos:column="79"/></name></decl></parameter>, 
                                   <parameter><decl><type><name pos:line="4" pos:column="36">proxy_server_conf<pos:position pos:line="4" pos:column="53"/></name> <modifier pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></modifier></type><name pos:line="4" pos:column="55">conf<pos:position pos:line="4" pos:column="59"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="5" pos:column="36">apr_uri_t<pos:position pos:line="5" pos:column="45"/></name> <modifier pos:line="5" pos:column="46">*<pos:position pos:line="5" pos:column="47"/></modifier></type><name pos:line="5" pos:column="47">uri<pos:position pos:line="5" pos:column="50"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="6" pos:column="36">char<pos:position pos:line="6" pos:column="40"/></name> <modifier pos:line="6" pos:column="41">*<pos:position pos:line="6" pos:column="42"/></modifier></type><name pos:line="6" pos:column="42">url<pos:position pos:line="6" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="6" pos:column="47">apr_bucket_brigade<pos:position pos:line="6" pos:column="65"/></name> <modifier pos:line="6" pos:column="66">*<pos:position pos:line="6" pos:column="67"/></modifier></type><name pos:line="6" pos:column="67">bb<pos:position pos:line="6" pos:column="69"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="7" pos:column="36">char<pos:position pos:line="7" pos:column="40"/></name> <modifier pos:line="7" pos:column="41">*<pos:position pos:line="7" pos:column="42"/></modifier></type><name pos:line="7" pos:column="42">server_portstr<pos:position pos:line="7" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="57"/></parameter_list> <block pos:line="7" pos:column="58">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">conn_rec<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">c<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><name><name pos:line="8" pos:column="19">r<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">-&gt;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="22">connection<pos:position pos:line="8" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">buf<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_bucket<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">e<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">apr_array_header_t<pos:position pos:line="11" pos:column="29"/></name> <modifier pos:line="11" pos:column="30">*<pos:position pos:line="11" pos:column="31"/></modifier></type><name pos:line="11" pos:column="31">headers_in_array<pos:position pos:line="11" pos:column="47"/></name></decl>;<pos:position pos:line="11" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">apr_table_entry_t<pos:position pos:line="12" pos:column="28"/></name> <modifier pos:line="12" pos:column="29">*<pos:position pos:line="12" pos:column="30"/></modifier></type><name pos:line="12" pos:column="30">headers_in<pos:position pos:line="12" pos:column="40"/></name></decl>;<pos:position pos:line="12" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">counter<pos:position pos:line="13" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="13" pos:column="18">seen_eos<pos:position pos:line="13" pos:column="26"/></name></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_status_t<pos:position pos:line="14" pos:column="17"/></name></type> <name pos:line="14" pos:column="18">status<pos:position pos:line="14" pos:column="24"/></name></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>

    <comment type="block" pos:line="16" pos:column="5">/*
     * Send the HTTP/1.1 request to the remote server
     */</comment>

    <comment type="block" pos:line="20" pos:column="5">/* strip connection listed hop-by-hop headers from the request */</comment>
    <comment type="block" pos:line="21" pos:column="5">/* even though in theory a connection: close coming from the client
     * should not affect the connection to the server, it's unlikely
     * that subsequent client requests will hit this thread/process, so
     * we cancel server keepalive if the client does.
     */</comment>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">p_conn<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">close<pos:position pos:line="26" pos:column="18"/></name></name> <operator pos:line="26" pos:column="19">+=<pos:position pos:line="26" pos:column="21"/></operator> <call><name pos:line="26" pos:column="22">ap_proxy_liststr<pos:position pos:line="26" pos:column="38"/></name><argument_list pos:line="26" pos:column="38">(<argument><expr><call><name pos:line="26" pos:column="39">apr_table_get<pos:position pos:line="26" pos:column="52"/></name><argument_list pos:line="26" pos:column="52">(<argument><expr><name><name pos:line="26" pos:column="53">r<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">-&gt;<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="56">headers_in<pos:position pos:line="26" pos:column="66"/></name></name></expr></argument>,
                                                     <argument><expr><literal type="string" pos:line="27" pos:column="54">"Connection"<pos:position pos:line="27" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="69">"close"<pos:position pos:line="27" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="78"/></expr_stmt>
    <comment type="block" pos:line="28" pos:column="5">/* sub-requests never use keepalives */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">r<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">-&gt;<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="12">main<pos:position pos:line="29" pos:column="16"/></name></name></expr>)<pos:position pos:line="29" pos:column="17"/></condition><then pos:line="29" pos:column="17"> <block pos:line="29" pos:column="18">{
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">p_conn<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">close<pos:position pos:line="30" pos:column="22"/></name></name><operator pos:line="30" pos:column="22">++<pos:position pos:line="30" pos:column="24"/></operator></expr>;<pos:position pos:line="30" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">ap_proxy_clear_connection<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">p<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="34">r<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">-&gt;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="37">headers_in<pos:position pos:line="33" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name><name pos:line="34" pos:column="9">p_conn<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">-&gt;<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="17">close<pos:position pos:line="34" pos:column="22"/></name></name></expr>)<pos:position pos:line="34" pos:column="23"/></condition><then pos:line="34" pos:column="23"> <block pos:line="34" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">apr_table_setn<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name><name pos:line="35" pos:column="24">r<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">-&gt;<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="27">headers_in<pos:position pos:line="35" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="39">"Connection"<pos:position pos:line="35" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="53">"close"<pos:position pos:line="35" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">origin<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">keepalive<pos:position pos:line="36" pos:column="26"/></name></name> <operator pos:line="36" pos:column="27">=<pos:position pos:line="36" pos:column="28"/></operator> <name pos:line="36" pos:column="29">AP_CONN_CLOSE<pos:position pos:line="36" pos:column="42"/></name></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">( <expr><call><name pos:line="39" pos:column="10">apr_table_get<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><name><name pos:line="39" pos:column="24">r<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">-&gt;<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="27">subprocess_env<pos:position pos:line="39" pos:column="41"/></name></name></expr></argument>,<argument><expr><literal type="string" pos:line="39" pos:column="42">"force-proxy-request-1.0"<pos:position pos:line="39" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="69"/></condition><then pos:line="39" pos:column="69"> <block pos:line="39" pos:column="70">{
        <expr_stmt><expr><name pos:line="40" pos:column="9">buf<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <call><name pos:line="40" pos:column="15">apr_pstrcat<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><name pos:line="40" pos:column="27">p<pos:position pos:line="40" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="30">r<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">-&gt;<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="33">method<pos:position pos:line="40" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="41">" "<pos:position pos:line="40" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="46">url<pos:position pos:line="40" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="51">" HTTP/1.0"<pos:position pos:line="40" pos:column="62"/></literal> <name pos:line="40" pos:column="63">CRLF<pos:position pos:line="40" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="69">NULL<pos:position pos:line="40" pos:column="73"/></name></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then> <else pos:line="41" pos:column="7">else <block pos:line="41" pos:column="12">{
        <expr_stmt><expr><name pos:line="42" pos:column="9">buf<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <call><name pos:line="42" pos:column="15">apr_pstrcat<pos:position pos:line="42" pos:column="26"/></name><argument_list pos:line="42" pos:column="26">(<argument><expr><name pos:line="42" pos:column="27">p<pos:position pos:line="42" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="30">r<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">-&gt;<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="33">method<pos:position pos:line="42" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="41">" "<pos:position pos:line="42" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="46">url<pos:position pos:line="42" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="51">" HTTP/1.1"<pos:position pos:line="42" pos:column="62"/></literal> <name pos:line="42" pos:column="63">CRLF<pos:position pos:line="42" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="69">NULL<pos:position pos:line="42" pos:column="73"/></name></expr></argument>)<pos:position pos:line="42" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></else></if>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">( <expr><call><name pos:line="44" pos:column="10">apr_table_get<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><name><name pos:line="44" pos:column="24">r<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">-&gt;<pos:position pos:line="44" pos:column="30"/></operator><name pos:line="44" pos:column="27">subprocess_env<pos:position pos:line="44" pos:column="41"/></name></name></expr></argument>,<argument><expr><literal type="string" pos:line="44" pos:column="42">"proxy-nokeepalive"<pos:position pos:line="44" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="63"/></condition><then pos:line="44" pos:column="63"> <block pos:line="44" pos:column="64">{
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">apr_table_unset<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name><name pos:line="45" pos:column="25">r<pos:position pos:line="45" pos:column="26"/></name><operator pos:line="45" pos:column="26">-&gt;<pos:position pos:line="45" pos:column="31"/></operator><name pos:line="45" pos:column="28">headers_in<pos:position pos:line="45" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="40">"Connection"<pos:position pos:line="45" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">origin<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">-&gt;<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="17">keepalive<pos:position pos:line="46" pos:column="26"/></name></name> <operator pos:line="46" pos:column="27">=<pos:position pos:line="46" pos:column="28"/></operator> <name pos:line="46" pos:column="29">AP_CONN_CLOSE<pos:position pos:line="46" pos:column="42"/></name></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">ap_xlate_proto_to_ascii<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><name pos:line="48" pos:column="29">buf<pos:position pos:line="48" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="34">strlen<pos:position pos:line="48" pos:column="40"/></name><argument_list pos:line="48" pos:column="40">(<argument><expr><name pos:line="48" pos:column="41">buf<pos:position pos:line="48" pos:column="44"/></name></expr></argument>)<pos:position pos:line="48" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="49" pos:column="5">e<pos:position pos:line="49" pos:column="6"/></name> <operator pos:line="49" pos:column="7">=<pos:position pos:line="49" pos:column="8"/></operator> <call><name pos:line="49" pos:column="9">apr_bucket_pool_create<pos:position pos:line="49" pos:column="31"/></name><argument_list pos:line="49" pos:column="31">(<argument><expr><name pos:line="49" pos:column="32">buf<pos:position pos:line="49" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="37">strlen<pos:position pos:line="49" pos:column="43"/></name><argument_list pos:line="49" pos:column="43">(<argument><expr><name pos:line="49" pos:column="44">buf<pos:position pos:line="49" pos:column="47"/></name></expr></argument>)<pos:position pos:line="49" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="49" pos:column="50">p<pos:position pos:line="49" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="53">c<pos:position pos:line="49" pos:column="54"/></name><operator pos:line="49" pos:column="54">-&gt;<pos:position pos:line="49" pos:column="59"/></operator><name pos:line="49" pos:column="56">bucket_alloc<pos:position pos:line="49" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="50" pos:column="28"/></name><argument_list pos:line="50" pos:column="28">(<argument><expr><name pos:line="50" pos:column="29">bb<pos:position pos:line="50" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="33">e<pos:position pos:line="50" pos:column="34"/></name></expr></argument>)<pos:position pos:line="50" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="36"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">( <expr><name><name pos:line="51" pos:column="10">conf<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">-&gt;<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="16">preserve_host<pos:position pos:line="51" pos:column="29"/></name></name> <operator pos:line="51" pos:column="30">==<pos:position pos:line="51" pos:column="32"/></operator> <literal type="number" pos:line="51" pos:column="33">0<pos:position pos:line="51" pos:column="34"/></literal></expr> )<pos:position pos:line="51" pos:column="36"/></condition><then pos:line="51" pos:column="36"> <block pos:line="51" pos:column="37">{
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name><name pos:line="52" pos:column="13">uri<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">-&gt;<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="18">port_str<pos:position pos:line="52" pos:column="26"/></name></name> <operator pos:line="52" pos:column="27">&amp;&amp;<pos:position pos:line="52" pos:column="37"/></operator> <name><name pos:line="52" pos:column="30">uri<pos:position pos:line="52" pos:column="33"/></name><operator pos:line="52" pos:column="33">-&gt;<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="35">port<pos:position pos:line="52" pos:column="39"/></name></name> <operator pos:line="52" pos:column="40">!=<pos:position pos:line="52" pos:column="42"/></operator> <name pos:line="52" pos:column="43">DEFAULT_HTTP_PORT<pos:position pos:line="52" pos:column="60"/></name></expr>)<pos:position pos:line="52" pos:column="61"/></condition><then pos:line="52" pos:column="61"> <block pos:line="52" pos:column="62">{
            <expr_stmt><expr><name pos:line="53" pos:column="13">buf<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <call><name pos:line="53" pos:column="19">apr_pstrcat<pos:position pos:line="53" pos:column="30"/></name><argument_list pos:line="53" pos:column="30">(<argument><expr><name pos:line="53" pos:column="31">p<pos:position pos:line="53" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="34">"Host: "<pos:position pos:line="53" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="44">uri<pos:position pos:line="53" pos:column="47"/></name><operator pos:line="53" pos:column="47">-&gt;<pos:position pos:line="53" pos:column="52"/></operator><name pos:line="53" pos:column="49">hostname<pos:position pos:line="53" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="59">":"<pos:position pos:line="53" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="64">uri<pos:position pos:line="53" pos:column="67"/></name><operator pos:line="53" pos:column="67">-&gt;<pos:position pos:line="53" pos:column="72"/></operator><name pos:line="53" pos:column="69">port_str<pos:position pos:line="53" pos:column="77"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="79">CRLF<pos:position pos:line="53" pos:column="83"/></name></expr></argument>,
                            <argument><expr><name pos:line="54" pos:column="29">NULL<pos:position pos:line="54" pos:column="33"/></name></expr></argument>)<pos:position pos:line="54" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></then> <else pos:line="55" pos:column="11">else <block pos:line="55" pos:column="16">{
            <expr_stmt><expr><name pos:line="56" pos:column="13">buf<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">=<pos:position pos:line="56" pos:column="18"/></operator> <call><name pos:line="56" pos:column="19">apr_pstrcat<pos:position pos:line="56" pos:column="30"/></name><argument_list pos:line="56" pos:column="30">(<argument><expr><name pos:line="56" pos:column="31">p<pos:position pos:line="56" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="34">"Host: "<pos:position pos:line="56" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="44">uri<pos:position pos:line="56" pos:column="47"/></name><operator pos:line="56" pos:column="47">-&gt;<pos:position pos:line="56" pos:column="52"/></operator><name pos:line="56" pos:column="49">hostname<pos:position pos:line="56" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="59">CRLF<pos:position pos:line="56" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="65">NULL<pos:position pos:line="56" pos:column="69"/></name></expr></argument>)<pos:position pos:line="56" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="57" pos:column="10"/></block></else></if>
    }<pos:position pos:line="58" pos:column="6"/></block></then> 
    <else pos:line="59" pos:column="5">else <block pos:line="59" pos:column="10">{
        <comment type="block" pos:line="60" pos:column="9">/* don't want to use r-&gt;hostname, as the incoming header might have a 
         * port attached 
         */</comment>
        <decl_stmt><decl><type><specifier pos:line="63" pos:column="9">const<pos:position pos:line="63" pos:column="14"/></specifier> <name pos:line="63" pos:column="15">char<pos:position pos:line="63" pos:column="19"/></name><modifier pos:line="63" pos:column="19">*<pos:position pos:line="63" pos:column="20"/></modifier></type> <name pos:line="63" pos:column="21">hostname<pos:position pos:line="63" pos:column="29"/></name> <init pos:line="63" pos:column="30">= <expr><call><name pos:line="63" pos:column="32">apr_table_get<pos:position pos:line="63" pos:column="45"/></name><argument_list pos:line="63" pos:column="45">(<argument><expr><name><name pos:line="63" pos:column="46">r<pos:position pos:line="63" pos:column="47"/></name><operator pos:line="63" pos:column="47">-&gt;<pos:position pos:line="63" pos:column="52"/></operator><name pos:line="63" pos:column="49">headers_in<pos:position pos:line="63" pos:column="59"/></name></name></expr></argument>,<argument><expr><literal type="string" pos:line="63" pos:column="60">"Host"<pos:position pos:line="63" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="63" pos:column="68"/></decl_stmt>        
        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><operator pos:line="64" pos:column="13">!<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="14">hostname<pos:position pos:line="64" pos:column="22"/></name></expr>)<pos:position pos:line="64" pos:column="23"/></condition><then pos:line="64" pos:column="23"> <block pos:line="64" pos:column="24">{
            <expr_stmt><expr><name pos:line="65" pos:column="13">hostname<pos:position pos:line="65" pos:column="21"/></name> <operator pos:line="65" pos:column="22">=<pos:position pos:line="65" pos:column="23"/></operator>  <name><name pos:line="65" pos:column="25">r<pos:position pos:line="65" pos:column="26"/></name><operator pos:line="65" pos:column="26">-&gt;<pos:position pos:line="65" pos:column="31"/></operator><name pos:line="65" pos:column="28">server<pos:position pos:line="65" pos:column="34"/></name><operator pos:line="65" pos:column="34">-&gt;<pos:position pos:line="65" pos:column="39"/></operator><name pos:line="65" pos:column="36">server_hostname<pos:position pos:line="65" pos:column="51"/></name></name></expr>;<pos:position pos:line="65" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">ap_log_rerror<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><name pos:line="66" pos:column="27">APLOG_MARK<pos:position pos:line="66" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="39">APLOG_WARNING<pos:position pos:line="66" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="54">0<pos:position pos:line="66" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="57">r<pos:position pos:line="66" pos:column="58"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="67" pos:column="27">"proxy: no HTTP 0.9 request (with no host line) "<pos:position pos:line="67" pos:column="76"/></literal>
                          <literal type="string" pos:line="68" pos:column="27">"on incoming request and preserve host set "<pos:position pos:line="68" pos:column="71"/></literal>
                          <literal type="string" pos:line="69" pos:column="27">"forcing hostname to be %s for uri %s"<pos:position pos:line="69" pos:column="65"/></literal></expr></argument>, 
                          <argument><expr><name pos:line="70" pos:column="27">hostname<pos:position pos:line="70" pos:column="35"/></name></expr></argument>, 
                          <argument><expr><name><name pos:line="71" pos:column="27">r<pos:position pos:line="71" pos:column="28"/></name><operator pos:line="71" pos:column="28">-&gt;<pos:position pos:line="71" pos:column="33"/></operator><name pos:line="71" pos:column="30">uri<pos:position pos:line="71" pos:column="33"/></name></name></expr></argument> )<pos:position pos:line="71" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="72" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="73" pos:column="9">buf<pos:position pos:line="73" pos:column="12"/></name> <operator pos:line="73" pos:column="13">=<pos:position pos:line="73" pos:column="14"/></operator> <call><name pos:line="73" pos:column="15">apr_pstrcat<pos:position pos:line="73" pos:column="26"/></name><argument_list pos:line="73" pos:column="26">(<argument><expr><name pos:line="73" pos:column="27">p<pos:position pos:line="73" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="30">"Host: "<pos:position pos:line="73" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="40">hostname<pos:position pos:line="73" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="50">CRLF<pos:position pos:line="73" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="56">NULL<pos:position pos:line="73" pos:column="60"/></name></expr></argument>)<pos:position pos:line="73" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">ap_xlate_proto_to_ascii<pos:position pos:line="75" pos:column="28"/></name><argument_list pos:line="75" pos:column="28">(<argument><expr><name pos:line="75" pos:column="29">buf<pos:position pos:line="75" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="75" pos:column="34">strlen<pos:position pos:line="75" pos:column="40"/></name><argument_list pos:line="75" pos:column="40">(<argument><expr><name pos:line="75" pos:column="41">buf<pos:position pos:line="75" pos:column="44"/></name></expr></argument>)<pos:position pos:line="75" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="76" pos:column="5">e<pos:position pos:line="76" pos:column="6"/></name> <operator pos:line="76" pos:column="7">=<pos:position pos:line="76" pos:column="8"/></operator> <call><name pos:line="76" pos:column="9">apr_bucket_pool_create<pos:position pos:line="76" pos:column="31"/></name><argument_list pos:line="76" pos:column="31">(<argument><expr><name pos:line="76" pos:column="32">buf<pos:position pos:line="76" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="76" pos:column="37">strlen<pos:position pos:line="76" pos:column="43"/></name><argument_list pos:line="76" pos:column="43">(<argument><expr><name pos:line="76" pos:column="44">buf<pos:position pos:line="76" pos:column="47"/></name></expr></argument>)<pos:position pos:line="76" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="76" pos:column="50">p<pos:position pos:line="76" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="53">c<pos:position pos:line="76" pos:column="54"/></name><operator pos:line="76" pos:column="54">-&gt;<pos:position pos:line="76" pos:column="59"/></operator><name pos:line="76" pos:column="56">bucket_alloc<pos:position pos:line="76" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="70"/></expr_stmt>        
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="77" pos:column="28"/></name><argument_list pos:line="77" pos:column="28">(<argument><expr><name pos:line="77" pos:column="29">bb<pos:position pos:line="77" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="33">e<pos:position pos:line="77" pos:column="34"/></name></expr></argument>)<pos:position pos:line="77" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="36"/></expr_stmt>

    <comment type="block" pos:line="79" pos:column="5">/* handle Via */</comment>
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><name><name pos:line="80" pos:column="9">conf<pos:position pos:line="80" pos:column="13"/></name><operator pos:line="80" pos:column="13">-&gt;<pos:position pos:line="80" pos:column="18"/></operator><name pos:line="80" pos:column="15">viaopt<pos:position pos:line="80" pos:column="21"/></name></name> <operator pos:line="80" pos:column="22">==<pos:position pos:line="80" pos:column="24"/></operator> <name pos:line="80" pos:column="25">via_block<pos:position pos:line="80" pos:column="34"/></name></expr>)<pos:position pos:line="80" pos:column="35"/></condition><then pos:line="80" pos:column="35"> <block pos:line="80" pos:column="36">{
        <comment type="block" pos:line="81" pos:column="9">/* Block all outgoing Via: headers */</comment>
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">apr_table_unset<pos:position pos:line="82" pos:column="24"/></name><argument_list pos:line="82" pos:column="24">(<argument><expr><name><name pos:line="82" pos:column="25">r<pos:position pos:line="82" pos:column="26"/></name><operator pos:line="82" pos:column="26">-&gt;<pos:position pos:line="82" pos:column="31"/></operator><name pos:line="82" pos:column="28">headers_in<pos:position pos:line="82" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="40">"Via"<pos:position pos:line="82" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then> <elseif pos:line="83" pos:column="7">else <if pos:line="83" pos:column="12">if <condition pos:line="83" pos:column="15">(<expr><name><name pos:line="83" pos:column="16">conf<pos:position pos:line="83" pos:column="20"/></name><operator pos:line="83" pos:column="20">-&gt;<pos:position pos:line="83" pos:column="25"/></operator><name pos:line="83" pos:column="22">viaopt<pos:position pos:line="83" pos:column="28"/></name></name> <operator pos:line="83" pos:column="29">!=<pos:position pos:line="83" pos:column="31"/></operator> <name pos:line="83" pos:column="32">via_off<pos:position pos:line="83" pos:column="39"/></name></expr>)<pos:position pos:line="83" pos:column="40"/></condition><then pos:line="83" pos:column="40"> <block pos:line="83" pos:column="41">{
        <comment type="block" pos:line="84" pos:column="9">/* Create a "Via:" request header entry and merge it */</comment>
        <comment type="block" pos:line="85" pos:column="9">/* Generate outgoing Via: header with/without server comment: */</comment>
        <expr_stmt><expr><call><name pos:line="86" pos:column="9">apr_table_mergen<pos:position pos:line="86" pos:column="25"/></name><argument_list pos:line="86" pos:column="25">(<argument><expr><name><name pos:line="86" pos:column="26">r<pos:position pos:line="86" pos:column="27"/></name><operator pos:line="86" pos:column="27">-&gt;<pos:position pos:line="86" pos:column="32"/></operator><name pos:line="86" pos:column="29">headers_in<pos:position pos:line="86" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="41">"Via"<pos:position pos:line="86" pos:column="46"/></literal></expr></argument>,
                         <argument><expr><ternary><condition><expr><operator pos:line="87" pos:column="26">(<pos:position pos:line="87" pos:column="27"/></operator><name><name pos:line="87" pos:column="27">conf<pos:position pos:line="87" pos:column="31"/></name><operator pos:line="87" pos:column="31">-&gt;<pos:position pos:line="87" pos:column="36"/></operator><name pos:line="87" pos:column="33">viaopt<pos:position pos:line="87" pos:column="39"/></name></name> <operator pos:line="87" pos:column="40">==<pos:position pos:line="87" pos:column="42"/></operator> <name pos:line="87" pos:column="43">via_full<pos:position pos:line="87" pos:column="51"/></name><operator pos:line="87" pos:column="51">)<pos:position pos:line="87" pos:column="52"/></operator></expr>
                         ?<pos:position pos:line="88" pos:column="27"/></condition><then pos:line="88" pos:column="27"> <expr><call><name pos:line="88" pos:column="28">apr_psprintf<pos:position pos:line="88" pos:column="40"/></name><argument_list pos:line="88" pos:column="40">(<argument><expr><name pos:line="88" pos:column="41">p<pos:position pos:line="88" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="44">"%d.%d %s%s (%s)"<pos:position pos:line="88" pos:column="61"/></literal></expr></argument>,
                                        <argument><expr><call><name pos:line="89" pos:column="41">HTTP_VERSION_MAJOR<pos:position pos:line="89" pos:column="59"/></name><argument_list pos:line="89" pos:column="59">(<argument><expr><name><name pos:line="89" pos:column="60">r<pos:position pos:line="89" pos:column="61"/></name><operator pos:line="89" pos:column="61">-&gt;<pos:position pos:line="89" pos:column="66"/></operator><name pos:line="89" pos:column="63">proto_num<pos:position pos:line="89" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="73"/></argument_list></call></expr></argument>,
                                        <argument><expr><call><name pos:line="90" pos:column="41">HTTP_VERSION_MINOR<pos:position pos:line="90" pos:column="59"/></name><argument_list pos:line="90" pos:column="59">(<argument><expr><name><name pos:line="90" pos:column="60">r<pos:position pos:line="90" pos:column="61"/></name><operator pos:line="90" pos:column="61">-&gt;<pos:position pos:line="90" pos:column="66"/></operator><name pos:line="90" pos:column="63">proto_num<pos:position pos:line="90" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="73"/></argument_list></call></expr></argument>,
                                        <argument><expr><call><name pos:line="91" pos:column="41">ap_get_server_name<pos:position pos:line="91" pos:column="59"/></name><argument_list pos:line="91" pos:column="59">(<argument><expr><name pos:line="91" pos:column="60">r<pos:position pos:line="91" pos:column="61"/></name></expr></argument>)<pos:position pos:line="91" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="91" pos:column="64">server_portstr<pos:position pos:line="91" pos:column="78"/></name></expr></argument>,
                                        <argument><expr><name pos:line="92" pos:column="41">AP_SERVER_BASEVERSION<pos:position pos:line="92" pos:column="62"/></name></expr></argument>)<pos:position pos:line="92" pos:column="63"/></argument_list></call></expr>
                         <pos:position pos:line="93" pos:column="26"/></then><else pos:line="93" pos:column="26">: <expr><call><name pos:line="93" pos:column="28">apr_psprintf<pos:position pos:line="93" pos:column="40"/></name><argument_list pos:line="93" pos:column="40">(<argument><expr><name pos:line="93" pos:column="41">p<pos:position pos:line="93" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="44">"%d.%d %s%s"<pos:position pos:line="93" pos:column="56"/></literal></expr></argument>,
                                        <argument><expr><call><name pos:line="94" pos:column="41">HTTP_VERSION_MAJOR<pos:position pos:line="94" pos:column="59"/></name><argument_list pos:line="94" pos:column="59">(<argument><expr><name><name pos:line="94" pos:column="60">r<pos:position pos:line="94" pos:column="61"/></name><operator pos:line="94" pos:column="61">-&gt;<pos:position pos:line="94" pos:column="66"/></operator><name pos:line="94" pos:column="63">proto_num<pos:position pos:line="94" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="73"/></argument_list></call></expr></argument>,
                                        <argument><expr><call><name pos:line="95" pos:column="41">HTTP_VERSION_MINOR<pos:position pos:line="95" pos:column="59"/></name><argument_list pos:line="95" pos:column="59">(<argument><expr><name><name pos:line="95" pos:column="60">r<pos:position pos:line="95" pos:column="61"/></name><operator pos:line="95" pos:column="61">-&gt;<pos:position pos:line="95" pos:column="66"/></operator><name pos:line="95" pos:column="63">proto_num<pos:position pos:line="95" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="73"/></argument_list></call></expr></argument>,
                                        <argument><expr><call><name pos:line="96" pos:column="41">ap_get_server_name<pos:position pos:line="96" pos:column="59"/></name><argument_list pos:line="96" pos:column="59">(<argument><expr><name pos:line="96" pos:column="60">r<pos:position pos:line="96" pos:column="61"/></name></expr></argument>)<pos:position pos:line="96" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="96" pos:column="64">server_portstr<pos:position pos:line="96" pos:column="78"/></name></expr></argument>)<pos:position pos:line="96" pos:column="79"/></argument_list></call></expr></else></ternary></expr></argument>
        )<pos:position pos:line="97" pos:column="10"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="98" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="100" pos:column="5">/* X-Forwarded-*: handling
     *
     * XXX Privacy Note:
     * -----------------
     *
     * These request headers are only really useful when the mod_proxy
     * is used in a reverse proxy configuration, so that useful info
     * about the client can be passed through the reverse proxy and on
     * to the backend server, which may require the information to
     * function properly.
     *
     * In a forward proxy situation, these options are a potential
     * privacy violation, as information about clients behind the proxy
     * are revealed to arbitrary servers out there on the internet.
     *
     * The HTTP/1.1 Via: header is designed for passing client
     * information through proxies to a server, and should be used in
     * a forward proxy configuation instead of X-Forwarded-*. See the
     * ProxyVia option for details.
     */</comment>

    <if pos:line="121" pos:column="5">if <condition pos:line="121" pos:column="8">(<expr><name pos:line="121" pos:column="9">PROXYREQ_REVERSE<pos:position pos:line="121" pos:column="25"/></name> <operator pos:line="121" pos:column="26">==<pos:position pos:line="121" pos:column="28"/></operator> <name><name pos:line="121" pos:column="29">r<pos:position pos:line="121" pos:column="30"/></name><operator pos:line="121" pos:column="30">-&gt;<pos:position pos:line="121" pos:column="35"/></operator><name pos:line="121" pos:column="32">proxyreq<pos:position pos:line="121" pos:column="40"/></name></name></expr>)<pos:position pos:line="121" pos:column="41"/></condition><then pos:line="121" pos:column="41"> <block pos:line="121" pos:column="42">{
        <decl_stmt><decl><type><specifier pos:line="122" pos:column="9">const<pos:position pos:line="122" pos:column="14"/></specifier> <name pos:line="122" pos:column="15">char<pos:position pos:line="122" pos:column="19"/></name> <modifier pos:line="122" pos:column="20">*<pos:position pos:line="122" pos:column="21"/></modifier></type><name pos:line="122" pos:column="21">buf<pos:position pos:line="122" pos:column="24"/></name></decl>;<pos:position pos:line="122" pos:column="25"/></decl_stmt>

        <comment type="block" pos:line="124" pos:column="9">/* Add X-Forwarded-For: so that the upstream has a chance to
         * determine, where the original request came from.
         */</comment>
        <expr_stmt><expr><call><name pos:line="127" pos:column="9">apr_table_mergen<pos:position pos:line="127" pos:column="25"/></name><argument_list pos:line="127" pos:column="25">(<argument><expr><name><name pos:line="127" pos:column="26">r<pos:position pos:line="127" pos:column="27"/></name><operator pos:line="127" pos:column="27">-&gt;<pos:position pos:line="127" pos:column="32"/></operator><name pos:line="127" pos:column="29">headers_in<pos:position pos:line="127" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="41">"X-Forwarded-For"<pos:position pos:line="127" pos:column="58"/></literal></expr></argument>,
                       <argument><expr><name><name pos:line="128" pos:column="24">r<pos:position pos:line="128" pos:column="25"/></name><operator pos:line="128" pos:column="25">-&gt;<pos:position pos:line="128" pos:column="30"/></operator><name pos:line="128" pos:column="27">connection<pos:position pos:line="128" pos:column="37"/></name><operator pos:line="128" pos:column="37">-&gt;<pos:position pos:line="128" pos:column="42"/></operator><name pos:line="128" pos:column="39">remote_ip<pos:position pos:line="128" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="50"/></expr_stmt>

        <comment type="block" pos:line="130" pos:column="9">/* Add X-Forwarded-Host: so that upstream knows what the
         * original request hostname was.
         */</comment>
        <if pos:line="133" pos:column="9">if <condition pos:line="133" pos:column="12">(<expr><operator pos:line="133" pos:column="13">(<pos:position pos:line="133" pos:column="14"/></operator><name pos:line="133" pos:column="14">buf<pos:position pos:line="133" pos:column="17"/></name> <operator pos:line="133" pos:column="18">=<pos:position pos:line="133" pos:column="19"/></operator> <call><name pos:line="133" pos:column="20">apr_table_get<pos:position pos:line="133" pos:column="33"/></name><argument_list pos:line="133" pos:column="33">(<argument><expr><name><name pos:line="133" pos:column="34">r<pos:position pos:line="133" pos:column="35"/></name><operator pos:line="133" pos:column="35">-&gt;<pos:position pos:line="133" pos:column="40"/></operator><name pos:line="133" pos:column="37">headers_in<pos:position pos:line="133" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="133" pos:column="49">"Host"<pos:position pos:line="133" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="56"/></argument_list></call><operator pos:line="133" pos:column="56">)<pos:position pos:line="133" pos:column="57"/></operator></expr>)<pos:position pos:line="133" pos:column="58"/></condition><then pos:line="133" pos:column="58"> <block pos:line="133" pos:column="59">{
            <expr_stmt><expr><call><name pos:line="134" pos:column="13">apr_table_mergen<pos:position pos:line="134" pos:column="29"/></name><argument_list pos:line="134" pos:column="29">(<argument><expr><name><name pos:line="134" pos:column="30">r<pos:position pos:line="134" pos:column="31"/></name><operator pos:line="134" pos:column="31">-&gt;<pos:position pos:line="134" pos:column="36"/></operator><name pos:line="134" pos:column="33">headers_in<pos:position pos:line="134" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="45">"X-Forwarded-Host"<pos:position pos:line="134" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="134" pos:column="65">buf<pos:position pos:line="134" pos:column="68"/></name></expr></argument>)<pos:position pos:line="134" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="135" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="137" pos:column="9">/* Add X-Forwarded-Server: so that upstream knows what the
         * name of this proxy server is (if there are more than one)
         * XXX: This duplicates Via: - do we strictly need it?
         */</comment>
        <expr_stmt><expr><call><name pos:line="141" pos:column="9">apr_table_mergen<pos:position pos:line="141" pos:column="25"/></name><argument_list pos:line="141" pos:column="25">(<argument><expr><name><name pos:line="141" pos:column="26">r<pos:position pos:line="141" pos:column="27"/></name><operator pos:line="141" pos:column="27">-&gt;<pos:position pos:line="141" pos:column="32"/></operator><name pos:line="141" pos:column="29">headers_in<pos:position pos:line="141" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="41">"X-Forwarded-Server"<pos:position pos:line="141" pos:column="61"/></literal></expr></argument>,
                       <argument><expr><name><name pos:line="142" pos:column="24">r<pos:position pos:line="142" pos:column="25"/></name><operator pos:line="142" pos:column="25">-&gt;<pos:position pos:line="142" pos:column="30"/></operator><name pos:line="142" pos:column="27">server<pos:position pos:line="142" pos:column="33"/></name><operator pos:line="142" pos:column="33">-&gt;<pos:position pos:line="142" pos:column="38"/></operator><name pos:line="142" pos:column="35">server_hostname<pos:position pos:line="142" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="143" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="145" pos:column="5">/* send request headers */</comment>
    <expr_stmt><expr><call><name pos:line="146" pos:column="5">proxy_run_fixups<pos:position pos:line="146" pos:column="21"/></name><argument_list pos:line="146" pos:column="21">(<argument><expr><name pos:line="146" pos:column="22">r<pos:position pos:line="146" pos:column="23"/></name></expr></argument>)<pos:position pos:line="146" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="147" pos:column="5">headers_in_array<pos:position pos:line="147" pos:column="21"/></name> <operator pos:line="147" pos:column="22">=<pos:position pos:line="147" pos:column="23"/></operator> <call><name pos:line="147" pos:column="24">apr_table_elts<pos:position pos:line="147" pos:column="38"/></name><argument_list pos:line="147" pos:column="38">(<argument><expr><name><name pos:line="147" pos:column="39">r<pos:position pos:line="147" pos:column="40"/></name><operator pos:line="147" pos:column="40">-&gt;<pos:position pos:line="147" pos:column="45"/></operator><name pos:line="147" pos:column="42">headers_in<pos:position pos:line="147" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name pos:line="148" pos:column="5">headers_in<pos:position pos:line="148" pos:column="15"/></name> <operator pos:line="148" pos:column="16">=<pos:position pos:line="148" pos:column="17"/></operator> <operator pos:line="148" pos:column="18">(<pos:position pos:line="148" pos:column="19"/></operator><specifier pos:line="148" pos:column="19">const<pos:position pos:line="148" pos:column="24"/></specifier> <name pos:line="148" pos:column="25">apr_table_entry_t<pos:position pos:line="148" pos:column="42"/></name> <operator pos:line="148" pos:column="43">*<pos:position pos:line="148" pos:column="44"/></operator><operator pos:line="148" pos:column="44">)<pos:position pos:line="148" pos:column="45"/></operator> <name><name pos:line="148" pos:column="46">headers_in_array<pos:position pos:line="148" pos:column="62"/></name><operator pos:line="148" pos:column="62">-&gt;<pos:position pos:line="148" pos:column="67"/></operator><name pos:line="148" pos:column="64">elts<pos:position pos:line="148" pos:column="68"/></name></name></expr>;<pos:position pos:line="148" pos:column="69"/></expr_stmt>
    <for pos:line="149" pos:column="5">for <control pos:line="149" pos:column="9">(<init><expr><name pos:line="149" pos:column="10">counter<pos:position pos:line="149" pos:column="17"/></name> <operator pos:line="149" pos:column="18">=<pos:position pos:line="149" pos:column="19"/></operator> <literal type="number" pos:line="149" pos:column="20">0<pos:position pos:line="149" pos:column="21"/></literal></expr>;<pos:position pos:line="149" pos:column="22"/></init> <condition><expr><name pos:line="149" pos:column="23">counter<pos:position pos:line="149" pos:column="30"/></name> <operator pos:line="149" pos:column="31">&lt;<pos:position pos:line="149" pos:column="35"/></operator> <name><name pos:line="149" pos:column="33">headers_in_array<pos:position pos:line="149" pos:column="49"/></name><operator pos:line="149" pos:column="49">-&gt;<pos:position pos:line="149" pos:column="54"/></operator><name pos:line="149" pos:column="51">nelts<pos:position pos:line="149" pos:column="56"/></name></name></expr>;<pos:position pos:line="149" pos:column="57"/></condition> <incr><expr><name pos:line="149" pos:column="58">counter<pos:position pos:line="149" pos:column="65"/></name><operator pos:line="149" pos:column="65">++<pos:position pos:line="149" pos:column="67"/></operator></expr></incr>)<pos:position pos:line="149" pos:column="68"/></control> <block pos:line="149" pos:column="69">{
        <if pos:line="150" pos:column="9">if <condition pos:line="150" pos:column="12">(<expr><name><name pos:line="150" pos:column="13">headers_in<pos:position pos:line="150" pos:column="23"/></name><index pos:line="150" pos:column="23">[<expr><name pos:line="150" pos:column="24">counter<pos:position pos:line="150" pos:column="31"/></name></expr>]<pos:position pos:line="150" pos:column="32"/></index></name><operator pos:line="150" pos:column="32">.<pos:position pos:line="150" pos:column="33"/></operator><name pos:line="150" pos:column="33">key<pos:position pos:line="150" pos:column="36"/></name> <operator pos:line="150" pos:column="37">==<pos:position pos:line="150" pos:column="39"/></operator> <name pos:line="150" pos:column="40">NULL<pos:position pos:line="150" pos:column="44"/></name> <operator pos:line="150" pos:column="45">||<pos:position pos:line="150" pos:column="47"/></operator> <name><name pos:line="150" pos:column="48">headers_in<pos:position pos:line="150" pos:column="58"/></name><index pos:line="150" pos:column="58">[<expr><name pos:line="150" pos:column="59">counter<pos:position pos:line="150" pos:column="66"/></name></expr>]<pos:position pos:line="150" pos:column="67"/></index></name><operator pos:line="150" pos:column="67">.<pos:position pos:line="150" pos:column="68"/></operator><name pos:line="150" pos:column="68">val<pos:position pos:line="150" pos:column="71"/></name> <operator pos:line="150" pos:column="72">==<pos:position pos:line="150" pos:column="74"/></operator> <name pos:line="150" pos:column="75">NULL<pos:position pos:line="150" pos:column="79"/></name>

        <comment type="block" pos:line="152" pos:column="9">/* Clear out hop-by-hop request headers not to send
         * RFC2616 13.5.1 says we should strip these headers
         */</comment>
                <comment type="block" pos:line="155" pos:column="17">/* Already sent */</comment>
            <operator pos:line="156" pos:column="13">||<pos:position pos:line="156" pos:column="15"/></operator> <operator pos:line="156" pos:column="16">!<pos:position pos:line="156" pos:column="17"/></operator><call><name pos:line="156" pos:column="17">apr_strnatcasecmp<pos:position pos:line="156" pos:column="34"/></name><argument_list pos:line="156" pos:column="34">(<argument><expr><name><name pos:line="156" pos:column="35">headers_in<pos:position pos:line="156" pos:column="45"/></name><index pos:line="156" pos:column="45">[<expr><name pos:line="156" pos:column="46">counter<pos:position pos:line="156" pos:column="53"/></name></expr>]<pos:position pos:line="156" pos:column="54"/></index></name><operator pos:line="156" pos:column="54">.<pos:position pos:line="156" pos:column="55"/></operator><name pos:line="156" pos:column="55">key<pos:position pos:line="156" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="60">"Host"<pos:position pos:line="156" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="67"/></argument_list></call>

            <operator pos:line="158" pos:column="13">||<pos:position pos:line="158" pos:column="15"/></operator> <operator pos:line="158" pos:column="16">!<pos:position pos:line="158" pos:column="17"/></operator><call><name pos:line="158" pos:column="17">apr_strnatcasecmp<pos:position pos:line="158" pos:column="34"/></name><argument_list pos:line="158" pos:column="34">(<argument><expr><name><name pos:line="158" pos:column="35">headers_in<pos:position pos:line="158" pos:column="45"/></name><index pos:line="158" pos:column="45">[<expr><name pos:line="158" pos:column="46">counter<pos:position pos:line="158" pos:column="53"/></name></expr>]<pos:position pos:line="158" pos:column="54"/></index></name><operator pos:line="158" pos:column="54">.<pos:position pos:line="158" pos:column="55"/></operator><name pos:line="158" pos:column="55">key<pos:position pos:line="158" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="158" pos:column="60">"Keep-Alive"<pos:position pos:line="158" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="73"/></argument_list></call>
            <operator pos:line="159" pos:column="13">||<pos:position pos:line="159" pos:column="15"/></operator> <operator pos:line="159" pos:column="16">!<pos:position pos:line="159" pos:column="17"/></operator><call><name pos:line="159" pos:column="17">apr_strnatcasecmp<pos:position pos:line="159" pos:column="34"/></name><argument_list pos:line="159" pos:column="34">(<argument><expr><name><name pos:line="159" pos:column="35">headers_in<pos:position pos:line="159" pos:column="45"/></name><index pos:line="159" pos:column="45">[<expr><name pos:line="159" pos:column="46">counter<pos:position pos:line="159" pos:column="53"/></name></expr>]<pos:position pos:line="159" pos:column="54"/></index></name><operator pos:line="159" pos:column="54">.<pos:position pos:line="159" pos:column="55"/></operator><name pos:line="159" pos:column="55">key<pos:position pos:line="159" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="159" pos:column="60">"TE"<pos:position pos:line="159" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="65"/></argument_list></call>
            <operator pos:line="160" pos:column="13">||<pos:position pos:line="160" pos:column="15"/></operator> <operator pos:line="160" pos:column="16">!<pos:position pos:line="160" pos:column="17"/></operator><call><name pos:line="160" pos:column="17">apr_strnatcasecmp<pos:position pos:line="160" pos:column="34"/></name><argument_list pos:line="160" pos:column="34">(<argument><expr><name><name pos:line="160" pos:column="35">headers_in<pos:position pos:line="160" pos:column="45"/></name><index pos:line="160" pos:column="45">[<expr><name pos:line="160" pos:column="46">counter<pos:position pos:line="160" pos:column="53"/></name></expr>]<pos:position pos:line="160" pos:column="54"/></index></name><operator pos:line="160" pos:column="54">.<pos:position pos:line="160" pos:column="55"/></operator><name pos:line="160" pos:column="55">key<pos:position pos:line="160" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="60">"Trailer"<pos:position pos:line="160" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="70"/></argument_list></call>
            <operator pos:line="161" pos:column="13">||<pos:position pos:line="161" pos:column="15"/></operator> <operator pos:line="161" pos:column="16">!<pos:position pos:line="161" pos:column="17"/></operator><call><name pos:line="161" pos:column="17">apr_strnatcasecmp<pos:position pos:line="161" pos:column="34"/></name><argument_list pos:line="161" pos:column="34">(<argument><expr><name><name pos:line="161" pos:column="35">headers_in<pos:position pos:line="161" pos:column="45"/></name><index pos:line="161" pos:column="45">[<expr><name pos:line="161" pos:column="46">counter<pos:position pos:line="161" pos:column="53"/></name></expr>]<pos:position pos:line="161" pos:column="54"/></index></name><operator pos:line="161" pos:column="54">.<pos:position pos:line="161" pos:column="55"/></operator><name pos:line="161" pos:column="55">key<pos:position pos:line="161" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="161" pos:column="60">"Transfer-Encoding"<pos:position pos:line="161" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="80"/></argument_list></call>
            <operator pos:line="162" pos:column="13">||<pos:position pos:line="162" pos:column="15"/></operator> <operator pos:line="162" pos:column="16">!<pos:position pos:line="162" pos:column="17"/></operator><call><name pos:line="162" pos:column="17">apr_strnatcasecmp<pos:position pos:line="162" pos:column="34"/></name><argument_list pos:line="162" pos:column="34">(<argument><expr><name><name pos:line="162" pos:column="35">headers_in<pos:position pos:line="162" pos:column="45"/></name><index pos:line="162" pos:column="45">[<expr><name pos:line="162" pos:column="46">counter<pos:position pos:line="162" pos:column="53"/></name></expr>]<pos:position pos:line="162" pos:column="54"/></index></name><operator pos:line="162" pos:column="54">.<pos:position pos:line="162" pos:column="55"/></operator><name pos:line="162" pos:column="55">key<pos:position pos:line="162" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="162" pos:column="60">"Upgrade"<pos:position pos:line="162" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="70"/></argument_list></call>

        <comment type="block" pos:line="164" pos:column="9">/* XXX: @@@ FIXME: "Proxy-Authorization" should *only* be 
         * suppressed if THIS server requested the authentication,
         * not when a frontend proxy requested it!
         *
         * The solution to this problem is probably to strip out
         * the Proxy-Authorisation header in the authorisation
         * code itself, not here. This saves us having to signal
         * somehow whether this request was authenticated or not.
         */</comment>
            <operator pos:line="173" pos:column="13">||<pos:position pos:line="173" pos:column="15"/></operator> <operator pos:line="173" pos:column="16">!<pos:position pos:line="173" pos:column="17"/></operator><call><name pos:line="173" pos:column="17">apr_strnatcasecmp<pos:position pos:line="173" pos:column="34"/></name><argument_list pos:line="173" pos:column="34">(<argument><expr><name><name pos:line="173" pos:column="35">headers_in<pos:position pos:line="173" pos:column="45"/></name><index pos:line="173" pos:column="45">[<expr><name pos:line="173" pos:column="46">counter<pos:position pos:line="173" pos:column="53"/></name></expr>]<pos:position pos:line="173" pos:column="54"/></index></name><operator pos:line="173" pos:column="54">.<pos:position pos:line="173" pos:column="55"/></operator><name pos:line="173" pos:column="55">key<pos:position pos:line="173" pos:column="58"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="173" pos:column="59">"Proxy-Authorization"<pos:position pos:line="173" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="173" pos:column="81"/></argument_list></call>
            <operator pos:line="174" pos:column="13">||<pos:position pos:line="174" pos:column="15"/></operator> <operator pos:line="174" pos:column="16">!<pos:position pos:line="174" pos:column="17"/></operator><call><name pos:line="174" pos:column="17">apr_strnatcasecmp<pos:position pos:line="174" pos:column="34"/></name><argument_list pos:line="174" pos:column="34">(<argument><expr><name><name pos:line="174" pos:column="35">headers_in<pos:position pos:line="174" pos:column="45"/></name><index pos:line="174" pos:column="45">[<expr><name pos:line="174" pos:column="46">counter<pos:position pos:line="174" pos:column="53"/></name></expr>]<pos:position pos:line="174" pos:column="54"/></index></name><operator pos:line="174" pos:column="54">.<pos:position pos:line="174" pos:column="55"/></operator><name pos:line="174" pos:column="55">key<pos:position pos:line="174" pos:column="58"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="174" pos:column="59">"Proxy-Authenticate"<pos:position pos:line="174" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="174" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="174" pos:column="81"/></condition><then pos:line="174" pos:column="81"> <block pos:line="174" pos:column="82">{
            <continue pos:line="175" pos:column="13">continue;<pos:position pos:line="175" pos:column="22"/></continue>
        }<pos:position pos:line="176" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="177" pos:column="9">/* for sub-requests, ignore freshness/expiry headers */</comment>
        <if pos:line="178" pos:column="9">if <condition pos:line="178" pos:column="12">(<expr><name><name pos:line="178" pos:column="13">r<pos:position pos:line="178" pos:column="14"/></name><operator pos:line="178" pos:column="14">-&gt;<pos:position pos:line="178" pos:column="19"/></operator><name pos:line="178" pos:column="16">main<pos:position pos:line="178" pos:column="20"/></name></name></expr>)<pos:position pos:line="178" pos:column="21"/></condition><then pos:line="178" pos:column="21"> <block pos:line="178" pos:column="22">{
                <if pos:line="179" pos:column="17">if <condition pos:line="179" pos:column="20">(<expr><name><name pos:line="179" pos:column="21">headers_in<pos:position pos:line="179" pos:column="31"/></name><index pos:line="179" pos:column="31">[<expr><name pos:line="179" pos:column="32">counter<pos:position pos:line="179" pos:column="39"/></name></expr>]<pos:position pos:line="179" pos:column="40"/></index></name><operator pos:line="179" pos:column="40">.<pos:position pos:line="179" pos:column="41"/></operator><name pos:line="179" pos:column="41">key<pos:position pos:line="179" pos:column="44"/></name> <operator pos:line="179" pos:column="45">==<pos:position pos:line="179" pos:column="47"/></operator> <name pos:line="179" pos:column="48">NULL<pos:position pos:line="179" pos:column="52"/></name> <operator pos:line="179" pos:column="53">||<pos:position pos:line="179" pos:column="55"/></operator> <name><name pos:line="179" pos:column="56">headers_in<pos:position pos:line="179" pos:column="66"/></name><index pos:line="179" pos:column="66">[<expr><name pos:line="179" pos:column="67">counter<pos:position pos:line="179" pos:column="74"/></name></expr>]<pos:position pos:line="179" pos:column="75"/></index></name><operator pos:line="179" pos:column="75">.<pos:position pos:line="179" pos:column="76"/></operator><name pos:line="179" pos:column="76">val<pos:position pos:line="179" pos:column="79"/></name> <operator pos:line="179" pos:column="80">==<pos:position pos:line="179" pos:column="82"/></operator> <name pos:line="179" pos:column="83">NULL<pos:position pos:line="179" pos:column="87"/></name>
                     <operator pos:line="180" pos:column="22">||<pos:position pos:line="180" pos:column="24"/></operator> <operator pos:line="180" pos:column="25">!<pos:position pos:line="180" pos:column="26"/></operator><call><name pos:line="180" pos:column="26">apr_strnatcasecmp<pos:position pos:line="180" pos:column="43"/></name><argument_list pos:line="180" pos:column="43">(<argument><expr><name><name pos:line="180" pos:column="44">headers_in<pos:position pos:line="180" pos:column="54"/></name><index pos:line="180" pos:column="54">[<expr><name pos:line="180" pos:column="55">counter<pos:position pos:line="180" pos:column="62"/></name></expr>]<pos:position pos:line="180" pos:column="63"/></index></name><operator pos:line="180" pos:column="63">.<pos:position pos:line="180" pos:column="64"/></operator><name pos:line="180" pos:column="64">key<pos:position pos:line="180" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="180" pos:column="69">"If-Match"<pos:position pos:line="180" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="180" pos:column="80"/></argument_list></call>
                     <operator pos:line="181" pos:column="22">||<pos:position pos:line="181" pos:column="24"/></operator> <operator pos:line="181" pos:column="25">!<pos:position pos:line="181" pos:column="26"/></operator><call><name pos:line="181" pos:column="26">apr_strnatcasecmp<pos:position pos:line="181" pos:column="43"/></name><argument_list pos:line="181" pos:column="43">(<argument><expr><name><name pos:line="181" pos:column="44">headers_in<pos:position pos:line="181" pos:column="54"/></name><index pos:line="181" pos:column="54">[<expr><name pos:line="181" pos:column="55">counter<pos:position pos:line="181" pos:column="62"/></name></expr>]<pos:position pos:line="181" pos:column="63"/></index></name><operator pos:line="181" pos:column="63">.<pos:position pos:line="181" pos:column="64"/></operator><name pos:line="181" pos:column="64">key<pos:position pos:line="181" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="181" pos:column="69">"If-Modified-Since"<pos:position pos:line="181" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="89"/></argument_list></call>
                     <operator pos:line="182" pos:column="22">||<pos:position pos:line="182" pos:column="24"/></operator> <operator pos:line="182" pos:column="25">!<pos:position pos:line="182" pos:column="26"/></operator><call><name pos:line="182" pos:column="26">apr_strnatcasecmp<pos:position pos:line="182" pos:column="43"/></name><argument_list pos:line="182" pos:column="43">(<argument><expr><name><name pos:line="182" pos:column="44">headers_in<pos:position pos:line="182" pos:column="54"/></name><index pos:line="182" pos:column="54">[<expr><name pos:line="182" pos:column="55">counter<pos:position pos:line="182" pos:column="62"/></name></expr>]<pos:position pos:line="182" pos:column="63"/></index></name><operator pos:line="182" pos:column="63">.<pos:position pos:line="182" pos:column="64"/></operator><name pos:line="182" pos:column="64">key<pos:position pos:line="182" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="69">"If-Range"<pos:position pos:line="182" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="80"/></argument_list></call>
                     <operator pos:line="183" pos:column="22">||<pos:position pos:line="183" pos:column="24"/></operator> <operator pos:line="183" pos:column="25">!<pos:position pos:line="183" pos:column="26"/></operator><call><name pos:line="183" pos:column="26">apr_strnatcasecmp<pos:position pos:line="183" pos:column="43"/></name><argument_list pos:line="183" pos:column="43">(<argument><expr><name><name pos:line="183" pos:column="44">headers_in<pos:position pos:line="183" pos:column="54"/></name><index pos:line="183" pos:column="54">[<expr><name pos:line="183" pos:column="55">counter<pos:position pos:line="183" pos:column="62"/></name></expr>]<pos:position pos:line="183" pos:column="63"/></index></name><operator pos:line="183" pos:column="63">.<pos:position pos:line="183" pos:column="64"/></operator><name pos:line="183" pos:column="64">key<pos:position pos:line="183" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="183" pos:column="69">"If-Unmodified-Since"<pos:position pos:line="183" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="91"/></argument_list></call>                     
                     <operator pos:line="184" pos:column="22">||<pos:position pos:line="184" pos:column="24"/></operator> <operator pos:line="184" pos:column="25">!<pos:position pos:line="184" pos:column="26"/></operator><call><name pos:line="184" pos:column="26">apr_strnatcasecmp<pos:position pos:line="184" pos:column="43"/></name><argument_list pos:line="184" pos:column="43">(<argument><expr><name><name pos:line="184" pos:column="44">headers_in<pos:position pos:line="184" pos:column="54"/></name><index pos:line="184" pos:column="54">[<expr><name pos:line="184" pos:column="55">counter<pos:position pos:line="184" pos:column="62"/></name></expr>]<pos:position pos:line="184" pos:column="63"/></index></name><operator pos:line="184" pos:column="63">.<pos:position pos:line="184" pos:column="64"/></operator><name pos:line="184" pos:column="64">key<pos:position pos:line="184" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="184" pos:column="69">"If-None-Match"<pos:position pos:line="184" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="85"/></argument_list></call></expr>)<pos:position pos:line="184" pos:column="86"/></condition><then pos:line="184" pos:column="86"> <block pos:line="184" pos:column="87">{
                    <continue pos:line="185" pos:column="21">continue;<pos:position pos:line="185" pos:column="30"/></continue>
                }<pos:position pos:line="186" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="188" pos:column="17">/* If you POST to a page that gets server-side parsed
                 * by mod_include, and the parsing results in a reverse
                 * proxy call, the proxied request will be a GET, but
                 * its request_rec will have inherited the Content-Length
                 * of the original request (the POST for the enclosing
                 * page).  We can't send the original POST's request body
                 * as part of the proxied subrequest, so we need to avoid
                 * sending the corresponding content length.  Otherwise,
                 * the server to which we're proxying will sit there
                 * forever, waiting for a request body that will never
                 * arrive.
                 */</comment>
                <if pos:line="200" pos:column="17">if <condition pos:line="200" pos:column="20">(<expr><operator pos:line="200" pos:column="21">(<pos:position pos:line="200" pos:column="22"/></operator><name><name pos:line="200" pos:column="22">r<pos:position pos:line="200" pos:column="23"/></name><operator pos:line="200" pos:column="23">-&gt;<pos:position pos:line="200" pos:column="28"/></operator><name pos:line="200" pos:column="25">method_number<pos:position pos:line="200" pos:column="38"/></name></name> <operator pos:line="200" pos:column="39">==<pos:position pos:line="200" pos:column="41"/></operator> <name pos:line="200" pos:column="42">M_GET<pos:position pos:line="200" pos:column="47"/></name><operator pos:line="200" pos:column="47">)<pos:position pos:line="200" pos:column="48"/></operator> <operator pos:line="200" pos:column="49">&amp;&amp;<pos:position pos:line="200" pos:column="59"/></operator> <name><name pos:line="200" pos:column="52">headers_in<pos:position pos:line="200" pos:column="62"/></name><index pos:line="200" pos:column="62">[<expr><name pos:line="200" pos:column="63">counter<pos:position pos:line="200" pos:column="70"/></name></expr>]<pos:position pos:line="200" pos:column="71"/></index></name><operator pos:line="200" pos:column="71">.<pos:position pos:line="200" pos:column="72"/></operator><name pos:line="200" pos:column="72">key<pos:position pos:line="200" pos:column="75"/></name> <operator pos:line="200" pos:column="76">&amp;&amp;<pos:position pos:line="200" pos:column="86"/></operator>
                    <operator pos:line="201" pos:column="21">!<pos:position pos:line="201" pos:column="22"/></operator><call><name pos:line="201" pos:column="22">apr_strnatcasecmp<pos:position pos:line="201" pos:column="39"/></name><argument_list pos:line="201" pos:column="39">(<argument><expr><name><name pos:line="201" pos:column="40">headers_in<pos:position pos:line="201" pos:column="50"/></name><index pos:line="201" pos:column="50">[<expr><name pos:line="201" pos:column="51">counter<pos:position pos:line="201" pos:column="58"/></name></expr>]<pos:position pos:line="201" pos:column="59"/></index></name><operator pos:line="201" pos:column="59">.<pos:position pos:line="201" pos:column="60"/></operator><name pos:line="201" pos:column="60">key<pos:position pos:line="201" pos:column="63"/></name></expr></argument>,
                                       <argument><expr><literal type="string" pos:line="202" pos:column="40">"Content-Length"<pos:position pos:line="202" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="202" pos:column="58"/></condition><then pos:line="202" pos:column="58"> <block pos:line="202" pos:column="59">{
                    <continue pos:line="203" pos:column="21">continue;<pos:position pos:line="203" pos:column="30"/></continue>
                }<pos:position pos:line="204" pos:column="18"/></block></then></if>
        }<pos:position pos:line="205" pos:column="10"/></block></then></if>


        <expr_stmt><expr><name pos:line="208" pos:column="9">buf<pos:position pos:line="208" pos:column="12"/></name> <operator pos:line="208" pos:column="13">=<pos:position pos:line="208" pos:column="14"/></operator> <call><name pos:line="208" pos:column="15">apr_pstrcat<pos:position pos:line="208" pos:column="26"/></name><argument_list pos:line="208" pos:column="26">(<argument><expr><name pos:line="208" pos:column="27">p<pos:position pos:line="208" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="208" pos:column="30">headers_in<pos:position pos:line="208" pos:column="40"/></name><index pos:line="208" pos:column="40">[<expr><name pos:line="208" pos:column="41">counter<pos:position pos:line="208" pos:column="48"/></name></expr>]<pos:position pos:line="208" pos:column="49"/></index></name><operator pos:line="208" pos:column="49">.<pos:position pos:line="208" pos:column="50"/></operator><name pos:line="208" pos:column="50">key<pos:position pos:line="208" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="208" pos:column="55">": "<pos:position pos:line="208" pos:column="59"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="209" pos:column="27">headers_in<pos:position pos:line="209" pos:column="37"/></name><index pos:line="209" pos:column="37">[<expr><name pos:line="209" pos:column="38">counter<pos:position pos:line="209" pos:column="45"/></name></expr>]<pos:position pos:line="209" pos:column="46"/></index></name><operator pos:line="209" pos:column="46">.<pos:position pos:line="209" pos:column="47"/></operator><name pos:line="209" pos:column="47">val<pos:position pos:line="209" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="209" pos:column="52">CRLF<pos:position pos:line="209" pos:column="56"/></name></expr></argument>,
                          <argument><expr><name pos:line="210" pos:column="27">NULL<pos:position pos:line="210" pos:column="31"/></name></expr></argument>)<pos:position pos:line="210" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="211" pos:column="9">ap_xlate_proto_to_ascii<pos:position pos:line="211" pos:column="32"/></name><argument_list pos:line="211" pos:column="32">(<argument><expr><name pos:line="211" pos:column="33">buf<pos:position pos:line="211" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="211" pos:column="38">strlen<pos:position pos:line="211" pos:column="44"/></name><argument_list pos:line="211" pos:column="44">(<argument><expr><name pos:line="211" pos:column="45">buf<pos:position pos:line="211" pos:column="48"/></name></expr></argument>)<pos:position pos:line="211" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="211" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="212" pos:column="9">e<pos:position pos:line="212" pos:column="10"/></name> <operator pos:line="212" pos:column="11">=<pos:position pos:line="212" pos:column="12"/></operator> <call><name pos:line="212" pos:column="13">apr_bucket_pool_create<pos:position pos:line="212" pos:column="35"/></name><argument_list pos:line="212" pos:column="35">(<argument><expr><name pos:line="212" pos:column="36">buf<pos:position pos:line="212" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="212" pos:column="41">strlen<pos:position pos:line="212" pos:column="47"/></name><argument_list pos:line="212" pos:column="47">(<argument><expr><name pos:line="212" pos:column="48">buf<pos:position pos:line="212" pos:column="51"/></name></expr></argument>)<pos:position pos:line="212" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="212" pos:column="54">p<pos:position pos:line="212" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="212" pos:column="57">c<pos:position pos:line="212" pos:column="58"/></name><operator pos:line="212" pos:column="58">-&gt;<pos:position pos:line="212" pos:column="63"/></operator><name pos:line="212" pos:column="60">bucket_alloc<pos:position pos:line="212" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="212" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="213" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="213" pos:column="32"/></name><argument_list pos:line="213" pos:column="32">(<argument><expr><name pos:line="213" pos:column="33">bb<pos:position pos:line="213" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="37">e<pos:position pos:line="213" pos:column="38"/></name></expr></argument>)<pos:position pos:line="213" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="214" pos:column="6"/></block></for>

    <comment type="block" pos:line="216" pos:column="5">/* add empty line at the end of the headers */</comment>
<cpp:if pos:line="217" pos:column="1">#<cpp:directive pos:line="217" pos:column="2">if<pos:position pos:line="217" pos:column="4"/></cpp:directive> <expr><name pos:line="217" pos:column="5">APR_CHARSET_EBCDIC<pos:position pos:line="217" pos:column="23"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="218" pos:column="5">e<pos:position pos:line="218" pos:column="6"/></name> <operator pos:line="218" pos:column="7">=<pos:position pos:line="218" pos:column="8"/></operator> <call><name pos:line="218" pos:column="9">apr_bucket_immortal_create<pos:position pos:line="218" pos:column="35"/></name><argument_list pos:line="218" pos:column="35">(<argument><expr><literal type="string" pos:line="218" pos:column="36">"\015\012"<pos:position pos:line="218" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="218" pos:column="48">2<pos:position pos:line="218" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="218" pos:column="51">c<pos:position pos:line="218" pos:column="52"/></name><operator pos:line="218" pos:column="52">-&gt;<pos:position pos:line="218" pos:column="57"/></operator><name pos:line="218" pos:column="54">bucket_alloc<pos:position pos:line="218" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="218" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="68"/></expr_stmt>
<cpp:else pos:line="219" pos:column="1">#<cpp:directive pos:line="219" pos:column="2">else<pos:position pos:line="219" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="220" pos:column="5">e<pos:position pos:line="220" pos:column="6"/></name> <operator pos:line="220" pos:column="7">=<pos:position pos:line="220" pos:column="8"/></operator> <call><name pos:line="220" pos:column="9">apr_bucket_immortal_create<pos:position pos:line="220" pos:column="35"/></name><argument_list pos:line="220" pos:column="35">(<argument><expr><name pos:line="220" pos:column="36">CRLF<pos:position pos:line="220" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="220" pos:column="42">sizeof<argument_list pos:line="220" pos:column="48">(<argument><expr><name pos:line="220" pos:column="49">CRLF<pos:position pos:line="220" pos:column="53"/></name></expr></argument>)<pos:position pos:line="220" pos:column="54"/></argument_list></sizeof><operator pos:line="220" pos:column="54">-<pos:position pos:line="220" pos:column="55"/></operator><literal type="number" pos:line="220" pos:column="55">1<pos:position pos:line="220" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="220" pos:column="58">c<pos:position pos:line="220" pos:column="59"/></name><operator pos:line="220" pos:column="59">-&gt;<pos:position pos:line="220" pos:column="64"/></operator><name pos:line="220" pos:column="61">bucket_alloc<pos:position pos:line="220" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="220" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="75"/></expr_stmt>
<cpp:endif pos:line="221" pos:column="1">#<cpp:directive pos:line="221" pos:column="2">endif<pos:position pos:line="221" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="222" pos:column="5">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="222" pos:column="28"/></name><argument_list pos:line="222" pos:column="28">(<argument><expr><name pos:line="222" pos:column="29">bb<pos:position pos:line="222" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="222" pos:column="33">e<pos:position pos:line="222" pos:column="34"/></name></expr></argument>)<pos:position pos:line="222" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="223" pos:column="5">e<pos:position pos:line="223" pos:column="6"/></name> <operator pos:line="223" pos:column="7">=<pos:position pos:line="223" pos:column="8"/></operator> <call><name pos:line="223" pos:column="9">apr_bucket_flush_create<pos:position pos:line="223" pos:column="32"/></name><argument_list pos:line="223" pos:column="32">(<argument><expr><name><name pos:line="223" pos:column="33">c<pos:position pos:line="223" pos:column="34"/></name><operator pos:line="223" pos:column="34">-&gt;<pos:position pos:line="223" pos:column="39"/></operator><name pos:line="223" pos:column="36">bucket_alloc<pos:position pos:line="223" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="223" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="224" pos:column="5">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="224" pos:column="28"/></name><argument_list pos:line="224" pos:column="28">(<argument><expr><name pos:line="224" pos:column="29">bb<pos:position pos:line="224" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="33">e<pos:position pos:line="224" pos:column="34"/></name></expr></argument>)<pos:position pos:line="224" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name pos:line="226" pos:column="5">status<pos:position pos:line="226" pos:column="11"/></name> <operator pos:line="226" pos:column="12">=<pos:position pos:line="226" pos:column="13"/></operator> <call><name pos:line="226" pos:column="14">ap_pass_brigade<pos:position pos:line="226" pos:column="29"/></name><argument_list pos:line="226" pos:column="29">(<argument><expr><name><name pos:line="226" pos:column="30">origin<pos:position pos:line="226" pos:column="36"/></name><operator pos:line="226" pos:column="36">-&gt;<pos:position pos:line="226" pos:column="41"/></operator><name pos:line="226" pos:column="38">output_filters<pos:position pos:line="226" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="54">bb<pos:position pos:line="226" pos:column="56"/></name></expr></argument>)<pos:position pos:line="226" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="58"/></expr_stmt>

    <if pos:line="228" pos:column="5">if <condition pos:line="228" pos:column="8">(<expr><name pos:line="228" pos:column="9">status<pos:position pos:line="228" pos:column="15"/></name> <operator pos:line="228" pos:column="16">!=<pos:position pos:line="228" pos:column="18"/></operator> <name pos:line="228" pos:column="19">APR_SUCCESS<pos:position pos:line="228" pos:column="30"/></name></expr>)<pos:position pos:line="228" pos:column="31"/></condition><then pos:line="228" pos:column="31"> <block pos:line="228" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="229" pos:column="9">ap_log_error<pos:position pos:line="229" pos:column="21"/></name><argument_list pos:line="229" pos:column="21">(<argument><expr><name pos:line="229" pos:column="22">APLOG_MARK<pos:position pos:line="229" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="229" pos:column="34">APLOG_ERR<pos:position pos:line="229" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="229" pos:column="45">status<pos:position pos:line="229" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="229" pos:column="53">r<pos:position pos:line="229" pos:column="54"/></name><operator pos:line="229" pos:column="54">-&gt;<pos:position pos:line="229" pos:column="59"/></operator><name pos:line="229" pos:column="56">server<pos:position pos:line="229" pos:column="62"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="230" pos:column="22">"proxy: request failed to %pI (%s)"<pos:position pos:line="230" pos:column="57"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="231" pos:column="22">p_conn<pos:position pos:line="231" pos:column="28"/></name><operator pos:line="231" pos:column="28">-&gt;<pos:position pos:line="231" pos:column="33"/></operator><name pos:line="231" pos:column="30">addr<pos:position pos:line="231" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="231" pos:column="36">p_conn<pos:position pos:line="231" pos:column="42"/></name><operator pos:line="231" pos:column="42">-&gt;<pos:position pos:line="231" pos:column="47"/></operator><name pos:line="231" pos:column="44">name<pos:position pos:line="231" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="231" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="50"/></expr_stmt>
        <return pos:line="232" pos:column="9">return <expr><name pos:line="232" pos:column="16">status<pos:position pos:line="232" pos:column="22"/></name></expr>;<pos:position pos:line="232" pos:column="23"/></return>
    }<pos:position pos:line="233" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="235" pos:column="5">/* send the request data, if any. */</comment>
    <expr_stmt><expr><name pos:line="236" pos:column="5">seen_eos<pos:position pos:line="236" pos:column="13"/></name> <operator pos:line="236" pos:column="14">=<pos:position pos:line="236" pos:column="15"/></operator> <literal type="number" pos:line="236" pos:column="16">0<pos:position pos:line="236" pos:column="17"/></literal></expr>;<pos:position pos:line="236" pos:column="18"/></expr_stmt>
    <do pos:line="237" pos:column="5">do <block pos:line="237" pos:column="8">{
        <expr_stmt><expr><name pos:line="238" pos:column="9">status<pos:position pos:line="238" pos:column="15"/></name> <operator pos:line="238" pos:column="16">=<pos:position pos:line="238" pos:column="17"/></operator> <call><name pos:line="238" pos:column="18">ap_get_brigade<pos:position pos:line="238" pos:column="32"/></name><argument_list pos:line="238" pos:column="32">(<argument><expr><name><name pos:line="238" pos:column="33">r<pos:position pos:line="238" pos:column="34"/></name><operator pos:line="238" pos:column="34">-&gt;<pos:position pos:line="238" pos:column="39"/></operator><name pos:line="238" pos:column="36">input_filters<pos:position pos:line="238" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="51">bb<pos:position pos:line="238" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="55">AP_MODE_READBYTES<pos:position pos:line="238" pos:column="72"/></name></expr></argument>,
                                <argument><expr><name pos:line="239" pos:column="33">APR_BLOCK_READ<pos:position pos:line="239" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="239" pos:column="49">HUGE_STRING_LEN<pos:position pos:line="239" pos:column="64"/></name></expr></argument>)<pos:position pos:line="239" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="66"/></expr_stmt>

        <if pos:line="241" pos:column="9">if <condition pos:line="241" pos:column="12">(<expr><name pos:line="241" pos:column="13">status<pos:position pos:line="241" pos:column="19"/></name> <operator pos:line="241" pos:column="20">!=<pos:position pos:line="241" pos:column="22"/></operator> <name pos:line="241" pos:column="23">APR_SUCCESS<pos:position pos:line="241" pos:column="34"/></name></expr>)<pos:position pos:line="241" pos:column="35"/></condition><then pos:line="241" pos:column="35"> <block pos:line="241" pos:column="36">{
            <return pos:line="242" pos:column="13">return <expr><name pos:line="242" pos:column="20">status<pos:position pos:line="242" pos:column="26"/></name></expr>;<pos:position pos:line="242" pos:column="27"/></return>
        }<pos:position pos:line="243" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="245" pos:column="9">/* If this brigade contain EOS, either stop or remove it. */</comment>
        <if pos:line="246" pos:column="9">if <condition pos:line="246" pos:column="12">(<expr><call><name pos:line="246" pos:column="13">APR_BUCKET_IS_EOS<pos:position pos:line="246" pos:column="30"/></name><argument_list pos:line="246" pos:column="30">(<argument><expr><call><name pos:line="246" pos:column="31">APR_BRIGADE_LAST<pos:position pos:line="246" pos:column="47"/></name><argument_list pos:line="246" pos:column="47">(<argument><expr><name pos:line="246" pos:column="48">bb<pos:position pos:line="246" pos:column="50"/></name></expr></argument>)<pos:position pos:line="246" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="246" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="246" pos:column="53"/></condition><then pos:line="246" pos:column="53"> <block pos:line="246" pos:column="54">{
            <comment type="block" pos:line="247" pos:column="13">/* As a shortcut, if this brigade is simply an EOS bucket,
             * don't send anything down the filter chain.
             */</comment>
            <if pos:line="250" pos:column="13">if <condition pos:line="250" pos:column="16">(<expr><call><name pos:line="250" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="250" pos:column="34"/></name><argument_list pos:line="250" pos:column="34">(<argument><expr><call><name pos:line="250" pos:column="35">APR_BRIGADE_FIRST<pos:position pos:line="250" pos:column="52"/></name><argument_list pos:line="250" pos:column="52">(<argument><expr><name pos:line="250" pos:column="53">bb<pos:position pos:line="250" pos:column="55"/></name></expr></argument>)<pos:position pos:line="250" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="250" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="250" pos:column="58"/></condition><then pos:line="250" pos:column="58"> <block pos:line="250" pos:column="59">{
                <break pos:line="251" pos:column="17">break;<pos:position pos:line="251" pos:column="23"/></break>
            }<pos:position pos:line="252" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="254" pos:column="13">/* We can't pass this EOS to the output_filters. */</comment>
            <expr_stmt><expr><name pos:line="255" pos:column="13">e<pos:position pos:line="255" pos:column="14"/></name> <operator pos:line="255" pos:column="15">=<pos:position pos:line="255" pos:column="16"/></operator> <call><name pos:line="255" pos:column="17">APR_BRIGADE_LAST<pos:position pos:line="255" pos:column="33"/></name><argument_list pos:line="255" pos:column="33">(<argument><expr><name pos:line="255" pos:column="34">bb<pos:position pos:line="255" pos:column="36"/></name></expr></argument>)<pos:position pos:line="255" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="256" pos:column="13">apr_bucket_delete<pos:position pos:line="256" pos:column="30"/></name><argument_list pos:line="256" pos:column="30">(<argument><expr><name pos:line="256" pos:column="31">e<pos:position pos:line="256" pos:column="32"/></name></expr></argument>)<pos:position pos:line="256" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name pos:line="257" pos:column="13">seen_eos<pos:position pos:line="257" pos:column="21"/></name> <operator pos:line="257" pos:column="22">=<pos:position pos:line="257" pos:column="23"/></operator> <literal type="number" pos:line="257" pos:column="24">1<pos:position pos:line="257" pos:column="25"/></literal></expr>;<pos:position pos:line="257" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="258" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="260" pos:column="9">e<pos:position pos:line="260" pos:column="10"/></name> <operator pos:line="260" pos:column="11">=<pos:position pos:line="260" pos:column="12"/></operator> <call><name pos:line="260" pos:column="13">apr_bucket_flush_create<pos:position pos:line="260" pos:column="36"/></name><argument_list pos:line="260" pos:column="36">(<argument><expr><name><name pos:line="260" pos:column="37">c<pos:position pos:line="260" pos:column="38"/></name><operator pos:line="260" pos:column="38">-&gt;<pos:position pos:line="260" pos:column="43"/></operator><name pos:line="260" pos:column="40">bucket_alloc<pos:position pos:line="260" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="260" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="261" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="261" pos:column="32"/></name><argument_list pos:line="261" pos:column="32">(<argument><expr><name pos:line="261" pos:column="33">bb<pos:position pos:line="261" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="37">e<pos:position pos:line="261" pos:column="38"/></name></expr></argument>)<pos:position pos:line="261" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="40"/></expr_stmt>

        <expr_stmt><expr><name pos:line="263" pos:column="9">status<pos:position pos:line="263" pos:column="15"/></name> <operator pos:line="263" pos:column="16">=<pos:position pos:line="263" pos:column="17"/></operator> <call><name pos:line="263" pos:column="18">ap_pass_brigade<pos:position pos:line="263" pos:column="33"/></name><argument_list pos:line="263" pos:column="33">(<argument><expr><name><name pos:line="263" pos:column="34">origin<pos:position pos:line="263" pos:column="40"/></name><operator pos:line="263" pos:column="40">-&gt;<pos:position pos:line="263" pos:column="45"/></operator><name pos:line="263" pos:column="42">output_filters<pos:position pos:line="263" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="58">bb<pos:position pos:line="263" pos:column="60"/></name></expr></argument>)<pos:position pos:line="263" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="62"/></expr_stmt>
        <if pos:line="264" pos:column="9">if <condition pos:line="264" pos:column="12">(<expr><name pos:line="264" pos:column="13">status<pos:position pos:line="264" pos:column="19"/></name> <operator pos:line="264" pos:column="20">!=<pos:position pos:line="264" pos:column="22"/></operator> <name pos:line="264" pos:column="23">APR_SUCCESS<pos:position pos:line="264" pos:column="34"/></name></expr>)<pos:position pos:line="264" pos:column="35"/></condition><then pos:line="264" pos:column="35"> <block pos:line="264" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="265" pos:column="13">ap_log_error<pos:position pos:line="265" pos:column="25"/></name><argument_list pos:line="265" pos:column="25">(<argument><expr><name pos:line="265" pos:column="26">APLOG_MARK<pos:position pos:line="265" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="38">APLOG_ERR<pos:position pos:line="265" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="49">status<pos:position pos:line="265" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="265" pos:column="57">r<pos:position pos:line="265" pos:column="58"/></name><operator pos:line="265" pos:column="58">-&gt;<pos:position pos:line="265" pos:column="63"/></operator><name pos:line="265" pos:column="60">server<pos:position pos:line="265" pos:column="66"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="266" pos:column="26">"proxy: pass request data failed to %pI (%s)"<pos:position pos:line="266" pos:column="71"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="267" pos:column="26">p_conn<pos:position pos:line="267" pos:column="32"/></name><operator pos:line="267" pos:column="32">-&gt;<pos:position pos:line="267" pos:column="37"/></operator><name pos:line="267" pos:column="34">addr<pos:position pos:line="267" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="267" pos:column="40">p_conn<pos:position pos:line="267" pos:column="46"/></name><operator pos:line="267" pos:column="46">-&gt;<pos:position pos:line="267" pos:column="51"/></operator><name pos:line="267" pos:column="48">name<pos:position pos:line="267" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="267" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="54"/></expr_stmt>
            <return pos:line="268" pos:column="13">return <expr><name pos:line="268" pos:column="20">status<pos:position pos:line="268" pos:column="26"/></name></expr>;<pos:position pos:line="268" pos:column="27"/></return>
        }<pos:position pos:line="269" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="270" pos:column="9">apr_brigade_cleanup<pos:position pos:line="270" pos:column="28"/></name><argument_list pos:line="270" pos:column="28">(<argument><expr><name pos:line="270" pos:column="29">bb<pos:position pos:line="270" pos:column="31"/></name></expr></argument>)<pos:position pos:line="270" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="271" pos:column="6"/></block> while <condition pos:line="271" pos:column="13">(<expr><operator pos:line="271" pos:column="14">!<pos:position pos:line="271" pos:column="15"/></operator><name pos:line="271" pos:column="15">seen_eos<pos:position pos:line="271" pos:column="23"/></name></expr>)<pos:position pos:line="271" pos:column="24"/></condition>;<pos:position pos:line="271" pos:column="25"/></do>

    <return pos:line="273" pos:column="5">return <expr><name pos:line="273" pos:column="12">APR_SUCCESS<pos:position pos:line="273" pos:column="23"/></name></expr>;<pos:position pos:line="273" pos:column="24"/></return>
}<pos:position pos:line="274" pos:column="2"/></block></function></unit>

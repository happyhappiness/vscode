<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5930.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name> <name pos:line="1" pos:column="12">APR_THREAD_FUNC<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">regfnWriteClient<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">isapi_cid<pos:position pos:line="1" pos:column="54"/></name>    <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">cid<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="2" pos:column="45">void<pos:position pos:line="2" pos:column="49"/></name>         <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">buf_ptr<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="3" pos:column="45">apr_uint32_t<pos:position pos:line="3" pos:column="57"/></name> <modifier pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></modifier></type><name pos:line="3" pos:column="59">size_arg<pos:position pos:line="3" pos:column="67"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="4" pos:column="45">apr_uint32_t<pos:position pos:line="4" pos:column="57"/></name></type>  <name pos:line="4" pos:column="59">flags<pos:position pos:line="4" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="65"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">request_rec<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">r<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name><name pos:line="6" pos:column="22">cid<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">r<pos:position pos:line="6" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">conn_rec<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">c<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><name><name pos:line="7" pos:column="19">r<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">-&gt;<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="22">connection<pos:position pos:line="7" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_uint32_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">buf_size<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><operator pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">size_arg<pos:position pos:line="8" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">buf_data<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><operator pos:line="9" pos:column="22">(<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">char<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></operator><operator pos:line="9" pos:column="28">)<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">buf_ptr<pos:position pos:line="9" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_bucket_brigade<pos:position pos:line="10" pos:column="23"/></name> <modifier pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></modifier></type><name pos:line="10" pos:column="25">bb<pos:position pos:line="10" pos:column="27"/></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_bucket<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">b<pos:position pos:line="11" pos:column="18"/></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_status_t<pos:position pos:line="12" pos:column="17"/></name></type> <name pos:line="12" pos:column="18">rv<pos:position pos:line="12" pos:column="20"/></name> <init pos:line="12" pos:column="21">= <expr><name pos:line="12" pos:column="23">APR_SUCCESS<pos:position pos:line="12" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="35"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name><name pos:line="14" pos:column="10">cid<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">headers_set<pos:position pos:line="14" pos:column="26"/></name></name></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27"> <block pos:line="14" pos:column="28">{
        <comment type="block" pos:line="15" pos:column="9">/* It appears that the foxisapi module and other clients
         * presume that WriteClient("headers\n\nbody") will work.
         * Parse them out, or die trying.
         */</comment>
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">apr_ssize_t<pos:position pos:line="19" pos:column="20"/></name></type> <name pos:line="19" pos:column="21">ate<pos:position pos:line="19" pos:column="24"/></name></decl>;<pos:position pos:line="19" pos:column="25"/></decl_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">ate<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <call><name pos:line="20" pos:column="15">send_response_header<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">cid<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">NULL<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="47">buf_data<pos:position pos:line="20" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="57">0<pos:position pos:line="20" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="60">buf_size<pos:position pos:line="20" pos:column="68"/></name></expr></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="70"/></expr_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">ate<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">&lt;<pos:position pos:line="21" pos:column="21"/></operator> <literal type="number" pos:line="21" pos:column="19">0<pos:position pos:line="21" pos:column="20"/></literal></expr>)<pos:position pos:line="21" pos:column="21"/></condition><then pos:line="21" pos:column="21"> <block pos:line="21" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">apr_set_os_error<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><call><name pos:line="22" pos:column="30">APR_FROM_OS_ERROR<pos:position pos:line="22" pos:column="47"/></name><argument_list pos:line="22" pos:column="47">(<argument><expr><name pos:line="22" pos:column="48">ERROR_INVALID_PARAMETER<pos:position pos:line="22" pos:column="71"/></name></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="74"/></expr_stmt>
            <return pos:line="23" pos:column="13">return <expr><literal type="number" pos:line="23" pos:column="20">0<pos:position pos:line="23" pos:column="21"/></literal></expr>;<pos:position pos:line="23" pos:column="22"/></return>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="26" pos:column="9">buf_data<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">+=<pos:position pos:line="26" pos:column="20"/></operator> <name pos:line="26" pos:column="21">ate<pos:position pos:line="26" pos:column="24"/></name></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">buf_size<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">-=<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">ate<pos:position pos:line="27" pos:column="24"/></name></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">buf_size<pos:position pos:line="30" pos:column="17"/></name></expr>)<pos:position pos:line="30" pos:column="18"/></condition><then pos:line="30" pos:column="18"> <block pos:line="30" pos:column="19">{
        <expr_stmt><expr><name pos:line="31" pos:column="9">bb<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <call><name pos:line="31" pos:column="14">apr_brigade_create<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name><name pos:line="31" pos:column="33">r<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">pool<pos:position pos:line="31" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="42">c<pos:position pos:line="31" pos:column="43"/></name><operator pos:line="31" pos:column="43">-&gt;<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="45">bucket_alloc<pos:position pos:line="31" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><name pos:line="32" pos:column="9">b<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <call><name pos:line="32" pos:column="13">apr_bucket_transient_create<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><name pos:line="32" pos:column="41">buf_data<pos:position pos:line="32" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="51">buf_size<pos:position pos:line="32" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="61">c<pos:position pos:line="32" pos:column="62"/></name><operator pos:line="32" pos:column="62">-&gt;<pos:position pos:line="32" pos:column="67"/></operator><name pos:line="32" pos:column="64">bucket_alloc<pos:position pos:line="32" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="78"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">bb<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="37">b<pos:position pos:line="33" pos:column="38"/></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="34" pos:column="9">b<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <call><name pos:line="34" pos:column="13">apr_bucket_flush_create<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">(<argument><expr><name><name pos:line="34" pos:column="37">c<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">-&gt;<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="40">bucket_alloc<pos:position pos:line="34" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><name pos:line="35" pos:column="33">bb<pos:position pos:line="35" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="37">b<pos:position pos:line="35" pos:column="38"/></name></expr></argument>)<pos:position pos:line="35" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="36" pos:column="9">rv<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <call><name pos:line="36" pos:column="14">ap_pass_brigade<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name><name pos:line="36" pos:column="30">r<pos:position pos:line="36" pos:column="31"/></name><operator pos:line="36" pos:column="31">-&gt;<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="33">output_filters<pos:position pos:line="36" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="49">bb<pos:position pos:line="36" pos:column="51"/></name></expr></argument>)<pos:position pos:line="36" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="37" pos:column="9">cid<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">response_sent<pos:position pos:line="37" pos:column="27"/></name></name> <operator pos:line="37" pos:column="28">=<pos:position pos:line="37" pos:column="29"/></operator> <literal type="number" pos:line="37" pos:column="30">1<pos:position pos:line="37" pos:column="31"/></literal></expr>;<pos:position pos:line="37" pos:column="32"/></expr_stmt>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">rv<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">!=<pos:position pos:line="38" pos:column="18"/></operator> <name pos:line="38" pos:column="19">APR_SUCCESS<pos:position pos:line="38" pos:column="30"/></name></expr>)<pos:position pos:line="38" pos:column="31"/></condition><then pos:line="38" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="13">ap_log_rerror<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">APLOG_MARK<pos:position pos:line="39" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="39">APLOG_DEBUG<pos:position pos:line="39" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="52">rv<pos:position pos:line="39" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="56">r<pos:position pos:line="39" pos:column="57"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="40" pos:column="27">"WriteClient ap_pass_brigade failed: %s"<pos:position pos:line="40" pos:column="67"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="41" pos:column="27">r<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">-&gt;<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="30">filename<pos:position pos:line="41" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">(<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">flags<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">&amp;<pos:position pos:line="44" pos:column="21"/></operator> <name pos:line="44" pos:column="18">HSE_IO_ASYNC<pos:position pos:line="44" pos:column="30"/></name><operator pos:line="44" pos:column="30">)<pos:position pos:line="44" pos:column="31"/></operator> <operator pos:line="44" pos:column="32">&amp;&amp;<pos:position pos:line="44" pos:column="42"/></operator> <name><name pos:line="44" pos:column="35">cid<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">-&gt;<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="40">completion<pos:position pos:line="44" pos:column="50"/></name></name></expr>)<pos:position pos:line="44" pos:column="51"/></condition><then pos:line="44" pos:column="51"> <block pos:line="44" pos:column="52">{
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">rv<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">==<pos:position pos:line="45" pos:column="18"/></operator> <name pos:line="45" pos:column="19">APR_SUCCESS<pos:position pos:line="45" pos:column="30"/></name></expr>)<pos:position pos:line="45" pos:column="31"/></condition><then pos:line="45" pos:column="31"> <block pos:line="45" pos:column="32">{
            <expr_stmt><expr><call><name><name pos:line="46" pos:column="13">cid<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">completion<pos:position pos:line="46" pos:column="28"/></name></name><argument_list pos:line="46" pos:column="28">(<argument><expr><name><name pos:line="46" pos:column="29">cid<pos:position pos:line="46" pos:column="32"/></name><operator pos:line="46" pos:column="32">-&gt;<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="34">ecb<pos:position pos:line="46" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="39">cid<pos:position pos:line="46" pos:column="42"/></name><operator pos:line="46" pos:column="42">-&gt;<pos:position pos:line="46" pos:column="47"/></operator><name pos:line="46" pos:column="44">completion_arg<pos:position pos:line="46" pos:column="58"/></name></name></expr></argument>,
                            <argument><expr><operator pos:line="47" pos:column="29">*<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="30">size_arg<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="40">ERROR_SUCCESS<pos:position pos:line="47" pos:column="53"/></name></expr></argument>)<pos:position pos:line="47" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="48" pos:column="10"/></block></then>
        <else pos:line="49" pos:column="9">else <block pos:line="49" pos:column="14">{
            <expr_stmt><expr><call><name><name pos:line="50" pos:column="13">cid<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">completion<pos:position pos:line="50" pos:column="28"/></name></name><argument_list pos:line="50" pos:column="28">(<argument><expr><name><name pos:line="50" pos:column="29">cid<pos:position pos:line="50" pos:column="32"/></name><operator pos:line="50" pos:column="32">-&gt;<pos:position pos:line="50" pos:column="37"/></operator><name pos:line="50" pos:column="34">ecb<pos:position pos:line="50" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="39">cid<pos:position pos:line="50" pos:column="42"/></name><operator pos:line="50" pos:column="42">-&gt;<pos:position pos:line="50" pos:column="47"/></operator><name pos:line="50" pos:column="44">completion_arg<pos:position pos:line="50" pos:column="58"/></name></name></expr></argument>,
                            <argument><expr><operator pos:line="51" pos:column="29">*<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="30">size_arg<pos:position pos:line="51" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="40">ERROR_WRITE_FAULT<pos:position pos:line="51" pos:column="57"/></name></expr></argument>)<pos:position pos:line="51" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="52" pos:column="10"/></block></else></if>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
    <return pos:line="54" pos:column="5">return <expr><operator pos:line="54" pos:column="12">(<pos:position pos:line="54" pos:column="13"/></operator><name pos:line="54" pos:column="13">rv<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">==<pos:position pos:line="54" pos:column="18"/></operator> <name pos:line="54" pos:column="19">APR_SUCCESS<pos:position pos:line="54" pos:column="30"/></name><operator pos:line="54" pos:column="30">)<pos:position pos:line="54" pos:column="31"/></operator></expr>;<pos:position pos:line="54" pos:column="32"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

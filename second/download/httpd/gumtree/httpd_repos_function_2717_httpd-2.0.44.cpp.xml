<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2717_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">native_strerror<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">apr_status_t<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">statcode<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">buf<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">apr_size_t<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">bufsize<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">msg<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="6" pos:column="5">buf<pos:position pos:line="6" pos:column="8"/></name><index pos:line="6" pos:column="8">[<expr><literal type="number" pos:line="6" pos:column="9">0<pos:position pos:line="6" pos:column="10"/></literal></expr>]<pos:position pos:line="6" pos:column="11"/></index></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <literal type="char" pos:line="6" pos:column="14">'\0'<pos:position pos:line="6" pos:column="18"/></literal></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">msg<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">=<pos:position pos:line="7" pos:column="10"/></operator> <call><name pos:line="7" pos:column="11">strerror_r<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">statcode<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="32">buf<pos:position pos:line="7" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="37">bufsize<pos:position pos:line="7" pos:column="44"/></name></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="46"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">buf<pos:position pos:line="8" pos:column="12"/></name><index pos:line="8" pos:column="12">[<expr><literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal></expr>]<pos:position pos:line="8" pos:column="15"/></index></name> <operator pos:line="8" pos:column="16">==<pos:position pos:line="8" pos:column="18"/></operator> <literal type="char" pos:line="8" pos:column="19">'\0'<pos:position pos:line="8" pos:column="23"/></literal></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24"> <block pos:line="8" pos:column="25">{ <comment type="block" pos:line="8" pos:column="27">/* libc didn't use our buffer */</comment>
        <return pos:line="9" pos:column="9">return <expr><call><name pos:line="9" pos:column="16">stuffbuffer<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">buf<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="33">bufsize<pos:position pos:line="9" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="42">msg<pos:position pos:line="9" pos:column="45"/></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="47"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then>
    <else pos:line="11" pos:column="5">else <block pos:line="11" pos:column="10">{
        <return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">buf<pos:position pos:line="12" pos:column="19"/></name></expr>;<pos:position pos:line="12" pos:column="20"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></else></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

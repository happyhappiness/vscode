<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_269_httpd-2.0.44.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">dav_get_resource_state<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">request_rec<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">r<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">dav_resource<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">resource<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">dav_hooks_locks<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">hooks<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><call><name pos:line="3" pos:column="36">DAV_GET_HOOKS_LOCKS<pos:position pos:line="3" pos:column="55"/></name><argument_list pos:line="3" pos:column="55">(<argument><expr><name pos:line="3" pos:column="56">r<pos:position pos:line="3" pos:column="57"/></name></expr></argument>)<pos:position pos:line="3" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="59"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">resource<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">-&gt;<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="19">exists<pos:position pos:line="5" pos:column="25"/></name></name></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">DAV_RESOURCE_EXISTS<pos:position pos:line="6" pos:column="35"/></name></expr>;<pos:position pos:line="6" pos:column="36"/></return></block></then></if>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">hooks<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">!=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">NULL<pos:position pos:line="8" pos:column="22"/></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23"> <block pos:line="8" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">dav_error<pos:position pos:line="9" pos:column="18"/></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type><name pos:line="9" pos:column="20">err<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">dav_lockdb<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">lockdb<pos:position pos:line="10" pos:column="27"/></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">locks_present<pos:position pos:line="11" pos:column="26"/></name></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>

        <comment type="block" pos:line="13" pos:column="9">/*
        ** A locknull resource has the form:
        **
        **   known-dir "/" locknull-file
        **
        ** It would be nice to look into &lt;resource&gt; to verify this form,
        ** but it does not have enough information for us. Instead, we
        ** can look at the path_info. If the form does not match, then
        ** there is no way we could have a locknull resource -- it must
        ** be a plain, null resource.
        **
        ** Apache sets r-&gt;filename to known-dir/unknown-file and r-&gt;path_info
        ** to "" for the "proper" case. If anything is in path_info, then
        ** it can't be a locknull resource.
        **
        ** ### I bet this path_info hack doesn't work for repositories.
        ** ### Need input from repository implementors! What kind of
        ** ### restructure do we need? New provider APIs?
        */</comment>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">r<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">path_info<pos:position pos:line="32" pos:column="25"/></name></name> <operator pos:line="32" pos:column="26">!=<pos:position pos:line="32" pos:column="28"/></operator> <name pos:line="32" pos:column="29">NULL<pos:position pos:line="32" pos:column="33"/></name> <operator pos:line="32" pos:column="34">&amp;&amp;<pos:position pos:line="32" pos:column="44"/></operator> <operator pos:line="32" pos:column="37">*<pos:position pos:line="32" pos:column="38"/></operator><name><name pos:line="32" pos:column="38">r<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">-&gt;<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="41">path_info<pos:position pos:line="32" pos:column="50"/></name></name> <operator pos:line="32" pos:column="51">!=<pos:position pos:line="32" pos:column="53"/></operator> <literal type="char" pos:line="32" pos:column="54">'\0'<pos:position pos:line="32" pos:column="58"/></literal></expr>)<pos:position pos:line="32" pos:column="59"/></condition><then pos:line="32" pos:column="59"> <block pos:line="32" pos:column="60">{
            <return pos:line="33" pos:column="13">return <expr><name pos:line="33" pos:column="20">DAV_RESOURCE_NULL<pos:position pos:line="33" pos:column="37"/></name></expr>;<pos:position pos:line="33" pos:column="38"/></return>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
        
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">(<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">err<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <call pos:line="36" pos:column="20">(<modifier pos:line="36" pos:column="21">*<pos:position pos:line="36" pos:column="22"/></modifier><name><name pos:line="36" pos:column="22">hooks<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">open_lockdb<pos:position pos:line="36" pos:column="40"/></name></name>)<argument_list pos:line="36" pos:column="41">(<argument><expr><name pos:line="36" pos:column="42">r<pos:position pos:line="36" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="45">1<pos:position pos:line="36" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="48">1<pos:position pos:line="36" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="36" pos:column="51">&amp;<pos:position pos:line="36" pos:column="56"/></operator><name pos:line="36" pos:column="52">lockdb<pos:position pos:line="36" pos:column="58"/></name></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call><operator pos:line="36" pos:column="59">)<pos:position pos:line="36" pos:column="60"/></operator> <operator pos:line="36" pos:column="61">==<pos:position pos:line="36" pos:column="63"/></operator> <name pos:line="36" pos:column="64">NULL<pos:position pos:line="36" pos:column="68"/></name></expr>)<pos:position pos:line="36" pos:column="69"/></condition><then pos:line="36" pos:column="69"> <block pos:line="36" pos:column="70">{
            <comment type="block" pos:line="37" pos:column="13">/* note that we might see some expired locks... *shrug* */</comment>
            <expr_stmt><expr><name pos:line="38" pos:column="13">err<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <call pos:line="38" pos:column="19">(<modifier pos:line="38" pos:column="20">*<pos:position pos:line="38" pos:column="21"/></modifier><name><name pos:line="38" pos:column="21">hooks<pos:position pos:line="38" pos:column="26"/></name><operator pos:line="38" pos:column="26">-&gt;<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="28">has_locks<pos:position pos:line="38" pos:column="37"/></name></name>)<argument_list pos:line="38" pos:column="38">(<argument><expr><name pos:line="38" pos:column="39">lockdb<pos:position pos:line="38" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="47">resource<pos:position pos:line="38" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="57">&amp;<pos:position pos:line="38" pos:column="62"/></operator><name pos:line="38" pos:column="58">locks_present<pos:position pos:line="38" pos:column="71"/></name></expr></argument>)<pos:position pos:line="38" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call pos:line="39" pos:column="13">(<modifier pos:line="39" pos:column="14">*<pos:position pos:line="39" pos:column="15"/></modifier><name><name pos:line="39" pos:column="15">hooks<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">close_lockdb<pos:position pos:line="39" pos:column="34"/></name></name>)<argument_list pos:line="39" pos:column="35">(<argument><expr><name pos:line="39" pos:column="36">lockdb<pos:position pos:line="39" pos:column="42"/></name></expr></argument>)<pos:position pos:line="39" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>

        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">err<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">!=<pos:position pos:line="42" pos:column="19"/></operator> <name pos:line="42" pos:column="20">NULL<pos:position pos:line="42" pos:column="24"/></name></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25"> <block pos:line="42" pos:column="26">{
            <comment type="block" pos:line="43" pos:column="13">/* ### don't log an error. return err. add higher-level desc. */</comment>

            <expr_stmt><expr><call><name pos:line="45" pos:column="13">ap_log_rerror<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">(<argument><expr><name pos:line="45" pos:column="27">APLOG_MARK<pos:position pos:line="45" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="39">APLOG_ERR<pos:position pos:line="45" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="50">0<pos:position pos:line="45" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="53">r<pos:position pos:line="45" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="46" pos:column="27">"Failed to query lock-null status for %s"<pos:position pos:line="46" pos:column="68"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="47" pos:column="27">r<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">-&gt;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="30">filename<pos:position pos:line="47" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="40"/></expr_stmt>

            <return pos:line="49" pos:column="13">return <expr><name pos:line="49" pos:column="20">DAV_RESOURCE_ERROR<pos:position pos:line="49" pos:column="38"/></name></expr>;<pos:position pos:line="49" pos:column="39"/></return>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>

        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">locks_present<pos:position pos:line="52" pos:column="26"/></name></expr>)<pos:position pos:line="52" pos:column="27"/></condition><then pos:line="52" pos:column="27">
            <block type="pseudo"><return pos:line="53" pos:column="13">return <expr><name pos:line="53" pos:column="20">DAV_RESOURCE_LOCK_NULL<pos:position pos:line="53" pos:column="42"/></name></expr>;<pos:position pos:line="53" pos:column="43"/></return></block></then></if>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>

    <return pos:line="56" pos:column="5">return <expr><name pos:line="56" pos:column="12">DAV_RESOURCE_NULL<pos:position pos:line="56" pos:column="29"/></name></expr>;<pos:position pos:line="56" pos:column="30"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

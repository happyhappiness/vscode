<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1589_httpd-2.2.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">handle_set<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">include_ctx_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">ctx<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">ap_filter_t<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">f<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="2" pos:column="32">apr_bucket_brigade<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">bb<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">var<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><name pos:line="4" pos:column="17">NULL<pos:position pos:line="4" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">request_rec<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">r<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name><name pos:line="5" pos:column="22">f<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">-&gt;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="25">r<pos:position pos:line="5" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">request_rec<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">sub<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><name><name pos:line="6" pos:column="24">r<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">main<pos:position pos:line="6" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_pool_t<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">p<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name><name pos:line="7" pos:column="21">r<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">-&gt;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="24">pool<pos:position pos:line="7" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">ctx<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">argc<pos:position pos:line="9" pos:column="18"/></name></name> <operator pos:line="9" pos:column="19">&lt;<pos:position pos:line="9" pos:column="23"/></operator> <literal type="number" pos:line="9" pos:column="21">2<pos:position pos:line="9" pos:column="22"/></literal></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23"> <block pos:line="9" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">ap_log_rerror<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">APLOG_MARK<pos:position pos:line="10" pos:column="33"/></name></expr></argument>,
                      <argument><expr><ternary><condition><expr><operator pos:line="11" pos:column="23">(<pos:position pos:line="11" pos:column="24"/></operator><name><name pos:line="11" pos:column="24">ctx<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">flags<pos:position pos:line="11" pos:column="34"/></name></name> <operator pos:line="11" pos:column="35">&amp;<pos:position pos:line="11" pos:column="40"/></operator> <name pos:line="11" pos:column="37">SSI_FLAG_PRINTING<pos:position pos:line="11" pos:column="54"/></name><operator pos:line="11" pos:column="54">)<pos:position pos:line="11" pos:column="55"/></operator></expr>
                          ?<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28"> <expr><name pos:line="12" pos:column="29">APLOG_ERR<pos:position pos:line="12" pos:column="38"/></name></expr> <pos:position pos:line="12" pos:column="39"/></then><else pos:line="12" pos:column="39">: <expr><name pos:line="12" pos:column="41">APLOG_WARNING<pos:position pos:line="12" pos:column="54"/></name></expr></else></ternary></expr></argument>,
                      <argument><expr><literal type="number" pos:line="13" pos:column="23">0<pos:position pos:line="13" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="26">r<pos:position pos:line="13" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="29">"missing argument for set element in %s"<pos:position pos:line="13" pos:column="69"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="14" pos:column="23">r<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">filename<pos:position pos:line="14" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><operator pos:line="17" pos:column="10">(<pos:position pos:line="17" pos:column="11"/></operator><name><name pos:line="17" pos:column="11">ctx<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">flags<pos:position pos:line="17" pos:column="21"/></name></name> <operator pos:line="17" pos:column="22">&amp;<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="24">SSI_FLAG_PRINTING<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">)<pos:position pos:line="17" pos:column="42"/></operator></expr>)<pos:position pos:line="17" pos:column="43"/></condition><then pos:line="17" pos:column="43"> <block pos:line="17" pos:column="44">{
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">APR_SUCCESS<pos:position pos:line="18" pos:column="27"/></name></expr>;<pos:position pos:line="18" pos:column="28"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">ctx<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">argc<pos:position pos:line="21" pos:column="18"/></name></name> <operator pos:line="21" pos:column="19">&lt;<pos:position pos:line="21" pos:column="23"/></operator> <literal type="number" pos:line="21" pos:column="21">2<pos:position pos:line="21" pos:column="22"/></literal></expr>)<pos:position pos:line="21" pos:column="23"/></condition><then pos:line="21" pos:column="23"> <block pos:line="21" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">SSI_CREATE_ERROR_BUCKET<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">ctx<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">f<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="41">bb<pos:position pos:line="22" pos:column="43"/></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">APR_SUCCESS<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="26" pos:column="5">/* we need to use the 'main' request pool to set notes as that is
     * a notes lifetime
     */</comment>
    <while pos:line="29" pos:column="5">while <condition pos:line="29" pos:column="11">(<expr><name pos:line="29" pos:column="12">sub<pos:position pos:line="29" pos:column="15"/></name></expr>)<pos:position pos:line="29" pos:column="16"/></condition> <block pos:line="29" pos:column="17">{
        <expr_stmt><expr><name pos:line="30" pos:column="9">p<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <name><name pos:line="30" pos:column="13">sub<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">pool<pos:position pos:line="30" pos:column="22"/></name></name></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="31" pos:column="9">sub<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <name><name pos:line="31" pos:column="15">sub<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">main<pos:position pos:line="31" pos:column="24"/></name></name></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></while>

    <while pos:line="34" pos:column="5">while <condition pos:line="34" pos:column="11">(<expr><literal type="number" pos:line="34" pos:column="12">1<pos:position pos:line="34" pos:column="13"/></literal></expr>)<pos:position pos:line="34" pos:column="14"/></condition> <block pos:line="34" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="35" pos:column="9">char<pos:position pos:line="35" pos:column="13"/></name> <modifier pos:line="35" pos:column="14">*<pos:position pos:line="35" pos:column="15"/></modifier></type><name pos:line="35" pos:column="15">tag<pos:position pos:line="35" pos:column="18"/></name> <init pos:line="35" pos:column="19">= <expr><name pos:line="35" pos:column="21">NULL<pos:position pos:line="35" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="35" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">char<pos:position pos:line="36" pos:column="13"/></name> <modifier pos:line="36" pos:column="14">*<pos:position pos:line="36" pos:column="15"/></modifier></type><name pos:line="36" pos:column="15">tag_val<pos:position pos:line="36" pos:column="22"/></name> <init pos:line="36" pos:column="23">= <expr><name pos:line="36" pos:column="25">NULL<pos:position pos:line="36" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="36" pos:column="30"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="38" pos:column="9">ap_ssi_get_tag_and_value<pos:position pos:line="38" pos:column="33"/></name><argument_list pos:line="38" pos:column="33">(<argument><expr><name pos:line="38" pos:column="34">ctx<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="39">&amp;<pos:position pos:line="38" pos:column="44"/></operator><name pos:line="38" pos:column="40">tag<pos:position pos:line="38" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="45">&amp;<pos:position pos:line="38" pos:column="50"/></operator><name pos:line="38" pos:column="46">tag_val<pos:position pos:line="38" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="55">SSI_VALUE_DECODED<pos:position pos:line="38" pos:column="72"/></name></expr></argument>)<pos:position pos:line="38" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="74"/></expr_stmt>

        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">tag<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">||<pos:position pos:line="40" pos:column="20"/></operator> <operator pos:line="40" pos:column="21">!<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">tag_val<pos:position pos:line="40" pos:column="29"/></name></expr>)<pos:position pos:line="40" pos:column="30"/></condition><then pos:line="40" pos:column="30"> <block pos:line="40" pos:column="31">{
            <break pos:line="41" pos:column="13">break;<pos:position pos:line="41" pos:column="19"/></break>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>

        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><call><name pos:line="44" pos:column="14">strcmp<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><name pos:line="44" pos:column="21">tag<pos:position pos:line="44" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="26">"var"<pos:position pos:line="44" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="33"/></condition><then pos:line="44" pos:column="33"> <block pos:line="44" pos:column="34">{
            <expr_stmt><expr><name pos:line="45" pos:column="13">var<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <call><name pos:line="45" pos:column="19">ap_ssi_parse_string<pos:position pos:line="45" pos:column="38"/></name><argument_list pos:line="45" pos:column="38">(<argument><expr><name pos:line="45" pos:column="39">ctx<pos:position pos:line="45" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="44">tag_val<pos:position pos:line="45" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="53">NULL<pos:position pos:line="45" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="59">0<pos:position pos:line="45" pos:column="60"/></literal></expr></argument>,
                                      <argument><expr><name pos:line="46" pos:column="39">SSI_EXPAND_DROP_NAME<pos:position pos:line="46" pos:column="59"/></name></expr></argument>)<pos:position pos:line="46" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="47" pos:column="10"/></block></then>
        <elseif pos:line="48" pos:column="9">else <if pos:line="48" pos:column="14">if <condition pos:line="48" pos:column="17">(<expr><operator pos:line="48" pos:column="18">!<pos:position pos:line="48" pos:column="19"/></operator><call><name pos:line="48" pos:column="19">strcmp<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">tag<pos:position pos:line="48" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="31">"value"<pos:position pos:line="48" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="40"/></condition><then pos:line="48" pos:column="40"> <block pos:line="48" pos:column="41">{
            <decl_stmt><decl><type><name pos:line="49" pos:column="13">char<pos:position pos:line="49" pos:column="17"/></name> <modifier pos:line="49" pos:column="18">*<pos:position pos:line="49" pos:column="19"/></modifier></type><name pos:line="49" pos:column="19">parsed_string<pos:position pos:line="49" pos:column="32"/></name></decl>;<pos:position pos:line="49" pos:column="33"/></decl_stmt>

            <if pos:line="51" pos:column="13">if <condition pos:line="51" pos:column="16">(<expr><operator pos:line="51" pos:column="17">!<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="18">var<pos:position pos:line="51" pos:column="21"/></name></expr>)<pos:position pos:line="51" pos:column="22"/></condition><then pos:line="51" pos:column="22"> <block pos:line="51" pos:column="23">{
                <expr_stmt><expr><call><name pos:line="52" pos:column="17">ap_log_rerror<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">(<argument><expr><name pos:line="52" pos:column="31">APLOG_MARK<pos:position pos:line="52" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="43">APLOG_ERR<pos:position pos:line="52" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="54">0<pos:position pos:line="52" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="57">r<pos:position pos:line="52" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="60">"variable must "<pos:position pos:line="52" pos:column="76"/></literal>
                              <literal type="string" pos:line="53" pos:column="31">"precede value in set directive in %s"<pos:position pos:line="53" pos:column="69"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="54" pos:column="31">r<pos:position pos:line="54" pos:column="32"/></name><operator pos:line="54" pos:column="32">-&gt;<pos:position pos:line="54" pos:column="37"/></operator><name pos:line="54" pos:column="34">filename<pos:position pos:line="54" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="55" pos:column="17">SSI_CREATE_ERROR_BUCKET<pos:position pos:line="55" pos:column="40"/></name><argument_list pos:line="55" pos:column="40">(<argument><expr><name pos:line="55" pos:column="41">ctx<pos:position pos:line="55" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="46">f<pos:position pos:line="55" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="49">bb<pos:position pos:line="55" pos:column="51"/></name></expr></argument>)<pos:position pos:line="55" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="53"/></expr_stmt>
                <break pos:line="56" pos:column="17">break;<pos:position pos:line="56" pos:column="23"/></break>
            }<pos:position pos:line="57" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="59" pos:column="13">parsed_string<pos:position pos:line="59" pos:column="26"/></name> <operator pos:line="59" pos:column="27">=<pos:position pos:line="59" pos:column="28"/></operator> <call><name pos:line="59" pos:column="29">ap_ssi_parse_string<pos:position pos:line="59" pos:column="48"/></name><argument_list pos:line="59" pos:column="48">(<argument><expr><name pos:line="59" pos:column="49">ctx<pos:position pos:line="59" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="54">tag_val<pos:position pos:line="59" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="63">NULL<pos:position pos:line="59" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="69">0<pos:position pos:line="59" pos:column="70"/></literal></expr></argument>,
                                                <argument><expr><name pos:line="60" pos:column="49">SSI_EXPAND_DROP_NAME<pos:position pos:line="60" pos:column="69"/></name></expr></argument>)<pos:position pos:line="60" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">apr_table_setn<pos:position pos:line="61" pos:column="27"/></name><argument_list pos:line="61" pos:column="27">(<argument><expr><name><name pos:line="61" pos:column="28">r<pos:position pos:line="61" pos:column="29"/></name><operator pos:line="61" pos:column="29">-&gt;<pos:position pos:line="61" pos:column="34"/></operator><name pos:line="61" pos:column="31">subprocess_env<pos:position pos:line="61" pos:column="45"/></name></name></expr></argument>, <argument><expr><call><name pos:line="61" pos:column="47">apr_pstrdup<pos:position pos:line="61" pos:column="58"/></name><argument_list pos:line="61" pos:column="58">(<argument><expr><name pos:line="61" pos:column="59">p<pos:position pos:line="61" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="62">var<pos:position pos:line="61" pos:column="65"/></name></expr></argument>)<pos:position pos:line="61" pos:column="66"/></argument_list></call></expr></argument>,
                           <argument><expr><call><name pos:line="62" pos:column="28">apr_pstrdup<pos:position pos:line="62" pos:column="39"/></name><argument_list pos:line="62" pos:column="39">(<argument><expr><name pos:line="62" pos:column="40">p<pos:position pos:line="62" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="43">parsed_string<pos:position pos:line="62" pos:column="56"/></name></expr></argument>)<pos:position pos:line="62" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if></elseif>
        <else pos:line="64" pos:column="9">else <block pos:line="64" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">ap_log_rerror<pos:position pos:line="65" pos:column="26"/></name><argument_list pos:line="65" pos:column="26">(<argument><expr><name pos:line="65" pos:column="27">APLOG_MARK<pos:position pos:line="65" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="39">APLOG_ERR<pos:position pos:line="65" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="50">0<pos:position pos:line="65" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="53">r<pos:position pos:line="65" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="56">"Invalid tag for set "<pos:position pos:line="65" pos:column="78"/></literal>
                          <literal type="string" pos:line="66" pos:column="27">"directive in %s"<pos:position pos:line="66" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="46">r<pos:position pos:line="66" pos:column="47"/></name><operator pos:line="66" pos:column="47">-&gt;<pos:position pos:line="66" pos:column="52"/></operator><name pos:line="66" pos:column="49">filename<pos:position pos:line="66" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="67" pos:column="13">SSI_CREATE_ERROR_BUCKET<pos:position pos:line="67" pos:column="36"/></name><argument_list pos:line="67" pos:column="36">(<argument><expr><name pos:line="67" pos:column="37">ctx<pos:position pos:line="67" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="42">f<pos:position pos:line="67" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="45">bb<pos:position pos:line="67" pos:column="47"/></name></expr></argument>)<pos:position pos:line="67" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="49"/></expr_stmt>
            <break pos:line="68" pos:column="13">break;<pos:position pos:line="68" pos:column="19"/></break>
        }<pos:position pos:line="69" pos:column="10"/></block></else></if>
    }<pos:position pos:line="70" pos:column="6"/></block></while>

    <return pos:line="72" pos:column="5">return <expr><name pos:line="72" pos:column="12">APR_SUCCESS<pos:position pos:line="72" pos:column="23"/></name></expr>;<pos:position pos:line="72" pos:column="24"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

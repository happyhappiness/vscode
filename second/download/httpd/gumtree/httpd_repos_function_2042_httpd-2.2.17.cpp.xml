<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2042_httpd-2.2.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_user_access<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">request_rec<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">r<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">authz_user_config_rec<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">conf<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><call><name pos:line="3" pos:column="35">ap_get_module_config<pos:position pos:line="3" pos:column="55"/></name><argument_list pos:line="3" pos:column="55">(<argument><expr><name><name pos:line="3" pos:column="56">r<pos:position pos:line="3" pos:column="57"/></name><operator pos:line="3" pos:column="57">-&gt;<pos:position pos:line="3" pos:column="62"/></operator><name pos:line="3" pos:column="59">per_dir_config<pos:position pos:line="3" pos:column="73"/></name></name></expr></argument>,
                                                       <argument><expr><operator pos:line="4" pos:column="56">&amp;<pos:position pos:line="4" pos:column="61"/></operator><name pos:line="4" pos:column="57">authz_user_module<pos:position pos:line="4" pos:column="74"/></name></expr></argument>)<pos:position pos:line="4" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="76"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">user<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name><name pos:line="5" pos:column="18">r<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">-&gt;<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="21">user<pos:position pos:line="5" pos:column="25"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">m<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><name><name pos:line="6" pos:column="13">r<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">method_number<pos:position pos:line="6" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">required_user<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><literal type="number" pos:line="7" pos:column="25">0<pos:position pos:line="7" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">register<pos:position pos:line="8" pos:column="13"/></specifier> <name pos:line="8" pos:column="14">int<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">x<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">t<pos:position pos:line="9" pos:column="18"/></name></decl>, <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="21">w<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">apr_array_header_t<pos:position pos:line="10" pos:column="29"/></name> <modifier pos:line="10" pos:column="30">*<pos:position pos:line="10" pos:column="31"/></modifier></type><name pos:line="10" pos:column="31">reqs_arr<pos:position pos:line="10" pos:column="39"/></name> <init pos:line="10" pos:column="40">= <expr><call><name pos:line="10" pos:column="42">ap_requires<pos:position pos:line="10" pos:column="53"/></name><argument_list pos:line="10" pos:column="53">(<argument><expr><name pos:line="10" pos:column="54">r<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">require_line<pos:position pos:line="11" pos:column="17"/></name> <modifier pos:line="11" pos:column="18">*<pos:position pos:line="11" pos:column="19"/></modifier></type><name pos:line="11" pos:column="19">reqs<pos:position pos:line="11" pos:column="23"/></name></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* BUG FIX: tadc, 11-Nov-1995.  If there is no "requires" directive,
     * then any user will do.
     */</comment>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">reqs_arr<pos:position pos:line="16" pos:column="18"/></name></expr>)<pos:position pos:line="16" pos:column="19"/></condition><then pos:line="16" pos:column="19"> <block pos:line="16" pos:column="20">{
        <return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">DECLINED<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="19" pos:column="5">reqs<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">require_line<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">*<pos:position pos:line="19" pos:column="27"/></operator><operator pos:line="19" pos:column="27">)<pos:position pos:line="19" pos:column="28"/></operator><name><name pos:line="19" pos:column="28">reqs_arr<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">-&gt;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="38">elts<pos:position pos:line="19" pos:column="42"/></name></name></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>

    <for pos:line="21" pos:column="5">for <control pos:line="21" pos:column="9">(<init><expr><name pos:line="21" pos:column="10">x<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <literal type="number" pos:line="21" pos:column="14">0<pos:position pos:line="21" pos:column="15"/></literal></expr>;<pos:position pos:line="21" pos:column="16"/></init> <condition><expr><name pos:line="21" pos:column="17">x<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">&lt;<pos:position pos:line="21" pos:column="23"/></operator> <name><name pos:line="21" pos:column="21">reqs_arr<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">nelts<pos:position pos:line="21" pos:column="36"/></name></name></expr>;<pos:position pos:line="21" pos:column="37"/></condition> <incr><expr><name pos:line="21" pos:column="38">x<pos:position pos:line="21" pos:column="39"/></name><operator pos:line="21" pos:column="39">++<pos:position pos:line="21" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="42"/></control> <block pos:line="21" pos:column="43">{

        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><name><name pos:line="23" pos:column="15">reqs<pos:position pos:line="23" pos:column="19"/></name><index pos:line="23" pos:column="19">[<expr><name pos:line="23" pos:column="20">x<pos:position pos:line="23" pos:column="21"/></name></expr>]<pos:position pos:line="23" pos:column="22"/></index></name><operator pos:line="23" pos:column="22">.<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">method_mask<pos:position pos:line="23" pos:column="34"/></name> <operator pos:line="23" pos:column="35">&amp;<pos:position pos:line="23" pos:column="40"/></operator> <operator pos:line="23" pos:column="37">(<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="38">AP_METHOD_BIT<pos:position pos:line="23" pos:column="51"/></name> <operator pos:line="23" pos:column="52">&lt;&lt;<pos:position pos:line="23" pos:column="60"/></operator> <name pos:line="23" pos:column="55">m<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">)<pos:position pos:line="23" pos:column="57"/></operator><operator pos:line="23" pos:column="57">)<pos:position pos:line="23" pos:column="58"/></operator></expr>)<pos:position pos:line="23" pos:column="59"/></condition><then pos:line="23" pos:column="59"> <block pos:line="23" pos:column="60">{
            <continue pos:line="24" pos:column="13">continue;<pos:position pos:line="24" pos:column="22"/></continue>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="27" pos:column="9">t<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <name><name pos:line="27" pos:column="13">reqs<pos:position pos:line="27" pos:column="17"/></name><index pos:line="27" pos:column="17">[<expr><name pos:line="27" pos:column="18">x<pos:position pos:line="27" pos:column="19"/></name></expr>]<pos:position pos:line="27" pos:column="20"/></index></name><operator pos:line="27" pos:column="20">.<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="21">requirement<pos:position pos:line="27" pos:column="32"/></name></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">w<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <call><name pos:line="28" pos:column="13">ap_getword_white<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name><name pos:line="28" pos:column="30">r<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">-&gt;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="33">pool<pos:position pos:line="28" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="39">&amp;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="40">t<pos:position pos:line="28" pos:column="41"/></name></expr></argument>)<pos:position pos:line="28" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><call><name pos:line="29" pos:column="14">strcasecmp<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">w<pos:position pos:line="29" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="28">"valid-user"<pos:position pos:line="29" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="42"/></condition><then pos:line="29" pos:column="42"> <block pos:line="29" pos:column="43">{
            <return pos:line="30" pos:column="13">return <expr><name pos:line="30" pos:column="20">OK<pos:position pos:line="30" pos:column="22"/></name></expr>;<pos:position pos:line="30" pos:column="23"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><call><name pos:line="32" pos:column="14">strcasecmp<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">w<pos:position pos:line="32" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="28">"user"<pos:position pos:line="32" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="36"/></condition><then pos:line="32" pos:column="36"> <block pos:line="32" pos:column="37">{
            <comment type="block" pos:line="33" pos:column="13">/* And note that there are applicable requirements
             * which we consider ourselves the owner of.
             */</comment>
            <expr_stmt><expr><name pos:line="36" pos:column="13">required_user<pos:position pos:line="36" pos:column="26"/></name> <operator pos:line="36" pos:column="27">=<pos:position pos:line="36" pos:column="28"/></operator> <literal type="number" pos:line="36" pos:column="29">1<pos:position pos:line="36" pos:column="30"/></literal></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
            <while pos:line="37" pos:column="13">while <condition pos:line="37" pos:column="19">(<expr><name><name pos:line="37" pos:column="20">t<pos:position pos:line="37" pos:column="21"/></name><index pos:line="37" pos:column="21">[<expr><literal type="number" pos:line="37" pos:column="22">0<pos:position pos:line="37" pos:column="23"/></literal></expr>]<pos:position pos:line="37" pos:column="24"/></index></name></expr>)<pos:position pos:line="37" pos:column="25"/></condition> <block pos:line="37" pos:column="26">{
                <expr_stmt><expr><name pos:line="38" pos:column="17">w<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <call><name pos:line="38" pos:column="21">ap_getword_conf<pos:position pos:line="38" pos:column="36"/></name><argument_list pos:line="38" pos:column="36">(<argument><expr><name><name pos:line="38" pos:column="37">r<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">-&gt;<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="40">pool<pos:position pos:line="38" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="46">&amp;<pos:position pos:line="38" pos:column="51"/></operator><name pos:line="38" pos:column="47">t<pos:position pos:line="38" pos:column="48"/></name></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="50"/></expr_stmt>
                <if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><operator pos:line="39" pos:column="21">!<pos:position pos:line="39" pos:column="22"/></operator><call><name pos:line="39" pos:column="22">strcmp<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><name pos:line="39" pos:column="29">user<pos:position pos:line="39" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="35">w<pos:position pos:line="39" pos:column="36"/></name></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="38"/></condition><then pos:line="39" pos:column="38"> <block pos:line="39" pos:column="39">{
                    <return pos:line="40" pos:column="21">return <expr><name pos:line="40" pos:column="28">OK<pos:position pos:line="40" pos:column="30"/></name></expr>;<pos:position pos:line="40" pos:column="31"/></return>
                }<pos:position pos:line="41" pos:column="18"/></block></then></if>
            }<pos:position pos:line="42" pos:column="14"/></block></while>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>
    }<pos:position pos:line="44" pos:column="6"/></block></for>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">!<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">required_user<pos:position pos:line="46" pos:column="23"/></name></expr>)<pos:position pos:line="46" pos:column="24"/></condition><then pos:line="46" pos:column="24"> <block pos:line="46" pos:column="25">{
        <comment type="block" pos:line="47" pos:column="9">/* no applicable requirements */</comment>
        <return pos:line="48" pos:column="9">return <expr><name pos:line="48" pos:column="16">DECLINED<pos:position pos:line="48" pos:column="24"/></name></expr>;<pos:position pos:line="48" pos:column="25"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><operator pos:line="51" pos:column="9">!<pos:position pos:line="51" pos:column="10"/></operator><name><name pos:line="51" pos:column="10">conf<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">-&gt;<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="16">authoritative<pos:position pos:line="51" pos:column="29"/></name></name></expr>)<pos:position pos:line="51" pos:column="30"/></condition><then pos:line="51" pos:column="30"> <block pos:line="51" pos:column="31">{
        <return pos:line="52" pos:column="9">return <expr><name pos:line="52" pos:column="16">DECLINED<pos:position pos:line="52" pos:column="24"/></name></expr>;<pos:position pos:line="52" pos:column="25"/></return>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="55" pos:column="5">ap_log_rerror<pos:position pos:line="55" pos:column="18"/></name><argument_list pos:line="55" pos:column="18">(<argument><expr><name pos:line="55" pos:column="19">APLOG_MARK<pos:position pos:line="55" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="31">APLOG_ERR<pos:position pos:line="55" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="42">0<pos:position pos:line="55" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="45">r<pos:position pos:line="55" pos:column="46"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="56" pos:column="19">"access to %s failed, reason: user '%s' does not meet "<pos:position pos:line="56" pos:column="74"/></literal>
                  <literal type="string" pos:line="57" pos:column="19">"'require'ments for user/valid-user to be allowed access"<pos:position pos:line="57" pos:column="76"/></literal></expr></argument>,
                  <argument><expr><name><name pos:line="58" pos:column="19">r<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">-&gt;<pos:position pos:line="58" pos:column="25"/></operator><name pos:line="58" pos:column="22">uri<pos:position pos:line="58" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="27">user<pos:position pos:line="58" pos:column="31"/></name></expr></argument>)<pos:position pos:line="58" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="60" pos:column="5">ap_note_auth_failure<pos:position pos:line="60" pos:column="25"/></name><argument_list pos:line="60" pos:column="25">(<argument><expr><name pos:line="60" pos:column="26">r<pos:position pos:line="60" pos:column="27"/></name></expr></argument>)<pos:position pos:line="60" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="29"/></expr_stmt>
    <return pos:line="61" pos:column="5">return <expr><name pos:line="61" pos:column="12">HTTP_UNAUTHORIZED<pos:position pos:line="61" pos:column="29"/></name></expr>;<pos:position pos:line="61" pos:column="30"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

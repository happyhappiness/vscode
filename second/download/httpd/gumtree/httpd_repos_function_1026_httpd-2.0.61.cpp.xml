<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1026_httpd-2.0.61.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_cookie<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">request_rec<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">r<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">s<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">var<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">val<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">domain<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">expires<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">path<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">tok_cntx<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">cookie<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">s<pos:position pos:line="12" pos:column="10"/></name></expr>)<pos:position pos:line="12" pos:column="11"/></condition><then pos:line="12" pos:column="11"> <block pos:line="12" pos:column="12">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">var<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <call><name pos:line="13" pos:column="15">apr_strtok<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">s<pos:position pos:line="13" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="29">":"<pos:position pos:line="13" pos:column="32"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="34">&amp;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="35">tok_cntx<pos:position pos:line="13" pos:column="43"/></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">val<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">apr_strtok<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">NULL<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="32">":"<pos:position pos:line="14" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="37">&amp;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="38">tok_cntx<pos:position pos:line="14" pos:column="46"/></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">domain<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">apr_strtok<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">NULL<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="35">":"<pos:position pos:line="15" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="40">&amp;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="41">tok_cntx<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>
        <comment type="block" format="doxygen" pos:line="16" pos:column="9">/** the line below won't hit the token ever **/</comment>
        <expr_stmt><expr><name pos:line="17" pos:column="9">expires<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <call><name pos:line="17" pos:column="19">apr_strtok<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">NULL<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="36">":"<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="41">&amp;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="42">tok_cntx<pos:position pos:line="17" pos:column="50"/></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">expires<pos:position pos:line="18" pos:column="20"/></name></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21"> <block pos:line="18" pos:column="22">{
            <expr_stmt><expr><name pos:line="19" pos:column="13">path<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <call><name pos:line="19" pos:column="20">apr_strtok<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">NULL<pos:position pos:line="19" pos:column="35"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="19" pos:column="36">":"<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="41">&amp;<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="42">tok_cntx<pos:position pos:line="19" pos:column="50"/></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then>
        <else pos:line="21" pos:column="9">else <block pos:line="21" pos:column="14">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">path<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="20">NULL<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></else></if>

        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">var<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">&amp;&amp;<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="20">val<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">&amp;&amp;<pos:position pos:line="25" pos:column="34"/></operator> <name pos:line="25" pos:column="27">domain<pos:position pos:line="25" pos:column="33"/></name></expr>)<pos:position pos:line="25" pos:column="34"/></condition><then pos:line="25" pos:column="34"> <block pos:line="25" pos:column="35">{
            <comment type="block" pos:line="26" pos:column="13">/* FIX: use cached time similar to how logging does it */</comment>
            <decl_stmt><decl><type><name pos:line="27" pos:column="13">request_rec<pos:position pos:line="27" pos:column="24"/></name> <modifier pos:line="27" pos:column="25">*<pos:position pos:line="27" pos:column="26"/></modifier></type><name pos:line="27" pos:column="26">rmain<pos:position pos:line="27" pos:column="31"/></name> <init pos:line="27" pos:column="32">= <expr><name pos:line="27" pos:column="34">r<pos:position pos:line="27" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="36"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="28" pos:column="13">char<pos:position pos:line="28" pos:column="17"/></name> <modifier pos:line="28" pos:column="18">*<pos:position pos:line="28" pos:column="19"/></modifier></type><name pos:line="28" pos:column="19">notename<pos:position pos:line="28" pos:column="27"/></name></decl>;<pos:position pos:line="28" pos:column="28"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="29" pos:column="13">void<pos:position pos:line="29" pos:column="17"/></name> <modifier pos:line="29" pos:column="18">*<pos:position pos:line="29" pos:column="19"/></modifier></type><name pos:line="29" pos:column="19">data<pos:position pos:line="29" pos:column="23"/></name></decl>;<pos:position pos:line="29" pos:column="24"/></decl_stmt>
            <while pos:line="30" pos:column="13">while <condition pos:line="30" pos:column="19">(<expr><name><name pos:line="30" pos:column="20">rmain<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">main<pos:position pos:line="30" pos:column="31"/></name></name></expr>)<pos:position pos:line="30" pos:column="32"/></condition> <block pos:line="30" pos:column="33">{
                <expr_stmt><expr><name pos:line="31" pos:column="17">rmain<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <name><name pos:line="31" pos:column="25">rmain<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">-&gt;<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="32">main<pos:position pos:line="31" pos:column="36"/></name></name></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="32" pos:column="14"/></block></while>

            <expr_stmt><expr><name pos:line="34" pos:column="13">notename<pos:position pos:line="34" pos:column="21"/></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <call><name pos:line="34" pos:column="24">apr_pstrcat<pos:position pos:line="34" pos:column="35"/></name><argument_list pos:line="34" pos:column="35">(<argument><expr><name><name pos:line="34" pos:column="36">rmain<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">-&gt;<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="43">pool<pos:position pos:line="34" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="49">var<pos:position pos:line="34" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="54">"_rewrite"<pos:position pos:line="34" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="66">NULL<pos:position pos:line="34" pos:column="70"/></name></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">apr_pool_userdata_get<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><operator pos:line="35" pos:column="35">&amp;<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="36">data<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="42">notename<pos:position pos:line="35" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="52">rmain<pos:position pos:line="35" pos:column="57"/></name><operator pos:line="35" pos:column="57">-&gt;<pos:position pos:line="35" pos:column="62"/></operator><name pos:line="35" pos:column="59">pool<pos:position pos:line="35" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt>
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name pos:line="36" pos:column="17">data<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">==<pos:position pos:line="36" pos:column="24"/></operator> <name pos:line="36" pos:column="25">NULL<pos:position pos:line="36" pos:column="29"/></name></expr>)<pos:position pos:line="36" pos:column="30"/></condition><then pos:line="36" pos:column="30"> <block pos:line="36" pos:column="31">{
                <expr_stmt><expr><name pos:line="37" pos:column="17">cookie<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <call><name pos:line="37" pos:column="26">apr_pstrcat<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><name><name pos:line="37" pos:column="38">rmain<pos:position pos:line="37" pos:column="43"/></name><operator pos:line="37" pos:column="43">-&gt;<pos:position pos:line="37" pos:column="48"/></operator><name pos:line="37" pos:column="45">pool<pos:position pos:line="37" pos:column="49"/></name></name></expr></argument>,
                                     <argument><expr><name pos:line="38" pos:column="38">var<pos:position pos:line="38" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="43">"="<pos:position pos:line="38" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="48">val<pos:position pos:line="38" pos:column="51"/></name></expr></argument>,
                                     <argument><expr><literal type="string" pos:line="39" pos:column="38">"; path="<pos:position pos:line="39" pos:column="47"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="39" pos:column="49">(<pos:position pos:line="39" pos:column="50"/></operator><name pos:line="39" pos:column="50">path<pos:position pos:line="39" pos:column="54"/></name><operator pos:line="39" pos:column="54">)<pos:position pos:line="39" pos:column="55"/></operator></expr>?<pos:position pos:line="39" pos:column="56"/></condition><then pos:line="39" pos:column="56"> <expr><name pos:line="39" pos:column="57">path<pos:position pos:line="39" pos:column="61"/></name></expr> <pos:position pos:line="39" pos:column="62"/></then><else pos:line="39" pos:column="62">: <expr><literal type="string" pos:line="39" pos:column="64">"/"<pos:position pos:line="39" pos:column="67"/></literal></expr></else></ternary></expr></argument>,
                                     <argument><expr><literal type="string" pos:line="40" pos:column="38">"; domain="<pos:position pos:line="40" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="51">domain<pos:position pos:line="40" pos:column="57"/></name></expr></argument>,
                                     <argument><expr><ternary><condition><expr><operator pos:line="41" pos:column="38">(<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="39">expires<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">)<pos:position pos:line="41" pos:column="47"/></operator></expr>?<pos:position pos:line="41" pos:column="48"/></condition><then pos:line="41" pos:column="48"> <expr><literal type="string" pos:line="41" pos:column="49">"; expires="<pos:position pos:line="41" pos:column="61"/></literal></expr> <pos:position pos:line="41" pos:column="62"/></then><else pos:line="41" pos:column="62">: <expr><name pos:line="41" pos:column="64">NULL<pos:position pos:line="41" pos:column="68"/></name></expr></else></ternary></expr></argument>,
                                     <argument><expr><ternary><condition><expr><operator pos:line="42" pos:column="38">(<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="39">expires<pos:position pos:line="42" pos:column="46"/></name><operator pos:line="42" pos:column="46">)<pos:position pos:line="42" pos:column="47"/></operator></expr>?<pos:position pos:line="42" pos:column="48"/></condition><then pos:line="42" pos:column="48">
                                     <expr><call><name pos:line="43" pos:column="38">ap_ht_time<pos:position pos:line="43" pos:column="48"/></name><argument_list pos:line="43" pos:column="48">(<argument><expr><name><name pos:line="43" pos:column="49">r<pos:position pos:line="43" pos:column="50"/></name><operator pos:line="43" pos:column="50">-&gt;<pos:position pos:line="43" pos:column="55"/></operator><name pos:line="43" pos:column="52">pool<pos:position pos:line="43" pos:column="56"/></name></name></expr></argument>,
                                                <argument><expr><name><name pos:line="44" pos:column="49">r<pos:position pos:line="44" pos:column="50"/></name><operator pos:line="44" pos:column="50">-&gt;<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="52">request_time<pos:position pos:line="44" pos:column="64"/></name></name> <operator pos:line="44" pos:column="65">+<pos:position pos:line="44" pos:column="66"/></operator>
                                                <call><name pos:line="45" pos:column="49">apr_time_from_sec<pos:position pos:line="45" pos:column="66"/></name><argument_list pos:line="45" pos:column="66">(<argument><expr><operator pos:line="45" pos:column="67">(<pos:position pos:line="45" pos:column="68"/></operator><literal type="number" pos:line="45" pos:column="68">60<pos:position pos:line="45" pos:column="70"/></literal> <operator pos:line="45" pos:column="71">*<pos:position pos:line="45" pos:column="72"/></operator>
                                                               <call><name pos:line="46" pos:column="64">atol<pos:position pos:line="46" pos:column="68"/></name><argument_list pos:line="46" pos:column="68">(<argument><expr><name pos:line="46" pos:column="69">expires<pos:position pos:line="46" pos:column="76"/></name></expr></argument>)<pos:position pos:line="46" pos:column="77"/></argument_list></call><operator pos:line="46" pos:column="77">)<pos:position pos:line="46" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="46" pos:column="79"/></argument_list></call></expr></argument>,
                                                <argument><expr><literal type="string" pos:line="47" pos:column="49">"%a, %d-%b-%Y %T GMT"<pos:position pos:line="47" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="72">1<pos:position pos:line="47" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="74"/></argument_list></call></expr>
                                              <pos:position pos:line="48" pos:column="47"/></then><else pos:line="48" pos:column="47">: <expr><name pos:line="48" pos:column="49">NULL<pos:position pos:line="48" pos:column="53"/></name></expr></else></ternary></expr></argument>,
                                     <argument><expr><name pos:line="49" pos:column="38">NULL<pos:position pos:line="49" pos:column="42"/></name></expr></argument>)<pos:position pos:line="49" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="44"/></expr_stmt>
                <comment type="block" pos:line="50" pos:column="17">/*
                 * XXX: should we add it to err_headers_out as well ?
                 * if we do we need to be careful that only ONE gets sent out
                 */</comment>
                <expr_stmt><expr><call><name pos:line="54" pos:column="17">apr_table_add<pos:position pos:line="54" pos:column="30"/></name><argument_list pos:line="54" pos:column="30">(<argument><expr><name><name pos:line="54" pos:column="31">rmain<pos:position pos:line="54" pos:column="36"/></name><operator pos:line="54" pos:column="36">-&gt;<pos:position pos:line="54" pos:column="41"/></operator><name pos:line="54" pos:column="38">err_headers_out<pos:position pos:line="54" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="55">"Set-Cookie"<pos:position pos:line="54" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="69">cookie<pos:position pos:line="54" pos:column="75"/></name></expr></argument>)<pos:position pos:line="54" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="77"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="55" pos:column="17">apr_pool_userdata_set<pos:position pos:line="55" pos:column="38"/></name><argument_list pos:line="55" pos:column="38">(<argument><expr><literal type="string" pos:line="55" pos:column="39">"set"<pos:position pos:line="55" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="46">notename<pos:position pos:line="55" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="56">NULL<pos:position pos:line="55" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="62">rmain<pos:position pos:line="55" pos:column="67"/></name><operator pos:line="55" pos:column="67">-&gt;<pos:position pos:line="55" pos:column="72"/></operator><name pos:line="55" pos:column="69">pool<pos:position pos:line="55" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="75"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="56" pos:column="17">rewritelog<pos:position pos:line="56" pos:column="27"/></name><argument_list pos:line="56" pos:column="27">(<argument><expr><name pos:line="56" pos:column="28">rmain<pos:position pos:line="56" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="35">5<pos:position pos:line="56" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="38">"setting cookie '%s'"<pos:position pos:line="56" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="61">cookie<pos:position pos:line="56" pos:column="67"/></name></expr></argument>)<pos:position pos:line="56" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="69"/></expr_stmt>
            }<pos:position pos:line="57" pos:column="14"/></block></then>
            <else pos:line="58" pos:column="13">else <block pos:line="58" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="59" pos:column="17">rewritelog<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><name pos:line="59" pos:column="28">rmain<pos:position pos:line="59" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="35">5<pos:position pos:line="59" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="38">"skipping already set cookie '%s'"<pos:position pos:line="59" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="74">var<pos:position pos:line="59" pos:column="77"/></name></expr></argument>)<pos:position pos:line="59" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="79"/></expr_stmt>
            }<pos:position pos:line="60" pos:column="14"/></block></else></if>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

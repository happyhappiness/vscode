<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6357.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">h2_mplx_destroy<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">h2_mplx<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">m<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name pos:line="3" pos:column="21">m<pos:position pos:line="3" pos:column="22"/></name></expr></argument>)<pos:position pos:line="3" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">ap_log_cerror<pos:position pos:line="4" pos:column="18"/></name><argument_list pos:line="4" pos:column="18">(<argument><expr><name pos:line="4" pos:column="19">APLOG_MARK<pos:position pos:line="4" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="31">APLOG_TRACE1<pos:position pos:line="4" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="45">0<pos:position pos:line="4" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="48">m<pos:position pos:line="4" pos:column="49"/></name><operator pos:line="4" pos:column="49">-&gt;<pos:position pos:line="4" pos:column="54"/></operator><name pos:line="4" pos:column="51">c<pos:position pos:line="4" pos:column="52"/></name></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="5" pos:column="19">"h2_mplx(%ld): destroy, ios=%d"<pos:position pos:line="5" pos:column="50"/></literal></expr></argument>, 
                  <argument><expr><name><name pos:line="6" pos:column="19">m<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">-&gt;<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="22">id<pos:position pos:line="6" pos:column="24"/></name></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="26">(<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">int<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">)<pos:position pos:line="6" pos:column="31"/></operator><call><name pos:line="6" pos:column="31">h2_io_set_size<pos:position pos:line="6" pos:column="45"/></name><argument_list pos:line="6" pos:column="45">(<argument><expr><name><name pos:line="6" pos:column="46">m<pos:position pos:line="6" pos:column="47"/></name><operator pos:line="6" pos:column="47">-&gt;<pos:position pos:line="6" pos:column="52"/></operator><name pos:line="6" pos:column="49">stream_ios<pos:position pos:line="6" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">check_tx_free<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">m<pos:position pos:line="7" pos:column="20"/></name></expr></argument>)<pos:position pos:line="7" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">m<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">pool<pos:position pos:line="8" pos:column="16"/></name></name></expr>)<pos:position pos:line="8" pos:column="17"/></condition><then pos:line="8" pos:column="17"> <block pos:line="8" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">apr_pool_destroy<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name><name pos:line="9" pos:column="26">m<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">pool<pos:position pos:line="9" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

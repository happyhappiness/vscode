<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3897.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">content_type<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type><name pos:line="1" pos:column="22">analyze_ct<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">request_rec<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">r<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">s<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">cp<pos:position pos:line="3" pos:column="19"/></name></decl>, <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="22">mp<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">attribute<pos:position pos:line="4" pos:column="20"/></name></decl>, <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="23">value<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">quoted<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">server_rec<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type> <name pos:line="6" pos:column="18">ss<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name><name pos:line="6" pos:column="23">r<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">-&gt;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="26">server<pos:position pos:line="6" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_pool_t<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type> <name pos:line="7" pos:column="18">p<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name><name pos:line="7" pos:column="22">r<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">-&gt;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="25">pool<pos:position pos:line="7" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">content_type<pos:position pos:line="9" pos:column="17"/></name> <modifier pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></modifier></type><name pos:line="9" pos:column="19">ctp<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">param<pos:position pos:line="10" pos:column="10"/></name> <modifier pos:line="10" pos:column="11">*<pos:position pos:line="10" pos:column="12"/></modifier></type><name pos:line="10" pos:column="12">pp<pos:position pos:line="10" pos:column="14"/></name></decl>, <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="17">npp<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* initialize ctp */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">ctp<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <operator pos:line="13" pos:column="11">(<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">content_type<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">*<pos:position pos:line="13" pos:column="26"/></operator><operator pos:line="13" pos:column="26">)<pos:position pos:line="13" pos:column="27"/></operator><call><name pos:line="13" pos:column="27">apr_palloc<pos:position pos:line="13" pos:column="37"/></name><argument_list pos:line="13" pos:column="37">(<argument><expr><name pos:line="13" pos:column="38">p<pos:position pos:line="13" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="41">sizeof<argument_list pos:line="13" pos:column="47">(<argument><expr><name pos:line="13" pos:column="48">content_type<pos:position pos:line="13" pos:column="60"/></name></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">ctp<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">-&gt;<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="10">type<pos:position pos:line="14" pos:column="14"/></name></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">NULL<pos:position pos:line="14" pos:column="21"/></name></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">ctp<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">-&gt;<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="10">subtype<pos:position pos:line="15" pos:column="17"/></name></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">NULL<pos:position pos:line="15" pos:column="24"/></name></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">ctp<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">param<pos:position pos:line="16" pos:column="15"/></name></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <name pos:line="16" pos:column="18">NULL<pos:position pos:line="16" pos:column="22"/></name></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">mp<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <name pos:line="18" pos:column="10">s<pos:position pos:line="18" pos:column="11"/></name></expr>;<pos:position pos:line="18" pos:column="12"/></expr_stmt>

    <comment type="block" pos:line="20" pos:column="5">/* getting a type */</comment>
    <expr_stmt><expr><name pos:line="21" pos:column="5">cp<pos:position pos:line="21" pos:column="7"/></name> <operator pos:line="21" pos:column="8">=<pos:position pos:line="21" pos:column="9"/></operator> <name pos:line="21" pos:column="10">mp<pos:position pos:line="21" pos:column="12"/></name></expr>;<pos:position pos:line="21" pos:column="13"/></expr_stmt>
    <while pos:line="22" pos:column="5">while <condition pos:line="22" pos:column="11">(<expr><call><name pos:line="22" pos:column="12">apr_isspace<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><operator pos:line="22" pos:column="24">*<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">cp<pos:position pos:line="22" pos:column="27"/></name></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="29"/></condition> <block pos:line="22" pos:column="30">{
        <expr_stmt><expr><name pos:line="23" pos:column="9">cp<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">++<pos:position pos:line="23" pos:column="13"/></operator></expr>;<pos:position pos:line="23" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></while>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><operator pos:line="25" pos:column="10">*<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">cp<pos:position pos:line="25" pos:column="13"/></name></expr>)<pos:position pos:line="25" pos:column="14"/></condition><then pos:line="25" pos:column="14"> <block pos:line="25" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">ap_log_error<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">APLOG_MARK<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">APLOG_WARNING<pos:position pos:line="26" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="49">0<pos:position pos:line="26" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="52">ss<pos:position pos:line="26" pos:column="54"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="27" pos:column="22">"mod_mime: analyze_ct: cannot get media type from '%s'"<pos:position pos:line="27" pos:column="77"/></literal></expr></argument>,
                     <argument><expr><operator pos:line="28" pos:column="22">(<pos:position pos:line="28" pos:column="23"/></operator><specifier pos:line="28" pos:column="23">const<pos:position pos:line="28" pos:column="28"/></specifier> <name pos:line="28" pos:column="29">char<pos:position pos:line="28" pos:column="33"/></name> <operator pos:line="28" pos:column="34">*<pos:position pos:line="28" pos:column="35"/></operator><operator pos:line="28" pos:column="35">)<pos:position pos:line="28" pos:column="36"/></operator> <name pos:line="28" pos:column="37">mp<pos:position pos:line="28" pos:column="39"/></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
        <return pos:line="29" pos:column="9">return <expr><operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">NULL<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">)<pos:position pos:line="29" pos:column="22"/></operator></expr>;<pos:position pos:line="29" pos:column="23"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">ctp<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">-&gt;<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="10">type<pos:position pos:line="31" pos:column="14"/></name></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <name pos:line="31" pos:column="17">cp<pos:position pos:line="31" pos:column="19"/></name></expr>;<pos:position pos:line="31" pos:column="20"/></expr_stmt>
    <do pos:line="32" pos:column="5">do <block pos:line="32" pos:column="8">{
        <expr_stmt><expr><name pos:line="33" pos:column="9">cp<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">++<pos:position pos:line="33" pos:column="13"/></operator></expr>;<pos:position pos:line="33" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block> while <condition pos:line="34" pos:column="13">(<expr><operator pos:line="34" pos:column="14">*<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">cp<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">&amp;&amp;<pos:position pos:line="34" pos:column="28"/></operator> <operator pos:line="34" pos:column="21">(<pos:position pos:line="34" pos:column="22"/></operator><operator pos:line="34" pos:column="22">*<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="23">cp<pos:position pos:line="34" pos:column="25"/></name> <operator pos:line="34" pos:column="26">!=<pos:position pos:line="34" pos:column="28"/></operator> <literal type="char" pos:line="34" pos:column="29">'/'<pos:position pos:line="34" pos:column="32"/></literal><operator pos:line="34" pos:column="32">)<pos:position pos:line="34" pos:column="33"/></operator> <operator pos:line="34" pos:column="34">&amp;&amp;<pos:position pos:line="34" pos:column="44"/></operator> <operator pos:line="34" pos:column="37">!<pos:position pos:line="34" pos:column="38"/></operator><call><name pos:line="34" pos:column="38">apr_isspace<pos:position pos:line="34" pos:column="49"/></name><argument_list pos:line="34" pos:column="49">(<argument><expr><operator pos:line="34" pos:column="50">*<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="51">cp<pos:position pos:line="34" pos:column="53"/></name></expr></argument>)<pos:position pos:line="34" pos:column="54"/></argument_list></call> <operator pos:line="34" pos:column="55">&amp;&amp;<pos:position pos:line="34" pos:column="65"/></operator> <operator pos:line="34" pos:column="58">(<pos:position pos:line="34" pos:column="59"/></operator><operator pos:line="34" pos:column="59">*<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="60">cp<pos:position pos:line="34" pos:column="62"/></name> <operator pos:line="34" pos:column="63">!=<pos:position pos:line="34" pos:column="65"/></operator> <literal type="char" pos:line="34" pos:column="66">';'<pos:position pos:line="34" pos:column="69"/></literal><operator pos:line="34" pos:column="69">)<pos:position pos:line="34" pos:column="70"/></operator></expr>)<pos:position pos:line="34" pos:column="71"/></condition>;<pos:position pos:line="34" pos:column="72"/></do>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">!<pos:position pos:line="35" pos:column="10"/></operator><operator pos:line="35" pos:column="10">*<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">cp<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">||<pos:position pos:line="35" pos:column="16"/></operator> <operator pos:line="35" pos:column="17">(<pos:position pos:line="35" pos:column="18"/></operator><operator pos:line="35" pos:column="18">*<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="19">cp<pos:position pos:line="35" pos:column="21"/></name> <operator pos:line="35" pos:column="22">==<pos:position pos:line="35" pos:column="24"/></operator> <literal type="char" pos:line="35" pos:column="25">';'<pos:position pos:line="35" pos:column="28"/></literal><operator pos:line="35" pos:column="28">)<pos:position pos:line="35" pos:column="29"/></operator></expr>)<pos:position pos:line="35" pos:column="30"/></condition><then pos:line="35" pos:column="30"> <block pos:line="35" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ap_log_error<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">APLOG_MARK<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">APLOG_WARNING<pos:position pos:line="36" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="49">0<pos:position pos:line="36" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="52">ss<pos:position pos:line="36" pos:column="54"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="37" pos:column="22">"Cannot get media type from '%s'"<pos:position pos:line="37" pos:column="55"/></literal></expr></argument>,
                     <argument><expr><operator pos:line="38" pos:column="22">(<pos:position pos:line="38" pos:column="23"/></operator><specifier pos:line="38" pos:column="23">const<pos:position pos:line="38" pos:column="28"/></specifier> <name pos:line="38" pos:column="29">char<pos:position pos:line="38" pos:column="33"/></name> <operator pos:line="38" pos:column="34">*<pos:position pos:line="38" pos:column="35"/></operator><operator pos:line="38" pos:column="35">)<pos:position pos:line="38" pos:column="36"/></operator> <name pos:line="38" pos:column="37">mp<pos:position pos:line="38" pos:column="39"/></name></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><operator pos:line="39" pos:column="16">(<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="17">NULL<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">)<pos:position pos:line="39" pos:column="22"/></operator></expr>;<pos:position pos:line="39" pos:column="23"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    <while pos:line="41" pos:column="5">while <condition pos:line="41" pos:column="11">(<expr><call><name pos:line="41" pos:column="12">apr_isspace<pos:position pos:line="41" pos:column="23"/></name><argument_list pos:line="41" pos:column="23">(<argument><expr><operator pos:line="41" pos:column="24">*<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="25">cp<pos:position pos:line="41" pos:column="27"/></name></expr></argument>)<pos:position pos:line="41" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="29"/></condition> <block pos:line="41" pos:column="30">{
        <expr_stmt><expr><name pos:line="42" pos:column="9">cp<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">++<pos:position pos:line="42" pos:column="13"/></operator></expr>;<pos:position pos:line="42" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></while>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">*<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">cp<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">!=<pos:position pos:line="44" pos:column="15"/></operator> <literal type="char" pos:line="44" pos:column="16">'/'<pos:position pos:line="44" pos:column="19"/></literal></expr>)<pos:position pos:line="44" pos:column="20"/></condition><then pos:line="44" pos:column="20"> <block pos:line="44" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">ap_log_error<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">APLOG_MARK<pos:position pos:line="45" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="34">APLOG_WARNING<pos:position pos:line="45" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="49">0<pos:position pos:line="45" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="52">ss<pos:position pos:line="45" pos:column="54"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="46" pos:column="22">"mod_mime: analyze_ct: cannot get media type from '%s'"<pos:position pos:line="46" pos:column="77"/></literal></expr></argument>,
                     <argument><expr><operator pos:line="47" pos:column="22">(<pos:position pos:line="47" pos:column="23"/></operator><specifier pos:line="47" pos:column="23">const<pos:position pos:line="47" pos:column="28"/></specifier> <name pos:line="47" pos:column="29">char<pos:position pos:line="47" pos:column="33"/></name> <operator pos:line="47" pos:column="34">*<pos:position pos:line="47" pos:column="35"/></operator><operator pos:line="47" pos:column="35">)<pos:position pos:line="47" pos:column="36"/></operator> <name pos:line="47" pos:column="37">mp<pos:position pos:line="47" pos:column="39"/></name></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>
        <return pos:line="48" pos:column="9">return <expr><operator pos:line="48" pos:column="16">(<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="17">NULL<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">)<pos:position pos:line="48" pos:column="22"/></operator></expr>;<pos:position pos:line="48" pos:column="23"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">ctp<pos:position pos:line="50" pos:column="8"/></name><operator pos:line="50" pos:column="8">-&gt;<pos:position pos:line="50" pos:column="13"/></operator><name pos:line="50" pos:column="10">type_len<pos:position pos:line="50" pos:column="18"/></name></name> <operator pos:line="50" pos:column="19">=<pos:position pos:line="50" pos:column="20"/></operator> <name pos:line="50" pos:column="21">cp<pos:position pos:line="50" pos:column="23"/></name> <operator pos:line="50" pos:column="24">-<pos:position pos:line="50" pos:column="25"/></operator> <name><name pos:line="50" pos:column="26">ctp<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">-&gt;<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="31">type<pos:position pos:line="50" pos:column="35"/></name></name></expr>;<pos:position pos:line="50" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name pos:line="52" pos:column="5">cp<pos:position pos:line="52" pos:column="7"/></name><operator pos:line="52" pos:column="7">++<pos:position pos:line="52" pos:column="9"/></operator></expr>;<pos:position pos:line="52" pos:column="10"/></expr_stmt> <comment type="block" pos:line="52" pos:column="11">/* skip the '/' */</comment>

    <comment type="block" pos:line="54" pos:column="5">/* getting a subtype */</comment>
    <while pos:line="55" pos:column="5">while <condition pos:line="55" pos:column="11">(<expr><call><name pos:line="55" pos:column="12">apr_isspace<pos:position pos:line="55" pos:column="23"/></name><argument_list pos:line="55" pos:column="23">(<argument><expr><operator pos:line="55" pos:column="24">*<pos:position pos:line="55" pos:column="25"/></operator><name pos:line="55" pos:column="25">cp<pos:position pos:line="55" pos:column="27"/></name></expr></argument>)<pos:position pos:line="55" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="29"/></condition> <block pos:line="55" pos:column="30">{
        <expr_stmt><expr><name pos:line="56" pos:column="9">cp<pos:position pos:line="56" pos:column="11"/></name><operator pos:line="56" pos:column="11">++<pos:position pos:line="56" pos:column="13"/></operator></expr>;<pos:position pos:line="56" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></while>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><operator pos:line="58" pos:column="9">!<pos:position pos:line="58" pos:column="10"/></operator><operator pos:line="58" pos:column="10">*<pos:position pos:line="58" pos:column="11"/></operator><name pos:line="58" pos:column="11">cp<pos:position pos:line="58" pos:column="13"/></name></expr>)<pos:position pos:line="58" pos:column="14"/></condition><then pos:line="58" pos:column="14"> <block pos:line="58" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">ap_log_error<pos:position pos:line="59" pos:column="21"/></name><argument_list pos:line="59" pos:column="21">(<argument><expr><name pos:line="59" pos:column="22">APLOG_MARK<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="34">APLOG_WARNING<pos:position pos:line="59" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="49">0<pos:position pos:line="59" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="52">ss<pos:position pos:line="59" pos:column="54"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="60" pos:column="22">"Cannot get media subtype."<pos:position pos:line="60" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="51"/></expr_stmt>
        <return pos:line="61" pos:column="9">return <expr><operator pos:line="61" pos:column="16">(<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="17">NULL<pos:position pos:line="61" pos:column="21"/></name><operator pos:line="61" pos:column="21">)<pos:position pos:line="61" pos:column="22"/></operator></expr>;<pos:position pos:line="61" pos:column="23"/></return>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="63" pos:column="5">ctp<pos:position pos:line="63" pos:column="8"/></name><operator pos:line="63" pos:column="8">-&gt;<pos:position pos:line="63" pos:column="13"/></operator><name pos:line="63" pos:column="10">subtype<pos:position pos:line="63" pos:column="17"/></name></name> <operator pos:line="63" pos:column="18">=<pos:position pos:line="63" pos:column="19"/></operator> <name pos:line="63" pos:column="20">cp<pos:position pos:line="63" pos:column="22"/></name></expr>;<pos:position pos:line="63" pos:column="23"/></expr_stmt>
    <do pos:line="64" pos:column="5">do <block pos:line="64" pos:column="8">{
        <expr_stmt><expr><name pos:line="65" pos:column="9">cp<pos:position pos:line="65" pos:column="11"/></name><operator pos:line="65" pos:column="11">++<pos:position pos:line="65" pos:column="13"/></operator></expr>;<pos:position pos:line="65" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block> while <condition pos:line="66" pos:column="13">(<expr><operator pos:line="66" pos:column="14">*<pos:position pos:line="66" pos:column="15"/></operator><name pos:line="66" pos:column="15">cp<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">&amp;&amp;<pos:position pos:line="66" pos:column="28"/></operator> <operator pos:line="66" pos:column="21">!<pos:position pos:line="66" pos:column="22"/></operator><call><name pos:line="66" pos:column="22">apr_isspace<pos:position pos:line="66" pos:column="33"/></name><argument_list pos:line="66" pos:column="33">(<argument><expr><operator pos:line="66" pos:column="34">*<pos:position pos:line="66" pos:column="35"/></operator><name pos:line="66" pos:column="35">cp<pos:position pos:line="66" pos:column="37"/></name></expr></argument>)<pos:position pos:line="66" pos:column="38"/></argument_list></call> <operator pos:line="66" pos:column="39">&amp;&amp;<pos:position pos:line="66" pos:column="49"/></operator> <operator pos:line="66" pos:column="42">(<pos:position pos:line="66" pos:column="43"/></operator><operator pos:line="66" pos:column="43">*<pos:position pos:line="66" pos:column="44"/></operator><name pos:line="66" pos:column="44">cp<pos:position pos:line="66" pos:column="46"/></name> <operator pos:line="66" pos:column="47">!=<pos:position pos:line="66" pos:column="49"/></operator> <literal type="char" pos:line="66" pos:column="50">';'<pos:position pos:line="66" pos:column="53"/></literal><operator pos:line="66" pos:column="53">)<pos:position pos:line="66" pos:column="54"/></operator></expr>)<pos:position pos:line="66" pos:column="55"/></condition>;<pos:position pos:line="66" pos:column="56"/></do>
    <expr_stmt><expr><name><name pos:line="67" pos:column="5">ctp<pos:position pos:line="67" pos:column="8"/></name><operator pos:line="67" pos:column="8">-&gt;<pos:position pos:line="67" pos:column="13"/></operator><name pos:line="67" pos:column="10">subtype_len<pos:position pos:line="67" pos:column="21"/></name></name> <operator pos:line="67" pos:column="22">=<pos:position pos:line="67" pos:column="23"/></operator> <name pos:line="67" pos:column="24">cp<pos:position pos:line="67" pos:column="26"/></name> <operator pos:line="67" pos:column="27">-<pos:position pos:line="67" pos:column="28"/></operator> <name><name pos:line="67" pos:column="29">ctp<pos:position pos:line="67" pos:column="32"/></name><operator pos:line="67" pos:column="32">-&gt;<pos:position pos:line="67" pos:column="37"/></operator><name pos:line="67" pos:column="34">subtype<pos:position pos:line="67" pos:column="41"/></name></name></expr>;<pos:position pos:line="67" pos:column="42"/></expr_stmt>
    <while pos:line="68" pos:column="5">while <condition pos:line="68" pos:column="11">(<expr><call><name pos:line="68" pos:column="12">apr_isspace<pos:position pos:line="68" pos:column="23"/></name><argument_list pos:line="68" pos:column="23">(<argument><expr><operator pos:line="68" pos:column="24">*<pos:position pos:line="68" pos:column="25"/></operator><name pos:line="68" pos:column="25">cp<pos:position pos:line="68" pos:column="27"/></name></expr></argument>)<pos:position pos:line="68" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="29"/></condition> <block pos:line="68" pos:column="30">{
        <expr_stmt><expr><name pos:line="69" pos:column="9">cp<pos:position pos:line="69" pos:column="11"/></name><operator pos:line="69" pos:column="11">++<pos:position pos:line="69" pos:column="13"/></operator></expr>;<pos:position pos:line="69" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></while>

    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><operator pos:line="72" pos:column="9">*<pos:position pos:line="72" pos:column="10"/></operator><name pos:line="72" pos:column="10">cp<pos:position pos:line="72" pos:column="12"/></name> <operator pos:line="72" pos:column="13">==<pos:position pos:line="72" pos:column="15"/></operator> <literal type="char" pos:line="72" pos:column="16">'\0'<pos:position pos:line="72" pos:column="20"/></literal></expr>)<pos:position pos:line="72" pos:column="21"/></condition><then pos:line="72" pos:column="21"> <block pos:line="72" pos:column="22">{
        <return pos:line="73" pos:column="9">return <expr><operator pos:line="73" pos:column="16">(<pos:position pos:line="73" pos:column="17"/></operator><name pos:line="73" pos:column="17">ctp<pos:position pos:line="73" pos:column="20"/></name><operator pos:line="73" pos:column="20">)<pos:position pos:line="73" pos:column="21"/></operator></expr>;<pos:position pos:line="73" pos:column="22"/></return>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="76" pos:column="5">/* getting parameters */</comment>
    <expr_stmt><expr><name pos:line="77" pos:column="5">cp<pos:position pos:line="77" pos:column="7"/></name><operator pos:line="77" pos:column="7">++<pos:position pos:line="77" pos:column="9"/></operator></expr>;<pos:position pos:line="77" pos:column="10"/></expr_stmt> <comment type="block" pos:line="77" pos:column="11">/* skip the ';' */</comment>
    <expr_stmt><expr><name pos:line="78" pos:column="5">cp<pos:position pos:line="78" pos:column="7"/></name> <operator pos:line="78" pos:column="8">=<pos:position pos:line="78" pos:column="9"/></operator> <call><name pos:line="78" pos:column="10">zap_sp<pos:position pos:line="78" pos:column="16"/></name><argument_list pos:line="78" pos:column="16">(<argument><expr><name pos:line="78" pos:column="17">cp<pos:position pos:line="78" pos:column="19"/></name></expr></argument>)<pos:position pos:line="78" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="21"/></expr_stmt>
    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><name pos:line="79" pos:column="9">cp<pos:position pos:line="79" pos:column="11"/></name> <operator pos:line="79" pos:column="12">==<pos:position pos:line="79" pos:column="14"/></operator> <name pos:line="79" pos:column="15">NULL<pos:position pos:line="79" pos:column="19"/></name> <operator pos:line="79" pos:column="20">||<pos:position pos:line="79" pos:column="22"/></operator> <operator pos:line="79" pos:column="23">*<pos:position pos:line="79" pos:column="24"/></operator><name pos:line="79" pos:column="24">cp<pos:position pos:line="79" pos:column="26"/></name> <operator pos:line="79" pos:column="27">==<pos:position pos:line="79" pos:column="29"/></operator> <literal type="char" pos:line="79" pos:column="30">'\0'<pos:position pos:line="79" pos:column="34"/></literal></expr>)<pos:position pos:line="79" pos:column="35"/></condition><then pos:line="79" pos:column="35"> <block pos:line="79" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">ap_log_error<pos:position pos:line="80" pos:column="21"/></name><argument_list pos:line="80" pos:column="21">(<argument><expr><name pos:line="80" pos:column="22">APLOG_MARK<pos:position pos:line="80" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="34">APLOG_WARNING<pos:position pos:line="80" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="49">0<pos:position pos:line="80" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="52">ss<pos:position pos:line="80" pos:column="54"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="81" pos:column="22">"Cannot get media parameter."<pos:position pos:line="81" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="53"/></expr_stmt>
        <return pos:line="82" pos:column="9">return <expr><operator pos:line="82" pos:column="16">(<pos:position pos:line="82" pos:column="17"/></operator><name pos:line="82" pos:column="17">NULL<pos:position pos:line="82" pos:column="21"/></name><operator pos:line="82" pos:column="21">)<pos:position pos:line="82" pos:column="22"/></operator></expr>;<pos:position pos:line="82" pos:column="23"/></return>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="84" pos:column="5">mp<pos:position pos:line="84" pos:column="7"/></name> <operator pos:line="84" pos:column="8">=<pos:position pos:line="84" pos:column="9"/></operator> <name pos:line="84" pos:column="10">cp<pos:position pos:line="84" pos:column="12"/></name></expr>;<pos:position pos:line="84" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="85" pos:column="5">attribute<pos:position pos:line="85" pos:column="14"/></name> <operator pos:line="85" pos:column="15">=<pos:position pos:line="85" pos:column="16"/></operator> <name pos:line="85" pos:column="17">NULL<pos:position pos:line="85" pos:column="21"/></name></expr>;<pos:position pos:line="85" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="86" pos:column="5">value<pos:position pos:line="86" pos:column="10"/></name> <operator pos:line="86" pos:column="11">=<pos:position pos:line="86" pos:column="12"/></operator> <name pos:line="86" pos:column="13">NULL<pos:position pos:line="86" pos:column="17"/></name></expr>;<pos:position pos:line="86" pos:column="18"/></expr_stmt>

    <while pos:line="88" pos:column="5">while <condition pos:line="88" pos:column="11">(<expr><name pos:line="88" pos:column="12">cp<pos:position pos:line="88" pos:column="14"/></name> <operator pos:line="88" pos:column="15">!=<pos:position pos:line="88" pos:column="17"/></operator> <name pos:line="88" pos:column="18">NULL<pos:position pos:line="88" pos:column="22"/></name> <operator pos:line="88" pos:column="23">&amp;&amp;<pos:position pos:line="88" pos:column="33"/></operator> <operator pos:line="88" pos:column="26">*<pos:position pos:line="88" pos:column="27"/></operator><name pos:line="88" pos:column="27">cp<pos:position pos:line="88" pos:column="29"/></name> <operator pos:line="88" pos:column="30">!=<pos:position pos:line="88" pos:column="32"/></operator> <literal type="char" pos:line="88" pos:column="33">'\0'<pos:position pos:line="88" pos:column="37"/></literal></expr>)<pos:position pos:line="88" pos:column="38"/></condition> <block pos:line="88" pos:column="39">{
        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name pos:line="89" pos:column="13">attribute<pos:position pos:line="89" pos:column="22"/></name> <operator pos:line="89" pos:column="23">==<pos:position pos:line="89" pos:column="25"/></operator> <name pos:line="89" pos:column="26">NULL<pos:position pos:line="89" pos:column="30"/></name></expr>)<pos:position pos:line="89" pos:column="31"/></condition><then pos:line="89" pos:column="31"> <block pos:line="89" pos:column="32">{
            <if pos:line="90" pos:column="13">if <condition pos:line="90" pos:column="16">(<expr><call><name pos:line="90" pos:column="17">is_token<pos:position pos:line="90" pos:column="25"/></name><argument_list pos:line="90" pos:column="25">(<argument><expr><operator pos:line="90" pos:column="26">*<pos:position pos:line="90" pos:column="27"/></operator><name pos:line="90" pos:column="27">cp<pos:position pos:line="90" pos:column="29"/></name></expr></argument>)<pos:position pos:line="90" pos:column="30"/></argument_list></call> <operator pos:line="90" pos:column="31">&gt;<pos:position pos:line="90" pos:column="35"/></operator> <literal type="number" pos:line="90" pos:column="33">0<pos:position pos:line="90" pos:column="34"/></literal></expr>)<pos:position pos:line="90" pos:column="35"/></condition><then pos:line="90" pos:column="35"> <block pos:line="90" pos:column="36">{
                <expr_stmt><expr><name pos:line="91" pos:column="17">cp<pos:position pos:line="91" pos:column="19"/></name><operator pos:line="91" pos:column="19">++<pos:position pos:line="91" pos:column="21"/></operator></expr>;<pos:position pos:line="91" pos:column="22"/></expr_stmt>
                <continue pos:line="92" pos:column="17">continue;<pos:position pos:line="92" pos:column="26"/></continue>
            }<pos:position pos:line="93" pos:column="14"/></block></then>
            <elseif pos:line="94" pos:column="13">else <if pos:line="94" pos:column="18">if <condition pos:line="94" pos:column="21">(<expr><operator pos:line="94" pos:column="22">*<pos:position pos:line="94" pos:column="23"/></operator><name pos:line="94" pos:column="23">cp<pos:position pos:line="94" pos:column="25"/></name> <operator pos:line="94" pos:column="26">==<pos:position pos:line="94" pos:column="28"/></operator> <literal type="char" pos:line="94" pos:column="29">' '<pos:position pos:line="94" pos:column="32"/></literal> <operator pos:line="94" pos:column="33">||<pos:position pos:line="94" pos:column="35"/></operator> <operator pos:line="94" pos:column="36">*<pos:position pos:line="94" pos:column="37"/></operator><name pos:line="94" pos:column="37">cp<pos:position pos:line="94" pos:column="39"/></name> <operator pos:line="94" pos:column="40">==<pos:position pos:line="94" pos:column="42"/></operator> <literal type="char" pos:line="94" pos:column="43">'\t'<pos:position pos:line="94" pos:column="47"/></literal> <operator pos:line="94" pos:column="48">||<pos:position pos:line="94" pos:column="50"/></operator> <operator pos:line="94" pos:column="51">*<pos:position pos:line="94" pos:column="52"/></operator><name pos:line="94" pos:column="52">cp<pos:position pos:line="94" pos:column="54"/></name> <operator pos:line="94" pos:column="55">==<pos:position pos:line="94" pos:column="57"/></operator> <literal type="char" pos:line="94" pos:column="58">'\n'<pos:position pos:line="94" pos:column="62"/></literal></expr>)<pos:position pos:line="94" pos:column="63"/></condition><then pos:line="94" pos:column="63"> <block pos:line="94" pos:column="64">{
                <expr_stmt><expr><name pos:line="95" pos:column="17">cp<pos:position pos:line="95" pos:column="19"/></name><operator pos:line="95" pos:column="19">++<pos:position pos:line="95" pos:column="21"/></operator></expr>;<pos:position pos:line="95" pos:column="22"/></expr_stmt>
                <continue pos:line="96" pos:column="17">continue;<pos:position pos:line="96" pos:column="26"/></continue>
            }<pos:position pos:line="97" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="98" pos:column="13">else <if pos:line="98" pos:column="18">if <condition pos:line="98" pos:column="21">(<expr><operator pos:line="98" pos:column="22">*<pos:position pos:line="98" pos:column="23"/></operator><name pos:line="98" pos:column="23">cp<pos:position pos:line="98" pos:column="25"/></name> <operator pos:line="98" pos:column="26">==<pos:position pos:line="98" pos:column="28"/></operator> <literal type="char" pos:line="98" pos:column="29">'='<pos:position pos:line="98" pos:column="32"/></literal></expr>)<pos:position pos:line="98" pos:column="33"/></condition><then pos:line="98" pos:column="33"> <block pos:line="98" pos:column="34">{
                <expr_stmt><expr><name pos:line="99" pos:column="17">attribute<pos:position pos:line="99" pos:column="26"/></name> <operator pos:line="99" pos:column="27">=<pos:position pos:line="99" pos:column="28"/></operator> <call><name pos:line="99" pos:column="29">zap_sp_and_dup<pos:position pos:line="99" pos:column="43"/></name><argument_list pos:line="99" pos:column="43">(<argument><expr><name pos:line="99" pos:column="44">p<pos:position pos:line="99" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="47">mp<pos:position pos:line="99" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="51">cp<pos:position pos:line="99" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="55">NULL<pos:position pos:line="99" pos:column="59"/></name></expr></argument>)<pos:position pos:line="99" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="61"/></expr_stmt>
                <if pos:line="100" pos:column="17">if <condition pos:line="100" pos:column="20">(<expr><name pos:line="100" pos:column="21">attribute<pos:position pos:line="100" pos:column="30"/></name> <operator pos:line="100" pos:column="31">==<pos:position pos:line="100" pos:column="33"/></operator> <name pos:line="100" pos:column="34">NULL<pos:position pos:line="100" pos:column="38"/></name> <operator pos:line="100" pos:column="39">||<pos:position pos:line="100" pos:column="41"/></operator> <operator pos:line="100" pos:column="42">*<pos:position pos:line="100" pos:column="43"/></operator><name pos:line="100" pos:column="43">attribute<pos:position pos:line="100" pos:column="52"/></name> <operator pos:line="100" pos:column="53">==<pos:position pos:line="100" pos:column="55"/></operator> <literal type="char" pos:line="100" pos:column="56">'\0'<pos:position pos:line="100" pos:column="60"/></literal></expr>)<pos:position pos:line="100" pos:column="61"/></condition><then pos:line="100" pos:column="61"> <block pos:line="100" pos:column="62">{
                    <expr_stmt><expr><call><name pos:line="101" pos:column="21">ap_log_error<pos:position pos:line="101" pos:column="33"/></name><argument_list pos:line="101" pos:column="33">(<argument><expr><name pos:line="101" pos:column="34">APLOG_MARK<pos:position pos:line="101" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="46">APLOG_WARNING<pos:position pos:line="101" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="101" pos:column="61">0<pos:position pos:line="101" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="64">ss<pos:position pos:line="101" pos:column="66"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="102" pos:column="34">"Cannot get media parameter."<pos:position pos:line="102" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="65"/></expr_stmt>
                    <return pos:line="103" pos:column="21">return <expr><operator pos:line="103" pos:column="28">(<pos:position pos:line="103" pos:column="29"/></operator><name pos:line="103" pos:column="29">NULL<pos:position pos:line="103" pos:column="33"/></name><operator pos:line="103" pos:column="33">)<pos:position pos:line="103" pos:column="34"/></operator></expr>;<pos:position pos:line="103" pos:column="35"/></return>
                }<pos:position pos:line="104" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="105" pos:column="17">cp<pos:position pos:line="105" pos:column="19"/></name><operator pos:line="105" pos:column="19">++<pos:position pos:line="105" pos:column="21"/></operator></expr>;<pos:position pos:line="105" pos:column="22"/></expr_stmt>
                <expr_stmt><expr><name pos:line="106" pos:column="17">cp<pos:position pos:line="106" pos:column="19"/></name> <operator pos:line="106" pos:column="20">=<pos:position pos:line="106" pos:column="21"/></operator> <call><name pos:line="106" pos:column="22">zap_sp<pos:position pos:line="106" pos:column="28"/></name><argument_list pos:line="106" pos:column="28">(<argument><expr><name pos:line="106" pos:column="29">cp<pos:position pos:line="106" pos:column="31"/></name></expr></argument>)<pos:position pos:line="106" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="33"/></expr_stmt>
                <if pos:line="107" pos:column="17">if <condition pos:line="107" pos:column="20">(<expr><name pos:line="107" pos:column="21">cp<pos:position pos:line="107" pos:column="23"/></name> <operator pos:line="107" pos:column="24">==<pos:position pos:line="107" pos:column="26"/></operator> <name pos:line="107" pos:column="27">NULL<pos:position pos:line="107" pos:column="31"/></name> <operator pos:line="107" pos:column="32">||<pos:position pos:line="107" pos:column="34"/></operator> <operator pos:line="107" pos:column="35">*<pos:position pos:line="107" pos:column="36"/></operator><name pos:line="107" pos:column="36">cp<pos:position pos:line="107" pos:column="38"/></name> <operator pos:line="107" pos:column="39">==<pos:position pos:line="107" pos:column="41"/></operator> <literal type="char" pos:line="107" pos:column="42">'\0'<pos:position pos:line="107" pos:column="46"/></literal></expr>)<pos:position pos:line="107" pos:column="47"/></condition><then pos:line="107" pos:column="47"> <block pos:line="107" pos:column="48">{
                    <expr_stmt><expr><call><name pos:line="108" pos:column="21">ap_log_error<pos:position pos:line="108" pos:column="33"/></name><argument_list pos:line="108" pos:column="33">(<argument><expr><name pos:line="108" pos:column="34">APLOG_MARK<pos:position pos:line="108" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="46">APLOG_WARNING<pos:position pos:line="108" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="61">0<pos:position pos:line="108" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="108" pos:column="64">ss<pos:position pos:line="108" pos:column="66"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="109" pos:column="34">"Cannot get media parameter."<pos:position pos:line="109" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="65"/></expr_stmt>
                    <return pos:line="110" pos:column="21">return <expr><operator pos:line="110" pos:column="28">(<pos:position pos:line="110" pos:column="29"/></operator><name pos:line="110" pos:column="29">NULL<pos:position pos:line="110" pos:column="33"/></name><operator pos:line="110" pos:column="33">)<pos:position pos:line="110" pos:column="34"/></operator></expr>;<pos:position pos:line="110" pos:column="35"/></return>
                }<pos:position pos:line="111" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="112" pos:column="17">mp<pos:position pos:line="112" pos:column="19"/></name> <operator pos:line="112" pos:column="20">=<pos:position pos:line="112" pos:column="21"/></operator> <name pos:line="112" pos:column="22">cp<pos:position pos:line="112" pos:column="24"/></name></expr>;<pos:position pos:line="112" pos:column="25"/></expr_stmt>
                <continue pos:line="113" pos:column="17">continue;<pos:position pos:line="113" pos:column="26"/></continue>
            }<pos:position pos:line="114" pos:column="14"/></block></then></if></elseif>
            <else pos:line="115" pos:column="13">else <block pos:line="115" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="116" pos:column="17">ap_log_error<pos:position pos:line="116" pos:column="29"/></name><argument_list pos:line="116" pos:column="29">(<argument><expr><name pos:line="116" pos:column="30">APLOG_MARK<pos:position pos:line="116" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="42">APLOG_WARNING<pos:position pos:line="116" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="116" pos:column="57">0<pos:position pos:line="116" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="60">ss<pos:position pos:line="116" pos:column="62"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="117" pos:column="30">"Cannot get media parameter."<pos:position pos:line="117" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="61"/></expr_stmt>
                <return pos:line="118" pos:column="17">return <expr><operator pos:line="118" pos:column="24">(<pos:position pos:line="118" pos:column="25"/></operator><name pos:line="118" pos:column="25">NULL<pos:position pos:line="118" pos:column="29"/></name><operator pos:line="118" pos:column="29">)<pos:position pos:line="118" pos:column="30"/></operator></expr>;<pos:position pos:line="118" pos:column="31"/></return>
            }<pos:position pos:line="119" pos:column="14"/></block></else></if>
        }<pos:position pos:line="120" pos:column="10"/></block></then>
        <else pos:line="121" pos:column="9">else <block pos:line="121" pos:column="14">{
            <if pos:line="122" pos:column="13">if <condition pos:line="122" pos:column="16">(<expr><name pos:line="122" pos:column="17">mp<pos:position pos:line="122" pos:column="19"/></name> <operator pos:line="122" pos:column="20">==<pos:position pos:line="122" pos:column="22"/></operator> <name pos:line="122" pos:column="23">cp<pos:position pos:line="122" pos:column="25"/></name></expr>)<pos:position pos:line="122" pos:column="26"/></condition><then pos:line="122" pos:column="26"> <block pos:line="122" pos:column="27">{
                <if pos:line="123" pos:column="17">if <condition pos:line="123" pos:column="20">(<expr><operator pos:line="123" pos:column="21">*<pos:position pos:line="123" pos:column="22"/></operator><name pos:line="123" pos:column="22">cp<pos:position pos:line="123" pos:column="24"/></name> <operator pos:line="123" pos:column="25">==<pos:position pos:line="123" pos:column="27"/></operator> <literal type="char" pos:line="123" pos:column="28">'"'<pos:position pos:line="123" pos:column="31"/></literal></expr>)<pos:position pos:line="123" pos:column="32"/></condition><then pos:line="123" pos:column="32"> <block pos:line="123" pos:column="33">{
                    <expr_stmt><expr><name pos:line="124" pos:column="21">quoted<pos:position pos:line="124" pos:column="27"/></name> <operator pos:line="124" pos:column="28">=<pos:position pos:line="124" pos:column="29"/></operator> <literal type="number" pos:line="124" pos:column="30">1<pos:position pos:line="124" pos:column="31"/></literal></expr>;<pos:position pos:line="124" pos:column="32"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="125" pos:column="21">cp<pos:position pos:line="125" pos:column="23"/></name><operator pos:line="125" pos:column="23">++<pos:position pos:line="125" pos:column="25"/></operator></expr>;<pos:position pos:line="125" pos:column="26"/></expr_stmt>
                }<pos:position pos:line="126" pos:column="18"/></block></then>
                <else pos:line="127" pos:column="17">else <block pos:line="127" pos:column="22">{
                    <expr_stmt><expr><name pos:line="128" pos:column="21">quoted<pos:position pos:line="128" pos:column="27"/></name> <operator pos:line="128" pos:column="28">=<pos:position pos:line="128" pos:column="29"/></operator> <literal type="number" pos:line="128" pos:column="30">0<pos:position pos:line="128" pos:column="31"/></literal></expr>;<pos:position pos:line="128" pos:column="32"/></expr_stmt>
                }<pos:position pos:line="129" pos:column="18"/></block></else></if>
            }<pos:position pos:line="130" pos:column="14"/></block></then></if>
            <if pos:line="131" pos:column="13">if <condition pos:line="131" pos:column="16">(<expr><name pos:line="131" pos:column="17">quoted<pos:position pos:line="131" pos:column="23"/></name> <operator pos:line="131" pos:column="24">&gt;<pos:position pos:line="131" pos:column="28"/></operator> <literal type="number" pos:line="131" pos:column="26">0<pos:position pos:line="131" pos:column="27"/></literal></expr>)<pos:position pos:line="131" pos:column="28"/></condition><then pos:line="131" pos:column="28"> <block pos:line="131" pos:column="29">{
                <while pos:line="132" pos:column="17">while <condition pos:line="132" pos:column="23">(<expr><name pos:line="132" pos:column="24">quoted<pos:position pos:line="132" pos:column="30"/></name> <operator pos:line="132" pos:column="31">&amp;&amp;<pos:position pos:line="132" pos:column="41"/></operator> <operator pos:line="132" pos:column="34">*<pos:position pos:line="132" pos:column="35"/></operator><name pos:line="132" pos:column="35">cp<pos:position pos:line="132" pos:column="37"/></name> <operator pos:line="132" pos:column="38">!=<pos:position pos:line="132" pos:column="40"/></operator> <literal type="char" pos:line="132" pos:column="41">'\0'<pos:position pos:line="132" pos:column="45"/></literal></expr>)<pos:position pos:line="132" pos:column="46"/></condition> <block pos:line="132" pos:column="47">{
                    <if pos:line="133" pos:column="21">if <condition pos:line="133" pos:column="24">(<expr><call><name pos:line="133" pos:column="25">is_qtext<pos:position pos:line="133" pos:column="33"/></name><argument_list pos:line="133" pos:column="33">(<argument><expr><operator pos:line="133" pos:column="34">*<pos:position pos:line="133" pos:column="35"/></operator><name pos:line="133" pos:column="35">cp<pos:position pos:line="133" pos:column="37"/></name></expr></argument>)<pos:position pos:line="133" pos:column="38"/></argument_list></call> <operator pos:line="133" pos:column="39">&gt;<pos:position pos:line="133" pos:column="43"/></operator> <literal type="number" pos:line="133" pos:column="41">0<pos:position pos:line="133" pos:column="42"/></literal></expr>)<pos:position pos:line="133" pos:column="43"/></condition><then pos:line="133" pos:column="43"> <block pos:line="133" pos:column="44">{
                        <expr_stmt><expr><name pos:line="134" pos:column="25">cp<pos:position pos:line="134" pos:column="27"/></name><operator pos:line="134" pos:column="27">++<pos:position pos:line="134" pos:column="29"/></operator></expr>;<pos:position pos:line="134" pos:column="30"/></expr_stmt>
                    }<pos:position pos:line="135" pos:column="22"/></block></then>
                    <elseif pos:line="136" pos:column="21">else <if pos:line="136" pos:column="26">if <condition pos:line="136" pos:column="29">(<expr><call><name pos:line="136" pos:column="30">is_quoted_pair<pos:position pos:line="136" pos:column="44"/></name><argument_list pos:line="136" pos:column="44">(<argument><expr><name pos:line="136" pos:column="45">cp<pos:position pos:line="136" pos:column="47"/></name></expr></argument>)<pos:position pos:line="136" pos:column="48"/></argument_list></call> <operator pos:line="136" pos:column="49">&gt;<pos:position pos:line="136" pos:column="53"/></operator> <literal type="number" pos:line="136" pos:column="51">0<pos:position pos:line="136" pos:column="52"/></literal></expr>)<pos:position pos:line="136" pos:column="53"/></condition><then pos:line="136" pos:column="53"> <block pos:line="136" pos:column="54">{
                        <expr_stmt><expr><name pos:line="137" pos:column="25">cp<pos:position pos:line="137" pos:column="27"/></name> <operator pos:line="137" pos:column="28">+=<pos:position pos:line="137" pos:column="30"/></operator> <literal type="number" pos:line="137" pos:column="31">2<pos:position pos:line="137" pos:column="32"/></literal></expr>;<pos:position pos:line="137" pos:column="33"/></expr_stmt>
                    }<pos:position pos:line="138" pos:column="22"/></block></then></if></elseif>
                    <elseif pos:line="139" pos:column="21">else <if pos:line="139" pos:column="26">if <condition pos:line="139" pos:column="29">(<expr><operator pos:line="139" pos:column="30">*<pos:position pos:line="139" pos:column="31"/></operator><name pos:line="139" pos:column="31">cp<pos:position pos:line="139" pos:column="33"/></name> <operator pos:line="139" pos:column="34">==<pos:position pos:line="139" pos:column="36"/></operator> <literal type="char" pos:line="139" pos:column="37">'"'<pos:position pos:line="139" pos:column="40"/></literal></expr>)<pos:position pos:line="139" pos:column="41"/></condition><then pos:line="139" pos:column="41"> <block pos:line="139" pos:column="42">{
                        <expr_stmt><expr><name pos:line="140" pos:column="25">cp<pos:position pos:line="140" pos:column="27"/></name><operator pos:line="140" pos:column="27">++<pos:position pos:line="140" pos:column="29"/></operator></expr>;<pos:position pos:line="140" pos:column="30"/></expr_stmt>
                        <while pos:line="141" pos:column="25">while <condition pos:line="141" pos:column="31">(<expr><operator pos:line="141" pos:column="32">*<pos:position pos:line="141" pos:column="33"/></operator><name pos:line="141" pos:column="33">cp<pos:position pos:line="141" pos:column="35"/></name> <operator pos:line="141" pos:column="36">==<pos:position pos:line="141" pos:column="38"/></operator> <literal type="char" pos:line="141" pos:column="39">' '<pos:position pos:line="141" pos:column="42"/></literal> <operator pos:line="141" pos:column="43">||<pos:position pos:line="141" pos:column="45"/></operator> <operator pos:line="141" pos:column="46">*<pos:position pos:line="141" pos:column="47"/></operator><name pos:line="141" pos:column="47">cp<pos:position pos:line="141" pos:column="49"/></name> <operator pos:line="141" pos:column="50">==<pos:position pos:line="141" pos:column="52"/></operator> <literal type="char" pos:line="141" pos:column="53">'\t'<pos:position pos:line="141" pos:column="57"/></literal> <operator pos:line="141" pos:column="58">||<pos:position pos:line="141" pos:column="60"/></operator> <operator pos:line="141" pos:column="61">*<pos:position pos:line="141" pos:column="62"/></operator><name pos:line="141" pos:column="62">cp<pos:position pos:line="141" pos:column="64"/></name> <operator pos:line="141" pos:column="65">==<pos:position pos:line="141" pos:column="67"/></operator> <literal type="char" pos:line="141" pos:column="68">'\n'<pos:position pos:line="141" pos:column="72"/></literal></expr>)<pos:position pos:line="141" pos:column="73"/></condition> <block pos:line="141" pos:column="74">{
                            <expr_stmt><expr><name pos:line="142" pos:column="29">cp<pos:position pos:line="142" pos:column="31"/></name><operator pos:line="142" pos:column="31">++<pos:position pos:line="142" pos:column="33"/></operator></expr>;<pos:position pos:line="142" pos:column="34"/></expr_stmt>
                        }<pos:position pos:line="143" pos:column="26"/></block></while>
                        <if pos:line="144" pos:column="25">if <condition pos:line="144" pos:column="28">(<expr><operator pos:line="144" pos:column="29">*<pos:position pos:line="144" pos:column="30"/></operator><name pos:line="144" pos:column="30">cp<pos:position pos:line="144" pos:column="32"/></name> <operator pos:line="144" pos:column="33">!=<pos:position pos:line="144" pos:column="35"/></operator> <literal type="char" pos:line="144" pos:column="36">';'<pos:position pos:line="144" pos:column="39"/></literal> <operator pos:line="144" pos:column="40">&amp;&amp;<pos:position pos:line="144" pos:column="50"/></operator> <operator pos:line="144" pos:column="43">*<pos:position pos:line="144" pos:column="44"/></operator><name pos:line="144" pos:column="44">cp<pos:position pos:line="144" pos:column="46"/></name> <operator pos:line="144" pos:column="47">!=<pos:position pos:line="144" pos:column="49"/></operator> <literal type="char" pos:line="144" pos:column="50">'\0'<pos:position pos:line="144" pos:column="54"/></literal></expr>)<pos:position pos:line="144" pos:column="55"/></condition><then pos:line="144" pos:column="55"> <block pos:line="144" pos:column="56">{
                            <expr_stmt><expr><call><name pos:line="145" pos:column="29">ap_log_error<pos:position pos:line="145" pos:column="41"/></name><argument_list pos:line="145" pos:column="41">(<argument><expr><name pos:line="145" pos:column="42">APLOG_MARK<pos:position pos:line="145" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="54">APLOG_WARNING<pos:position pos:line="145" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="145" pos:column="69">0<pos:position pos:line="145" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="145" pos:column="72">ss<pos:position pos:line="145" pos:column="74"/></name></expr></argument>,
                                         <argument><expr><literal type="string" pos:line="146" pos:column="42">"Cannot get media parameter."<pos:position pos:line="146" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="73"/></expr_stmt>
                            <return pos:line="147" pos:column="29">return<expr><operator pos:line="147" pos:column="35">(<pos:position pos:line="147" pos:column="36"/></operator><name pos:line="147" pos:column="36">NULL<pos:position pos:line="147" pos:column="40"/></name><operator pos:line="147" pos:column="40">)<pos:position pos:line="147" pos:column="41"/></operator></expr>;<pos:position pos:line="147" pos:column="42"/></return>
                        }<pos:position pos:line="148" pos:column="26"/></block></then></if>
                        <expr_stmt><expr><name pos:line="149" pos:column="25">quoted<pos:position pos:line="149" pos:column="31"/></name> <operator pos:line="149" pos:column="32">=<pos:position pos:line="149" pos:column="33"/></operator> <literal type="number" pos:line="149" pos:column="34">0<pos:position pos:line="149" pos:column="35"/></literal></expr>;<pos:position pos:line="149" pos:column="36"/></expr_stmt>
                    }<pos:position pos:line="150" pos:column="22"/></block></then></if></elseif>
                    <else pos:line="151" pos:column="21">else <block pos:line="151" pos:column="26">{
                        <expr_stmt><expr><call><name pos:line="152" pos:column="25">ap_log_error<pos:position pos:line="152" pos:column="37"/></name><argument_list pos:line="152" pos:column="37">(<argument><expr><name pos:line="152" pos:column="38">APLOG_MARK<pos:position pos:line="152" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="50">APLOG_WARNING<pos:position pos:line="152" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="152" pos:column="65">0<pos:position pos:line="152" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="152" pos:column="68">ss<pos:position pos:line="152" pos:column="70"/></name></expr></argument>,
                                     <argument><expr><literal type="string" pos:line="153" pos:column="38">"Cannot get media parameter."<pos:position pos:line="153" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="69"/></expr_stmt>
                        <return pos:line="154" pos:column="25">return <expr><operator pos:line="154" pos:column="32">(<pos:position pos:line="154" pos:column="33"/></operator><name pos:line="154" pos:column="33">NULL<pos:position pos:line="154" pos:column="37"/></name><operator pos:line="154" pos:column="37">)<pos:position pos:line="154" pos:column="38"/></operator></expr>;<pos:position pos:line="154" pos:column="39"/></return>
                    }<pos:position pos:line="155" pos:column="22"/></block></else></if>
                }<pos:position pos:line="156" pos:column="18"/></block></while>
            }<pos:position pos:line="157" pos:column="14"/></block></then>
            <else pos:line="158" pos:column="13">else <block pos:line="158" pos:column="18">{
                <while pos:line="159" pos:column="17">while <condition pos:line="159" pos:column="23">(<expr><literal type="number" pos:line="159" pos:column="24">1<pos:position pos:line="159" pos:column="25"/></literal></expr>)<pos:position pos:line="159" pos:column="26"/></condition> <block pos:line="159" pos:column="27">{
                    <if pos:line="160" pos:column="21">if <condition pos:line="160" pos:column="24">(<expr><call><name pos:line="160" pos:column="25">is_token<pos:position pos:line="160" pos:column="33"/></name><argument_list pos:line="160" pos:column="33">(<argument><expr><operator pos:line="160" pos:column="34">*<pos:position pos:line="160" pos:column="35"/></operator><name pos:line="160" pos:column="35">cp<pos:position pos:line="160" pos:column="37"/></name></expr></argument>)<pos:position pos:line="160" pos:column="38"/></argument_list></call> <operator pos:line="160" pos:column="39">&gt;<pos:position pos:line="160" pos:column="43"/></operator> <literal type="number" pos:line="160" pos:column="41">0<pos:position pos:line="160" pos:column="42"/></literal></expr>)<pos:position pos:line="160" pos:column="43"/></condition><then pos:line="160" pos:column="43"> <block pos:line="160" pos:column="44">{
                        <expr_stmt><expr><name pos:line="161" pos:column="25">cp<pos:position pos:line="161" pos:column="27"/></name><operator pos:line="161" pos:column="27">++<pos:position pos:line="161" pos:column="29"/></operator></expr>;<pos:position pos:line="161" pos:column="30"/></expr_stmt>
                    }<pos:position pos:line="162" pos:column="22"/></block></then>
                    <elseif pos:line="163" pos:column="21">else <if pos:line="163" pos:column="26">if <condition pos:line="163" pos:column="29">(<expr><operator pos:line="163" pos:column="30">*<pos:position pos:line="163" pos:column="31"/></operator><name pos:line="163" pos:column="31">cp<pos:position pos:line="163" pos:column="33"/></name> <operator pos:line="163" pos:column="34">==<pos:position pos:line="163" pos:column="36"/></operator> <literal type="char" pos:line="163" pos:column="37">'\0'<pos:position pos:line="163" pos:column="41"/></literal> <operator pos:line="163" pos:column="42">||<pos:position pos:line="163" pos:column="44"/></operator> <operator pos:line="163" pos:column="45">*<pos:position pos:line="163" pos:column="46"/></operator><name pos:line="163" pos:column="46">cp<pos:position pos:line="163" pos:column="48"/></name> <operator pos:line="163" pos:column="49">==<pos:position pos:line="163" pos:column="51"/></operator> <literal type="char" pos:line="163" pos:column="52">';'<pos:position pos:line="163" pos:column="55"/></literal></expr>)<pos:position pos:line="163" pos:column="56"/></condition><then pos:line="163" pos:column="56"> <block pos:line="163" pos:column="57">{
                        <break pos:line="164" pos:column="25">break;<pos:position pos:line="164" pos:column="31"/></break>
                    }<pos:position pos:line="165" pos:column="22"/></block></then></if></elseif>
                    <else pos:line="166" pos:column="21">else <block pos:line="166" pos:column="26">{
                        <expr_stmt><expr><call><name pos:line="167" pos:column="25">ap_log_error<pos:position pos:line="167" pos:column="37"/></name><argument_list pos:line="167" pos:column="37">(<argument><expr><name pos:line="167" pos:column="38">APLOG_MARK<pos:position pos:line="167" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="50">APLOG_WARNING<pos:position pos:line="167" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="167" pos:column="65">0<pos:position pos:line="167" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="167" pos:column="68">ss<pos:position pos:line="167" pos:column="70"/></name></expr></argument>,
                                     <argument><expr><literal type="string" pos:line="168" pos:column="38">"Cannot get media parameter."<pos:position pos:line="168" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="69"/></expr_stmt>
                        <return pos:line="169" pos:column="25">return <expr><operator pos:line="169" pos:column="32">(<pos:position pos:line="169" pos:column="33"/></operator><name pos:line="169" pos:column="33">NULL<pos:position pos:line="169" pos:column="37"/></name><operator pos:line="169" pos:column="37">)<pos:position pos:line="169" pos:column="38"/></operator></expr>;<pos:position pos:line="169" pos:column="39"/></return>
                    }<pos:position pos:line="170" pos:column="22"/></block></else></if>
                }<pos:position pos:line="171" pos:column="18"/></block></while>
            }<pos:position pos:line="172" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="173" pos:column="13">value<pos:position pos:line="173" pos:column="18"/></name> <operator pos:line="173" pos:column="19">=<pos:position pos:line="173" pos:column="20"/></operator> <call><name pos:line="173" pos:column="21">zap_sp_and_dup<pos:position pos:line="173" pos:column="35"/></name><argument_list pos:line="173" pos:column="35">(<argument><expr><name pos:line="173" pos:column="36">p<pos:position pos:line="173" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="39">mp<pos:position pos:line="173" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="43">cp<pos:position pos:line="173" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="47">NULL<pos:position pos:line="173" pos:column="51"/></name></expr></argument>)<pos:position pos:line="173" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="53"/></expr_stmt>
            <if pos:line="174" pos:column="13">if <condition pos:line="174" pos:column="16">(<expr><name pos:line="174" pos:column="17">value<pos:position pos:line="174" pos:column="22"/></name> <operator pos:line="174" pos:column="23">==<pos:position pos:line="174" pos:column="25"/></operator> <name pos:line="174" pos:column="26">NULL<pos:position pos:line="174" pos:column="30"/></name> <operator pos:line="174" pos:column="31">||<pos:position pos:line="174" pos:column="33"/></operator> <operator pos:line="174" pos:column="34">*<pos:position pos:line="174" pos:column="35"/></operator><name pos:line="174" pos:column="35">value<pos:position pos:line="174" pos:column="40"/></name> <operator pos:line="174" pos:column="41">==<pos:position pos:line="174" pos:column="43"/></operator> <literal type="char" pos:line="174" pos:column="44">'\0'<pos:position pos:line="174" pos:column="48"/></literal></expr>)<pos:position pos:line="174" pos:column="49"/></condition><then pos:line="174" pos:column="49"> <block pos:line="174" pos:column="50">{
                <expr_stmt><expr><call><name pos:line="175" pos:column="17">ap_log_error<pos:position pos:line="175" pos:column="29"/></name><argument_list pos:line="175" pos:column="29">(<argument><expr><name pos:line="175" pos:column="30">APLOG_MARK<pos:position pos:line="175" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="42">APLOG_WARNING<pos:position pos:line="175" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="175" pos:column="57">0<pos:position pos:line="175" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="175" pos:column="60">ss<pos:position pos:line="175" pos:column="62"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="176" pos:column="30">"Cannot get media parameter."<pos:position pos:line="176" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="61"/></expr_stmt>
                <return pos:line="177" pos:column="17">return <expr><operator pos:line="177" pos:column="24">(<pos:position pos:line="177" pos:column="25"/></operator><name pos:line="177" pos:column="25">NULL<pos:position pos:line="177" pos:column="29"/></name><operator pos:line="177" pos:column="29">)<pos:position pos:line="177" pos:column="30"/></operator></expr>;<pos:position pos:line="177" pos:column="31"/></return>
            }<pos:position pos:line="178" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="180" pos:column="13">pp<pos:position pos:line="180" pos:column="15"/></name> <operator pos:line="180" pos:column="16">=<pos:position pos:line="180" pos:column="17"/></operator> <call><name pos:line="180" pos:column="18">apr_palloc<pos:position pos:line="180" pos:column="28"/></name><argument_list pos:line="180" pos:column="28">(<argument><expr><name pos:line="180" pos:column="29">p<pos:position pos:line="180" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="180" pos:column="32">sizeof<argument_list pos:line="180" pos:column="38">(<argument><expr><name pos:line="180" pos:column="39">param<pos:position pos:line="180" pos:column="44"/></name></expr></argument>)<pos:position pos:line="180" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="180" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="181" pos:column="13">pp<pos:position pos:line="181" pos:column="15"/></name><operator pos:line="181" pos:column="15">-&gt;<pos:position pos:line="181" pos:column="20"/></operator><name pos:line="181" pos:column="17">attr<pos:position pos:line="181" pos:column="21"/></name></name> <operator pos:line="181" pos:column="22">=<pos:position pos:line="181" pos:column="23"/></operator> <name pos:line="181" pos:column="24">attribute<pos:position pos:line="181" pos:column="33"/></name></expr>;<pos:position pos:line="181" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="182" pos:column="13">pp<pos:position pos:line="182" pos:column="15"/></name><operator pos:line="182" pos:column="15">-&gt;<pos:position pos:line="182" pos:column="20"/></operator><name pos:line="182" pos:column="17">val<pos:position pos:line="182" pos:column="20"/></name></name> <operator pos:line="182" pos:column="21">=<pos:position pos:line="182" pos:column="22"/></operator> <name pos:line="182" pos:column="23">value<pos:position pos:line="182" pos:column="28"/></name></expr>;<pos:position pos:line="182" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="183" pos:column="13">pp<pos:position pos:line="183" pos:column="15"/></name><operator pos:line="183" pos:column="15">-&gt;<pos:position pos:line="183" pos:column="20"/></operator><name pos:line="183" pos:column="17">next<pos:position pos:line="183" pos:column="21"/></name></name> <operator pos:line="183" pos:column="22">=<pos:position pos:line="183" pos:column="23"/></operator> <name pos:line="183" pos:column="24">NULL<pos:position pos:line="183" pos:column="28"/></name></expr>;<pos:position pos:line="183" pos:column="29"/></expr_stmt>

            <if pos:line="185" pos:column="13">if <condition pos:line="185" pos:column="16">(<expr><name><name pos:line="185" pos:column="17">ctp<pos:position pos:line="185" pos:column="20"/></name><operator pos:line="185" pos:column="20">-&gt;<pos:position pos:line="185" pos:column="25"/></operator><name pos:line="185" pos:column="22">param<pos:position pos:line="185" pos:column="27"/></name></name> <operator pos:line="185" pos:column="28">==<pos:position pos:line="185" pos:column="30"/></operator> <name pos:line="185" pos:column="31">NULL<pos:position pos:line="185" pos:column="35"/></name></expr>)<pos:position pos:line="185" pos:column="36"/></condition><then pos:line="185" pos:column="36"> <block pos:line="185" pos:column="37">{
                <expr_stmt><expr><name><name pos:line="186" pos:column="17">ctp<pos:position pos:line="186" pos:column="20"/></name><operator pos:line="186" pos:column="20">-&gt;<pos:position pos:line="186" pos:column="25"/></operator><name pos:line="186" pos:column="22">param<pos:position pos:line="186" pos:column="27"/></name></name> <operator pos:line="186" pos:column="28">=<pos:position pos:line="186" pos:column="29"/></operator> <name pos:line="186" pos:column="30">pp<pos:position pos:line="186" pos:column="32"/></name></expr>;<pos:position pos:line="186" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="187" pos:column="14"/></block></then>
            <else pos:line="188" pos:column="13">else <block pos:line="188" pos:column="18">{
                <expr_stmt><expr><name pos:line="189" pos:column="17">npp<pos:position pos:line="189" pos:column="20"/></name> <operator pos:line="189" pos:column="21">=<pos:position pos:line="189" pos:column="22"/></operator> <name><name pos:line="189" pos:column="23">ctp<pos:position pos:line="189" pos:column="26"/></name><operator pos:line="189" pos:column="26">-&gt;<pos:position pos:line="189" pos:column="31"/></operator><name pos:line="189" pos:column="28">param<pos:position pos:line="189" pos:column="33"/></name></name></expr>;<pos:position pos:line="189" pos:column="34"/></expr_stmt>
                <while pos:line="190" pos:column="17">while <condition pos:line="190" pos:column="23">(<expr><name><name pos:line="190" pos:column="24">npp<pos:position pos:line="190" pos:column="27"/></name><operator pos:line="190" pos:column="27">-&gt;<pos:position pos:line="190" pos:column="32"/></operator><name pos:line="190" pos:column="29">next<pos:position pos:line="190" pos:column="33"/></name></name></expr>)<pos:position pos:line="190" pos:column="34"/></condition> <block pos:line="190" pos:column="35">{
                    <expr_stmt><expr><name pos:line="191" pos:column="21">npp<pos:position pos:line="191" pos:column="24"/></name> <operator pos:line="191" pos:column="25">=<pos:position pos:line="191" pos:column="26"/></operator> <name><name pos:line="191" pos:column="27">npp<pos:position pos:line="191" pos:column="30"/></name><operator pos:line="191" pos:column="30">-&gt;<pos:position pos:line="191" pos:column="35"/></operator><name pos:line="191" pos:column="32">next<pos:position pos:line="191" pos:column="36"/></name></name></expr>;<pos:position pos:line="191" pos:column="37"/></expr_stmt>
                }<pos:position pos:line="192" pos:column="18"/></block></while>
                <expr_stmt><expr><name><name pos:line="193" pos:column="17">npp<pos:position pos:line="193" pos:column="20"/></name><operator pos:line="193" pos:column="20">-&gt;<pos:position pos:line="193" pos:column="25"/></operator><name pos:line="193" pos:column="22">next<pos:position pos:line="193" pos:column="26"/></name></name> <operator pos:line="193" pos:column="27">=<pos:position pos:line="193" pos:column="28"/></operator> <name pos:line="193" pos:column="29">pp<pos:position pos:line="193" pos:column="31"/></name></expr>;<pos:position pos:line="193" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="194" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="195" pos:column="13">quoted<pos:position pos:line="195" pos:column="19"/></name> <operator pos:line="195" pos:column="20">=<pos:position pos:line="195" pos:column="21"/></operator> <literal type="number" pos:line="195" pos:column="22">0<pos:position pos:line="195" pos:column="23"/></literal></expr>;<pos:position pos:line="195" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name pos:line="196" pos:column="13">attribute<pos:position pos:line="196" pos:column="22"/></name> <operator pos:line="196" pos:column="23">=<pos:position pos:line="196" pos:column="24"/></operator> <name pos:line="196" pos:column="25">NULL<pos:position pos:line="196" pos:column="29"/></name></expr>;<pos:position pos:line="196" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="197" pos:column="13">value<pos:position pos:line="197" pos:column="18"/></name> <operator pos:line="197" pos:column="19">=<pos:position pos:line="197" pos:column="20"/></operator> <name pos:line="197" pos:column="21">NULL<pos:position pos:line="197" pos:column="25"/></name></expr>;<pos:position pos:line="197" pos:column="26"/></expr_stmt>
            <if pos:line="198" pos:column="13">if <condition pos:line="198" pos:column="16">(<expr><operator pos:line="198" pos:column="17">*<pos:position pos:line="198" pos:column="18"/></operator><name pos:line="198" pos:column="18">cp<pos:position pos:line="198" pos:column="20"/></name> <operator pos:line="198" pos:column="21">==<pos:position pos:line="198" pos:column="23"/></operator> <literal type="char" pos:line="198" pos:column="24">'\0'<pos:position pos:line="198" pos:column="28"/></literal></expr>)<pos:position pos:line="198" pos:column="29"/></condition><then pos:line="198" pos:column="29"> <block pos:line="198" pos:column="30">{
                <break pos:line="199" pos:column="17">break;<pos:position pos:line="199" pos:column="23"/></break>
            }<pos:position pos:line="200" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="201" pos:column="13">cp<pos:position pos:line="201" pos:column="15"/></name><operator pos:line="201" pos:column="15">++<pos:position pos:line="201" pos:column="17"/></operator></expr>;<pos:position pos:line="201" pos:column="18"/></expr_stmt>
            <expr_stmt><expr><name pos:line="202" pos:column="13">mp<pos:position pos:line="202" pos:column="15"/></name> <operator pos:line="202" pos:column="16">=<pos:position pos:line="202" pos:column="17"/></operator> <name pos:line="202" pos:column="18">cp<pos:position pos:line="202" pos:column="20"/></name></expr>;<pos:position pos:line="202" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="203" pos:column="10"/></block></else></if>
    }<pos:position pos:line="204" pos:column="6"/></block></while>
    <return pos:line="205" pos:column="5">return <expr><operator pos:line="205" pos:column="12">(<pos:position pos:line="205" pos:column="13"/></operator><name pos:line="205" pos:column="13">ctp<pos:position pos:line="205" pos:column="16"/></name><operator pos:line="205" pos:column="16">)<pos:position pos:line="205" pos:column="17"/></operator></expr>;<pos:position pos:line="205" pos:column="18"/></return>
}<pos:position pos:line="206" pos:column="2"/></block></function></unit>

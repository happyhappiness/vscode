<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3650_httpd-2.4.18.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">log_tid<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">ap_errorlog_info<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">info<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">arg<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                   <parameter><decl><type><name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">buf<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">buflen<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">APR_HAS_THREADS<pos:position pos:line="4" pos:column="20"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">result<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">HAVE_GETTID<pos:position pos:line="7" pos:column="16"/></name></expr></cpp:if>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">arg<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">&amp;&amp;<pos:position pos:line="8" pos:column="23"/></operator> <operator pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">arg<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">==<pos:position pos:line="8" pos:column="23"/></operator> <literal type="char" pos:line="8" pos:column="24">'g'<pos:position pos:line="8" pos:column="27"/></literal></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28"> <block pos:line="8" pos:column="29">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">pid_t<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">tid<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><call><name pos:line="9" pos:column="21">syscall<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">SYS_gettid<pos:position pos:line="9" pos:column="39"/></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="41"/></decl_stmt>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">tid<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">==<pos:position pos:line="10" pos:column="19"/></operator> <operator pos:line="10" pos:column="20">-<pos:position pos:line="10" pos:column="21"/></operator><literal type="number" pos:line="10" pos:column="21">1<pos:position pos:line="10" pos:column="22"/></literal></expr>)<pos:position pos:line="10" pos:column="23"/></condition><then pos:line="10" pos:column="23">
            <block type="pseudo"><return pos:line="11" pos:column="13">return <expr><literal type="number" pos:line="11" pos:column="20">0<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></return></block></then></if>
        <return pos:line="12" pos:column="9">return <expr><call><name pos:line="12" pos:column="16">apr_snprintf<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">buf<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="34">buflen<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="42">"%"<pos:position pos:line="12" pos:column="45"/></literal><name pos:line="12" pos:column="45">APR_PID_T_FMT<pos:position pos:line="12" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="60">tid<pos:position pos:line="12" pos:column="63"/></name></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="65"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">APR_HAS_THREADS<pos:position pos:line="15" pos:column="20"/></name></expr></cpp:if>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name pos:line="16" pos:column="9">ap_mpm_query<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">AP_MPMQ_IS_THREADED<pos:position pos:line="16" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="43">&amp;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="44">result<pos:position pos:line="16" pos:column="50"/></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call> <operator pos:line="16" pos:column="52">==<pos:position pos:line="16" pos:column="54"/></operator> <name pos:line="16" pos:column="55">APR_SUCCESS<pos:position pos:line="16" pos:column="66"/></name>
        <operator pos:line="17" pos:column="9">&amp;&amp;<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="12">result<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">!=<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">AP_MPMQ_NOT_SUPPORTED<pos:position pos:line="17" pos:column="43"/></name></expr>)<pos:position pos:line="17" pos:column="44"/></condition><then pos:line="17" pos:column="44">
    <block pos:line="18" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">apr_os_thread_t<pos:position pos:line="19" pos:column="24"/></name></type> <name pos:line="19" pos:column="25">tid<pos:position pos:line="19" pos:column="28"/></name> <init pos:line="19" pos:column="29">= <expr><call><name pos:line="19" pos:column="31">apr_os_thread_current<pos:position pos:line="19" pos:column="52"/></name><argument_list pos:line="19" pos:column="52">()<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="55"/></decl_stmt>
        <return pos:line="20" pos:column="9">return <expr><call><name pos:line="20" pos:column="16">apr_snprintf<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">buf<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">buflen<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="42">"%pT"<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="49">&amp;<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="50">tid<pos:position pos:line="20" pos:column="53"/></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="23" pos:column="5">return <expr><literal type="number" pos:line="23" pos:column="12">0<pos:position pos:line="23" pos:column="13"/></literal></expr>;<pos:position pos:line="23" pos:column="14"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

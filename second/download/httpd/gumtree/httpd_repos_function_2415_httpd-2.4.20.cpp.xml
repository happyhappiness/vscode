<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2415_httpd-2.4.20.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">h2_response<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">create_response<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">h2_from_h1<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">from_h1<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">request_rec<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">r<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">clheader<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">ctype<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_table_t<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">headers<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <comment type="block" pos:line="6" pos:column="5">/*
     * Now that we are ready to send a response, we need to combine the two
     * header field tables into a single table.  If we don't do this, our
     * later attempts to set or unset a given fieldname might be bypassed.
     */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><call><name pos:line="11" pos:column="10">apr_is_empty_table<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name><name pos:line="11" pos:column="29">r<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">err_headers_out<pos:position pos:line="11" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="49"/></condition><then pos:line="11" pos:column="49"> <block pos:line="11" pos:column="50">{
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">r<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">headers_out<pos:position pos:line="12" pos:column="23"/></name></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <call><name pos:line="12" pos:column="26">apr_table_overlay<pos:position pos:line="12" pos:column="43"/></name><argument_list pos:line="12" pos:column="43">(<argument><expr><name><name pos:line="12" pos:column="44">r<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">-&gt;<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="47">pool<pos:position pos:line="12" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="53">r<pos:position pos:line="12" pos:column="54"/></name><operator pos:line="12" pos:column="54">-&gt;<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="56">err_headers_out<pos:position pos:line="12" pos:column="71"/></name></name></expr></argument>,
                                           <argument><expr><name><name pos:line="13" pos:column="44">r<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">-&gt;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="47">headers_out<pos:position pos:line="13" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">apr_table_clear<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name><name pos:line="14" pos:column="25">r<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">-&gt;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="28">err_headers_out<pos:position pos:line="14" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    
    <comment type="block" pos:line="17" pos:column="5">/*
     * Remove the 'Vary' header field if the client can't handle it.
     * Since this will have nasty effects on HTTP/1.1 caches, force
     * the response into HTTP/1.0 mode.
     */</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">apr_table_get<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name><name pos:line="22" pos:column="23">r<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">-&gt;<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="26">subprocess_env<pos:position pos:line="22" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="42">"force-no-vary"<pos:position pos:line="22" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call> <operator pos:line="22" pos:column="59">!=<pos:position pos:line="22" pos:column="61"/></operator> <name pos:line="22" pos:column="62">NULL<pos:position pos:line="22" pos:column="66"/></name></expr>)<pos:position pos:line="22" pos:column="67"/></condition><then pos:line="22" pos:column="67"> <block pos:line="22" pos:column="68">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">apr_table_unset<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name><name pos:line="23" pos:column="25">r<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">headers_out<pos:position pos:line="23" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="41">"Vary"<pos:position pos:line="23" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">r<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">proto_num<pos:position pos:line="24" pos:column="21"/></name></name> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <call><name pos:line="24" pos:column="24">HTTP_VERSION<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument><expr><literal type="number" pos:line="24" pos:column="37">1<pos:position pos:line="24" pos:column="38"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="24" pos:column="39">0<pos:position pos:line="24" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">apr_table_setn<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name><name pos:line="25" pos:column="24">r<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">-&gt;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="27">subprocess_env<pos:position pos:line="25" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="43">"force-response-1.0"<pos:position pos:line="25" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="65">"1"<pos:position pos:line="25" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then>
    <else pos:line="27" pos:column="5">else <block pos:line="27" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">fix_vary<pos:position pos:line="28" pos:column="17"/></name><argument_list pos:line="28" pos:column="17">(<argument><expr><name pos:line="28" pos:column="18">r<pos:position pos:line="28" pos:column="19"/></name></expr></argument>)<pos:position pos:line="28" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></else></if>
    
    <comment type="block" pos:line="31" pos:column="5">/*
     * Now remove any ETag response header field if earlier processing
     * says so (such as a 'FileETag None' directive).
     */</comment>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><call><name pos:line="35" pos:column="9">apr_table_get<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name><name pos:line="35" pos:column="23">r<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">-&gt;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="26">notes<pos:position pos:line="35" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="33">"no-etag"<pos:position pos:line="35" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call> <operator pos:line="35" pos:column="44">!=<pos:position pos:line="35" pos:column="46"/></operator> <name pos:line="35" pos:column="47">NULL<pos:position pos:line="35" pos:column="51"/></name></expr>)<pos:position pos:line="35" pos:column="52"/></condition><then pos:line="35" pos:column="52"> <block pos:line="35" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">apr_table_unset<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name><name pos:line="36" pos:column="25">r<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">-&gt;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="28">headers_out<pos:position pos:line="36" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="41">"ETag"<pos:position pos:line="36" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
    
    <comment type="block" pos:line="39" pos:column="5">/* determine the protocol and whether we should use keepalives. */</comment>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">ap_set_keepalive<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><name pos:line="40" pos:column="22">r<pos:position pos:line="40" pos:column="23"/></name></expr></argument>)<pos:position pos:line="40" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>
    
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name><name pos:line="42" pos:column="9">r<pos:position pos:line="42" pos:column="10"/></name><operator pos:line="42" pos:column="10">-&gt;<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="12">chunked<pos:position pos:line="42" pos:column="19"/></name></name></expr>)<pos:position pos:line="42" pos:column="20"/></condition><then pos:line="42" pos:column="20"> <block pos:line="42" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">apr_table_unset<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><name><name pos:line="43" pos:column="25">r<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">-&gt;<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="28">headers_out<pos:position pos:line="43" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="41">"Content-Length"<pos:position pos:line="43" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name pos:line="46" pos:column="5">ctype<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">=<pos:position pos:line="46" pos:column="12"/></operator> <call><name pos:line="46" pos:column="13">ap_make_content_type<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">r<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="37">r<pos:position pos:line="46" pos:column="38"/></name><operator pos:line="46" pos:column="38">-&gt;<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="40">content_type<pos:position pos:line="46" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="54"/></expr_stmt>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">ctype<pos:position pos:line="47" pos:column="14"/></name></expr>)<pos:position pos:line="47" pos:column="15"/></condition><then pos:line="47" pos:column="15"> <block pos:line="47" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">apr_table_setn<pos:position pos:line="48" pos:column="23"/></name><argument_list pos:line="48" pos:column="23">(<argument><expr><name><name pos:line="48" pos:column="24">r<pos:position pos:line="48" pos:column="25"/></name><operator pos:line="48" pos:column="25">-&gt;<pos:position pos:line="48" pos:column="30"/></operator><name pos:line="48" pos:column="27">headers_out<pos:position pos:line="48" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="40">"Content-Type"<pos:position pos:line="48" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="56">ctype<pos:position pos:line="48" pos:column="61"/></name></expr></argument>)<pos:position pos:line="48" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name><name pos:line="51" pos:column="9">r<pos:position pos:line="51" pos:column="10"/></name><operator pos:line="51" pos:column="10">-&gt;<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="12">content_encoding<pos:position pos:line="51" pos:column="28"/></name></name></expr>)<pos:position pos:line="51" pos:column="29"/></condition><then pos:line="51" pos:column="29"> <block pos:line="51" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">apr_table_setn<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument><expr><name><name pos:line="52" pos:column="24">r<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">-&gt;<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="27">headers_out<pos:position pos:line="52" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="40">"Content-Encoding"<pos:position pos:line="52" pos:column="58"/></literal></expr></argument>,
                       <argument><expr><name><name pos:line="53" pos:column="24">r<pos:position pos:line="53" pos:column="25"/></name><operator pos:line="53" pos:column="25">-&gt;<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="27">content_encoding<pos:position pos:line="53" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>
    
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><operator pos:line="56" pos:column="9">!<pos:position pos:line="56" pos:column="10"/></operator><call><name pos:line="56" pos:column="10">apr_is_empty_array<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">(<argument><expr><name><name pos:line="56" pos:column="29">r<pos:position pos:line="56" pos:column="30"/></name><operator pos:line="56" pos:column="30">-&gt;<pos:position pos:line="56" pos:column="35"/></operator><name pos:line="56" pos:column="32">content_languages<pos:position pos:line="56" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="51"/></condition><then pos:line="56" pos:column="51"> <block pos:line="56" pos:column="52">{
        <decl_stmt><decl><type><name pos:line="57" pos:column="9">unsigned<pos:position pos:line="57" pos:column="17"/></name> <name pos:line="57" pos:column="18">int<pos:position pos:line="57" pos:column="21"/></name></type> <name pos:line="57" pos:column="22">i<pos:position pos:line="57" pos:column="23"/></name></decl>;<pos:position pos:line="57" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="58" pos:column="9">char<pos:position pos:line="58" pos:column="13"/></name> <modifier pos:line="58" pos:column="14">*<pos:position pos:line="58" pos:column="15"/></modifier></type><name pos:line="58" pos:column="15">token<pos:position pos:line="58" pos:column="20"/></name></decl>;<pos:position pos:line="58" pos:column="21"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="59" pos:column="9">char<pos:position pos:line="59" pos:column="13"/></name> <modifier pos:line="59" pos:column="14">*<pos:position pos:line="59" pos:column="15"/></modifier><modifier pos:line="59" pos:column="15">*<pos:position pos:line="59" pos:column="16"/></modifier></type><name pos:line="59" pos:column="16">languages<pos:position pos:line="59" pos:column="25"/></name> <init pos:line="59" pos:column="26">= <expr><operator pos:line="59" pos:column="28">(<pos:position pos:line="59" pos:column="29"/></operator><name pos:line="59" pos:column="29">char<pos:position pos:line="59" pos:column="33"/></name> <operator pos:line="59" pos:column="34">*<pos:position pos:line="59" pos:column="35"/></operator><operator pos:line="59" pos:column="35">*<pos:position pos:line="59" pos:column="36"/></operator><operator pos:line="59" pos:column="36">)<pos:position pos:line="59" pos:column="37"/></operator><operator pos:line="59" pos:column="37">(<pos:position pos:line="59" pos:column="38"/></operator><name><name pos:line="59" pos:column="38">r<pos:position pos:line="59" pos:column="39"/></name><operator pos:line="59" pos:column="39">-&gt;<pos:position pos:line="59" pos:column="44"/></operator><name pos:line="59" pos:column="41">content_languages<pos:position pos:line="59" pos:column="58"/></name><operator pos:line="59" pos:column="58">-&gt;<pos:position pos:line="59" pos:column="63"/></operator><name pos:line="59" pos:column="60">elts<pos:position pos:line="59" pos:column="64"/></name></name><operator pos:line="59" pos:column="64">)<pos:position pos:line="59" pos:column="65"/></operator></expr></init></decl>;<pos:position pos:line="59" pos:column="66"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="60" pos:column="9">const<pos:position pos:line="60" pos:column="14"/></specifier> <name pos:line="60" pos:column="15">char<pos:position pos:line="60" pos:column="19"/></name> <modifier pos:line="60" pos:column="20">*<pos:position pos:line="60" pos:column="21"/></modifier></type><name pos:line="60" pos:column="21">field<pos:position pos:line="60" pos:column="26"/></name> <init pos:line="60" pos:column="27">= <expr><call><name pos:line="60" pos:column="29">apr_table_get<pos:position pos:line="60" pos:column="42"/></name><argument_list pos:line="60" pos:column="42">(<argument><expr><name><name pos:line="60" pos:column="43">r<pos:position pos:line="60" pos:column="44"/></name><operator pos:line="60" pos:column="44">-&gt;<pos:position pos:line="60" pos:column="49"/></operator><name pos:line="60" pos:column="46">headers_out<pos:position pos:line="60" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="59">"Content-Language"<pos:position pos:line="60" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="60" pos:column="79"/></decl_stmt>
        
        <while pos:line="62" pos:column="9">while <condition pos:line="62" pos:column="15">(<expr><name pos:line="62" pos:column="16">field<pos:position pos:line="62" pos:column="21"/></name> <operator pos:line="62" pos:column="22">&amp;&amp;<pos:position pos:line="62" pos:column="32"/></operator> <operator pos:line="62" pos:column="25">(<pos:position pos:line="62" pos:column="26"/></operator><name pos:line="62" pos:column="26">token<pos:position pos:line="62" pos:column="31"/></name> <operator pos:line="62" pos:column="32">=<pos:position pos:line="62" pos:column="33"/></operator> <call><name pos:line="62" pos:column="34">ap_get_list_item<pos:position pos:line="62" pos:column="50"/></name><argument_list pos:line="62" pos:column="50">(<argument><expr><name><name pos:line="62" pos:column="51">r<pos:position pos:line="62" pos:column="52"/></name><operator pos:line="62" pos:column="52">-&gt;<pos:position pos:line="62" pos:column="57"/></operator><name pos:line="62" pos:column="54">pool<pos:position pos:line="62" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="60">&amp;<pos:position pos:line="62" pos:column="65"/></operator><name pos:line="62" pos:column="61">field<pos:position pos:line="62" pos:column="66"/></name></expr></argument>)<pos:position pos:line="62" pos:column="67"/></argument_list></call><operator pos:line="62" pos:column="67">)<pos:position pos:line="62" pos:column="68"/></operator> <operator pos:line="62" pos:column="69">!=<pos:position pos:line="62" pos:column="71"/></operator> <name pos:line="62" pos:column="72">NULL<pos:position pos:line="62" pos:column="76"/></name></expr>)<pos:position pos:line="62" pos:column="77"/></condition> <block pos:line="62" pos:column="78">{
            <for pos:line="63" pos:column="13">for <control pos:line="63" pos:column="17">(<init><expr><name pos:line="63" pos:column="18">i<pos:position pos:line="63" pos:column="19"/></name> <operator pos:line="63" pos:column="20">=<pos:position pos:line="63" pos:column="21"/></operator> <literal type="number" pos:line="63" pos:column="22">0<pos:position pos:line="63" pos:column="23"/></literal></expr>;<pos:position pos:line="63" pos:column="24"/></init> <condition><expr><name pos:line="63" pos:column="25">i<pos:position pos:line="63" pos:column="26"/></name> <operator pos:line="63" pos:column="27">&lt;<pos:position pos:line="63" pos:column="31"/></operator> <name><name pos:line="63" pos:column="29">r<pos:position pos:line="63" pos:column="30"/></name><operator pos:line="63" pos:column="30">-&gt;<pos:position pos:line="63" pos:column="35"/></operator><name pos:line="63" pos:column="32">content_languages<pos:position pos:line="63" pos:column="49"/></name><operator pos:line="63" pos:column="49">-&gt;<pos:position pos:line="63" pos:column="54"/></operator><name pos:line="63" pos:column="51">nelts<pos:position pos:line="63" pos:column="56"/></name></name></expr>;<pos:position pos:line="63" pos:column="57"/></condition> <incr><expr><operator pos:line="63" pos:column="58">++<pos:position pos:line="63" pos:column="60"/></operator><name pos:line="63" pos:column="60">i<pos:position pos:line="63" pos:column="61"/></name></expr></incr>)<pos:position pos:line="63" pos:column="62"/></control> <block pos:line="63" pos:column="63">{
                <if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><operator pos:line="64" pos:column="21">!<pos:position pos:line="64" pos:column="22"/></operator><call><name pos:line="64" pos:column="22">apr_strnatcasecmp<pos:position pos:line="64" pos:column="39"/></name><argument_list pos:line="64" pos:column="39">(<argument><expr><name pos:line="64" pos:column="40">token<pos:position pos:line="64" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="47">languages<pos:position pos:line="64" pos:column="56"/></name><index pos:line="64" pos:column="56">[<expr><name pos:line="64" pos:column="57">i<pos:position pos:line="64" pos:column="58"/></name></expr>]<pos:position pos:line="64" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="64" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="61"/></condition><then pos:line="64" pos:column="61">
                    <block type="pseudo"><break pos:line="65" pos:column="21">break;<pos:position pos:line="65" pos:column="27"/></break></block></then></if>
            }<pos:position pos:line="66" pos:column="14"/></block></for>
            <if pos:line="67" pos:column="13">if <condition pos:line="67" pos:column="16">(<expr><name pos:line="67" pos:column="17">i<pos:position pos:line="67" pos:column="18"/></name> <operator pos:line="67" pos:column="19">==<pos:position pos:line="67" pos:column="21"/></operator> <name><name pos:line="67" pos:column="22">r<pos:position pos:line="67" pos:column="23"/></name><operator pos:line="67" pos:column="23">-&gt;<pos:position pos:line="67" pos:column="28"/></operator><name pos:line="67" pos:column="25">content_languages<pos:position pos:line="67" pos:column="42"/></name><operator pos:line="67" pos:column="42">-&gt;<pos:position pos:line="67" pos:column="47"/></operator><name pos:line="67" pos:column="44">nelts<pos:position pos:line="67" pos:column="49"/></name></name></expr>)<pos:position pos:line="67" pos:column="50"/></condition><then pos:line="67" pos:column="50"> <block pos:line="67" pos:column="51">{
                <expr_stmt><expr><operator pos:line="68" pos:column="17">*<pos:position pos:line="68" pos:column="18"/></operator><operator pos:line="68" pos:column="18">(<pos:position pos:line="68" pos:column="19"/></operator><operator pos:line="68" pos:column="19">(<pos:position pos:line="68" pos:column="20"/></operator><name pos:line="68" pos:column="20">char<pos:position pos:line="68" pos:column="24"/></name> <operator pos:line="68" pos:column="25">*<pos:position pos:line="68" pos:column="26"/></operator><operator pos:line="68" pos:column="26">*<pos:position pos:line="68" pos:column="27"/></operator><operator pos:line="68" pos:column="27">)<pos:position pos:line="68" pos:column="28"/></operator> <call><name pos:line="68" pos:column="29">apr_array_push<pos:position pos:line="68" pos:column="43"/></name><argument_list pos:line="68" pos:column="43">(<argument><expr><name><name pos:line="68" pos:column="44">r<pos:position pos:line="68" pos:column="45"/></name><operator pos:line="68" pos:column="45">-&gt;<pos:position pos:line="68" pos:column="50"/></operator><name pos:line="68" pos:column="47">content_languages<pos:position pos:line="68" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="65"/></argument_list></call><operator pos:line="68" pos:column="65">)<pos:position pos:line="68" pos:column="66"/></operator> <operator pos:line="68" pos:column="67">=<pos:position pos:line="68" pos:column="68"/></operator> <name pos:line="68" pos:column="69">token<pos:position pos:line="68" pos:column="74"/></name></expr>;<pos:position pos:line="68" pos:column="75"/></expr_stmt>
            }<pos:position pos:line="69" pos:column="14"/></block></then></if>
        }<pos:position pos:line="70" pos:column="10"/></block></while>
        
        <expr_stmt><expr><name pos:line="72" pos:column="9">field<pos:position pos:line="72" pos:column="14"/></name> <operator pos:line="72" pos:column="15">=<pos:position pos:line="72" pos:column="16"/></operator> <call><name pos:line="72" pos:column="17">apr_array_pstrcat<pos:position pos:line="72" pos:column="34"/></name><argument_list pos:line="72" pos:column="34">(<argument><expr><name><name pos:line="72" pos:column="35">r<pos:position pos:line="72" pos:column="36"/></name><operator pos:line="72" pos:column="36">-&gt;<pos:position pos:line="72" pos:column="41"/></operator><name pos:line="72" pos:column="38">pool<pos:position pos:line="72" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="44">r<pos:position pos:line="72" pos:column="45"/></name><operator pos:line="72" pos:column="45">-&gt;<pos:position pos:line="72" pos:column="50"/></operator><name pos:line="72" pos:column="47">content_languages<pos:position pos:line="72" pos:column="64"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="72" pos:column="66">','<pos:position pos:line="72" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">apr_table_setn<pos:position pos:line="73" pos:column="23"/></name><argument_list pos:line="73" pos:column="23">(<argument><expr><name><name pos:line="73" pos:column="24">r<pos:position pos:line="73" pos:column="25"/></name><operator pos:line="73" pos:column="25">-&gt;<pos:position pos:line="73" pos:column="30"/></operator><name pos:line="73" pos:column="27">headers_out<pos:position pos:line="73" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="40">"Content-Language"<pos:position pos:line="73" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="60">field<pos:position pos:line="73" pos:column="65"/></name></expr></argument>)<pos:position pos:line="73" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>
    
    <comment type="block" pos:line="76" pos:column="5">/*
     * Control cachability for non-cachable responses if not already set by
     * some other part of the server configuration.
     */</comment>
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><name><name pos:line="80" pos:column="9">r<pos:position pos:line="80" pos:column="10"/></name><operator pos:line="80" pos:column="10">-&gt;<pos:position pos:line="80" pos:column="15"/></operator><name pos:line="80" pos:column="12">no_cache<pos:position pos:line="80" pos:column="20"/></name></name> <operator pos:line="80" pos:column="21">&amp;&amp;<pos:position pos:line="80" pos:column="31"/></operator> <operator pos:line="80" pos:column="24">!<pos:position pos:line="80" pos:column="25"/></operator><call><name pos:line="80" pos:column="25">apr_table_get<pos:position pos:line="80" pos:column="38"/></name><argument_list pos:line="80" pos:column="38">(<argument><expr><name><name pos:line="80" pos:column="39">r<pos:position pos:line="80" pos:column="40"/></name><operator pos:line="80" pos:column="40">-&gt;<pos:position pos:line="80" pos:column="45"/></operator><name pos:line="80" pos:column="42">headers_out<pos:position pos:line="80" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="55">"Expires"<pos:position pos:line="80" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="66"/></condition><then pos:line="80" pos:column="66"> <block pos:line="80" pos:column="67">{
        <decl_stmt><decl><type><name pos:line="81" pos:column="9">char<pos:position pos:line="81" pos:column="13"/></name> <modifier pos:line="81" pos:column="14">*<pos:position pos:line="81" pos:column="15"/></modifier></type><name pos:line="81" pos:column="15">date<pos:position pos:line="81" pos:column="19"/></name> <init pos:line="81" pos:column="20">= <expr><call><name pos:line="81" pos:column="22">apr_palloc<pos:position pos:line="81" pos:column="32"/></name><argument_list pos:line="81" pos:column="32">(<argument><expr><name><name pos:line="81" pos:column="33">r<pos:position pos:line="81" pos:column="34"/></name><operator pos:line="81" pos:column="34">-&gt;<pos:position pos:line="81" pos:column="39"/></operator><name pos:line="81" pos:column="36">pool<pos:position pos:line="81" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="42">APR_RFC822_DATE_LEN<pos:position pos:line="81" pos:column="61"/></name></expr></argument>)<pos:position pos:line="81" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="81" pos:column="63"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">ap_recent_rfc822_date<pos:position pos:line="82" pos:column="30"/></name><argument_list pos:line="82" pos:column="30">(<argument><expr><name pos:line="82" pos:column="31">date<pos:position pos:line="82" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="37">r<pos:position pos:line="82" pos:column="38"/></name><operator pos:line="82" pos:column="38">-&gt;<pos:position pos:line="82" pos:column="43"/></operator><name pos:line="82" pos:column="40">request_time<pos:position pos:line="82" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">apr_table_addn<pos:position pos:line="83" pos:column="23"/></name><argument_list pos:line="83" pos:column="23">(<argument><expr><name><name pos:line="83" pos:column="24">r<pos:position pos:line="83" pos:column="25"/></name><operator pos:line="83" pos:column="25">-&gt;<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="27">headers_out<pos:position pos:line="83" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="40">"Expires"<pos:position pos:line="83" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="51">date<pos:position pos:line="83" pos:column="55"/></name></expr></argument>)<pos:position pos:line="83" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>
    
    <comment type="block" pos:line="86" pos:column="5">/* This is a hack, but I can't find anyway around it.  The idea is that
     * we don't want to send out 0 Content-Lengths if it is a head request.
     * This happens when modules try to outsmart the server, and return
     * if they see a HEAD request.  Apache 1.3 handlers were supposed to
     * just return in that situation, and the core handled the HEAD.  In
     * 2.0, if a handler returns, then the core sends an EOS bucket down
     * the filter stack, and the content-length filter computes a C-L of
     * zero and that gets put in the headers, and we end up sending a
     * zero C-L to the client.  We can't just remove the C-L filter,
     * because well behaved 2.0 handlers will send their data down the stack,
     * and we will compute a real C-L for the head request. RBB
     */</comment>
    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><name><name pos:line="98" pos:column="9">r<pos:position pos:line="98" pos:column="10"/></name><operator pos:line="98" pos:column="10">-&gt;<pos:position pos:line="98" pos:column="15"/></operator><name pos:line="98" pos:column="12">header_only<pos:position pos:line="98" pos:column="23"/></name></name>
        <operator pos:line="99" pos:column="9">&amp;&amp;<pos:position pos:line="99" pos:column="19"/></operator> <operator pos:line="99" pos:column="12">(<pos:position pos:line="99" pos:column="13"/></operator><name pos:line="99" pos:column="13">clheader<pos:position pos:line="99" pos:column="21"/></name> <operator pos:line="99" pos:column="22">=<pos:position pos:line="99" pos:column="23"/></operator> <call><name pos:line="99" pos:column="24">apr_table_get<pos:position pos:line="99" pos:column="37"/></name><argument_list pos:line="99" pos:column="37">(<argument><expr><name><name pos:line="99" pos:column="38">r<pos:position pos:line="99" pos:column="39"/></name><operator pos:line="99" pos:column="39">-&gt;<pos:position pos:line="99" pos:column="44"/></operator><name pos:line="99" pos:column="41">headers_out<pos:position pos:line="99" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="54">"Content-Length"<pos:position pos:line="99" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="71"/></argument_list></call><operator pos:line="99" pos:column="71">)<pos:position pos:line="99" pos:column="72"/></operator>
        <operator pos:line="100" pos:column="9">&amp;&amp;<pos:position pos:line="100" pos:column="19"/></operator> <operator pos:line="100" pos:column="12">!<pos:position pos:line="100" pos:column="13"/></operator><call><name pos:line="100" pos:column="13">strcmp<pos:position pos:line="100" pos:column="19"/></name><argument_list pos:line="100" pos:column="19">(<argument><expr><name pos:line="100" pos:column="20">clheader<pos:position pos:line="100" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="30">"0"<pos:position pos:line="100" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="100" pos:column="35"/></condition><then pos:line="100" pos:column="35"> <block pos:line="100" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="101" pos:column="9">apr_table_unset<pos:position pos:line="101" pos:column="24"/></name><argument_list pos:line="101" pos:column="24">(<argument><expr><name><name pos:line="101" pos:column="25">r<pos:position pos:line="101" pos:column="26"/></name><operator pos:line="101" pos:column="26">-&gt;<pos:position pos:line="101" pos:column="31"/></operator><name pos:line="101" pos:column="28">headers_out<pos:position pos:line="101" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="41">"Content-Length"<pos:position pos:line="101" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="102" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name pos:line="104" pos:column="5">headers<pos:position pos:line="104" pos:column="12"/></name> <operator pos:line="104" pos:column="13">=<pos:position pos:line="104" pos:column="14"/></operator> <call><name pos:line="104" pos:column="15">apr_table_make<pos:position pos:line="104" pos:column="29"/></name><argument_list pos:line="104" pos:column="29">(<argument><expr><name><name pos:line="104" pos:column="30">r<pos:position pos:line="104" pos:column="31"/></name><operator pos:line="104" pos:column="31">-&gt;<pos:position pos:line="104" pos:column="36"/></operator><name pos:line="104" pos:column="33">pool<pos:position pos:line="104" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="104" pos:column="39">10<pos:position pos:line="104" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="43"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="106" pos:column="5">set_basic_http_header<pos:position pos:line="106" pos:column="26"/></name><argument_list pos:line="106" pos:column="26">(<argument><expr><name pos:line="106" pos:column="27">r<pos:position pos:line="106" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="30">headers<pos:position pos:line="106" pos:column="37"/></name></expr></argument>)<pos:position pos:line="106" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="39"/></expr_stmt>
    <if pos:line="107" pos:column="5">if <condition pos:line="107" pos:column="8">(<expr><name><name pos:line="107" pos:column="9">r<pos:position pos:line="107" pos:column="10"/></name><operator pos:line="107" pos:column="10">-&gt;<pos:position pos:line="107" pos:column="15"/></operator><name pos:line="107" pos:column="12">status<pos:position pos:line="107" pos:column="18"/></name></name> <operator pos:line="107" pos:column="19">==<pos:position pos:line="107" pos:column="21"/></operator> <name pos:line="107" pos:column="22">HTTP_NOT_MODIFIED<pos:position pos:line="107" pos:column="39"/></name></expr>)<pos:position pos:line="107" pos:column="40"/></condition><then pos:line="107" pos:column="40"> <block pos:line="107" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="108" pos:column="9">apr_table_do<pos:position pos:line="108" pos:column="21"/></name><argument_list pos:line="108" pos:column="21">(<argument><expr><operator pos:line="108" pos:column="22">(<pos:position pos:line="108" pos:column="23"/></operator><call><call><name pos:line="108" pos:column="23">int<pos:position pos:line="108" pos:column="26"/></name> <argument_list pos:line="108" pos:column="27">(<argument><expr><operator pos:line="108" pos:column="28">*<pos:position pos:line="108" pos:column="29"/></operator></expr></argument>)<pos:position pos:line="108" pos:column="30"/></argument_list></call><argument_list pos:line="108" pos:column="30">(<argument><expr><name pos:line="108" pos:column="31">void<pos:position pos:line="108" pos:column="35"/></name> <operator pos:line="108" pos:column="36">*<pos:position pos:line="108" pos:column="37"/></operator></expr></argument>, <argument><expr><specifier pos:line="108" pos:column="39">const<pos:position pos:line="108" pos:column="44"/></specifier> <name pos:line="108" pos:column="45">char<pos:position pos:line="108" pos:column="49"/></name> <operator pos:line="108" pos:column="50">*<pos:position pos:line="108" pos:column="51"/></operator></expr></argument>, <argument><expr><specifier pos:line="108" pos:column="53">const<pos:position pos:line="108" pos:column="58"/></specifier> <name pos:line="108" pos:column="59">char<pos:position pos:line="108" pos:column="63"/></name> <operator pos:line="108" pos:column="64">*<pos:position pos:line="108" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="108" pos:column="66"/></argument_list></call><operator pos:line="108" pos:column="66">)<pos:position pos:line="108" pos:column="67"/></operator> <name pos:line="108" pos:column="68">copy_header<pos:position pos:line="108" pos:column="79"/></name></expr></argument>,
                     <argument><expr><operator pos:line="109" pos:column="22">(<pos:position pos:line="109" pos:column="23"/></operator><name pos:line="109" pos:column="23">void<pos:position pos:line="109" pos:column="27"/></name> <operator pos:line="109" pos:column="28">*<pos:position pos:line="109" pos:column="29"/></operator><operator pos:line="109" pos:column="29">)<pos:position pos:line="109" pos:column="30"/></operator> <name pos:line="109" pos:column="31">headers<pos:position pos:line="109" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="40">r<pos:position pos:line="109" pos:column="41"/></name><operator pos:line="109" pos:column="41">-&gt;<pos:position pos:line="109" pos:column="46"/></operator><name pos:line="109" pos:column="43">headers_out<pos:position pos:line="109" pos:column="54"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="110" pos:column="22">"ETag"<pos:position pos:line="110" pos:column="28"/></literal></expr></argument>,
                     <argument><expr><literal type="string" pos:line="111" pos:column="22">"Content-Location"<pos:position pos:line="111" pos:column="40"/></literal></expr></argument>,
                     <argument><expr><literal type="string" pos:line="112" pos:column="22">"Expires"<pos:position pos:line="112" pos:column="31"/></literal></expr></argument>,
                     <argument><expr><literal type="string" pos:line="113" pos:column="22">"Cache-Control"<pos:position pos:line="113" pos:column="37"/></literal></expr></argument>,
                     <argument><expr><literal type="string" pos:line="114" pos:column="22">"Vary"<pos:position pos:line="114" pos:column="28"/></literal></expr></argument>,
                     <argument><expr><literal type="string" pos:line="115" pos:column="22">"Warning"<pos:position pos:line="115" pos:column="31"/></literal></expr></argument>,
                     <argument><expr><literal type="string" pos:line="116" pos:column="22">"WWW-Authenticate"<pos:position pos:line="116" pos:column="40"/></literal></expr></argument>,
                     <argument><expr><literal type="string" pos:line="117" pos:column="22">"Proxy-Authenticate"<pos:position pos:line="117" pos:column="42"/></literal></expr></argument>,
                     <argument><expr><literal type="string" pos:line="118" pos:column="22">"Set-Cookie"<pos:position pos:line="118" pos:column="34"/></literal></expr></argument>,
                     <argument><expr><literal type="string" pos:line="119" pos:column="22">"Set-Cookie2"<pos:position pos:line="119" pos:column="35"/></literal></expr></argument>,
                     <argument><expr><name pos:line="120" pos:column="22">NULL<pos:position pos:line="120" pos:column="26"/></name></expr></argument>)<pos:position pos:line="120" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="121" pos:column="6"/></block></then>
    <else pos:line="122" pos:column="5">else <block pos:line="122" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="123" pos:column="9">apr_table_do<pos:position pos:line="123" pos:column="21"/></name><argument_list pos:line="123" pos:column="21">(<argument><expr><operator pos:line="123" pos:column="22">(<pos:position pos:line="123" pos:column="23"/></operator><call><call><name pos:line="123" pos:column="23">int<pos:position pos:line="123" pos:column="26"/></name> <argument_list pos:line="123" pos:column="27">(<argument><expr><operator pos:line="123" pos:column="28">*<pos:position pos:line="123" pos:column="29"/></operator></expr></argument>)<pos:position pos:line="123" pos:column="30"/></argument_list></call><argument_list pos:line="123" pos:column="30">(<argument><expr><name pos:line="123" pos:column="31">void<pos:position pos:line="123" pos:column="35"/></name> <operator pos:line="123" pos:column="36">*<pos:position pos:line="123" pos:column="37"/></operator></expr></argument>, <argument><expr><specifier pos:line="123" pos:column="39">const<pos:position pos:line="123" pos:column="44"/></specifier> <name pos:line="123" pos:column="45">char<pos:position pos:line="123" pos:column="49"/></name> <operator pos:line="123" pos:column="50">*<pos:position pos:line="123" pos:column="51"/></operator></expr></argument>, <argument><expr><specifier pos:line="123" pos:column="53">const<pos:position pos:line="123" pos:column="58"/></specifier> <name pos:line="123" pos:column="59">char<pos:position pos:line="123" pos:column="63"/></name> <operator pos:line="123" pos:column="64">*<pos:position pos:line="123" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="123" pos:column="66"/></argument_list></call><operator pos:line="123" pos:column="66">)<pos:position pos:line="123" pos:column="67"/></operator> <name pos:line="123" pos:column="68">copy_header<pos:position pos:line="123" pos:column="79"/></name></expr></argument>,
                     <argument><expr><operator pos:line="124" pos:column="22">(<pos:position pos:line="124" pos:column="23"/></operator><name pos:line="124" pos:column="23">void<pos:position pos:line="124" pos:column="27"/></name> <operator pos:line="124" pos:column="28">*<pos:position pos:line="124" pos:column="29"/></operator><operator pos:line="124" pos:column="29">)<pos:position pos:line="124" pos:column="30"/></operator> <name pos:line="124" pos:column="31">headers<pos:position pos:line="124" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="124" pos:column="40">r<pos:position pos:line="124" pos:column="41"/></name><operator pos:line="124" pos:column="41">-&gt;<pos:position pos:line="124" pos:column="46"/></operator><name pos:line="124" pos:column="43">headers_out<pos:position pos:line="124" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="56">NULL<pos:position pos:line="124" pos:column="60"/></name></expr></argument>)<pos:position pos:line="124" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="125" pos:column="6"/></block></else></if>
    
    <return pos:line="127" pos:column="5">return <expr><call><name pos:line="127" pos:column="12">h2_response_rcreate<pos:position pos:line="127" pos:column="31"/></name><argument_list pos:line="127" pos:column="31">(<argument><expr><name><name pos:line="127" pos:column="32">from_h1<pos:position pos:line="127" pos:column="39"/></name><operator pos:line="127" pos:column="39">-&gt;<pos:position pos:line="127" pos:column="44"/></operator><name pos:line="127" pos:column="41">stream_id<pos:position pos:line="127" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="52">r<pos:position pos:line="127" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="55">headers<pos:position pos:line="127" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="64">r<pos:position pos:line="127" pos:column="65"/></name><operator pos:line="127" pos:column="65">-&gt;<pos:position pos:line="127" pos:column="70"/></operator><name pos:line="127" pos:column="67">pool<pos:position pos:line="127" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="73"/></return>
}<pos:position pos:line="128" pos:column="2"/></block></function></unit>

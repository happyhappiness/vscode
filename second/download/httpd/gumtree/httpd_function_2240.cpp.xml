<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_2240.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name> <name pos:line="1" pos:column="21">__stdcall<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">winnt_accept<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">void<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">lr_<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ap_listen_rec<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">lr<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><operator pos:line="3" pos:column="25">(<pos:position pos:line="3" pos:column="26"/></operator><name pos:line="3" pos:column="26">ap_listen_rec<pos:position pos:line="3" pos:column="39"/></name> <operator pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></operator><operator pos:line="3" pos:column="41">)<pos:position pos:line="3" pos:column="42"/></operator><name pos:line="3" pos:column="42">lr_<pos:position pos:line="3" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_os_sock_info_t<pos:position pos:line="4" pos:column="23"/></name></type> <name pos:line="4" pos:column="24">sockinfo<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">PCOMP_CONTEXT<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">context<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">NULL<pos:position pos:line="5" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">DWORD<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">BytesRead<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">SOCKET<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">nlsd<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">rv<pos:position pos:line="8" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="13">err_count<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><literal type="number" pos:line="8" pos:column="25">0<pos:position pos:line="8" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">APR_HAVE_IPV6<pos:position pos:line="9" pos:column="18"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">SOCKADDR_STORAGE<pos:position pos:line="10" pos:column="21"/></name></type> <name pos:line="10" pos:column="22">ss_listen<pos:position pos:line="10" pos:column="31"/></name></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">namelen<pos:position pos:line="11" pos:column="16"/></name> <init pos:line="11" pos:column="17">= <expr><sizeof pos:line="11" pos:column="19">sizeof<argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">ss_listen<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="11" pos:column="37"/></decl_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">apr_os_sock_get<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><operator pos:line="14" pos:column="21">&amp;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="22">nlsd<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="28">lr<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">-&gt;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="32">sd<pos:position pos:line="14" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>

<cpp:if pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">if<pos:position pos:line="16" pos:column="4"/></cpp:directive> <expr><name pos:line="16" pos:column="5">APR_HAVE_IPV6<pos:position pos:line="16" pos:column="18"/></name></expr></cpp:if>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">getsockname<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">nlsd<pos:position pos:line="17" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="27">(<pos:position pos:line="17" pos:column="28"/></operator>struct <name pos:line="17" pos:column="35">sockaddr<pos:position pos:line="17" pos:column="43"/></name> <operator pos:line="17" pos:column="44">*<pos:position pos:line="17" pos:column="45"/></operator><operator pos:line="17" pos:column="45">)<pos:position pos:line="17" pos:column="46"/></operator><operator pos:line="17" pos:column="46">&amp;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="47">ss_listen<pos:position pos:line="17" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="58">&amp;<pos:position pos:line="17" pos:column="63"/></operator><name pos:line="17" pos:column="59">namelen<pos:position pos:line="17" pos:column="66"/></name></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call> <operator pos:line="17" pos:column="68">==<pos:position pos:line="17" pos:column="70"/></operator> <name pos:line="17" pos:column="71">SOCKET_ERROR<pos:position pos:line="17" pos:column="83"/></name></expr>)<pos:position pos:line="17" pos:column="84"/></condition><then pos:line="17" pos:column="84"> <block pos:line="17" pos:column="85">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">ap_log_error<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">APLOG_MARK<pos:position pos:line="18" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="18" pos:column="33">APLOG_ERR<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="44">apr_get_netos_error<pos:position pos:line="18" pos:column="63"/></name><argument_list pos:line="18" pos:column="63">()<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="18" pos:column="67">ap_server_conf<pos:position pos:line="18" pos:column="81"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="19" pos:column="21">"winnt_accept: getsockname error on listening socket, is IPv6 available?"<pos:position pos:line="19" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="96"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><literal type="number" pos:line="20" pos:column="16">1<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></return>
   }<pos:position pos:line="21" pos:column="5"/></block></then></if>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">ap_log_error<pos:position pos:line="24" pos:column="17"/></name><argument_list pos:line="24" pos:column="17">(<argument><expr><name pos:line="24" pos:column="18">APLOG_MARK<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="30">APLOG_NOTICE<pos:position pos:line="24" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="44">0<pos:position pos:line="24" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="47">ap_server_conf<pos:position pos:line="24" pos:column="61"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="25" pos:column="18">"Child %lu: Starting thread to listen on port %d."<pos:position pos:line="25" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="70">my_pid<pos:position pos:line="25" pos:column="76"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="78">lr<pos:position pos:line="25" pos:column="80"/></name><operator pos:line="25" pos:column="80">-&gt;<pos:position pos:line="25" pos:column="85"/></operator><name pos:line="25" pos:column="82">bind_addr<pos:position pos:line="25" pos:column="91"/></name><operator pos:line="25" pos:column="91">-&gt;<pos:position pos:line="25" pos:column="96"/></operator><name pos:line="25" pos:column="93">port<pos:position pos:line="25" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="99"/></expr_stmt>
    <while pos:line="26" pos:column="5">while <condition pos:line="26" pos:column="11">(<expr><operator pos:line="26" pos:column="12">!<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="13">shutdown_in_progress<pos:position pos:line="26" pos:column="33"/></name></expr>)<pos:position pos:line="26" pos:column="34"/></condition> <block pos:line="26" pos:column="35">{
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">context<pos:position pos:line="27" pos:column="21"/></name></expr>)<pos:position pos:line="27" pos:column="22"/></condition><then pos:line="27" pos:column="22"> <block pos:line="27" pos:column="23">{
            <expr_stmt><expr><name pos:line="28" pos:column="13">context<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <call><name pos:line="28" pos:column="23">mpm_get_completion_context<pos:position pos:line="28" pos:column="49"/></name><argument_list pos:line="28" pos:column="49">()<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt>
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><operator pos:line="29" pos:column="17">!<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">context<pos:position pos:line="29" pos:column="25"/></name></expr>)<pos:position pos:line="29" pos:column="26"/></condition><then pos:line="29" pos:column="26"> <block pos:line="29" pos:column="27">{
                <comment type="block" pos:line="30" pos:column="17">/* Temporary resource constraint? */</comment>
                <expr_stmt><expr><call><name pos:line="31" pos:column="17">Sleep<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><literal type="number" pos:line="31" pos:column="23">0<pos:position pos:line="31" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>
                <continue pos:line="32" pos:column="17">continue;<pos:position pos:line="32" pos:column="26"/></continue>
            }<pos:position pos:line="33" pos:column="14"/></block></then></if>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="36" pos:column="9">/* Create and initialize the accept socket */</comment>
<cpp:if pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">if<pos:position pos:line="37" pos:column="4"/></cpp:directive> <expr><name pos:line="37" pos:column="5">APR_HAVE_IPV6<pos:position pos:line="37" pos:column="18"/></name></expr></cpp:if>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name><name pos:line="38" pos:column="13">context<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">-&gt;<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="22">accept_socket<pos:position pos:line="38" pos:column="35"/></name></name> <operator pos:line="38" pos:column="36">==<pos:position pos:line="38" pos:column="38"/></operator> <name pos:line="38" pos:column="39">INVALID_SOCKET<pos:position pos:line="38" pos:column="53"/></name></expr>)<pos:position pos:line="38" pos:column="54"/></condition><then pos:line="38" pos:column="54"> <block pos:line="38" pos:column="55">{
            <expr_stmt><expr><name><name pos:line="39" pos:column="13">context<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">accept_socket<pos:position pos:line="39" pos:column="35"/></name></name> <operator pos:line="39" pos:column="36">=<pos:position pos:line="39" pos:column="37"/></operator> <call><name pos:line="39" pos:column="38">socket<pos:position pos:line="39" pos:column="44"/></name><argument_list pos:line="39" pos:column="44">(<argument><expr><name><name pos:line="39" pos:column="45">ss_listen<pos:position pos:line="39" pos:column="54"/></name><operator pos:line="39" pos:column="54">.<pos:position pos:line="39" pos:column="55"/></operator><name pos:line="39" pos:column="55">ss_family<pos:position pos:line="39" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="66">SOCK_STREAM<pos:position pos:line="39" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="79">IPPROTO_TCP<pos:position pos:line="39" pos:column="90"/></name></expr></argument>)<pos:position pos:line="39" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="92"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="40" pos:column="13">context<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">-&gt;<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="22">socket_family<pos:position pos:line="40" pos:column="35"/></name></name> <operator pos:line="40" pos:column="36">=<pos:position pos:line="40" pos:column="37"/></operator> <name><name pos:line="40" pos:column="38">ss_listen<pos:position pos:line="40" pos:column="47"/></name><operator pos:line="40" pos:column="47">.<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="48">ss_family<pos:position pos:line="40" pos:column="57"/></name></name></expr>;<pos:position pos:line="40" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then>
        <elseif pos:line="42" pos:column="9">else <if pos:line="42" pos:column="14">if <condition pos:line="42" pos:column="17">(<expr><name><name pos:line="42" pos:column="18">context<pos:position pos:line="42" pos:column="25"/></name><operator pos:line="42" pos:column="25">-&gt;<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="27">socket_family<pos:position pos:line="42" pos:column="40"/></name></name> <operator pos:line="42" pos:column="41">!=<pos:position pos:line="42" pos:column="43"/></operator> <name><name pos:line="42" pos:column="44">ss_listen<pos:position pos:line="42" pos:column="53"/></name><operator pos:line="42" pos:column="53">.<pos:position pos:line="42" pos:column="54"/></operator><name pos:line="42" pos:column="54">ss_family<pos:position pos:line="42" pos:column="63"/></name></name></expr>)<pos:position pos:line="42" pos:column="64"/></condition><then pos:line="42" pos:column="64"> <block pos:line="42" pos:column="65">{
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">closesocket<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><name><name pos:line="43" pos:column="25">context<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">-&gt;<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="34">accept_socket<pos:position pos:line="43" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="44" pos:column="13">context<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">-&gt;<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="22">accept_socket<pos:position pos:line="44" pos:column="35"/></name></name> <operator pos:line="44" pos:column="36">=<pos:position pos:line="44" pos:column="37"/></operator> <call><name pos:line="44" pos:column="38">socket<pos:position pos:line="44" pos:column="44"/></name><argument_list pos:line="44" pos:column="44">(<argument><expr><name><name pos:line="44" pos:column="45">ss_listen<pos:position pos:line="44" pos:column="54"/></name><operator pos:line="44" pos:column="54">.<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="55">ss_family<pos:position pos:line="44" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="66">SOCK_STREAM<pos:position pos:line="44" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="79">IPPROTO_TCP<pos:position pos:line="44" pos:column="90"/></name></expr></argument>)<pos:position pos:line="44" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="92"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="45" pos:column="13">context<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">-&gt;<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="22">socket_family<pos:position pos:line="45" pos:column="35"/></name></name> <operator pos:line="45" pos:column="36">=<pos:position pos:line="45" pos:column="37"/></operator> <name><name pos:line="45" pos:column="38">ss_listen<pos:position pos:line="45" pos:column="47"/></name><operator pos:line="45" pos:column="47">.<pos:position pos:line="45" pos:column="48"/></operator><name pos:line="45" pos:column="48">ss_family<pos:position pos:line="45" pos:column="57"/></name></name></expr>;<pos:position pos:line="45" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if></elseif></if>

        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name><name pos:line="48" pos:column="13">context<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">-&gt;<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="22">accept_socket<pos:position pos:line="48" pos:column="35"/></name></name> <operator pos:line="48" pos:column="36">==<pos:position pos:line="48" pos:column="38"/></operator> <name pos:line="48" pos:column="39">INVALID_SOCKET<pos:position pos:line="48" pos:column="53"/></name></expr>)<pos:position pos:line="48" pos:column="54"/></condition><then pos:line="48" pos:column="54"> <block pos:line="48" pos:column="55">{
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">ap_log_error<pos:position pos:line="49" pos:column="25"/></name><argument_list pos:line="49" pos:column="25">(<argument><expr><name pos:line="49" pos:column="26">APLOG_MARK<pos:position pos:line="49" pos:column="36"/></name></expr></argument>,<argument><expr><name pos:line="49" pos:column="37">APLOG_WARNING<pos:position pos:line="49" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="52">apr_get_netos_error<pos:position pos:line="49" pos:column="71"/></name><argument_list pos:line="49" pos:column="71">()<pos:position pos:line="49" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="49" pos:column="75">ap_server_conf<pos:position pos:line="49" pos:column="89"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="50" pos:column="26">"winnt_accept: Failed to allocate an accept socket. "<pos:position pos:line="50" pos:column="79"/></literal>
                         <literal type="string" pos:line="51" pos:column="26">"Temporary resource constraint? Try again."<pos:position pos:line="51" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">Sleep<pos:position pos:line="52" pos:column="18"/></name><argument_list pos:line="52" pos:column="18">(<argument><expr><literal type="number" pos:line="52" pos:column="19">100<pos:position pos:line="52" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="24"/></expr_stmt>
            <continue pos:line="53" pos:column="13">continue;<pos:position pos:line="53" pos:column="22"/></continue>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>
<cpp:else pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">else<pos:position pos:line="55" pos:column="6"/></cpp:directive></cpp:else>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">context<pos:position pos:line="56" pos:column="20"/></name><operator pos:line="56" pos:column="20">-&gt;<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="22">accept_socket<pos:position pos:line="56" pos:column="35"/></name></name> <operator pos:line="56" pos:column="36">==<pos:position pos:line="56" pos:column="38"/></operator> <name pos:line="56" pos:column="39">INVALID_SOCKET<pos:position pos:line="56" pos:column="53"/></name></expr>)<pos:position pos:line="56" pos:column="54"/></condition><then pos:line="56" pos:column="54"> <block pos:line="56" pos:column="55">{
            <expr_stmt><expr><name><name pos:line="57" pos:column="13">context<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">-&gt;<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="22">accept_socket<pos:position pos:line="57" pos:column="35"/></name></name> <operator pos:line="57" pos:column="36">=<pos:position pos:line="57" pos:column="37"/></operator> <call><name pos:line="57" pos:column="38">socket<pos:position pos:line="57" pos:column="44"/></name><argument_list pos:line="57" pos:column="44">(<argument><expr><name pos:line="57" pos:column="45">AF_INET<pos:position pos:line="57" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="54">SOCK_STREAM<pos:position pos:line="57" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="67">IPPROTO_TCP<pos:position pos:line="57" pos:column="78"/></name></expr></argument>)<pos:position pos:line="57" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="80"/></expr_stmt>
            <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><name><name pos:line="58" pos:column="17">context<pos:position pos:line="58" pos:column="24"/></name><operator pos:line="58" pos:column="24">-&gt;<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="26">accept_socket<pos:position pos:line="58" pos:column="39"/></name></name> <operator pos:line="58" pos:column="40">==<pos:position pos:line="58" pos:column="42"/></operator> <name pos:line="58" pos:column="43">INVALID_SOCKET<pos:position pos:line="58" pos:column="57"/></name></expr>)<pos:position pos:line="58" pos:column="58"/></condition><then pos:line="58" pos:column="58"> <block pos:line="58" pos:column="59">{
                <comment type="block" pos:line="59" pos:column="17">/* Another temporary condition? */</comment>
                <expr_stmt><expr><call><name pos:line="60" pos:column="17">ap_log_error<pos:position pos:line="60" pos:column="29"/></name><argument_list pos:line="60" pos:column="29">(<argument><expr><name pos:line="60" pos:column="30">APLOG_MARK<pos:position pos:line="60" pos:column="40"/></name></expr></argument>,<argument><expr><name pos:line="60" pos:column="41">APLOG_WARNING<pos:position pos:line="60" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="56">apr_get_netos_error<pos:position pos:line="60" pos:column="75"/></name><argument_list pos:line="60" pos:column="75">()<pos:position pos:line="60" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="60" pos:column="79">ap_server_conf<pos:position pos:line="60" pos:column="93"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="61" pos:column="30">"winnt_accept: Failed to allocate an accept socket. "<pos:position pos:line="61" pos:column="83"/></literal>
                             <literal type="string" pos:line="62" pos:column="30">"Temporary resource constraint? Try again."<pos:position pos:line="62" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="75"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="63" pos:column="17">Sleep<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><literal type="number" pos:line="63" pos:column="23">100<pos:position pos:line="63" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="28"/></expr_stmt>
                <continue pos:line="64" pos:column="17">continue;<pos:position pos:line="64" pos:column="26"/></continue>
            }<pos:position pos:line="65" pos:column="14"/></block></then></if>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if>
<cpp:endif pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">endif<pos:position pos:line="67" pos:column="7"/></cpp:directive></cpp:endif>
        <comment type="block" pos:line="68" pos:column="9">/* AcceptEx on the completion context. The completion context will be
         * signaled when a connection is accepted.
         */</comment>
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><operator pos:line="71" pos:column="13">!<pos:position pos:line="71" pos:column="14"/></operator><call><name pos:line="71" pos:column="14">AcceptEx<pos:position pos:line="71" pos:column="22"/></name><argument_list pos:line="71" pos:column="22">(<argument><expr><name pos:line="71" pos:column="23">nlsd<pos:position pos:line="71" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="29">context<pos:position pos:line="71" pos:column="36"/></name><operator pos:line="71" pos:column="36">-&gt;<pos:position pos:line="71" pos:column="41"/></operator><name pos:line="71" pos:column="38">accept_socket<pos:position pos:line="71" pos:column="51"/></name></name></expr></argument>,
                      <argument><expr><name><name pos:line="72" pos:column="23">context<pos:position pos:line="72" pos:column="30"/></name><operator pos:line="72" pos:column="30">-&gt;<pos:position pos:line="72" pos:column="35"/></operator><name pos:line="72" pos:column="32">buff<pos:position pos:line="72" pos:column="36"/></name></name></expr></argument>,
                      <argument><expr><literal type="number" pos:line="73" pos:column="23">0<pos:position pos:line="73" pos:column="24"/></literal></expr></argument>,
                      <argument><expr><name pos:line="74" pos:column="23">PADDED_ADDR_SIZE<pos:position pos:line="74" pos:column="39"/></name></expr></argument>,
                      <argument><expr><name pos:line="75" pos:column="23">PADDED_ADDR_SIZE<pos:position pos:line="75" pos:column="39"/></name></expr></argument>,
                      <argument><expr><operator pos:line="76" pos:column="23">&amp;<pos:position pos:line="76" pos:column="28"/></operator><name pos:line="76" pos:column="24">BytesRead<pos:position pos:line="76" pos:column="33"/></name></expr></argument>,
                      <argument><expr><operator pos:line="77" pos:column="23">&amp;<pos:position pos:line="77" pos:column="28"/></operator><name><name pos:line="77" pos:column="24">context<pos:position pos:line="77" pos:column="31"/></name><operator pos:line="77" pos:column="31">-&gt;<pos:position pos:line="77" pos:column="36"/></operator><name pos:line="77" pos:column="33">Overlapped<pos:position pos:line="77" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="45"/></condition><then pos:line="77" pos:column="45"> <block pos:line="77" pos:column="46">{
            <expr_stmt><expr><name pos:line="78" pos:column="13">rv<pos:position pos:line="78" pos:column="15"/></name> <operator pos:line="78" pos:column="16">=<pos:position pos:line="78" pos:column="17"/></operator> <call><name pos:line="78" pos:column="18">apr_get_netos_error<pos:position pos:line="78" pos:column="37"/></name><argument_list pos:line="78" pos:column="37">()<pos:position pos:line="78" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="40"/></expr_stmt>
            <if pos:line="79" pos:column="13">if <condition pos:line="79" pos:column="16">(<expr><operator pos:line="79" pos:column="17">(<pos:position pos:line="79" pos:column="18"/></operator><name pos:line="79" pos:column="18">rv<pos:position pos:line="79" pos:column="20"/></name> <operator pos:line="79" pos:column="21">==<pos:position pos:line="79" pos:column="23"/></operator> <call><name pos:line="79" pos:column="24">APR_FROM_OS_ERROR<pos:position pos:line="79" pos:column="41"/></name><argument_list pos:line="79" pos:column="41">(<argument><expr><name pos:line="79" pos:column="42">WSAEINVAL<pos:position pos:line="79" pos:column="51"/></name></expr></argument>)<pos:position pos:line="79" pos:column="52"/></argument_list></call><operator pos:line="79" pos:column="52">)<pos:position pos:line="79" pos:column="53"/></operator> <operator pos:line="79" pos:column="54">||<pos:position pos:line="79" pos:column="56"/></operator>
                <operator pos:line="80" pos:column="17">(<pos:position pos:line="80" pos:column="18"/></operator><name pos:line="80" pos:column="18">rv<pos:position pos:line="80" pos:column="20"/></name> <operator pos:line="80" pos:column="21">==<pos:position pos:line="80" pos:column="23"/></operator> <call><name pos:line="80" pos:column="24">APR_FROM_OS_ERROR<pos:position pos:line="80" pos:column="41"/></name><argument_list pos:line="80" pos:column="41">(<argument><expr><name pos:line="80" pos:column="42">WSAENOTSOCK<pos:position pos:line="80" pos:column="53"/></name></expr></argument>)<pos:position pos:line="80" pos:column="54"/></argument_list></call><operator pos:line="80" pos:column="54">)<pos:position pos:line="80" pos:column="55"/></operator></expr>)<pos:position pos:line="80" pos:column="56"/></condition><then pos:line="80" pos:column="56"> <block pos:line="80" pos:column="57">{
                <comment type="block" pos:line="81" pos:column="17">/* We can get here when:
                 * 1) the client disconnects early
                 * 2) TransmitFile does not properly recycle the accept socket (typically
                 *    because the client disconnected)
                 * 3) there is VPN or Firewall software installed with buggy AcceptEx implementation
                 * 4) the webserver is using a dynamic address that has changed
                 */</comment>
                <expr_stmt><expr><operator pos:line="88" pos:column="17">++<pos:position pos:line="88" pos:column="19"/></operator><name pos:line="88" pos:column="19">err_count<pos:position pos:line="88" pos:column="28"/></name></expr>;<pos:position pos:line="88" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="89" pos:column="17">closesocket<pos:position pos:line="89" pos:column="28"/></name><argument_list pos:line="89" pos:column="28">(<argument><expr><name><name pos:line="89" pos:column="29">context<pos:position pos:line="89" pos:column="36"/></name><operator pos:line="89" pos:column="36">-&gt;<pos:position pos:line="89" pos:column="41"/></operator><name pos:line="89" pos:column="38">accept_socket<pos:position pos:line="89" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="90" pos:column="17">context<pos:position pos:line="90" pos:column="24"/></name><operator pos:line="90" pos:column="24">-&gt;<pos:position pos:line="90" pos:column="29"/></operator><name pos:line="90" pos:column="26">accept_socket<pos:position pos:line="90" pos:column="39"/></name></name> <operator pos:line="90" pos:column="40">=<pos:position pos:line="90" pos:column="41"/></operator> <name pos:line="90" pos:column="42">INVALID_SOCKET<pos:position pos:line="90" pos:column="56"/></name></expr>;<pos:position pos:line="90" pos:column="57"/></expr_stmt>
                <if pos:line="91" pos:column="17">if <condition pos:line="91" pos:column="20">(<expr><name pos:line="91" pos:column="21">err_count<pos:position pos:line="91" pos:column="30"/></name> <operator pos:line="91" pos:column="31">&gt;<pos:position pos:line="91" pos:column="35"/></operator> <name pos:line="91" pos:column="33">MAX_ACCEPTEX_ERR_COUNT<pos:position pos:line="91" pos:column="55"/></name></expr>)<pos:position pos:line="91" pos:column="56"/></condition><then pos:line="91" pos:column="56"> <block pos:line="91" pos:column="57">{
                    <expr_stmt><expr><call><name pos:line="92" pos:column="21">ap_log_error<pos:position pos:line="92" pos:column="33"/></name><argument_list pos:line="92" pos:column="33">(<argument><expr><name pos:line="92" pos:column="34">APLOG_MARK<pos:position pos:line="92" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="46">APLOG_ERR<pos:position pos:line="92" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="57">rv<pos:position pos:line="92" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="61">ap_server_conf<pos:position pos:line="92" pos:column="75"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="93" pos:column="34">"Child %lu: Encountered too many errors accepting client connections. "<pos:position pos:line="93" pos:column="105"/></literal>
                                 <literal type="string" pos:line="94" pos:column="34">"Possible causes: dynamic address renewal, or incompatible VPN or firewall software. "<pos:position pos:line="94" pos:column="120"/></literal>
                                 <literal type="string" pos:line="95" pos:column="34">"Try using the Win32DisableAcceptEx directive."<pos:position pos:line="95" pos:column="81"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="83">my_pid<pos:position pos:line="95" pos:column="89"/></name></expr></argument>)<pos:position pos:line="95" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="91"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="96" pos:column="21">err_count<pos:position pos:line="96" pos:column="30"/></name> <operator pos:line="96" pos:column="31">=<pos:position pos:line="96" pos:column="32"/></operator> <literal type="number" pos:line="96" pos:column="33">0<pos:position pos:line="96" pos:column="34"/></literal></expr>;<pos:position pos:line="96" pos:column="35"/></expr_stmt>
                }<pos:position pos:line="97" pos:column="18"/></block></then></if>
                <continue pos:line="98" pos:column="17">continue;<pos:position pos:line="98" pos:column="26"/></continue>
            }<pos:position pos:line="99" pos:column="14"/></block></then>
            <elseif pos:line="100" pos:column="13">else <if pos:line="100" pos:column="18">if <condition pos:line="100" pos:column="21">(<expr><operator pos:line="100" pos:column="22">(<pos:position pos:line="100" pos:column="23"/></operator><name pos:line="100" pos:column="23">rv<pos:position pos:line="100" pos:column="25"/></name> <operator pos:line="100" pos:column="26">!=<pos:position pos:line="100" pos:column="28"/></operator> <call><name pos:line="100" pos:column="29">APR_FROM_OS_ERROR<pos:position pos:line="100" pos:column="46"/></name><argument_list pos:line="100" pos:column="46">(<argument><expr><name pos:line="100" pos:column="47">ERROR_IO_PENDING<pos:position pos:line="100" pos:column="63"/></name></expr></argument>)<pos:position pos:line="100" pos:column="64"/></argument_list></call><operator pos:line="100" pos:column="64">)<pos:position pos:line="100" pos:column="65"/></operator> <operator pos:line="100" pos:column="66">&amp;&amp;<pos:position pos:line="100" pos:column="76"/></operator>
                     <operator pos:line="101" pos:column="22">(<pos:position pos:line="101" pos:column="23"/></operator><name pos:line="101" pos:column="23">rv<pos:position pos:line="101" pos:column="25"/></name> <operator pos:line="101" pos:column="26">!=<pos:position pos:line="101" pos:column="28"/></operator> <call><name pos:line="101" pos:column="29">APR_FROM_OS_ERROR<pos:position pos:line="101" pos:column="46"/></name><argument_list pos:line="101" pos:column="46">(<argument><expr><name pos:line="101" pos:column="47">WSA_IO_PENDING<pos:position pos:line="101" pos:column="61"/></name></expr></argument>)<pos:position pos:line="101" pos:column="62"/></argument_list></call><operator pos:line="101" pos:column="62">)<pos:position pos:line="101" pos:column="63"/></operator></expr>)<pos:position pos:line="101" pos:column="64"/></condition><then pos:line="101" pos:column="64"> <block pos:line="101" pos:column="65">{
                <expr_stmt><expr><operator pos:line="102" pos:column="17">++<pos:position pos:line="102" pos:column="19"/></operator><name pos:line="102" pos:column="19">err_count<pos:position pos:line="102" pos:column="28"/></name></expr>;<pos:position pos:line="102" pos:column="29"/></expr_stmt>
                <if pos:line="103" pos:column="17">if <condition pos:line="103" pos:column="20">(<expr><name pos:line="103" pos:column="21">err_count<pos:position pos:line="103" pos:column="30"/></name> <operator pos:line="103" pos:column="31">&gt;<pos:position pos:line="103" pos:column="35"/></operator> <name pos:line="103" pos:column="33">MAX_ACCEPTEX_ERR_COUNT<pos:position pos:line="103" pos:column="55"/></name></expr>)<pos:position pos:line="103" pos:column="56"/></condition><then pos:line="103" pos:column="56"> <block pos:line="103" pos:column="57">{
                    <expr_stmt><expr><call><name pos:line="104" pos:column="21">ap_log_error<pos:position pos:line="104" pos:column="33"/></name><argument_list pos:line="104" pos:column="33">(<argument><expr><name pos:line="104" pos:column="34">APLOG_MARK<pos:position pos:line="104" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="104" pos:column="45">APLOG_ERR<pos:position pos:line="104" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="56">rv<pos:position pos:line="104" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="60">ap_server_conf<pos:position pos:line="104" pos:column="74"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="105" pos:column="34">"Child %lu: Encountered too many errors accepting client connections. "<pos:position pos:line="105" pos:column="105"/></literal>
                                 <literal type="string" pos:line="106" pos:column="34">"Possible causes: Unknown. "<pos:position pos:line="106" pos:column="62"/></literal>
                                 <literal type="string" pos:line="107" pos:column="34">"Try using the Win32DisableAcceptEx directive."<pos:position pos:line="107" pos:column="81"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="83">my_pid<pos:position pos:line="107" pos:column="89"/></name></expr></argument>)<pos:position pos:line="107" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="91"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="108" pos:column="21">err_count<pos:position pos:line="108" pos:column="30"/></name> <operator pos:line="108" pos:column="31">=<pos:position pos:line="108" pos:column="32"/></operator> <literal type="number" pos:line="108" pos:column="33">0<pos:position pos:line="108" pos:column="34"/></literal></expr>;<pos:position pos:line="108" pos:column="35"/></expr_stmt>
                }<pos:position pos:line="109" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="110" pos:column="17">closesocket<pos:position pos:line="110" pos:column="28"/></name><argument_list pos:line="110" pos:column="28">(<argument><expr><name><name pos:line="110" pos:column="29">context<pos:position pos:line="110" pos:column="36"/></name><operator pos:line="110" pos:column="36">-&gt;<pos:position pos:line="110" pos:column="41"/></operator><name pos:line="110" pos:column="38">accept_socket<pos:position pos:line="110" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="111" pos:column="17">context<pos:position pos:line="111" pos:column="24"/></name><operator pos:line="111" pos:column="24">-&gt;<pos:position pos:line="111" pos:column="29"/></operator><name pos:line="111" pos:column="26">accept_socket<pos:position pos:line="111" pos:column="39"/></name></name> <operator pos:line="111" pos:column="40">=<pos:position pos:line="111" pos:column="41"/></operator> <name pos:line="111" pos:column="42">INVALID_SOCKET<pos:position pos:line="111" pos:column="56"/></name></expr>;<pos:position pos:line="111" pos:column="57"/></expr_stmt>
                <continue pos:line="112" pos:column="17">continue;<pos:position pos:line="112" pos:column="26"/></continue>
            }<pos:position pos:line="113" pos:column="14"/></block></then></if></elseif></if>
            <expr_stmt><expr><name pos:line="114" pos:column="13">err_count<pos:position pos:line="114" pos:column="22"/></name> <operator pos:line="114" pos:column="23">=<pos:position pos:line="114" pos:column="24"/></operator> <literal type="number" pos:line="114" pos:column="25">0<pos:position pos:line="114" pos:column="26"/></literal></expr>;<pos:position pos:line="114" pos:column="27"/></expr_stmt>

            <comment type="block" pos:line="116" pos:column="13">/* Wait for pending i/o.
             * Wake up once per second to check for shutdown .
             * XXX: We should be waiting on exit_event instead of polling
             */</comment>
            <while pos:line="120" pos:column="13">while <condition pos:line="120" pos:column="19">(<expr><literal type="number" pos:line="120" pos:column="20">1<pos:position pos:line="120" pos:column="21"/></literal></expr>)<pos:position pos:line="120" pos:column="22"/></condition> <block pos:line="120" pos:column="23">{
                <expr_stmt><expr><name pos:line="121" pos:column="17">rv<pos:position pos:line="121" pos:column="19"/></name> <operator pos:line="121" pos:column="20">=<pos:position pos:line="121" pos:column="21"/></operator> <call><name pos:line="121" pos:column="22">WaitForSingleObject<pos:position pos:line="121" pos:column="41"/></name><argument_list pos:line="121" pos:column="41">(<argument><expr><name><name pos:line="121" pos:column="42">context<pos:position pos:line="121" pos:column="49"/></name><operator pos:line="121" pos:column="49">-&gt;<pos:position pos:line="121" pos:column="54"/></operator><name pos:line="121" pos:column="51">Overlapped<pos:position pos:line="121" pos:column="61"/></name><operator pos:line="121" pos:column="61">.<pos:position pos:line="121" pos:column="62"/></operator><name pos:line="121" pos:column="62">hEvent<pos:position pos:line="121" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="121" pos:column="70">1000<pos:position pos:line="121" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="76"/></expr_stmt>
                <if pos:line="122" pos:column="17">if <condition pos:line="122" pos:column="20">(<expr><name pos:line="122" pos:column="21">rv<pos:position pos:line="122" pos:column="23"/></name> <operator pos:line="122" pos:column="24">==<pos:position pos:line="122" pos:column="26"/></operator> <name pos:line="122" pos:column="27">WAIT_OBJECT_0<pos:position pos:line="122" pos:column="40"/></name></expr>)<pos:position pos:line="122" pos:column="41"/></condition><then pos:line="122" pos:column="41"> <block pos:line="122" pos:column="42">{
                    <if pos:line="123" pos:column="21">if <condition pos:line="123" pos:column="24">(<expr><name><name pos:line="123" pos:column="25">context<pos:position pos:line="123" pos:column="32"/></name><operator pos:line="123" pos:column="32">-&gt;<pos:position pos:line="123" pos:column="37"/></operator><name pos:line="123" pos:column="34">accept_socket<pos:position pos:line="123" pos:column="47"/></name></name> <operator pos:line="123" pos:column="48">==<pos:position pos:line="123" pos:column="50"/></operator> <name pos:line="123" pos:column="51">INVALID_SOCKET<pos:position pos:line="123" pos:column="65"/></name></expr>)<pos:position pos:line="123" pos:column="66"/></condition><then pos:line="123" pos:column="66"> <block pos:line="123" pos:column="67">{
                        <comment type="block" pos:line="124" pos:column="25">/* socket already closed */</comment>
                        <break pos:line="125" pos:column="25">break;<pos:position pos:line="125" pos:column="31"/></break>
                    }<pos:position pos:line="126" pos:column="22"/></block></then></if>
                    <if pos:line="127" pos:column="21">if <condition pos:line="127" pos:column="24">(<expr><operator pos:line="127" pos:column="25">!<pos:position pos:line="127" pos:column="26"/></operator><call><name pos:line="127" pos:column="26">GetOverlappedResult<pos:position pos:line="127" pos:column="45"/></name><argument_list pos:line="127" pos:column="45">(<argument><expr><operator pos:line="127" pos:column="46">(<pos:position pos:line="127" pos:column="47"/></operator><name pos:line="127" pos:column="47">HANDLE<pos:position pos:line="127" pos:column="53"/></name><operator pos:line="127" pos:column="53">)<pos:position pos:line="127" pos:column="54"/></operator><name><name pos:line="127" pos:column="54">context<pos:position pos:line="127" pos:column="61"/></name><operator pos:line="127" pos:column="61">-&gt;<pos:position pos:line="127" pos:column="66"/></operator><name pos:line="127" pos:column="63">accept_socket<pos:position pos:line="127" pos:column="76"/></name></name></expr></argument>,
                                             <argument><expr><operator pos:line="128" pos:column="46">&amp;<pos:position pos:line="128" pos:column="51"/></operator><name><name pos:line="128" pos:column="47">context<pos:position pos:line="128" pos:column="54"/></name><operator pos:line="128" pos:column="54">-&gt;<pos:position pos:line="128" pos:column="59"/></operator><name pos:line="128" pos:column="56">Overlapped<pos:position pos:line="128" pos:column="66"/></name></name></expr></argument>,
                                             <argument><expr><operator pos:line="129" pos:column="46">&amp;<pos:position pos:line="129" pos:column="51"/></operator><name pos:line="129" pos:column="47">BytesRead<pos:position pos:line="129" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="58">FALSE<pos:position pos:line="129" pos:column="63"/></name></expr></argument>)<pos:position pos:line="129" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="129" pos:column="65"/></condition><then pos:line="129" pos:column="65"> <block pos:line="129" pos:column="66">{
                        <expr_stmt><expr><call><name pos:line="130" pos:column="25">ap_log_error<pos:position pos:line="130" pos:column="37"/></name><argument_list pos:line="130" pos:column="37">(<argument><expr><name pos:line="130" pos:column="38">APLOG_MARK<pos:position pos:line="130" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="50">APLOG_WARNING<pos:position pos:line="130" pos:column="63"/></name></expr></argument>,
                                     <argument><expr><call><name pos:line="131" pos:column="38">apr_get_os_error<pos:position pos:line="131" pos:column="54"/></name><argument_list pos:line="131" pos:column="54">()<pos:position pos:line="131" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="131" pos:column="58">ap_server_conf<pos:position pos:line="131" pos:column="72"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="132" pos:column="30">"winnt_accept: Asynchronous AcceptEx failed."<pos:position pos:line="132" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="77"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="133" pos:column="25">closesocket<pos:position pos:line="133" pos:column="36"/></name><argument_list pos:line="133" pos:column="36">(<argument><expr><name><name pos:line="133" pos:column="37">context<pos:position pos:line="133" pos:column="44"/></name><operator pos:line="133" pos:column="44">-&gt;<pos:position pos:line="133" pos:column="49"/></operator><name pos:line="133" pos:column="46">accept_socket<pos:position pos:line="133" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="61"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="134" pos:column="25">context<pos:position pos:line="134" pos:column="32"/></name><operator pos:line="134" pos:column="32">-&gt;<pos:position pos:line="134" pos:column="37"/></operator><name pos:line="134" pos:column="34">accept_socket<pos:position pos:line="134" pos:column="47"/></name></name> <operator pos:line="134" pos:column="48">=<pos:position pos:line="134" pos:column="49"/></operator> <name pos:line="134" pos:column="50">INVALID_SOCKET<pos:position pos:line="134" pos:column="64"/></name></expr>;<pos:position pos:line="134" pos:column="65"/></expr_stmt>
                    }<pos:position pos:line="135" pos:column="22"/></block></then></if>
                    <break pos:line="136" pos:column="21">break;<pos:position pos:line="136" pos:column="27"/></break>
                }<pos:position pos:line="137" pos:column="18"/></block></then></if>
                <comment type="block" pos:line="138" pos:column="17">/* WAIT_TIMEOUT */</comment>
                <if pos:line="139" pos:column="17">if <condition pos:line="139" pos:column="20">(<expr><name pos:line="139" pos:column="21">shutdown_in_progress<pos:position pos:line="139" pos:column="41"/></name></expr>)<pos:position pos:line="139" pos:column="42"/></condition><then pos:line="139" pos:column="42"> <block pos:line="139" pos:column="43">{
                    <expr_stmt><expr><call><name pos:line="140" pos:column="21">closesocket<pos:position pos:line="140" pos:column="32"/></name><argument_list pos:line="140" pos:column="32">(<argument><expr><name><name pos:line="140" pos:column="33">context<pos:position pos:line="140" pos:column="40"/></name><operator pos:line="140" pos:column="40">-&gt;<pos:position pos:line="140" pos:column="45"/></operator><name pos:line="140" pos:column="42">accept_socket<pos:position pos:line="140" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="57"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="141" pos:column="21">context<pos:position pos:line="141" pos:column="28"/></name><operator pos:line="141" pos:column="28">-&gt;<pos:position pos:line="141" pos:column="33"/></operator><name pos:line="141" pos:column="30">accept_socket<pos:position pos:line="141" pos:column="43"/></name></name> <operator pos:line="141" pos:column="44">=<pos:position pos:line="141" pos:column="45"/></operator> <name pos:line="141" pos:column="46">INVALID_SOCKET<pos:position pos:line="141" pos:column="60"/></name></expr>;<pos:position pos:line="141" pos:column="61"/></expr_stmt>
                    <break pos:line="142" pos:column="21">break;<pos:position pos:line="142" pos:column="27"/></break>
                }<pos:position pos:line="143" pos:column="18"/></block></then></if>
            }<pos:position pos:line="144" pos:column="14"/></block></while>
            <if pos:line="145" pos:column="13">if <condition pos:line="145" pos:column="16">(<expr><name><name pos:line="145" pos:column="17">context<pos:position pos:line="145" pos:column="24"/></name><operator pos:line="145" pos:column="24">-&gt;<pos:position pos:line="145" pos:column="29"/></operator><name pos:line="145" pos:column="26">accept_socket<pos:position pos:line="145" pos:column="39"/></name></name> <operator pos:line="145" pos:column="40">==<pos:position pos:line="145" pos:column="42"/></operator> <name pos:line="145" pos:column="43">INVALID_SOCKET<pos:position pos:line="145" pos:column="57"/></name></expr>)<pos:position pos:line="145" pos:column="58"/></condition><then pos:line="145" pos:column="58"> <block pos:line="145" pos:column="59">{
                <continue pos:line="146" pos:column="17">continue;<pos:position pos:line="146" pos:column="26"/></continue>
            }<pos:position pos:line="147" pos:column="14"/></block></then></if>
        }<pos:position pos:line="148" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="149" pos:column="9">err_count<pos:position pos:line="149" pos:column="18"/></name> <operator pos:line="149" pos:column="19">=<pos:position pos:line="149" pos:column="20"/></operator> <literal type="number" pos:line="149" pos:column="21">0<pos:position pos:line="149" pos:column="22"/></literal></expr>;<pos:position pos:line="149" pos:column="23"/></expr_stmt>
        <comment type="block" pos:line="150" pos:column="9">/* Inherit the listen socket settings. Required for
         * shutdown() to work
         */</comment>
        <if pos:line="153" pos:column="9">if <condition pos:line="153" pos:column="12">(<expr><call><name pos:line="153" pos:column="13">setsockopt<pos:position pos:line="153" pos:column="23"/></name><argument_list pos:line="153" pos:column="23">(<argument><expr><name><name pos:line="153" pos:column="24">context<pos:position pos:line="153" pos:column="31"/></name><operator pos:line="153" pos:column="31">-&gt;<pos:position pos:line="153" pos:column="36"/></operator><name pos:line="153" pos:column="33">accept_socket<pos:position pos:line="153" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="48">SOL_SOCKET<pos:position pos:line="153" pos:column="58"/></name></expr></argument>,
                       <argument><expr><name pos:line="154" pos:column="24">SO_UPDATE_ACCEPT_CONTEXT<pos:position pos:line="154" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="154" pos:column="50">(<pos:position pos:line="154" pos:column="51"/></operator><name pos:line="154" pos:column="51">char<pos:position pos:line="154" pos:column="55"/></name> <operator pos:line="154" pos:column="56">*<pos:position pos:line="154" pos:column="57"/></operator><operator pos:line="154" pos:column="57">)<pos:position pos:line="154" pos:column="58"/></operator><operator pos:line="154" pos:column="58">&amp;<pos:position pos:line="154" pos:column="63"/></operator><name pos:line="154" pos:column="59">nlsd<pos:position pos:line="154" pos:column="63"/></name></expr></argument>,
                       <argument><expr><sizeof pos:line="155" pos:column="24">sizeof<argument_list pos:line="155" pos:column="30">(<argument><expr><name pos:line="155" pos:column="31">nlsd<pos:position pos:line="155" pos:column="35"/></name></expr></argument>)<pos:position pos:line="155" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="155" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="155" pos:column="38"/></condition><then pos:line="155" pos:column="38"> <block pos:line="155" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="156" pos:column="13">ap_log_error<pos:position pos:line="156" pos:column="25"/></name><argument_list pos:line="156" pos:column="25">(<argument><expr><name pos:line="156" pos:column="26">APLOG_MARK<pos:position pos:line="156" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="38">APLOG_WARNING<pos:position pos:line="156" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="156" pos:column="53">apr_get_netos_error<pos:position pos:line="156" pos:column="72"/></name><argument_list pos:line="156" pos:column="72">()<pos:position pos:line="156" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="156" pos:column="76">ap_server_conf<pos:position pos:line="156" pos:column="90"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="157" pos:column="26">"setsockopt(SO_UPDATE_ACCEPT_CONTEXT) failed."<pos:position pos:line="157" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="74"/></expr_stmt>
            <comment type="block" pos:line="158" pos:column="13">/* Not a failure condition. Keep running. */</comment>
        }<pos:position pos:line="159" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="161" pos:column="9">/* Get the local &amp; remote address */</comment>
        <expr_stmt><expr><call><name pos:line="162" pos:column="9">GetAcceptExSockaddrs<pos:position pos:line="162" pos:column="29"/></name><argument_list pos:line="162" pos:column="29">(<argument><expr><name><name pos:line="162" pos:column="30">context<pos:position pos:line="162" pos:column="37"/></name><operator pos:line="162" pos:column="37">-&gt;<pos:position pos:line="162" pos:column="42"/></operator><name pos:line="162" pos:column="39">buff<pos:position pos:line="162" pos:column="43"/></name></name></expr></argument>,
                             <argument><expr><literal type="number" pos:line="163" pos:column="30">0<pos:position pos:line="163" pos:column="31"/></literal></expr></argument>,
                             <argument><expr><name pos:line="164" pos:column="30">PADDED_ADDR_SIZE<pos:position pos:line="164" pos:column="46"/></name></expr></argument>,
                             <argument><expr><name pos:line="165" pos:column="30">PADDED_ADDR_SIZE<pos:position pos:line="165" pos:column="46"/></name></expr></argument>,
                             <argument><expr><operator pos:line="166" pos:column="30">&amp;<pos:position pos:line="166" pos:column="35"/></operator><name><name pos:line="166" pos:column="31">context<pos:position pos:line="166" pos:column="38"/></name><operator pos:line="166" pos:column="38">-&gt;<pos:position pos:line="166" pos:column="43"/></operator><name pos:line="166" pos:column="40">sa_server<pos:position pos:line="166" pos:column="49"/></name></name></expr></argument>,
                             <argument><expr><operator pos:line="167" pos:column="30">&amp;<pos:position pos:line="167" pos:column="35"/></operator><name><name pos:line="167" pos:column="31">context<pos:position pos:line="167" pos:column="38"/></name><operator pos:line="167" pos:column="38">-&gt;<pos:position pos:line="167" pos:column="43"/></operator><name pos:line="167" pos:column="40">sa_server_len<pos:position pos:line="167" pos:column="53"/></name></name></expr></argument>,
                             <argument><expr><operator pos:line="168" pos:column="30">&amp;<pos:position pos:line="168" pos:column="35"/></operator><name><name pos:line="168" pos:column="31">context<pos:position pos:line="168" pos:column="38"/></name><operator pos:line="168" pos:column="38">-&gt;<pos:position pos:line="168" pos:column="43"/></operator><name pos:line="168" pos:column="40">sa_client<pos:position pos:line="168" pos:column="49"/></name></name></expr></argument>,
                             <argument><expr><operator pos:line="169" pos:column="30">&amp;<pos:position pos:line="169" pos:column="35"/></operator><name><name pos:line="169" pos:column="31">context<pos:position pos:line="169" pos:column="38"/></name><operator pos:line="169" pos:column="38">-&gt;<pos:position pos:line="169" pos:column="43"/></operator><name pos:line="169" pos:column="40">sa_client_len<pos:position pos:line="169" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="169" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="55"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="171" pos:column="9">sockinfo<pos:position pos:line="171" pos:column="17"/></name><operator pos:line="171" pos:column="17">.<pos:position pos:line="171" pos:column="18"/></operator><name pos:line="171" pos:column="18">os_sock<pos:position pos:line="171" pos:column="25"/></name></name> <operator pos:line="171" pos:column="26">=<pos:position pos:line="171" pos:column="27"/></operator> <operator pos:line="171" pos:column="28">&amp;<pos:position pos:line="171" pos:column="33"/></operator><name><name pos:line="171" pos:column="29">context<pos:position pos:line="171" pos:column="36"/></name><operator pos:line="171" pos:column="36">-&gt;<pos:position pos:line="171" pos:column="41"/></operator><name pos:line="171" pos:column="38">accept_socket<pos:position pos:line="171" pos:column="51"/></name></name></expr>;<pos:position pos:line="171" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="172" pos:column="9">sockinfo<pos:position pos:line="172" pos:column="17"/></name><operator pos:line="172" pos:column="17">.<pos:position pos:line="172" pos:column="18"/></operator><name pos:line="172" pos:column="18">local<pos:position pos:line="172" pos:column="23"/></name></name>   <operator pos:line="172" pos:column="26">=<pos:position pos:line="172" pos:column="27"/></operator> <name><name pos:line="172" pos:column="28">context<pos:position pos:line="172" pos:column="35"/></name><operator pos:line="172" pos:column="35">-&gt;<pos:position pos:line="172" pos:column="40"/></operator><name pos:line="172" pos:column="37">sa_server<pos:position pos:line="172" pos:column="46"/></name></name></expr>;<pos:position pos:line="172" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="173" pos:column="9">sockinfo<pos:position pos:line="173" pos:column="17"/></name><operator pos:line="173" pos:column="17">.<pos:position pos:line="173" pos:column="18"/></operator><name pos:line="173" pos:column="18">remote<pos:position pos:line="173" pos:column="24"/></name></name>  <operator pos:line="173" pos:column="26">=<pos:position pos:line="173" pos:column="27"/></operator> <name><name pos:line="173" pos:column="28">context<pos:position pos:line="173" pos:column="35"/></name><operator pos:line="173" pos:column="35">-&gt;<pos:position pos:line="173" pos:column="40"/></operator><name pos:line="173" pos:column="37">sa_client<pos:position pos:line="173" pos:column="46"/></name></name></expr>;<pos:position pos:line="173" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="174" pos:column="9">sockinfo<pos:position pos:line="174" pos:column="17"/></name><operator pos:line="174" pos:column="17">.<pos:position pos:line="174" pos:column="18"/></operator><name pos:line="174" pos:column="18">family<pos:position pos:line="174" pos:column="24"/></name></name>  <operator pos:line="174" pos:column="26">=<pos:position pos:line="174" pos:column="27"/></operator> <name><name pos:line="174" pos:column="28">context<pos:position pos:line="174" pos:column="35"/></name><operator pos:line="174" pos:column="35">-&gt;<pos:position pos:line="174" pos:column="40"/></operator><name pos:line="174" pos:column="37">sa_server<pos:position pos:line="174" pos:column="46"/></name><operator pos:line="174" pos:column="46">-&gt;<pos:position pos:line="174" pos:column="51"/></operator><name pos:line="174" pos:column="48">sa_family<pos:position pos:line="174" pos:column="57"/></name></name></expr>;<pos:position pos:line="174" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="175" pos:column="9">sockinfo<pos:position pos:line="175" pos:column="17"/></name><operator pos:line="175" pos:column="17">.<pos:position pos:line="175" pos:column="18"/></operator><name pos:line="175" pos:column="18">type<pos:position pos:line="175" pos:column="22"/></name></name>    <operator pos:line="175" pos:column="26">=<pos:position pos:line="175" pos:column="27"/></operator> <name pos:line="175" pos:column="28">SOCK_STREAM<pos:position pos:line="175" pos:column="39"/></name></expr>;<pos:position pos:line="175" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="176" pos:column="9">apr_os_sock_make<pos:position pos:line="176" pos:column="25"/></name><argument_list pos:line="176" pos:column="25">(<argument><expr><operator pos:line="176" pos:column="26">&amp;<pos:position pos:line="176" pos:column="31"/></operator><name><name pos:line="176" pos:column="27">context<pos:position pos:line="176" pos:column="34"/></name><operator pos:line="176" pos:column="34">-&gt;<pos:position pos:line="176" pos:column="39"/></operator><name pos:line="176" pos:column="36">sock<pos:position pos:line="176" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="176" pos:column="42">&amp;<pos:position pos:line="176" pos:column="47"/></operator><name pos:line="176" pos:column="43">sockinfo<pos:position pos:line="176" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="53">context<pos:position pos:line="176" pos:column="60"/></name><operator pos:line="176" pos:column="60">-&gt;<pos:position pos:line="176" pos:column="65"/></operator><name pos:line="176" pos:column="62">ptrans<pos:position pos:line="176" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="176" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="70"/></expr_stmt>

        <comment type="block" pos:line="178" pos:column="9">/* When a connection is received, send an io completion notification to
         * the ThreadDispatchIOCP. This function could be replaced by
         * mpm_post_completion_context(), but why do an extra function call...
         */</comment>
        <expr_stmt><expr><call><name pos:line="182" pos:column="9">PostQueuedCompletionStatus<pos:position pos:line="182" pos:column="35"/></name><argument_list pos:line="182" pos:column="35">(<argument><expr><name pos:line="182" pos:column="36">ThreadDispatchIOCP<pos:position pos:line="182" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="182" pos:column="56">0<pos:position pos:line="182" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="182" pos:column="59">IOCP_CONNECTION_ACCEPTED<pos:position pos:line="182" pos:column="83"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="183" pos:column="36">&amp;<pos:position pos:line="183" pos:column="41"/></operator><name><name pos:line="183" pos:column="37">context<pos:position pos:line="183" pos:column="44"/></name><operator pos:line="183" pos:column="44">-&gt;<pos:position pos:line="183" pos:column="49"/></operator><name pos:line="183" pos:column="46">Overlapped<pos:position pos:line="183" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="183" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="184" pos:column="9">context<pos:position pos:line="184" pos:column="16"/></name> <operator pos:line="184" pos:column="17">=<pos:position pos:line="184" pos:column="18"/></operator> <name pos:line="184" pos:column="19">NULL<pos:position pos:line="184" pos:column="23"/></name></expr>;<pos:position pos:line="184" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="185" pos:column="6"/></block></while>
    <if pos:line="186" pos:column="5">if <condition pos:line="186" pos:column="8">(<expr><operator pos:line="186" pos:column="9">!<pos:position pos:line="186" pos:column="10"/></operator><name pos:line="186" pos:column="10">shutdown_in_progress<pos:position pos:line="186" pos:column="30"/></name></expr>)<pos:position pos:line="186" pos:column="31"/></condition><then pos:line="186" pos:column="31"> <block pos:line="186" pos:column="32">{
        <comment type="block" pos:line="187" pos:column="9">/* Yow, hit an irrecoverable error! Tell the child to die. */</comment>
        <expr_stmt><expr><call><name pos:line="188" pos:column="9">SetEvent<pos:position pos:line="188" pos:column="17"/></name><argument_list pos:line="188" pos:column="17">(<argument><expr><name pos:line="188" pos:column="18">exit_event<pos:position pos:line="188" pos:column="28"/></name></expr></argument>)<pos:position pos:line="188" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="189" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="190" pos:column="5">ap_log_error<pos:position pos:line="190" pos:column="17"/></name><argument_list pos:line="190" pos:column="17">(<argument><expr><name pos:line="190" pos:column="18">APLOG_MARK<pos:position pos:line="190" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="30">APLOG_INFO<pos:position pos:line="190" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="42">APR_SUCCESS<pos:position pos:line="190" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="55">ap_server_conf<pos:position pos:line="190" pos:column="69"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="191" pos:column="18">"Child %lu: Accept thread exiting."<pos:position pos:line="191" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="191" pos:column="55">my_pid<pos:position pos:line="191" pos:column="61"/></name></expr></argument>)<pos:position pos:line="191" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="63"/></expr_stmt>
    <return pos:line="192" pos:column="5">return <expr><literal type="number" pos:line="192" pos:column="12">0<pos:position pos:line="192" pos:column="13"/></literal></expr>;<pos:position pos:line="192" pos:column="14"/></return>
}<pos:position pos:line="193" pos:column="2"/></block></function></unit>

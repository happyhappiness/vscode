<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2841_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">ifsection<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">cmd_parms<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">cmd<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">void<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">mconfig<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="61">const<pos:position pos:line="1" pos:column="66"/></specifier> <name pos:line="1" pos:column="67">char<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">arg<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">errmsg<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">endp<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><call><name pos:line="4" pos:column="24">ap_strrchr_c<pos:position pos:line="4" pos:column="36"/></name><argument_list pos:line="4" pos:column="36">(<argument><expr><name pos:line="4" pos:column="37">arg<pos:position pos:line="4" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="4" pos:column="42">'&gt;'<pos:position pos:line="4" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">old_overrides<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><name><name pos:line="5" pos:column="25">cmd<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="30">override<pos:position pos:line="5" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">old_path<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name><name pos:line="6" pos:column="22">cmd<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">path<pos:position pos:line="6" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">core_dir_config<pos:position pos:line="7" pos:column="20"/></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">conf<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">command_rec<pos:position pos:line="8" pos:column="22"/></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">thiscmd<pos:position pos:line="8" pos:column="31"/></name> <init pos:line="8" pos:column="32">= <expr><name><name pos:line="8" pos:column="34">cmd<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">-&gt;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="39">cmd<pos:position pos:line="8" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">core_dir_config<pos:position pos:line="9" pos:column="20"/></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">c<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><name pos:line="9" pos:column="26">mconfig<pos:position pos:line="9" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">ap_conf_vector_t<pos:position pos:line="10" pos:column="21"/></name> <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier></type><name pos:line="10" pos:column="23">new_file_conf<pos:position pos:line="10" pos:column="36"/></name> <init pos:line="10" pos:column="37">= <expr><call><name pos:line="10" pos:column="39">ap_create_per_dir_config<pos:position pos:line="10" pos:column="63"/></name><argument_list pos:line="10" pos:column="63">(<argument><expr><name><name pos:line="10" pos:column="64">cmd<pos:position pos:line="10" pos:column="67"/></name><operator pos:line="10" pos:column="67">-&gt;<pos:position pos:line="10" pos:column="72"/></operator><name pos:line="10" pos:column="69">pool<pos:position pos:line="10" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="75"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">err<pos:position pos:line="11" pos:column="20"/></name> <init pos:line="11" pos:column="21">= <expr><call><name pos:line="11" pos:column="23">ap_check_cmd_context<pos:position pos:line="11" pos:column="43"/></name><argument_list pos:line="11" pos:column="43">(<argument><expr><name pos:line="11" pos:column="44">cmd<pos:position pos:line="11" pos:column="47"/></name></expr></argument>,
                                           <argument><expr><name pos:line="12" pos:column="44">NOT_IN_LOCATION<pos:position pos:line="12" pos:column="59"/></name> <operator pos:line="12" pos:column="60">|<pos:position pos:line="12" pos:column="61"/></operator> <name pos:line="12" pos:column="62">NOT_IN_LIMIT<pos:position pos:line="12" pos:column="74"/></name></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="76"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">char<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">condition<pos:position pos:line="13" pos:column="26"/></name></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">expr_err<pos:position pos:line="14" pos:column="17"/></name> <init pos:line="14" pos:column="18">= <expr><literal type="number" pos:line="14" pos:column="20">0<pos:position pos:line="14" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="22"/></decl_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">err<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">!=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">NULL<pos:position pos:line="16" pos:column="20"/></name></expr>)<pos:position pos:line="16" pos:column="21"/></condition><then pos:line="16" pos:column="21"> <block pos:line="16" pos:column="22">{
        <return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">err<pos:position pos:line="17" pos:column="19"/></name></expr>;<pos:position pos:line="17" pos:column="20"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">endp<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">==<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">NULL<pos:position pos:line="20" pos:column="21"/></name></expr>)<pos:position pos:line="20" pos:column="22"/></condition><then pos:line="20" pos:column="22"> <block pos:line="20" pos:column="23">{
        <return pos:line="21" pos:column="9">return <expr><call><name pos:line="21" pos:column="16">unclosed_directive<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">(<argument><expr><name pos:line="21" pos:column="35">cmd<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="24" pos:column="5">arg<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">=<pos:position pos:line="24" pos:column="10"/></operator> <call><name pos:line="24" pos:column="11">apr_pstrndup<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name><name pos:line="24" pos:column="24">cmd<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">-&gt;<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="29">pool<pos:position pos:line="24" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="35">arg<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="40">endp<pos:position pos:line="24" pos:column="44"/></name> <operator pos:line="24" pos:column="45">-<pos:position pos:line="24" pos:column="46"/></operator> <name pos:line="24" pos:column="47">arg<pos:position pos:line="24" pos:column="50"/></name></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><name><name pos:line="26" pos:column="10">arg<pos:position pos:line="26" pos:column="13"/></name><index pos:line="26" pos:column="13">[<expr><literal type="number" pos:line="26" pos:column="14">0<pos:position pos:line="26" pos:column="15"/></literal></expr>]<pos:position pos:line="26" pos:column="16"/></index></name></expr>)<pos:position pos:line="26" pos:column="17"/></condition><then pos:line="26" pos:column="17"> <block pos:line="26" pos:column="18">{
        <return pos:line="27" pos:column="9">return <expr><call><name pos:line="27" pos:column="16">missing_container_arg<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><name pos:line="27" pos:column="38">cmd<pos:position pos:line="27" pos:column="41"/></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="43"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="30" pos:column="5">condition<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <call><name pos:line="30" pos:column="17">ap_getword_conf<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name><name pos:line="30" pos:column="33">cmd<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">-&gt;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="38">pool<pos:position pos:line="30" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="44">&amp;<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="45">arg<pos:position pos:line="30" pos:column="48"/></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt>
    <comment type="block" pos:line="31" pos:column="5">/* Only if not an .htaccess file */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><operator pos:line="32" pos:column="9">!<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">old_path<pos:position pos:line="32" pos:column="18"/></name></expr>)<pos:position pos:line="32" pos:column="19"/></condition><then pos:line="32" pos:column="19"> <block pos:line="32" pos:column="20">{
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">cmd<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">override<pos:position pos:line="33" pos:column="22"/></name></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="25">OR_ALL<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">|<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="32">ACCESS_CONF<pos:position pos:line="33" pos:column="43"/></name></expr>;<pos:position pos:line="33" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="36" pos:column="5">/* initialize our config and fetch it */</comment>
    <expr_stmt><expr><name pos:line="37" pos:column="5">conf<pos:position pos:line="37" pos:column="9"/></name> <operator pos:line="37" pos:column="10">=<pos:position pos:line="37" pos:column="11"/></operator> <call><name pos:line="37" pos:column="12">ap_set_config_vectors<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><name><name pos:line="37" pos:column="34">cmd<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">server<pos:position pos:line="37" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="47">new_file_conf<pos:position pos:line="37" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="62">cmd<pos:position pos:line="37" pos:column="65"/></name><operator pos:line="37" pos:column="65">-&gt;<pos:position pos:line="37" pos:column="70"/></operator><name pos:line="37" pos:column="67">path<pos:position pos:line="37" pos:column="71"/></name></name></expr></argument>,
                                 <argument><expr><operator pos:line="38" pos:column="34">&amp;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="35">core_module<pos:position pos:line="38" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="48">cmd<pos:position pos:line="38" pos:column="51"/></name><operator pos:line="38" pos:column="51">-&gt;<pos:position pos:line="38" pos:column="56"/></operator><name pos:line="38" pos:column="53">pool<pos:position pos:line="38" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="40" pos:column="5">conf<pos:position pos:line="40" pos:column="9"/></name><operator pos:line="40" pos:column="9">-&gt;<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="11">condition<pos:position pos:line="40" pos:column="20"/></name></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <call><name pos:line="40" pos:column="23">ap_expr_parse<pos:position pos:line="40" pos:column="36"/></name><argument_list pos:line="40" pos:column="36">(<argument><expr><name><name pos:line="40" pos:column="37">cmd<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">-&gt;<pos:position pos:line="40" pos:column="45"/></operator><name pos:line="40" pos:column="42">pool<pos:position pos:line="40" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="48">condition<pos:position pos:line="40" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="59">&amp;<pos:position pos:line="40" pos:column="64"/></operator><name pos:line="40" pos:column="60">expr_err<pos:position pos:line="40" pos:column="68"/></name></expr></argument>)<pos:position pos:line="40" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="70"/></expr_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">expr_err<pos:position pos:line="41" pos:column="17"/></name></expr>)<pos:position pos:line="41" pos:column="18"/></condition><then pos:line="41" pos:column="18"> <block pos:line="41" pos:column="19">{
        <return pos:line="42" pos:column="9">return <expr><literal type="string" pos:line="42" pos:column="16">"Cannot parse condition clause"<pos:position pos:line="42" pos:column="47"/></literal></expr>;<pos:position pos:line="42" pos:column="48"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="45" pos:column="5">errmsg<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <call><name pos:line="45" pos:column="14">ap_walk_config<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><name><name pos:line="45" pos:column="29">cmd<pos:position pos:line="45" pos:column="32"/></name><operator pos:line="45" pos:column="32">-&gt;<pos:position pos:line="45" pos:column="37"/></operator><name pos:line="45" pos:column="34">directive<pos:position pos:line="45" pos:column="43"/></name><operator pos:line="45" pos:column="43">-&gt;<pos:position pos:line="45" pos:column="48"/></operator><name pos:line="45" pos:column="45">first_child<pos:position pos:line="45" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="58">cmd<pos:position pos:line="45" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="63">new_file_conf<pos:position pos:line="45" pos:column="76"/></name></expr></argument>)<pos:position pos:line="45" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="78"/></expr_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">errmsg<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">!=<pos:position pos:line="46" pos:column="18"/></operator> <name pos:line="46" pos:column="19">NULL<pos:position pos:line="46" pos:column="23"/></name></expr>)<pos:position pos:line="46" pos:column="24"/></condition><then pos:line="46" pos:column="24">
        <block type="pseudo"><return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">errmsg<pos:position pos:line="47" pos:column="22"/></name></expr>;<pos:position pos:line="47" pos:column="23"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="49" pos:column="5">conf<pos:position pos:line="49" pos:column="9"/></name><operator pos:line="49" pos:column="9">-&gt;<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="11">d<pos:position pos:line="49" pos:column="12"/></name></name> <operator pos:line="49" pos:column="13">=<pos:position pos:line="49" pos:column="14"/></operator> <name><name pos:line="49" pos:column="15">cmd<pos:position pos:line="49" pos:column="18"/></name><operator pos:line="49" pos:column="18">-&gt;<pos:position pos:line="49" pos:column="23"/></operator><name pos:line="49" pos:column="20">path<pos:position pos:line="49" pos:column="24"/></name></name></expr>;<pos:position pos:line="49" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">conf<pos:position pos:line="50" pos:column="9"/></name><operator pos:line="50" pos:column="9">-&gt;<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="11">d_is_fnmatch<pos:position pos:line="50" pos:column="23"/></name></name> <operator pos:line="50" pos:column="24">=<pos:position pos:line="50" pos:column="25"/></operator> <literal type="number" pos:line="50" pos:column="26">0<pos:position pos:line="50" pos:column="27"/></literal></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">conf<pos:position pos:line="51" pos:column="9"/></name><operator pos:line="51" pos:column="9">-&gt;<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="11">r<pos:position pos:line="51" pos:column="12"/></name></name> <operator pos:line="51" pos:column="13">=<pos:position pos:line="51" pos:column="14"/></operator> <name pos:line="51" pos:column="15">NULL<pos:position pos:line="51" pos:column="19"/></name></expr>;<pos:position pos:line="51" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="53" pos:column="5">ap_add_file_conf<pos:position pos:line="53" pos:column="21"/></name><argument_list pos:line="53" pos:column="21">(<argument><expr><name pos:line="53" pos:column="22">c<pos:position pos:line="53" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="25">new_file_conf<pos:position pos:line="53" pos:column="38"/></name></expr></argument>)<pos:position pos:line="53" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="40"/></expr_stmt>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">*<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">arg<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">!=<pos:position pos:line="55" pos:column="16"/></operator> <literal type="char" pos:line="55" pos:column="17">'\0'<pos:position pos:line="55" pos:column="21"/></literal></expr>)<pos:position pos:line="55" pos:column="22"/></condition><then pos:line="55" pos:column="22"> <block pos:line="55" pos:column="23">{
        <return pos:line="56" pos:column="9">return <expr><call><name pos:line="56" pos:column="16">apr_pstrcat<pos:position pos:line="56" pos:column="27"/></name><argument_list pos:line="56" pos:column="27">(<argument><expr><name><name pos:line="56" pos:column="28">cmd<pos:position pos:line="56" pos:column="31"/></name><operator pos:line="56" pos:column="31">-&gt;<pos:position pos:line="56" pos:column="36"/></operator><name pos:line="56" pos:column="33">pool<pos:position pos:line="56" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="39">"Multiple "<pos:position pos:line="56" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="52">thiscmd<pos:position pos:line="56" pos:column="59"/></name><operator pos:line="56" pos:column="59">-&gt;<pos:position pos:line="56" pos:column="64"/></operator><name pos:line="56" pos:column="61">name<pos:position pos:line="56" pos:column="65"/></name></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="57" pos:column="28">"&gt; arguments not supported."<pos:position pos:line="57" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="58">NULL<pos:position pos:line="57" pos:column="62"/></name></expr></argument>)<pos:position pos:line="57" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="64"/></return>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="60" pos:column="5">cmd<pos:position pos:line="60" pos:column="8"/></name><operator pos:line="60" pos:column="8">-&gt;<pos:position pos:line="60" pos:column="13"/></operator><name pos:line="60" pos:column="10">path<pos:position pos:line="60" pos:column="14"/></name></name> <operator pos:line="60" pos:column="15">=<pos:position pos:line="60" pos:column="16"/></operator> <name pos:line="60" pos:column="17">old_path<pos:position pos:line="60" pos:column="25"/></name></expr>;<pos:position pos:line="60" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="61" pos:column="5">cmd<pos:position pos:line="61" pos:column="8"/></name><operator pos:line="61" pos:column="8">-&gt;<pos:position pos:line="61" pos:column="13"/></operator><name pos:line="61" pos:column="10">override<pos:position pos:line="61" pos:column="18"/></name></name> <operator pos:line="61" pos:column="19">=<pos:position pos:line="61" pos:column="20"/></operator> <name pos:line="61" pos:column="21">old_overrides<pos:position pos:line="61" pos:column="34"/></name></expr>;<pos:position pos:line="61" pos:column="35"/></expr_stmt>

    <return pos:line="63" pos:column="5">return <expr><name pos:line="63" pos:column="12">NULL<pos:position pos:line="63" pos:column="16"/></name></expr>;<pos:position pos:line="63" pos:column="17"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

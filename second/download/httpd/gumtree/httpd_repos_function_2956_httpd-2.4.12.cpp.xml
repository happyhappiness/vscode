<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2956_httpd-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">fcgi_define_provider<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">cmd_parms<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">cmd<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="2" pos:column="41">void<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">d<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="3" pos:column="41">int<pos:position pos:line="3" pos:column="44"/></name></type> <name pos:line="3" pos:column="45">argc<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="4" pos:column="41">char<pos:position pos:line="4" pos:column="45"/></name> <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier><specifier pos:line="4" pos:column="47">const<pos:position pos:line="4" pos:column="52"/></specifier></type> <name><name pos:line="4" pos:column="53">argv<pos:position pos:line="4" pos:column="57"/></name><index pos:line="4" pos:column="57">[]<pos:position pos:line="4" pos:column="59"/></index></name></decl></parameter>)<pos:position pos:line="4" pos:column="60"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">dname<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><literal type="string" pos:line="6" pos:column="25">"AuthnzFcgiDefineProvider"<pos:position pos:line="6" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ap_rxplus_t<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">fcgi_backend_regex<pos:position pos:line="7" pos:column="36"/></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">rv<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">host<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">err<pos:position pos:line="10" pos:column="20"/></name></decl>, <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="23">stype<pos:position pos:line="10" pos:column="28"/></name></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">fcgi_provider_conf<pos:position pos:line="11" pos:column="23"/></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">conf<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><call><name pos:line="11" pos:column="32">apr_pcalloc<pos:position pos:line="11" pos:column="43"/></name><argument_list pos:line="11" pos:column="43">(<argument><expr><name><name pos:line="11" pos:column="44">cmd<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">-&gt;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="49">pool<pos:position pos:line="11" pos:column="53"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="55">sizeof<argument_list pos:line="11" pos:column="61">(<argument><expr><operator pos:line="11" pos:column="62">*<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="63">conf<pos:position pos:line="11" pos:column="67"/></name></expr></argument>)<pos:position pos:line="11" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="70"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">ca<pos:position pos:line="12" pos:column="11"/></name> <init pos:line="12" pos:column="12">= <expr><literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="17">rc<pos:position pos:line="12" pos:column="19"/></name></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><name pos:line="14" pos:column="5">fcgi_backend_regex<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <call><name pos:line="14" pos:column="26">ap_rxplus_compile<pos:position pos:line="14" pos:column="43"/></name><argument_list pos:line="14" pos:column="43">(<argument><expr><name><name pos:line="14" pos:column="44">cmd<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">-&gt;<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="49">pool<pos:position pos:line="14" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="55">FCGI_BACKEND_REGEX_STR<pos:position pos:line="14" pos:column="77"/></name></expr></argument>)<pos:position pos:line="14" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="79"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">fcgi_backend_regex<pos:position pos:line="15" pos:column="28"/></name></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29"> <block pos:line="15" pos:column="30">{
        <return pos:line="16" pos:column="9">return <expr><call><name pos:line="16" pos:column="16">apr_psprintf<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name><name pos:line="16" pos:column="29">cmd<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">-&gt;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="34">pool<pos:position pos:line="16" pos:column="38"/></name></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="17" pos:column="29">"%s: failed to compile regexec '%s'"<pos:position pos:line="17" pos:column="65"/></literal></expr></argument>,
                            <argument><expr><name pos:line="18" pos:column="29">dname<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="36">FCGI_BACKEND_REGEX_STR<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="21" pos:column="5">err<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <call><name pos:line="21" pos:column="11">ap_check_cmd_context<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">cmd<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">GLOBAL_ONLY<pos:position pos:line="21" pos:column="48"/></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">err<pos:position pos:line="22" pos:column="12"/></name></expr>)<pos:position pos:line="22" pos:column="13"/></condition><then pos:line="22" pos:column="13">
        <block type="pseudo"><return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">err<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></return></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">ca<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">&gt;=<pos:position pos:line="25" pos:column="17"/></operator> <name pos:line="25" pos:column="15">argc<pos:position pos:line="25" pos:column="19"/></name></expr>)<pos:position pos:line="25" pos:column="20"/></condition><then pos:line="25" pos:column="20"> <block pos:line="25" pos:column="21">{
        <return pos:line="26" pos:column="9">return <expr><call><name pos:line="26" pos:column="16">apr_pstrcat<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name><name pos:line="26" pos:column="28">cmd<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">-&gt;<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="33">pool<pos:position pos:line="26" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="39">dname<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="46">": No type given"<pos:position pos:line="26" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="65">NULL<pos:position pos:line="26" pos:column="69"/></name></expr></argument>)<pos:position pos:line="26" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="71"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="29" pos:column="5">stype<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <name><name pos:line="29" pos:column="13">argv<pos:position pos:line="29" pos:column="17"/></name><index pos:line="29" pos:column="17">[<expr><name pos:line="29" pos:column="18">ca<pos:position pos:line="29" pos:column="20"/></name></expr>]<pos:position pos:line="29" pos:column="21"/></index></name></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">ca<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">++<pos:position pos:line="30" pos:column="9"/></operator></expr>;<pos:position pos:line="30" pos:column="10"/></expr_stmt>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><operator pos:line="32" pos:column="9">!<pos:position pos:line="32" pos:column="10"/></operator><call><name pos:line="32" pos:column="10">strcasecmp<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><name pos:line="32" pos:column="21">stype<pos:position pos:line="32" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="28">"authn"<pos:position pos:line="32" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="37"/></condition><then pos:line="32" pos:column="37"> <block pos:line="32" pos:column="38">{
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">conf<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">is_authn<pos:position pos:line="33" pos:column="23"/></name></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <literal type="number" pos:line="33" pos:column="26">1<pos:position pos:line="33" pos:column="27"/></literal></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then>
    <elseif pos:line="35" pos:column="5">else <if pos:line="35" pos:column="10">if <condition pos:line="35" pos:column="13">(<expr><operator pos:line="35" pos:column="14">!<pos:position pos:line="35" pos:column="15"/></operator><call><name pos:line="35" pos:column="15">strcasecmp<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">stype<pos:position pos:line="35" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="33">"authz"<pos:position pos:line="35" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="42"/></condition><then pos:line="35" pos:column="42"> <block pos:line="35" pos:column="43">{
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">conf<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">is_authz<pos:position pos:line="36" pos:column="23"/></name></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <literal type="number" pos:line="36" pos:column="26">1<pos:position pos:line="36" pos:column="27"/></literal></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="38" pos:column="5">else <if pos:line="38" pos:column="10">if <condition pos:line="38" pos:column="13">(<expr><operator pos:line="38" pos:column="14">!<pos:position pos:line="38" pos:column="15"/></operator><call><name pos:line="38" pos:column="15">strcasecmp<pos:position pos:line="38" pos:column="25"/></name><argument_list pos:line="38" pos:column="25">(<argument><expr><name pos:line="38" pos:column="26">stype<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="33">"authnz"<pos:position pos:line="38" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="43"/></condition><then pos:line="38" pos:column="43"> <block pos:line="38" pos:column="44">{
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">conf<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">-&gt;<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="15">is_authn<pos:position pos:line="39" pos:column="23"/></name></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <name><name pos:line="39" pos:column="26">conf<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">is_authz<pos:position pos:line="39" pos:column="40"/></name></name> <operator pos:line="39" pos:column="41">=<pos:position pos:line="39" pos:column="42"/></operator> <literal type="number" pos:line="39" pos:column="43">1<pos:position pos:line="39" pos:column="44"/></literal></expr>;<pos:position pos:line="39" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if></elseif>
    <else pos:line="41" pos:column="5">else <block pos:line="41" pos:column="10">{
        <return pos:line="42" pos:column="9">return <expr><call><name pos:line="42" pos:column="16">apr_pstrcat<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name><name pos:line="42" pos:column="28">cmd<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">-&gt;<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="33">pool<pos:position pos:line="42" pos:column="37"/></name></name></expr></argument>,
                           <argument><expr><name pos:line="43" pos:column="28">dname<pos:position pos:line="43" pos:column="33"/></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="44" pos:column="28">": Invalid provider type "<pos:position pos:line="44" pos:column="54"/></literal></expr></argument>,
                           <argument><expr><name pos:line="45" pos:column="28">stype<pos:position pos:line="45" pos:column="33"/></name></expr></argument>,
                           <argument><expr><name pos:line="46" pos:column="28">NULL<pos:position pos:line="46" pos:column="32"/></name></expr></argument>)<pos:position pos:line="46" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="34"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></else></if>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">ca<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">&gt;=<pos:position pos:line="49" pos:column="17"/></operator> <name pos:line="49" pos:column="15">argc<pos:position pos:line="49" pos:column="19"/></name></expr>)<pos:position pos:line="49" pos:column="20"/></condition><then pos:line="49" pos:column="20"> <block pos:line="49" pos:column="21">{
        <return pos:line="50" pos:column="9">return <expr><call><name pos:line="50" pos:column="16">apr_pstrcat<pos:position pos:line="50" pos:column="27"/></name><argument_list pos:line="50" pos:column="27">(<argument><expr><name><name pos:line="50" pos:column="28">cmd<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">-&gt;<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="33">pool<pos:position pos:line="50" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="39">dname<pos:position pos:line="50" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="46">": No provider name given"<pos:position pos:line="50" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="74">NULL<pos:position pos:line="50" pos:column="78"/></name></expr></argument>)<pos:position pos:line="50" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="80"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">conf<pos:position pos:line="52" pos:column="9"/></name><operator pos:line="52" pos:column="9">-&gt;<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="11">name<pos:position pos:line="52" pos:column="15"/></name></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <name><name pos:line="52" pos:column="18">argv<pos:position pos:line="52" pos:column="22"/></name><index pos:line="52" pos:column="22">[<expr><name pos:line="52" pos:column="23">ca<pos:position pos:line="52" pos:column="25"/></name></expr>]<pos:position pos:line="52" pos:column="26"/></index></name></expr>;<pos:position pos:line="52" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="53" pos:column="5">ca<pos:position pos:line="53" pos:column="7"/></name><operator pos:line="53" pos:column="7">++<pos:position pos:line="53" pos:column="9"/></operator></expr>;<pos:position pos:line="53" pos:column="10"/></expr_stmt>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name pos:line="55" pos:column="9">ca<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">&gt;=<pos:position pos:line="55" pos:column="17"/></operator> <name pos:line="55" pos:column="15">argc<pos:position pos:line="55" pos:column="19"/></name></expr>)<pos:position pos:line="55" pos:column="20"/></condition><then pos:line="55" pos:column="20"> <block pos:line="55" pos:column="21">{
        <return pos:line="56" pos:column="9">return <expr><call><name pos:line="56" pos:column="16">apr_pstrcat<pos:position pos:line="56" pos:column="27"/></name><argument_list pos:line="56" pos:column="27">(<argument><expr><name><name pos:line="56" pos:column="28">cmd<pos:position pos:line="56" pos:column="31"/></name><operator pos:line="56" pos:column="31">-&gt;<pos:position pos:line="56" pos:column="36"/></operator><name pos:line="56" pos:column="33">pool<pos:position pos:line="56" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="39">dname<pos:position pos:line="56" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="46">": No backend-address given"<pos:position pos:line="56" pos:column="74"/></literal></expr></argument>,
                           <argument><expr><name pos:line="57" pos:column="28">NULL<pos:position pos:line="57" pos:column="32"/></name></expr></argument>)<pos:position pos:line="57" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="34"/></return>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="60" pos:column="5">rc<pos:position pos:line="60" pos:column="7"/></name> <operator pos:line="60" pos:column="8">=<pos:position pos:line="60" pos:column="9"/></operator> <call><name pos:line="60" pos:column="10">ap_rxplus_exec<pos:position pos:line="60" pos:column="24"/></name><argument_list pos:line="60" pos:column="24">(<argument><expr><name><name pos:line="60" pos:column="25">cmd<pos:position pos:line="60" pos:column="28"/></name><operator pos:line="60" pos:column="28">-&gt;<pos:position pos:line="60" pos:column="33"/></operator><name pos:line="60" pos:column="30">pool<pos:position pos:line="60" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="36">fcgi_backend_regex<pos:position pos:line="60" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="56">argv<pos:position pos:line="60" pos:column="60"/></name><index pos:line="60" pos:column="60">[<expr><name pos:line="60" pos:column="61">ca<pos:position pos:line="60" pos:column="63"/></name></expr>]<pos:position pos:line="60" pos:column="64"/></index></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="66">NULL<pos:position pos:line="60" pos:column="70"/></name></expr></argument>)<pos:position pos:line="60" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="72"/></expr_stmt>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><operator pos:line="61" pos:column="9">!<pos:position pos:line="61" pos:column="10"/></operator><name pos:line="61" pos:column="10">rc<pos:position pos:line="61" pos:column="12"/></name> <operator pos:line="61" pos:column="13">||<pos:position pos:line="61" pos:column="15"/></operator> <call><name pos:line="61" pos:column="16">ap_rxplus_nmatch<pos:position pos:line="61" pos:column="32"/></name><argument_list pos:line="61" pos:column="32">(<argument><expr><name pos:line="61" pos:column="33">fcgi_backend_regex<pos:position pos:line="61" pos:column="51"/></name></expr></argument>)<pos:position pos:line="61" pos:column="52"/></argument_list></call> <operator pos:line="61" pos:column="53">!=<pos:position pos:line="61" pos:column="55"/></operator> <literal type="number" pos:line="61" pos:column="56">3<pos:position pos:line="61" pos:column="57"/></literal></expr>)<pos:position pos:line="61" pos:column="58"/></condition><then pos:line="61" pos:column="58"> <block pos:line="61" pos:column="59">{
        <return pos:line="62" pos:column="9">return <expr><call><name pos:line="62" pos:column="16">apr_pstrcat<pos:position pos:line="62" pos:column="27"/></name><argument_list pos:line="62" pos:column="27">(<argument><expr><name><name pos:line="62" pos:column="28">cmd<pos:position pos:line="62" pos:column="31"/></name><operator pos:line="62" pos:column="31">-&gt;<pos:position pos:line="62" pos:column="36"/></operator><name pos:line="62" pos:column="33">pool<pos:position pos:line="62" pos:column="37"/></name></name></expr></argument>,
                           <argument><expr><name pos:line="63" pos:column="28">dname<pos:position pos:line="63" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="35">": backend-address '"<pos:position pos:line="63" pos:column="56"/></literal></expr></argument>,
                           <argument><expr><name><name pos:line="64" pos:column="28">argv<pos:position pos:line="64" pos:column="32"/></name><index pos:line="64" pos:column="32">[<expr><name pos:line="64" pos:column="33">ca<pos:position pos:line="64" pos:column="35"/></name></expr>]<pos:position pos:line="64" pos:column="36"/></index></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="65" pos:column="28">"' has invalid form"<pos:position pos:line="65" pos:column="48"/></literal></expr></argument>,
                           <argument><expr><name pos:line="66" pos:column="28">NULL<pos:position pos:line="66" pos:column="32"/></name></expr></argument>)<pos:position pos:line="66" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="34"/></return>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="69" pos:column="5">host<pos:position pos:line="69" pos:column="9"/></name> <operator pos:line="69" pos:column="10">=<pos:position pos:line="69" pos:column="11"/></operator> <call><name pos:line="69" pos:column="12">ap_rxplus_pmatch<pos:position pos:line="69" pos:column="28"/></name><argument_list pos:line="69" pos:column="28">(<argument><expr><name><name pos:line="69" pos:column="29">cmd<pos:position pos:line="69" pos:column="32"/></name><operator pos:line="69" pos:column="32">-&gt;<pos:position pos:line="69" pos:column="37"/></operator><name pos:line="69" pos:column="34">pool<pos:position pos:line="69" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="40">fcgi_backend_regex<pos:position pos:line="69" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="60">1<pos:position pos:line="69" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="63"/></expr_stmt>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name><name pos:line="70" pos:column="9">host<pos:position pos:line="70" pos:column="13"/></name><index pos:line="70" pos:column="13">[<expr><literal type="number" pos:line="70" pos:column="14">0<pos:position pos:line="70" pos:column="15"/></literal></expr>]<pos:position pos:line="70" pos:column="16"/></index></name> <operator pos:line="70" pos:column="17">==<pos:position pos:line="70" pos:column="19"/></operator> <literal type="char" pos:line="70" pos:column="20">'['<pos:position pos:line="70" pos:column="23"/></literal> <operator pos:line="70" pos:column="24">&amp;&amp;<pos:position pos:line="70" pos:column="34"/></operator> <name><name pos:line="70" pos:column="27">host<pos:position pos:line="70" pos:column="31"/></name><index pos:line="70" pos:column="31">[<expr><call><name pos:line="70" pos:column="32">strlen<pos:position pos:line="70" pos:column="38"/></name><argument_list pos:line="70" pos:column="38">(<argument><expr><name pos:line="70" pos:column="39">host<pos:position pos:line="70" pos:column="43"/></name></expr></argument>)<pos:position pos:line="70" pos:column="44"/></argument_list></call> <operator pos:line="70" pos:column="45">-<pos:position pos:line="70" pos:column="46"/></operator> <literal type="number" pos:line="70" pos:column="47">1<pos:position pos:line="70" pos:column="48"/></literal></expr>]<pos:position pos:line="70" pos:column="49"/></index></name> <operator pos:line="70" pos:column="50">==<pos:position pos:line="70" pos:column="52"/></operator> <literal type="char" pos:line="70" pos:column="53">']'<pos:position pos:line="70" pos:column="56"/></literal></expr>)<pos:position pos:line="70" pos:column="57"/></condition><then pos:line="70" pos:column="57"> <block pos:line="70" pos:column="58">{
        <expr_stmt><expr><name pos:line="71" pos:column="9">host<pos:position pos:line="71" pos:column="13"/></name> <operator pos:line="71" pos:column="14">+=<pos:position pos:line="71" pos:column="16"/></operator> <literal type="number" pos:line="71" pos:column="17">1<pos:position pos:line="71" pos:column="18"/></literal></expr>;<pos:position pos:line="71" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="72" pos:column="9">host<pos:position pos:line="72" pos:column="13"/></name><index pos:line="72" pos:column="13">[<expr><call><name pos:line="72" pos:column="14">strlen<pos:position pos:line="72" pos:column="20"/></name><argument_list pos:line="72" pos:column="20">(<argument><expr><name pos:line="72" pos:column="21">host<pos:position pos:line="72" pos:column="25"/></name></expr></argument>)<pos:position pos:line="72" pos:column="26"/></argument_list></call> <operator pos:line="72" pos:column="27">-<pos:position pos:line="72" pos:column="28"/></operator> <literal type="number" pos:line="72" pos:column="29">1<pos:position pos:line="72" pos:column="30"/></literal></expr>]<pos:position pos:line="72" pos:column="31"/></index></name> <operator pos:line="72" pos:column="32">=<pos:position pos:line="72" pos:column="33"/></operator> <literal type="char" pos:line="72" pos:column="34">'\0'<pos:position pos:line="72" pos:column="38"/></literal></expr>;<pos:position pos:line="72" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="75" pos:column="5">conf<pos:position pos:line="75" pos:column="9"/></name><operator pos:line="75" pos:column="9">-&gt;<pos:position pos:line="75" pos:column="14"/></operator><name pos:line="75" pos:column="11">port<pos:position pos:line="75" pos:column="15"/></name></name> <operator pos:line="75" pos:column="16">=<pos:position pos:line="75" pos:column="17"/></operator> <call><name pos:line="75" pos:column="18">atoi<pos:position pos:line="75" pos:column="22"/></name><argument_list pos:line="75" pos:column="22">(<argument><expr><call><name pos:line="75" pos:column="23">ap_rxplus_pmatch<pos:position pos:line="75" pos:column="39"/></name><argument_list pos:line="75" pos:column="39">(<argument><expr><name><name pos:line="75" pos:column="40">cmd<pos:position pos:line="75" pos:column="43"/></name><operator pos:line="75" pos:column="43">-&gt;<pos:position pos:line="75" pos:column="48"/></operator><name pos:line="75" pos:column="45">pool<pos:position pos:line="75" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="51">fcgi_backend_regex<pos:position pos:line="75" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="71">2<pos:position pos:line="75" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="75"/></expr_stmt>
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name><name pos:line="76" pos:column="9">conf<pos:position pos:line="76" pos:column="13"/></name><operator pos:line="76" pos:column="13">-&gt;<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="15">port<pos:position pos:line="76" pos:column="19"/></name></name> <operator pos:line="76" pos:column="20">&gt;<pos:position pos:line="76" pos:column="24"/></operator> <literal type="number" pos:line="76" pos:column="22">65535<pos:position pos:line="76" pos:column="27"/></literal></expr>)<pos:position pos:line="76" pos:column="28"/></condition><then pos:line="76" pos:column="28"> <block pos:line="76" pos:column="29">{
        <return pos:line="77" pos:column="9">return <expr><call><name pos:line="77" pos:column="16">apr_pstrcat<pos:position pos:line="77" pos:column="27"/></name><argument_list pos:line="77" pos:column="27">(<argument><expr><name><name pos:line="77" pos:column="28">cmd<pos:position pos:line="77" pos:column="31"/></name><operator pos:line="77" pos:column="31">-&gt;<pos:position pos:line="77" pos:column="36"/></operator><name pos:line="77" pos:column="33">pool<pos:position pos:line="77" pos:column="37"/></name></name></expr></argument>,
                           <argument><expr><name pos:line="78" pos:column="28">dname<pos:position pos:line="78" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="35">": backend-address '"<pos:position pos:line="78" pos:column="56"/></literal></expr></argument>,
                           <argument><expr><name><name pos:line="79" pos:column="28">argv<pos:position pos:line="79" pos:column="32"/></name><index pos:line="79" pos:column="32">[<expr><name pos:line="79" pos:column="33">ca<pos:position pos:line="79" pos:column="35"/></name></expr>]<pos:position pos:line="79" pos:column="36"/></index></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="80" pos:column="28">"' has invalid port"<pos:position pos:line="80" pos:column="48"/></literal></expr></argument>,
                           <argument><expr><name pos:line="81" pos:column="28">NULL<pos:position pos:line="81" pos:column="32"/></name></expr></argument>)<pos:position pos:line="81" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="34"/></return>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="84" pos:column="5">conf<pos:position pos:line="84" pos:column="9"/></name><operator pos:line="84" pos:column="9">-&gt;<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="11">backend<pos:position pos:line="84" pos:column="18"/></name></name> <operator pos:line="84" pos:column="19">=<pos:position pos:line="84" pos:column="20"/></operator> <name><name pos:line="84" pos:column="21">argv<pos:position pos:line="84" pos:column="25"/></name><index pos:line="84" pos:column="25">[<expr><name pos:line="84" pos:column="26">ca<pos:position pos:line="84" pos:column="28"/></name></expr>]<pos:position pos:line="84" pos:column="29"/></index></name></expr>;<pos:position pos:line="84" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="85" pos:column="5">conf<pos:position pos:line="85" pos:column="9"/></name><operator pos:line="85" pos:column="9">-&gt;<pos:position pos:line="85" pos:column="14"/></operator><name pos:line="85" pos:column="11">host<pos:position pos:line="85" pos:column="15"/></name></name> <operator pos:line="85" pos:column="16">=<pos:position pos:line="85" pos:column="17"/></operator> <name pos:line="85" pos:column="18">host<pos:position pos:line="85" pos:column="22"/></name></expr>;<pos:position pos:line="85" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="86" pos:column="5">ca<pos:position pos:line="86" pos:column="7"/></name><operator pos:line="86" pos:column="7">++<pos:position pos:line="86" pos:column="9"/></operator></expr>;<pos:position pos:line="86" pos:column="10"/></expr_stmt>

    <expr_stmt><expr><name pos:line="88" pos:column="5">rv<pos:position pos:line="88" pos:column="7"/></name> <operator pos:line="88" pos:column="8">=<pos:position pos:line="88" pos:column="9"/></operator> <call><name pos:line="88" pos:column="10">apr_sockaddr_info_get<pos:position pos:line="88" pos:column="31"/></name><argument_list pos:line="88" pos:column="31">(<argument><expr><operator pos:line="88" pos:column="32">&amp;<pos:position pos:line="88" pos:column="37"/></operator><name><name pos:line="88" pos:column="33">conf<pos:position pos:line="88" pos:column="37"/></name><operator pos:line="88" pos:column="37">-&gt;<pos:position pos:line="88" pos:column="42"/></operator><name pos:line="88" pos:column="39">backend_addrs<pos:position pos:line="88" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="54">conf<pos:position pos:line="88" pos:column="58"/></name><operator pos:line="88" pos:column="58">-&gt;<pos:position pos:line="88" pos:column="63"/></operator><name pos:line="88" pos:column="60">host<pos:position pos:line="88" pos:column="64"/></name></name></expr></argument>,
                               <argument><expr><name pos:line="89" pos:column="32">APR_UNSPEC<pos:position pos:line="89" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="44">conf<pos:position pos:line="89" pos:column="48"/></name><operator pos:line="89" pos:column="48">-&gt;<pos:position pos:line="89" pos:column="53"/></operator><name pos:line="89" pos:column="50">port<pos:position pos:line="89" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="56">0<pos:position pos:line="89" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="59">cmd<pos:position pos:line="89" pos:column="62"/></name><operator pos:line="89" pos:column="62">-&gt;<pos:position pos:line="89" pos:column="67"/></operator><name pos:line="89" pos:column="64">pool<pos:position pos:line="89" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="70"/></expr_stmt>
    <if pos:line="90" pos:column="5">if <condition pos:line="90" pos:column="8">(<expr><name pos:line="90" pos:column="9">rv<pos:position pos:line="90" pos:column="11"/></name> <operator pos:line="90" pos:column="12">!=<pos:position pos:line="90" pos:column="14"/></operator> <name pos:line="90" pos:column="15">APR_SUCCESS<pos:position pos:line="90" pos:column="26"/></name></expr>)<pos:position pos:line="90" pos:column="27"/></condition><then pos:line="90" pos:column="27"> <block pos:line="90" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="91" pos:column="9">ap_log_error<pos:position pos:line="91" pos:column="21"/></name><argument_list pos:line="91" pos:column="21">(<argument><expr><name pos:line="91" pos:column="22">APLOG_MARK<pos:position pos:line="91" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="34">APLOG_STARTUP<pos:position pos:line="91" pos:column="47"/></name><operator pos:line="91" pos:column="47">|<pos:position pos:line="91" pos:column="48"/></operator><name pos:line="91" pos:column="48">APLOG_CRIT<pos:position pos:line="91" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="60">rv<pos:position pos:line="91" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="64">NULL<pos:position pos:line="91" pos:column="68"/></name></expr></argument>,
                     <argument><expr><call><name pos:line="92" pos:column="22">APLOGNO<pos:position pos:line="92" pos:column="29"/></name><argument_list pos:line="92" pos:column="29">(<argument><expr><literal type="number" pos:line="92" pos:column="30">02530<pos:position pos:line="92" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="36"/></argument_list></call> <literal type="string" pos:line="92" pos:column="37">"Address %s could not be resolved"<pos:position pos:line="92" pos:column="71"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="93" pos:column="22">conf<pos:position pos:line="93" pos:column="26"/></name><operator pos:line="93" pos:column="26">-&gt;<pos:position pos:line="93" pos:column="31"/></operator><name pos:line="93" pos:column="28">backend<pos:position pos:line="93" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="37"/></expr_stmt>
        <return pos:line="94" pos:column="9">return <expr><call><name pos:line="94" pos:column="16">apr_pstrcat<pos:position pos:line="94" pos:column="27"/></name><argument_list pos:line="94" pos:column="27">(<argument><expr><name><name pos:line="94" pos:column="28">cmd<pos:position pos:line="94" pos:column="31"/></name><operator pos:line="94" pos:column="31">-&gt;<pos:position pos:line="94" pos:column="36"/></operator><name pos:line="94" pos:column="33">pool<pos:position pos:line="94" pos:column="37"/></name></name></expr></argument>,
                           <argument><expr><name pos:line="95" pos:column="28">dname<pos:position pos:line="95" pos:column="33"/></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="96" pos:column="28">": Error resolving backend address"<pos:position pos:line="96" pos:column="63"/></literal></expr></argument>,
                           <argument><expr><name pos:line="97" pos:column="28">NULL<pos:position pos:line="97" pos:column="32"/></name></expr></argument>)<pos:position pos:line="97" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="34"/></return>
    }<pos:position pos:line="98" pos:column="6"/></block></then></if>

    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><name pos:line="100" pos:column="9">ca<pos:position pos:line="100" pos:column="11"/></name> <operator pos:line="100" pos:column="12">!=<pos:position pos:line="100" pos:column="14"/></operator> <name pos:line="100" pos:column="15">argc<pos:position pos:line="100" pos:column="19"/></name></expr>)<pos:position pos:line="100" pos:column="20"/></condition><then pos:line="100" pos:column="20"> <block pos:line="100" pos:column="21">{
        <return pos:line="101" pos:column="9">return <expr><call><name pos:line="101" pos:column="16">apr_pstrcat<pos:position pos:line="101" pos:column="27"/></name><argument_list pos:line="101" pos:column="27">(<argument><expr><name><name pos:line="101" pos:column="28">cmd<pos:position pos:line="101" pos:column="31"/></name><operator pos:line="101" pos:column="31">-&gt;<pos:position pos:line="101" pos:column="36"/></operator><name pos:line="101" pos:column="33">pool<pos:position pos:line="101" pos:column="37"/></name></name></expr></argument>,
                           <argument><expr><name pos:line="102" pos:column="28">dname<pos:position pos:line="102" pos:column="33"/></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="103" pos:column="28">": Unexpected parameter "<pos:position pos:line="103" pos:column="53"/></literal></expr></argument>,
                           <argument><expr><name><name pos:line="104" pos:column="28">argv<pos:position pos:line="104" pos:column="32"/></name><index pos:line="104" pos:column="32">[<expr><name pos:line="104" pos:column="33">ca<pos:position pos:line="104" pos:column="35"/></name></expr>]<pos:position pos:line="104" pos:column="36"/></index></name></expr></argument>,
                           <argument><expr><name pos:line="105" pos:column="28">NULL<pos:position pos:line="105" pos:column="32"/></name></expr></argument>)<pos:position pos:line="105" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="34"/></return>
    }<pos:position pos:line="106" pos:column="6"/></block></then></if>

    <if pos:line="108" pos:column="5">if <condition pos:line="108" pos:column="8">(<expr><name><name pos:line="108" pos:column="9">conf<pos:position pos:line="108" pos:column="13"/></name><operator pos:line="108" pos:column="13">-&gt;<pos:position pos:line="108" pos:column="18"/></operator><name pos:line="108" pos:column="15">is_authn<pos:position pos:line="108" pos:column="23"/></name></name></expr>)<pos:position pos:line="108" pos:column="24"/></condition><then pos:line="108" pos:column="24"> <block pos:line="108" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="109" pos:column="9">apr_hash_set<pos:position pos:line="109" pos:column="21"/></name><argument_list pos:line="109" pos:column="21">(<argument><expr><name pos:line="109" pos:column="22">fcgi_authn_providers<pos:position pos:line="109" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="44">conf<pos:position pos:line="109" pos:column="48"/></name><operator pos:line="109" pos:column="48">-&gt;<pos:position pos:line="109" pos:column="53"/></operator><name pos:line="109" pos:column="50">name<pos:position pos:line="109" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="56">APR_HASH_KEY_STRING<pos:position pos:line="109" pos:column="75"/></name></expr></argument>,
                     <argument><expr><name pos:line="110" pos:column="22">conf<pos:position pos:line="110" pos:column="26"/></name></expr></argument>)<pos:position pos:line="110" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="111" pos:column="9">ap_register_auth_provider<pos:position pos:line="111" pos:column="34"/></name><argument_list pos:line="111" pos:column="34">(<argument><expr><name><name pos:line="111" pos:column="35">cmd<pos:position pos:line="111" pos:column="38"/></name><operator pos:line="111" pos:column="38">-&gt;<pos:position pos:line="111" pos:column="43"/></operator><name pos:line="111" pos:column="40">pool<pos:position pos:line="111" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="46">AUTHN_PROVIDER_GROUP<pos:position pos:line="111" pos:column="66"/></name></expr></argument>,
                                  <argument><expr><name><name pos:line="112" pos:column="35">conf<pos:position pos:line="112" pos:column="39"/></name><operator pos:line="112" pos:column="39">-&gt;<pos:position pos:line="112" pos:column="44"/></operator><name pos:line="112" pos:column="41">name<pos:position pos:line="112" pos:column="45"/></name></name></expr></argument>,
                                  <argument><expr><name pos:line="113" pos:column="35">AUTHN_PROVIDER_VERSION<pos:position pos:line="113" pos:column="57"/></name></expr></argument>,
                                  <argument><expr><operator pos:line="114" pos:column="35">&amp;<pos:position pos:line="114" pos:column="40"/></operator><name pos:line="114" pos:column="36">fcgi_authn_provider<pos:position pos:line="114" pos:column="55"/></name></expr></argument>,
                                  <argument><expr><name pos:line="115" pos:column="35">AP_AUTH_INTERNAL_PER_CONF<pos:position pos:line="115" pos:column="60"/></name></expr></argument>)<pos:position pos:line="115" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="116" pos:column="6"/></block></then></if>

    <if pos:line="118" pos:column="5">if <condition pos:line="118" pos:column="8">(<expr><name><name pos:line="118" pos:column="9">conf<pos:position pos:line="118" pos:column="13"/></name><operator pos:line="118" pos:column="13">-&gt;<pos:position pos:line="118" pos:column="18"/></operator><name pos:line="118" pos:column="15">is_authz<pos:position pos:line="118" pos:column="23"/></name></name></expr>)<pos:position pos:line="118" pos:column="24"/></condition><then pos:line="118" pos:column="24"> <block pos:line="118" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="119" pos:column="9">apr_hash_set<pos:position pos:line="119" pos:column="21"/></name><argument_list pos:line="119" pos:column="21">(<argument><expr><name pos:line="119" pos:column="22">fcgi_authz_providers<pos:position pos:line="119" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="44">conf<pos:position pos:line="119" pos:column="48"/></name><operator pos:line="119" pos:column="48">-&gt;<pos:position pos:line="119" pos:column="53"/></operator><name pos:line="119" pos:column="50">name<pos:position pos:line="119" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="56">APR_HASH_KEY_STRING<pos:position pos:line="119" pos:column="75"/></name></expr></argument>,
                     <argument><expr><name pos:line="120" pos:column="22">conf<pos:position pos:line="120" pos:column="26"/></name></expr></argument>)<pos:position pos:line="120" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="121" pos:column="9">ap_register_auth_provider<pos:position pos:line="121" pos:column="34"/></name><argument_list pos:line="121" pos:column="34">(<argument><expr><name><name pos:line="121" pos:column="35">cmd<pos:position pos:line="121" pos:column="38"/></name><operator pos:line="121" pos:column="38">-&gt;<pos:position pos:line="121" pos:column="43"/></operator><name pos:line="121" pos:column="40">pool<pos:position pos:line="121" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="46">AUTHZ_PROVIDER_GROUP<pos:position pos:line="121" pos:column="66"/></name></expr></argument>,
                                  <argument><expr><name><name pos:line="122" pos:column="35">conf<pos:position pos:line="122" pos:column="39"/></name><operator pos:line="122" pos:column="39">-&gt;<pos:position pos:line="122" pos:column="44"/></operator><name pos:line="122" pos:column="41">name<pos:position pos:line="122" pos:column="45"/></name></name></expr></argument>,
                                  <argument><expr><name pos:line="123" pos:column="35">AUTHZ_PROVIDER_VERSION<pos:position pos:line="123" pos:column="57"/></name></expr></argument>,
                                  <argument><expr><operator pos:line="124" pos:column="35">&amp;<pos:position pos:line="124" pos:column="40"/></operator><name pos:line="124" pos:column="36">fcgi_authz_provider<pos:position pos:line="124" pos:column="55"/></name></expr></argument>,
                                  <argument><expr><name pos:line="125" pos:column="35">AP_AUTH_INTERNAL_PER_CONF<pos:position pos:line="125" pos:column="60"/></name></expr></argument>)<pos:position pos:line="125" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="126" pos:column="6"/></block></then></if>

    <return pos:line="128" pos:column="5">return <expr><name pos:line="128" pos:column="12">NULL<pos:position pos:line="128" pos:column="16"/></name></expr>;<pos:position pos:line="128" pos:column="17"/></return>
}<pos:position pos:line="129" pos:column="2"/></block></function></unit>

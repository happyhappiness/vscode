<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3586_httpd-2.4.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier><name pos:line="1" pos:column="14">APR_THREAD_FUNC<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">worker_thread<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">apr_thread_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type> <name pos:line="1" pos:column="59">thd<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">void<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">dummy<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">proc_info<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">ti<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">dummy<pos:position pos:line="3" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">process_slot<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name><name pos:line="4" pos:column="24">ti<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">-&gt;<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="28">pid<pos:position pos:line="4" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">thread_slot<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name><name pos:line="5" pos:column="23">ti<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">tid<pos:position pos:line="5" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_socket_t<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">csd<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><name pos:line="6" pos:column="25">NULL<pos:position pos:line="6" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">event_conn_state_t<pos:position pos:line="7" pos:column="23"/></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">cs<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_pool_t<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">ptrans<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>         <comment type="block" pos:line="8" pos:column="33">/* Pool for per-transaction stuff */</comment>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_status_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">rv<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">is_idle<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">timer_event_t<pos:position pos:line="11" pos:column="18"/></name> <modifier pos:line="11" pos:column="19">*<pos:position pos:line="11" pos:column="20"/></modifier></type><name pos:line="11" pos:column="20">te<pos:position pos:line="11" pos:column="22"/></name> <init pos:line="11" pos:column="23">= <expr><name pos:line="11" pos:column="25">NULL<pos:position pos:line="11" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">free<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">(<argument><expr><name pos:line="13" pos:column="10">ti<pos:position pos:line="13" pos:column="12"/></name></expr></argument>)<pos:position pos:line="13" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="14"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="15" pos:column="5">ap_scoreboard_image<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">servers<pos:position pos:line="15" pos:column="33"/></name><index pos:line="15" pos:column="33">[<expr><name pos:line="15" pos:column="34">process_slot<pos:position pos:line="15" pos:column="46"/></name></expr>]<pos:position pos:line="15" pos:column="47"/></index><index pos:line="15" pos:column="47">[<expr><name pos:line="15" pos:column="48">thread_slot<pos:position pos:line="15" pos:column="59"/></name></expr>]<pos:position pos:line="15" pos:column="60"/></index></name><operator pos:line="15" pos:column="60">.<pos:position pos:line="15" pos:column="61"/></operator><name pos:line="15" pos:column="61">pid<pos:position pos:line="15" pos:column="64"/></name> <operator pos:line="15" pos:column="65">=<pos:position pos:line="15" pos:column="66"/></operator> <name pos:line="15" pos:column="67">ap_my_pid<pos:position pos:line="15" pos:column="76"/></name></expr>;<pos:position pos:line="15" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">ap_scoreboard_image<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">servers<pos:position pos:line="16" pos:column="33"/></name><index pos:line="16" pos:column="33">[<expr><name pos:line="16" pos:column="34">process_slot<pos:position pos:line="16" pos:column="46"/></name></expr>]<pos:position pos:line="16" pos:column="47"/></index><index pos:line="16" pos:column="47">[<expr><name pos:line="16" pos:column="48">thread_slot<pos:position pos:line="16" pos:column="59"/></name></expr>]<pos:position pos:line="16" pos:column="60"/></index></name><operator pos:line="16" pos:column="60">.<pos:position pos:line="16" pos:column="61"/></operator><name pos:line="16" pos:column="61">tid<pos:position pos:line="16" pos:column="64"/></name> <operator pos:line="16" pos:column="65">=<pos:position pos:line="16" pos:column="66"/></operator> <call><name pos:line="16" pos:column="67">apr_os_thread_current<pos:position pos:line="16" pos:column="88"/></name><argument_list pos:line="16" pos:column="88">()<pos:position pos:line="16" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="91"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">ap_scoreboard_image<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">servers<pos:position pos:line="17" pos:column="33"/></name><index pos:line="17" pos:column="33">[<expr><name pos:line="17" pos:column="34">process_slot<pos:position pos:line="17" pos:column="46"/></name></expr>]<pos:position pos:line="17" pos:column="47"/></index><index pos:line="17" pos:column="47">[<expr><name pos:line="17" pos:column="48">thread_slot<pos:position pos:line="17" pos:column="59"/></name></expr>]<pos:position pos:line="17" pos:column="60"/></index></name><operator pos:line="17" pos:column="60">.<pos:position pos:line="17" pos:column="61"/></operator><name pos:line="17" pos:column="61">generation<pos:position pos:line="17" pos:column="71"/></name> <operator pos:line="17" pos:column="72">=<pos:position pos:line="17" pos:column="73"/></operator> <name><name pos:line="17" pos:column="74">retained<pos:position pos:line="17" pos:column="82"/></name><operator pos:line="17" pos:column="82">-&gt;<pos:position pos:line="17" pos:column="87"/></operator><name pos:line="17" pos:column="84">my_generation<pos:position pos:line="17" pos:column="97"/></name></name></expr>;<pos:position pos:line="17" pos:column="98"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ap_update_child_status_from_indexes<pos:position pos:line="18" pos:column="40"/></name><argument_list pos:line="18" pos:column="40">(<argument><expr><name pos:line="18" pos:column="41">process_slot<pos:position pos:line="18" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="55">thread_slot<pos:position pos:line="18" pos:column="66"/></name></expr></argument>,
                                        <argument><expr><name pos:line="19" pos:column="41">SERVER_STARTING<pos:position pos:line="19" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="58">NULL<pos:position pos:line="19" pos:column="62"/></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt>

    <while pos:line="21" pos:column="5">while <condition pos:line="21" pos:column="11">(<expr><operator pos:line="21" pos:column="12">!<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">workers_may_exit<pos:position pos:line="21" pos:column="29"/></name></expr>)<pos:position pos:line="21" pos:column="30"/></condition> <block pos:line="21" pos:column="31">{
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">is_idle<pos:position pos:line="22" pos:column="21"/></name></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22"> <block pos:line="22" pos:column="23">{
            <expr_stmt><expr><name pos:line="23" pos:column="13">rv<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <call><name pos:line="23" pos:column="18">ap_queue_info_set_idle<pos:position pos:line="23" pos:column="40"/></name><argument_list pos:line="23" pos:column="40">(<argument><expr><name pos:line="23" pos:column="41">worker_queue_info<pos:position pos:line="23" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="60">NULL<pos:position pos:line="23" pos:column="64"/></name></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="66"/></expr_stmt>
            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><name pos:line="24" pos:column="17">rv<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">!=<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">APR_SUCCESS<pos:position pos:line="24" pos:column="34"/></name></expr>)<pos:position pos:line="24" pos:column="35"/></condition><then pos:line="24" pos:column="35"> <block pos:line="24" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="25" pos:column="17">ap_log_error<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">APLOG_MARK<pos:position pos:line="25" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="42">APLOG_EMERG<pos:position pos:line="25" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="55">rv<pos:position pos:line="25" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="59">ap_server_conf<pos:position pos:line="25" pos:column="73"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="26" pos:column="30">"ap_queue_info_set_idle failed. Attempting to "<pos:position pos:line="26" pos:column="77"/></literal>
                             <literal type="string" pos:line="27" pos:column="30">"shutdown process gracefully."<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">signal_threads<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">ST_GRACEFUL<pos:position pos:line="28" pos:column="43"/></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
                <break pos:line="29" pos:column="17">break;<pos:position pos:line="29" pos:column="23"/></break>
            }<pos:position pos:line="30" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="31" pos:column="13">is_idle<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <literal type="number" pos:line="31" pos:column="23">1<pos:position pos:line="31" pos:column="24"/></literal></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="34" pos:column="9">ap_update_child_status_from_indexes<pos:position pos:line="34" pos:column="44"/></name><argument_list pos:line="34" pos:column="44">(<argument><expr><name pos:line="34" pos:column="45">process_slot<pos:position pos:line="34" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="59">thread_slot<pos:position pos:line="34" pos:column="70"/></name></expr></argument>,
                                            <argument><expr><ternary><condition><expr><name pos:line="35" pos:column="45">dying<pos:position pos:line="35" pos:column="50"/></name></expr> ?<pos:position pos:line="35" pos:column="52"/></condition><then pos:line="35" pos:column="52"> <expr><name pos:line="35" pos:column="53">SERVER_GRACEFUL<pos:position pos:line="35" pos:column="68"/></name></expr> <pos:position pos:line="35" pos:column="69"/></then><else pos:line="35" pos:column="69">: <expr><name pos:line="35" pos:column="71">SERVER_READY<pos:position pos:line="35" pos:column="83"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="35" pos:column="85">NULL<pos:position pos:line="35" pos:column="89"/></name></expr></argument>)<pos:position pos:line="35" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="91"/></expr_stmt>
      <label><name pos:line="36" pos:column="7">worker_pop<pos:position pos:line="36" pos:column="17"/></name>:<pos:position pos:line="36" pos:column="18"/></label>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">workers_may_exit<pos:position pos:line="37" pos:column="29"/></name></expr>)<pos:position pos:line="37" pos:column="30"/></condition><then pos:line="37" pos:column="30"> <block pos:line="37" pos:column="31">{
            <break pos:line="38" pos:column="13">break;<pos:position pos:line="38" pos:column="19"/></break>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="41" pos:column="9">te<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <name pos:line="41" pos:column="14">NULL<pos:position pos:line="41" pos:column="18"/></name></expr>;<pos:position pos:line="41" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="42" pos:column="9">rv<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <call><name pos:line="42" pos:column="14">ap_queue_pop_something<pos:position pos:line="42" pos:column="36"/></name><argument_list pos:line="42" pos:column="36">(<argument><expr><name pos:line="42" pos:column="37">worker_queue<pos:position pos:line="42" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="51">&amp;<pos:position pos:line="42" pos:column="56"/></operator><name pos:line="42" pos:column="52">csd<pos:position pos:line="42" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="57">&amp;<pos:position pos:line="42" pos:column="62"/></operator><name pos:line="42" pos:column="58">cs<pos:position pos:line="42" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="62">&amp;<pos:position pos:line="42" pos:column="67"/></operator><name pos:line="42" pos:column="63">ptrans<pos:position pos:line="42" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="71">&amp;<pos:position pos:line="42" pos:column="76"/></operator><name pos:line="42" pos:column="72">te<pos:position pos:line="42" pos:column="74"/></name></expr></argument>)<pos:position pos:line="42" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="76"/></expr_stmt>

        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">rv<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">!=<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">APR_SUCCESS<pos:position pos:line="44" pos:column="30"/></name></expr>)<pos:position pos:line="44" pos:column="31"/></condition><then pos:line="44" pos:column="31"> <block pos:line="44" pos:column="32">{
            <comment type="block" pos:line="45" pos:column="13">/* We get APR_EOF during a graceful shutdown once all the
             * connections accepted by this server process have been handled.
             */</comment>
            <if pos:line="48" pos:column="13">if <condition pos:line="48" pos:column="16">(<expr><call><name pos:line="48" pos:column="17">APR_STATUS_IS_EOF<pos:position pos:line="48" pos:column="34"/></name><argument_list pos:line="48" pos:column="34">(<argument><expr><name pos:line="48" pos:column="35">rv<pos:position pos:line="48" pos:column="37"/></name></expr></argument>)<pos:position pos:line="48" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="39"/></condition><then pos:line="48" pos:column="39"> <block pos:line="48" pos:column="40">{
                <break pos:line="49" pos:column="17">break;<pos:position pos:line="49" pos:column="23"/></break>
            }<pos:position pos:line="50" pos:column="14"/></block></then>
            <comment type="block" pos:line="51" pos:column="13">/* We get APR_EINTR whenever ap_queue_pop() has been interrupted
             * from an explicit call to ap_queue_interrupt_all(). This allows
             * us to unblock threads stuck in ap_queue_pop() when a shutdown
             * is pending.
             *
             * If workers_may_exit is set and this is ungraceful termination/
             * restart, we are bound to get an error on some systems (e.g.,
             * AIX, which sanity-checks mutex operations) since the queue
             * may have already been cleaned up.  Don't log the "error" if
             * workers_may_exit is set.
             */</comment>
            <elseif pos:line="62" pos:column="13">else <if pos:line="62" pos:column="18">if <condition pos:line="62" pos:column="21">(<expr><call><name pos:line="62" pos:column="22">APR_STATUS_IS_EINTR<pos:position pos:line="62" pos:column="41"/></name><argument_list pos:line="62" pos:column="41">(<argument><expr><name pos:line="62" pos:column="42">rv<pos:position pos:line="62" pos:column="44"/></name></expr></argument>)<pos:position pos:line="62" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="46"/></condition><then pos:line="62" pos:column="46"> <block pos:line="62" pos:column="47">{
                <goto pos:line="63" pos:column="17">goto <name pos:line="63" pos:column="22">worker_pop<pos:position pos:line="63" pos:column="32"/></name>;<pos:position pos:line="63" pos:column="33"/></goto>
            }<pos:position pos:line="64" pos:column="14"/></block></then></if></elseif>
            <comment type="block" pos:line="65" pos:column="13">/* We got some other error. */</comment>
            <elseif pos:line="66" pos:column="13">else <if pos:line="66" pos:column="18">if <condition pos:line="66" pos:column="21">(<expr><operator pos:line="66" pos:column="22">!<pos:position pos:line="66" pos:column="23"/></operator><name pos:line="66" pos:column="23">workers_may_exit<pos:position pos:line="66" pos:column="39"/></name></expr>)<pos:position pos:line="66" pos:column="40"/></condition><then pos:line="66" pos:column="40"> <block pos:line="66" pos:column="41">{
                <expr_stmt><expr><call><name pos:line="67" pos:column="17">ap_log_error<pos:position pos:line="67" pos:column="29"/></name><argument_list pos:line="67" pos:column="29">(<argument><expr><name pos:line="67" pos:column="30">APLOG_MARK<pos:position pos:line="67" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="42">APLOG_CRIT<pos:position pos:line="67" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="54">rv<pos:position pos:line="67" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="58">ap_server_conf<pos:position pos:line="67" pos:column="72"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="68" pos:column="30">"ap_queue_pop failed"<pos:position pos:line="68" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="69" pos:column="14"/></block></then></if></elseif></if>
            <continue pos:line="70" pos:column="13">continue;<pos:position pos:line="70" pos:column="22"/></continue>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if>
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name pos:line="72" pos:column="13">te<pos:position pos:line="72" pos:column="15"/></name> <operator pos:line="72" pos:column="16">!=<pos:position pos:line="72" pos:column="18"/></operator> <name pos:line="72" pos:column="19">NULL<pos:position pos:line="72" pos:column="23"/></name></expr>)<pos:position pos:line="72" pos:column="24"/></condition><then pos:line="72" pos:column="24"> <block pos:line="72" pos:column="25">{
            <expr_stmt><expr><call><name><name pos:line="73" pos:column="13">te<pos:position pos:line="73" pos:column="15"/></name><operator pos:line="73" pos:column="15">-&gt;<pos:position pos:line="73" pos:column="20"/></operator><name pos:line="73" pos:column="17">cbfunc<pos:position pos:line="73" pos:column="23"/></name></name><argument_list pos:line="73" pos:column="23">(<argument><expr><name><name pos:line="73" pos:column="24">te<pos:position pos:line="73" pos:column="26"/></name><operator pos:line="73" pos:column="26">-&gt;<pos:position pos:line="73" pos:column="31"/></operator><name pos:line="73" pos:column="28">baton<pos:position pos:line="73" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="35"/></expr_stmt>

            <block pos:line="75" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="76" pos:column="17">apr_thread_mutex_lock<pos:position pos:line="76" pos:column="38"/></name><argument_list pos:line="76" pos:column="38">(<argument><expr><name pos:line="76" pos:column="39">g_timer_ring_mtx<pos:position pos:line="76" pos:column="55"/></name></expr></argument>)<pos:position pos:line="76" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="57"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="77" pos:column="17">APR_RING_INSERT_TAIL<pos:position pos:line="77" pos:column="37"/></name><argument_list pos:line="77" pos:column="37">(<argument><expr><operator pos:line="77" pos:column="38">&amp;<pos:position pos:line="77" pos:column="43"/></operator><name pos:line="77" pos:column="39">timer_free_ring<pos:position pos:line="77" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="56">te<pos:position pos:line="77" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="60">timer_event_t<pos:position pos:line="77" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="75">link<pos:position pos:line="77" pos:column="79"/></name></expr></argument>)<pos:position pos:line="77" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="81"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="78" pos:column="17">apr_thread_mutex_unlock<pos:position pos:line="78" pos:column="40"/></name><argument_list pos:line="78" pos:column="40">(<argument><expr><name pos:line="78" pos:column="41">g_timer_ring_mtx<pos:position pos:line="78" pos:column="57"/></name></expr></argument>)<pos:position pos:line="78" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="79" pos:column="14"/></block>
        }<pos:position pos:line="80" pos:column="10"/></block></then>
        <else pos:line="81" pos:column="9">else <block pos:line="81" pos:column="14">{
            <expr_stmt><expr><name pos:line="82" pos:column="13">is_idle<pos:position pos:line="82" pos:column="20"/></name> <operator pos:line="82" pos:column="21">=<pos:position pos:line="82" pos:column="22"/></operator> <literal type="number" pos:line="82" pos:column="23">0<pos:position pos:line="82" pos:column="24"/></literal></expr>;<pos:position pos:line="82" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="83" pos:column="13">worker_sockets<pos:position pos:line="83" pos:column="27"/></name><index pos:line="83" pos:column="27">[<expr><name pos:line="83" pos:column="28">thread_slot<pos:position pos:line="83" pos:column="39"/></name></expr>]<pos:position pos:line="83" pos:column="40"/></index></name> <operator pos:line="83" pos:column="41">=<pos:position pos:line="83" pos:column="42"/></operator> <name pos:line="83" pos:column="43">csd<pos:position pos:line="83" pos:column="46"/></name></expr>;<pos:position pos:line="83" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="84" pos:column="13">process_socket<pos:position pos:line="84" pos:column="27"/></name><argument_list pos:line="84" pos:column="27">(<argument><expr><name pos:line="84" pos:column="28">thd<pos:position pos:line="84" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="33">ptrans<pos:position pos:line="84" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="41">csd<pos:position pos:line="84" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="46">cs<pos:position pos:line="84" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="50">process_slot<pos:position pos:line="84" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="64">thread_slot<pos:position pos:line="84" pos:column="75"/></name></expr></argument>)<pos:position pos:line="84" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="85" pos:column="13">worker_sockets<pos:position pos:line="85" pos:column="27"/></name><index pos:line="85" pos:column="27">[<expr><name pos:line="85" pos:column="28">thread_slot<pos:position pos:line="85" pos:column="39"/></name></expr>]<pos:position pos:line="85" pos:column="40"/></index></name> <operator pos:line="85" pos:column="41">=<pos:position pos:line="85" pos:column="42"/></operator> <name pos:line="85" pos:column="43">NULL<pos:position pos:line="85" pos:column="47"/></name></expr>;<pos:position pos:line="85" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="86" pos:column="10"/></block></else></if>
    }<pos:position pos:line="87" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="89" pos:column="5">ap_update_child_status_from_indexes<pos:position pos:line="89" pos:column="40"/></name><argument_list pos:line="89" pos:column="40">(<argument><expr><name pos:line="89" pos:column="41">process_slot<pos:position pos:line="89" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="55">thread_slot<pos:position pos:line="89" pos:column="66"/></name></expr></argument>,
                                        <argument><expr><ternary><condition><expr><name pos:line="90" pos:column="41">dying<pos:position pos:line="90" pos:column="46"/></name></expr> ?<pos:position pos:line="90" pos:column="48"/></condition><then pos:line="90" pos:column="48"> <expr><name pos:line="90" pos:column="49">SERVER_DEAD<pos:position pos:line="90" pos:column="60"/></name></expr> <pos:position pos:line="90" pos:column="61"/></then><else pos:line="90" pos:column="61">:
                                        <expr><name pos:line="91" pos:column="41">SERVER_GRACEFUL<pos:position pos:line="91" pos:column="56"/></name></expr></else></ternary></expr></argument>,
                                        <argument><expr><operator pos:line="92" pos:column="41">(<pos:position pos:line="92" pos:column="42"/></operator><name pos:line="92" pos:column="42">request_rec<pos:position pos:line="92" pos:column="53"/></name> <operator pos:line="92" pos:column="54">*<pos:position pos:line="92" pos:column="55"/></operator><operator pos:line="92" pos:column="55">)<pos:position pos:line="92" pos:column="56"/></operator> <name pos:line="92" pos:column="57">NULL<pos:position pos:line="92" pos:column="61"/></name></expr></argument>)<pos:position pos:line="92" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="63"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="94" pos:column="5">apr_thread_exit<pos:position pos:line="94" pos:column="20"/></name><argument_list pos:line="94" pos:column="20">(<argument><expr><name pos:line="94" pos:column="21">thd<pos:position pos:line="94" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="26">APR_SUCCESS<pos:position pos:line="94" pos:column="37"/></name></expr></argument>)<pos:position pos:line="94" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="39"/></expr_stmt>
    <return pos:line="95" pos:column="5">return <expr><name pos:line="95" pos:column="12">NULL<pos:position pos:line="95" pos:column="16"/></name></expr>;<pos:position pos:line="95" pos:column="17"/></return>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

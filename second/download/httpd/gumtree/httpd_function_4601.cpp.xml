<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4601.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">decrypt_string<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">request_rec<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type> <name pos:line="1" pos:column="50">r<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">apr_crypto_t<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">f<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2" pos:column="9">session_crypto_dir_conf<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">dconf<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">in<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier><modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">out<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">res<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_crypto_key_t<pos:position pos:line="5" pos:column="21"/></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">key<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">NULL<pos:position pos:line="5" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">ivSize<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_crypto_block_t<pos:position pos:line="7" pos:column="23"/></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">block<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><name pos:line="7" pos:column="33">NULL<pos:position pos:line="7" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">char<pos:position pos:line="8" pos:column="18"/></name> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="20">decrypted<pos:position pos:line="8" pos:column="29"/></name> <init pos:line="8" pos:column="30">= <expr><name pos:line="8" pos:column="32">NULL<pos:position pos:line="8" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">decryptedlen<pos:position pos:line="9" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="30">tlen<pos:position pos:line="9" pos:column="34"/></name></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">decodedlen<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">decoded<pos:position pos:line="11" pos:column="18"/></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_size_t<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">blockSize<pos:position pos:line="12" pos:column="25"/></name> <init pos:line="12" pos:column="26">= <expr><literal type="number" pos:line="12" pos:column="28">0<pos:position pos:line="12" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_crypto_block_key_type_e<pos:position pos:line="13" pos:column="32"/></name> <modifier pos:line="13" pos:column="33">*<pos:position pos:line="13" pos:column="34"/></modifier></type><name pos:line="13" pos:column="34">cipher<pos:position pos:line="13" pos:column="40"/></name></decl>;<pos:position pos:line="13" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">i<pos:position pos:line="14" pos:column="10"/></name> <init pos:line="14" pos:column="11">= <expr><literal type="number" pos:line="14" pos:column="13">0<pos:position pos:line="14" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="15"/></decl_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* strip base64 from the string */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">decoded<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">apr_palloc<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name><name pos:line="17" pos:column="26">r<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">-&gt;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="29">pool<pos:position pos:line="17" pos:column="33"/></name></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="35">apr_base64_decode_len<pos:position pos:line="17" pos:column="56"/></name><argument_list pos:line="17" pos:column="56">(<argument><expr><name pos:line="17" pos:column="57">in<pos:position pos:line="17" pos:column="59"/></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">decodedlen<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <call><name pos:line="18" pos:column="18">apr_base64_decode<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">decoded<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="45">in<pos:position pos:line="18" pos:column="47"/></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">decoded<pos:position pos:line="19" pos:column="12"/></name><index pos:line="19" pos:column="12">[<expr><name pos:line="19" pos:column="13">decodedlen<pos:position pos:line="19" pos:column="23"/></name></expr>]<pos:position pos:line="19" pos:column="24"/></index></name> <operator pos:line="19" pos:column="25">=<pos:position pos:line="19" pos:column="26"/></operator> <literal type="char" pos:line="19" pos:column="27">'\0'<pos:position pos:line="19" pos:column="31"/></literal></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name pos:line="21" pos:column="5">res<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <call><name pos:line="21" pos:column="11">crypt_init<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">r<pos:position pos:line="21" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="25">f<pos:position pos:line="21" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="28">&amp;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="29">cipher<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">dconf<pos:position pos:line="21" pos:column="42"/></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">res<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">!=<pos:position pos:line="22" pos:column="15"/></operator> <name pos:line="22" pos:column="16">APR_SUCCESS<pos:position pos:line="22" pos:column="27"/></name></expr>)<pos:position pos:line="22" pos:column="28"/></condition><then pos:line="22" pos:column="28"> <block pos:line="22" pos:column="29">{
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">res<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="26" pos:column="5">/* try each passphrase in turn */</comment>
    <for pos:line="27" pos:column="5">for <control pos:line="27" pos:column="9">(<init pos:line="27" pos:column="10">;<pos:position pos:line="27" pos:column="11"/></init> <condition><expr><name pos:line="27" pos:column="12">i<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">&lt;<pos:position pos:line="27" pos:column="18"/></operator> <name><name pos:line="27" pos:column="16">dconf<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">passphrases<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">-&gt;<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="36">nelts<pos:position pos:line="27" pos:column="41"/></name></name></expr>;<pos:position pos:line="27" pos:column="42"/></condition> <incr><expr><name pos:line="27" pos:column="43">i<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">++<pos:position pos:line="27" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="47"/></control> <block pos:line="27" pos:column="48">{
        <decl_stmt><decl><type><specifier pos:line="28" pos:column="9">const<pos:position pos:line="28" pos:column="14"/></specifier> <name pos:line="28" pos:column="15">char<pos:position pos:line="28" pos:column="19"/></name> <modifier pos:line="28" pos:column="20">*<pos:position pos:line="28" pos:column="21"/></modifier></type><name pos:line="28" pos:column="21">passphrase<pos:position pos:line="28" pos:column="31"/></name> <init pos:line="28" pos:column="32">= <expr><call><name pos:line="28" pos:column="34">APR_ARRAY_IDX<pos:position pos:line="28" pos:column="47"/></name><argument_list pos:line="28" pos:column="47">(<argument><expr><name><name pos:line="28" pos:column="48">dconf<pos:position pos:line="28" pos:column="53"/></name><operator pos:line="28" pos:column="53">-&gt;<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="55">passphrases<pos:position pos:line="28" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="68">i<pos:position pos:line="28" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="71">char<pos:position pos:line="28" pos:column="75"/></name> <operator pos:line="28" pos:column="76">*<pos:position pos:line="28" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="28" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="79"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="29" pos:column="9">apr_size_t<pos:position pos:line="29" pos:column="19"/></name></type> <name pos:line="29" pos:column="20">len<pos:position pos:line="29" pos:column="23"/></name> <init pos:line="29" pos:column="24">= <expr><name pos:line="29" pos:column="26">decodedlen<pos:position pos:line="29" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="30" pos:column="9">char<pos:position pos:line="30" pos:column="13"/></name> <modifier pos:line="30" pos:column="14">*<pos:position pos:line="30" pos:column="15"/></modifier></type><name pos:line="30" pos:column="15">slider<pos:position pos:line="30" pos:column="21"/></name> <init pos:line="30" pos:column="22">= <expr><name pos:line="30" pos:column="24">decoded<pos:position pos:line="30" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="32"/></decl_stmt>

        <comment type="block" pos:line="32" pos:column="9">/* encrypt using the first passphrase in the list */</comment>
        <expr_stmt><expr><name pos:line="33" pos:column="9">res<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <call><name pos:line="33" pos:column="15">apr_crypto_passphrase<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><operator pos:line="33" pos:column="37">&amp;<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="38">key<pos:position pos:line="33" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="43">&amp;<pos:position pos:line="33" pos:column="48"/></operator><name pos:line="33" pos:column="44">ivSize<pos:position pos:line="33" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="52">passphrase<pos:position pos:line="33" pos:column="62"/></name></expr></argument>,
                <argument><expr><call><name pos:line="34" pos:column="17">strlen<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">passphrase<pos:position pos:line="34" pos:column="34"/></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call></expr></argument>,
                <argument><expr><operator pos:line="35" pos:column="17">(<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">unsigned<pos:position pos:line="35" pos:column="26"/></name> <name pos:line="35" pos:column="27">char<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">*<pos:position pos:line="35" pos:column="33"/></operator><operator pos:line="35" pos:column="33">)<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="34">decoded<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="43">sizeof<argument_list pos:line="35" pos:column="49">(<argument><expr><name pos:line="35" pos:column="50">apr_uuid_t<pos:position pos:line="35" pos:column="60"/></name></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></sizeof></expr></argument>,
                <argument><expr><operator pos:line="36" pos:column="17">*<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">cipher<pos:position pos:line="36" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="26">APR_MODE_CBC<pos:position pos:line="36" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="40">1<pos:position pos:line="36" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="43">4096<pos:position pos:line="36" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="49">f<pos:position pos:line="36" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="52">r<pos:position pos:line="36" pos:column="53"/></name><operator pos:line="36" pos:column="53">-&gt;<pos:position pos:line="36" pos:column="58"/></operator><name pos:line="36" pos:column="55">pool<pos:position pos:line="36" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="61"/></expr_stmt>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">APR_STATUS_IS_ENOKEY<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><name pos:line="37" pos:column="34">res<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="39"/></condition><then pos:line="37" pos:column="39"> <block pos:line="37" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">ap_log_rerror<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><name pos:line="38" pos:column="27">APLOG_MARK<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="39">APLOG_DEBUG<pos:position pos:line="38" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="52">res<pos:position pos:line="38" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="57">r<pos:position pos:line="38" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="60">APLOGNO<pos:position pos:line="38" pos:column="67"/></name><argument_list pos:line="38" pos:column="67">(<argument><expr><literal type="number" pos:line="38" pos:column="68">01832<pos:position pos:line="38" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="74"/></argument_list></call>
                    <literal type="string" pos:line="39" pos:column="21">"the passphrase '%s' was empty"<pos:position pos:line="39" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="54">passphrase<pos:position pos:line="39" pos:column="64"/></name></expr></argument>)<pos:position pos:line="39" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="66"/></expr_stmt>
            <continue pos:line="40" pos:column="13">continue;<pos:position pos:line="40" pos:column="22"/></continue>
        }<pos:position pos:line="41" pos:column="10"/></block></then>
        <elseif pos:line="42" pos:column="9">else <if pos:line="42" pos:column="14">if <condition pos:line="42" pos:column="17">(<expr><call><name pos:line="42" pos:column="18">APR_STATUS_IS_EPADDING<pos:position pos:line="42" pos:column="40"/></name><argument_list pos:line="42" pos:column="40">(<argument><expr><name pos:line="42" pos:column="41">res<pos:position pos:line="42" pos:column="44"/></name></expr></argument>)<pos:position pos:line="42" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="46"/></condition><then pos:line="42" pos:column="46"> <block pos:line="42" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">ap_log_rerror<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">APLOG_MARK<pos:position pos:line="43" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="39">APLOG_DEBUG<pos:position pos:line="43" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="52">res<pos:position pos:line="43" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="57">r<pos:position pos:line="43" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="60">APLOGNO<pos:position pos:line="43" pos:column="67"/></name><argument_list pos:line="43" pos:column="67">(<argument><expr><literal type="number" pos:line="43" pos:column="68">01833<pos:position pos:line="43" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="74"/></argument_list></call>
                    <literal type="string" pos:line="44" pos:column="21">"padding is not supported for cipher"<pos:position pos:line="44" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="60"/></expr_stmt>
            <continue pos:line="45" pos:column="13">continue;<pos:position pos:line="45" pos:column="22"/></continue>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="47" pos:column="9">else <if pos:line="47" pos:column="14">if <condition pos:line="47" pos:column="17">(<expr><call><name pos:line="47" pos:column="18">APR_STATUS_IS_EKEYTYPE<pos:position pos:line="47" pos:column="40"/></name><argument_list pos:line="47" pos:column="40">(<argument><expr><name pos:line="47" pos:column="41">res<pos:position pos:line="47" pos:column="44"/></name></expr></argument>)<pos:position pos:line="47" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="46"/></condition><then pos:line="47" pos:column="46"> <block pos:line="47" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">ap_log_rerror<pos:position pos:line="48" pos:column="26"/></name><argument_list pos:line="48" pos:column="26">(<argument><expr><name pos:line="48" pos:column="27">APLOG_MARK<pos:position pos:line="48" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="39">APLOG_DEBUG<pos:position pos:line="48" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="52">res<pos:position pos:line="48" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="57">r<pos:position pos:line="48" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="60">APLOGNO<pos:position pos:line="48" pos:column="67"/></name><argument_list pos:line="48" pos:column="67">(<argument><expr><literal type="number" pos:line="48" pos:column="68">01834<pos:position pos:line="48" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="74"/></argument_list></call>
                    <literal type="string" pos:line="49" pos:column="21">"the key type is not known"<pos:position pos:line="49" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="50"/></expr_stmt>
            <continue pos:line="50" pos:column="13">continue;<pos:position pos:line="50" pos:column="22"/></continue>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="52" pos:column="9">else <if pos:line="52" pos:column="14">if <condition pos:line="52" pos:column="17">(<expr><name pos:line="52" pos:column="18">APR_SUCCESS<pos:position pos:line="52" pos:column="29"/></name> <operator pos:line="52" pos:column="30">!=<pos:position pos:line="52" pos:column="32"/></operator> <name pos:line="52" pos:column="33">res<pos:position pos:line="52" pos:column="36"/></name></expr>)<pos:position pos:line="52" pos:column="37"/></condition><then pos:line="52" pos:column="37"> <block pos:line="52" pos:column="38">{
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">ap_log_rerror<pos:position pos:line="53" pos:column="26"/></name><argument_list pos:line="53" pos:column="26">(<argument><expr><name pos:line="53" pos:column="27">APLOG_MARK<pos:position pos:line="53" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="39">APLOG_DEBUG<pos:position pos:line="53" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="52">res<pos:position pos:line="53" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="57">r<pos:position pos:line="53" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="60">APLOGNO<pos:position pos:line="53" pos:column="67"/></name><argument_list pos:line="53" pos:column="67">(<argument><expr><literal type="number" pos:line="53" pos:column="68">01835<pos:position pos:line="53" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="74"/></argument_list></call>
                    <literal type="string" pos:line="54" pos:column="21">"encryption could not be configured."<pos:position pos:line="54" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="60"/></expr_stmt>
            <continue pos:line="55" pos:column="13">continue;<pos:position pos:line="55" pos:column="22"/></continue>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if></elseif></if>

        <comment type="block" pos:line="58" pos:column="9">/* sanity check - decoded too short? */</comment>
        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">decodedlen<pos:position pos:line="59" pos:column="23"/></name> <operator pos:line="59" pos:column="24">&lt;<pos:position pos:line="59" pos:column="28"/></operator> <operator pos:line="59" pos:column="26">(<pos:position pos:line="59" pos:column="27"/></operator><sizeof pos:line="59" pos:column="27">sizeof<argument_list pos:line="59" pos:column="33">(<argument><expr><name pos:line="59" pos:column="34">apr_uuid_t<pos:position pos:line="59" pos:column="44"/></name></expr></argument>)<pos:position pos:line="59" pos:column="45"/></argument_list></sizeof> <operator pos:line="59" pos:column="46">+<pos:position pos:line="59" pos:column="47"/></operator> <name pos:line="59" pos:column="48">ivSize<pos:position pos:line="59" pos:column="54"/></name><operator pos:line="59" pos:column="54">)<pos:position pos:line="59" pos:column="55"/></operator></expr>)<pos:position pos:line="59" pos:column="56"/></condition><then pos:line="59" pos:column="56"> <block pos:line="59" pos:column="57">{
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">ap_log_rerror<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><name pos:line="60" pos:column="27">APLOG_MARK<pos:position pos:line="60" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="39">APLOG_DEBUG<pos:position pos:line="60" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="52">APR_SUCCESS<pos:position pos:line="60" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="65">r<pos:position pos:line="60" pos:column="66"/></name></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="68">APLOGNO<pos:position pos:line="60" pos:column="75"/></name><argument_list pos:line="60" pos:column="75">(<argument><expr><literal type="number" pos:line="60" pos:column="76">01836<pos:position pos:line="60" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="82"/></argument_list></call>
                    <literal type="string" pos:line="61" pos:column="21">"too short to decrypt, skipping"<pos:position pos:line="61" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><name pos:line="62" pos:column="13">res<pos:position pos:line="62" pos:column="16"/></name> <operator pos:line="62" pos:column="17">=<pos:position pos:line="62" pos:column="18"/></operator> <name pos:line="62" pos:column="19">APR_ECRYPT<pos:position pos:line="62" pos:column="29"/></name></expr>;<pos:position pos:line="62" pos:column="30"/></expr_stmt>
            <continue pos:line="63" pos:column="13">continue;<pos:position pos:line="63" pos:column="22"/></continue>
        }<pos:position pos:line="64" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="66" pos:column="9">/* bypass the salt at the start of the decoded block */</comment>
        <expr_stmt><expr><name pos:line="67" pos:column="9">slider<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">+=<pos:position pos:line="67" pos:column="18"/></operator> <sizeof pos:line="67" pos:column="19">sizeof<argument_list pos:line="67" pos:column="25">(<argument><expr><name pos:line="67" pos:column="26">apr_uuid_t<pos:position pos:line="67" pos:column="36"/></name></expr></argument>)<pos:position pos:line="67" pos:column="37"/></argument_list></sizeof></expr>;<pos:position pos:line="67" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="68" pos:column="9">len<pos:position pos:line="68" pos:column="12"/></name> <operator pos:line="68" pos:column="13">-=<pos:position pos:line="68" pos:column="15"/></operator> <sizeof pos:line="68" pos:column="16">sizeof<argument_list pos:line="68" pos:column="22">(<argument><expr><name pos:line="68" pos:column="23">apr_uuid_t<pos:position pos:line="68" pos:column="33"/></name></expr></argument>)<pos:position pos:line="68" pos:column="34"/></argument_list></sizeof></expr>;<pos:position pos:line="68" pos:column="35"/></expr_stmt>

        <expr_stmt><expr><name pos:line="70" pos:column="9">res<pos:position pos:line="70" pos:column="12"/></name> <operator pos:line="70" pos:column="13">=<pos:position pos:line="70" pos:column="14"/></operator> <call><name pos:line="70" pos:column="15">apr_crypto_block_decrypt_init<pos:position pos:line="70" pos:column="44"/></name><argument_list pos:line="70" pos:column="44">(<argument><expr><operator pos:line="70" pos:column="45">&amp;<pos:position pos:line="70" pos:column="50"/></operator><name pos:line="70" pos:column="46">block<pos:position pos:line="70" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="53">&amp;<pos:position pos:line="70" pos:column="58"/></operator><name pos:line="70" pos:column="54">blockSize<pos:position pos:line="70" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="65">(<pos:position pos:line="70" pos:column="66"/></operator><name pos:line="70" pos:column="66">unsigned<pos:position pos:line="70" pos:column="74"/></name> <name pos:line="70" pos:column="75">char<pos:position pos:line="70" pos:column="79"/></name> <operator pos:line="70" pos:column="80">*<pos:position pos:line="70" pos:column="81"/></operator><operator pos:line="70" pos:column="81">)<pos:position pos:line="70" pos:column="82"/></operator><name pos:line="70" pos:column="82">slider<pos:position pos:line="70" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="90">key<pos:position pos:line="70" pos:column="93"/></name></expr></argument>,
                <argument><expr><name><name pos:line="71" pos:column="17">r<pos:position pos:line="71" pos:column="18"/></name><operator pos:line="71" pos:column="18">-&gt;<pos:position pos:line="71" pos:column="23"/></operator><name pos:line="71" pos:column="20">pool<pos:position pos:line="71" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="26"/></expr_stmt>
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name pos:line="72" pos:column="13">APR_SUCCESS<pos:position pos:line="72" pos:column="24"/></name> <operator pos:line="72" pos:column="25">!=<pos:position pos:line="72" pos:column="27"/></operator> <name pos:line="72" pos:column="28">res<pos:position pos:line="72" pos:column="31"/></name></expr>)<pos:position pos:line="72" pos:column="32"/></condition><then pos:line="72" pos:column="32"> <block pos:line="72" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">ap_log_rerror<pos:position pos:line="73" pos:column="26"/></name><argument_list pos:line="73" pos:column="26">(<argument><expr><name pos:line="73" pos:column="27">APLOG_MARK<pos:position pos:line="73" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="39">APLOG_DEBUG<pos:position pos:line="73" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="52">res<pos:position pos:line="73" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="57">r<pos:position pos:line="73" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="60">APLOGNO<pos:position pos:line="73" pos:column="67"/></name><argument_list pos:line="73" pos:column="67">(<argument><expr><literal type="number" pos:line="73" pos:column="68">01837<pos:position pos:line="73" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="74"/></argument_list></call>
                    <literal type="string" pos:line="74" pos:column="21">"apr_crypto_block_decrypt_init failed"<pos:position pos:line="74" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="61"/></expr_stmt>
            <continue pos:line="75" pos:column="13">continue;<pos:position pos:line="75" pos:column="22"/></continue>
        }<pos:position pos:line="76" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="78" pos:column="9">/* bypass the iv at the start of the decoded block */</comment>
        <expr_stmt><expr><name pos:line="79" pos:column="9">slider<pos:position pos:line="79" pos:column="15"/></name> <operator pos:line="79" pos:column="16">+=<pos:position pos:line="79" pos:column="18"/></operator> <name pos:line="79" pos:column="19">ivSize<pos:position pos:line="79" pos:column="25"/></name></expr>;<pos:position pos:line="79" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="80" pos:column="9">len<pos:position pos:line="80" pos:column="12"/></name> <operator pos:line="80" pos:column="13">-=<pos:position pos:line="80" pos:column="15"/></operator> <name pos:line="80" pos:column="16">ivSize<pos:position pos:line="80" pos:column="22"/></name></expr>;<pos:position pos:line="80" pos:column="23"/></expr_stmt>

        <comment type="block" pos:line="82" pos:column="9">/* decrypt the given string */</comment>
        <expr_stmt><expr><name pos:line="83" pos:column="9">res<pos:position pos:line="83" pos:column="12"/></name> <operator pos:line="83" pos:column="13">=<pos:position pos:line="83" pos:column="14"/></operator> <call><name pos:line="83" pos:column="15">apr_crypto_block_decrypt<pos:position pos:line="83" pos:column="39"/></name><argument_list pos:line="83" pos:column="39">(<argument><expr><operator pos:line="83" pos:column="40">&amp;<pos:position pos:line="83" pos:column="45"/></operator><name pos:line="83" pos:column="41">decrypted<pos:position pos:line="83" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="52">&amp;<pos:position pos:line="83" pos:column="57"/></operator><name pos:line="83" pos:column="53">decryptedlen<pos:position pos:line="83" pos:column="65"/></name></expr></argument>,
                <argument><expr><operator pos:line="84" pos:column="17">(<pos:position pos:line="84" pos:column="18"/></operator><name pos:line="84" pos:column="18">unsigned<pos:position pos:line="84" pos:column="26"/></name> <name pos:line="84" pos:column="27">char<pos:position pos:line="84" pos:column="31"/></name> <operator pos:line="84" pos:column="32">*<pos:position pos:line="84" pos:column="33"/></operator><operator pos:line="84" pos:column="33">)<pos:position pos:line="84" pos:column="34"/></operator><name pos:line="84" pos:column="34">slider<pos:position pos:line="84" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="42">len<pos:position pos:line="84" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="47">block<pos:position pos:line="84" pos:column="52"/></name></expr></argument>)<pos:position pos:line="84" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="54"/></expr_stmt>
        <if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name pos:line="85" pos:column="13">res<pos:position pos:line="85" pos:column="16"/></name></expr>)<pos:position pos:line="85" pos:column="17"/></condition><then pos:line="85" pos:column="17"> <block pos:line="85" pos:column="18">{
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">ap_log_rerror<pos:position pos:line="86" pos:column="26"/></name><argument_list pos:line="86" pos:column="26">(<argument><expr><name pos:line="86" pos:column="27">APLOG_MARK<pos:position pos:line="86" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="39">APLOG_DEBUG<pos:position pos:line="86" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="52">res<pos:position pos:line="86" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="57">r<pos:position pos:line="86" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="86" pos:column="60">APLOGNO<pos:position pos:line="86" pos:column="67"/></name><argument_list pos:line="86" pos:column="67">(<argument><expr><literal type="number" pos:line="86" pos:column="68">01838<pos:position pos:line="86" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="74"/></argument_list></call>
                    <literal type="string" pos:line="87" pos:column="21">"apr_crypto_block_decrypt failed"<pos:position pos:line="87" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="56"/></expr_stmt>
            <continue pos:line="88" pos:column="13">continue;<pos:position pos:line="88" pos:column="22"/></continue>
        }<pos:position pos:line="89" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="90" pos:column="9">*<pos:position pos:line="90" pos:column="10"/></operator><name pos:line="90" pos:column="10">out<pos:position pos:line="90" pos:column="13"/></name> <operator pos:line="90" pos:column="14">=<pos:position pos:line="90" pos:column="15"/></operator> <operator pos:line="90" pos:column="16">(<pos:position pos:line="90" pos:column="17"/></operator><name pos:line="90" pos:column="17">char<pos:position pos:line="90" pos:column="21"/></name> <operator pos:line="90" pos:column="22">*<pos:position pos:line="90" pos:column="23"/></operator><operator pos:line="90" pos:column="23">)<pos:position pos:line="90" pos:column="24"/></operator> <name pos:line="90" pos:column="25">decrypted<pos:position pos:line="90" pos:column="34"/></name></expr>;<pos:position pos:line="90" pos:column="35"/></expr_stmt>

        <expr_stmt><expr><name pos:line="92" pos:column="9">res<pos:position pos:line="92" pos:column="12"/></name> <operator pos:line="92" pos:column="13">=<pos:position pos:line="92" pos:column="14"/></operator> <call><name pos:line="92" pos:column="15">apr_crypto_block_decrypt_finish<pos:position pos:line="92" pos:column="46"/></name><argument_list pos:line="92" pos:column="46">(<argument><expr><name pos:line="92" pos:column="47">decrypted<pos:position pos:line="92" pos:column="56"/></name> <operator pos:line="92" pos:column="57">+<pos:position pos:line="92" pos:column="58"/></operator> <name pos:line="92" pos:column="59">decryptedlen<pos:position pos:line="92" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="73">&amp;<pos:position pos:line="92" pos:column="78"/></operator><name pos:line="92" pos:column="74">tlen<pos:position pos:line="92" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="80">block<pos:position pos:line="92" pos:column="85"/></name></expr></argument>)<pos:position pos:line="92" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="87"/></expr_stmt>
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">APR_SUCCESS<pos:position pos:line="93" pos:column="24"/></name> <operator pos:line="93" pos:column="25">!=<pos:position pos:line="93" pos:column="27"/></operator> <name pos:line="93" pos:column="28">res<pos:position pos:line="93" pos:column="31"/></name></expr>)<pos:position pos:line="93" pos:column="32"/></condition><then pos:line="93" pos:column="32"> <block pos:line="93" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">ap_log_rerror<pos:position pos:line="94" pos:column="26"/></name><argument_list pos:line="94" pos:column="26">(<argument><expr><name pos:line="94" pos:column="27">APLOG_MARK<pos:position pos:line="94" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="39">APLOG_DEBUG<pos:position pos:line="94" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="52">res<pos:position pos:line="94" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="57">r<pos:position pos:line="94" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="94" pos:column="60">APLOGNO<pos:position pos:line="94" pos:column="67"/></name><argument_list pos:line="94" pos:column="67">(<argument><expr><literal type="number" pos:line="94" pos:column="68">01839<pos:position pos:line="94" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="74"/></argument_list></call>
                    <literal type="string" pos:line="95" pos:column="21">"apr_crypto_block_decrypt_finish failed"<pos:position pos:line="95" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="63"/></expr_stmt>
            <continue pos:line="96" pos:column="13">continue;<pos:position pos:line="96" pos:column="22"/></continue>
        }<pos:position pos:line="97" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="98" pos:column="9">decryptedlen<pos:position pos:line="98" pos:column="21"/></name> <operator pos:line="98" pos:column="22">+=<pos:position pos:line="98" pos:column="24"/></operator> <name pos:line="98" pos:column="25">tlen<pos:position pos:line="98" pos:column="29"/></name></expr>;<pos:position pos:line="98" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="99" pos:column="9">decrypted<pos:position pos:line="99" pos:column="18"/></name><index pos:line="99" pos:column="18">[<expr><name pos:line="99" pos:column="19">decryptedlen<pos:position pos:line="99" pos:column="31"/></name></expr>]<pos:position pos:line="99" pos:column="32"/></index></name> <operator pos:line="99" pos:column="33">=<pos:position pos:line="99" pos:column="34"/></operator> <literal type="number" pos:line="99" pos:column="35">0<pos:position pos:line="99" pos:column="36"/></literal></expr>;<pos:position pos:line="99" pos:column="37"/></expr_stmt>

        <break pos:line="101" pos:column="9">break;<pos:position pos:line="101" pos:column="15"/></break>
    }<pos:position pos:line="102" pos:column="6"/></block></for>

    <if pos:line="104" pos:column="5">if <condition pos:line="104" pos:column="8">(<expr><name pos:line="104" pos:column="9">APR_SUCCESS<pos:position pos:line="104" pos:column="20"/></name> <operator pos:line="104" pos:column="21">!=<pos:position pos:line="104" pos:column="23"/></operator> <name pos:line="104" pos:column="24">res<pos:position pos:line="104" pos:column="27"/></name></expr>)<pos:position pos:line="104" pos:column="28"/></condition><then pos:line="104" pos:column="28"> <block pos:line="104" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="105" pos:column="9">ap_log_rerror<pos:position pos:line="105" pos:column="22"/></name><argument_list pos:line="105" pos:column="22">(<argument><expr><name pos:line="105" pos:column="23">APLOG_MARK<pos:position pos:line="105" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="35">APLOG_INFO<pos:position pos:line="105" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="47">res<pos:position pos:line="105" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="52">r<pos:position pos:line="105" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="105" pos:column="55">APLOGNO<pos:position pos:line="105" pos:column="62"/></name><argument_list pos:line="105" pos:column="62">(<argument><expr><literal type="number" pos:line="105" pos:column="63">01840<pos:position pos:line="105" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="69"/></argument_list></call>
                <literal type="string" pos:line="106" pos:column="17">"decryption failed"<pos:position pos:line="106" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="107" pos:column="6"/></block></then></if>

    <return pos:line="109" pos:column="5">return <expr><name pos:line="109" pos:column="12">res<pos:position pos:line="109" pos:column="15"/></name></expr>;<pos:position pos:line="109" pos:column="16"/></return>

}<pos:position pos:line="111" pos:column="2"/></block></function></unit>

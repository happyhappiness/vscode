<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_2334.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">mpm_signal_service<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">apr_pool_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">ptemp<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">signal<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">success<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name pos:line="3" pos:column="19">FALSE<pos:position pos:line="3" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">osver<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">.<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">dwPlatformId<pos:position pos:line="5" pos:column="27"/></name></name> <operator pos:line="5" pos:column="28">==<pos:position pos:line="5" pos:column="30"/></operator> <name pos:line="5" pos:column="31">VER_PLATFORM_WIN32_NT<pos:position pos:line="5" pos:column="52"/></name></expr>)<pos:position pos:line="5" pos:column="53"/></condition><then pos:line="5" pos:column="53">
    <block pos:line="6" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">SC_HANDLE<pos:position pos:line="7" pos:column="18"/></name></type>   <name pos:line="7" pos:column="21">schService<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">SC_HANDLE<pos:position pos:line="8" pos:column="18"/></name></type>   <name pos:line="8" pos:column="21">schSCManager<pos:position pos:line="8" pos:column="33"/></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>

        <expr_stmt><expr><name pos:line="10" pos:column="9">schSCManager<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <call><name pos:line="10" pos:column="24">OpenSCManager<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">NULL<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">NULL<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <comment type="line" pos:line="10" pos:column="50">// default machine &amp; database</comment>
                                     <argument><expr><name pos:line="11" pos:column="38">SC_MANAGER_CONNECT<pos:position pos:line="11" pos:column="56"/></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">schSCManager<pos:position pos:line="13" pos:column="26"/></name></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27"> <block pos:line="13" pos:column="28">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">ap_log_error<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">APLOG_MARK<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="38">APLOG_ERR<pos:position pos:line="14" pos:column="47"/></name> <operator pos:line="14" pos:column="48">|<pos:position pos:line="14" pos:column="49"/></operator> <name pos:line="14" pos:column="50">APLOG_STARTUP<pos:position pos:line="14" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="65">apr_get_os_error<pos:position pos:line="14" pos:column="81"/></name><argument_list pos:line="14" pos:column="81">()<pos:position pos:line="14" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="14" pos:column="85">NULL<pos:position pos:line="14" pos:column="89"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="15" pos:column="26">"Failed to open the NT Service Manager"<pos:position pos:line="15" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt>
            <return pos:line="16" pos:column="13">return;<pos:position pos:line="16" pos:column="20"/></return>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>

<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">APR_HAS_UNICODE_FS<pos:position pos:line="19" pos:column="23"/></name></expr></cpp:if>
        <macro><name pos:line="20" pos:column="9">IF_WIN_OS_IS_UNICODE<pos:position pos:line="20" pos:column="29"/></name></macro>
        <block pos:line="21" pos:column="9">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">schService<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <call><name pos:line="22" pos:column="26">OpenServiceW<pos:position pos:line="22" pos:column="38"/></name><argument_list pos:line="22" pos:column="38">(<argument><expr><name pos:line="22" pos:column="39">schSCManager<pos:position pos:line="22" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="53">mpm_service_name_w<pos:position pos:line="22" pos:column="71"/></name></expr></argument>,
                                      <argument><expr><name pos:line="23" pos:column="39">SERVICE_INTERROGATE<pos:position pos:line="23" pos:column="58"/></name> <operator pos:line="23" pos:column="59">|<pos:position pos:line="23" pos:column="60"/></operator> <name pos:line="23" pos:column="61">SERVICE_QUERY_STATUS<pos:position pos:line="23" pos:column="81"/></name> <operator pos:line="23" pos:column="82">|<pos:position pos:line="23" pos:column="83"/></operator>
                                      <name pos:line="24" pos:column="39">SERVICE_USER_DEFINED_CONTROL<pos:position pos:line="24" pos:column="67"/></name> <operator pos:line="24" pos:column="68">|<pos:position pos:line="24" pos:column="69"/></operator>
                                      <name pos:line="25" pos:column="39">SERVICE_START<pos:position pos:line="25" pos:column="52"/></name> <operator pos:line="25" pos:column="53">|<pos:position pos:line="25" pos:column="54"/></operator> <name pos:line="25" pos:column="55">SERVICE_STOP<pos:position pos:line="25" pos:column="67"/></name></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="27" pos:column="8">/* APR_HAS_UNICODE_FS */</comment>
<cpp:if pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">if<pos:position pos:line="28" pos:column="4"/></cpp:directive> <expr><name pos:line="28" pos:column="5">APR_HAS_ANSI_FS<pos:position pos:line="28" pos:column="20"/></name></expr></cpp:if>
        <macro><name pos:line="29" pos:column="9">ELSE_WIN_OS_IS_ANSI<pos:position pos:line="29" pos:column="28"/></name></macro>
        <block pos:line="30" pos:column="9">{
            <expr_stmt><expr><name pos:line="31" pos:column="13">schService<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <call><name pos:line="31" pos:column="26">OpenService<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name pos:line="31" pos:column="38">schSCManager<pos:position pos:line="31" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="52">mpm_service_name<pos:position pos:line="31" pos:column="68"/></name></expr></argument>,
                                     <argument><expr><name pos:line="32" pos:column="38">SERVICE_INTERROGATE<pos:position pos:line="32" pos:column="57"/></name> <operator pos:line="32" pos:column="58">|<pos:position pos:line="32" pos:column="59"/></operator> <name pos:line="32" pos:column="60">SERVICE_QUERY_STATUS<pos:position pos:line="32" pos:column="80"/></name> <operator pos:line="32" pos:column="81">|<pos:position pos:line="32" pos:column="82"/></operator>
                                     <name pos:line="33" pos:column="38">SERVICE_USER_DEFINED_CONTROL<pos:position pos:line="33" pos:column="66"/></name> <operator pos:line="33" pos:column="67">|<pos:position pos:line="33" pos:column="68"/></operator>
                                     <name pos:line="34" pos:column="38">SERVICE_START<pos:position pos:line="34" pos:column="51"/></name> <operator pos:line="34" pos:column="52">|<pos:position pos:line="34" pos:column="53"/></operator> <name pos:line="34" pos:column="54">SERVICE_STOP<pos:position pos:line="34" pos:column="66"/></name></expr></argument>)<pos:position pos:line="34" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">schService<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">==<pos:position pos:line="37" pos:column="26"/></operator> <name pos:line="37" pos:column="27">NULL<pos:position pos:line="37" pos:column="31"/></name></expr>)<pos:position pos:line="37" pos:column="32"/></condition><then pos:line="37" pos:column="32"> <block pos:line="37" pos:column="33">{
            <comment type="block" pos:line="38" pos:column="13">/* Could not open the service */</comment>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">ap_log_error<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><name pos:line="39" pos:column="26">APLOG_MARK<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="38">APLOG_ERR<pos:position pos:line="39" pos:column="47"/></name> <operator pos:line="39" pos:column="48">|<pos:position pos:line="39" pos:column="49"/></operator> <name pos:line="39" pos:column="50">APLOG_STARTUP<pos:position pos:line="39" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="65">apr_get_os_error<pos:position pos:line="39" pos:column="81"/></name><argument_list pos:line="39" pos:column="81">()<pos:position pos:line="39" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="39" pos:column="85">NULL<pos:position pos:line="39" pos:column="89"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="40" pos:column="26">"Failed to open the %s Service"<pos:position pos:line="40" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="59">mpm_display_name<pos:position pos:line="40" pos:column="75"/></name></expr></argument>)<pos:position pos:line="40" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">CloseServiceHandle<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><name pos:line="41" pos:column="32">schSCManager<pos:position pos:line="41" pos:column="44"/></name></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="46"/></expr_stmt>
            <return pos:line="42" pos:column="13">return;<pos:position pos:line="42" pos:column="20"/></return>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>

        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><operator pos:line="45" pos:column="13">!<pos:position pos:line="45" pos:column="14"/></operator><call><name pos:line="45" pos:column="14">QueryServiceStatus<pos:position pos:line="45" pos:column="32"/></name><argument_list pos:line="45" pos:column="32">(<argument><expr><name pos:line="45" pos:column="33">schService<pos:position pos:line="45" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="45">&amp;<pos:position pos:line="45" pos:column="50"/></operator><name><name pos:line="45" pos:column="46">globdat<pos:position pos:line="45" pos:column="53"/></name><operator pos:line="45" pos:column="53">.<pos:position pos:line="45" pos:column="54"/></operator><name pos:line="45" pos:column="54">ssStatus<pos:position pos:line="45" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="64"/></condition><then pos:line="45" pos:column="64"> <block pos:line="45" pos:column="65">{
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">ap_log_error<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><name pos:line="46" pos:column="26">APLOG_MARK<pos:position pos:line="46" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="38">APLOG_ERR<pos:position pos:line="46" pos:column="47"/></name> <operator pos:line="46" pos:column="48">|<pos:position pos:line="46" pos:column="49"/></operator> <name pos:line="46" pos:column="50">APLOG_STARTUP<pos:position pos:line="46" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="65">apr_get_os_error<pos:position pos:line="46" pos:column="81"/></name><argument_list pos:line="46" pos:column="81">()<pos:position pos:line="46" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="46" pos:column="85">NULL<pos:position pos:line="46" pos:column="89"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="47" pos:column="26">"Query of Service %s failed"<pos:position pos:line="47" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="56">mpm_display_name<pos:position pos:line="47" pos:column="72"/></name></expr></argument>)<pos:position pos:line="47" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">CloseServiceHandle<pos:position pos:line="48" pos:column="31"/></name><argument_list pos:line="48" pos:column="31">(<argument><expr><name pos:line="48" pos:column="32">schService<pos:position pos:line="48" pos:column="42"/></name></expr></argument>)<pos:position pos:line="48" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">CloseServiceHandle<pos:position pos:line="49" pos:column="31"/></name><argument_list pos:line="49" pos:column="31">(<argument><expr><name pos:line="49" pos:column="32">schSCManager<pos:position pos:line="49" pos:column="44"/></name></expr></argument>)<pos:position pos:line="49" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="46"/></expr_stmt>
            <return pos:line="50" pos:column="13">return;<pos:position pos:line="50" pos:column="20"/></return>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>

        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><operator pos:line="53" pos:column="13">!<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="14">signal<pos:position pos:line="53" pos:column="20"/></name> <operator pos:line="53" pos:column="21">&amp;&amp;<pos:position pos:line="53" pos:column="31"/></operator> <operator pos:line="53" pos:column="24">(<pos:position pos:line="53" pos:column="25"/></operator><name><name pos:line="53" pos:column="25">globdat<pos:position pos:line="53" pos:column="32"/></name><operator pos:line="53" pos:column="32">.<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="33">ssStatus<pos:position pos:line="53" pos:column="41"/></name><operator pos:line="53" pos:column="41">.<pos:position pos:line="53" pos:column="42"/></operator><name pos:line="53" pos:column="42">dwCurrentState<pos:position pos:line="53" pos:column="56"/></name></name> <operator pos:line="53" pos:column="57">==<pos:position pos:line="53" pos:column="59"/></operator> <name pos:line="53" pos:column="60">SERVICE_STOPPED<pos:position pos:line="53" pos:column="75"/></name><operator pos:line="53" pos:column="75">)<pos:position pos:line="53" pos:column="76"/></operator></expr>)<pos:position pos:line="53" pos:column="77"/></condition><then pos:line="53" pos:column="77"> <block pos:line="53" pos:column="78">{
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">fprintf<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><name pos:line="54" pos:column="21">stderr<pos:position pos:line="54" pos:column="27"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="54" pos:column="28">"The %s service is not started.\n"<pos:position pos:line="54" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="64">mpm_display_name<pos:position pos:line="54" pos:column="80"/></name></expr></argument>)<pos:position pos:line="54" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="82"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">CloseServiceHandle<pos:position pos:line="55" pos:column="31"/></name><argument_list pos:line="55" pos:column="31">(<argument><expr><name pos:line="55" pos:column="32">schService<pos:position pos:line="55" pos:column="42"/></name></expr></argument>)<pos:position pos:line="55" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">CloseServiceHandle<pos:position pos:line="56" pos:column="31"/></name><argument_list pos:line="56" pos:column="31">(<argument><expr><name pos:line="56" pos:column="32">schSCManager<pos:position pos:line="56" pos:column="44"/></name></expr></argument>)<pos:position pos:line="56" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="46"/></expr_stmt>
            <return pos:line="57" pos:column="13">return;<pos:position pos:line="57" pos:column="20"/></return>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="60" pos:column="9">fprintf<pos:position pos:line="60" pos:column="16"/></name><argument_list pos:line="60" pos:column="16">(<argument><expr><name pos:line="60" pos:column="17">stderr<pos:position pos:line="60" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="60" pos:column="24">"The %s service is %s.\n"<pos:position pos:line="60" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="51">mpm_display_name<pos:position pos:line="60" pos:column="67"/></name></expr></argument>,
               <argument><expr><ternary><condition><expr><name pos:line="61" pos:column="16">signal<pos:position pos:line="61" pos:column="22"/></name></expr> ?<pos:position pos:line="61" pos:column="24"/></condition><then pos:line="61" pos:column="24"> <expr><literal type="string" pos:line="61" pos:column="25">"restarting"<pos:position pos:line="61" pos:column="37"/></literal></expr> <pos:position pos:line="61" pos:column="38"/></then><else pos:line="61" pos:column="38">: <expr><literal type="string" pos:line="61" pos:column="40">"stopping"<pos:position pos:line="61" pos:column="50"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="61" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="52"/></expr_stmt>

        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><operator pos:line="63" pos:column="13">!<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="14">signal<pos:position pos:line="63" pos:column="20"/></name></expr>)<pos:position pos:line="63" pos:column="21"/></condition><then pos:line="63" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="13">success<pos:position pos:line="64" pos:column="20"/></name> <operator pos:line="64" pos:column="21">=<pos:position pos:line="64" pos:column="22"/></operator> <call><name pos:line="64" pos:column="23">signal_service_transition<pos:position pos:line="64" pos:column="48"/></name><argument_list pos:line="64" pos:column="48">(<argument><expr><name pos:line="64" pos:column="49">schService<pos:position pos:line="64" pos:column="59"/></name></expr></argument>,
                                                <argument><expr><name pos:line="65" pos:column="49">SERVICE_CONTROL_STOP<pos:position pos:line="65" pos:column="69"/></name></expr></argument>,
                                                <argument><expr><name pos:line="66" pos:column="49">SERVICE_STOP_PENDING<pos:position pos:line="66" pos:column="69"/></name></expr></argument>,
                                                <argument><expr><name pos:line="67" pos:column="49">SERVICE_STOPPED<pos:position pos:line="67" pos:column="64"/></name></expr></argument>)<pos:position pos:line="67" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="66"/></expr_stmt></block></then>
        <elseif pos:line="68" pos:column="9">else <if pos:line="68" pos:column="14">if <condition pos:line="68" pos:column="17">(<expr><name><name pos:line="68" pos:column="18">globdat<pos:position pos:line="68" pos:column="25"/></name><operator pos:line="68" pos:column="25">.<pos:position pos:line="68" pos:column="26"/></operator><name pos:line="68" pos:column="26">ssStatus<pos:position pos:line="68" pos:column="34"/></name><operator pos:line="68" pos:column="34">.<pos:position pos:line="68" pos:column="35"/></operator><name pos:line="68" pos:column="35">dwCurrentState<pos:position pos:line="68" pos:column="49"/></name></name> <operator pos:line="68" pos:column="50">==<pos:position pos:line="68" pos:column="52"/></operator> <name pos:line="68" pos:column="53">SERVICE_STOPPED<pos:position pos:line="68" pos:column="68"/></name></expr>)<pos:position pos:line="68" pos:column="69"/></condition><then pos:line="68" pos:column="69"> <block pos:line="68" pos:column="70">{
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">mpm_service_start<pos:position pos:line="69" pos:column="30"/></name><argument_list pos:line="69" pos:column="30">(<argument><expr><name pos:line="69" pos:column="31">ptemp<pos:position pos:line="69" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="38">0<pos:position pos:line="69" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="41">NULL<pos:position pos:line="69" pos:column="45"/></name></expr></argument>)<pos:position pos:line="69" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="70" pos:column="13">CloseServiceHandle<pos:position pos:line="70" pos:column="31"/></name><argument_list pos:line="70" pos:column="31">(<argument><expr><name pos:line="70" pos:column="32">schService<pos:position pos:line="70" pos:column="42"/></name></expr></argument>)<pos:position pos:line="70" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="71" pos:column="13">CloseServiceHandle<pos:position pos:line="71" pos:column="31"/></name><argument_list pos:line="71" pos:column="31">(<argument><expr><name pos:line="71" pos:column="32">schSCManager<pos:position pos:line="71" pos:column="44"/></name></expr></argument>)<pos:position pos:line="71" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="46"/></expr_stmt>
            <return pos:line="72" pos:column="13">return;<pos:position pos:line="72" pos:column="20"/></return>
        }<pos:position pos:line="73" pos:column="10"/></block></then></if></elseif>
        <else pos:line="74" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="13">success<pos:position pos:line="75" pos:column="20"/></name> <operator pos:line="75" pos:column="21">=<pos:position pos:line="75" pos:column="22"/></operator> <call><name pos:line="75" pos:column="23">signal_service_transition<pos:position pos:line="75" pos:column="48"/></name><argument_list pos:line="75" pos:column="48">(<argument><expr><name pos:line="75" pos:column="49">schService<pos:position pos:line="75" pos:column="59"/></name></expr></argument>,
                                                <argument><expr><name pos:line="76" pos:column="49">SERVICE_APACHE_RESTART<pos:position pos:line="76" pos:column="71"/></name></expr></argument>,
                                                <argument><expr><name pos:line="77" pos:column="49">SERVICE_START_PENDING<pos:position pos:line="77" pos:column="70"/></name></expr></argument>,
                                                <argument><expr><name pos:line="78" pos:column="49">SERVICE_RUNNING<pos:position pos:line="78" pos:column="64"/></name></expr></argument>)<pos:position pos:line="78" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="66"/></expr_stmt></block></else></if>

        <expr_stmt><expr><call><name pos:line="80" pos:column="9">CloseServiceHandle<pos:position pos:line="80" pos:column="27"/></name><argument_list pos:line="80" pos:column="27">(<argument><expr><name pos:line="80" pos:column="28">schService<pos:position pos:line="80" pos:column="38"/></name></expr></argument>)<pos:position pos:line="80" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">CloseServiceHandle<pos:position pos:line="81" pos:column="27"/></name><argument_list pos:line="81" pos:column="27">(<argument><expr><name pos:line="81" pos:column="28">schSCManager<pos:position pos:line="81" pos:column="40"/></name></expr></argument>)<pos:position pos:line="81" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="82" pos:column="6"/></block></then>
    <else pos:line="83" pos:column="5">else <comment type="block" pos:line="83" pos:column="10">/* !isWindowsNT() */</comment>
    <block pos:line="84" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="85" pos:column="9">DWORD<pos:position pos:line="85" pos:column="14"/></name></type>       <name pos:line="85" pos:column="21">service_pid<pos:position pos:line="85" pos:column="32"/></name></decl>;<pos:position pos:line="85" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="86" pos:column="9">HANDLE<pos:position pos:line="86" pos:column="15"/></name></type>      <name pos:line="86" pos:column="21">hwnd<pos:position pos:line="86" pos:column="25"/></name></decl>;<pos:position pos:line="86" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="87" pos:column="9">char<pos:position pos:line="87" pos:column="13"/></name></type> <name><name pos:line="87" pos:column="14">prefix<pos:position pos:line="87" pos:column="20"/></name><index pos:line="87" pos:column="20">[<expr><literal type="number" pos:line="87" pos:column="21">20<pos:position pos:line="87" pos:column="23"/></literal></expr>]<pos:position pos:line="87" pos:column="24"/></index></name></decl>;<pos:position pos:line="87" pos:column="25"/></decl_stmt>
        <comment type="block" pos:line="88" pos:column="9">/* Locate the active top level window named service_name
         * provided the class is ApacheWin95ServiceMonitor
         */</comment>
        <expr_stmt><expr><name pos:line="91" pos:column="9">hwnd<pos:position pos:line="91" pos:column="13"/></name> <operator pos:line="91" pos:column="14">=<pos:position pos:line="91" pos:column="15"/></operator> <call><name pos:line="91" pos:column="16">FindWindow<pos:position pos:line="91" pos:column="26"/></name><argument_list pos:line="91" pos:column="26">(<argument><expr><literal type="string" pos:line="91" pos:column="27">"ApacheWin95ServiceMonitor"<pos:position pos:line="91" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="56">mpm_service_name<pos:position pos:line="91" pos:column="72"/></name></expr></argument>)<pos:position pos:line="91" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="74"/></expr_stmt>
        <if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><name pos:line="92" pos:column="13">hwnd<pos:position pos:line="92" pos:column="17"/></name> <operator pos:line="92" pos:column="18">&amp;&amp;<pos:position pos:line="92" pos:column="28"/></operator> <call><name pos:line="92" pos:column="21">GetWindowThreadProcessId<pos:position pos:line="92" pos:column="45"/></name><argument_list pos:line="92" pos:column="45">(<argument><expr><name pos:line="92" pos:column="46">hwnd<pos:position pos:line="92" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="52">&amp;<pos:position pos:line="92" pos:column="57"/></operator><name pos:line="92" pos:column="53">service_pid<pos:position pos:line="92" pos:column="64"/></name></expr></argument>)<pos:position pos:line="92" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="92" pos:column="66"/></condition><then pos:line="92" pos:column="66">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="93" pos:column="13">globdat<pos:position pos:line="93" pos:column="20"/></name><operator pos:line="93" pos:column="20">.<pos:position pos:line="93" pos:column="21"/></operator><name pos:line="93" pos:column="21">ssStatus<pos:position pos:line="93" pos:column="29"/></name><operator pos:line="93" pos:column="29">.<pos:position pos:line="93" pos:column="30"/></operator><name pos:line="93" pos:column="30">dwCurrentState<pos:position pos:line="93" pos:column="44"/></name></name> <operator pos:line="93" pos:column="45">=<pos:position pos:line="93" pos:column="46"/></operator> <name pos:line="93" pos:column="47">SERVICE_RUNNING<pos:position pos:line="93" pos:column="62"/></name></expr>;<pos:position pos:line="93" pos:column="63"/></expr_stmt></block></then>
        <else pos:line="94" pos:column="9">else
        <block pos:line="95" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="96" pos:column="13">globdat<pos:position pos:line="96" pos:column="20"/></name><operator pos:line="96" pos:column="20">.<pos:position pos:line="96" pos:column="21"/></operator><name pos:line="96" pos:column="21">ssStatus<pos:position pos:line="96" pos:column="29"/></name><operator pos:line="96" pos:column="29">.<pos:position pos:line="96" pos:column="30"/></operator><name pos:line="96" pos:column="30">dwCurrentState<pos:position pos:line="96" pos:column="44"/></name></name> <operator pos:line="96" pos:column="45">=<pos:position pos:line="96" pos:column="46"/></operator> <name pos:line="96" pos:column="47">SERVICE_STOPPED<pos:position pos:line="96" pos:column="62"/></name></expr>;<pos:position pos:line="96" pos:column="63"/></expr_stmt>
            <if pos:line="97" pos:column="13">if <condition pos:line="97" pos:column="16">(<expr><operator pos:line="97" pos:column="17">!<pos:position pos:line="97" pos:column="18"/></operator><name pos:line="97" pos:column="18">signal<pos:position pos:line="97" pos:column="24"/></name></expr>)<pos:position pos:line="97" pos:column="25"/></condition><then pos:line="97" pos:column="25"> <block pos:line="97" pos:column="26">{
                <expr_stmt><expr><call><name pos:line="98" pos:column="17">fprintf<pos:position pos:line="98" pos:column="24"/></name><argument_list pos:line="98" pos:column="24">(<argument><expr><name pos:line="98" pos:column="25">stderr<pos:position pos:line="98" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="98" pos:column="32">"The %s service is not started.\n"<pos:position pos:line="98" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="98" pos:column="68">mpm_display_name<pos:position pos:line="98" pos:column="84"/></name></expr></argument>)<pos:position pos:line="98" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="86"/></expr_stmt>
                <return pos:line="99" pos:column="17">return;<pos:position pos:line="99" pos:column="24"/></return>
            }<pos:position pos:line="100" pos:column="14"/></block></then></if>
        }<pos:position pos:line="101" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="103" pos:column="9">fprintf<pos:position pos:line="103" pos:column="16"/></name><argument_list pos:line="103" pos:column="16">(<argument><expr><name pos:line="103" pos:column="17">stderr<pos:position pos:line="103" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="103" pos:column="24">"The %s service is %s.\n"<pos:position pos:line="103" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="51">mpm_display_name<pos:position pos:line="103" pos:column="67"/></name></expr></argument>,
               <argument><expr><ternary><condition><expr><name pos:line="104" pos:column="16">signal<pos:position pos:line="104" pos:column="22"/></name></expr> ?<pos:position pos:line="104" pos:column="24"/></condition><then pos:line="104" pos:column="24"> <expr><literal type="string" pos:line="104" pos:column="25">"restarting"<pos:position pos:line="104" pos:column="37"/></literal></expr> <pos:position pos:line="104" pos:column="38"/></then><else pos:line="104" pos:column="38">: <expr><literal type="string" pos:line="104" pos:column="40">"stopping"<pos:position pos:line="104" pos:column="50"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="104" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="52"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="106" pos:column="9">apr_snprintf<pos:position pos:line="106" pos:column="21"/></name><argument_list pos:line="106" pos:column="21">(<argument><expr><name pos:line="106" pos:column="22">prefix<pos:position pos:line="106" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="106" pos:column="30">sizeof<argument_list pos:line="106" pos:column="36">(<argument><expr><name pos:line="106" pos:column="37">prefix<pos:position pos:line="106" pos:column="43"/></name></expr></argument>)<pos:position pos:line="106" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="46">"ap%ld"<pos:position pos:line="106" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="106" pos:column="55">(<pos:position pos:line="106" pos:column="56"/></operator><name pos:line="106" pos:column="56">long<pos:position pos:line="106" pos:column="60"/></name><operator pos:line="106" pos:column="60">)<pos:position pos:line="106" pos:column="61"/></operator><name pos:line="106" pos:column="61">service_pid<pos:position pos:line="106" pos:column="72"/></name></expr></argument>)<pos:position pos:line="106" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="107" pos:column="9">setup_signal_names<pos:position pos:line="107" pos:column="27"/></name><argument_list pos:line="107" pos:column="27">(<argument><expr><name pos:line="107" pos:column="28">prefix<pos:position pos:line="107" pos:column="34"/></name></expr></argument>)<pos:position pos:line="107" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="36"/></expr_stmt>

        <if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><operator pos:line="109" pos:column="13">!<pos:position pos:line="109" pos:column="14"/></operator><name pos:line="109" pos:column="14">signal<pos:position pos:line="109" pos:column="20"/></name></expr>)<pos:position pos:line="109" pos:column="21"/></condition><then pos:line="109" pos:column="21">
        <block pos:line="110" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="111" pos:column="13">int<pos:position pos:line="111" pos:column="16"/></name></type> <name pos:line="111" pos:column="17">ticks<pos:position pos:line="111" pos:column="22"/></name> <init pos:line="111" pos:column="23">= <expr><literal type="number" pos:line="111" pos:column="25">60<pos:position pos:line="111" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="111" pos:column="28"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="112" pos:column="13">ap_signal_parent<pos:position pos:line="112" pos:column="29"/></name><argument_list pos:line="112" pos:column="29">(<argument><expr><name pos:line="112" pos:column="30">SIGNAL_PARENT_SHUTDOWN<pos:position pos:line="112" pos:column="52"/></name></expr></argument>)<pos:position pos:line="112" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="54"/></expr_stmt>
            <while pos:line="113" pos:column="13">while <condition pos:line="113" pos:column="19">(<expr><operator pos:line="113" pos:column="20">--<pos:position pos:line="113" pos:column="22"/></operator><name pos:line="113" pos:column="22">ticks<pos:position pos:line="113" pos:column="27"/></name></expr>)<pos:position pos:line="113" pos:column="28"/></condition>
            <block pos:line="114" pos:column="13">{
                <if pos:line="115" pos:column="17">if <condition pos:line="115" pos:column="20">(<expr><operator pos:line="115" pos:column="21">!<pos:position pos:line="115" pos:column="22"/></operator><call><name pos:line="115" pos:column="22">IsWindow<pos:position pos:line="115" pos:column="30"/></name><argument_list pos:line="115" pos:column="30">(<argument><expr><name pos:line="115" pos:column="31">hwnd<pos:position pos:line="115" pos:column="35"/></name></expr></argument>)<pos:position pos:line="115" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="115" pos:column="37"/></condition><then pos:line="115" pos:column="37"> <block pos:line="115" pos:column="38">{
                    <expr_stmt><expr><name pos:line="116" pos:column="21">success<pos:position pos:line="116" pos:column="28"/></name> <operator pos:line="116" pos:column="29">=<pos:position pos:line="116" pos:column="30"/></operator> <name pos:line="116" pos:column="31">TRUE<pos:position pos:line="116" pos:column="35"/></name></expr>;<pos:position pos:line="116" pos:column="36"/></expr_stmt>
                    <break pos:line="117" pos:column="21">break;<pos:position pos:line="117" pos:column="27"/></break>
                }<pos:position pos:line="118" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="119" pos:column="17">Sleep<pos:position pos:line="119" pos:column="22"/></name><argument_list pos:line="119" pos:column="22">(<argument><expr><literal type="number" pos:line="119" pos:column="23">1000<pos:position pos:line="119" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="120" pos:column="14"/></block></while>
        }<pos:position pos:line="121" pos:column="10"/></block></then>
        <else pos:line="122" pos:column="9">else <comment type="block" pos:line="122" pos:column="14">/* !stop */</comment>
        <block pos:line="123" pos:column="9">{
            <comment type="block" pos:line="124" pos:column="13">/* TODO: Aught to add a little test to the restart logic, and
             * store the restart counter in the window's user dword.
             * Then we can hang on and report a successful restart.  But
             * that's a project for another day.
             */</comment>
            <if pos:line="129" pos:column="13">if <condition pos:line="129" pos:column="16">(<expr><name><name pos:line="129" pos:column="17">globdat<pos:position pos:line="129" pos:column="24"/></name><operator pos:line="129" pos:column="24">.<pos:position pos:line="129" pos:column="25"/></operator><name pos:line="129" pos:column="25">ssStatus<pos:position pos:line="129" pos:column="33"/></name><operator pos:line="129" pos:column="33">.<pos:position pos:line="129" pos:column="34"/></operator><name pos:line="129" pos:column="34">dwCurrentState<pos:position pos:line="129" pos:column="48"/></name></name> <operator pos:line="129" pos:column="49">==<pos:position pos:line="129" pos:column="51"/></operator> <name pos:line="129" pos:column="52">SERVICE_STOPPED<pos:position pos:line="129" pos:column="67"/></name></expr>)<pos:position pos:line="129" pos:column="68"/></condition><then pos:line="129" pos:column="68"> <block pos:line="129" pos:column="69">{
                <expr_stmt><expr><call><name pos:line="130" pos:column="17">mpm_service_start<pos:position pos:line="130" pos:column="34"/></name><argument_list pos:line="130" pos:column="34">(<argument><expr><name pos:line="130" pos:column="35">ptemp<pos:position pos:line="130" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="130" pos:column="42">0<pos:position pos:line="130" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="130" pos:column="45">NULL<pos:position pos:line="130" pos:column="49"/></name></expr></argument>)<pos:position pos:line="130" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="51"/></expr_stmt>
                <return pos:line="131" pos:column="17">return;<pos:position pos:line="131" pos:column="24"/></return>
            }<pos:position pos:line="132" pos:column="14"/></block></then>
            <else pos:line="133" pos:column="13">else <block pos:line="133" pos:column="18">{
                <expr_stmt><expr><name pos:line="134" pos:column="17">success<pos:position pos:line="134" pos:column="24"/></name> <operator pos:line="134" pos:column="25">=<pos:position pos:line="134" pos:column="26"/></operator> <name pos:line="134" pos:column="27">TRUE<pos:position pos:line="134" pos:column="31"/></name></expr>;<pos:position pos:line="134" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="135" pos:column="17">ap_signal_parent<pos:position pos:line="135" pos:column="33"/></name><argument_list pos:line="135" pos:column="33">(<argument><expr><name pos:line="135" pos:column="34">SIGNAL_PARENT_RESTART<pos:position pos:line="135" pos:column="55"/></name></expr></argument>)<pos:position pos:line="135" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="57"/></expr_stmt>
            }<pos:position pos:line="136" pos:column="14"/></block></else></if>
        }<pos:position pos:line="137" pos:column="10"/></block></else></if>
    }<pos:position pos:line="138" pos:column="6"/></block></else></if>

    <if pos:line="140" pos:column="5">if <condition pos:line="140" pos:column="8">(<expr><name pos:line="140" pos:column="9">success<pos:position pos:line="140" pos:column="16"/></name></expr>)<pos:position pos:line="140" pos:column="17"/></condition><then pos:line="140" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="141" pos:column="9">fprintf<pos:position pos:line="141" pos:column="16"/></name><argument_list pos:line="141" pos:column="16">(<argument><expr><name pos:line="141" pos:column="17">stderr<pos:position pos:line="141" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="141" pos:column="24">"The %s service has %s.\n"<pos:position pos:line="141" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="141" pos:column="52">mpm_display_name<pos:position pos:line="141" pos:column="68"/></name></expr></argument>,
               <argument><expr><ternary><condition><expr><name pos:line="142" pos:column="16">signal<pos:position pos:line="142" pos:column="22"/></name></expr> ?<pos:position pos:line="142" pos:column="24"/></condition><then pos:line="142" pos:column="24"> <expr><literal type="string" pos:line="142" pos:column="25">"restarted"<pos:position pos:line="142" pos:column="36"/></literal></expr> <pos:position pos:line="142" pos:column="37"/></then><else pos:line="142" pos:column="37">: <expr><literal type="string" pos:line="142" pos:column="39">"stopped"<pos:position pos:line="142" pos:column="48"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="142" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="50"/></expr_stmt></block></then>
    <else pos:line="143" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="144" pos:column="9">fprintf<pos:position pos:line="144" pos:column="16"/></name><argument_list pos:line="144" pos:column="16">(<argument><expr><name pos:line="144" pos:column="17">stderr<pos:position pos:line="144" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="144" pos:column="24">"Failed to %s the %s service.\n"<pos:position pos:line="144" pos:column="56"/></literal></expr></argument>,
               <argument><expr><ternary><condition><expr><name pos:line="145" pos:column="16">signal<pos:position pos:line="145" pos:column="22"/></name></expr> ?<pos:position pos:line="145" pos:column="24"/></condition><then pos:line="145" pos:column="24"> <expr><literal type="string" pos:line="145" pos:column="25">"restart"<pos:position pos:line="145" pos:column="34"/></literal></expr> <pos:position pos:line="145" pos:column="35"/></then><else pos:line="145" pos:column="35">: <expr><literal type="string" pos:line="145" pos:column="37">"stop"<pos:position pos:line="145" pos:column="43"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="145" pos:column="45">mpm_display_name<pos:position pos:line="145" pos:column="61"/></name></expr></argument>)<pos:position pos:line="145" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="63"/></expr_stmt></block></else></if>
}<pos:position pos:line="146" pos:column="2"/></block></function></unit>

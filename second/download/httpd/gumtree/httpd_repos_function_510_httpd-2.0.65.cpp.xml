<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_510_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">parse_format_tag<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">apr_pool_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">p<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">format_tag<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">tag<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="63">const<pos:position pos:line="1" pos:column="68"/></specifier> <name pos:line="1" pos:column="69">char<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier><modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">sa<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{ 
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">s<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><operator pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></operator><name pos:line="3" pos:column="22">sa<pos:position pos:line="3" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <function_decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type> (<modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier><name pos:line="4" pos:column="20">tag_handler<pos:position pos:line="4" pos:column="31"/></name>)<parameter_list pos:line="4" pos:column="32">(<parameter><decl><type><name pos:line="4" pos:column="33">request_rec<pos:position pos:line="4" pos:column="44"/></name> <modifier pos:line="4" pos:column="45">*<pos:position pos:line="4" pos:column="46"/></modifier></type></decl></parameter>,<parameter><decl><type><name pos:line="4" pos:column="47">char<pos:position pos:line="4" pos:column="51"/></name> <modifier pos:line="4" pos:column="52">*<pos:position pos:line="4" pos:column="53"/></modifier></type></decl></parameter>)<pos:position pos:line="4" pos:column="54"/></parameter_list>;<pos:position pos:line="4" pos:column="55"/></function_decl>

    <comment type="block" pos:line="6" pos:column="5">/* Handle string literal/conditionals */</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">s<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">!=<pos:position pos:line="7" pos:column="14"/></operator> <literal type="char" pos:line="7" pos:column="15">'%'<pos:position pos:line="7" pos:column="18"/></literal></expr>)<pos:position pos:line="7" pos:column="19"/></condition><then pos:line="7" pos:column="19"> <block pos:line="7" pos:column="20">{
        <return pos:line="8" pos:column="9">return <expr><call><name pos:line="8" pos:column="16">parse_misc_string<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><name pos:line="8" pos:column="34">p<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="37">tag<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">sa<pos:position pos:line="8" pos:column="44"/></name></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="10" pos:column="5">s<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">++<pos:position pos:line="10" pos:column="8"/></operator></expr>;<pos:position pos:line="10" pos:column="9"/></expr_stmt> <comment type="block" pos:line="10" pos:column="10">/* skip the % */</comment>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">tag<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">-&gt;<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="10">arg<pos:position pos:line="11" pos:column="13"/></name></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <literal type="char" pos:line="11" pos:column="16">'\0'<pos:position pos:line="11" pos:column="20"/></literal></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
    <comment type="block" pos:line="12" pos:column="5">/* grab the argument if there is one */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">s<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">==<pos:position pos:line="13" pos:column="14"/></operator> <literal type="char" pos:line="13" pos:column="15">'{'<pos:position pos:line="13" pos:column="18"/></literal></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19"> <block pos:line="13" pos:column="20">{
        <expr_stmt><expr><operator pos:line="14" pos:column="9">++<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">s<pos:position pos:line="14" pos:column="12"/></name></expr>;<pos:position pos:line="14" pos:column="13"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="15" pos:column="9">tag<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">arg<pos:position pos:line="15" pos:column="17"/></name></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <call><name pos:line="15" pos:column="20">ap_getword<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">p<pos:position pos:line="15" pos:column="32"/></name></expr></argument>,<argument><expr><operator pos:line="15" pos:column="33">&amp;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="34">s<pos:position pos:line="15" pos:column="35"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="15" pos:column="36">'}'<pos:position pos:line="15" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">tag_handler<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <operator pos:line="18" pos:column="19">(<pos:position pos:line="18" pos:column="20"/></operator><specifier pos:line="18" pos:column="20">const<pos:position pos:line="18" pos:column="25"/></specifier> <name pos:line="18" pos:column="26">char<pos:position pos:line="18" pos:column="30"/></name> <operator pos:line="18" pos:column="31">*<pos:position pos:line="18" pos:column="32"/></operator> <call pos:line="18" pos:column="33">(<modifier pos:line="18" pos:column="34">*<pos:position pos:line="18" pos:column="35"/></modifier>)<argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">request_rec<pos:position pos:line="18" pos:column="48"/></name> <operator pos:line="18" pos:column="49">*<pos:position pos:line="18" pos:column="50"/></operator></expr></argument>,<argument><expr><name pos:line="18" pos:column="51">char<pos:position pos:line="18" pos:column="55"/></name> <operator pos:line="18" pos:column="56">*<pos:position pos:line="18" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call><operator pos:line="18" pos:column="58">)<pos:position pos:line="18" pos:column="59"/></operator><call><name pos:line="18" pos:column="59">apr_hash_get<pos:position pos:line="18" pos:column="71"/></name><argument_list pos:line="18" pos:column="71">(<argument><expr><name pos:line="18" pos:column="72">format_tag_hash<pos:position pos:line="18" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="89">s<pos:position pos:line="18" pos:column="90"/></name><operator pos:line="18" pos:column="90">++<pos:position pos:line="18" pos:column="92"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="94">1<pos:position pos:line="18" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="97"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">tag_handler<pos:position pos:line="20" pos:column="21"/></name></expr>)<pos:position pos:line="20" pos:column="22"/></condition><then pos:line="20" pos:column="22"> <block pos:line="20" pos:column="23">{
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">char<pos:position pos:line="21" pos:column="13"/></name></type> <name><name pos:line="21" pos:column="14">dummy<pos:position pos:line="21" pos:column="19"/></name><index pos:line="21" pos:column="19">[<expr><literal type="number" pos:line="21" pos:column="20">2<pos:position pos:line="21" pos:column="21"/></literal></expr>]<pos:position pos:line="21" pos:column="22"/></index></name></decl>;<pos:position pos:line="21" pos:column="23"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">dummy<pos:position pos:line="22" pos:column="14"/></name><index pos:line="22" pos:column="14">[<expr><literal type="number" pos:line="22" pos:column="15">0<pos:position pos:line="22" pos:column="16"/></literal></expr>]<pos:position pos:line="22" pos:column="17"/></index></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <name><name pos:line="22" pos:column="20">s<pos:position pos:line="22" pos:column="21"/></name><index pos:line="22" pos:column="21">[<expr><operator pos:line="22" pos:column="22">-<pos:position pos:line="22" pos:column="23"/></operator><literal type="number" pos:line="22" pos:column="23">1<pos:position pos:line="22" pos:column="24"/></literal></expr>]<pos:position pos:line="22" pos:column="25"/></index></name></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">dummy<pos:position pos:line="23" pos:column="14"/></name><index pos:line="23" pos:column="14">[<expr><literal type="number" pos:line="23" pos:column="15">1<pos:position pos:line="23" pos:column="16"/></literal></expr>]<pos:position pos:line="23" pos:column="17"/></index></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <literal type="char" pos:line="23" pos:column="20">'\0'<pos:position pos:line="23" pos:column="24"/></literal></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>
        <return pos:line="24" pos:column="9">return <expr><call><name pos:line="24" pos:column="16">apr_pstrcat<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">p<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="31">"Unrecognized Header or RequestHeader directive %"<pos:position pos:line="24" pos:column="81"/></literal></expr></argument>,
                           <argument><expr><name pos:line="25" pos:column="28">dummy<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="35">NULL<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="41"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">tag<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">-&gt;<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="10">func<pos:position pos:line="27" pos:column="14"/></name></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">tag_handler<pos:position pos:line="27" pos:column="28"/></name></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="29" pos:column="5">*<pos:position pos:line="29" pos:column="6"/></operator><name pos:line="29" pos:column="6">sa<pos:position pos:line="29" pos:column="8"/></name> <operator pos:line="29" pos:column="9">=<pos:position pos:line="29" pos:column="10"/></operator> <name pos:line="29" pos:column="11">s<pos:position pos:line="29" pos:column="12"/></name></expr>;<pos:position pos:line="29" pos:column="13"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><name pos:line="30" pos:column="12">NULL<pos:position pos:line="30" pos:column="16"/></name></expr>;<pos:position pos:line="30" pos:column="17"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_7205.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">htdbm_make<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">htdbm_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">htdbm<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">cpw<pos:position pos:line="3" pos:column="13"/></name><index pos:line="3" pos:column="13">[<expr><name pos:line="3" pos:column="14">MAX_STRING_LEN<pos:position pos:line="3" pos:column="28"/></name></expr>]<pos:position pos:line="3" pos:column="29"/></index></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">salt<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><literal type="number" pos:line="4" pos:column="15">9<pos:position pos:line="4" pos:column="16"/></literal></expr>]<pos:position pos:line="4" pos:column="17"/></index></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><operator pos:line="5" pos:column="5">(<pos:position pos:line="5" pos:column="6"/></operator><operator pos:line="5" pos:column="6">!<pos:position pos:line="5" pos:column="7"/></operator><operator pos:line="5" pos:column="7">(<pos:position pos:line="5" pos:column="8"/></operator><call><name pos:line="5" pos:column="8">defined<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">WIN32<pos:position pos:line="5" pos:column="21"/></name></expr></argument>)<pos:position pos:line="5" pos:column="22"/></argument_list></call> <operator pos:line="5" pos:column="23">||<pos:position pos:line="5" pos:column="25"/></operator> <call><name pos:line="5" pos:column="26">defined<pos:position pos:line="5" pos:column="33"/></name><argument_list pos:line="5" pos:column="33">(<argument><expr><name pos:line="5" pos:column="34">NETWARE<pos:position pos:line="5" pos:column="41"/></name></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call><operator pos:line="5" pos:column="42">)<pos:position pos:line="5" pos:column="43"/></operator><operator pos:line="5" pos:column="43">)<pos:position pos:line="5" pos:column="44"/></operator></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">cbuf<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>

    <switch pos:line="9" pos:column="5">switch <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">htdbm<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">alg<pos:position pos:line="9" pos:column="23"/></name></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition> <block pos:line="9" pos:column="25">{
        <case pos:line="10" pos:column="9">case <expr><name pos:line="10" pos:column="14">ALG_APSHA<pos:position pos:line="10" pos:column="23"/></name></expr>:<pos:position pos:line="10" pos:column="24"/></case>
            <comment type="block" pos:line="11" pos:column="13">/* XXX cpw &gt;= 28 + strlen(sha1) chars - fixed len SHA */</comment>
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">apr_sha1_base64<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name><name pos:line="12" pos:column="29">htdbm<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">userpass<pos:position pos:line="12" pos:column="44"/></name></name></expr></argument>,<argument><expr><call><name pos:line="12" pos:column="45">strlen<pos:position pos:line="12" pos:column="51"/></name><argument_list pos:line="12" pos:column="51">(<argument><expr><name><name pos:line="12" pos:column="52">htdbm<pos:position pos:line="12" pos:column="57"/></name><operator pos:line="12" pos:column="57">-&gt;<pos:position pos:line="12" pos:column="62"/></operator><name pos:line="12" pos:column="59">userpass<pos:position pos:line="12" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="12" pos:column="69">cpw<pos:position pos:line="12" pos:column="72"/></name></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="74"/></expr_stmt>
        <break pos:line="13" pos:column="9">break;<pos:position pos:line="13" pos:column="15"/></break>

        <case pos:line="15" pos:column="9">case <expr><name pos:line="15" pos:column="14">ALG_APMD5<pos:position pos:line="15" pos:column="23"/></name></expr>:<pos:position pos:line="15" pos:column="24"/></case>
            <expr_stmt><expr><operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">void<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">)<pos:position pos:line="16" pos:column="19"/></operator> <call><name pos:line="16" pos:column="20">srand<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><operator pos:line="16" pos:column="26">(<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">int<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">)<pos:position pos:line="16" pos:column="31"/></operator> <call><name pos:line="16" pos:column="32">time<pos:position pos:line="16" pos:column="36"/></name><argument_list pos:line="16" pos:column="36">(<argument><expr><operator pos:line="16" pos:column="37">(<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="38">time_t<pos:position pos:line="16" pos:column="44"/></name> <operator pos:line="16" pos:column="45">*<pos:position pos:line="16" pos:column="46"/></operator><operator pos:line="16" pos:column="46">)<pos:position pos:line="16" pos:column="47"/></operator> <name pos:line="16" pos:column="48">NULL<pos:position pos:line="16" pos:column="52"/></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">to64<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><operator pos:line="17" pos:column="18">&amp;<pos:position pos:line="17" pos:column="23"/></operator><name><name pos:line="17" pos:column="19">salt<pos:position pos:line="17" pos:column="23"/></name><index pos:line="17" pos:column="23">[<expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>]<pos:position pos:line="17" pos:column="26"/></index></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="28">rand<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">()<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="36">8<pos:position pos:line="17" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="18" pos:column="13">salt<pos:position pos:line="18" pos:column="17"/></name><index pos:line="18" pos:column="17">[<expr><literal type="number" pos:line="18" pos:column="18">8<pos:position pos:line="18" pos:column="19"/></literal></expr>]<pos:position pos:line="18" pos:column="20"/></index></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <literal type="char" pos:line="18" pos:column="23">'\0'<pos:position pos:line="18" pos:column="27"/></literal></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">apr_md5_encode<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><operator pos:line="19" pos:column="28">(<pos:position pos:line="19" pos:column="29"/></operator><specifier pos:line="19" pos:column="29">const<pos:position pos:line="19" pos:column="34"/></specifier> <name pos:line="19" pos:column="35">char<pos:position pos:line="19" pos:column="39"/></name> <operator pos:line="19" pos:column="40">*<pos:position pos:line="19" pos:column="41"/></operator><operator pos:line="19" pos:column="41">)<pos:position pos:line="19" pos:column="42"/></operator><name><name pos:line="19" pos:column="42">htdbm<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">userpass<pos:position pos:line="19" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="59">(<pos:position pos:line="19" pos:column="60"/></operator><specifier pos:line="19" pos:column="60">const<pos:position pos:line="19" pos:column="65"/></specifier> <name pos:line="19" pos:column="66">char<pos:position pos:line="19" pos:column="70"/></name> <operator pos:line="19" pos:column="71">*<pos:position pos:line="19" pos:column="72"/></operator><operator pos:line="19" pos:column="72">)<pos:position pos:line="19" pos:column="73"/></operator><name pos:line="19" pos:column="73">salt<pos:position pos:line="19" pos:column="77"/></name></expr></argument>,
                            <argument><expr><name pos:line="20" pos:column="29">cpw<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="34">sizeof<argument_list pos:line="20" pos:column="40">(<argument><expr><name pos:line="20" pos:column="41">cpw<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
        <break pos:line="21" pos:column="9">break;<pos:position pos:line="21" pos:column="15"/></break>
        <case pos:line="22" pos:column="9">case <expr><name pos:line="22" pos:column="14">ALG_PLAIN<pos:position pos:line="22" pos:column="23"/></name></expr>:<pos:position pos:line="22" pos:column="24"/></case>
            <comment type="block" pos:line="23" pos:column="13">/* XXX this len limitation is not in sync with any HTTPd len. */</comment>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">apr_cpystrn<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">cpw<pos:position pos:line="24" pos:column="28"/></name></expr></argument>,<argument><expr><name><name pos:line="24" pos:column="29">htdbm<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-&gt;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="36">userpass<pos:position pos:line="24" pos:column="44"/></name></name></expr></argument>,<argument><expr><sizeof pos:line="24" pos:column="45">sizeof<argument_list pos:line="24" pos:column="51">(<argument><expr><name pos:line="24" pos:column="52">cpw<pos:position pos:line="24" pos:column="55"/></name></expr></argument>)<pos:position pos:line="24" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt>
<cpp:if pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">if<pos:position pos:line="25" pos:column="4"/></cpp:directive> <expr><operator pos:line="25" pos:column="5">(<pos:position pos:line="25" pos:column="6"/></operator><operator pos:line="25" pos:column="6">!<pos:position pos:line="25" pos:column="7"/></operator><operator pos:line="25" pos:column="7">(<pos:position pos:line="25" pos:column="8"/></operator><call><name pos:line="25" pos:column="8">defined<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><name pos:line="25" pos:column="16">WIN32<pos:position pos:line="25" pos:column="21"/></name></expr></argument>)<pos:position pos:line="25" pos:column="22"/></argument_list></call> <operator pos:line="25" pos:column="23">||<pos:position pos:line="25" pos:column="25"/></operator> <call><name pos:line="25" pos:column="26">defined<pos:position pos:line="25" pos:column="33"/></name><argument_list pos:line="25" pos:column="33">(<argument><expr><name pos:line="25" pos:column="34">NETWARE<pos:position pos:line="25" pos:column="41"/></name></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call><operator pos:line="25" pos:column="42">)<pos:position pos:line="25" pos:column="43"/></operator><operator pos:line="25" pos:column="43">)<pos:position pos:line="25" pos:column="44"/></operator></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">fprintf<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">stderr<pos:position pos:line="26" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="29">"Warning: Plain text passwords aren't supported by the "<pos:position pos:line="26" pos:column="85"/></literal>
                    <literal type="string" pos:line="27" pos:column="21">"server on this platform!\n"<pos:position pos:line="27" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="51"/></expr_stmt>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="29" pos:column="9">break;<pos:position pos:line="29" pos:column="15"/></break>
<cpp:if pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">if<pos:position pos:line="30" pos:column="4"/></cpp:directive> <expr><operator pos:line="30" pos:column="5">(<pos:position pos:line="30" pos:column="6"/></operator><operator pos:line="30" pos:column="6">!<pos:position pos:line="30" pos:column="7"/></operator><operator pos:line="30" pos:column="7">(<pos:position pos:line="30" pos:column="8"/></operator><call><name pos:line="30" pos:column="8">defined<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><name pos:line="30" pos:column="16">WIN32<pos:position pos:line="30" pos:column="21"/></name></expr></argument>)<pos:position pos:line="30" pos:column="22"/></argument_list></call> <operator pos:line="30" pos:column="23">||<pos:position pos:line="30" pos:column="25"/></operator> <call><name pos:line="30" pos:column="26">defined<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">NETWARE<pos:position pos:line="30" pos:column="41"/></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call><operator pos:line="30" pos:column="42">)<pos:position pos:line="30" pos:column="43"/></operator><operator pos:line="30" pos:column="43">)<pos:position pos:line="30" pos:column="44"/></operator></expr></cpp:if>
        <case pos:line="31" pos:column="9">case <expr><name pos:line="31" pos:column="14">ALG_CRYPT<pos:position pos:line="31" pos:column="23"/></name></expr>:<pos:position pos:line="31" pos:column="24"/></case>
            <expr_stmt><expr><operator pos:line="32" pos:column="13">(<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">void<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">)<pos:position pos:line="32" pos:column="19"/></operator> <call><name pos:line="32" pos:column="20">srand<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><operator pos:line="32" pos:column="26">(<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="27">int<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">)<pos:position pos:line="32" pos:column="31"/></operator> <call><name pos:line="32" pos:column="32">time<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><operator pos:line="32" pos:column="37">(<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="38">time_t<pos:position pos:line="32" pos:column="44"/></name> <operator pos:line="32" pos:column="45">*<pos:position pos:line="32" pos:column="46"/></operator><operator pos:line="32" pos:column="46">)<pos:position pos:line="32" pos:column="47"/></operator> <name pos:line="32" pos:column="48">NULL<pos:position pos:line="32" pos:column="52"/></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">to64<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<argument><expr><operator pos:line="33" pos:column="18">&amp;<pos:position pos:line="33" pos:column="23"/></operator><name><name pos:line="33" pos:column="19">salt<pos:position pos:line="33" pos:column="23"/></name><index pos:line="33" pos:column="23">[<expr><literal type="number" pos:line="33" pos:column="24">0<pos:position pos:line="33" pos:column="25"/></literal></expr>]<pos:position pos:line="33" pos:column="26"/></index></name></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="28">rand<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">()<pos:position pos:line="33" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="36">8<pos:position pos:line="33" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">salt<pos:position pos:line="34" pos:column="17"/></name><index pos:line="34" pos:column="17">[<expr><literal type="number" pos:line="34" pos:column="18">8<pos:position pos:line="34" pos:column="19"/></literal></expr>]<pos:position pos:line="34" pos:column="20"/></index></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <literal type="char" pos:line="34" pos:column="23">'\0'<pos:position pos:line="34" pos:column="27"/></literal></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name pos:line="35" pos:column="13">cbuf<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <call><name pos:line="35" pos:column="20">crypt<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name><name pos:line="35" pos:column="26">htdbm<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">-&gt;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="33">userpass<pos:position pos:line="35" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="43">salt<pos:position pos:line="35" pos:column="47"/></name></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt>
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name pos:line="36" pos:column="17">cbuf<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">==<pos:position pos:line="36" pos:column="24"/></operator> <name pos:line="36" pos:column="25">NULL<pos:position pos:line="36" pos:column="29"/></name></expr>)<pos:position pos:line="36" pos:column="30"/></condition><then pos:line="36" pos:column="30"> <block pos:line="36" pos:column="31">{
                <decl_stmt><decl><type><name pos:line="37" pos:column="17">char<pos:position pos:line="37" pos:column="21"/></name></type> <name><name pos:line="37" pos:column="22">errbuf<pos:position pos:line="37" pos:column="28"/></name><index pos:line="37" pos:column="28">[<expr><literal type="number" pos:line="37" pos:column="29">128<pos:position pos:line="37" pos:column="32"/></literal></expr>]<pos:position pos:line="37" pos:column="33"/></index></name></decl>;<pos:position pos:line="37" pos:column="34"/></decl_stmt>
                
                <expr_stmt><expr><call><name pos:line="39" pos:column="17">fprintf<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><name pos:line="39" pos:column="25">stderr<pos:position pos:line="39" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="33">"crypt() failed: %s\n"<pos:position pos:line="39" pos:column="55"/></literal></expr></argument>, 
                        <argument><expr><call><name pos:line="40" pos:column="25">apr_strerror<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">(<argument><expr><name pos:line="40" pos:column="38">errno<pos:position pos:line="40" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="45">errbuf<pos:position pos:line="40" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="53">sizeof <name pos:line="40" pos:column="60">errbuf<pos:position pos:line="40" pos:column="66"/></name></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="69"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="41" pos:column="17">exit<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><name pos:line="41" pos:column="22">ERR_PWMISMATCH<pos:position pos:line="41" pos:column="36"/></name></expr></argument>)<pos:position pos:line="41" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="42" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">apr_cpystrn<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><name pos:line="43" pos:column="25">cpw<pos:position pos:line="43" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="30">cbuf<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="36">sizeof<argument_list pos:line="43" pos:column="42">(<argument><expr><name pos:line="43" pos:column="43">cpw<pos:position pos:line="43" pos:column="46"/></name></expr></argument>)<pos:position pos:line="43" pos:column="47"/></argument_list></sizeof> <operator pos:line="43" pos:column="48">-<pos:position pos:line="43" pos:column="49"/></operator> <literal type="number" pos:line="43" pos:column="50">1<pos:position pos:line="43" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">fprintf<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><name pos:line="44" pos:column="21">stderr<pos:position pos:line="44" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="29">"CRYPT is now deprecated, use MD5 instead!\n"<pos:position pos:line="44" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="76"/></expr_stmt>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>
        <default pos:line="46" pos:column="9">default:<pos:position pos:line="46" pos:column="17"/></default>
        <break pos:line="47" pos:column="9">break;<pos:position pos:line="47" pos:column="15"/></break>
    }<pos:position pos:line="48" pos:column="6"/></block></switch>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">htdbm<pos:position pos:line="49" pos:column="10"/></name><operator pos:line="49" pos:column="10">-&gt;<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="12">userpass<pos:position pos:line="49" pos:column="20"/></name></name> <operator pos:line="49" pos:column="21">=<pos:position pos:line="49" pos:column="22"/></operator> <call><name pos:line="49" pos:column="23">apr_pstrdup<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><name><name pos:line="49" pos:column="35">htdbm<pos:position pos:line="49" pos:column="40"/></name><operator pos:line="49" pos:column="40">-&gt;<pos:position pos:line="49" pos:column="45"/></operator><name pos:line="49" pos:column="42">pool<pos:position pos:line="49" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="48">cpw<pos:position pos:line="49" pos:column="51"/></name></expr></argument>)<pos:position pos:line="49" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="53"/></expr_stmt>
    <return pos:line="50" pos:column="5">return <expr><name pos:line="50" pos:column="12">APR_SUCCESS<pos:position pos:line="50" pos:column="23"/></name></expr>;<pos:position pos:line="50" pos:column="24"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

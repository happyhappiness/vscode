<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_677_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">ssl_io_filter_Input<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">ap_filter_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">f<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="2" pos:column="41">apr_bucket_brigade<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">bb<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="3" pos:column="41">ap_input_mode_t<pos:position pos:line="3" pos:column="56"/></name></type> <name pos:line="3" pos:column="57">mode<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="4" pos:column="41">apr_read_type_e<pos:position pos:line="4" pos:column="56"/></name></type> <name pos:line="4" pos:column="57">block<pos:position pos:line="4" pos:column="62"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="5" pos:column="41">apr_off_t<pos:position pos:line="5" pos:column="50"/></name></type> <name pos:line="5" pos:column="51">readbytes<pos:position pos:line="5" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="61"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_status_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">status<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ssl_io_input_ctx_t<pos:position pos:line="8" pos:column="23"/></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">ctx<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><name><name pos:line="8" pos:column="31">f<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">ctx<pos:position pos:line="8" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="38"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">len<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><sizeof pos:line="10" pos:column="22">sizeof<argument_list pos:line="10" pos:column="28">(<argument><expr><name><name pos:line="10" pos:column="29">ctx<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">buffer<pos:position pos:line="10" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">is_init<pos:position pos:line="11" pos:column="16"/></name> <init pos:line="11" pos:column="17">= <expr><operator pos:line="11" pos:column="19">(<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">mode<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">==<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="28">AP_MODE_INIT<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">)<pos:position pos:line="11" pos:column="41"/></operator></expr></init></decl>;<pos:position pos:line="11" pos:column="42"/></decl_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name><name pos:line="13" pos:column="10">ctx<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">inbio<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">.<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">ssl<pos:position pos:line="13" pos:column="24"/></name></name></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25"> <block pos:line="13" pos:column="26">{
        <return pos:line="14" pos:column="9">return <expr><call><name pos:line="14" pos:column="16">ap_get_brigade<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name><name pos:line="14" pos:column="31">f<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">next<pos:position pos:line="14" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">bb<pos:position pos:line="14" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="44">mode<pos:position pos:line="14" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="50">block<pos:position pos:line="14" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="57">readbytes<pos:position pos:line="14" pos:column="66"/></name></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="68"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/* XXX: we don't currently support anything other than these modes. */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">mode<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">!=<pos:position pos:line="18" pos:column="16"/></operator> <name pos:line="18" pos:column="17">AP_MODE_READBYTES<pos:position pos:line="18" pos:column="34"/></name> <operator pos:line="18" pos:column="35">&amp;&amp;<pos:position pos:line="18" pos:column="45"/></operator> <name pos:line="18" pos:column="38">mode<pos:position pos:line="18" pos:column="42"/></name> <operator pos:line="18" pos:column="43">!=<pos:position pos:line="18" pos:column="45"/></operator> <name pos:line="18" pos:column="46">AP_MODE_GETLINE<pos:position pos:line="18" pos:column="61"/></name> <operator pos:line="18" pos:column="62">&amp;&amp;<pos:position pos:line="18" pos:column="72"/></operator> 
        <name pos:line="19" pos:column="9">mode<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">!=<pos:position pos:line="19" pos:column="16"/></operator> <name pos:line="19" pos:column="17">AP_MODE_SPECULATIVE<pos:position pos:line="19" pos:column="36"/></name> <operator pos:line="19" pos:column="37">&amp;&amp;<pos:position pos:line="19" pos:column="47"/></operator> <name pos:line="19" pos:column="40">mode<pos:position pos:line="19" pos:column="44"/></name> <operator pos:line="19" pos:column="45">!=<pos:position pos:line="19" pos:column="47"/></operator> <name pos:line="19" pos:column="48">AP_MODE_INIT<pos:position pos:line="19" pos:column="60"/></name></expr>)<pos:position pos:line="19" pos:column="61"/></condition><then pos:line="19" pos:column="61"> <block pos:line="19" pos:column="62">{
        <return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">APR_ENOTIMPL<pos:position pos:line="20" pos:column="28"/></name></expr>;<pos:position pos:line="20" pos:column="29"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="23" pos:column="5">ctx<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">-&gt;<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="10">inbio<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">.<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">mode<pos:position pos:line="23" pos:column="20"/></name></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">mode<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">ctx<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">-&gt;<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="10">inbio<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">.<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="16">block<pos:position pos:line="24" pos:column="21"/></name></name> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="24">block<pos:position pos:line="24" pos:column="29"/></name></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="26" pos:column="5">/* XXX: we could actually move ssl_hook_process_connection to an
     * ap_hook_process_connection but would still need to call it for
     * AP_MODE_INIT for protocols that may upgrade the connection
     * rather than have SSLEngine On configured.
     */</comment>
    <expr_stmt><expr><name pos:line="31" pos:column="5">status<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <call><name pos:line="31" pos:column="14">ssl_hook_process_connection<pos:position pos:line="31" pos:column="41"/></name><argument_list pos:line="31" pos:column="41">(<argument><expr><name><name pos:line="31" pos:column="42">ctx<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">-&gt;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="47">frec<pos:position pos:line="31" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">status<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">!=<pos:position pos:line="33" pos:column="18"/></operator> <name pos:line="33" pos:column="19">APR_SUCCESS<pos:position pos:line="33" pos:column="30"/></name></expr>)<pos:position pos:line="33" pos:column="31"/></condition><then pos:line="33" pos:column="31"> <block pos:line="33" pos:column="32">{
        <return pos:line="34" pos:column="9">return <expr><call><name pos:line="34" pos:column="16">ssl_io_filter_error<pos:position pos:line="34" pos:column="35"/></name><argument_list pos:line="34" pos:column="35">(<argument><expr><name pos:line="34" pos:column="36">f<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">bb<pos:position pos:line="34" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="43">status<pos:position pos:line="34" pos:column="49"/></name></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="51"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">is_init<pos:position pos:line="37" pos:column="16"/></name></expr>)<pos:position pos:line="37" pos:column="17"/></condition><then pos:line="37" pos:column="17"> <block pos:line="37" pos:column="18">{
        <comment type="block" pos:line="38" pos:column="9">/* protocol module needs to handshake before sending
         * data to client (e.g. NNTP or FTP)
         */</comment>
        <return pos:line="41" pos:column="9">return <expr><name pos:line="41" pos:column="16">APR_SUCCESS<pos:position pos:line="41" pos:column="27"/></name></expr>;<pos:position pos:line="41" pos:column="28"/></return>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name><name pos:line="44" pos:column="9">ctx<pos:position pos:line="44" pos:column="12"/></name><operator pos:line="44" pos:column="12">-&gt;<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="14">inbio<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">.<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="20">mode<pos:position pos:line="44" pos:column="24"/></name></name> <operator pos:line="44" pos:column="25">==<pos:position pos:line="44" pos:column="27"/></operator> <name pos:line="44" pos:column="28">AP_MODE_READBYTES<pos:position pos:line="44" pos:column="45"/></name> <operator pos:line="44" pos:column="46">||<pos:position pos:line="44" pos:column="48"/></operator> 
        <name><name pos:line="45" pos:column="9">ctx<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">-&gt;<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="14">inbio<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">.<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="20">mode<pos:position pos:line="45" pos:column="24"/></name></name> <operator pos:line="45" pos:column="25">==<pos:position pos:line="45" pos:column="27"/></operator> <name pos:line="45" pos:column="28">AP_MODE_SPECULATIVE<pos:position pos:line="45" pos:column="47"/></name></expr>)<pos:position pos:line="45" pos:column="48"/></condition><then pos:line="45" pos:column="48"> <block pos:line="45" pos:column="49">{
        <comment type="block" pos:line="46" pos:column="9">/* Protected from truncation, readbytes &lt; MAX_SIZE_T 
         * FIXME: No, it's *not* protected.  -- jre */</comment>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">readbytes<pos:position pos:line="48" pos:column="22"/></name> <operator pos:line="48" pos:column="23">&lt;<pos:position pos:line="48" pos:column="27"/></operator> <name pos:line="48" pos:column="25">len<pos:position pos:line="48" pos:column="28"/></name></expr>)<pos:position pos:line="48" pos:column="29"/></condition><then pos:line="48" pos:column="29"> <block pos:line="48" pos:column="30">{
            <expr_stmt><expr><name pos:line="49" pos:column="13">len<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <operator pos:line="49" pos:column="19">(<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="20">apr_size_t<pos:position pos:line="49" pos:column="30"/></name><operator pos:line="49" pos:column="30">)<pos:position pos:line="49" pos:column="31"/></operator><name pos:line="49" pos:column="31">readbytes<pos:position pos:line="49" pos:column="40"/></name></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="51" pos:column="9">status<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <call><name pos:line="51" pos:column="18">ssl_io_input_read<pos:position pos:line="51" pos:column="35"/></name><argument_list pos:line="51" pos:column="35">(<argument><expr><name pos:line="51" pos:column="36">ctx<pos:position pos:line="51" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="41">ctx<pos:position pos:line="51" pos:column="44"/></name><operator pos:line="51" pos:column="44">-&gt;<pos:position pos:line="51" pos:column="49"/></operator><name pos:line="51" pos:column="46">buffer<pos:position pos:line="51" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="54">&amp;<pos:position pos:line="51" pos:column="59"/></operator><name pos:line="51" pos:column="55">len<pos:position pos:line="51" pos:column="58"/></name></expr></argument>)<pos:position pos:line="51" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then>
    <elseif pos:line="53" pos:column="5">else <if pos:line="53" pos:column="10">if <condition pos:line="53" pos:column="13">(<expr><name><name pos:line="53" pos:column="14">ctx<pos:position pos:line="53" pos:column="17"/></name><operator pos:line="53" pos:column="17">-&gt;<pos:position pos:line="53" pos:column="22"/></operator><name pos:line="53" pos:column="19">inbio<pos:position pos:line="53" pos:column="24"/></name><operator pos:line="53" pos:column="24">.<pos:position pos:line="53" pos:column="25"/></operator><name pos:line="53" pos:column="25">mode<pos:position pos:line="53" pos:column="29"/></name></name> <operator pos:line="53" pos:column="30">==<pos:position pos:line="53" pos:column="32"/></operator> <name pos:line="53" pos:column="33">AP_MODE_GETLINE<pos:position pos:line="53" pos:column="48"/></name></expr>)<pos:position pos:line="53" pos:column="49"/></condition><then pos:line="53" pos:column="49"> <block pos:line="53" pos:column="50">{
        <expr_stmt><expr><name pos:line="54" pos:column="9">status<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <call><name pos:line="54" pos:column="18">ssl_io_input_getline<pos:position pos:line="54" pos:column="38"/></name><argument_list pos:line="54" pos:column="38">(<argument><expr><name pos:line="54" pos:column="39">ctx<pos:position pos:line="54" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="44">ctx<pos:position pos:line="54" pos:column="47"/></name><operator pos:line="54" pos:column="47">-&gt;<pos:position pos:line="54" pos:column="52"/></operator><name pos:line="54" pos:column="49">buffer<pos:position pos:line="54" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="57">&amp;<pos:position pos:line="54" pos:column="62"/></operator><name pos:line="54" pos:column="58">len<pos:position pos:line="54" pos:column="61"/></name></expr></argument>)<pos:position pos:line="54" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if></elseif>
    <else pos:line="56" pos:column="5">else <block pos:line="56" pos:column="10">{
        <comment type="block" pos:line="57" pos:column="9">/* We have no idea what you are talking about, so return an error. */</comment>
        <return pos:line="58" pos:column="9">return <expr><name pos:line="58" pos:column="16">APR_ENOTIMPL<pos:position pos:line="58" pos:column="28"/></name></expr>;<pos:position pos:line="58" pos:column="29"/></return>
    }<pos:position pos:line="59" pos:column="6"/></block></else></if>

    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">status<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">!=<pos:position pos:line="61" pos:column="18"/></operator> <name pos:line="61" pos:column="19">APR_SUCCESS<pos:position pos:line="61" pos:column="30"/></name></expr>)<pos:position pos:line="61" pos:column="31"/></condition><then pos:line="61" pos:column="31"> <block pos:line="61" pos:column="32">{
        <return pos:line="62" pos:column="9">return <expr><call><name pos:line="62" pos:column="16">ssl_io_filter_error<pos:position pos:line="62" pos:column="35"/></name><argument_list pos:line="62" pos:column="35">(<argument><expr><name pos:line="62" pos:column="36">f<pos:position pos:line="62" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="39">bb<pos:position pos:line="62" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="43">status<pos:position pos:line="62" pos:column="49"/></name></expr></argument>)<pos:position pos:line="62" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="51"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name pos:line="65" pos:column="9">len<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">&gt;<pos:position pos:line="65" pos:column="17"/></operator> <literal type="number" pos:line="65" pos:column="15">0<pos:position pos:line="65" pos:column="16"/></literal></expr>)<pos:position pos:line="65" pos:column="17"/></condition><then pos:line="65" pos:column="17"> <block pos:line="65" pos:column="18">{
        <decl_stmt><decl><type><name pos:line="66" pos:column="9">apr_bucket<pos:position pos:line="66" pos:column="19"/></name> <modifier pos:line="66" pos:column="20">*<pos:position pos:line="66" pos:column="21"/></modifier></type><name pos:line="66" pos:column="21">bucket<pos:position pos:line="66" pos:column="27"/></name> <init pos:line="66" pos:column="28">=
            <expr><call><name pos:line="67" pos:column="13">apr_bucket_transient_create<pos:position pos:line="67" pos:column="40"/></name><argument_list pos:line="67" pos:column="40">(<argument><expr><name><name pos:line="67" pos:column="41">ctx<pos:position pos:line="67" pos:column="44"/></name><operator pos:line="67" pos:column="44">-&gt;<pos:position pos:line="67" pos:column="49"/></operator><name pos:line="67" pos:column="46">buffer<pos:position pos:line="67" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="54">len<pos:position pos:line="67" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="59">f<pos:position pos:line="67" pos:column="60"/></name><operator pos:line="67" pos:column="60">-&gt;<pos:position pos:line="67" pos:column="65"/></operator><name pos:line="67" pos:column="62">c<pos:position pos:line="67" pos:column="63"/></name><operator pos:line="67" pos:column="63">-&gt;<pos:position pos:line="67" pos:column="68"/></operator><name pos:line="67" pos:column="65">bucket_alloc<pos:position pos:line="67" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="67" pos:column="79"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="68" pos:column="32"/></name><argument_list pos:line="68" pos:column="32">(<argument><expr><name pos:line="68" pos:column="33">bb<pos:position pos:line="68" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="37">bucket<pos:position pos:line="68" pos:column="43"/></name></expr></argument>)<pos:position pos:line="68" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <return pos:line="71" pos:column="5">return <expr><name pos:line="71" pos:column="12">APR_SUCCESS<pos:position pos:line="71" pos:column="23"/></name></expr>;<pos:position pos:line="71" pos:column="24"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

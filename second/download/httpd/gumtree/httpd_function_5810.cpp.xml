<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5810.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_mplx_out_close<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">h2_mplx<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">m<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">stream_id<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">apr_table_t<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">trailers<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">status<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">m<pos:position pos:line="4" pos:column="22"/></name></expr></argument>)<pos:position pos:line="4" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="24"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">m<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">-&gt;<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="12">aborted<pos:position pos:line="5" pos:column="19"/></name></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20"> <block pos:line="5" pos:column="21">{
        <return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">APR_ECONNABORTED<pos:position pos:line="6" pos:column="32"/></name></expr>;<pos:position pos:line="6" pos:column="33"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="8" pos:column="5">status<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">apr_thread_mutex_lock<pos:position pos:line="8" pos:column="35"/></name><argument_list pos:line="8" pos:column="35">(<argument><expr><name><name pos:line="8" pos:column="36">m<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">-&gt;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="39">lock<pos:position pos:line="8" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">APR_SUCCESS<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">==<pos:position pos:line="9" pos:column="23"/></operator> <name pos:line="9" pos:column="24">status<pos:position pos:line="9" pos:column="30"/></name></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31"> <block pos:line="9" pos:column="32">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name><name pos:line="10" pos:column="14">m<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">aborted<pos:position pos:line="10" pos:column="24"/></name></name></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25"> <block pos:line="10" pos:column="26">{
            <decl_stmt><decl><type><name pos:line="11" pos:column="13">h2_io<pos:position pos:line="11" pos:column="18"/></name> <modifier pos:line="11" pos:column="19">*<pos:position pos:line="11" pos:column="20"/></modifier></type><name pos:line="11" pos:column="20">io<pos:position pos:line="11" pos:column="22"/></name> <init pos:line="11" pos:column="23">= <expr><call><name pos:line="11" pos:column="25">h2_io_set_get<pos:position pos:line="11" pos:column="38"/></name><argument_list pos:line="11" pos:column="38">(<argument><expr><name><name pos:line="11" pos:column="39">m<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">-&gt;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="42">stream_ios<pos:position pos:line="11" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="54">stream_id<pos:position pos:line="11" pos:column="63"/></name></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="65"/></decl_stmt>
            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><name pos:line="12" pos:column="17">io<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">&amp;&amp;<pos:position pos:line="12" pos:column="30"/></operator> <operator pos:line="12" pos:column="23">!<pos:position pos:line="12" pos:column="24"/></operator><name><name pos:line="12" pos:column="24">io<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">orphaned<pos:position pos:line="12" pos:column="36"/></name></name></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37"> <block pos:line="12" pos:column="38">{
                <if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><name><name pos:line="13" pos:column="22">io<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">-&gt;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="26">response<pos:position pos:line="13" pos:column="34"/></name></name> <operator pos:line="13" pos:column="35">&amp;&amp;<pos:position pos:line="13" pos:column="45"/></operator> <operator pos:line="13" pos:column="38">!<pos:position pos:line="13" pos:column="39"/></operator><name><name pos:line="13" pos:column="39">io<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">-&gt;<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="43">rst_error<pos:position pos:line="13" pos:column="52"/></name></name></expr>)<pos:position pos:line="13" pos:column="53"/></condition><then pos:line="13" pos:column="53"> <block pos:line="13" pos:column="54">{
                    <comment type="block" pos:line="14" pos:column="21">/* In case a close comes before a response was created,
                     * insert an error one so that our streams can properly
                     * reset.
                     */</comment>
                    <decl_stmt><decl><type><name pos:line="18" pos:column="21">h2_response<pos:position pos:line="18" pos:column="32"/></name> <modifier pos:line="18" pos:column="33">*<pos:position pos:line="18" pos:column="34"/></modifier></type><name pos:line="18" pos:column="34">r<pos:position pos:line="18" pos:column="35"/></name> <init pos:line="18" pos:column="36">= <expr><call><name pos:line="18" pos:column="38">h2_response_die<pos:position pos:line="18" pos:column="53"/></name><argument_list pos:line="18" pos:column="53">(<argument><expr><name pos:line="18" pos:column="54">stream_id<pos:position pos:line="18" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="65">APR_EGENERAL<pos:position pos:line="18" pos:column="77"/></name></expr></argument>, 
                                                     <argument><expr><name><name pos:line="19" pos:column="54">io<pos:position pos:line="19" pos:column="56"/></name><operator pos:line="19" pos:column="56">-&gt;<pos:position pos:line="19" pos:column="61"/></operator><name pos:line="19" pos:column="58">request<pos:position pos:line="19" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="67">m<pos:position pos:line="19" pos:column="68"/></name><operator pos:line="19" pos:column="68">-&gt;<pos:position pos:line="19" pos:column="73"/></operator><name pos:line="19" pos:column="70">pool<pos:position pos:line="19" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="76"/></decl_stmt>
                    <expr_stmt><expr><name pos:line="20" pos:column="21">status<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <call><name pos:line="20" pos:column="30">out_open<pos:position pos:line="20" pos:column="38"/></name><argument_list pos:line="20" pos:column="38">(<argument><expr><name pos:line="20" pos:column="39">m<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="42">stream_id<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="53">r<pos:position pos:line="20" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="56">NULL<pos:position pos:line="20" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="62">NULL<pos:position pos:line="20" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="68">NULL<pos:position pos:line="20" pos:column="72"/></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="74"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="21" pos:column="21">ap_log_cerror<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">(<argument><expr><name pos:line="21" pos:column="35">APLOG_MARK<pos:position pos:line="21" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="47">APLOG_DEBUG<pos:position pos:line="21" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="60">status<pos:position pos:line="21" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="68">m<pos:position pos:line="21" pos:column="69"/></name><operator pos:line="21" pos:column="69">-&gt;<pos:position pos:line="21" pos:column="74"/></operator><name pos:line="21" pos:column="71">c<pos:position pos:line="21" pos:column="72"/></name></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="22" pos:column="35">"h2_mplx(%ld-%d): close, no response, no rst"<pos:position pos:line="22" pos:column="80"/></literal></expr></argument>, 
                                  <argument><expr><name><name pos:line="23" pos:column="35">m<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">-&gt;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="38">id<pos:position pos:line="23" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="42">io<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">-&gt;<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="46">id<pos:position pos:line="23" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="50"/></expr_stmt>
                }<pos:position pos:line="24" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="25" pos:column="17">ap_log_cerror<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">APLOG_MARK<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="43">APLOG_DEBUG<pos:position pos:line="25" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="56">status<pos:position pos:line="25" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="64">m<pos:position pos:line="25" pos:column="65"/></name><operator pos:line="25" pos:column="65">-&gt;<pos:position pos:line="25" pos:column="70"/></operator><name pos:line="25" pos:column="67">c<pos:position pos:line="25" pos:column="68"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="26" pos:column="31">"h2_mplx(%ld-%d): close with trailers=%s"<pos:position pos:line="26" pos:column="72"/></literal></expr></argument>, 
                              <argument><expr><name><name pos:line="27" pos:column="31">m<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">id<pos:position pos:line="27" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="38">io<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">-&gt;<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="42">id<pos:position pos:line="27" pos:column="44"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="27" pos:column="46">trailers<pos:position pos:line="27" pos:column="54"/></name></expr>?<pos:position pos:line="27" pos:column="55"/></condition><then pos:line="27" pos:column="55"> <expr><literal type="string" pos:line="27" pos:column="56">"yes"<pos:position pos:line="27" pos:column="61"/></literal></expr> <pos:position pos:line="27" pos:column="62"/></then><else pos:line="27" pos:column="62">: <expr><literal type="string" pos:line="27" pos:column="64">"no"<pos:position pos:line="27" pos:column="68"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="70"/></expr_stmt>
                <expr_stmt><expr><name pos:line="28" pos:column="17">status<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <call><name pos:line="28" pos:column="26">h2_io_out_close<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">(<argument><expr><name pos:line="28" pos:column="42">io<pos:position pos:line="28" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="46">trailers<pos:position pos:line="28" pos:column="54"/></name></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="56"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="29" pos:column="17">H2_MPLX_IO_OUT<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><name pos:line="29" pos:column="32">APLOG_TRACE2<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">m<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">io<pos:position pos:line="29" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="53">"h2_mplx_out_close"<pos:position pos:line="29" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="74"/></expr_stmt>
                
                <expr_stmt><expr><call><name pos:line="31" pos:column="17">have_out_data_for<pos:position pos:line="31" pos:column="34"/></name><argument_list pos:line="31" pos:column="34">(<argument><expr><name pos:line="31" pos:column="35">m<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">stream_id<pos:position pos:line="31" pos:column="47"/></name></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt>
                <if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name><name pos:line="32" pos:column="21">m<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">-&gt;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="24">aborted<pos:position pos:line="32" pos:column="31"/></name></name></expr>)<pos:position pos:line="32" pos:column="32"/></condition><then pos:line="32" pos:column="32"> <block pos:line="32" pos:column="33">{
                    <comment type="block" pos:line="33" pos:column="21">/* if we were the last output, the whole session might
                     * have gone down in the meantime.
                     */</comment>
                    <return pos:line="36" pos:column="21">return <expr><name pos:line="36" pos:column="28">APR_SUCCESS<pos:position pos:line="36" pos:column="39"/></name></expr>;<pos:position pos:line="36" pos:column="40"/></return>
                }<pos:position pos:line="37" pos:column="18"/></block></then></if>
            }<pos:position pos:line="38" pos:column="14"/></block></then>
            <else pos:line="39" pos:column="13">else <block pos:line="39" pos:column="18">{
                <expr_stmt><expr><name pos:line="40" pos:column="17">status<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <name pos:line="40" pos:column="26">APR_ECONNABORTED<pos:position pos:line="40" pos:column="42"/></name></expr>;<pos:position pos:line="40" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="41" pos:column="14"/></block></else></if>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">(<argument><expr><name><name pos:line="43" pos:column="33">m<pos:position pos:line="43" pos:column="34"/></name><operator pos:line="43" pos:column="34">-&gt;<pos:position pos:line="43" pos:column="39"/></operator><name pos:line="43" pos:column="36">lock<pos:position pos:line="43" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
    <return pos:line="45" pos:column="5">return <expr><name pos:line="45" pos:column="12">status<pos:position pos:line="45" pos:column="18"/></name></expr>;<pos:position pos:line="45" pos:column="19"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

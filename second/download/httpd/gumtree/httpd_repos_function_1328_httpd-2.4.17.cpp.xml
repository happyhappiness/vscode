<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1328_httpd-2.4.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">store_body<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">cache_handle_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">h<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">request_rec<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">r<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2" pos:column="9">apr_bucket_brigade<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">in<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="33">apr_bucket_brigade<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">out<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_bucket<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">e<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">APR_SUCCESS<pos:position pos:line="5" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">cache_socache_object_t<pos:position pos:line="6" pos:column="27"/></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">sobj<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">=
            <expr><operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">cache_socache_object_t<pos:position pos:line="7" pos:column="36"/></name> <operator pos:line="7" pos:column="37">*<pos:position pos:line="7" pos:column="38"/></operator><operator pos:line="7" pos:column="38">)<pos:position pos:line="7" pos:column="39"/></operator> <name><name pos:line="7" pos:column="40">h<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">-&gt;<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="43">cache_obj<pos:position pos:line="7" pos:column="52"/></name><operator pos:line="7" pos:column="52">-&gt;<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="54">vobj<pos:position pos:line="7" pos:column="58"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">cache_socache_dir_conf<pos:position pos:line="8" pos:column="27"/></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">dconf<pos:position pos:line="8" pos:column="34"/></name> <init pos:line="8" pos:column="35">=
            <expr><call><name pos:line="9" pos:column="13">ap_get_module_config<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name><name pos:line="9" pos:column="34">r<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">per_dir_config<pos:position pos:line="9" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="53">&amp;<pos:position pos:line="9" pos:column="58"/></operator><name pos:line="9" pos:column="54">cache_socache_module<pos:position pos:line="9" pos:column="74"/></name></expr></argument>)<pos:position pos:line="9" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="76"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">seen_eos<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><literal type="number" pos:line="10" pos:column="20">0<pos:position pos:line="10" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name><name pos:line="12" pos:column="10">sobj<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">offset<pos:position pos:line="12" pos:column="22"/></name></name></expr>)<pos:position pos:line="12" pos:column="23"/></condition><then pos:line="12" pos:column="23"> <block pos:line="12" pos:column="24">{
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">sobj<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">offset<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <name><name pos:line="13" pos:column="24">dconf<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">-&gt;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="31">readsize<pos:position pos:line="13" pos:column="39"/></name></name></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><name><name pos:line="15" pos:column="10">sobj<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">timeout<pos:position pos:line="15" pos:column="23"/></name></name> <operator pos:line="15" pos:column="24">&amp;&amp;<pos:position pos:line="15" pos:column="34"/></operator> <name><name pos:line="15" pos:column="27">dconf<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">readtime<pos:position pos:line="15" pos:column="42"/></name></name></expr>)<pos:position pos:line="15" pos:column="43"/></condition><then pos:line="15" pos:column="43"> <block pos:line="15" pos:column="44">{
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">sobj<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">timeout<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <call><name pos:line="16" pos:column="25">apr_time_now<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">()<pos:position pos:line="16" pos:column="39"/></argument_list></call> <operator pos:line="16" pos:column="40">+<pos:position pos:line="16" pos:column="41"/></operator> <name><name pos:line="16" pos:column="42">dconf<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">-&gt;<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="49">readtime<pos:position pos:line="16" pos:column="57"/></name></name></expr>;<pos:position pos:line="16" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name><name pos:line="19" pos:column="10">sobj<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">newbody<pos:position pos:line="19" pos:column="23"/></name></name></expr>)<pos:position pos:line="19" pos:column="24"/></condition><then pos:line="19" pos:column="24"> <block pos:line="19" pos:column="25">{
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">sobj<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">body<pos:position pos:line="20" pos:column="23"/></name></name></expr>)<pos:position pos:line="20" pos:column="24"/></condition><then pos:line="20" pos:column="24"> <block pos:line="20" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">apr_brigade_cleanup<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name><name pos:line="21" pos:column="33">sobj<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">-&gt;<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="39">body<pos:position pos:line="21" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></then>
        <else pos:line="23" pos:column="9">else <block pos:line="23" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="24" pos:column="13">sobj<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">body<pos:position pos:line="24" pos:column="23"/></name></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <call><name pos:line="24" pos:column="26">apr_brigade_create<pos:position pos:line="24" pos:column="44"/></name><argument_list pos:line="24" pos:column="44">(<argument><expr><name><name pos:line="24" pos:column="45">r<pos:position pos:line="24" pos:column="46"/></name><operator pos:line="24" pos:column="46">-&gt;<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="48">pool<pos:position pos:line="24" pos:column="52"/></name></name></expr></argument>,
                    <argument><expr><name><name pos:line="25" pos:column="21">r<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">connection<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">-&gt;<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="36">bucket_alloc<pos:position pos:line="25" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">sobj<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">newbody<pos:position pos:line="27" pos:column="22"/></name></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <literal type="number" pos:line="27" pos:column="25">1<pos:position pos:line="27" pos:column="26"/></literal></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">sobj<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">-&gt;<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="15">offset<pos:position pos:line="29" pos:column="21"/></name></name></expr>)<pos:position pos:line="29" pos:column="22"/></condition><then pos:line="29" pos:column="22"> <block pos:line="29" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">apr_brigade_partition<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name pos:line="30" pos:column="31">in<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="35">sobj<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">-&gt;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="41">offset<pos:position pos:line="30" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="49">&amp;<pos:position pos:line="30" pos:column="54"/></operator><name pos:line="30" pos:column="50">e<pos:position pos:line="30" pos:column="51"/></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <while pos:line="33" pos:column="5">while <condition pos:line="33" pos:column="11">(<expr><name pos:line="33" pos:column="12">APR_SUCCESS<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">==<pos:position pos:line="33" pos:column="26"/></operator> <name pos:line="33" pos:column="27">rv<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">&amp;&amp;<pos:position pos:line="33" pos:column="40"/></operator> <operator pos:line="33" pos:column="33">!<pos:position pos:line="33" pos:column="34"/></operator><call><name pos:line="33" pos:column="34">APR_BRIGADE_EMPTY<pos:position pos:line="33" pos:column="51"/></name><argument_list pos:line="33" pos:column="51">(<argument><expr><name pos:line="33" pos:column="52">in<pos:position pos:line="33" pos:column="54"/></name></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="56"/></condition> <block pos:line="33" pos:column="57">{
        <decl_stmt><decl><type><specifier pos:line="34" pos:column="9">const<pos:position pos:line="34" pos:column="14"/></specifier> <name pos:line="34" pos:column="15">char<pos:position pos:line="34" pos:column="19"/></name> <modifier pos:line="34" pos:column="20">*<pos:position pos:line="34" pos:column="21"/></modifier></type><name pos:line="34" pos:column="21">str<pos:position pos:line="34" pos:column="24"/></name></decl>;<pos:position pos:line="34" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="35" pos:column="9">apr_size_t<pos:position pos:line="35" pos:column="19"/></name></type> <name pos:line="35" pos:column="20">length<pos:position pos:line="35" pos:column="26"/></name></decl>;<pos:position pos:line="35" pos:column="27"/></decl_stmt>

        <expr_stmt><expr><name pos:line="37" pos:column="9">e<pos:position pos:line="37" pos:column="10"/></name> <operator pos:line="37" pos:column="11">=<pos:position pos:line="37" pos:column="12"/></operator> <call><name pos:line="37" pos:column="13">APR_BRIGADE_FIRST<pos:position pos:line="37" pos:column="30"/></name><argument_list pos:line="37" pos:column="30">(<argument><expr><name pos:line="37" pos:column="31">in<pos:position pos:line="37" pos:column="33"/></name></expr></argument>)<pos:position pos:line="37" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>

        <comment type="block" pos:line="39" pos:column="9">/* are we done completely? if so, pass any trailing buckets right through */</comment>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name><name pos:line="40" pos:column="13">sobj<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">-&gt;<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="19">done<pos:position pos:line="40" pos:column="23"/></name></name> <operator pos:line="40" pos:column="24">||<pos:position pos:line="40" pos:column="26"/></operator> <operator pos:line="40" pos:column="27">!<pos:position pos:line="40" pos:column="28"/></operator><name><name pos:line="40" pos:column="28">sobj<pos:position pos:line="40" pos:column="32"/></name><operator pos:line="40" pos:column="32">-&gt;<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="34">pool<pos:position pos:line="40" pos:column="38"/></name></name></expr>)<pos:position pos:line="40" pos:column="39"/></condition><then pos:line="40" pos:column="39"> <block pos:line="40" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">APR_BUCKET_REMOVE<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><name pos:line="41" pos:column="31">e<pos:position pos:line="41" pos:column="32"/></name></expr></argument>)<pos:position pos:line="41" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="42" pos:column="36"/></name><argument_list pos:line="42" pos:column="36">(<argument><expr><name pos:line="42" pos:column="37">out<pos:position pos:line="42" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="42">e<pos:position pos:line="42" pos:column="43"/></name></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>
            <continue pos:line="43" pos:column="13">continue;<pos:position pos:line="43" pos:column="22"/></continue>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="46" pos:column="9">/* have we seen eos yet? */</comment>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><call><name pos:line="47" pos:column="13">APR_BUCKET_IS_EOS<pos:position pos:line="47" pos:column="30"/></name><argument_list pos:line="47" pos:column="30">(<argument><expr><name pos:line="47" pos:column="31">e<pos:position pos:line="47" pos:column="32"/></name></expr></argument>)<pos:position pos:line="47" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="34"/></condition><then pos:line="47" pos:column="34"> <block pos:line="47" pos:column="35">{
            <expr_stmt><expr><name pos:line="48" pos:column="13">seen_eos<pos:position pos:line="48" pos:column="21"/></name> <operator pos:line="48" pos:column="22">=<pos:position pos:line="48" pos:column="23"/></operator> <literal type="number" pos:line="48" pos:column="24">1<pos:position pos:line="48" pos:column="25"/></literal></expr>;<pos:position pos:line="48" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="49" pos:column="13">sobj<pos:position pos:line="49" pos:column="17"/></name><operator pos:line="49" pos:column="17">-&gt;<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="19">done<pos:position pos:line="49" pos:column="23"/></name></name> <operator pos:line="49" pos:column="24">=<pos:position pos:line="49" pos:column="25"/></operator> <literal type="number" pos:line="49" pos:column="26">1<pos:position pos:line="49" pos:column="27"/></literal></expr>;<pos:position pos:line="49" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">APR_BUCKET_REMOVE<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">e<pos:position pos:line="50" pos:column="32"/></name></expr></argument>)<pos:position pos:line="50" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="51" pos:column="36"/></name><argument_list pos:line="51" pos:column="36">(<argument><expr><name pos:line="51" pos:column="37">out<pos:position pos:line="51" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="42">e<pos:position pos:line="51" pos:column="43"/></name></expr></argument>)<pos:position pos:line="51" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="45"/></expr_stmt>
            <break pos:line="52" pos:column="13">break;<pos:position pos:line="52" pos:column="19"/></break>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="55" pos:column="9">/* honour flush buckets, we'll get called again */</comment>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><call><name pos:line="56" pos:column="13">APR_BUCKET_IS_FLUSH<pos:position pos:line="56" pos:column="32"/></name><argument_list pos:line="56" pos:column="32">(<argument><expr><name pos:line="56" pos:column="33">e<pos:position pos:line="56" pos:column="34"/></name></expr></argument>)<pos:position pos:line="56" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="36"/></condition><then pos:line="56" pos:column="36"> <block pos:line="56" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">APR_BUCKET_REMOVE<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><name pos:line="57" pos:column="31">e<pos:position pos:line="57" pos:column="32"/></name></expr></argument>)<pos:position pos:line="57" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="58" pos:column="36"/></name><argument_list pos:line="58" pos:column="36">(<argument><expr><name pos:line="58" pos:column="37">out<pos:position pos:line="58" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="42">e<pos:position pos:line="58" pos:column="43"/></name></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="45"/></expr_stmt>
            <break pos:line="59" pos:column="13">break;<pos:position pos:line="59" pos:column="19"/></break>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="62" pos:column="9">/* metadata buckets are preserved as is */</comment>
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><call><name pos:line="63" pos:column="13">APR_BUCKET_IS_METADATA<pos:position pos:line="63" pos:column="35"/></name><argument_list pos:line="63" pos:column="35">(<argument><expr><name pos:line="63" pos:column="36">e<pos:position pos:line="63" pos:column="37"/></name></expr></argument>)<pos:position pos:line="63" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="39"/></condition><then pos:line="63" pos:column="39"> <block pos:line="63" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="64" pos:column="13">APR_BUCKET_REMOVE<pos:position pos:line="64" pos:column="30"/></name><argument_list pos:line="64" pos:column="30">(<argument><expr><name pos:line="64" pos:column="31">e<pos:position pos:line="64" pos:column="32"/></name></expr></argument>)<pos:position pos:line="64" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="65" pos:column="36"/></name><argument_list pos:line="65" pos:column="36">(<argument><expr><name pos:line="65" pos:column="37">out<pos:position pos:line="65" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="42">e<pos:position pos:line="65" pos:column="43"/></name></expr></argument>)<pos:position pos:line="65" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="45"/></expr_stmt>
            <continue pos:line="66" pos:column="13">continue;<pos:position pos:line="66" pos:column="22"/></continue>
        }<pos:position pos:line="67" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="69" pos:column="9">/* read the bucket, write to the cache */</comment>
        <expr_stmt><expr><name pos:line="70" pos:column="9">rv<pos:position pos:line="70" pos:column="11"/></name> <operator pos:line="70" pos:column="12">=<pos:position pos:line="70" pos:column="13"/></operator> <call><name pos:line="70" pos:column="14">apr_bucket_read<pos:position pos:line="70" pos:column="29"/></name><argument_list pos:line="70" pos:column="29">(<argument><expr><name pos:line="70" pos:column="30">e<pos:position pos:line="70" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="33">&amp;<pos:position pos:line="70" pos:column="38"/></operator><name pos:line="70" pos:column="34">str<pos:position pos:line="70" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="39">&amp;<pos:position pos:line="70" pos:column="44"/></operator><name pos:line="70" pos:column="40">length<pos:position pos:line="70" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="48">APR_BLOCK_READ<pos:position pos:line="70" pos:column="62"/></name></expr></argument>)<pos:position pos:line="70" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">APR_BUCKET_REMOVE<pos:position pos:line="71" pos:column="26"/></name><argument_list pos:line="71" pos:column="26">(<argument><expr><name pos:line="71" pos:column="27">e<pos:position pos:line="71" pos:column="28"/></name></expr></argument>)<pos:position pos:line="71" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="72" pos:column="32"/></name><argument_list pos:line="72" pos:column="32">(<argument><expr><name pos:line="72" pos:column="33">out<pos:position pos:line="72" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="38">e<pos:position pos:line="72" pos:column="39"/></name></expr></argument>)<pos:position pos:line="72" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="41"/></expr_stmt>
        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">rv<pos:position pos:line="73" pos:column="15"/></name> <operator pos:line="73" pos:column="16">!=<pos:position pos:line="73" pos:column="18"/></operator> <name pos:line="73" pos:column="19">APR_SUCCESS<pos:position pos:line="73" pos:column="30"/></name></expr>)<pos:position pos:line="73" pos:column="31"/></condition><then pos:line="73" pos:column="31"> <block pos:line="73" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">ap_log_rerror<pos:position pos:line="74" pos:column="26"/></name><argument_list pos:line="74" pos:column="26">(<argument><expr><name pos:line="74" pos:column="27">APLOG_MARK<pos:position pos:line="74" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="39">APLOG_ERR<pos:position pos:line="74" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="50">0<pos:position pos:line="74" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="53">r<pos:position pos:line="74" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="74" pos:column="56">APLOGNO<pos:position pos:line="74" pos:column="63"/></name><argument_list pos:line="74" pos:column="63">(<argument><expr><literal type="number" pos:line="74" pos:column="64">02377<pos:position pos:line="74" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="70"/></argument_list></call>
                    <literal type="string" pos:line="75" pos:column="21">"Error when reading bucket for URL %s"<pos:position pos:line="75" pos:column="59"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="76" pos:column="21">h<pos:position pos:line="76" pos:column="22"/></name><operator pos:line="76" pos:column="22">-&gt;<pos:position pos:line="76" pos:column="27"/></operator><name pos:line="76" pos:column="24">cache_obj<pos:position pos:line="76" pos:column="33"/></name><operator pos:line="76" pos:column="33">-&gt;<pos:position pos:line="76" pos:column="38"/></operator><name pos:line="76" pos:column="35">key<pos:position pos:line="76" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="40"/></expr_stmt>
            <comment type="block" pos:line="77" pos:column="13">/* Remove the intermediate cache file and return non-APR_SUCCESS */</comment>
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">apr_pool_destroy<pos:position pos:line="78" pos:column="29"/></name><argument_list pos:line="78" pos:column="29">(<argument><expr><name><name pos:line="78" pos:column="30">sobj<pos:position pos:line="78" pos:column="34"/></name><operator pos:line="78" pos:column="34">-&gt;<pos:position pos:line="78" pos:column="39"/></operator><name pos:line="78" pos:column="36">pool<pos:position pos:line="78" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="79" pos:column="13">sobj<pos:position pos:line="79" pos:column="17"/></name><operator pos:line="79" pos:column="17">-&gt;<pos:position pos:line="79" pos:column="22"/></operator><name pos:line="79" pos:column="19">pool<pos:position pos:line="79" pos:column="23"/></name></name> <operator pos:line="79" pos:column="24">=<pos:position pos:line="79" pos:column="25"/></operator> <name pos:line="79" pos:column="26">NULL<pos:position pos:line="79" pos:column="30"/></name></expr>;<pos:position pos:line="79" pos:column="31"/></expr_stmt>
            <return pos:line="80" pos:column="13">return <expr><name pos:line="80" pos:column="20">rv<pos:position pos:line="80" pos:column="22"/></name></expr>;<pos:position pos:line="80" pos:column="23"/></return>
        }<pos:position pos:line="81" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="83" pos:column="9">/* don't write empty buckets to the cache */</comment>
        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><operator pos:line="84" pos:column="13">!<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="14">length<pos:position pos:line="84" pos:column="20"/></name></expr>)<pos:position pos:line="84" pos:column="21"/></condition><then pos:line="84" pos:column="21"> <block pos:line="84" pos:column="22">{
            <continue pos:line="85" pos:column="13">continue;<pos:position pos:line="85" pos:column="22"/></continue>
        }<pos:position pos:line="86" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="88" pos:column="9">sobj<pos:position pos:line="88" pos:column="13"/></name><operator pos:line="88" pos:column="13">-&gt;<pos:position pos:line="88" pos:column="18"/></operator><name pos:line="88" pos:column="15">file_size<pos:position pos:line="88" pos:column="24"/></name></name> <operator pos:line="88" pos:column="25">+=<pos:position pos:line="88" pos:column="27"/></operator> <name pos:line="88" pos:column="28">length<pos:position pos:line="88" pos:column="34"/></name></expr>;<pos:position pos:line="88" pos:column="35"/></expr_stmt>
        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name><name pos:line="89" pos:column="13">sobj<pos:position pos:line="89" pos:column="17"/></name><operator pos:line="89" pos:column="17">-&gt;<pos:position pos:line="89" pos:column="22"/></operator><name pos:line="89" pos:column="19">file_size<pos:position pos:line="89" pos:column="28"/></name></name> <operator pos:line="89" pos:column="29">&gt;=<pos:position pos:line="89" pos:column="34"/></operator> <name><name pos:line="89" pos:column="32">sobj<pos:position pos:line="89" pos:column="36"/></name><operator pos:line="89" pos:column="36">-&gt;<pos:position pos:line="89" pos:column="41"/></operator><name pos:line="89" pos:column="38">buffer_len<pos:position pos:line="89" pos:column="48"/></name></name> <operator pos:line="89" pos:column="49">-<pos:position pos:line="89" pos:column="50"/></operator> <name><name pos:line="89" pos:column="51">sobj<pos:position pos:line="89" pos:column="55"/></name><operator pos:line="89" pos:column="55">-&gt;<pos:position pos:line="89" pos:column="60"/></operator><name pos:line="89" pos:column="57">body_offset<pos:position pos:line="89" pos:column="68"/></name></name></expr>)<pos:position pos:line="89" pos:column="69"/></condition><then pos:line="89" pos:column="69"> <block pos:line="89" pos:column="70">{
            <expr_stmt><expr><call><name pos:line="90" pos:column="13">ap_log_rerror<pos:position pos:line="90" pos:column="26"/></name><argument_list pos:line="90" pos:column="26">(<argument><expr><name pos:line="90" pos:column="27">APLOG_MARK<pos:position pos:line="90" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="39">APLOG_DEBUG<pos:position pos:line="90" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="52">0<pos:position pos:line="90" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="55">r<pos:position pos:line="90" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="90" pos:column="58">APLOGNO<pos:position pos:line="90" pos:column="65"/></name><argument_list pos:line="90" pos:column="65">(<argument><expr><literal type="number" pos:line="90" pos:column="66">02378<pos:position pos:line="90" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="72"/></argument_list></call>
                    <literal type="string" pos:line="91" pos:column="21">"URL %s failed the buffer size check "<pos:position pos:line="91" pos:column="59"/></literal>
                    <literal type="string" pos:line="92" pos:column="21">"(%"<pos:position pos:line="92" pos:column="25"/></literal> <name pos:line="92" pos:column="26">APR_OFF_T_FMT<pos:position pos:line="92" pos:column="39"/></name> <literal type="string" pos:line="92" pos:column="40">"&gt;=%"<pos:position pos:line="92" pos:column="48"/></literal> <name pos:line="92" pos:column="46">APR_SIZE_T_FMT<pos:position pos:line="92" pos:column="60"/></name> <literal type="string" pos:line="92" pos:column="61">")"<pos:position pos:line="92" pos:column="64"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="93" pos:column="21">h<pos:position pos:line="93" pos:column="22"/></name><operator pos:line="93" pos:column="22">-&gt;<pos:position pos:line="93" pos:column="27"/></operator><name pos:line="93" pos:column="24">cache_obj<pos:position pos:line="93" pos:column="33"/></name><operator pos:line="93" pos:column="33">-&gt;<pos:position pos:line="93" pos:column="38"/></operator><name pos:line="93" pos:column="35">key<pos:position pos:line="93" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="40">sobj<pos:position pos:line="93" pos:column="44"/></name><operator pos:line="93" pos:column="44">-&gt;<pos:position pos:line="93" pos:column="49"/></operator><name pos:line="93" pos:column="46">file_size<pos:position pos:line="93" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="57">sobj<pos:position pos:line="93" pos:column="61"/></name><operator pos:line="93" pos:column="61">-&gt;<pos:position pos:line="93" pos:column="66"/></operator><name pos:line="93" pos:column="63">buffer_len<pos:position pos:line="93" pos:column="73"/></name></name> <operator pos:line="93" pos:column="74">-<pos:position pos:line="93" pos:column="75"/></operator> <name><name pos:line="93" pos:column="76">sobj<pos:position pos:line="93" pos:column="80"/></name><operator pos:line="93" pos:column="80">-&gt;<pos:position pos:line="93" pos:column="85"/></operator><name pos:line="93" pos:column="82">body_offset<pos:position pos:line="93" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="95"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">apr_pool_destroy<pos:position pos:line="94" pos:column="29"/></name><argument_list pos:line="94" pos:column="29">(<argument><expr><name><name pos:line="94" pos:column="30">sobj<pos:position pos:line="94" pos:column="34"/></name><operator pos:line="94" pos:column="34">-&gt;<pos:position pos:line="94" pos:column="39"/></operator><name pos:line="94" pos:column="36">pool<pos:position pos:line="94" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="95" pos:column="13">sobj<pos:position pos:line="95" pos:column="17"/></name><operator pos:line="95" pos:column="17">-&gt;<pos:position pos:line="95" pos:column="22"/></operator><name pos:line="95" pos:column="19">pool<pos:position pos:line="95" pos:column="23"/></name></name> <operator pos:line="95" pos:column="24">=<pos:position pos:line="95" pos:column="25"/></operator> <name pos:line="95" pos:column="26">NULL<pos:position pos:line="95" pos:column="30"/></name></expr>;<pos:position pos:line="95" pos:column="31"/></expr_stmt>
            <return pos:line="96" pos:column="13">return <expr><name pos:line="96" pos:column="20">APR_EGENERAL<pos:position pos:line="96" pos:column="32"/></name></expr>;<pos:position pos:line="96" pos:column="33"/></return>
        }<pos:position pos:line="97" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="99" pos:column="9">rv<pos:position pos:line="99" pos:column="11"/></name> <operator pos:line="99" pos:column="12">=<pos:position pos:line="99" pos:column="13"/></operator> <call><name pos:line="99" pos:column="14">apr_bucket_copy<pos:position pos:line="99" pos:column="29"/></name><argument_list pos:line="99" pos:column="29">(<argument><expr><name pos:line="99" pos:column="30">e<pos:position pos:line="99" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="33">&amp;<pos:position pos:line="99" pos:column="38"/></operator><name pos:line="99" pos:column="34">e<pos:position pos:line="99" pos:column="35"/></name></expr></argument>)<pos:position pos:line="99" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="37"/></expr_stmt>
        <if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">rv<pos:position pos:line="100" pos:column="15"/></name> <operator pos:line="100" pos:column="16">!=<pos:position pos:line="100" pos:column="18"/></operator> <name pos:line="100" pos:column="19">APR_SUCCESS<pos:position pos:line="100" pos:column="30"/></name></expr>)<pos:position pos:line="100" pos:column="31"/></condition><then pos:line="100" pos:column="31"> <block pos:line="100" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="101" pos:column="13">ap_log_rerror<pos:position pos:line="101" pos:column="26"/></name><argument_list pos:line="101" pos:column="26">(<argument><expr><name pos:line="101" pos:column="27">APLOG_MARK<pos:position pos:line="101" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="39">APLOG_ERR<pos:position pos:line="101" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="50">rv<pos:position pos:line="101" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="54">r<pos:position pos:line="101" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="101" pos:column="57">APLOGNO<pos:position pos:line="101" pos:column="64"/></name><argument_list pos:line="101" pos:column="64">(<argument><expr><literal type="number" pos:line="101" pos:column="65">02379<pos:position pos:line="101" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="71"/></argument_list></call>
                    <literal type="string" pos:line="102" pos:column="21">"Error when copying bucket for URL %s"<pos:position pos:line="102" pos:column="59"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="103" pos:column="21">h<pos:position pos:line="103" pos:column="22"/></name><operator pos:line="103" pos:column="22">-&gt;<pos:position pos:line="103" pos:column="27"/></operator><name pos:line="103" pos:column="24">cache_obj<pos:position pos:line="103" pos:column="33"/></name><operator pos:line="103" pos:column="33">-&gt;<pos:position pos:line="103" pos:column="38"/></operator><name pos:line="103" pos:column="35">key<pos:position pos:line="103" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="104" pos:column="13">apr_pool_destroy<pos:position pos:line="104" pos:column="29"/></name><argument_list pos:line="104" pos:column="29">(<argument><expr><name><name pos:line="104" pos:column="30">sobj<pos:position pos:line="104" pos:column="34"/></name><operator pos:line="104" pos:column="34">-&gt;<pos:position pos:line="104" pos:column="39"/></operator><name pos:line="104" pos:column="36">pool<pos:position pos:line="104" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="105" pos:column="13">sobj<pos:position pos:line="105" pos:column="17"/></name><operator pos:line="105" pos:column="17">-&gt;<pos:position pos:line="105" pos:column="22"/></operator><name pos:line="105" pos:column="19">pool<pos:position pos:line="105" pos:column="23"/></name></name> <operator pos:line="105" pos:column="24">=<pos:position pos:line="105" pos:column="25"/></operator> <name pos:line="105" pos:column="26">NULL<pos:position pos:line="105" pos:column="30"/></name></expr>;<pos:position pos:line="105" pos:column="31"/></expr_stmt>
            <return pos:line="106" pos:column="13">return <expr><name pos:line="106" pos:column="20">rv<pos:position pos:line="106" pos:column="22"/></name></expr>;<pos:position pos:line="106" pos:column="23"/></return>
        }<pos:position pos:line="107" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="108" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="108" pos:column="32"/></name><argument_list pos:line="108" pos:column="32">(<argument><expr><name><name pos:line="108" pos:column="33">sobj<pos:position pos:line="108" pos:column="37"/></name><operator pos:line="108" pos:column="37">-&gt;<pos:position pos:line="108" pos:column="42"/></operator><name pos:line="108" pos:column="39">body<pos:position pos:line="108" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="45">e<pos:position pos:line="108" pos:column="46"/></name></expr></argument>)<pos:position pos:line="108" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="48"/></expr_stmt>

        <comment type="block" pos:line="110" pos:column="9">/* have we reached the limit of how much we're prepared to write in one
         * go? If so, leave, we'll get called again. This prevents us from trying
         * to swallow too much data at once, or taking so long to write the data
         * the client times out.
         */</comment>
        <expr_stmt><expr><name><name pos:line="115" pos:column="9">sobj<pos:position pos:line="115" pos:column="13"/></name><operator pos:line="115" pos:column="13">-&gt;<pos:position pos:line="115" pos:column="18"/></operator><name pos:line="115" pos:column="15">offset<pos:position pos:line="115" pos:column="21"/></name></name> <operator pos:line="115" pos:column="22">-=<pos:position pos:line="115" pos:column="24"/></operator> <name pos:line="115" pos:column="25">length<pos:position pos:line="115" pos:column="31"/></name></expr>;<pos:position pos:line="115" pos:column="32"/></expr_stmt>
        <if pos:line="116" pos:column="9">if <condition pos:line="116" pos:column="12">(<expr><name><name pos:line="116" pos:column="13">sobj<pos:position pos:line="116" pos:column="17"/></name><operator pos:line="116" pos:column="17">-&gt;<pos:position pos:line="116" pos:column="22"/></operator><name pos:line="116" pos:column="19">offset<pos:position pos:line="116" pos:column="25"/></name></name> <operator pos:line="116" pos:column="26">&lt;=<pos:position pos:line="116" pos:column="31"/></operator> <literal type="number" pos:line="116" pos:column="29">0<pos:position pos:line="116" pos:column="30"/></literal></expr>)<pos:position pos:line="116" pos:column="31"/></condition><then pos:line="116" pos:column="31"> <block pos:line="116" pos:column="32">{
            <expr_stmt><expr><name><name pos:line="117" pos:column="13">sobj<pos:position pos:line="117" pos:column="17"/></name><operator pos:line="117" pos:column="17">-&gt;<pos:position pos:line="117" pos:column="22"/></operator><name pos:line="117" pos:column="19">offset<pos:position pos:line="117" pos:column="25"/></name></name> <operator pos:line="117" pos:column="26">=<pos:position pos:line="117" pos:column="27"/></operator> <literal type="number" pos:line="117" pos:column="28">0<pos:position pos:line="117" pos:column="29"/></literal></expr>;<pos:position pos:line="117" pos:column="30"/></expr_stmt>
            <break pos:line="118" pos:column="13">break;<pos:position pos:line="118" pos:column="19"/></break>
        }<pos:position pos:line="119" pos:column="10"/></block></then></if>
        <if pos:line="120" pos:column="9">if <condition pos:line="120" pos:column="12">(<expr><operator pos:line="120" pos:column="13">(<pos:position pos:line="120" pos:column="14"/></operator><name><name pos:line="120" pos:column="14">dconf<pos:position pos:line="120" pos:column="19"/></name><operator pos:line="120" pos:column="19">-&gt;<pos:position pos:line="120" pos:column="24"/></operator><name pos:line="120" pos:column="21">readtime<pos:position pos:line="120" pos:column="29"/></name></name> <operator pos:line="120" pos:column="30">&amp;&amp;<pos:position pos:line="120" pos:column="40"/></operator> <call><name pos:line="120" pos:column="33">apr_time_now<pos:position pos:line="120" pos:column="45"/></name><argument_list pos:line="120" pos:column="45">()<pos:position pos:line="120" pos:column="47"/></argument_list></call> <operator pos:line="120" pos:column="48">&gt;<pos:position pos:line="120" pos:column="52"/></operator> <name><name pos:line="120" pos:column="50">sobj<pos:position pos:line="120" pos:column="54"/></name><operator pos:line="120" pos:column="54">-&gt;<pos:position pos:line="120" pos:column="59"/></operator><name pos:line="120" pos:column="56">timeout<pos:position pos:line="120" pos:column="63"/></name></name><operator pos:line="120" pos:column="63">)<pos:position pos:line="120" pos:column="64"/></operator></expr>)<pos:position pos:line="120" pos:column="65"/></condition><then pos:line="120" pos:column="65"> <block pos:line="120" pos:column="66">{
            <expr_stmt><expr><name><name pos:line="121" pos:column="13">sobj<pos:position pos:line="121" pos:column="17"/></name><operator pos:line="121" pos:column="17">-&gt;<pos:position pos:line="121" pos:column="22"/></operator><name pos:line="121" pos:column="19">timeout<pos:position pos:line="121" pos:column="26"/></name></name> <operator pos:line="121" pos:column="27">=<pos:position pos:line="121" pos:column="28"/></operator> <literal type="number" pos:line="121" pos:column="29">0<pos:position pos:line="121" pos:column="30"/></literal></expr>;<pos:position pos:line="121" pos:column="31"/></expr_stmt>
            <break pos:line="122" pos:column="13">break;<pos:position pos:line="122" pos:column="19"/></break>
        }<pos:position pos:line="123" pos:column="10"/></block></then></if>

    }<pos:position pos:line="125" pos:column="6"/></block></while>

    <comment type="block" pos:line="127" pos:column="5">/* Was this the final bucket? If yes, perform sanity checks.
     */</comment>
    <if pos:line="129" pos:column="5">if <condition pos:line="129" pos:column="8">(<expr><name pos:line="129" pos:column="9">seen_eos<pos:position pos:line="129" pos:column="17"/></name></expr>)<pos:position pos:line="129" pos:column="18"/></condition><then pos:line="129" pos:column="18"> <block pos:line="129" pos:column="19">{
        <decl_stmt><decl><type><specifier pos:line="130" pos:column="9">const<pos:position pos:line="130" pos:column="14"/></specifier> <name pos:line="130" pos:column="15">char<pos:position pos:line="130" pos:column="19"/></name> <modifier pos:line="130" pos:column="20">*<pos:position pos:line="130" pos:column="21"/></modifier></type><name pos:line="130" pos:column="21">cl_header<pos:position pos:line="130" pos:column="30"/></name> <init pos:line="130" pos:column="31">= <expr><call><name pos:line="130" pos:column="33">apr_table_get<pos:position pos:line="130" pos:column="46"/></name><argument_list pos:line="130" pos:column="46">(<argument><expr><name><name pos:line="130" pos:column="47">r<pos:position pos:line="130" pos:column="48"/></name><operator pos:line="130" pos:column="48">-&gt;<pos:position pos:line="130" pos:column="53"/></operator><name pos:line="130" pos:column="50">headers_out<pos:position pos:line="130" pos:column="61"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="63">"Content-Length"<pos:position pos:line="130" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="130" pos:column="81"/></decl_stmt>

        <if pos:line="132" pos:column="9">if <condition pos:line="132" pos:column="12">(<expr><name><name pos:line="132" pos:column="13">r<pos:position pos:line="132" pos:column="14"/></name><operator pos:line="132" pos:column="14">-&gt;<pos:position pos:line="132" pos:column="19"/></operator><name pos:line="132" pos:column="16">connection<pos:position pos:line="132" pos:column="26"/></name><operator pos:line="132" pos:column="26">-&gt;<pos:position pos:line="132" pos:column="31"/></operator><name pos:line="132" pos:column="28">aborted<pos:position pos:line="132" pos:column="35"/></name></name> <operator pos:line="132" pos:column="36">||<pos:position pos:line="132" pos:column="38"/></operator> <name><name pos:line="132" pos:column="39">r<pos:position pos:line="132" pos:column="40"/></name><operator pos:line="132" pos:column="40">-&gt;<pos:position pos:line="132" pos:column="45"/></operator><name pos:line="132" pos:column="42">no_cache<pos:position pos:line="132" pos:column="50"/></name></name></expr>)<pos:position pos:line="132" pos:column="51"/></condition><then pos:line="132" pos:column="51"> <block pos:line="132" pos:column="52">{
            <expr_stmt><expr><call><name pos:line="133" pos:column="13">ap_log_rerror<pos:position pos:line="133" pos:column="26"/></name><argument_list pos:line="133" pos:column="26">(<argument><expr><name pos:line="133" pos:column="27">APLOG_MARK<pos:position pos:line="133" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="39">APLOG_INFO<pos:position pos:line="133" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="133" pos:column="51">0<pos:position pos:line="133" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="133" pos:column="54">r<pos:position pos:line="133" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="133" pos:column="57">APLOGNO<pos:position pos:line="133" pos:column="64"/></name><argument_list pos:line="133" pos:column="64">(<argument><expr><literal type="number" pos:line="133" pos:column="65">02380<pos:position pos:line="133" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="71"/></argument_list></call>
                    <literal type="string" pos:line="134" pos:column="21">"Discarding body for URL %s "<pos:position pos:line="134" pos:column="50"/></literal>
                    <literal type="string" pos:line="135" pos:column="21">"because connection has been aborted."<pos:position pos:line="135" pos:column="59"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="136" pos:column="21">h<pos:position pos:line="136" pos:column="22"/></name><operator pos:line="136" pos:column="22">-&gt;<pos:position pos:line="136" pos:column="27"/></operator><name pos:line="136" pos:column="24">cache_obj<pos:position pos:line="136" pos:column="33"/></name><operator pos:line="136" pos:column="33">-&gt;<pos:position pos:line="136" pos:column="38"/></operator><name pos:line="136" pos:column="35">key<pos:position pos:line="136" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="137" pos:column="13">apr_pool_destroy<pos:position pos:line="137" pos:column="29"/></name><argument_list pos:line="137" pos:column="29">(<argument><expr><name><name pos:line="137" pos:column="30">sobj<pos:position pos:line="137" pos:column="34"/></name><operator pos:line="137" pos:column="34">-&gt;<pos:position pos:line="137" pos:column="39"/></operator><name pos:line="137" pos:column="36">pool<pos:position pos:line="137" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="137" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="138" pos:column="13">sobj<pos:position pos:line="138" pos:column="17"/></name><operator pos:line="138" pos:column="17">-&gt;<pos:position pos:line="138" pos:column="22"/></operator><name pos:line="138" pos:column="19">pool<pos:position pos:line="138" pos:column="23"/></name></name> <operator pos:line="138" pos:column="24">=<pos:position pos:line="138" pos:column="25"/></operator> <name pos:line="138" pos:column="26">NULL<pos:position pos:line="138" pos:column="30"/></name></expr>;<pos:position pos:line="138" pos:column="31"/></expr_stmt>
            <return pos:line="139" pos:column="13">return <expr><name pos:line="139" pos:column="20">APR_EGENERAL<pos:position pos:line="139" pos:column="32"/></name></expr>;<pos:position pos:line="139" pos:column="33"/></return>
        }<pos:position pos:line="140" pos:column="10"/></block></then></if>
        <if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><name pos:line="141" pos:column="13">cl_header<pos:position pos:line="141" pos:column="22"/></name></expr>)<pos:position pos:line="141" pos:column="23"/></condition><then pos:line="141" pos:column="23"> <block pos:line="141" pos:column="24">{
            <decl_stmt><decl><type><name pos:line="142" pos:column="13">apr_int64_t<pos:position pos:line="142" pos:column="24"/></name></type> <name pos:line="142" pos:column="25">cl<pos:position pos:line="142" pos:column="27"/></name> <init pos:line="142" pos:column="28">= <expr><call><name pos:line="142" pos:column="30">apr_atoi64<pos:position pos:line="142" pos:column="40"/></name><argument_list pos:line="142" pos:column="40">(<argument><expr><name pos:line="142" pos:column="41">cl_header<pos:position pos:line="142" pos:column="50"/></name></expr></argument>)<pos:position pos:line="142" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="142" pos:column="52"/></decl_stmt>
            <if pos:line="143" pos:column="13">if <condition pos:line="143" pos:column="16">(<expr><operator pos:line="143" pos:column="17">(<pos:position pos:line="143" pos:column="18"/></operator><name pos:line="143" pos:column="18">errno<pos:position pos:line="143" pos:column="23"/></name> <operator pos:line="143" pos:column="24">==<pos:position pos:line="143" pos:column="26"/></operator> <literal type="number" pos:line="143" pos:column="27">0<pos:position pos:line="143" pos:column="28"/></literal><operator pos:line="143" pos:column="28">)<pos:position pos:line="143" pos:column="29"/></operator> <operator pos:line="143" pos:column="30">&amp;&amp;<pos:position pos:line="143" pos:column="40"/></operator> <operator pos:line="143" pos:column="33">(<pos:position pos:line="143" pos:column="34"/></operator><name><name pos:line="143" pos:column="34">sobj<pos:position pos:line="143" pos:column="38"/></name><operator pos:line="143" pos:column="38">-&gt;<pos:position pos:line="143" pos:column="43"/></operator><name pos:line="143" pos:column="40">file_size<pos:position pos:line="143" pos:column="49"/></name></name> <operator pos:line="143" pos:column="50">!=<pos:position pos:line="143" pos:column="52"/></operator> <name pos:line="143" pos:column="53">cl<pos:position pos:line="143" pos:column="55"/></name><operator pos:line="143" pos:column="55">)<pos:position pos:line="143" pos:column="56"/></operator></expr>)<pos:position pos:line="143" pos:column="57"/></condition><then pos:line="143" pos:column="57"> <block pos:line="143" pos:column="58">{
                <expr_stmt><expr><call><name pos:line="144" pos:column="17">ap_log_rerror<pos:position pos:line="144" pos:column="30"/></name><argument_list pos:line="144" pos:column="30">(<argument><expr><name pos:line="144" pos:column="31">APLOG_MARK<pos:position pos:line="144" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="43">APLOG_DEBUG<pos:position pos:line="144" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="144" pos:column="56">0<pos:position pos:line="144" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="144" pos:column="59">r<pos:position pos:line="144" pos:column="60"/></name></expr></argument>, <argument><expr><call><name pos:line="144" pos:column="62">APLOGNO<pos:position pos:line="144" pos:column="69"/></name><argument_list pos:line="144" pos:column="69">(<argument><expr><literal type="number" pos:line="144" pos:column="70">02381<pos:position pos:line="144" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="76"/></argument_list></call>
                        <literal type="string" pos:line="145" pos:column="25">"URL %s didn't receive complete response, not caching"<pos:position pos:line="145" pos:column="79"/></literal></expr></argument>,
                        <argument><expr><name><name pos:line="146" pos:column="25">h<pos:position pos:line="146" pos:column="26"/></name><operator pos:line="146" pos:column="26">-&gt;<pos:position pos:line="146" pos:column="31"/></operator><name pos:line="146" pos:column="28">cache_obj<pos:position pos:line="146" pos:column="37"/></name><operator pos:line="146" pos:column="37">-&gt;<pos:position pos:line="146" pos:column="42"/></operator><name pos:line="146" pos:column="39">key<pos:position pos:line="146" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="146" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="147" pos:column="17">apr_pool_destroy<pos:position pos:line="147" pos:column="33"/></name><argument_list pos:line="147" pos:column="33">(<argument><expr><name><name pos:line="147" pos:column="34">sobj<pos:position pos:line="147" pos:column="38"/></name><operator pos:line="147" pos:column="38">-&gt;<pos:position pos:line="147" pos:column="43"/></operator><name pos:line="147" pos:column="40">pool<pos:position pos:line="147" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="148" pos:column="17">sobj<pos:position pos:line="148" pos:column="21"/></name><operator pos:line="148" pos:column="21">-&gt;<pos:position pos:line="148" pos:column="26"/></operator><name pos:line="148" pos:column="23">pool<pos:position pos:line="148" pos:column="27"/></name></name> <operator pos:line="148" pos:column="28">=<pos:position pos:line="148" pos:column="29"/></operator> <name pos:line="148" pos:column="30">NULL<pos:position pos:line="148" pos:column="34"/></name></expr>;<pos:position pos:line="148" pos:column="35"/></expr_stmt>
                <return pos:line="149" pos:column="17">return <expr><name pos:line="149" pos:column="24">APR_EGENERAL<pos:position pos:line="149" pos:column="36"/></name></expr>;<pos:position pos:line="149" pos:column="37"/></return>
            }<pos:position pos:line="150" pos:column="14"/></block></then></if>
        }<pos:position pos:line="151" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="153" pos:column="9">/* All checks were fine, we're good to go when the commit comes */</comment>

    }<pos:position pos:line="155" pos:column="6"/></block></then></if>

    <return pos:line="157" pos:column="5">return <expr><name pos:line="157" pos:column="12">APR_SUCCESS<pos:position pos:line="157" pos:column="23"/></name></expr>;<pos:position pos:line="157" pos:column="24"/></return>
}<pos:position pos:line="158" pos:column="2"/></block></function></unit>

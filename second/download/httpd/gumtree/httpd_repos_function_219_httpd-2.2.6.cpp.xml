<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_219_httpd-2.2.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">dav_error<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">dav_fs_copymove_state<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(
    <parameter><decl><type><name pos:line="2" pos:column="5">int<pos:position pos:line="2" pos:column="8"/></name></type> <name pos:line="2" pos:column="9">is_move<pos:position pos:line="2" pos:column="16"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="3" pos:column="5">apr_pool_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type> <name pos:line="3" pos:column="18">p<pos:position pos:line="3" pos:column="19"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">src_dir<pos:position pos:line="4" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="26">const<pos:position pos:line="4" pos:column="31"/></specifier> <name pos:line="4" pos:column="32">char<pos:position pos:line="4" pos:column="36"/></name> <modifier pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></modifier></type><name pos:line="4" pos:column="38">src_file<pos:position pos:line="4" pos:column="46"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">dst_dir<pos:position pos:line="5" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="5" pos:column="26">const<pos:position pos:line="5" pos:column="31"/></specifier> <name pos:line="5" pos:column="32">char<pos:position pos:line="5" pos:column="36"/></name> <modifier pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></modifier></type><name pos:line="5" pos:column="38">dst_file<pos:position pos:line="5" pos:column="46"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="6" pos:column="5">dav_buffer<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">pbuf<pos:position pos:line="6" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="22"/></parameter_list>
<block pos:line="7" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_finfo_t<pos:position pos:line="8" pos:column="16"/></name></type> <name pos:line="8" pos:column="17">src_finfo<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>        <comment type="block" pos:line="8" pos:column="35">/* finfo for source file */</comment>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_finfo_t<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">dst_state_finfo<pos:position pos:line="9" pos:column="32"/></name></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>        <comment type="block" pos:line="9" pos:column="41">/* finfo for STATE directory */</comment>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_status_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">rv<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">src<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">char<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">dst<pos:position pos:line="12" pos:column="20"/></name></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* build the propset pathname for the source file */</comment>
    <expr_stmt><expr><name pos:line="15" pos:column="5">src<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <call><name pos:line="15" pos:column="11">apr_pstrcat<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">p<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="26">src_dir<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="35">"/"<pos:position pos:line="15" pos:column="38"/></literal> <name pos:line="15" pos:column="39">DAV_FS_STATE_DIR<pos:position pos:line="15" pos:column="55"/></name> <literal type="string" pos:line="15" pos:column="56">"/"<pos:position pos:line="15" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="61">src_file<pos:position pos:line="15" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="71">NULL<pos:position pos:line="15" pos:column="75"/></name></expr></argument>)<pos:position pos:line="15" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="77"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* the source file doesn't exist */</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">rv<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">apr_stat<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><operator pos:line="18" pos:column="19">&amp;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="20">src_finfo<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="31">src<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="36">APR_FINFO_NORM<pos:position pos:line="18" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="52">p<pos:position pos:line="18" pos:column="53"/></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">rv<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">!=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">APR_SUCCESS<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">&amp;&amp;<pos:position pos:line="19" pos:column="37"/></operator> <name pos:line="19" pos:column="30">rv<pos:position pos:line="19" pos:column="32"/></name> <operator pos:line="19" pos:column="33">!=<pos:position pos:line="19" pos:column="35"/></operator> <name pos:line="19" pos:column="36">APR_INCOMPLETE<pos:position pos:line="19" pos:column="50"/></name></expr>)<pos:position pos:line="19" pos:column="51"/></condition><then pos:line="19" pos:column="51"> <block pos:line="19" pos:column="52">{
        <return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">NULL<pos:position pos:line="20" pos:column="20"/></name></expr>;<pos:position pos:line="20" pos:column="21"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="23" pos:column="5">/* build the pathname for the destination state dir */</comment>
    <expr_stmt><expr><name pos:line="24" pos:column="5">dst<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">=<pos:position pos:line="24" pos:column="10"/></operator> <call><name pos:line="24" pos:column="11">apr_pstrcat<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">p<pos:position pos:line="24" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="26">dst_dir<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="35">"/"<pos:position pos:line="24" pos:column="38"/></literal> <name pos:line="24" pos:column="39">DAV_FS_STATE_DIR<pos:position pos:line="24" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="57">NULL<pos:position pos:line="24" pos:column="61"/></name></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt>

    <comment type="block" pos:line="26" pos:column="5">/* ### do we need to deal with the umask? */</comment>

    <comment type="block" pos:line="28" pos:column="5">/* ensure that it exists */</comment>
    <expr_stmt><expr><name pos:line="29" pos:column="5">rv<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">=<pos:position pos:line="29" pos:column="9"/></operator> <call><name pos:line="29" pos:column="10">apr_dir_make<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">dst<pos:position pos:line="29" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="28">APR_OS_DEFAULT<pos:position pos:line="29" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="44">p<pos:position pos:line="29" pos:column="45"/></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">rv<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">!=<pos:position pos:line="30" pos:column="14"/></operator> <name pos:line="30" pos:column="15">APR_SUCCESS<pos:position pos:line="30" pos:column="26"/></name></expr>)<pos:position pos:line="30" pos:column="27"/></condition><then pos:line="30" pos:column="27"> <block pos:line="30" pos:column="28">{
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><call><name pos:line="31" pos:column="14">APR_STATUS_IS_EEXIST<pos:position pos:line="31" pos:column="34"/></name><argument_list pos:line="31" pos:column="34">(<argument><expr><name pos:line="31" pos:column="35">rv<pos:position pos:line="31" pos:column="37"/></name></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="39"/></condition><then pos:line="31" pos:column="39"> <block pos:line="31" pos:column="40">{
            <comment type="block" pos:line="32" pos:column="13">/* ### use something besides 500? */</comment>
            <return pos:line="33" pos:column="13">return <expr><call><name pos:line="33" pos:column="20">dav_new_error<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><name pos:line="33" pos:column="34">p<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="37">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="33" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="65">0<pos:position pos:line="33" pos:column="66"/></literal></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="34" pos:column="34">"Could not create internal state directory"<pos:position pos:line="34" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="79"/></return>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="38" pos:column="5">/* get info about the state directory */</comment>
    <expr_stmt><expr><name pos:line="39" pos:column="5">rv<pos:position pos:line="39" pos:column="7"/></name> <operator pos:line="39" pos:column="8">=<pos:position pos:line="39" pos:column="9"/></operator> <call><name pos:line="39" pos:column="10">apr_stat<pos:position pos:line="39" pos:column="18"/></name><argument_list pos:line="39" pos:column="18">(<argument><expr><operator pos:line="39" pos:column="19">&amp;<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="20">dst_state_finfo<pos:position pos:line="39" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="37">dst<pos:position pos:line="39" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="42">APR_FINFO_NORM<pos:position pos:line="39" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="58">p<pos:position pos:line="39" pos:column="59"/></name></expr></argument>)<pos:position pos:line="39" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="61"/></expr_stmt>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">rv<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">!=<pos:position pos:line="40" pos:column="14"/></operator> <name pos:line="40" pos:column="15">APR_SUCCESS<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">&amp;&amp;<pos:position pos:line="40" pos:column="37"/></operator> <name pos:line="40" pos:column="30">rv<pos:position pos:line="40" pos:column="32"/></name> <operator pos:line="40" pos:column="33">!=<pos:position pos:line="40" pos:column="35"/></operator> <name pos:line="40" pos:column="36">APR_INCOMPLETE<pos:position pos:line="40" pos:column="50"/></name></expr>)<pos:position pos:line="40" pos:column="51"/></condition><then pos:line="40" pos:column="51"> <block pos:line="40" pos:column="52">{
        <comment type="block" pos:line="41" pos:column="9">/* Ack! Where'd it go? */</comment>
        <comment type="block" pos:line="42" pos:column="9">/* ### use something besides 500? */</comment>
        <return pos:line="43" pos:column="9">return <expr><call><name pos:line="43" pos:column="16">dav_new_error<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><name pos:line="43" pos:column="30">p<pos:position pos:line="43" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="33">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="43" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="61">0<pos:position pos:line="43" pos:column="62"/></literal></expr></argument>,
                             <argument><expr><literal type="string" pos:line="44" pos:column="30">"State directory disappeared"<pos:position pos:line="44" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="61"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="47" pos:column="5">/* The mkdir() may have failed because a *file* exists there already */</comment>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name><name pos:line="48" pos:column="9">dst_state_finfo<pos:position pos:line="48" pos:column="24"/></name><operator pos:line="48" pos:column="24">.<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="25">filetype<pos:position pos:line="48" pos:column="33"/></name></name> <operator pos:line="48" pos:column="34">!=<pos:position pos:line="48" pos:column="36"/></operator> <name pos:line="48" pos:column="37">APR_DIR<pos:position pos:line="48" pos:column="44"/></name></expr>)<pos:position pos:line="48" pos:column="45"/></condition><then pos:line="48" pos:column="45"> <block pos:line="48" pos:column="46">{
        <comment type="block" pos:line="49" pos:column="9">/* ### try to recover by deleting this file? (and mkdir again) */</comment>
        <comment type="block" pos:line="50" pos:column="9">/* ### use something besides 500? */</comment>
        <return pos:line="51" pos:column="9">return <expr><call><name pos:line="51" pos:column="16">dav_new_error<pos:position pos:line="51" pos:column="29"/></name><argument_list pos:line="51" pos:column="29">(<argument><expr><name pos:line="51" pos:column="30">p<pos:position pos:line="51" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="33">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="51" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="61">0<pos:position pos:line="51" pos:column="62"/></literal></expr></argument>,
                             <argument><expr><literal type="string" pos:line="52" pos:column="30">"State directory is actually a file"<pos:position pos:line="52" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="68"/></return>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="55" pos:column="5">/* append the target file to the state directory pathname */</comment>
    <expr_stmt><expr><name pos:line="56" pos:column="5">dst<pos:position pos:line="56" pos:column="8"/></name> <operator pos:line="56" pos:column="9">=<pos:position pos:line="56" pos:column="10"/></operator> <call><name pos:line="56" pos:column="11">apr_pstrcat<pos:position pos:line="56" pos:column="22"/></name><argument_list pos:line="56" pos:column="22">(<argument><expr><name pos:line="56" pos:column="23">p<pos:position pos:line="56" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="26">dst<pos:position pos:line="56" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="31">"/"<pos:position pos:line="56" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="36">dst_file<pos:position pos:line="56" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="46">NULL<pos:position pos:line="56" pos:column="50"/></name></expr></argument>)<pos:position pos:line="56" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="52"/></expr_stmt>

    <comment type="block" pos:line="58" pos:column="5">/* copy/move the file now */</comment>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name pos:line="59" pos:column="9">is_move<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">&amp;&amp;<pos:position pos:line="59" pos:column="27"/></operator> <name><name pos:line="59" pos:column="20">src_finfo<pos:position pos:line="59" pos:column="29"/></name><operator pos:line="59" pos:column="29">.<pos:position pos:line="59" pos:column="30"/></operator><name pos:line="59" pos:column="30">device<pos:position pos:line="59" pos:column="36"/></name></name> <operator pos:line="59" pos:column="37">==<pos:position pos:line="59" pos:column="39"/></operator> <name><name pos:line="59" pos:column="40">dst_state_finfo<pos:position pos:line="59" pos:column="55"/></name><operator pos:line="59" pos:column="55">.<pos:position pos:line="59" pos:column="56"/></operator><name pos:line="59" pos:column="56">device<pos:position pos:line="59" pos:column="62"/></name></name></expr>)<pos:position pos:line="59" pos:column="63"/></condition><then pos:line="59" pos:column="63"> <block pos:line="59" pos:column="64">{
        <comment type="block" pos:line="60" pos:column="9">/* simple rename is possible since it is on the same device */</comment>
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><call><name pos:line="61" pos:column="13">apr_file_rename<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><name pos:line="61" pos:column="29">src<pos:position pos:line="61" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="34">dst<pos:position pos:line="61" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="39">p<pos:position pos:line="61" pos:column="40"/></name></expr></argument>)<pos:position pos:line="61" pos:column="41"/></argument_list></call> <operator pos:line="61" pos:column="42">!=<pos:position pos:line="61" pos:column="44"/></operator> <name pos:line="61" pos:column="45">APR_SUCCESS<pos:position pos:line="61" pos:column="56"/></name></expr>)<pos:position pos:line="61" pos:column="57"/></condition><then pos:line="61" pos:column="57"> <block pos:line="61" pos:column="58">{
            <comment type="block" pos:line="62" pos:column="13">/* ### use something besides 500? */</comment>
            <return pos:line="63" pos:column="13">return <expr><call><name pos:line="63" pos:column="20">dav_new_error<pos:position pos:line="63" pos:column="33"/></name><argument_list pos:line="63" pos:column="33">(<argument><expr><name pos:line="63" pos:column="34">p<pos:position pos:line="63" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="37">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="63" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="65">0<pos:position pos:line="63" pos:column="66"/></literal></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="64" pos:column="34">"Could not move state file."<pos:position pos:line="64" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="64"/></return>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>
    }<pos:position pos:line="66" pos:column="6"/></block></then>
    <else pos:line="67" pos:column="5">else
    <block pos:line="68" pos:column="5">{
        <comment type="block" pos:line="69" pos:column="9">/* gotta copy (and delete) */</comment>
        <return pos:line="70" pos:column="9">return <expr><call><name pos:line="70" pos:column="16">dav_fs_copymove_file<pos:position pos:line="70" pos:column="36"/></name><argument_list pos:line="70" pos:column="36">(<argument><expr><name pos:line="70" pos:column="37">is_move<pos:position pos:line="70" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="46">p<pos:position pos:line="70" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="49">src<pos:position pos:line="70" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="54">dst<pos:position pos:line="70" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="59">NULL<pos:position pos:line="70" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="65">NULL<pos:position pos:line="70" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="71">pbuf<pos:position pos:line="70" pos:column="75"/></name></expr></argument>)<pos:position pos:line="70" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="77"/></return>
    }<pos:position pos:line="71" pos:column="6"/></block></else></if>

    <return pos:line="73" pos:column="5">return <expr><name pos:line="73" pos:column="12">NULL<pos:position pos:line="73" pos:column="16"/></name></expr>;<pos:position pos:line="73" pos:column="17"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2190_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">proxy_html_hooks<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">apr_pool_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">p<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="3" pos:column="5">static<pos:position pos:line="3" pos:column="11"/></specifier> <type><specifier pos:line="3" pos:column="12">const<pos:position pos:line="3" pos:column="17"/></specifier> <name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name><name pos:line="3" pos:column="24">aszSucc<pos:position pos:line="3" pos:column="31"/></name><index pos:line="3" pos:column="31">[]<pos:position pos:line="3" pos:column="33"/></index></name> <init pos:line="3" pos:column="34">= <expr><block pos:line="3" pos:column="36">{ <expr><literal type="string" pos:line="3" pos:column="38">"mod_filter.c"<pos:position pos:line="3" pos:column="52"/></literal></expr>, <expr><name pos:line="3" pos:column="54">NULL<pos:position pos:line="3" pos:column="58"/></name></expr> }<pos:position pos:line="3" pos:column="60"/></block></expr></init></decl>;<pos:position pos:line="3" pos:column="61"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">ap_register_output_filter_protocol<pos:position pos:line="4" pos:column="39"/></name><argument_list pos:line="4" pos:column="39">(<argument><expr><literal type="string" pos:line="4" pos:column="40">"proxy-html"<pos:position pos:line="4" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="54">proxy_html_filter<pos:position pos:line="4" pos:column="71"/></name></expr></argument>,
                                       <argument><expr><name pos:line="5" pos:column="40">NULL<pos:position pos:line="5" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="46">AP_FTYPE_RESOURCE<pos:position pos:line="5" pos:column="63"/></name></expr></argument>,
                          <argument><expr><name pos:line="6" pos:column="27">AP_FILTER_PROTO_CHANGE<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">|<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="50">AP_FILTER_PROTO_CHANGE_LENGTH<pos:position pos:line="6" pos:column="79"/></name></expr></argument>)<pos:position pos:line="6" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="81"/></expr_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* move this to pre_config so old_expr is available to interpret
     * old-style conditions on URL maps.
     */</comment>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ap_hook_pre_config<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">mod_proxy_html<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="40">NULL<pos:position pos:line="10" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="46">NULL<pos:position pos:line="10" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="52">APR_HOOK_MIDDLE<pos:position pos:line="10" pos:column="67"/></name></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ap_hook_insert_filter<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">proxy_html_insert<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">NULL<pos:position pos:line="11" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="52">aszSucc<pos:position pos:line="11" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="61">APR_HOOK_MIDDLE<pos:position pos:line="11" pos:column="76"/></name></expr></argument>)<pos:position pos:line="11" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="78"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_338_httpd-2.2.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dav_method_get<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">request_rec<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">r<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dav_resource<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">resource<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">dav_error<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">err<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">status<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* This method should only be called when the resource is not
     * visible to Apache. We will fetch the resource from the repository,
     * then create a subrequest for Apache to handle.
     */</comment>
    <expr_stmt><expr><name pos:line="11" pos:column="5">err<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <call><name pos:line="11" pos:column="11">dav_get_resource<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">r<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="31">1<pos:position pos:line="11" pos:column="32"/></literal></expr></argument> <comment type="block" pos:line="11" pos:column="33">/* label_allowed */</comment>, <argument><expr><literal type="number" pos:line="11" pos:column="54">0<pos:position pos:line="11" pos:column="55"/></literal></expr></argument> <comment type="block" pos:line="11" pos:column="56">/* use_checked_in */</comment>,
                           <argument><expr><operator pos:line="12" pos:column="28">&amp;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="29">resource<pos:position pos:line="12" pos:column="37"/></name></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">err<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">!=<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><call><name pos:line="14" pos:column="16">dav_handle_err<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">r<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">err<pos:position pos:line="14" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="39">NULL<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></return></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><name><name pos:line="16" pos:column="10">resource<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">exists<pos:position pos:line="16" pos:column="26"/></name></name></expr>)<pos:position pos:line="16" pos:column="27"/></condition><then pos:line="16" pos:column="27"> <block pos:line="16" pos:column="28">{
        <comment type="block" pos:line="17" pos:column="9">/* Apache will supply a default error for this. */</comment>
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">HTTP_NOT_FOUND<pos:position pos:line="18" pos:column="30"/></name></expr>;<pos:position pos:line="18" pos:column="31"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="21" pos:column="5">/* set up the HTTP headers for the response */</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">err<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <call pos:line="22" pos:column="16">(<modifier pos:line="22" pos:column="17">*<pos:position pos:line="22" pos:column="18"/></modifier><name><name pos:line="22" pos:column="18">resource<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">-&gt;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="28">hooks<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">set_headers<pos:position pos:line="22" pos:column="46"/></name></name>)<argument_list pos:line="22" pos:column="47">(<argument><expr><name pos:line="22" pos:column="48">r<pos:position pos:line="22" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="51">resource<pos:position pos:line="22" pos:column="59"/></name></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call><operator pos:line="22" pos:column="60">)<pos:position pos:line="22" pos:column="61"/></operator> <operator pos:line="22" pos:column="62">!=<pos:position pos:line="22" pos:column="64"/></operator> <name pos:line="22" pos:column="65">NULL<pos:position pos:line="22" pos:column="69"/></name></expr>)<pos:position pos:line="22" pos:column="70"/></condition><then pos:line="22" pos:column="70"> <block pos:line="22" pos:column="71">{
        <expr_stmt><expr><name pos:line="23" pos:column="9">err<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">dav_push_error<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name><name pos:line="23" pos:column="30">r<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">-&gt;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="33">pool<pos:position pos:line="23" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="39">err<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">-&gt;<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="44">status<pos:position pos:line="23" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="52">0<pos:position pos:line="23" pos:column="53"/></literal></expr></argument>,
                             <argument><expr><literal type="string" pos:line="24" pos:column="30">"Unable to set up HTTP headers."<pos:position pos:line="24" pos:column="62"/></literal></expr></argument>,
                             <argument><expr><name pos:line="25" pos:column="30">err<pos:position pos:line="25" pos:column="33"/></name></expr></argument>)<pos:position pos:line="25" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
        <return pos:line="26" pos:column="9">return <expr><call><name pos:line="26" pos:column="16">dav_handle_err<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">r<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">err<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="39">NULL<pos:position pos:line="26" pos:column="43"/></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* Handle conditional requests */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">status<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <call><name pos:line="30" pos:column="14">ap_meets_conditions<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">r<pos:position pos:line="30" pos:column="35"/></name></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">status<pos:position pos:line="31" pos:column="15"/></name></expr>)<pos:position pos:line="31" pos:column="16"/></condition><then pos:line="31" pos:column="16"> <block pos:line="31" pos:column="17">{
      <return pos:line="32" pos:column="7">return <expr><name pos:line="32" pos:column="14">status<pos:position pos:line="32" pos:column="20"/></name></expr>;<pos:position pos:line="32" pos:column="21"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name><name pos:line="35" pos:column="9">r<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">header_only<pos:position pos:line="35" pos:column="23"/></name></name></expr>)<pos:position pos:line="35" pos:column="24"/></condition><then pos:line="35" pos:column="24"> <block pos:line="35" pos:column="25">{
        <return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">DONE<pos:position pos:line="36" pos:column="20"/></name></expr>;<pos:position pos:line="36" pos:column="21"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="39" pos:column="5">/* okay... time to deliver the content */</comment>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">(<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">err<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <call pos:line="40" pos:column="16">(<modifier pos:line="40" pos:column="17">*<pos:position pos:line="40" pos:column="18"/></modifier><name><name pos:line="40" pos:column="18">resource<pos:position pos:line="40" pos:column="26"/></name><operator pos:line="40" pos:column="26">-&gt;<pos:position pos:line="40" pos:column="31"/></operator><name pos:line="40" pos:column="28">hooks<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">deliver<pos:position pos:line="40" pos:column="42"/></name></name>)<argument_list pos:line="40" pos:column="43">(<argument><expr><name pos:line="40" pos:column="44">resource<pos:position pos:line="40" pos:column="52"/></name></expr></argument>,
                                           <argument><expr><name><name pos:line="41" pos:column="44">r<pos:position pos:line="41" pos:column="45"/></name><operator pos:line="41" pos:column="45">-&gt;<pos:position pos:line="41" pos:column="50"/></operator><name pos:line="41" pos:column="47">output_filters<pos:position pos:line="41" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="62"/></argument_list></call><operator pos:line="41" pos:column="62">)<pos:position pos:line="41" pos:column="63"/></operator> <operator pos:line="41" pos:column="64">!=<pos:position pos:line="41" pos:column="66"/></operator> <name pos:line="41" pos:column="67">NULL<pos:position pos:line="41" pos:column="71"/></name></expr>)<pos:position pos:line="41" pos:column="72"/></condition><then pos:line="41" pos:column="72"> <block pos:line="41" pos:column="73">{
        <expr_stmt><expr><name pos:line="42" pos:column="9">err<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <call><name pos:line="42" pos:column="15">dav_push_error<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><name><name pos:line="42" pos:column="30">r<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">-&gt;<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="33">pool<pos:position pos:line="42" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="39">err<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">-&gt;<pos:position pos:line="42" pos:column="47"/></operator><name pos:line="42" pos:column="44">status<pos:position pos:line="42" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="52">0<pos:position pos:line="42" pos:column="53"/></literal></expr></argument>,
                             <argument><expr><literal type="string" pos:line="43" pos:column="30">"Unable to deliver content."<pos:position pos:line="43" pos:column="58"/></literal></expr></argument>,
                             <argument><expr><name pos:line="44" pos:column="30">err<pos:position pos:line="44" pos:column="33"/></name></expr></argument>)<pos:position pos:line="44" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="35"/></expr_stmt>
        <return pos:line="45" pos:column="9">return <expr><call><name pos:line="45" pos:column="16">dav_handle_err<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">r<pos:position pos:line="45" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="34">err<pos:position pos:line="45" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="39">NULL<pos:position pos:line="45" pos:column="43"/></name></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="45"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <return pos:line="48" pos:column="5">return <expr><name pos:line="48" pos:column="12">DONE<pos:position pos:line="48" pos:column="16"/></name></expr>;<pos:position pos:line="48" pos:column="17"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

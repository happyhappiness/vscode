<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3620_httpd-2.4.7.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">ap_queue_info_term<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">fd_queue_info_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">queue_info<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <expr_stmt><expr><name pos:line="4" pos:column="5">rv<pos:position pos:line="4" pos:column="7"/></name> <operator pos:line="4" pos:column="8">=<pos:position pos:line="4" pos:column="9"/></operator> <call><name pos:line="4" pos:column="10">apr_thread_mutex_lock<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">(<argument><expr><name><name pos:line="4" pos:column="32">queue_info<pos:position pos:line="4" pos:column="42"/></name><operator pos:line="4" pos:column="42">-&gt;<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="44">idlers_mutex<pos:position pos:line="4" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="58"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">rv<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">!=<pos:position pos:line="5" pos:column="14"/></operator> <name pos:line="5" pos:column="15">APR_SUCCESS<pos:position pos:line="5" pos:column="26"/></name></expr>)<pos:position pos:line="5" pos:column="27"/></condition><then pos:line="5" pos:column="27"> <block pos:line="5" pos:column="28">{
        <return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">rv<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">queue_info<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">terminated<pos:position pos:line="8" pos:column="27"/></name></name> <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <literal type="number" pos:line="8" pos:column="30">1<pos:position pos:line="8" pos:column="31"/></literal></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">apr_thread_cond_broadcast<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name><name pos:line="9" pos:column="31">queue_info<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">wait_for_idler<pos:position pos:line="9" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><call><name pos:line="10" pos:column="12">apr_thread_mutex_unlock<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name><name pos:line="10" pos:column="36">queue_info<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">-&gt;<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="48">idlers_mutex<pos:position pos:line="10" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

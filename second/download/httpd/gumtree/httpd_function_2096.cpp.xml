<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_2096.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ssl_log_cxerror<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">file<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">line<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">level<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, 
                     <parameter><decl><type><name pos:line="2" pos:column="22">apr_status_t<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">rv<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">conn_rec<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">c<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">X509<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">cert<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
                     <parameter><decl><type><specifier pos:line="3" pos:column="22">const<pos:position pos:line="3" pos:column="27"/></specifier> <name pos:line="3" pos:column="28">char<pos:position pos:line="3" pos:column="32"/></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier></type><name pos:line="3" pos:column="34">format<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="3" pos:column="42">...<pos:position pos:line="3" pos:column="45"/></modifier></type></decl></parameter>)<pos:position pos:line="3" pos:column="46"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">va_list<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">ap<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">buf<pos:position pos:line="6" pos:column="13"/></name><index pos:line="6" pos:column="13">[<expr><name pos:line="6" pos:column="14">HUGE_STRING_LEN<pos:position pos:line="6" pos:column="29"/></name></expr>]<pos:position pos:line="6" pos:column="30"/></index></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">sname<pos:position pos:line="7" pos:column="16"/></name></decl>, <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="19">iname<pos:position pos:line="7" pos:column="24"/></name></decl>, <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="27">serial<pos:position pos:line="7" pos:column="33"/></name></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">BIGNUM<pos:position pos:line="8" pos:column="11"/></name> <modifier pos:line="8" pos:column="12">*<pos:position pos:line="8" pos:column="13"/></modifier></type><name pos:line="8" pos:column="13">bn<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
    
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">APLOG_IS_LEVEL<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><call><name pos:line="10" pos:column="24">mySrvFromConn<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">c<pos:position pos:line="10" pos:column="39"/></name></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="10" pos:column="41">level<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="48"/></condition><then pos:line="10" pos:column="48"> <block pos:line="10" pos:column="49">{
        <comment type="block" pos:line="11" pos:column="9">/* Bail early since the rest of this function is expensive. */</comment>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="15" pos:column="5">sname<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <call><name pos:line="15" pos:column="13">X509_NAME_oneline<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><call><name pos:line="15" pos:column="31">X509_get_subject_name<pos:position pos:line="15" pos:column="52"/></name><argument_list pos:line="15" pos:column="52">(<argument><expr><name pos:line="15" pos:column="53">cert<pos:position pos:line="15" pos:column="57"/></name></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="60">NULL<pos:position pos:line="15" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="66">0<pos:position pos:line="15" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">iname<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <call><name pos:line="16" pos:column="13">X509_NAME_oneline<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><call><name pos:line="16" pos:column="31">X509_get_issuer_name<pos:position pos:line="16" pos:column="51"/></name><argument_list pos:line="16" pos:column="51">(<argument><expr><name pos:line="16" pos:column="52">cert<pos:position pos:line="16" pos:column="56"/></name></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr></argument>,  <argument><expr><name pos:line="16" pos:column="60">NULL<pos:position pos:line="16" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="66">0<pos:position pos:line="16" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">bn<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">ASN1_INTEGER_to_BN<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><call><name pos:line="17" pos:column="29">X509_get_serialNumber<pos:position pos:line="17" pos:column="50"/></name><argument_list pos:line="17" pos:column="50">(<argument><expr><name pos:line="17" pos:column="51">cert<pos:position pos:line="17" pos:column="55"/></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="58">NULL<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">serial<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <ternary><condition><expr><name pos:line="18" pos:column="14">bn<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">&amp;&amp;<pos:position pos:line="18" pos:column="27"/></operator> <operator pos:line="18" pos:column="20">!<pos:position pos:line="18" pos:column="21"/></operator><call><name pos:line="18" pos:column="21">BN_is_zero<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><name pos:line="18" pos:column="32">bn<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr> ?<pos:position pos:line="18" pos:column="37"/></condition><then pos:line="18" pos:column="37"> <expr><call><name pos:line="18" pos:column="38">BN_bn2hex<pos:position pos:line="18" pos:column="47"/></name><argument_list pos:line="18" pos:column="47">(<argument><expr><name pos:line="18" pos:column="48">bn<pos:position pos:line="18" pos:column="50"/></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr> <pos:position pos:line="18" pos:column="52"/></then><else pos:line="18" pos:column="52">: <expr><name pos:line="18" pos:column="54">NULL<pos:position pos:line="18" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">va_start<pos:position pos:line="20" pos:column="13"/></name><argument_list pos:line="20" pos:column="13">(<argument><expr><name pos:line="20" pos:column="14">ap<pos:position pos:line="20" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="18">format<pos:position pos:line="20" pos:column="24"/></name></expr></argument>)<pos:position pos:line="20" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">apr_vsnprintf<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name pos:line="21" pos:column="19">buf<pos:position pos:line="21" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="24">sizeof <name pos:line="21" pos:column="31">buf<pos:position pos:line="21" pos:column="34"/></name></sizeof></expr></argument>, <argument><expr><name pos:line="21" pos:column="36">format<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">ap<pos:position pos:line="21" pos:column="46"/></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">va_end<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><name pos:line="22" pos:column="12">ap<pos:position pos:line="22" pos:column="14"/></name></expr></argument>)<pos:position pos:line="22" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="16"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">ap_log_cerror<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><name pos:line="24" pos:column="19">file<pos:position pos:line="24" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="25">line<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="31">APLOG_MODULE_INDEX<pos:position pos:line="24" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="51">level<pos:position pos:line="24" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="58">rv<pos:position pos:line="24" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="62">c<pos:position pos:line="24" pos:column="63"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="25" pos:column="19">"%s [subject: %s, issuer: %s, serial: %s]"<pos:position pos:line="25" pos:column="61"/></literal></expr></argument>,
                  <argument><expr><name pos:line="26" pos:column="19">buf<pos:position pos:line="26" pos:column="22"/></name></expr></argument>,
                  <argument><expr><ternary><condition><expr><name pos:line="27" pos:column="19">sname<pos:position pos:line="27" pos:column="24"/></name></expr> ?<pos:position pos:line="27" pos:column="26"/></condition><then pos:line="27" pos:column="26"> <expr><name pos:line="27" pos:column="27">sname<pos:position pos:line="27" pos:column="32"/></name></expr> <pos:position pos:line="27" pos:column="33"/></then><else pos:line="27" pos:column="33">: <expr><literal type="string" pos:line="27" pos:column="35">"-unknown-"<pos:position pos:line="27" pos:column="46"/></literal></expr></else></ternary></expr></argument>,
                  <argument><expr><ternary><condition><expr><name pos:line="28" pos:column="19">iname<pos:position pos:line="28" pos:column="24"/></name></expr> ?<pos:position pos:line="28" pos:column="26"/></condition><then pos:line="28" pos:column="26"> <expr><name pos:line="28" pos:column="27">iname<pos:position pos:line="28" pos:column="32"/></name></expr> <pos:position pos:line="28" pos:column="33"/></then><else pos:line="28" pos:column="33">: <expr><literal type="string" pos:line="28" pos:column="35">"-unknown-"<pos:position pos:line="28" pos:column="46"/></literal></expr></else></ternary></expr></argument>,
                  <argument><expr><ternary><condition><expr><name pos:line="29" pos:column="19">serial<pos:position pos:line="29" pos:column="25"/></name></expr> ?<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27"> <expr><name pos:line="29" pos:column="28">serial<pos:position pos:line="29" pos:column="34"/></name></expr> <pos:position pos:line="29" pos:column="35"/></then><else pos:line="29" pos:column="35">: <expr><literal type="string" pos:line="29" pos:column="37">"-unknown-"<pos:position pos:line="29" pos:column="48"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="50"/></expr_stmt>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">sname<pos:position pos:line="31" pos:column="14"/></name></expr>)<pos:position pos:line="31" pos:column="15"/></condition><then pos:line="31" pos:column="15"> <block pos:line="31" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">modssl_free<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><name pos:line="32" pos:column="21">sname<pos:position pos:line="32" pos:column="26"/></name></expr></argument>)<pos:position pos:line="32" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">iname<pos:position pos:line="35" pos:column="14"/></name></expr>)<pos:position pos:line="35" pos:column="15"/></condition><then pos:line="35" pos:column="15"> <block pos:line="35" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">modssl_free<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><name pos:line="36" pos:column="21">iname<pos:position pos:line="36" pos:column="26"/></name></expr></argument>)<pos:position pos:line="36" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
    
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">serial<pos:position pos:line="39" pos:column="15"/></name></expr>)<pos:position pos:line="39" pos:column="16"/></condition><then pos:line="39" pos:column="16"> <block pos:line="39" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">modssl_free<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">serial<pos:position pos:line="40" pos:column="27"/></name></expr></argument>)<pos:position pos:line="40" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">bn<pos:position pos:line="43" pos:column="11"/></name></expr>)<pos:position pos:line="43" pos:column="12"/></condition><then pos:line="43" pos:column="12"> <block pos:line="43" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">BN_free<pos:position pos:line="44" pos:column="16"/></name><argument_list pos:line="44" pos:column="16">(<argument><expr><name pos:line="44" pos:column="17">bn<pos:position pos:line="44" pos:column="19"/></name></expr></argument>)<pos:position pos:line="44" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

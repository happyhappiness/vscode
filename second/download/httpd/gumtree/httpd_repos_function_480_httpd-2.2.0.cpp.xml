<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_480_httpd-2.2.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">getstr<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">server_rec<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">serv<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="39">register<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">s<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="57">register<pos:position pos:line="1" pos:column="65"/></specifier> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">p<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="2" pos:column="21">int<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">plen<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">slen<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">origs<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name pos:line="4" pos:column="19">s<pos:position pos:line="4" pos:column="20"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="23">origp<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name pos:line="4" pos:column="31">p<pos:position pos:line="4" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">pmax<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name pos:line="5" pos:column="18">p<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">+<pos:position pos:line="5" pos:column="21"/></operator> <name pos:line="5" pos:column="22">plen<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">-<pos:position pos:line="5" pos:column="28"/></operator> <literal type="number" pos:line="5" pos:column="29">1<pos:position pos:line="5" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">register<pos:position pos:line="6" pos:column="13"/></specifier> <name pos:line="6" pos:column="14">int<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">c<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">register<pos:position pos:line="7" pos:column="13"/></specifier> <name pos:line="7" pos:column="14">int<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">val<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>

    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">c<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <operator pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">s<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">++<pos:position pos:line="9" pos:column="21"/></operator><operator pos:line="9" pos:column="21">)<pos:position pos:line="9" pos:column="22"/></operator> <operator pos:line="9" pos:column="23">!=<pos:position pos:line="9" pos:column="25"/></operator> <literal type="char" pos:line="9" pos:column="26">'\0'<pos:position pos:line="9" pos:column="30"/></literal></expr>)<pos:position pos:line="9" pos:column="31"/></condition> <block pos:line="9" pos:column="32">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">apr_isspace<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">c<pos:position pos:line="10" pos:column="26"/></name></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28">
            <block type="pseudo"><break pos:line="11" pos:column="13">break;<pos:position pos:line="11" pos:column="19"/></break></block></then></if>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">p<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">&gt;=<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="18">pmax<pos:position pos:line="12" pos:column="22"/></name></expr>)<pos:position pos:line="12" pos:column="23"/></condition><then pos:line="12" pos:column="23"> <block pos:line="12" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">ap_log_error<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">APLOG_MARK<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="38">APLOG_ERR<pos:position pos:line="13" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="49">0<pos:position pos:line="13" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="52">serv<pos:position pos:line="13" pos:column="56"/></name></expr></argument>,
                        <argument><expr><name pos:line="14" pos:column="25">MODNAME<pos:position pos:line="14" pos:column="32"/></name> <literal type="string" pos:line="14" pos:column="33">": string too long: %s"<pos:position pos:line="14" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="58">origs<pos:position pos:line="14" pos:column="63"/></name></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="65"/></expr_stmt>
            <break pos:line="15" pos:column="13">break;<pos:position pos:line="15" pos:column="19"/></break>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">c<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">==<pos:position pos:line="17" pos:column="17"/></operator> <literal type="char" pos:line="17" pos:column="18">'\\'<pos:position pos:line="17" pos:column="22"/></literal></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23"> <block pos:line="17" pos:column="24">{
            <switch pos:line="18" pos:column="13">switch <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">c<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <operator pos:line="18" pos:column="25">*<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">s<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">++<pos:position pos:line="18" pos:column="29"/></operator></expr>)<pos:position pos:line="18" pos:column="30"/></condition> <block pos:line="18" pos:column="31">{

            <case pos:line="20" pos:column="13">case <expr><literal type="char" pos:line="20" pos:column="18">'\0'<pos:position pos:line="20" pos:column="22"/></literal></expr>:<pos:position pos:line="20" pos:column="23"/></case>
                <goto pos:line="21" pos:column="17">goto <name pos:line="21" pos:column="22">out<pos:position pos:line="21" pos:column="25"/></name>;<pos:position pos:line="21" pos:column="26"/></goto>

            <default pos:line="23" pos:column="13">default:<pos:position pos:line="23" pos:column="21"/></default>
                <expr_stmt><expr><operator pos:line="24" pos:column="17">*<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">p<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">++<pos:position pos:line="24" pos:column="21"/></operator> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <operator pos:line="24" pos:column="24">(<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">char<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">)<pos:position pos:line="24" pos:column="30"/></operator> <name pos:line="24" pos:column="31">c<pos:position pos:line="24" pos:column="32"/></name></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
                <break pos:line="25" pos:column="17">break;<pos:position pos:line="25" pos:column="23"/></break>

            <case pos:line="27" pos:column="13">case <expr><literal type="char" pos:line="27" pos:column="18">'n'<pos:position pos:line="27" pos:column="21"/></literal></expr>:<pos:position pos:line="27" pos:column="22"/></case>
                <expr_stmt><expr><operator pos:line="28" pos:column="17">*<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">p<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">++<pos:position pos:line="28" pos:column="21"/></operator> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <literal type="char" pos:line="28" pos:column="24">'\n'<pos:position pos:line="28" pos:column="28"/></literal></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
                <break pos:line="29" pos:column="17">break;<pos:position pos:line="29" pos:column="23"/></break>

            <case pos:line="31" pos:column="13">case <expr><literal type="char" pos:line="31" pos:column="18">'r'<pos:position pos:line="31" pos:column="21"/></literal></expr>:<pos:position pos:line="31" pos:column="22"/></case>
                <expr_stmt><expr><operator pos:line="32" pos:column="17">*<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">p<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">++<pos:position pos:line="32" pos:column="21"/></operator> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <literal type="char" pos:line="32" pos:column="24">'\r'<pos:position pos:line="32" pos:column="28"/></literal></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>
                <break pos:line="33" pos:column="17">break;<pos:position pos:line="33" pos:column="23"/></break>

            <case pos:line="35" pos:column="13">case <expr><literal type="char" pos:line="35" pos:column="18">'b'<pos:position pos:line="35" pos:column="21"/></literal></expr>:<pos:position pos:line="35" pos:column="22"/></case>
                <expr_stmt><expr><operator pos:line="36" pos:column="17">*<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">p<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">++<pos:position pos:line="36" pos:column="21"/></operator> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <literal type="char" pos:line="36" pos:column="24">'\b'<pos:position pos:line="36" pos:column="28"/></literal></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
                <break pos:line="37" pos:column="17">break;<pos:position pos:line="37" pos:column="23"/></break>

            <case pos:line="39" pos:column="13">case <expr><literal type="char" pos:line="39" pos:column="18">'t'<pos:position pos:line="39" pos:column="21"/></literal></expr>:<pos:position pos:line="39" pos:column="22"/></case>
                <expr_stmt><expr><operator pos:line="40" pos:column="17">*<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="18">p<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">++<pos:position pos:line="40" pos:column="21"/></operator> <operator pos:line="40" pos:column="22">=<pos:position pos:line="40" pos:column="23"/></operator> <literal type="char" pos:line="40" pos:column="24">'\t'<pos:position pos:line="40" pos:column="28"/></literal></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
                <break pos:line="41" pos:column="17">break;<pos:position pos:line="41" pos:column="23"/></break>

            <case pos:line="43" pos:column="13">case <expr><literal type="char" pos:line="43" pos:column="18">'f'<pos:position pos:line="43" pos:column="21"/></literal></expr>:<pos:position pos:line="43" pos:column="22"/></case>
                <expr_stmt><expr><operator pos:line="44" pos:column="17">*<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="18">p<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">++<pos:position pos:line="44" pos:column="21"/></operator> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <literal type="char" pos:line="44" pos:column="24">'\f'<pos:position pos:line="44" pos:column="28"/></literal></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>
                <break pos:line="45" pos:column="17">break;<pos:position pos:line="45" pos:column="23"/></break>

            <case pos:line="47" pos:column="13">case <expr><literal type="char" pos:line="47" pos:column="18">'v'<pos:position pos:line="47" pos:column="21"/></literal></expr>:<pos:position pos:line="47" pos:column="22"/></case>
                <expr_stmt><expr><operator pos:line="48" pos:column="17">*<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="18">p<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">++<pos:position pos:line="48" pos:column="21"/></operator> <operator pos:line="48" pos:column="22">=<pos:position pos:line="48" pos:column="23"/></operator> <literal type="char" pos:line="48" pos:column="24">'\v'<pos:position pos:line="48" pos:column="28"/></literal></expr>;<pos:position pos:line="48" pos:column="29"/></expr_stmt>
                <break pos:line="49" pos:column="17">break;<pos:position pos:line="49" pos:column="23"/></break>

                <comment type="block" pos:line="51" pos:column="17">/* \ and up to 3 octal digits */</comment>
            <case pos:line="52" pos:column="13">case <expr><literal type="char" pos:line="52" pos:column="18">'0'<pos:position pos:line="52" pos:column="21"/></literal></expr>:<pos:position pos:line="52" pos:column="22"/></case>
            <case pos:line="53" pos:column="13">case <expr><literal type="char" pos:line="53" pos:column="18">'1'<pos:position pos:line="53" pos:column="21"/></literal></expr>:<pos:position pos:line="53" pos:column="22"/></case>
            <case pos:line="54" pos:column="13">case <expr><literal type="char" pos:line="54" pos:column="18">'2'<pos:position pos:line="54" pos:column="21"/></literal></expr>:<pos:position pos:line="54" pos:column="22"/></case>
            <case pos:line="55" pos:column="13">case <expr><literal type="char" pos:line="55" pos:column="18">'3'<pos:position pos:line="55" pos:column="21"/></literal></expr>:<pos:position pos:line="55" pos:column="22"/></case>
            <case pos:line="56" pos:column="13">case <expr><literal type="char" pos:line="56" pos:column="18">'4'<pos:position pos:line="56" pos:column="21"/></literal></expr>:<pos:position pos:line="56" pos:column="22"/></case>
            <case pos:line="57" pos:column="13">case <expr><literal type="char" pos:line="57" pos:column="18">'5'<pos:position pos:line="57" pos:column="21"/></literal></expr>:<pos:position pos:line="57" pos:column="22"/></case>
            <case pos:line="58" pos:column="13">case <expr><literal type="char" pos:line="58" pos:column="18">'6'<pos:position pos:line="58" pos:column="21"/></literal></expr>:<pos:position pos:line="58" pos:column="22"/></case>
            <case pos:line="59" pos:column="13">case <expr><literal type="char" pos:line="59" pos:column="18">'7'<pos:position pos:line="59" pos:column="21"/></literal></expr>:<pos:position pos:line="59" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="60" pos:column="17">val<pos:position pos:line="60" pos:column="20"/></name> <operator pos:line="60" pos:column="21">=<pos:position pos:line="60" pos:column="22"/></operator> <name pos:line="60" pos:column="23">c<pos:position pos:line="60" pos:column="24"/></name> <operator pos:line="60" pos:column="25">-<pos:position pos:line="60" pos:column="26"/></operator> <literal type="char" pos:line="60" pos:column="27">'0'<pos:position pos:line="60" pos:column="30"/></literal></expr>;<pos:position pos:line="60" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><name pos:line="61" pos:column="17">c<pos:position pos:line="61" pos:column="18"/></name> <operator pos:line="61" pos:column="19">=<pos:position pos:line="61" pos:column="20"/></operator> <operator pos:line="61" pos:column="21">*<pos:position pos:line="61" pos:column="22"/></operator><name pos:line="61" pos:column="22">s<pos:position pos:line="61" pos:column="23"/></name><operator pos:line="61" pos:column="23">++<pos:position pos:line="61" pos:column="25"/></operator></expr>;<pos:position pos:line="61" pos:column="26"/></expr_stmt>  <comment type="block" pos:line="61" pos:column="28">/* try for 2 */</comment>
                <if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name pos:line="62" pos:column="21">c<pos:position pos:line="62" pos:column="22"/></name> <operator pos:line="62" pos:column="23">&gt;=<pos:position pos:line="62" pos:column="28"/></operator> <literal type="char" pos:line="62" pos:column="26">'0'<pos:position pos:line="62" pos:column="29"/></literal> <operator pos:line="62" pos:column="30">&amp;&amp;<pos:position pos:line="62" pos:column="40"/></operator> <name pos:line="62" pos:column="33">c<pos:position pos:line="62" pos:column="34"/></name> <operator pos:line="62" pos:column="35">&lt;=<pos:position pos:line="62" pos:column="40"/></operator> <literal type="char" pos:line="62" pos:column="38">'7'<pos:position pos:line="62" pos:column="41"/></literal></expr>)<pos:position pos:line="62" pos:column="42"/></condition><then pos:line="62" pos:column="42"> <block pos:line="62" pos:column="43">{
                    <expr_stmt><expr><name pos:line="63" pos:column="21">val<pos:position pos:line="63" pos:column="24"/></name> <operator pos:line="63" pos:column="25">=<pos:position pos:line="63" pos:column="26"/></operator> <operator pos:line="63" pos:column="27">(<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="28">val<pos:position pos:line="63" pos:column="31"/></name> <operator pos:line="63" pos:column="32">&lt;&lt;<pos:position pos:line="63" pos:column="40"/></operator> <literal type="number" pos:line="63" pos:column="35">3<pos:position pos:line="63" pos:column="36"/></literal><operator pos:line="63" pos:column="36">)<pos:position pos:line="63" pos:column="37"/></operator> <operator pos:line="63" pos:column="38">|<pos:position pos:line="63" pos:column="39"/></operator> <operator pos:line="63" pos:column="40">(<pos:position pos:line="63" pos:column="41"/></operator><name pos:line="63" pos:column="41">c<pos:position pos:line="63" pos:column="42"/></name> <operator pos:line="63" pos:column="43">-<pos:position pos:line="63" pos:column="44"/></operator> <literal type="char" pos:line="63" pos:column="45">'0'<pos:position pos:line="63" pos:column="48"/></literal><operator pos:line="63" pos:column="48">)<pos:position pos:line="63" pos:column="49"/></operator></expr>;<pos:position pos:line="63" pos:column="50"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="64" pos:column="21">c<pos:position pos:line="64" pos:column="22"/></name> <operator pos:line="64" pos:column="23">=<pos:position pos:line="64" pos:column="24"/></operator> <operator pos:line="64" pos:column="25">*<pos:position pos:line="64" pos:column="26"/></operator><name pos:line="64" pos:column="26">s<pos:position pos:line="64" pos:column="27"/></name><operator pos:line="64" pos:column="27">++<pos:position pos:line="64" pos:column="29"/></operator></expr>;<pos:position pos:line="64" pos:column="30"/></expr_stmt>  <comment type="block" pos:line="64" pos:column="32">/* try for 3 */</comment>
                    <if pos:line="65" pos:column="21">if <condition pos:line="65" pos:column="24">(<expr><name pos:line="65" pos:column="25">c<pos:position pos:line="65" pos:column="26"/></name> <operator pos:line="65" pos:column="27">&gt;=<pos:position pos:line="65" pos:column="32"/></operator> <literal type="char" pos:line="65" pos:column="30">'0'<pos:position pos:line="65" pos:column="33"/></literal> <operator pos:line="65" pos:column="34">&amp;&amp;<pos:position pos:line="65" pos:column="44"/></operator> <name pos:line="65" pos:column="37">c<pos:position pos:line="65" pos:column="38"/></name> <operator pos:line="65" pos:column="39">&lt;=<pos:position pos:line="65" pos:column="44"/></operator> <literal type="char" pos:line="65" pos:column="42">'7'<pos:position pos:line="65" pos:column="45"/></literal></expr>)<pos:position pos:line="65" pos:column="46"/></condition><then pos:line="65" pos:column="46">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="25">val<pos:position pos:line="66" pos:column="28"/></name> <operator pos:line="66" pos:column="29">=<pos:position pos:line="66" pos:column="30"/></operator> <operator pos:line="66" pos:column="31">(<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="32">val<pos:position pos:line="66" pos:column="35"/></name> <operator pos:line="66" pos:column="36">&lt;&lt;<pos:position pos:line="66" pos:column="44"/></operator> <literal type="number" pos:line="66" pos:column="39">3<pos:position pos:line="66" pos:column="40"/></literal><operator pos:line="66" pos:column="40">)<pos:position pos:line="66" pos:column="41"/></operator> <operator pos:line="66" pos:column="42">|<pos:position pos:line="66" pos:column="43"/></operator> <operator pos:line="66" pos:column="44">(<pos:position pos:line="66" pos:column="45"/></operator><name pos:line="66" pos:column="45">c<pos:position pos:line="66" pos:column="46"/></name> <operator pos:line="66" pos:column="47">-<pos:position pos:line="66" pos:column="48"/></operator> <literal type="char" pos:line="66" pos:column="49">'0'<pos:position pos:line="66" pos:column="52"/></literal><operator pos:line="66" pos:column="52">)<pos:position pos:line="66" pos:column="53"/></operator></expr>;<pos:position pos:line="66" pos:column="54"/></expr_stmt></block></then>
                    <else pos:line="67" pos:column="21">else
                        <block type="pseudo"><expr_stmt><expr><operator pos:line="68" pos:column="25">--<pos:position pos:line="68" pos:column="27"/></operator><name pos:line="68" pos:column="27">s<pos:position pos:line="68" pos:column="28"/></name></expr>;<pos:position pos:line="68" pos:column="29"/></expr_stmt></block></else></if>
                }<pos:position pos:line="69" pos:column="18"/></block></then>
                <else pos:line="70" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="71" pos:column="21">--<pos:position pos:line="71" pos:column="23"/></operator><name pos:line="71" pos:column="23">s<pos:position pos:line="71" pos:column="24"/></name></expr>;<pos:position pos:line="71" pos:column="25"/></expr_stmt></block></else></if>
                <expr_stmt><expr><operator pos:line="72" pos:column="17">*<pos:position pos:line="72" pos:column="18"/></operator><name pos:line="72" pos:column="18">p<pos:position pos:line="72" pos:column="19"/></name><operator pos:line="72" pos:column="19">++<pos:position pos:line="72" pos:column="21"/></operator> <operator pos:line="72" pos:column="22">=<pos:position pos:line="72" pos:column="23"/></operator> <operator pos:line="72" pos:column="24">(<pos:position pos:line="72" pos:column="25"/></operator><name pos:line="72" pos:column="25">char<pos:position pos:line="72" pos:column="29"/></name><operator pos:line="72" pos:column="29">)<pos:position pos:line="72" pos:column="30"/></operator> <name pos:line="72" pos:column="31">val<pos:position pos:line="72" pos:column="34"/></name></expr>;<pos:position pos:line="72" pos:column="35"/></expr_stmt>
                <break pos:line="73" pos:column="17">break;<pos:position pos:line="73" pos:column="23"/></break>

                <comment type="block" pos:line="75" pos:column="17">/* \x and up to 3 hex digits */</comment>
            <case pos:line="76" pos:column="13">case <expr><literal type="char" pos:line="76" pos:column="18">'x'<pos:position pos:line="76" pos:column="21"/></literal></expr>:<pos:position pos:line="76" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="77" pos:column="17">val<pos:position pos:line="77" pos:column="20"/></name> <operator pos:line="77" pos:column="21">=<pos:position pos:line="77" pos:column="22"/></operator> <literal type="char" pos:line="77" pos:column="23">'x'<pos:position pos:line="77" pos:column="26"/></literal></expr>;<pos:position pos:line="77" pos:column="27"/></expr_stmt>            <comment type="block" pos:line="77" pos:column="39">/* Default if no digits */</comment>
                <expr_stmt><expr><name pos:line="78" pos:column="17">c<pos:position pos:line="78" pos:column="18"/></name> <operator pos:line="78" pos:column="19">=<pos:position pos:line="78" pos:column="20"/></operator> <call><name pos:line="78" pos:column="21">hextoint<pos:position pos:line="78" pos:column="29"/></name><argument_list pos:line="78" pos:column="29">(<argument><expr><operator pos:line="78" pos:column="30">*<pos:position pos:line="78" pos:column="31"/></operator><name pos:line="78" pos:column="31">s<pos:position pos:line="78" pos:column="32"/></name><operator pos:line="78" pos:column="32">++<pos:position pos:line="78" pos:column="34"/></operator></expr></argument>)<pos:position pos:line="78" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="36"/></expr_stmt>   <comment type="block" pos:line="78" pos:column="39">/* Get next char */</comment>
                <if pos:line="79" pos:column="17">if <condition pos:line="79" pos:column="20">(<expr><name pos:line="79" pos:column="21">c<pos:position pos:line="79" pos:column="22"/></name> <operator pos:line="79" pos:column="23">&gt;=<pos:position pos:line="79" pos:column="28"/></operator> <literal type="number" pos:line="79" pos:column="26">0<pos:position pos:line="79" pos:column="27"/></literal></expr>)<pos:position pos:line="79" pos:column="28"/></condition><then pos:line="79" pos:column="28"> <block pos:line="79" pos:column="29">{
                    <expr_stmt><expr><name pos:line="80" pos:column="21">val<pos:position pos:line="80" pos:column="24"/></name> <operator pos:line="80" pos:column="25">=<pos:position pos:line="80" pos:column="26"/></operator> <name pos:line="80" pos:column="27">c<pos:position pos:line="80" pos:column="28"/></name></expr>;<pos:position pos:line="80" pos:column="29"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="81" pos:column="21">c<pos:position pos:line="81" pos:column="22"/></name> <operator pos:line="81" pos:column="23">=<pos:position pos:line="81" pos:column="24"/></operator> <call><name pos:line="81" pos:column="25">hextoint<pos:position pos:line="81" pos:column="33"/></name><argument_list pos:line="81" pos:column="33">(<argument><expr><operator pos:line="81" pos:column="34">*<pos:position pos:line="81" pos:column="35"/></operator><name pos:line="81" pos:column="35">s<pos:position pos:line="81" pos:column="36"/></name><operator pos:line="81" pos:column="36">++<pos:position pos:line="81" pos:column="38"/></operator></expr></argument>)<pos:position pos:line="81" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="40"/></expr_stmt>
                    <if pos:line="82" pos:column="21">if <condition pos:line="82" pos:column="24">(<expr><name pos:line="82" pos:column="25">c<pos:position pos:line="82" pos:column="26"/></name> <operator pos:line="82" pos:column="27">&gt;=<pos:position pos:line="82" pos:column="32"/></operator> <literal type="number" pos:line="82" pos:column="30">0<pos:position pos:line="82" pos:column="31"/></literal></expr>)<pos:position pos:line="82" pos:column="32"/></condition><then pos:line="82" pos:column="32"> <block pos:line="82" pos:column="33">{
                        <expr_stmt><expr><name pos:line="83" pos:column="25">val<pos:position pos:line="83" pos:column="28"/></name> <operator pos:line="83" pos:column="29">=<pos:position pos:line="83" pos:column="30"/></operator> <operator pos:line="83" pos:column="31">(<pos:position pos:line="83" pos:column="32"/></operator><name pos:line="83" pos:column="32">val<pos:position pos:line="83" pos:column="35"/></name> <operator pos:line="83" pos:column="36">&lt;&lt;<pos:position pos:line="83" pos:column="44"/></operator> <literal type="number" pos:line="83" pos:column="39">4<pos:position pos:line="83" pos:column="40"/></literal><operator pos:line="83" pos:column="40">)<pos:position pos:line="83" pos:column="41"/></operator> <operator pos:line="83" pos:column="42">+<pos:position pos:line="83" pos:column="43"/></operator> <name pos:line="83" pos:column="44">c<pos:position pos:line="83" pos:column="45"/></name></expr>;<pos:position pos:line="83" pos:column="46"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="84" pos:column="25">c<pos:position pos:line="84" pos:column="26"/></name> <operator pos:line="84" pos:column="27">=<pos:position pos:line="84" pos:column="28"/></operator> <call><name pos:line="84" pos:column="29">hextoint<pos:position pos:line="84" pos:column="37"/></name><argument_list pos:line="84" pos:column="37">(<argument><expr><operator pos:line="84" pos:column="38">*<pos:position pos:line="84" pos:column="39"/></operator><name pos:line="84" pos:column="39">s<pos:position pos:line="84" pos:column="40"/></name><operator pos:line="84" pos:column="40">++<pos:position pos:line="84" pos:column="42"/></operator></expr></argument>)<pos:position pos:line="84" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="44"/></expr_stmt>
                        <if pos:line="85" pos:column="25">if <condition pos:line="85" pos:column="28">(<expr><name pos:line="85" pos:column="29">c<pos:position pos:line="85" pos:column="30"/></name> <operator pos:line="85" pos:column="31">&gt;=<pos:position pos:line="85" pos:column="36"/></operator> <literal type="number" pos:line="85" pos:column="34">0<pos:position pos:line="85" pos:column="35"/></literal></expr>)<pos:position pos:line="85" pos:column="36"/></condition><then pos:line="85" pos:column="36"> <block pos:line="85" pos:column="37">{
                            <expr_stmt><expr><name pos:line="86" pos:column="29">val<pos:position pos:line="86" pos:column="32"/></name> <operator pos:line="86" pos:column="33">=<pos:position pos:line="86" pos:column="34"/></operator> <operator pos:line="86" pos:column="35">(<pos:position pos:line="86" pos:column="36"/></operator><name pos:line="86" pos:column="36">val<pos:position pos:line="86" pos:column="39"/></name> <operator pos:line="86" pos:column="40">&lt;&lt;<pos:position pos:line="86" pos:column="48"/></operator> <literal type="number" pos:line="86" pos:column="43">4<pos:position pos:line="86" pos:column="44"/></literal><operator pos:line="86" pos:column="44">)<pos:position pos:line="86" pos:column="45"/></operator> <operator pos:line="86" pos:column="46">+<pos:position pos:line="86" pos:column="47"/></operator> <name pos:line="86" pos:column="48">c<pos:position pos:line="86" pos:column="49"/></name></expr>;<pos:position pos:line="86" pos:column="50"/></expr_stmt>
                        }<pos:position pos:line="87" pos:column="26"/></block></then>
                        <else pos:line="88" pos:column="25">else
                            <block type="pseudo"><expr_stmt><expr><operator pos:line="89" pos:column="29">--<pos:position pos:line="89" pos:column="31"/></operator><name pos:line="89" pos:column="31">s<pos:position pos:line="89" pos:column="32"/></name></expr>;<pos:position pos:line="89" pos:column="33"/></expr_stmt></block></else></if>
                    }<pos:position pos:line="90" pos:column="22"/></block></then>
                    <else pos:line="91" pos:column="21">else
                        <block type="pseudo"><expr_stmt><expr><operator pos:line="92" pos:column="25">--<pos:position pos:line="92" pos:column="27"/></operator><name pos:line="92" pos:column="27">s<pos:position pos:line="92" pos:column="28"/></name></expr>;<pos:position pos:line="92" pos:column="29"/></expr_stmt></block></else></if>
                }<pos:position pos:line="93" pos:column="18"/></block></then>
                <else pos:line="94" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="95" pos:column="21">--<pos:position pos:line="95" pos:column="23"/></operator><name pos:line="95" pos:column="23">s<pos:position pos:line="95" pos:column="24"/></name></expr>;<pos:position pos:line="95" pos:column="25"/></expr_stmt></block></else></if>
                <expr_stmt><expr><operator pos:line="96" pos:column="17">*<pos:position pos:line="96" pos:column="18"/></operator><name pos:line="96" pos:column="18">p<pos:position pos:line="96" pos:column="19"/></name><operator pos:line="96" pos:column="19">++<pos:position pos:line="96" pos:column="21"/></operator> <operator pos:line="96" pos:column="22">=<pos:position pos:line="96" pos:column="23"/></operator> <operator pos:line="96" pos:column="24">(<pos:position pos:line="96" pos:column="25"/></operator><name pos:line="96" pos:column="25">char<pos:position pos:line="96" pos:column="29"/></name><operator pos:line="96" pos:column="29">)<pos:position pos:line="96" pos:column="30"/></operator> <name pos:line="96" pos:column="31">val<pos:position pos:line="96" pos:column="34"/></name></expr>;<pos:position pos:line="96" pos:column="35"/></expr_stmt>
                <break pos:line="97" pos:column="17">break;<pos:position pos:line="97" pos:column="23"/></break>
            }<pos:position pos:line="98" pos:column="14"/></block></switch>
        }<pos:position pos:line="99" pos:column="10"/></block></then>
        <else pos:line="100" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><operator pos:line="101" pos:column="13">*<pos:position pos:line="101" pos:column="14"/></operator><name pos:line="101" pos:column="14">p<pos:position pos:line="101" pos:column="15"/></name><operator pos:line="101" pos:column="15">++<pos:position pos:line="101" pos:column="17"/></operator> <operator pos:line="101" pos:column="18">=<pos:position pos:line="101" pos:column="19"/></operator> <operator pos:line="101" pos:column="20">(<pos:position pos:line="101" pos:column="21"/></operator><name pos:line="101" pos:column="21">char<pos:position pos:line="101" pos:column="25"/></name><operator pos:line="101" pos:column="25">)<pos:position pos:line="101" pos:column="26"/></operator> <name pos:line="101" pos:column="27">c<pos:position pos:line="101" pos:column="28"/></name></expr>;<pos:position pos:line="101" pos:column="29"/></expr_stmt></block></else></if>
    }<pos:position pos:line="102" pos:column="6"/></block></while>
  <label><name pos:line="103" pos:column="3">out<pos:position pos:line="103" pos:column="6"/></name>:<pos:position pos:line="103" pos:column="7"/></label>
    <expr_stmt><expr><operator pos:line="104" pos:column="5">*<pos:position pos:line="104" pos:column="6"/></operator><name pos:line="104" pos:column="6">p<pos:position pos:line="104" pos:column="7"/></name> <operator pos:line="104" pos:column="8">=<pos:position pos:line="104" pos:column="9"/></operator> <literal type="char" pos:line="104" pos:column="10">'\0'<pos:position pos:line="104" pos:column="14"/></literal></expr>;<pos:position pos:line="104" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="105" pos:column="5">*<pos:position pos:line="105" pos:column="6"/></operator><name pos:line="105" pos:column="6">slen<pos:position pos:line="105" pos:column="10"/></name> <operator pos:line="105" pos:column="11">=<pos:position pos:line="105" pos:column="12"/></operator> <name pos:line="105" pos:column="13">p<pos:position pos:line="105" pos:column="14"/></name> <operator pos:line="105" pos:column="15">-<pos:position pos:line="105" pos:column="16"/></operator> <name pos:line="105" pos:column="17">origp<pos:position pos:line="105" pos:column="22"/></name></expr>;<pos:position pos:line="105" pos:column="23"/></expr_stmt>
    <return pos:line="106" pos:column="5">return <expr><name pos:line="106" pos:column="12">s<pos:position pos:line="106" pos:column="13"/></name></expr>;<pos:position pos:line="106" pos:column="14"/></return>
}<pos:position pos:line="107" pos:column="2"/></block></function></unit>

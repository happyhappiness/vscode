<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1988_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">interpolate_vars<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">request_rec<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">r<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">str<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">start<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">end<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">delim<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">before<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">after<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">replacement<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">var<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">(<init pos:line="10" pos:column="10">;<pos:position pos:line="10" pos:column="11"/></init><condition pos:line="10" pos:column="11">;<pos:position pos:line="10" pos:column="12"/></condition><incr/>)<pos:position pos:line="10" pos:column="13"/></control> <block pos:line="10" pos:column="14">{
        <expr_stmt><expr><name pos:line="11" pos:column="9">start<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">str<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">start<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <call><name pos:line="12" pos:column="21">ap_strstr_c<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">start<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="40">"${"<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr><operator pos:line="12" pos:column="45">,<pos:position pos:line="12" pos:column="46"/></operator> <expr><name pos:line="12" pos:column="47">start<pos:position pos:line="12" pos:column="52"/></name> <operator pos:line="12" pos:column="53">==<pos:position pos:line="12" pos:column="55"/></operator> <name pos:line="12" pos:column="56">NULL<pos:position pos:line="12" pos:column="60"/></name></expr>)<pos:position pos:line="12" pos:column="61"/></condition><then pos:line="12" pos:column="61">
            <block type="pseudo"><break pos:line="13" pos:column="13">break;<pos:position pos:line="13" pos:column="19"/></break></block></then></if>

        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">end<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <call><name pos:line="15" pos:column="19">ap_strchr_c<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">start<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">+<pos:position pos:line="15" pos:column="37"/></operator><literal type="number" pos:line="15" pos:column="37">2<pos:position pos:line="15" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="40">'}'<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr><operator pos:line="15" pos:column="44">,<pos:position pos:line="15" pos:column="45"/></operator> <expr><name pos:line="15" pos:column="46">end<pos:position pos:line="15" pos:column="49"/></name> <operator pos:line="15" pos:column="50">==<pos:position pos:line="15" pos:column="52"/></operator> <name pos:line="15" pos:column="53">NULL<pos:position pos:line="15" pos:column="57"/></name></expr>)<pos:position pos:line="15" pos:column="58"/></condition><then pos:line="15" pos:column="58">
            <block type="pseudo"><break pos:line="16" pos:column="13">break;<pos:position pos:line="16" pos:column="19"/></break></block></then></if>

        <expr_stmt><expr><name pos:line="18" pos:column="9">delim<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <call><name pos:line="18" pos:column="17">ap_strchr_c<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">start<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="36">'|'<pos:position pos:line="18" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">before<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">apr_pstrndup<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name><name pos:line="19" pos:column="31">r<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">pool<pos:position pos:line="19" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="40">str<pos:position pos:line="19" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="45">start<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">-<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">str<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">after<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">end<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">+<pos:position pos:line="20" pos:column="21"/></operator><literal type="number" pos:line="20" pos:column="21">1<pos:position pos:line="20" pos:column="22"/></literal></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">delim<pos:position pos:line="21" pos:column="18"/></name></expr>)<pos:position pos:line="21" pos:column="19"/></condition><then pos:line="21" pos:column="19"> <block pos:line="21" pos:column="20">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">var<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <call><name pos:line="22" pos:column="19">apr_pstrndup<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name><name pos:line="22" pos:column="32">r<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">pool<pos:position pos:line="22" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="41">start<pos:position pos:line="22" pos:column="46"/></name><operator pos:line="22" pos:column="46">+<pos:position pos:line="22" pos:column="47"/></operator><literal type="number" pos:line="22" pos:column="47">2<pos:position pos:line="22" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="50">delim<pos:position pos:line="22" pos:column="55"/></name><operator pos:line="22" pos:column="55">-<pos:position pos:line="22" pos:column="56"/></operator><name pos:line="22" pos:column="56">start<pos:position pos:line="22" pos:column="61"/></name><operator pos:line="22" pos:column="61">-<pos:position pos:line="22" pos:column="62"/></operator><literal type="number" pos:line="22" pos:column="62">2<pos:position pos:line="22" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then>
        <else pos:line="24" pos:column="9">else <block pos:line="24" pos:column="14">{
            <expr_stmt><expr><name pos:line="25" pos:column="13">var<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <call><name pos:line="25" pos:column="19">apr_pstrndup<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><name><name pos:line="25" pos:column="32">r<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">pool<pos:position pos:line="25" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="41">start<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">+<pos:position pos:line="25" pos:column="47"/></operator><literal type="number" pos:line="25" pos:column="47">2<pos:position pos:line="25" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="50">end<pos:position pos:line="25" pos:column="53"/></name><operator pos:line="25" pos:column="53">-<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="54">start<pos:position pos:line="25" pos:column="59"/></name><operator pos:line="25" pos:column="59">-<pos:position pos:line="25" pos:column="60"/></operator><literal type="number" pos:line="25" pos:column="60">2<pos:position pos:line="25" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="27" pos:column="9">replacement<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <call><name pos:line="27" pos:column="23">apr_table_get<pos:position pos:line="27" pos:column="36"/></name><argument_list pos:line="27" pos:column="36">(<argument><expr><name><name pos:line="27" pos:column="37">r<pos:position pos:line="27" pos:column="38"/></name><operator pos:line="27" pos:column="38">-&gt;<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="40">subprocess_env<pos:position pos:line="27" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="56">var<pos:position pos:line="27" pos:column="59"/></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">replacement<pos:position pos:line="28" pos:column="25"/></name></expr>)<pos:position pos:line="28" pos:column="26"/></condition><then pos:line="28" pos:column="26"> <block pos:line="28" pos:column="27">{
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><name pos:line="29" pos:column="17">delim<pos:position pos:line="29" pos:column="22"/></name></expr>)<pos:position pos:line="29" pos:column="23"/></condition><then pos:line="29" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="17">replacement<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <call><name pos:line="30" pos:column="31">apr_pstrndup<pos:position pos:line="30" pos:column="43"/></name><argument_list pos:line="30" pos:column="43">(<argument><expr><name><name pos:line="30" pos:column="44">r<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">-&gt;<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="47">pool<pos:position pos:line="30" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="53">delim<pos:position pos:line="30" pos:column="58"/></name><operator pos:line="30" pos:column="58">+<pos:position pos:line="30" pos:column="59"/></operator><literal type="number" pos:line="30" pos:column="59">1<pos:position pos:line="30" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="62">end<pos:position pos:line="30" pos:column="65"/></name><operator pos:line="30" pos:column="65">-<pos:position pos:line="30" pos:column="66"/></operator><name pos:line="30" pos:column="66">delim<pos:position pos:line="30" pos:column="71"/></name><operator pos:line="30" pos:column="71">-<pos:position pos:line="30" pos:column="72"/></operator><literal type="number" pos:line="30" pos:column="72">1<pos:position pos:line="30" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="75"/></expr_stmt></block></then>
            <else pos:line="31" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="17">replacement<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <literal type="string" pos:line="32" pos:column="31">""<pos:position pos:line="32" pos:column="33"/></literal></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt></block></else></if>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="34" pos:column="9">str<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <call><name pos:line="34" pos:column="15">apr_pstrcat<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name><name pos:line="34" pos:column="27">r<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">-&gt;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="30">pool<pos:position pos:line="34" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="36">before<pos:position pos:line="34" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="44">replacement<pos:position pos:line="34" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="57">after<pos:position pos:line="34" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="64">NULL<pos:position pos:line="34" pos:column="68"/></name></expr></argument>)<pos:position pos:line="34" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">ap_log_rerror<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">APLOG_MARK<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="35">APLOG_TRACE1<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="49">0<pos:position pos:line="35" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="52">r<pos:position pos:line="35" pos:column="53"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="36" pos:column="23">"Interpolating %s  =&gt;  %s"<pos:position pos:line="36" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="51">var<pos:position pos:line="36" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="56">replacement<pos:position pos:line="36" pos:column="67"/></name></expr></argument>)<pos:position pos:line="36" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></for>
    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">str<pos:position pos:line="38" pos:column="15"/></name></expr>;<pos:position pos:line="38" pos:column="16"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

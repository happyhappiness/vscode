<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1487_httpd-2.2.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sc_for_req_method_by_id<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">int<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">method_id<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name><name pos:line="3" pos:column="9">method_id<pos:position pos:line="3" pos:column="18"/></name> <argument_list type="generic" pos:line="3" pos:column="19">&lt; <argument><expr><literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal> <operator pos:line="3" pos:column="23">||<pos:position pos:line="3" pos:column="25"/></operator> <name pos:line="3" pos:column="26">method_id<pos:position pos:line="3" pos:column="35"/></name></expr></argument> &gt;<pos:position pos:line="3" pos:column="40"/></argument_list></name> <name pos:line="3" pos:column="38">M_INVALID<pos:position pos:line="3" pos:column="47"/></name></expr>)<pos:position pos:line="3" pos:column="48"/></condition><then pos:line="3" pos:column="48">
        <block type="pseudo"><return pos:line="4" pos:column="9">return <expr><name pos:line="4" pos:column="16">UNKNOWN_METHOD<pos:position pos:line="4" pos:column="30"/></name></expr>;<pos:position pos:line="4" pos:column="31"/></return></block></then>
    <else pos:line="5" pos:column="5">else
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><ternary><condition><expr><name><name pos:line="6" pos:column="16">sc_for_req_method_table<pos:position pos:line="6" pos:column="39"/></name><index pos:line="6" pos:column="39">[<expr><name pos:line="6" pos:column="40">method_id<pos:position pos:line="6" pos:column="49"/></name></expr>]<pos:position pos:line="6" pos:column="50"/></index></name></expr> ?<pos:position pos:line="6" pos:column="52"/></condition><then pos:line="6" pos:column="52">
               <expr><name><name pos:line="7" pos:column="16">sc_for_req_method_table<pos:position pos:line="7" pos:column="39"/></name><index pos:line="7" pos:column="39">[<expr><name pos:line="7" pos:column="40">method_id<pos:position pos:line="7" pos:column="49"/></name></expr>]<pos:position pos:line="7" pos:column="50"/></index></name></expr> <pos:position pos:line="7" pos:column="51"/></then><else pos:line="7" pos:column="51">: <expr><name pos:line="7" pos:column="53">UNKNOWN_METHOD<pos:position pos:line="7" pos:column="67"/></name></expr></else></ternary></expr>;<pos:position pos:line="7" pos:column="68"/></return></block></else></if>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

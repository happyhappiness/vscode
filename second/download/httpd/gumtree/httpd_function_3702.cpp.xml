<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3702.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ef_unified_filter<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">ap_filter_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">f<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">apr_bucket_brigade<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">bb<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">request_rec<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">r<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name><name pos:line="3" pos:column="22">f<pos:position pos:line="3" pos:column="23"/></name><operator pos:line="3" pos:column="23">-&gt;<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="25">r<pos:position pos:line="3" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">conn_rec<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">c<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name><name pos:line="4" pos:column="19">r<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">-&gt;<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="22">connection<pos:position pos:line="4" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ef_ctx_t<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">ctx<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name><name pos:line="5" pos:column="21">f<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">ctx<pos:position pos:line="5" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_bucket<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">b<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ef_dir_t<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">dc<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">len<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">data<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_status_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">rv<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name></type> <name><name pos:line="11" pos:column="10">buf<pos:position pos:line="11" pos:column="13"/></name><index pos:line="11" pos:column="13">[<expr><literal type="number" pos:line="11" pos:column="14">4096<pos:position pos:line="11" pos:column="18"/></literal></expr>]<pos:position pos:line="11" pos:column="19"/></index></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_bucket<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">eos<pos:position pos:line="12" pos:column="20"/></name> <init pos:line="12" pos:column="21">= <expr><name pos:line="12" pos:column="23">NULL<pos:position pos:line="12" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_bucket_brigade<pos:position pos:line="13" pos:column="23"/></name> <modifier pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></modifier></type><name pos:line="13" pos:column="25">bb_tmp<pos:position pos:line="13" pos:column="31"/></name></decl>;<pos:position pos:line="13" pos:column="32"/></decl_stmt>

    <expr_stmt><expr><name pos:line="15" pos:column="5">dc<pos:position pos:line="15" pos:column="7"/></name> <operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator> <name><name pos:line="15" pos:column="10">ctx<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">dc<pos:position pos:line="15" pos:column="17"/></name></name></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">bb_tmp<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">apr_brigade_create<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><name><name pos:line="16" pos:column="33">r<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">-&gt;<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="36">pool<pos:position pos:line="16" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="42">c<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">-&gt;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="45">bucket_alloc<pos:position pos:line="16" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>

    <for pos:line="18" pos:column="5">for <control pos:line="18" pos:column="9">(<init><expr><name pos:line="18" pos:column="10">b<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">APR_BRIGADE_FIRST<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><name pos:line="18" pos:column="32">bb<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></init>
         <condition><expr><name pos:line="19" pos:column="10">b<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">!=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">APR_BRIGADE_SENTINEL<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">bb<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></condition>
         <incr><expr><name pos:line="20" pos:column="10">b<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <call><name pos:line="20" pos:column="14">APR_BUCKET_NEXT<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">b<pos:position pos:line="20" pos:column="31"/></name></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr></incr>)<pos:position pos:line="20" pos:column="33"/></control>
    <block pos:line="21" pos:column="5">{
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">APR_BUCKET_IS_EOS<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">b<pos:position pos:line="22" pos:column="32"/></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="34"/></condition><then pos:line="22" pos:column="34"> <block pos:line="22" pos:column="35">{
            <expr_stmt><expr><name pos:line="23" pos:column="13">eos<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">b<pos:position pos:line="23" pos:column="20"/></name></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
            <break pos:line="24" pos:column="13">break;<pos:position pos:line="24" pos:column="19"/></break>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="27" pos:column="9">rv<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">apr_bucket_read<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">b<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="33">&amp;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="34">data<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="40">&amp;<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="41">len<pos:position pos:line="27" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="46">APR_BLOCK_READ<pos:position pos:line="27" pos:column="60"/></name></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">rv<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">!=<pos:position pos:line="28" pos:column="18"/></operator> <name pos:line="28" pos:column="19">APR_SUCCESS<pos:position pos:line="28" pos:column="30"/></name></expr>)<pos:position pos:line="28" pos:column="31"/></condition><then pos:line="28" pos:column="31"> <block pos:line="28" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">ap_log_rerror<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><name pos:line="29" pos:column="27">APLOG_MARK<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="39">APLOG_ERR<pos:position pos:line="29" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="50">rv<pos:position pos:line="29" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="54">r<pos:position pos:line="29" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="57">"apr_bucket_read()"<pos:position pos:line="29" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="78"/></expr_stmt>
            <return pos:line="30" pos:column="13">return <expr><name pos:line="30" pos:column="20">rv<pos:position pos:line="30" pos:column="22"/></name></expr>;<pos:position pos:line="30" pos:column="23"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="33" pos:column="9">/* Good cast, we just tested len isn't negative */</comment>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">len<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">&gt;<pos:position pos:line="34" pos:column="21"/></operator> <literal type="number" pos:line="34" pos:column="19">0<pos:position pos:line="34" pos:column="20"/></literal> <operator pos:line="34" pos:column="21">&amp;&amp;<pos:position pos:line="34" pos:column="31"/></operator>
            <operator pos:line="35" pos:column="13">(<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">rv<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <call><name pos:line="35" pos:column="19">pass_data_to_filter<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name pos:line="35" pos:column="39">f<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="42">data<pos:position pos:line="35" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="48">(<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="49">apr_size_t<pos:position pos:line="35" pos:column="59"/></name><operator pos:line="35" pos:column="59">)<pos:position pos:line="35" pos:column="60"/></operator><name pos:line="35" pos:column="60">len<pos:position pos:line="35" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="65">bb_tmp<pos:position pos:line="35" pos:column="71"/></name></expr></argument>)<pos:position pos:line="35" pos:column="72"/></argument_list></call><operator pos:line="35" pos:column="72">)<pos:position pos:line="35" pos:column="73"/></operator>
                <operator pos:line="36" pos:column="17">!=<pos:position pos:line="36" pos:column="19"/></operator> <name pos:line="36" pos:column="20">APR_SUCCESS<pos:position pos:line="36" pos:column="31"/></name></expr>)<pos:position pos:line="36" pos:column="32"/></condition><then pos:line="36" pos:column="32"> <block pos:line="36" pos:column="33">{
            <return pos:line="37" pos:column="13">return <expr><name pos:line="37" pos:column="20">rv<pos:position pos:line="37" pos:column="22"/></name></expr>;<pos:position pos:line="37" pos:column="23"/></return>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
    }<pos:position pos:line="39" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="41" pos:column="5">apr_brigade_cleanup<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><name pos:line="41" pos:column="25">bb<pos:position pos:line="41" pos:column="27"/></name></expr></argument>)<pos:position pos:line="41" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">APR_BRIGADE_CONCAT<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><name pos:line="42" pos:column="24">bb<pos:position pos:line="42" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="28">bb_tmp<pos:position pos:line="42" pos:column="34"/></name></expr></argument>)<pos:position pos:line="42" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">apr_brigade_destroy<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><name pos:line="43" pos:column="25">bb_tmp<pos:position pos:line="43" pos:column="31"/></name></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">eos<pos:position pos:line="45" pos:column="12"/></name></expr>)<pos:position pos:line="45" pos:column="13"/></condition><then pos:line="45" pos:column="13"> <block pos:line="45" pos:column="14">{
        <comment type="block" pos:line="46" pos:column="9">/* close the child's stdin to signal that no more data is coming;
         * that will cause the child to finish generating output
         */</comment>
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">(<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">rv<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <call><name pos:line="49" pos:column="19">apr_file_close<pos:position pos:line="49" pos:column="33"/></name><argument_list pos:line="49" pos:column="33">(<argument><expr><name><name pos:line="49" pos:column="34">ctx<pos:position pos:line="49" pos:column="37"/></name><operator pos:line="49" pos:column="37">-&gt;<pos:position pos:line="49" pos:column="42"/></operator><name pos:line="49" pos:column="39">proc<pos:position pos:line="49" pos:column="43"/></name><operator pos:line="49" pos:column="43">-&gt;<pos:position pos:line="49" pos:column="48"/></operator><name pos:line="49" pos:column="45">in<pos:position pos:line="49" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="48"/></argument_list></call><operator pos:line="49" pos:column="48">)<pos:position pos:line="49" pos:column="49"/></operator> <operator pos:line="49" pos:column="50">!=<pos:position pos:line="49" pos:column="52"/></operator> <name pos:line="49" pos:column="53">APR_SUCCESS<pos:position pos:line="49" pos:column="64"/></name></expr>)<pos:position pos:line="49" pos:column="65"/></condition><then pos:line="49" pos:column="65"> <block pos:line="49" pos:column="66">{
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">ap_log_rerror<pos:position pos:line="50" pos:column="26"/></name><argument_list pos:line="50" pos:column="26">(<argument><expr><name pos:line="50" pos:column="27">APLOG_MARK<pos:position pos:line="50" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="39">APLOG_ERR<pos:position pos:line="50" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="50">rv<pos:position pos:line="50" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="54">r<pos:position pos:line="50" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="51" pos:column="27">"apr_file_close(child input)"<pos:position pos:line="51" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="58"/></expr_stmt>
            <return pos:line="52" pos:column="13">return <expr><name pos:line="52" pos:column="20">rv<pos:position pos:line="52" pos:column="22"/></name></expr>;<pos:position pos:line="52" pos:column="23"/></return>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="54" pos:column="9">/* since we've seen eos and closed the child's stdin, set the proper pipe
         * timeout; we don't care if we don't return from apr_file_read() for a while...
         */</comment>
        <expr_stmt><expr><name pos:line="57" pos:column="9">rv<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <call><name pos:line="57" pos:column="14">apr_file_pipe_timeout_set<pos:position pos:line="57" pos:column="39"/></name><argument_list pos:line="57" pos:column="39">(<argument><expr><name><name pos:line="57" pos:column="40">ctx<pos:position pos:line="57" pos:column="43"/></name><operator pos:line="57" pos:column="43">-&gt;<pos:position pos:line="57" pos:column="48"/></operator><name pos:line="57" pos:column="45">proc<pos:position pos:line="57" pos:column="49"/></name><operator pos:line="57" pos:column="49">-&gt;<pos:position pos:line="57" pos:column="54"/></operator><name pos:line="57" pos:column="51">out<pos:position pos:line="57" pos:column="54"/></name></name></expr></argument>,
                                       <argument><expr><name><name pos:line="58" pos:column="40">r<pos:position pos:line="58" pos:column="41"/></name><operator pos:line="58" pos:column="41">-&gt;<pos:position pos:line="58" pos:column="46"/></operator><name pos:line="58" pos:column="43">server<pos:position pos:line="58" pos:column="49"/></name><operator pos:line="58" pos:column="49">-&gt;<pos:position pos:line="58" pos:column="54"/></operator><name pos:line="58" pos:column="51">timeout<pos:position pos:line="58" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="60"/></expr_stmt>
        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">rv<pos:position pos:line="59" pos:column="15"/></name></expr>)<pos:position pos:line="59" pos:column="16"/></condition><then pos:line="59" pos:column="16"> <block pos:line="59" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">ap_log_rerror<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><name pos:line="60" pos:column="27">APLOG_MARK<pos:position pos:line="60" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="39">APLOG_ERR<pos:position pos:line="60" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="50">rv<pos:position pos:line="60" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="54">r<pos:position pos:line="60" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="61" pos:column="27">"apr_file_pipe_timeout_set(child output)"<pos:position pos:line="61" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="70"/></expr_stmt>
            <return pos:line="62" pos:column="13">return <expr><name pos:line="62" pos:column="20">rv<pos:position pos:line="62" pos:column="22"/></name></expr>;<pos:position pos:line="62" pos:column="23"/></return>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>

    <do pos:line="66" pos:column="5">do <block pos:line="66" pos:column="8">{
        <expr_stmt><expr><name pos:line="67" pos:column="9">len<pos:position pos:line="67" pos:column="12"/></name> <operator pos:line="67" pos:column="13">=<pos:position pos:line="67" pos:column="14"/></operator> <sizeof pos:line="67" pos:column="15">sizeof<argument_list pos:line="67" pos:column="21">(<argument><expr><name pos:line="67" pos:column="22">buf<pos:position pos:line="67" pos:column="25"/></name></expr></argument>)<pos:position pos:line="67" pos:column="26"/></argument_list></sizeof></expr>;<pos:position pos:line="67" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="68" pos:column="9">rv<pos:position pos:line="68" pos:column="11"/></name> <operator pos:line="68" pos:column="12">=<pos:position pos:line="68" pos:column="13"/></operator> <call><name pos:line="68" pos:column="14">apr_file_read<pos:position pos:line="68" pos:column="27"/></name><argument_list pos:line="68" pos:column="27">(<argument><expr><name><name pos:line="68" pos:column="28">ctx<pos:position pos:line="68" pos:column="31"/></name><operator pos:line="68" pos:column="31">-&gt;<pos:position pos:line="68" pos:column="36"/></operator><name pos:line="68" pos:column="33">proc<pos:position pos:line="68" pos:column="37"/></name><operator pos:line="68" pos:column="37">-&gt;<pos:position pos:line="68" pos:column="42"/></operator><name pos:line="68" pos:column="39">out<pos:position pos:line="68" pos:column="42"/></name></name></expr></argument>,
                      <argument><expr><name pos:line="69" pos:column="23">buf<pos:position pos:line="69" pos:column="26"/></name></expr></argument>,
                      <argument><expr><operator pos:line="70" pos:column="23">&amp;<pos:position pos:line="70" pos:column="28"/></operator><name pos:line="70" pos:column="24">len<pos:position pos:line="70" pos:column="27"/></name></expr></argument>)<pos:position pos:line="70" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="29"/></expr_stmt>
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><operator pos:line="71" pos:column="13">(<pos:position pos:line="71" pos:column="14"/></operator><name pos:line="71" pos:column="14">rv<pos:position pos:line="71" pos:column="16"/></name> <operator pos:line="71" pos:column="17">&amp;&amp;<pos:position pos:line="71" pos:column="27"/></operator> <operator pos:line="71" pos:column="20">!<pos:position pos:line="71" pos:column="21"/></operator><call><name pos:line="71" pos:column="21">APR_STATUS_IS_EOF<pos:position pos:line="71" pos:column="38"/></name><argument_list pos:line="71" pos:column="38">(<argument><expr><name pos:line="71" pos:column="39">rv<pos:position pos:line="71" pos:column="41"/></name></expr></argument>)<pos:position pos:line="71" pos:column="42"/></argument_list></call> <operator pos:line="71" pos:column="43">&amp;&amp;<pos:position pos:line="71" pos:column="53"/></operator> <operator pos:line="71" pos:column="46">!<pos:position pos:line="71" pos:column="47"/></operator><call><name pos:line="71" pos:column="47">APR_STATUS_IS_EAGAIN<pos:position pos:line="71" pos:column="67"/></name><argument_list pos:line="71" pos:column="67">(<argument><expr><name pos:line="71" pos:column="68">rv<pos:position pos:line="71" pos:column="70"/></name></expr></argument>)<pos:position pos:line="71" pos:column="71"/></argument_list></call><operator pos:line="71" pos:column="71">)<pos:position pos:line="71" pos:column="72"/></operator> <operator pos:line="71" pos:column="73">||<pos:position pos:line="71" pos:column="75"/></operator>
            <name><name pos:line="72" pos:column="13">dc<pos:position pos:line="72" pos:column="15"/></name><operator pos:line="72" pos:column="15">-&gt;<pos:position pos:line="72" pos:column="20"/></operator><name pos:line="72" pos:column="17">debug<pos:position pos:line="72" pos:column="22"/></name></name> <operator pos:line="72" pos:column="23">&gt;=<pos:position pos:line="72" pos:column="28"/></operator> <name pos:line="72" pos:column="26">DBGLVL_GORY<pos:position pos:line="72" pos:column="37"/></name></expr>)<pos:position pos:line="72" pos:column="38"/></condition><then pos:line="72" pos:column="38"> <block pos:line="72" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">ap_log_rerror<pos:position pos:line="73" pos:column="26"/></name><argument_list pos:line="73" pos:column="26">(<argument><expr><name pos:line="73" pos:column="27">APLOG_MARK<pos:position pos:line="73" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="39">APLOG_DEBUG<pos:position pos:line="73" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="52">rv<pos:position pos:line="73" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="56">r<pos:position pos:line="73" pos:column="57"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="74" pos:column="27">"apr_file_read(child output), len %"<pos:position pos:line="74" pos:column="63"/></literal> <name pos:line="74" pos:column="64">APR_SIZE_T_FMT<pos:position pos:line="74" pos:column="78"/></name></expr></argument>,
                          <argument><expr><ternary><condition><expr><operator pos:line="75" pos:column="27">!<pos:position pos:line="75" pos:column="28"/></operator><name pos:line="75" pos:column="28">rv<pos:position pos:line="75" pos:column="30"/></name></expr> ?<pos:position pos:line="75" pos:column="32"/></condition><then pos:line="75" pos:column="32"> <expr><name pos:line="75" pos:column="33">len<pos:position pos:line="75" pos:column="36"/></name></expr> <pos:position pos:line="75" pos:column="37"/></then><else pos:line="75" pos:column="37">: <expr><operator pos:line="75" pos:column="39">-<pos:position pos:line="75" pos:column="40"/></operator><literal type="number" pos:line="75" pos:column="40">1<pos:position pos:line="75" pos:column="41"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="75" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="76" pos:column="10"/></block></then></if>
        <if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><call><name pos:line="77" pos:column="13">APR_STATUS_IS_EAGAIN<pos:position pos:line="77" pos:column="33"/></name><argument_list pos:line="77" pos:column="33">(<argument><expr><name pos:line="77" pos:column="34">rv<pos:position pos:line="77" pos:column="36"/></name></expr></argument>)<pos:position pos:line="77" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="38"/></condition><then pos:line="77" pos:column="38"> <block pos:line="77" pos:column="39">{
            <if pos:line="78" pos:column="13">if <condition pos:line="78" pos:column="16">(<expr><name pos:line="78" pos:column="17">eos<pos:position pos:line="78" pos:column="20"/></name></expr>)<pos:position pos:line="78" pos:column="21"/></condition><then pos:line="78" pos:column="21"> <block pos:line="78" pos:column="22">{
                <comment type="block" pos:line="79" pos:column="17">/* should not occur, because we have an APR timeout in place */</comment>
                <expr_stmt><expr><call><name pos:line="80" pos:column="17">AP_DEBUG_ASSERT<pos:position pos:line="80" pos:column="32"/></name><argument_list pos:line="80" pos:column="32">(<argument><expr><literal type="number" pos:line="80" pos:column="33">1<pos:position pos:line="80" pos:column="34"/></literal> <operator pos:line="80" pos:column="35">!=<pos:position pos:line="80" pos:column="37"/></operator> <literal type="number" pos:line="80" pos:column="38">1<pos:position pos:line="80" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="81" pos:column="14"/></block></then></if>
            <return pos:line="82" pos:column="13">return <expr><name pos:line="82" pos:column="20">APR_SUCCESS<pos:position pos:line="82" pos:column="31"/></name></expr>;<pos:position pos:line="82" pos:column="32"/></return>
        }<pos:position pos:line="83" pos:column="10"/></block></then></if>

        <if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name pos:line="85" pos:column="13">rv<pos:position pos:line="85" pos:column="15"/></name> <operator pos:line="85" pos:column="16">==<pos:position pos:line="85" pos:column="18"/></operator> <name pos:line="85" pos:column="19">APR_SUCCESS<pos:position pos:line="85" pos:column="30"/></name></expr>)<pos:position pos:line="85" pos:column="31"/></condition><then pos:line="85" pos:column="31"> <block pos:line="85" pos:column="32">{
            <expr_stmt><expr><name pos:line="86" pos:column="13">b<pos:position pos:line="86" pos:column="14"/></name> <operator pos:line="86" pos:column="15">=<pos:position pos:line="86" pos:column="16"/></operator> <call><name pos:line="86" pos:column="17">apr_bucket_heap_create<pos:position pos:line="86" pos:column="39"/></name><argument_list pos:line="86" pos:column="39">(<argument><expr><name pos:line="86" pos:column="40">buf<pos:position pos:line="86" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="45">len<pos:position pos:line="86" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="50">NULL<pos:position pos:line="86" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="86" pos:column="56">c<pos:position pos:line="86" pos:column="57"/></name><operator pos:line="86" pos:column="57">-&gt;<pos:position pos:line="86" pos:column="62"/></operator><name pos:line="86" pos:column="59">bucket_alloc<pos:position pos:line="86" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="87" pos:column="36"/></name><argument_list pos:line="87" pos:column="36">(<argument><expr><name pos:line="87" pos:column="37">bb<pos:position pos:line="87" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="41">b<pos:position pos:line="87" pos:column="42"/></name></expr></argument>)<pos:position pos:line="87" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="88" pos:column="10"/></block></then></if>
    }<pos:position pos:line="89" pos:column="6"/></block> while <condition pos:line="89" pos:column="13">(<expr><name pos:line="89" pos:column="14">rv<pos:position pos:line="89" pos:column="16"/></name> <operator pos:line="89" pos:column="17">==<pos:position pos:line="89" pos:column="19"/></operator> <name pos:line="89" pos:column="20">APR_SUCCESS<pos:position pos:line="89" pos:column="31"/></name></expr>)<pos:position pos:line="89" pos:column="32"/></condition>;<pos:position pos:line="89" pos:column="33"/></do>

    <if pos:line="91" pos:column="5">if <condition pos:line="91" pos:column="8">(<expr><operator pos:line="91" pos:column="9">!<pos:position pos:line="91" pos:column="10"/></operator><call><name pos:line="91" pos:column="10">APR_STATUS_IS_EOF<pos:position pos:line="91" pos:column="27"/></name><argument_list pos:line="91" pos:column="27">(<argument><expr><name pos:line="91" pos:column="28">rv<pos:position pos:line="91" pos:column="30"/></name></expr></argument>)<pos:position pos:line="91" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="32"/></condition><then pos:line="91" pos:column="32"> <block pos:line="91" pos:column="33">{
        <return pos:line="92" pos:column="9">return <expr><name pos:line="92" pos:column="16">rv<pos:position pos:line="92" pos:column="18"/></name></expr>;<pos:position pos:line="92" pos:column="19"/></return>
    }<pos:position pos:line="93" pos:column="6"/></block></then></if>

    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">(<expr><name pos:line="95" pos:column="9">eos<pos:position pos:line="95" pos:column="12"/></name></expr>)<pos:position pos:line="95" pos:column="13"/></condition><then pos:line="95" pos:column="13"> <block pos:line="95" pos:column="14">{
        <expr_stmt><expr><name pos:line="96" pos:column="9">b<pos:position pos:line="96" pos:column="10"/></name> <operator pos:line="96" pos:column="11">=<pos:position pos:line="96" pos:column="12"/></operator> <call><name pos:line="96" pos:column="13">apr_bucket_eos_create<pos:position pos:line="96" pos:column="34"/></name><argument_list pos:line="96" pos:column="34">(<argument><expr><name><name pos:line="96" pos:column="35">c<pos:position pos:line="96" pos:column="36"/></name><operator pos:line="96" pos:column="36">-&gt;<pos:position pos:line="96" pos:column="41"/></operator><name pos:line="96" pos:column="38">bucket_alloc<pos:position pos:line="96" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="97" pos:column="32"/></name><argument_list pos:line="97" pos:column="32">(<argument><expr><name pos:line="97" pos:column="33">bb<pos:position pos:line="97" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="37">b<pos:position pos:line="97" pos:column="38"/></name></expr></argument>)<pos:position pos:line="97" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="98" pos:column="6"/></block></then></if>

    <return pos:line="100" pos:column="5">return <expr><name pos:line="100" pos:column="12">APR_SUCCESS<pos:position pos:line="100" pos:column="23"/></name></expr>;<pos:position pos:line="100" pos:column="24"/></return>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

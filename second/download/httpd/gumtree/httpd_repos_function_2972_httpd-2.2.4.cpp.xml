<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2972_httpd-2.2.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">skip_url_prefix<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">url<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">enclosedp<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                                   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier><modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">scheme<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/*
     * return non-zero if this looks like a LDAP URL; zero if not
     * if non-zero returned, *urlp will be moved past "ldap://" part of URL
     */</comment>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">p<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">( <expr><name pos:line="10" pos:column="10">url<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">==<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">NULL<pos:position pos:line="10" pos:column="21"/></name></expr> )<pos:position pos:line="10" pos:column="23"/></condition><then pos:line="10" pos:column="23"> <block pos:line="10" pos:column="24">{
        <return pos:line="11" pos:column="9">return<expr><operator pos:line="11" pos:column="15">(<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">NULL<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">)<pos:position pos:line="11" pos:column="23"/></operator></expr>;<pos:position pos:line="11" pos:column="24"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="14" pos:column="5">p<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <name pos:line="14" pos:column="9">url<pos:position pos:line="14" pos:column="12"/></name></expr>;<pos:position pos:line="14" pos:column="13"/></expr_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* skip leading '&lt;' (if any) */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">( <expr><operator pos:line="17" pos:column="10">*<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">p<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">==<pos:position pos:line="17" pos:column="15"/></operator> <literal type="char" pos:line="17" pos:column="16">'&lt;'<pos:position pos:line="17" pos:column="22"/></literal></expr> )<pos:position pos:line="17" pos:column="21"/></condition><then pos:line="17" pos:column="21"> <block pos:line="17" pos:column="22">{
        <expr_stmt><expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">enclosedp<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <literal type="number" pos:line="18" pos:column="22">1<pos:position pos:line="18" pos:column="23"/></literal></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="19" pos:column="9">++<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">p<pos:position pos:line="19" pos:column="12"/></name></expr>;<pos:position pos:line="19" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then> <else pos:line="20" pos:column="7">else <block pos:line="20" pos:column="12">{
        <expr_stmt><expr><operator pos:line="21" pos:column="9">*<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">enclosedp<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <literal type="number" pos:line="21" pos:column="22">0<pos:position pos:line="21" pos:column="23"/></literal></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="24" pos:column="5">/* skip leading "URL:" (if any) */</comment>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">( <expr><call><name pos:line="25" pos:column="10">strncasecmp<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">( <argument><expr><name pos:line="25" pos:column="23">p<pos:position pos:line="25" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="26">APR_LDAP_URL_URLCOLON<pos:position pos:line="25" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="49">APR_LDAP_URL_URLCOLON_LEN<pos:position pos:line="25" pos:column="74"/></name></expr></argument> )<pos:position pos:line="25" pos:column="76"/></argument_list></call> <operator pos:line="25" pos:column="77">==<pos:position pos:line="25" pos:column="79"/></operator> <literal type="number" pos:line="25" pos:column="80">0<pos:position pos:line="25" pos:column="81"/></literal></expr> )<pos:position pos:line="25" pos:column="83"/></condition><then pos:line="25" pos:column="83"> <block pos:line="25" pos:column="84">{
        <expr_stmt><expr><name pos:line="26" pos:column="9">p<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">+=<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">APR_LDAP_URL_URLCOLON_LEN<pos:position pos:line="26" pos:column="39"/></name></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* check for "ldap://" prefix */</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">( <expr><call><name pos:line="30" pos:column="10">strncasecmp<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">( <argument><expr><name pos:line="30" pos:column="23">p<pos:position pos:line="30" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="26">APR_LDAP_URL_PREFIX<pos:position pos:line="30" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="47">APR_LDAP_URL_PREFIX_LEN<pos:position pos:line="30" pos:column="70"/></name></expr></argument> )<pos:position pos:line="30" pos:column="72"/></argument_list></call> <operator pos:line="30" pos:column="73">==<pos:position pos:line="30" pos:column="75"/></operator> <literal type="number" pos:line="30" pos:column="76">0<pos:position pos:line="30" pos:column="77"/></literal></expr> )<pos:position pos:line="30" pos:column="79"/></condition><then pos:line="30" pos:column="79"> <block pos:line="30" pos:column="80">{
        <comment type="block" pos:line="31" pos:column="9">/* skip over "ldap://" prefix and return success */</comment>
        <expr_stmt><expr><name pos:line="32" pos:column="9">p<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">+=<pos:position pos:line="32" pos:column="13"/></operator> <name pos:line="32" pos:column="14">APR_LDAP_URL_PREFIX_LEN<pos:position pos:line="32" pos:column="37"/></name></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="33" pos:column="9">*<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">scheme<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <literal type="string" pos:line="33" pos:column="19">"ldap"<pos:position pos:line="33" pos:column="25"/></literal></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>
        <return pos:line="34" pos:column="9">return<expr><operator pos:line="34" pos:column="15">(<pos:position pos:line="34" pos:column="16"/></operator> <name pos:line="34" pos:column="17">p<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">)<pos:position pos:line="34" pos:column="20"/></operator></expr>;<pos:position pos:line="34" pos:column="21"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="37" pos:column="5">/* check for "ldaps://" prefix */</comment>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">( <expr><call><name pos:line="38" pos:column="10">strncasecmp<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">( <argument><expr><name pos:line="38" pos:column="23">p<pos:position pos:line="38" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="26">APR_LDAPS_URL_PREFIX<pos:position pos:line="38" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="48">APR_LDAPS_URL_PREFIX_LEN<pos:position pos:line="38" pos:column="72"/></name></expr></argument> )<pos:position pos:line="38" pos:column="74"/></argument_list></call> <operator pos:line="38" pos:column="75">==<pos:position pos:line="38" pos:column="77"/></operator> <literal type="number" pos:line="38" pos:column="78">0<pos:position pos:line="38" pos:column="79"/></literal></expr> )<pos:position pos:line="38" pos:column="81"/></condition><then pos:line="38" pos:column="81"> <block pos:line="38" pos:column="82">{
        <comment type="block" pos:line="39" pos:column="9">/* skip over "ldaps://" prefix and return success */</comment>
        <expr_stmt><expr><name pos:line="40" pos:column="9">p<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">+=<pos:position pos:line="40" pos:column="13"/></operator> <name pos:line="40" pos:column="14">APR_LDAPS_URL_PREFIX_LEN<pos:position pos:line="40" pos:column="38"/></name></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="41" pos:column="9">*<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">scheme<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <literal type="string" pos:line="41" pos:column="19">"ldaps"<pos:position pos:line="41" pos:column="26"/></literal></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt>
        <return pos:line="42" pos:column="9">return<expr><operator pos:line="42" pos:column="15">(<pos:position pos:line="42" pos:column="16"/></operator> <name pos:line="42" pos:column="17">p<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">)<pos:position pos:line="42" pos:column="20"/></operator></expr>;<pos:position pos:line="42" pos:column="21"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="45" pos:column="5">/* check for "ldapi://" prefix */</comment>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">( <expr><call><name pos:line="46" pos:column="10">strncasecmp<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">( <argument><expr><name pos:line="46" pos:column="23">p<pos:position pos:line="46" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="26">APR_LDAPI_URL_PREFIX<pos:position pos:line="46" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="48">APR_LDAPI_URL_PREFIX_LEN<pos:position pos:line="46" pos:column="72"/></name></expr></argument> )<pos:position pos:line="46" pos:column="74"/></argument_list></call> <operator pos:line="46" pos:column="75">==<pos:position pos:line="46" pos:column="77"/></operator> <literal type="number" pos:line="46" pos:column="78">0<pos:position pos:line="46" pos:column="79"/></literal></expr> )<pos:position pos:line="46" pos:column="81"/></condition><then pos:line="46" pos:column="81"> <block pos:line="46" pos:column="82">{
        <comment type="block" pos:line="47" pos:column="9">/* skip over "ldapi://" prefix and return success */</comment>
        <expr_stmt><expr><name pos:line="48" pos:column="9">p<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">+=<pos:position pos:line="48" pos:column="13"/></operator> <name pos:line="48" pos:column="14">APR_LDAPI_URL_PREFIX_LEN<pos:position pos:line="48" pos:column="38"/></name></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="49" pos:column="9">*<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">scheme<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <literal type="string" pos:line="49" pos:column="19">"ldapi"<pos:position pos:line="49" pos:column="26"/></literal></expr>;<pos:position pos:line="49" pos:column="27"/></expr_stmt>
        <return pos:line="50" pos:column="9">return<expr><operator pos:line="50" pos:column="15">(<pos:position pos:line="50" pos:column="16"/></operator> <name pos:line="50" pos:column="17">p<pos:position pos:line="50" pos:column="18"/></name> <operator pos:line="50" pos:column="19">)<pos:position pos:line="50" pos:column="20"/></operator></expr>;<pos:position pos:line="50" pos:column="21"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <return pos:line="53" pos:column="5">return<expr><operator pos:line="53" pos:column="11">(<pos:position pos:line="53" pos:column="12"/></operator> <name pos:line="53" pos:column="13">NULL<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">)<pos:position pos:line="53" pos:column="19"/></operator></expr>;<pos:position pos:line="53" pos:column="20"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

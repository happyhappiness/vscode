<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6011.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">h2_mplx_task_done<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">h2_mplx<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">m<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">int<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">stream_id<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">status<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">apr_thread_mutex_lock<pos:position pos:line="3" pos:column="48"/></name><argument_list pos:line="3" pos:column="48">(<argument><expr><name><name pos:line="3" pos:column="49">m<pos:position pos:line="3" pos:column="50"/></name><operator pos:line="3" pos:column="50">-&gt;<pos:position pos:line="3" pos:column="55"/></operator><name pos:line="3" pos:column="52">lock<pos:position pos:line="3" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="58"/></decl_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">APR_SUCCESS<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">==<pos:position pos:line="4" pos:column="23"/></operator> <name pos:line="4" pos:column="24">status<pos:position pos:line="4" pos:column="30"/></name></expr>)<pos:position pos:line="4" pos:column="31"/></condition><then pos:line="4" pos:column="31"> <block pos:line="4" pos:column="32">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">h2_io<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">io<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><call><name pos:line="5" pos:column="21">h2_io_set_get<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><name><name pos:line="5" pos:column="35">m<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">stream_ios<pos:position pos:line="5" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="50">stream_id<pos:position pos:line="5" pos:column="59"/></name></expr></argument>)<pos:position pos:line="5" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="61"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">ap_log_cerror<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">APLOG_MARK<pos:position pos:line="6" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="35">APLOG_TRACE2<pos:position pos:line="6" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="49">0<pos:position pos:line="6" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="52">m<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">-&gt;<pos:position pos:line="6" pos:column="58"/></operator><name pos:line="6" pos:column="55">c<pos:position pos:line="6" pos:column="56"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="7" pos:column="23">"h2_mplx(%ld): task(%d) done"<pos:position pos:line="7" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="54">m<pos:position pos:line="7" pos:column="55"/></name><operator pos:line="7" pos:column="55">-&gt;<pos:position pos:line="7" pos:column="60"/></operator><name pos:line="7" pos:column="57">id<pos:position pos:line="7" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="61">stream_id<pos:position pos:line="7" pos:column="70"/></name></expr></argument>)<pos:position pos:line="7" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="72"/></expr_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">io<pos:position pos:line="8" pos:column="15"/></name></expr>)<pos:position pos:line="8" pos:column="16"/></condition><then pos:line="8" pos:column="16"> <block pos:line="8" pos:column="17">{
            <expr_stmt><expr><name><name pos:line="9" pos:column="13">io<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">task_done<pos:position pos:line="9" pos:column="26"/></name></name> <operator pos:line="9" pos:column="27">=<pos:position pos:line="9" pos:column="28"/></operator> <literal type="number" pos:line="9" pos:column="29">1<pos:position pos:line="9" pos:column="30"/></literal></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>
            <if pos:line="10" pos:column="13">if <condition pos:line="10" pos:column="16">(<expr><name><name pos:line="10" pos:column="17">io<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">orphaned<pos:position pos:line="10" pos:column="29"/></name></name></expr>)<pos:position pos:line="10" pos:column="30"/></condition><then pos:line="10" pos:column="30"> <block pos:line="10" pos:column="31">{
                <expr_stmt><expr><call><name pos:line="11" pos:column="17">io_destroy<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">m<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="31">io<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="35">0<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="12" pos:column="14"/></block></then>
            <else pos:line="13" pos:column="13">else <block pos:line="13" pos:column="18">{
                <comment type="block" pos:line="14" pos:column="17">/* hang around until the stream deregisteres */</comment>
            }<pos:position pos:line="15" pos:column="14"/></block></else></if>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name><name pos:line="17" pos:column="33">m<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">-&gt;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="36">lock<pos:position pos:line="17" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

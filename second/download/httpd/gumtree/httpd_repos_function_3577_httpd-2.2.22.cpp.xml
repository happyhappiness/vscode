<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3577_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">proc_mutex_fcntl_create<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">apr_proc_mutex_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">new_mutex<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                                            <parameter><decl><type><specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <name pos:line="2" pos:column="51">char<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">fname<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rv<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
 
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">fname<pos:position pos:line="6" pos:column="14"/></name></expr>)<pos:position pos:line="6" pos:column="15"/></condition><then pos:line="6" pos:column="15"> <block pos:line="6" pos:column="16">{
        <expr_stmt><expr><name><name pos:line="7" pos:column="9">new_mutex<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">fname<pos:position pos:line="7" pos:column="25"/></name></name> <operator pos:line="7" pos:column="26">=<pos:position pos:line="7" pos:column="27"/></operator> <call><name pos:line="7" pos:column="28">apr_pstrdup<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><name><name pos:line="7" pos:column="40">new_mutex<pos:position pos:line="7" pos:column="49"/></name><operator pos:line="7" pos:column="49">-&gt;<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="51">pool<pos:position pos:line="7" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="57">fname<pos:position pos:line="7" pos:column="62"/></name></expr></argument>)<pos:position pos:line="7" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><name pos:line="8" pos:column="9">rv<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">apr_file_open<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><operator pos:line="8" pos:column="28">&amp;<pos:position pos:line="8" pos:column="33"/></operator><name><name pos:line="8" pos:column="29">new_mutex<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">interproc<pos:position pos:line="8" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="51">new_mutex<pos:position pos:line="8" pos:column="60"/></name><operator pos:line="8" pos:column="60">-&gt;<pos:position pos:line="8" pos:column="65"/></operator><name pos:line="8" pos:column="62">fname<pos:position pos:line="8" pos:column="67"/></name></name></expr></argument>,
                           <argument><expr><name pos:line="9" pos:column="28">APR_FOPEN_CREATE<pos:position pos:line="9" pos:column="44"/></name> <operator pos:line="9" pos:column="45">|<pos:position pos:line="9" pos:column="46"/></operator> <name pos:line="9" pos:column="47">APR_FOPEN_WRITE<pos:position pos:line="9" pos:column="62"/></name> <operator pos:line="9" pos:column="63">|<pos:position pos:line="9" pos:column="64"/></operator> <name pos:line="9" pos:column="65">APR_FOPEN_EXCL<pos:position pos:line="9" pos:column="79"/></name></expr></argument>,
                           <argument><expr><name pos:line="10" pos:column="28">APR_UREAD<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">|<pos:position pos:line="10" pos:column="39"/></operator> <name pos:line="10" pos:column="40">APR_UWRITE<pos:position pos:line="10" pos:column="50"/></name> <operator pos:line="10" pos:column="51">|<pos:position pos:line="10" pos:column="52"/></operator> <name pos:line="10" pos:column="53">APR_GREAD<pos:position pos:line="10" pos:column="62"/></name> <operator pos:line="10" pos:column="63">|<pos:position pos:line="10" pos:column="64"/></operator> <name pos:line="10" pos:column="65">APR_WREAD<pos:position pos:line="10" pos:column="74"/></name></expr></argument>,
                           <argument><expr><name><name pos:line="11" pos:column="28">new_mutex<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">pool<pos:position pos:line="11" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then>
    <else pos:line="13" pos:column="5">else <block pos:line="13" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">new_mutex<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">fname<pos:position pos:line="14" pos:column="25"/></name></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <call><name pos:line="14" pos:column="28">apr_pstrdup<pos:position pos:line="14" pos:column="39"/></name><argument_list pos:line="14" pos:column="39">(<argument><expr><name><name pos:line="14" pos:column="40">new_mutex<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">-&gt;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="51">pool<pos:position pos:line="14" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="57">"/tmp/aprXXXXXX"<pos:position pos:line="14" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">rv<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <call><name pos:line="15" pos:column="14">apr_file_mktemp<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><operator pos:line="15" pos:column="30">&amp;<pos:position pos:line="15" pos:column="35"/></operator><name><name pos:line="15" pos:column="31">new_mutex<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">-&gt;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="42">interproc<pos:position pos:line="15" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="53">new_mutex<pos:position pos:line="15" pos:column="62"/></name><operator pos:line="15" pos:column="62">-&gt;<pos:position pos:line="15" pos:column="67"/></operator><name pos:line="15" pos:column="64">fname<pos:position pos:line="15" pos:column="69"/></name></name></expr></argument>,
                             <argument><expr><name pos:line="16" pos:column="30">APR_FOPEN_CREATE<pos:position pos:line="16" pos:column="46"/></name> <operator pos:line="16" pos:column="47">|<pos:position pos:line="16" pos:column="48"/></operator> <name pos:line="16" pos:column="49">APR_FOPEN_WRITE<pos:position pos:line="16" pos:column="64"/></name> <operator pos:line="16" pos:column="65">|<pos:position pos:line="16" pos:column="66"/></operator> <name pos:line="16" pos:column="67">APR_FOPEN_EXCL<pos:position pos:line="16" pos:column="81"/></name></expr></argument>,
                             <argument><expr><name><name pos:line="17" pos:column="30">new_mutex<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">-&gt;<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="41">pool<pos:position pos:line="17" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>
 
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">rv<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">!=<pos:position pos:line="20" pos:column="14"/></operator> <name pos:line="20" pos:column="15">APR_SUCCESS<pos:position pos:line="20" pos:column="26"/></name></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27"> <block pos:line="20" pos:column="28">{
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">rv<pos:position pos:line="21" pos:column="18"/></name></expr>;<pos:position pos:line="21" pos:column="19"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="24" pos:column="5">new_mutex<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">curr_locked<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <literal type="number" pos:line="24" pos:column="30">0<pos:position pos:line="24" pos:column="31"/></literal></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">unlink<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name><name pos:line="25" pos:column="12">new_mutex<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">-&gt;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="23">fname<pos:position pos:line="25" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name><name pos:line="26" pos:column="31">new_mutex<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">-&gt;<pos:position pos:line="26" pos:column="45"/></operator><name pos:line="26" pos:column="42">pool<pos:position pos:line="26" pos:column="46"/></name></name></expr></argument>,
                              <argument><expr><operator pos:line="27" pos:column="31">(<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">void<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">*<pos:position pos:line="27" pos:column="37"/></operator><operator pos:line="27" pos:column="37">)<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="38">new_mutex<pos:position pos:line="27" pos:column="47"/></name></expr></argument>,
                              <argument><expr><name pos:line="28" pos:column="31">apr_proc_mutex_cleanup<pos:position pos:line="28" pos:column="53"/></name></expr></argument>, 
                              <argument><expr><name pos:line="29" pos:column="31">apr_pool_cleanup_null<pos:position pos:line="29" pos:column="52"/></name></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="54"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><name pos:line="30" pos:column="12">APR_SUCCESS<pos:position pos:line="30" pos:column="23"/></name></expr>;<pos:position pos:line="30" pos:column="24"/></return> 
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

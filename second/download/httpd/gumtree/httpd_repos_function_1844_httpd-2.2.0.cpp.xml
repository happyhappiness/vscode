<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1844_httpd-2.2.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dbm_check_auth<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">request_rec<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">r<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">authz_dbm_config_rec<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">conf<pos:position pos:line="3" pos:column="31"/></name> <init pos:line="3" pos:column="32">= <expr><call><name pos:line="3" pos:column="34">ap_get_module_config<pos:position pos:line="3" pos:column="54"/></name><argument_list pos:line="3" pos:column="54">(<argument><expr><name><name pos:line="3" pos:column="55">r<pos:position pos:line="3" pos:column="56"/></name><operator pos:line="3" pos:column="56">-&gt;<pos:position pos:line="3" pos:column="61"/></operator><name pos:line="3" pos:column="58">per_dir_config<pos:position pos:line="3" pos:column="72"/></name></name></expr></argument>,
                                                      <argument><expr><operator pos:line="4" pos:column="55">&amp;<pos:position pos:line="4" pos:column="60"/></operator><name pos:line="4" pos:column="56">authz_dbm_module<pos:position pos:line="4" pos:column="72"/></name></expr></argument>)<pos:position pos:line="4" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="74"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">user<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name><name pos:line="5" pos:column="18">r<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">-&gt;<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="21">user<pos:position pos:line="5" pos:column="25"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">m<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><name><name pos:line="6" pos:column="13">r<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">method_number<pos:position pos:line="6" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">apr_array_header_t<pos:position pos:line="7" pos:column="29"/></name> <modifier pos:line="7" pos:column="30">*<pos:position pos:line="7" pos:column="31"/></modifier></type><name pos:line="7" pos:column="31">reqs_arr<pos:position pos:line="7" pos:column="39"/></name> <init pos:line="7" pos:column="40">= <expr><call><name pos:line="7" pos:column="42">ap_requires<pos:position pos:line="7" pos:column="53"/></name><argument_list pos:line="7" pos:column="53">(<argument><expr><name pos:line="7" pos:column="54">r<pos:position pos:line="7" pos:column="55"/></name></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">require_line<pos:position pos:line="8" pos:column="17"/></name> <modifier pos:line="8" pos:column="18">*<pos:position pos:line="8" pos:column="19"/></modifier></type><name pos:line="8" pos:column="19">reqs<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><ternary><condition><expr><name pos:line="8" pos:column="26">reqs_arr<pos:position pos:line="8" pos:column="34"/></name></expr> ?<pos:position pos:line="8" pos:column="36"/></condition><then pos:line="8" pos:column="36"> <expr><operator pos:line="8" pos:column="37">(<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="38">require_line<pos:position pos:line="8" pos:column="50"/></name> <operator pos:line="8" pos:column="51">*<pos:position pos:line="8" pos:column="52"/></operator><operator pos:line="8" pos:column="52">)<pos:position pos:line="8" pos:column="53"/></operator> <name><name pos:line="8" pos:column="54">reqs_arr<pos:position pos:line="8" pos:column="62"/></name><operator pos:line="8" pos:column="62">-&gt;<pos:position pos:line="8" pos:column="67"/></operator><name pos:line="8" pos:column="64">elts<pos:position pos:line="8" pos:column="68"/></name></name></expr> <pos:position pos:line="8" pos:column="69"/></then><else pos:line="8" pos:column="69">: <expr><name pos:line="8" pos:column="71">NULL<pos:position pos:line="8" pos:column="75"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="8" pos:column="76"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">register<pos:position pos:line="9" pos:column="13"/></specifier> <name pos:line="9" pos:column="14">int<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">x<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">t<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">w<pos:position pos:line="11" pos:column="12"/></name></decl>;<pos:position pos:line="11" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">required_group<pos:position pos:line="12" pos:column="23"/></name> <init pos:line="12" pos:column="24">= <expr><literal type="number" pos:line="12" pos:column="26">0<pos:position pos:line="12" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">char<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">filegroup<pos:position pos:line="13" pos:column="26"/></name> <init pos:line="13" pos:column="27">= <expr><name pos:line="13" pos:column="29">NULL<pos:position pos:line="13" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="14" pos:column="5">const<pos:position pos:line="14" pos:column="10"/></specifier> <name pos:line="14" pos:column="11">char<pos:position pos:line="14" pos:column="15"/></name> <modifier pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></modifier></type><name pos:line="14" pos:column="17">orig_groups<pos:position pos:line="14" pos:column="28"/></name> <init pos:line="14" pos:column="29">= <expr><name pos:line="14" pos:column="31">NULL<pos:position pos:line="14" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name> <modifier pos:line="15" pos:column="10">*<pos:position pos:line="15" pos:column="11"/></modifier></type><name pos:line="15" pos:column="11">reason<pos:position pos:line="15" pos:column="17"/></name> <init pos:line="15" pos:column="18">= <expr><name pos:line="15" pos:column="20">NULL<pos:position pos:line="15" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="25"/></decl_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><name><name pos:line="17" pos:column="10">conf<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">grpfile<pos:position pos:line="17" pos:column="23"/></name></name></expr>)<pos:position pos:line="17" pos:column="24"/></condition><then pos:line="17" pos:column="24"> <block pos:line="17" pos:column="25">{
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">DECLINED<pos:position pos:line="18" pos:column="24"/></name></expr>;<pos:position pos:line="18" pos:column="25"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">reqs_arr<pos:position pos:line="21" pos:column="18"/></name></expr>)<pos:position pos:line="21" pos:column="19"/></condition><then pos:line="21" pos:column="19"> <block pos:line="21" pos:column="20">{
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">DECLINED<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <for pos:line="25" pos:column="5">for <control pos:line="25" pos:column="9">(<init><expr><name pos:line="25" pos:column="10">x<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <literal type="number" pos:line="25" pos:column="14">0<pos:position pos:line="25" pos:column="15"/></literal></expr>;<pos:position pos:line="25" pos:column="16"/></init> <condition><expr><name pos:line="25" pos:column="17">x<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">&lt;<pos:position pos:line="25" pos:column="23"/></operator> <name><name pos:line="25" pos:column="21">reqs_arr<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">-&gt;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="31">nelts<pos:position pos:line="25" pos:column="36"/></name></name></expr>;<pos:position pos:line="25" pos:column="37"/></condition> <incr><expr><name pos:line="25" pos:column="38">x<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">++<pos:position pos:line="25" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="42"/></control> <block pos:line="25" pos:column="43">{

        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><operator pos:line="27" pos:column="14">(<pos:position pos:line="27" pos:column="15"/></operator><name><name pos:line="27" pos:column="15">reqs<pos:position pos:line="27" pos:column="19"/></name><index pos:line="27" pos:column="19">[<expr><name pos:line="27" pos:column="20">x<pos:position pos:line="27" pos:column="21"/></name></expr>]<pos:position pos:line="27" pos:column="22"/></index></name><operator pos:line="27" pos:column="22">.<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">method_mask<pos:position pos:line="27" pos:column="34"/></name> <operator pos:line="27" pos:column="35">&amp;<pos:position pos:line="27" pos:column="40"/></operator> <operator pos:line="27" pos:column="37">(<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="38">AP_METHOD_BIT<pos:position pos:line="27" pos:column="51"/></name> <operator pos:line="27" pos:column="52">&lt;&lt;<pos:position pos:line="27" pos:column="60"/></operator> <name pos:line="27" pos:column="55">m<pos:position pos:line="27" pos:column="56"/></name><operator pos:line="27" pos:column="56">)<pos:position pos:line="27" pos:column="57"/></operator><operator pos:line="27" pos:column="57">)<pos:position pos:line="27" pos:column="58"/></operator></expr>)<pos:position pos:line="27" pos:column="59"/></condition><then pos:line="27" pos:column="59"> <block pos:line="27" pos:column="60">{
            <continue pos:line="28" pos:column="13">continue;<pos:position pos:line="28" pos:column="22"/></continue>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="31" pos:column="9">t<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <name><name pos:line="31" pos:column="13">reqs<pos:position pos:line="31" pos:column="17"/></name><index pos:line="31" pos:column="17">[<expr><name pos:line="31" pos:column="18">x<pos:position pos:line="31" pos:column="19"/></name></expr>]<pos:position pos:line="31" pos:column="20"/></index></name><operator pos:line="31" pos:column="20">.<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="21">requirement<pos:position pos:line="31" pos:column="32"/></name></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="32" pos:column="9">w<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <call><name pos:line="32" pos:column="13">ap_getword_white<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><name><name pos:line="32" pos:column="30">r<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">-&gt;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="33">pool<pos:position pos:line="32" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="39">&amp;<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="40">t<pos:position pos:line="32" pos:column="41"/></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>

        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><call><name pos:line="34" pos:column="14">strcasecmp<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><name pos:line="34" pos:column="25">w<pos:position pos:line="34" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="28">"file-group"<pos:position pos:line="34" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="42"/></condition><then pos:line="34" pos:column="42"> <block pos:line="34" pos:column="43">{
            <expr_stmt><expr><name pos:line="35" pos:column="13">filegroup<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <call><name pos:line="35" pos:column="25">apr_table_get<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name><name pos:line="35" pos:column="39">r<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">-&gt;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="42">notes<pos:position pos:line="35" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">AUTHZ_GROUP_NOTE<pos:position pos:line="35" pos:column="65"/></name></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="67"/></expr_stmt>

            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><operator pos:line="37" pos:column="17">!<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="18">filegroup<pos:position pos:line="37" pos:column="27"/></name></expr>)<pos:position pos:line="37" pos:column="28"/></condition><then pos:line="37" pos:column="28"> <block pos:line="37" pos:column="29">{
                <comment type="block" pos:line="38" pos:column="17">/* mod_authz_owner is not present or not
                 * authoritative. We are just a helper module for testing
                 * group membership, so we don't care and decline.
                 */</comment>
                <continue pos:line="42" pos:column="17">continue;<pos:position pos:line="42" pos:column="26"/></continue>
            }<pos:position pos:line="43" pos:column="14"/></block></then></if>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>

        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">!<pos:position pos:line="46" pos:column="14"/></operator><call><name pos:line="46" pos:column="14">strcasecmp<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><name pos:line="46" pos:column="25">w<pos:position pos:line="46" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="28">"group"<pos:position pos:line="46" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="36"/></argument_list></call> <operator pos:line="46" pos:column="37">||<pos:position pos:line="46" pos:column="39"/></operator> <name pos:line="46" pos:column="40">filegroup<pos:position pos:line="46" pos:column="49"/></name></expr>)<pos:position pos:line="46" pos:column="50"/></condition><then pos:line="46" pos:column="50"> <block pos:line="46" pos:column="51">{
            <decl_stmt><decl><type><specifier pos:line="47" pos:column="13">const<pos:position pos:line="47" pos:column="18"/></specifier> <name pos:line="47" pos:column="19">char<pos:position pos:line="47" pos:column="23"/></name> <modifier pos:line="47" pos:column="24">*<pos:position pos:line="47" pos:column="25"/></modifier></type><name pos:line="47" pos:column="25">realm<pos:position pos:line="47" pos:column="30"/></name> <init pos:line="47" pos:column="31">= <expr><call><name pos:line="47" pos:column="33">ap_auth_name<pos:position pos:line="47" pos:column="45"/></name><argument_list pos:line="47" pos:column="45">(<argument><expr><name pos:line="47" pos:column="46">r<pos:position pos:line="47" pos:column="47"/></name></expr></argument>)<pos:position pos:line="47" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="47" pos:column="49"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="48" pos:column="13">const<pos:position pos:line="48" pos:column="18"/></specifier> <name pos:line="48" pos:column="19">char<pos:position pos:line="48" pos:column="23"/></name> <modifier pos:line="48" pos:column="24">*<pos:position pos:line="48" pos:column="25"/></modifier></type><name pos:line="48" pos:column="25">groups<pos:position pos:line="48" pos:column="31"/></name></decl>;<pos:position pos:line="48" pos:column="32"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="49" pos:column="13">char<pos:position pos:line="49" pos:column="17"/></name> <modifier pos:line="49" pos:column="18">*<pos:position pos:line="49" pos:column="19"/></modifier></type><name pos:line="49" pos:column="19">v<pos:position pos:line="49" pos:column="20"/></name></decl>;<pos:position pos:line="49" pos:column="21"/></decl_stmt>

            <comment type="block" pos:line="51" pos:column="13">/* remember that actually a group is required */</comment>
            <expr_stmt><expr><name pos:line="52" pos:column="13">required_group<pos:position pos:line="52" pos:column="27"/></name> <operator pos:line="52" pos:column="28">=<pos:position pos:line="52" pos:column="29"/></operator> <literal type="number" pos:line="52" pos:column="30">1<pos:position pos:line="52" pos:column="31"/></literal></expr>;<pos:position pos:line="52" pos:column="32"/></expr_stmt>

            <comment type="block" pos:line="54" pos:column="13">/* fetch group data from dbm file only once. */</comment>
            <if pos:line="55" pos:column="13">if <condition pos:line="55" pos:column="16">(<expr><operator pos:line="55" pos:column="17">!<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="18">orig_groups<pos:position pos:line="55" pos:column="29"/></name></expr>)<pos:position pos:line="55" pos:column="30"/></condition><then pos:line="55" pos:column="30"> <block pos:line="55" pos:column="31">{
                <decl_stmt><decl><type><name pos:line="56" pos:column="17">apr_status_t<pos:position pos:line="56" pos:column="29"/></name></type> <name pos:line="56" pos:column="30">status<pos:position pos:line="56" pos:column="36"/></name></decl>;<pos:position pos:line="56" pos:column="37"/></decl_stmt>

                <expr_stmt><expr><name pos:line="58" pos:column="17">status<pos:position pos:line="58" pos:column="23"/></name> <operator pos:line="58" pos:column="24">=<pos:position pos:line="58" pos:column="25"/></operator> <call><name pos:line="58" pos:column="26">get_dbm_grp<pos:position pos:line="58" pos:column="37"/></name><argument_list pos:line="58" pos:column="37">(<argument><expr><name pos:line="58" pos:column="38">r<pos:position pos:line="58" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="41">apr_pstrcat<pos:position pos:line="58" pos:column="52"/></name><argument_list pos:line="58" pos:column="52">(<argument><expr><name><name pos:line="58" pos:column="53">r<pos:position pos:line="58" pos:column="54"/></name><operator pos:line="58" pos:column="54">-&gt;<pos:position pos:line="58" pos:column="59"/></operator><name pos:line="58" pos:column="56">pool<pos:position pos:line="58" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="62">user<pos:position pos:line="58" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="68">":"<pos:position pos:line="58" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="73">realm<pos:position pos:line="58" pos:column="78"/></name></expr></argument>,
                                                    <argument><expr><name pos:line="59" pos:column="53">NULL<pos:position pos:line="59" pos:column="57"/></name></expr></argument>)<pos:position pos:line="59" pos:column="58"/></argument_list></call></expr></argument>,
                                     <argument><expr><name pos:line="60" pos:column="38">user<pos:position pos:line="60" pos:column="42"/></name></expr></argument>,
                                     <argument><expr><name><name pos:line="61" pos:column="38">conf<pos:position pos:line="61" pos:column="42"/></name><operator pos:line="61" pos:column="42">-&gt;<pos:position pos:line="61" pos:column="47"/></operator><name pos:line="61" pos:column="44">grpfile<pos:position pos:line="61" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="53">conf<pos:position pos:line="61" pos:column="57"/></name><operator pos:line="61" pos:column="57">-&gt;<pos:position pos:line="61" pos:column="62"/></operator><name pos:line="61" pos:column="59">dbmtype<pos:position pos:line="61" pos:column="66"/></name></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="68">&amp;<pos:position pos:line="61" pos:column="73"/></operator><name pos:line="61" pos:column="69">groups<pos:position pos:line="61" pos:column="75"/></name></expr></argument>)<pos:position pos:line="61" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="77"/></expr_stmt>

                <if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><name pos:line="63" pos:column="21">status<pos:position pos:line="63" pos:column="27"/></name> <operator pos:line="63" pos:column="28">!=<pos:position pos:line="63" pos:column="30"/></operator> <name pos:line="63" pos:column="31">APR_SUCCESS<pos:position pos:line="63" pos:column="42"/></name></expr>)<pos:position pos:line="63" pos:column="43"/></condition><then pos:line="63" pos:column="43"> <block pos:line="63" pos:column="44">{
                    <expr_stmt><expr><call><name pos:line="64" pos:column="21">ap_log_rerror<pos:position pos:line="64" pos:column="34"/></name><argument_list pos:line="64" pos:column="34">(<argument><expr><name pos:line="64" pos:column="35">APLOG_MARK<pos:position pos:line="64" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="47">APLOG_ERR<pos:position pos:line="64" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="58">status<pos:position pos:line="64" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="66">r<pos:position pos:line="64" pos:column="67"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="65" pos:column="35">"could not open dbm (type %s) group access "<pos:position pos:line="65" pos:column="79"/></literal>
                                  <literal type="string" pos:line="66" pos:column="35">"file: %s"<pos:position pos:line="66" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="47">conf<pos:position pos:line="66" pos:column="51"/></name><operator pos:line="66" pos:column="51">-&gt;<pos:position pos:line="66" pos:column="56"/></operator><name pos:line="66" pos:column="53">dbmtype<pos:position pos:line="66" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="62">conf<pos:position pos:line="66" pos:column="66"/></name><operator pos:line="66" pos:column="66">-&gt;<pos:position pos:line="66" pos:column="71"/></operator><name pos:line="66" pos:column="68">grpfile<pos:position pos:line="66" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="77"/></expr_stmt>
                    <return pos:line="67" pos:column="21">return <expr><name pos:line="67" pos:column="28">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="67" pos:column="54"/></name></expr>;<pos:position pos:line="67" pos:column="55"/></return>
                }<pos:position pos:line="68" pos:column="18"/></block></then></if>

                <if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><name pos:line="70" pos:column="21">groups<pos:position pos:line="70" pos:column="27"/></name> <operator pos:line="70" pos:column="28">==<pos:position pos:line="70" pos:column="30"/></operator> <name pos:line="70" pos:column="31">NULL<pos:position pos:line="70" pos:column="35"/></name></expr>)<pos:position pos:line="70" pos:column="36"/></condition><then pos:line="70" pos:column="36"> <block pos:line="70" pos:column="37">{
                    <comment type="block" pos:line="71" pos:column="21">/* no groups available, so exit immediately */</comment>
                    <expr_stmt><expr><name pos:line="72" pos:column="21">reason<pos:position pos:line="72" pos:column="27"/></name> <operator pos:line="72" pos:column="28">=<pos:position pos:line="72" pos:column="29"/></operator> <call><name pos:line="72" pos:column="30">apr_psprintf<pos:position pos:line="72" pos:column="42"/></name><argument_list pos:line="72" pos:column="42">(<argument><expr><name><name pos:line="72" pos:column="43">r<pos:position pos:line="72" pos:column="44"/></name><operator pos:line="72" pos:column="44">-&gt;<pos:position pos:line="72" pos:column="49"/></operator><name pos:line="72" pos:column="46">pool<pos:position pos:line="72" pos:column="50"/></name></name></expr></argument>,
                                          <argument><expr><literal type="string" pos:line="73" pos:column="43">"user doesn't appear in DBM group "<pos:position pos:line="73" pos:column="78"/></literal>
                                          <literal type="string" pos:line="74" pos:column="43">"file (%s)."<pos:position pos:line="74" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="57">conf<pos:position pos:line="74" pos:column="61"/></name><operator pos:line="74" pos:column="61">-&gt;<pos:position pos:line="74" pos:column="66"/></operator><name pos:line="74" pos:column="63">grpfile<pos:position pos:line="74" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="72"/></expr_stmt>
                    <break pos:line="75" pos:column="21">break;<pos:position pos:line="75" pos:column="27"/></break>
                }<pos:position pos:line="76" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="78" pos:column="17">orig_groups<pos:position pos:line="78" pos:column="28"/></name> <operator pos:line="78" pos:column="29">=<pos:position pos:line="78" pos:column="30"/></operator> <name pos:line="78" pos:column="31">groups<pos:position pos:line="78" pos:column="37"/></name></expr>;<pos:position pos:line="78" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="79" pos:column="14"/></block></then></if>

            <if pos:line="81" pos:column="13">if <condition pos:line="81" pos:column="16">(<expr><name pos:line="81" pos:column="17">filegroup<pos:position pos:line="81" pos:column="26"/></name></expr>)<pos:position pos:line="81" pos:column="27"/></condition><then pos:line="81" pos:column="27"> <block pos:line="81" pos:column="28">{
                <expr_stmt><expr><name pos:line="82" pos:column="17">groups<pos:position pos:line="82" pos:column="23"/></name> <operator pos:line="82" pos:column="24">=<pos:position pos:line="82" pos:column="25"/></operator> <name pos:line="82" pos:column="26">orig_groups<pos:position pos:line="82" pos:column="37"/></name></expr>;<pos:position pos:line="82" pos:column="38"/></expr_stmt>
                <while pos:line="83" pos:column="17">while <condition pos:line="83" pos:column="23">(<expr><name><name pos:line="83" pos:column="24">groups<pos:position pos:line="83" pos:column="30"/></name><index pos:line="83" pos:column="30">[<expr><literal type="number" pos:line="83" pos:column="31">0<pos:position pos:line="83" pos:column="32"/></literal></expr>]<pos:position pos:line="83" pos:column="33"/></index></name></expr>)<pos:position pos:line="83" pos:column="34"/></condition> <block pos:line="83" pos:column="35">{
                    <expr_stmt><expr><name pos:line="84" pos:column="21">v<pos:position pos:line="84" pos:column="22"/></name> <operator pos:line="84" pos:column="23">=<pos:position pos:line="84" pos:column="24"/></operator> <call><name pos:line="84" pos:column="25">ap_getword<pos:position pos:line="84" pos:column="35"/></name><argument_list pos:line="84" pos:column="35">(<argument><expr><name><name pos:line="84" pos:column="36">r<pos:position pos:line="84" pos:column="37"/></name><operator pos:line="84" pos:column="37">-&gt;<pos:position pos:line="84" pos:column="42"/></operator><name pos:line="84" pos:column="39">pool<pos:position pos:line="84" pos:column="43"/></name></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="45">&amp;<pos:position pos:line="84" pos:column="50"/></operator><name pos:line="84" pos:column="46">groups<pos:position pos:line="84" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="84" pos:column="54">','<pos:position pos:line="84" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="59"/></expr_stmt>
                    <if pos:line="85" pos:column="21">if <condition pos:line="85" pos:column="24">(<expr><operator pos:line="85" pos:column="25">!<pos:position pos:line="85" pos:column="26"/></operator><call><name pos:line="85" pos:column="26">strcmp<pos:position pos:line="85" pos:column="32"/></name><argument_list pos:line="85" pos:column="32">(<argument><expr><name pos:line="85" pos:column="33">v<pos:position pos:line="85" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="36">filegroup<pos:position pos:line="85" pos:column="45"/></name></expr></argument>)<pos:position pos:line="85" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="47"/></condition><then pos:line="85" pos:column="47"> <block pos:line="85" pos:column="48">{
                        <return pos:line="86" pos:column="25">return <expr><name pos:line="86" pos:column="32">OK<pos:position pos:line="86" pos:column="34"/></name></expr>;<pos:position pos:line="86" pos:column="35"/></return>
                    }<pos:position pos:line="87" pos:column="22"/></block></then></if>
                }<pos:position pos:line="88" pos:column="18"/></block></while>

                <if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><name><name pos:line="90" pos:column="21">conf<pos:position pos:line="90" pos:column="25"/></name><operator pos:line="90" pos:column="25">-&gt;<pos:position pos:line="90" pos:column="30"/></operator><name pos:line="90" pos:column="27">authoritative<pos:position pos:line="90" pos:column="40"/></name></name></expr>)<pos:position pos:line="90" pos:column="41"/></condition><then pos:line="90" pos:column="41"> <block pos:line="90" pos:column="42">{
                    <expr_stmt><expr><name pos:line="91" pos:column="21">reason<pos:position pos:line="91" pos:column="27"/></name> <operator pos:line="91" pos:column="28">=<pos:position pos:line="91" pos:column="29"/></operator> <call><name pos:line="91" pos:column="30">apr_psprintf<pos:position pos:line="91" pos:column="42"/></name><argument_list pos:line="91" pos:column="42">(<argument><expr><name><name pos:line="91" pos:column="43">r<pos:position pos:line="91" pos:column="44"/></name><operator pos:line="91" pos:column="44">-&gt;<pos:position pos:line="91" pos:column="49"/></operator><name pos:line="91" pos:column="46">pool<pos:position pos:line="91" pos:column="50"/></name></name></expr></argument>,
                                          <argument><expr><literal type="string" pos:line="92" pos:column="43">"file group '%s' does not match."<pos:position pos:line="92" pos:column="76"/></literal></expr></argument>,
                                          <argument><expr><name pos:line="93" pos:column="43">filegroup<pos:position pos:line="93" pos:column="52"/></name></expr></argument>)<pos:position pos:line="93" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="54"/></expr_stmt>
                    <break pos:line="94" pos:column="21">break;<pos:position pos:line="94" pos:column="27"/></break>
                }<pos:position pos:line="95" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="97" pos:column="17">/* now forget the filegroup, thus alternatively require'd
                   groups get a real chance */</comment>
                <expr_stmt><expr><name pos:line="99" pos:column="17">filegroup<pos:position pos:line="99" pos:column="26"/></name> <operator pos:line="99" pos:column="27">=<pos:position pos:line="99" pos:column="28"/></operator> <name pos:line="99" pos:column="29">NULL<pos:position pos:line="99" pos:column="33"/></name></expr>;<pos:position pos:line="99" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="100" pos:column="14"/></block></then>
            <else pos:line="101" pos:column="13">else <block pos:line="101" pos:column="18">{
                <while pos:line="102" pos:column="17">while <condition pos:line="102" pos:column="23">(<expr><name><name pos:line="102" pos:column="24">t<pos:position pos:line="102" pos:column="25"/></name><index pos:line="102" pos:column="25">[<expr><literal type="number" pos:line="102" pos:column="26">0<pos:position pos:line="102" pos:column="27"/></literal></expr>]<pos:position pos:line="102" pos:column="28"/></index></name></expr>)<pos:position pos:line="102" pos:column="29"/></condition> <block pos:line="102" pos:column="30">{
                    <expr_stmt><expr><name pos:line="103" pos:column="21">w<pos:position pos:line="103" pos:column="22"/></name> <operator pos:line="103" pos:column="23">=<pos:position pos:line="103" pos:column="24"/></operator> <call><name pos:line="103" pos:column="25">ap_getword_white<pos:position pos:line="103" pos:column="41"/></name><argument_list pos:line="103" pos:column="41">(<argument><expr><name><name pos:line="103" pos:column="42">r<pos:position pos:line="103" pos:column="43"/></name><operator pos:line="103" pos:column="43">-&gt;<pos:position pos:line="103" pos:column="48"/></operator><name pos:line="103" pos:column="45">pool<pos:position pos:line="103" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="103" pos:column="51">&amp;<pos:position pos:line="103" pos:column="56"/></operator><name pos:line="103" pos:column="52">t<pos:position pos:line="103" pos:column="53"/></name></expr></argument>)<pos:position pos:line="103" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="55"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="104" pos:column="21">groups<pos:position pos:line="104" pos:column="27"/></name> <operator pos:line="104" pos:column="28">=<pos:position pos:line="104" pos:column="29"/></operator> <name pos:line="104" pos:column="30">orig_groups<pos:position pos:line="104" pos:column="41"/></name></expr>;<pos:position pos:line="104" pos:column="42"/></expr_stmt>
                    <while pos:line="105" pos:column="21">while <condition pos:line="105" pos:column="27">(<expr><name><name pos:line="105" pos:column="28">groups<pos:position pos:line="105" pos:column="34"/></name><index pos:line="105" pos:column="34">[<expr><literal type="number" pos:line="105" pos:column="35">0<pos:position pos:line="105" pos:column="36"/></literal></expr>]<pos:position pos:line="105" pos:column="37"/></index></name></expr>)<pos:position pos:line="105" pos:column="38"/></condition> <block pos:line="105" pos:column="39">{
                        <expr_stmt><expr><name pos:line="106" pos:column="25">v<pos:position pos:line="106" pos:column="26"/></name> <operator pos:line="106" pos:column="27">=<pos:position pos:line="106" pos:column="28"/></operator> <call><name pos:line="106" pos:column="29">ap_getword<pos:position pos:line="106" pos:column="39"/></name><argument_list pos:line="106" pos:column="39">(<argument><expr><name><name pos:line="106" pos:column="40">r<pos:position pos:line="106" pos:column="41"/></name><operator pos:line="106" pos:column="41">-&gt;<pos:position pos:line="106" pos:column="46"/></operator><name pos:line="106" pos:column="43">pool<pos:position pos:line="106" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="106" pos:column="49">&amp;<pos:position pos:line="106" pos:column="54"/></operator><name pos:line="106" pos:column="50">groups<pos:position pos:line="106" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="106" pos:column="58">','<pos:position pos:line="106" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="63"/></expr_stmt>
                        <if pos:line="107" pos:column="25">if <condition pos:line="107" pos:column="28">(<expr><operator pos:line="107" pos:column="29">!<pos:position pos:line="107" pos:column="30"/></operator><call><name pos:line="107" pos:column="30">strcmp<pos:position pos:line="107" pos:column="36"/></name><argument_list pos:line="107" pos:column="36">(<argument><expr><name pos:line="107" pos:column="37">v<pos:position pos:line="107" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="40">w<pos:position pos:line="107" pos:column="41"/></name></expr></argument>)<pos:position pos:line="107" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="107" pos:column="43"/></condition><then pos:line="107" pos:column="43"> <block pos:line="107" pos:column="44">{
                            <return pos:line="108" pos:column="29">return <expr><name pos:line="108" pos:column="36">OK<pos:position pos:line="108" pos:column="38"/></name></expr>;<pos:position pos:line="108" pos:column="39"/></return>
                        }<pos:position pos:line="109" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="110" pos:column="22"/></block></while>
                }<pos:position pos:line="111" pos:column="18"/></block></while>
            }<pos:position pos:line="112" pos:column="14"/></block></else></if>
        }<pos:position pos:line="113" pos:column="10"/></block></then></if>
    }<pos:position pos:line="114" pos:column="6"/></block></for>

    <comment type="block" pos:line="116" pos:column="5">/* No applicable "require group" for this method seen */</comment>
    <if pos:line="117" pos:column="5">if <condition pos:line="117" pos:column="8">(<expr><operator pos:line="117" pos:column="9">!<pos:position pos:line="117" pos:column="10"/></operator><name pos:line="117" pos:column="10">required_group<pos:position pos:line="117" pos:column="24"/></name> <operator pos:line="117" pos:column="25">||<pos:position pos:line="117" pos:column="27"/></operator> <operator pos:line="117" pos:column="28">!<pos:position pos:line="117" pos:column="29"/></operator><name><name pos:line="117" pos:column="29">conf<pos:position pos:line="117" pos:column="33"/></name><operator pos:line="117" pos:column="33">-&gt;<pos:position pos:line="117" pos:column="38"/></operator><name pos:line="117" pos:column="35">authoritative<pos:position pos:line="117" pos:column="48"/></name></name></expr>)<pos:position pos:line="117" pos:column="49"/></condition><then pos:line="117" pos:column="49"> <block pos:line="117" pos:column="50">{
        <return pos:line="118" pos:column="9">return <expr><name pos:line="118" pos:column="16">DECLINED<pos:position pos:line="118" pos:column="24"/></name></expr>;<pos:position pos:line="118" pos:column="25"/></return>
    }<pos:position pos:line="119" pos:column="6"/></block></then></if>

    <macro><name pos:line="121" pos:column="5">ap_log_rerror<pos:position pos:line="121" pos:column="18"/></name><argument_list pos:line="121" pos:column="18">(<argument pos:line="121" pos:column="19">APLOG_MARK<pos:position pos:line="121" pos:column="29"/></argument>, <argument pos:line="121" pos:column="31">APLOG_ERR<pos:position pos:line="121" pos:column="40"/></argument>, <argument><literal type="number" pos:line="121" pos:column="42">0<pos:position pos:line="121" pos:column="43"/></literal></argument>, <argument pos:line="121" pos:column="45">r<pos:position pos:line="121" pos:column="46"/></argument>,
                  <argument><literal type="string" pos:line="122" pos:column="19">"<pos:position pos:line="122" pos:column="20"/></literal></argument></argument_list></macro></block></function>Authorization of user %s to access %s failed, re</unit>

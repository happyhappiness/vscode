<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3140_httpd-2.2.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier> <name pos:line="1" pos:column="8">XMLCALL<pos:position pos:line="1" pos:column="15"/></name></type>
<name pos:line="2" pos:column="1">XML_GetBuffer<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">XML_Parser<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">parser<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">len<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">len<pos:position pos:line="4" pos:column="10"/></name> <operator pos:line="4" pos:column="11">&gt;<pos:position pos:line="4" pos:column="15"/></operator> <name pos:line="4" pos:column="13">bufferLim<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">-<pos:position pos:line="4" pos:column="24"/></operator> <name pos:line="4" pos:column="25">bufferEnd<pos:position pos:line="4" pos:column="34"/></name></expr>)<pos:position pos:line="4" pos:column="35"/></condition><then pos:line="4" pos:column="35"> <block pos:line="4" pos:column="36">{
    <comment type="block" pos:line="5" pos:column="5">/* FIXME avoid integer overflow */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">neededSize<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">len<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">+<pos:position pos:line="6" pos:column="27"/></operator> <operator pos:line="6" pos:column="28">(<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">bufferEnd<pos:position pos:line="6" pos:column="38"/></name> <operator pos:line="6" pos:column="39">-<pos:position pos:line="6" pos:column="40"/></operator> <name pos:line="6" pos:column="41">bufferPtr<pos:position pos:line="6" pos:column="50"/></name><operator pos:line="6" pos:column="50">)<pos:position pos:line="6" pos:column="51"/></operator></expr></init></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>
<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">XML_CONTEXT_BYTES<pos:position pos:line="7" pos:column="25"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">keep<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><name pos:line="8" pos:column="16">bufferPtr<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">-<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="28">buffer<pos:position pos:line="8" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">keep<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">&gt;<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="16">XML_CONTEXT_BYTES<pos:position pos:line="10" pos:column="33"/></name></expr>)<pos:position pos:line="10" pos:column="34"/></condition><then pos:line="10" pos:column="34">
      <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="7">keep<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">XML_CONTEXT_BYTES<pos:position pos:line="11" pos:column="31"/></name></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="12" pos:column="5">neededSize<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">+=<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">keep<pos:position pos:line="12" pos:column="23"/></name></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>  <comment type="block" pos:line="13" pos:column="9">/* defined XML_CONTEXT_BYTES */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">neededSize<pos:position pos:line="14" pos:column="19"/></name>  <operator pos:line="14" pos:column="21">&lt;=<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="24">bufferLim<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">-<pos:position pos:line="14" pos:column="35"/></operator> <name pos:line="14" pos:column="36">buffer<pos:position pos:line="14" pos:column="42"/></name></expr>)<pos:position pos:line="14" pos:column="43"/></condition><then pos:line="14" pos:column="43"> <block pos:line="14" pos:column="44">{
<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">XML_CONTEXT_BYTES<pos:position pos:line="15" pos:column="25"/></name></cpp:ifdef>
      <if pos:line="16" pos:column="7">if <condition pos:line="16" pos:column="10">(<expr><name pos:line="16" pos:column="11">keep<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">&lt;<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="18">bufferPtr<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">-<pos:position pos:line="16" pos:column="29"/></operator> <name pos:line="16" pos:column="30">buffer<pos:position pos:line="16" pos:column="36"/></name></expr>)<pos:position pos:line="16" pos:column="37"/></condition><then pos:line="16" pos:column="37"> <block pos:line="16" pos:column="38">{
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">int<pos:position pos:line="17" pos:column="12"/></name></type> <name pos:line="17" pos:column="13">offset<pos:position pos:line="17" pos:column="19"/></name> <init pos:line="17" pos:column="20">= <expr><operator pos:line="17" pos:column="22">(<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">bufferPtr<pos:position pos:line="17" pos:column="32"/></name> <operator pos:line="17" pos:column="33">-<pos:position pos:line="17" pos:column="34"/></operator> <name pos:line="17" pos:column="35">buffer<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">)<pos:position pos:line="17" pos:column="42"/></operator> <operator pos:line="17" pos:column="43">-<pos:position pos:line="17" pos:column="44"/></operator> <name pos:line="17" pos:column="45">keep<pos:position pos:line="17" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="50"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">memmove<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">buffer<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="25">&amp;<pos:position pos:line="18" pos:column="30"/></operator><name><name pos:line="18" pos:column="26">buffer<pos:position pos:line="18" pos:column="32"/></name><index pos:line="18" pos:column="32">[<expr><name pos:line="18" pos:column="33">offset<pos:position pos:line="18" pos:column="39"/></name></expr>]<pos:position pos:line="18" pos:column="40"/></index></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="42">bufferEnd<pos:position pos:line="18" pos:column="51"/></name> <operator pos:line="18" pos:column="52">-<pos:position pos:line="18" pos:column="53"/></operator> <name pos:line="18" pos:column="54">bufferPtr<pos:position pos:line="18" pos:column="63"/></name> <operator pos:line="18" pos:column="64">+<pos:position pos:line="18" pos:column="65"/></operator> <name pos:line="18" pos:column="66">keep<pos:position pos:line="18" pos:column="70"/></name></expr></argument>)<pos:position pos:line="18" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">bufferEnd<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">-=<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="22">offset<pos:position pos:line="19" pos:column="28"/></name></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">bufferPtr<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">-=<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">offset<pos:position pos:line="20" pos:column="28"/></name></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
      }<pos:position pos:line="21" pos:column="8"/></block></then></if>
<cpp:else pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">else<pos:position pos:line="22" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">memmove<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><name pos:line="23" pos:column="15">buffer<pos:position pos:line="23" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="23">bufferPtr<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">bufferEnd<pos:position pos:line="23" pos:column="43"/></name> <operator pos:line="23" pos:column="44">-<pos:position pos:line="23" pos:column="45"/></operator> <name pos:line="23" pos:column="46">bufferPtr<pos:position pos:line="23" pos:column="55"/></name></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><name pos:line="24" pos:column="7">bufferEnd<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">buffer<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">+<pos:position pos:line="24" pos:column="27"/></operator> <operator pos:line="24" pos:column="28">(<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="29">bufferEnd<pos:position pos:line="24" pos:column="38"/></name> <operator pos:line="24" pos:column="39">-<pos:position pos:line="24" pos:column="40"/></operator> <name pos:line="24" pos:column="41">bufferPtr<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">)<pos:position pos:line="24" pos:column="51"/></operator></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name pos:line="25" pos:column="7">bufferPtr<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">buffer<pos:position pos:line="25" pos:column="25"/></name></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>  <comment type="block" pos:line="26" pos:column="9">/* not defined XML_CONTEXT_BYTES */</comment>
    }<pos:position pos:line="27" pos:column="6"/></block></then>
    <else pos:line="28" pos:column="5">else <block pos:line="28" pos:column="10">{
      <decl_stmt><decl><type><name pos:line="29" pos:column="7">char<pos:position pos:line="29" pos:column="11"/></name> <modifier pos:line="29" pos:column="12">*<pos:position pos:line="29" pos:column="13"/></modifier></type><name pos:line="29" pos:column="13">newBuf<pos:position pos:line="29" pos:column="19"/></name></decl>;<pos:position pos:line="29" pos:column="20"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="30" pos:column="7">int<pos:position pos:line="30" pos:column="10"/></name></type> <name pos:line="30" pos:column="11">bufferSize<pos:position pos:line="30" pos:column="21"/></name> <init pos:line="30" pos:column="22">= <expr><name pos:line="30" pos:column="24">bufferLim<pos:position pos:line="30" pos:column="33"/></name> <operator pos:line="30" pos:column="34">-<pos:position pos:line="30" pos:column="35"/></operator> <name pos:line="30" pos:column="36">bufferPtr<pos:position pos:line="30" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="46"/></decl_stmt>
      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><name pos:line="31" pos:column="11">bufferSize<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">==<pos:position pos:line="31" pos:column="24"/></operator> <literal type="number" pos:line="31" pos:column="25">0<pos:position pos:line="31" pos:column="26"/></literal></expr>)<pos:position pos:line="31" pos:column="27"/></condition><then pos:line="31" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="9">bufferSize<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="22">INIT_BUFFER_SIZE<pos:position pos:line="32" pos:column="38"/></name></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt></block></then></if>
      <do pos:line="33" pos:column="7">do <block pos:line="33" pos:column="10">{
        <expr_stmt><expr><name pos:line="34" pos:column="9">bufferSize<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">*=<pos:position pos:line="34" pos:column="22"/></operator> <literal type="number" pos:line="34" pos:column="23">2<pos:position pos:line="34" pos:column="24"/></literal></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="35" pos:column="8"/></block> while <condition pos:line="35" pos:column="15">(<expr><name pos:line="35" pos:column="16">bufferSize<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">&lt;<pos:position pos:line="35" pos:column="31"/></operator> <name pos:line="35" pos:column="29">neededSize<pos:position pos:line="35" pos:column="39"/></name></expr>)<pos:position pos:line="35" pos:column="40"/></condition>;<pos:position pos:line="35" pos:column="41"/></do>
      <expr_stmt><expr><name pos:line="36" pos:column="7">newBuf<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <operator pos:line="36" pos:column="16">(<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">char<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">*<pos:position pos:line="36" pos:column="23"/></operator><operator pos:line="36" pos:column="23">)<pos:position pos:line="36" pos:column="24"/></operator><call><name pos:line="36" pos:column="24">MALLOC<pos:position pos:line="36" pos:column="30"/></name><argument_list pos:line="36" pos:column="30">(<argument><expr><name pos:line="36" pos:column="31">bufferSize<pos:position pos:line="36" pos:column="41"/></name></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt>
      <if pos:line="37" pos:column="7">if <condition pos:line="37" pos:column="10">(<expr><name pos:line="37" pos:column="11">newBuf<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">==<pos:position pos:line="37" pos:column="20"/></operator> <literal type="number" pos:line="37" pos:column="21">0<pos:position pos:line="37" pos:column="22"/></literal></expr>)<pos:position pos:line="37" pos:column="23"/></condition><then pos:line="37" pos:column="23"> <block pos:line="37" pos:column="24">{
        <expr_stmt><expr><name pos:line="38" pos:column="9">errorCode<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <name pos:line="38" pos:column="21">XML_ERROR_NO_MEMORY<pos:position pos:line="38" pos:column="40"/></name></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">NULL<pos:position pos:line="39" pos:column="20"/></name></expr>;<pos:position pos:line="39" pos:column="21"/></return>
      }<pos:position pos:line="40" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="41" pos:column="7">bufferLim<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <name pos:line="41" pos:column="19">newBuf<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">+<pos:position pos:line="41" pos:column="27"/></operator> <name pos:line="41" pos:column="28">bufferSize<pos:position pos:line="41" pos:column="38"/></name></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt>
<cpp:ifdef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifdef<pos:position pos:line="42" pos:column="7"/></cpp:directive> <name pos:line="42" pos:column="8">XML_CONTEXT_BYTES<pos:position pos:line="42" pos:column="25"/></name></cpp:ifdef>
      <if pos:line="43" pos:column="7">if <condition pos:line="43" pos:column="10">(<expr><name pos:line="43" pos:column="11">bufferPtr<pos:position pos:line="43" pos:column="20"/></name></expr>)<pos:position pos:line="43" pos:column="21"/></condition><then pos:line="43" pos:column="21"> <block pos:line="43" pos:column="22">{
        <decl_stmt><decl><type><name pos:line="44" pos:column="9">int<pos:position pos:line="44" pos:column="12"/></name></type> <name pos:line="44" pos:column="13">keep<pos:position pos:line="44" pos:column="17"/></name> <init pos:line="44" pos:column="18">= <expr><name pos:line="44" pos:column="20">bufferPtr<pos:position pos:line="44" pos:column="29"/></name> <operator pos:line="44" pos:column="30">-<pos:position pos:line="44" pos:column="31"/></operator> <name pos:line="44" pos:column="32">buffer<pos:position pos:line="44" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="44" pos:column="39"/></decl_stmt>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">keep<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">&gt;<pos:position pos:line="45" pos:column="22"/></operator> <name pos:line="45" pos:column="20">XML_CONTEXT_BYTES<pos:position pos:line="45" pos:column="37"/></name></expr>)<pos:position pos:line="45" pos:column="38"/></condition><then pos:line="45" pos:column="38">
          <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="11">keep<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <name pos:line="46" pos:column="18">XML_CONTEXT_BYTES<pos:position pos:line="46" pos:column="35"/></name></expr>;<pos:position pos:line="46" pos:column="36"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">memcpy<pos:position pos:line="47" pos:column="15"/></name><argument_list pos:line="47" pos:column="15">(<argument><expr><name pos:line="47" pos:column="16">newBuf<pos:position pos:line="47" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="24">&amp;<pos:position pos:line="47" pos:column="29"/></operator><name><name pos:line="47" pos:column="25">bufferPtr<pos:position pos:line="47" pos:column="34"/></name><index pos:line="47" pos:column="34">[<expr><operator pos:line="47" pos:column="35">-<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="36">keep<pos:position pos:line="47" pos:column="40"/></name></expr>]<pos:position pos:line="47" pos:column="41"/></index></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="43">bufferEnd<pos:position pos:line="47" pos:column="52"/></name> <operator pos:line="47" pos:column="53">-<pos:position pos:line="47" pos:column="54"/></operator> <name pos:line="47" pos:column="55">bufferPtr<pos:position pos:line="47" pos:column="64"/></name> <operator pos:line="47" pos:column="65">+<pos:position pos:line="47" pos:column="66"/></operator> <name pos:line="47" pos:column="67">keep<pos:position pos:line="47" pos:column="71"/></name></expr></argument>)<pos:position pos:line="47" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">FREE<pos:position pos:line="48" pos:column="13"/></name><argument_list pos:line="48" pos:column="13">(<argument><expr><name pos:line="48" pos:column="14">buffer<pos:position pos:line="48" pos:column="20"/></name></expr></argument>)<pos:position pos:line="48" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="49" pos:column="9">buffer<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <name pos:line="49" pos:column="18">newBuf<pos:position pos:line="49" pos:column="24"/></name></expr>;<pos:position pos:line="49" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="50" pos:column="9">bufferEnd<pos:position pos:line="50" pos:column="18"/></name> <operator pos:line="50" pos:column="19">=<pos:position pos:line="50" pos:column="20"/></operator> <name pos:line="50" pos:column="21">buffer<pos:position pos:line="50" pos:column="27"/></name> <operator pos:line="50" pos:column="28">+<pos:position pos:line="50" pos:column="29"/></operator> <operator pos:line="50" pos:column="30">(<pos:position pos:line="50" pos:column="31"/></operator><name pos:line="50" pos:column="31">bufferEnd<pos:position pos:line="50" pos:column="40"/></name> <operator pos:line="50" pos:column="41">-<pos:position pos:line="50" pos:column="42"/></operator> <name pos:line="50" pos:column="43">bufferPtr<pos:position pos:line="50" pos:column="52"/></name><operator pos:line="50" pos:column="52">)<pos:position pos:line="50" pos:column="53"/></operator> <operator pos:line="50" pos:column="54">+<pos:position pos:line="50" pos:column="55"/></operator> <name pos:line="50" pos:column="56">keep<pos:position pos:line="50" pos:column="60"/></name></expr>;<pos:position pos:line="50" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">bufferPtr<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">=<pos:position pos:line="51" pos:column="20"/></operator> <name pos:line="51" pos:column="21">buffer<pos:position pos:line="51" pos:column="27"/></name> <operator pos:line="51" pos:column="28">+<pos:position pos:line="51" pos:column="29"/></operator> <name pos:line="51" pos:column="30">keep<pos:position pos:line="51" pos:column="34"/></name></expr>;<pos:position pos:line="51" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="52" pos:column="8"/></block></then>
      <else pos:line="53" pos:column="7">else <block pos:line="53" pos:column="12">{
        <expr_stmt><expr><name pos:line="54" pos:column="9">bufferEnd<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">=<pos:position pos:line="54" pos:column="20"/></operator> <name pos:line="54" pos:column="21">newBuf<pos:position pos:line="54" pos:column="27"/></name> <operator pos:line="54" pos:column="28">+<pos:position pos:line="54" pos:column="29"/></operator> <operator pos:line="54" pos:column="30">(<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="31">bufferEnd<pos:position pos:line="54" pos:column="40"/></name> <operator pos:line="54" pos:column="41">-<pos:position pos:line="54" pos:column="42"/></operator> <name pos:line="54" pos:column="43">bufferPtr<pos:position pos:line="54" pos:column="52"/></name><operator pos:line="54" pos:column="52">)<pos:position pos:line="54" pos:column="53"/></operator></expr>;<pos:position pos:line="54" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name pos:line="55" pos:column="9">bufferPtr<pos:position pos:line="55" pos:column="18"/></name> <operator pos:line="55" pos:column="19">=<pos:position pos:line="55" pos:column="20"/></operator> <name pos:line="55" pos:column="21">buffer<pos:position pos:line="55" pos:column="27"/></name> <operator pos:line="55" pos:column="28">=<pos:position pos:line="55" pos:column="29"/></operator> <name pos:line="55" pos:column="30">newBuf<pos:position pos:line="55" pos:column="36"/></name></expr>;<pos:position pos:line="55" pos:column="37"/></expr_stmt>
      }<pos:position pos:line="56" pos:column="8"/></block></else></if>
<cpp:else pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">else<pos:position pos:line="57" pos:column="6"/></cpp:directive></cpp:else>
      <if pos:line="58" pos:column="7">if <condition pos:line="58" pos:column="10">(<expr><name pos:line="58" pos:column="11">bufferPtr<pos:position pos:line="58" pos:column="20"/></name></expr>)<pos:position pos:line="58" pos:column="21"/></condition><then pos:line="58" pos:column="21"> <block pos:line="58" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">memcpy<pos:position pos:line="59" pos:column="15"/></name><argument_list pos:line="59" pos:column="15">(<argument><expr><name pos:line="59" pos:column="16">newBuf<pos:position pos:line="59" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="24">bufferPtr<pos:position pos:line="59" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="35">bufferEnd<pos:position pos:line="59" pos:column="44"/></name> <operator pos:line="59" pos:column="45">-<pos:position pos:line="59" pos:column="46"/></operator> <name pos:line="59" pos:column="47">bufferPtr<pos:position pos:line="59" pos:column="56"/></name></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">FREE<pos:position pos:line="60" pos:column="13"/></name><argument_list pos:line="60" pos:column="13">(<argument><expr><name pos:line="60" pos:column="14">buffer<pos:position pos:line="60" pos:column="20"/></name></expr></argument>)<pos:position pos:line="60" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="22"/></expr_stmt>
      }<pos:position pos:line="61" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="62" pos:column="7">bufferEnd<pos:position pos:line="62" pos:column="16"/></name> <operator pos:line="62" pos:column="17">=<pos:position pos:line="62" pos:column="18"/></operator> <name pos:line="62" pos:column="19">newBuf<pos:position pos:line="62" pos:column="25"/></name> <operator pos:line="62" pos:column="26">+<pos:position pos:line="62" pos:column="27"/></operator> <operator pos:line="62" pos:column="28">(<pos:position pos:line="62" pos:column="29"/></operator><name pos:line="62" pos:column="29">bufferEnd<pos:position pos:line="62" pos:column="38"/></name> <operator pos:line="62" pos:column="39">-<pos:position pos:line="62" pos:column="40"/></operator> <name pos:line="62" pos:column="41">bufferPtr<pos:position pos:line="62" pos:column="50"/></name><operator pos:line="62" pos:column="50">)<pos:position pos:line="62" pos:column="51"/></operator></expr>;<pos:position pos:line="62" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name pos:line="63" pos:column="7">bufferPtr<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">=<pos:position pos:line="63" pos:column="18"/></operator> <name pos:line="63" pos:column="19">buffer<pos:position pos:line="63" pos:column="25"/></name> <operator pos:line="63" pos:column="26">=<pos:position pos:line="63" pos:column="27"/></operator> <name pos:line="63" pos:column="28">newBuf<pos:position pos:line="63" pos:column="34"/></name></expr>;<pos:position pos:line="63" pos:column="35"/></expr_stmt>
<cpp:endif pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">endif<pos:position pos:line="64" pos:column="7"/></cpp:directive></cpp:endif>  <comment type="block" pos:line="64" pos:column="9">/* not defined XML_CONTEXT_BYTES */</comment>
    }<pos:position pos:line="65" pos:column="6"/></block></else></if>
  }<pos:position pos:line="66" pos:column="4"/></block></then></if>
  <return pos:line="67" pos:column="3">return <expr><name pos:line="67" pos:column="10">bufferEnd<pos:position pos:line="67" pos:column="19"/></name></expr>;<pos:position pos:line="67" pos:column="20"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

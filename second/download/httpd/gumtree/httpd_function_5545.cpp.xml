<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5545.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">doRotate<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">rotate_config_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">config<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">rotate_status_t<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">status<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{

    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">now<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><call><name pos:line="4" pos:column="15">get_now<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><name pos:line="4" pos:column="23">config<pos:position pos:line="4" pos:column="29"/></name></expr></argument>)<pos:position pos:line="4" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">tLogStart<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">logfile<pos:position pos:line="7" pos:column="19"/></name></name></type> <name pos:line="7" pos:column="20">newlog<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="9" pos:column="5">status<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">rotateReason<pos:position pos:line="9" pos:column="25"/></name></name> <operator pos:line="9" pos:column="26">=<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="28">ROTATE_NONE<pos:position pos:line="9" pos:column="39"/></name></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">config<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">tRotation<pos:position pos:line="11" pos:column="26"/></name></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27"> <block pos:line="11" pos:column="28">{
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">tLogEnd<pos:position pos:line="12" pos:column="20"/></name></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>
        <expr_stmt><expr><name pos:line="13" pos:column="9">tLogStart<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <operator pos:line="13" pos:column="21">(<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">now<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">/<pos:position pos:line="13" pos:column="27"/></operator> <name><name pos:line="13" pos:column="28">config<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">-&gt;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="36">tRotation<pos:position pos:line="13" pos:column="45"/></name></name><operator pos:line="13" pos:column="45">)<pos:position pos:line="13" pos:column="46"/></operator> <operator pos:line="13" pos:column="47">*<pos:position pos:line="13" pos:column="48"/></operator> <name><name pos:line="13" pos:column="49">config<pos:position pos:line="13" pos:column="55"/></name><operator pos:line="13" pos:column="55">-&gt;<pos:position pos:line="13" pos:column="60"/></operator><name pos:line="13" pos:column="57">tRotation<pos:position pos:line="13" pos:column="66"/></name></name></expr>;<pos:position pos:line="13" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">tLogEnd<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">tLogStart<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">+<pos:position pos:line="14" pos:column="30"/></operator> <name><name pos:line="14" pos:column="31">config<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">-&gt;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="39">tRotation<pos:position pos:line="14" pos:column="48"/></name></name></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>
        <comment type="block" pos:line="15" pos:column="9">/*
         * Check if rotation was forced and the last rotation
         * interval is not yet over. Use the value of now instead
         * of the time interval boundary for the file name then.
         */</comment>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">tLogStart<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&lt;<pos:position pos:line="20" pos:column="27"/></operator> <name><name pos:line="20" pos:column="25">status<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">-&gt;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="33">tLogEnd<pos:position pos:line="20" pos:column="40"/></name></name></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41"> <block pos:line="20" pos:column="42">{
            <expr_stmt><expr><name pos:line="21" pos:column="13">tLogStart<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">now<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">status<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">-&gt;<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="17">tLogEnd<pos:position pos:line="23" pos:column="24"/></name></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <name pos:line="23" pos:column="27">tLogEnd<pos:position pos:line="23" pos:column="34"/></name></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then>
    <else pos:line="25" pos:column="5">else <block pos:line="25" pos:column="10">{
        <expr_stmt><expr><name pos:line="26" pos:column="9">tLogStart<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <name pos:line="26" pos:column="21">now<pos:position pos:line="26" pos:column="24"/></name></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></else></if>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">config<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">-&gt;<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="17">use_strftime<pos:position pos:line="29" pos:column="29"/></name></name></expr>)<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30"> <block pos:line="29" pos:column="31">{
        <decl_stmt><decl><type><name pos:line="30" pos:column="9">apr_time_t<pos:position pos:line="30" pos:column="19"/></name></type> <name pos:line="30" pos:column="20">tNow<pos:position pos:line="30" pos:column="24"/></name> <init pos:line="30" pos:column="25">= <expr><call><name pos:line="30" pos:column="27">apr_time_from_sec<pos:position pos:line="30" pos:column="44"/></name><argument_list pos:line="30" pos:column="44">(<argument><expr><name pos:line="30" pos:column="45">tLogStart<pos:position pos:line="30" pos:column="54"/></name></expr></argument>)<pos:position pos:line="30" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="56"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">apr_time_exp_t<pos:position pos:line="31" pos:column="23"/></name></type> <name pos:line="31" pos:column="24">e<pos:position pos:line="31" pos:column="25"/></name></decl>;<pos:position pos:line="31" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">apr_size_t<pos:position pos:line="32" pos:column="19"/></name></type> <name pos:line="32" pos:column="20">rs<pos:position pos:line="32" pos:column="22"/></name></decl>;<pos:position pos:line="32" pos:column="23"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="34" pos:column="9">apr_time_exp_gmt<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><operator pos:line="34" pos:column="26">&amp;<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="27">e<pos:position pos:line="34" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="30">tNow<pos:position pos:line="34" pos:column="34"/></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">apr_strftime<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><name><name pos:line="35" pos:column="22">newlog<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">.<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="29">name<pos:position pos:line="35" pos:column="33"/></name></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="35">&amp;<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="36">rs<pos:position pos:line="35" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="40">sizeof<argument_list pos:line="35" pos:column="46">(<argument><expr><name><name pos:line="35" pos:column="47">newlog<pos:position pos:line="35" pos:column="53"/></name><operator pos:line="35" pos:column="53">.<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="54">name<pos:position pos:line="35" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="61">config<pos:position pos:line="35" pos:column="67"/></name><operator pos:line="35" pos:column="67">-&gt;<pos:position pos:line="35" pos:column="72"/></operator><name pos:line="35" pos:column="69">szLogRoot<pos:position pos:line="35" pos:column="78"/></name></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="80">&amp;<pos:position pos:line="35" pos:column="85"/></operator><name pos:line="35" pos:column="81">e<pos:position pos:line="35" pos:column="82"/></name></expr></argument>)<pos:position pos:line="35" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="84"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then>
    <else pos:line="37" pos:column="5">else <block pos:line="37" pos:column="10">{
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name><name pos:line="38" pos:column="13">config<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">-&gt;<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="21">truncate<pos:position pos:line="38" pos:column="29"/></name></name></expr>)<pos:position pos:line="38" pos:column="30"/></condition><then pos:line="38" pos:column="30"> <block pos:line="38" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">apr_snprintf<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><name><name pos:line="39" pos:column="26">newlog<pos:position pos:line="39" pos:column="32"/></name><operator pos:line="39" pos:column="32">.<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="33">name<pos:position pos:line="39" pos:column="37"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="39">sizeof<argument_list pos:line="39" pos:column="45">(<argument><expr><name><name pos:line="39" pos:column="46">newlog<pos:position pos:line="39" pos:column="52"/></name><operator pos:line="39" pos:column="52">.<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="53">name<pos:position pos:line="39" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="58"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="60">"%s"<pos:position pos:line="39" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="66">config<pos:position pos:line="39" pos:column="72"/></name><operator pos:line="39" pos:column="72">-&gt;<pos:position pos:line="39" pos:column="77"/></operator><name pos:line="39" pos:column="74">szLogRoot<pos:position pos:line="39" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="85"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then>
        <else pos:line="41" pos:column="9">else <block pos:line="41" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">apr_snprintf<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><name><name pos:line="42" pos:column="26">newlog<pos:position pos:line="42" pos:column="32"/></name><operator pos:line="42" pos:column="32">.<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="33">name<pos:position pos:line="42" pos:column="37"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="39">sizeof<argument_list pos:line="42" pos:column="45">(<argument><expr><name><name pos:line="42" pos:column="46">newlog<pos:position pos:line="42" pos:column="52"/></name><operator pos:line="42" pos:column="52">.<pos:position pos:line="42" pos:column="53"/></operator><name pos:line="42" pos:column="53">name<pos:position pos:line="42" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="58"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="60">"%s.%010d"<pos:position pos:line="42" pos:column="70"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="72">config<pos:position pos:line="42" pos:column="78"/></name><operator pos:line="42" pos:column="78">-&gt;<pos:position pos:line="42" pos:column="83"/></operator><name pos:line="42" pos:column="80">szLogRoot<pos:position pos:line="42" pos:column="89"/></name></name></expr></argument>,
                         <argument><expr><name pos:line="43" pos:column="26">tLogStart<pos:position pos:line="43" pos:column="35"/></name></expr></argument>)<pos:position pos:line="43" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block></else></if>
    }<pos:position pos:line="45" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">apr_pool_create<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><operator pos:line="46" pos:column="21">&amp;<pos:position pos:line="46" pos:column="26"/></operator><name><name pos:line="46" pos:column="22">newlog<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">.<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="29">pool<pos:position pos:line="46" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="35">status<pos:position pos:line="46" pos:column="41"/></name><operator pos:line="46" pos:column="41">-&gt;<pos:position pos:line="46" pos:column="46"/></operator><name pos:line="46" pos:column="43">pool<pos:position pos:line="46" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="49"/></expr_stmt>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name><name pos:line="47" pos:column="9">config<pos:position pos:line="47" pos:column="15"/></name><operator pos:line="47" pos:column="15">-&gt;<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="17">verbose<pos:position pos:line="47" pos:column="24"/></name></name></expr>)<pos:position pos:line="47" pos:column="25"/></condition><then pos:line="47" pos:column="25"> <block pos:line="47" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">fprintf<pos:position pos:line="48" pos:column="16"/></name><argument_list pos:line="48" pos:column="16">(<argument><expr><name pos:line="48" pos:column="17">stderr<pos:position pos:line="48" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="25">"Opening file %s\n"<pos:position pos:line="48" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="46">newlog<pos:position pos:line="48" pos:column="52"/></name><operator pos:line="48" pos:column="52">.<pos:position pos:line="48" pos:column="53"/></operator><name pos:line="48" pos:column="53">name<pos:position pos:line="48" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="50" pos:column="5">rv<pos:position pos:line="50" pos:column="7"/></name> <operator pos:line="50" pos:column="8">=<pos:position pos:line="50" pos:column="9"/></operator> <call><name pos:line="50" pos:column="10">apr_file_open<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><operator pos:line="50" pos:column="24">&amp;<pos:position pos:line="50" pos:column="29"/></operator><name><name pos:line="50" pos:column="25">newlog<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">.<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="32">fd<pos:position pos:line="50" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="36">newlog<pos:position pos:line="50" pos:column="42"/></name><operator pos:line="50" pos:column="42">.<pos:position pos:line="50" pos:column="43"/></operator><name pos:line="50" pos:column="43">name<pos:position pos:line="50" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="49">APR_WRITE<pos:position pos:line="50" pos:column="58"/></name> <operator pos:line="50" pos:column="59">|<pos:position pos:line="50" pos:column="60"/></operator> <name pos:line="50" pos:column="61">APR_CREATE<pos:position pos:line="50" pos:column="71"/></name> <operator pos:line="50" pos:column="72">|<pos:position pos:line="50" pos:column="73"/></operator> <name pos:line="50" pos:column="74">APR_APPEND<pos:position pos:line="50" pos:column="84"/></name>
                       <operator pos:line="51" pos:column="24">|<pos:position pos:line="51" pos:column="25"/></operator> <operator pos:line="51" pos:column="26">(<pos:position pos:line="51" pos:column="27"/></operator><ternary><condition><expr><name><name pos:line="51" pos:column="27">config<pos:position pos:line="51" pos:column="33"/></name><operator pos:line="51" pos:column="33">-&gt;<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="35">truncate<pos:position pos:line="51" pos:column="43"/></name></name></expr> ?<pos:position pos:line="51" pos:column="45"/></condition><then pos:line="51" pos:column="45"> <expr><name pos:line="51" pos:column="46">APR_TRUNCATE<pos:position pos:line="51" pos:column="58"/></name></expr> <pos:position pos:line="51" pos:column="59"/></then><else pos:line="51" pos:column="59">: <expr><literal type="number" pos:line="51" pos:column="61">0<pos:position pos:line="51" pos:column="62"/></literal></expr></else></ternary><operator pos:line="51" pos:column="62">)<pos:position pos:line="51" pos:column="63"/></operator></expr></argument>, <argument><expr><name pos:line="51" pos:column="65">APR_OS_DEFAULT<pos:position pos:line="51" pos:column="79"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="81">newlog<pos:position pos:line="51" pos:column="87"/></name><operator pos:line="51" pos:column="87">.<pos:position pos:line="51" pos:column="88"/></operator><name pos:line="51" pos:column="88">pool<pos:position pos:line="51" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="94"/></expr_stmt>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">rv<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">==<pos:position pos:line="52" pos:column="14"/></operator> <name pos:line="52" pos:column="15">APR_SUCCESS<pos:position pos:line="52" pos:column="26"/></name></expr>)<pos:position pos:line="52" pos:column="27"/></condition><then pos:line="52" pos:column="27"> <block pos:line="52" pos:column="28">{
        <comment type="block" pos:line="53" pos:column="9">/* Handle post-rotate processing. */</comment>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">post_rotate<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><name><name pos:line="54" pos:column="21">newlog<pos:position pos:line="54" pos:column="27"/></name><operator pos:line="54" pos:column="27">.<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="28">pool<pos:position pos:line="54" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="34">&amp;<pos:position pos:line="54" pos:column="39"/></operator><name pos:line="54" pos:column="35">newlog<pos:position pos:line="54" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="43">config<pos:position pos:line="54" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="51">status<pos:position pos:line="54" pos:column="57"/></name></expr></argument>)<pos:position pos:line="54" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="59"/></expr_stmt>

        <comment type="block" pos:line="56" pos:column="9">/* Close out old (previously 'current') logfile, if any. */</comment>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name><name pos:line="57" pos:column="13">status<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">-&gt;<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="21">current<pos:position pos:line="57" pos:column="28"/></name><operator pos:line="57" pos:column="28">.<pos:position pos:line="57" pos:column="29"/></operator><name pos:line="57" pos:column="29">fd<pos:position pos:line="57" pos:column="31"/></name></name></expr>)<pos:position pos:line="57" pos:column="32"/></condition><then pos:line="57" pos:column="32"> <block pos:line="57" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">close_logfile<pos:position pos:line="58" pos:column="26"/></name><argument_list pos:line="58" pos:column="26">(<argument><expr><name pos:line="58" pos:column="27">config<pos:position pos:line="58" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="35">&amp;<pos:position pos:line="58" pos:column="40"/></operator><name><name pos:line="58" pos:column="36">status<pos:position pos:line="58" pos:column="42"/></name><operator pos:line="58" pos:column="42">-&gt;<pos:position pos:line="58" pos:column="47"/></operator><name pos:line="58" pos:column="44">current<pos:position pos:line="58" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="61" pos:column="9">/* New log file is now 'current'. */</comment>
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">status<pos:position pos:line="62" pos:column="15"/></name><operator pos:line="62" pos:column="15">-&gt;<pos:position pos:line="62" pos:column="20"/></operator><name pos:line="62" pos:column="17">current<pos:position pos:line="62" pos:column="24"/></name></name> <operator pos:line="62" pos:column="25">=<pos:position pos:line="62" pos:column="26"/></operator> <name pos:line="62" pos:column="27">newlog<pos:position pos:line="62" pos:column="33"/></name></expr>;<pos:position pos:line="62" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then>
    <else pos:line="64" pos:column="5">else <block pos:line="64" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="65" pos:column="9">char<pos:position pos:line="65" pos:column="13"/></name></type> <name><name pos:line="65" pos:column="14">error<pos:position pos:line="65" pos:column="19"/></name><index pos:line="65" pos:column="19">[<expr><literal type="number" pos:line="65" pos:column="20">120<pos:position pos:line="65" pos:column="23"/></literal></expr>]<pos:position pos:line="65" pos:column="24"/></index></name></decl>;<pos:position pos:line="65" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="66" pos:column="9">apr_size_t<pos:position pos:line="66" pos:column="19"/></name></type> <name pos:line="66" pos:column="20">nWrite<pos:position pos:line="66" pos:column="26"/></name></decl>;<pos:position pos:line="66" pos:column="27"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="68" pos:column="9">apr_strerror<pos:position pos:line="68" pos:column="21"/></name><argument_list pos:line="68" pos:column="21">(<argument><expr><name pos:line="68" pos:column="22">rv<pos:position pos:line="68" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="26">error<pos:position pos:line="68" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="68" pos:column="33">sizeof <name pos:line="68" pos:column="40">error<pos:position pos:line="68" pos:column="45"/></name></sizeof></expr></argument>)<pos:position pos:line="68" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="47"/></expr_stmt>

        <comment type="block" pos:line="70" pos:column="9">/* Uh-oh. Failed to open the new log file. Try to clear
         * the previous log file, note the lost log entries,
         * and keep on truckin'. */</comment>
        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name><name pos:line="73" pos:column="13">status<pos:position pos:line="73" pos:column="19"/></name><operator pos:line="73" pos:column="19">-&gt;<pos:position pos:line="73" pos:column="24"/></operator><name pos:line="73" pos:column="21">current<pos:position pos:line="73" pos:column="28"/></name><operator pos:line="73" pos:column="28">.<pos:position pos:line="73" pos:column="29"/></operator><name pos:line="73" pos:column="29">fd<pos:position pos:line="73" pos:column="31"/></name></name> <operator pos:line="73" pos:column="32">==<pos:position pos:line="73" pos:column="34"/></operator> <name pos:line="73" pos:column="35">NULL<pos:position pos:line="73" pos:column="39"/></name></expr>)<pos:position pos:line="73" pos:column="40"/></condition><then pos:line="73" pos:column="40"> <block pos:line="73" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">fprintf<pos:position pos:line="74" pos:column="20"/></name><argument_list pos:line="74" pos:column="20">(<argument><expr><name pos:line="74" pos:column="21">stderr<pos:position pos:line="74" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="29">"Could not open log file '%s' (%s)\n"<pos:position pos:line="74" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="68">newlog<pos:position pos:line="74" pos:column="74"/></name><operator pos:line="74" pos:column="74">.<pos:position pos:line="74" pos:column="75"/></operator><name pos:line="74" pos:column="75">name<pos:position pos:line="74" pos:column="79"/></name></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="81">error<pos:position pos:line="74" pos:column="86"/></name></expr></argument>)<pos:position pos:line="74" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="88"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">exit<pos:position pos:line="75" pos:column="17"/></name><argument_list pos:line="75" pos:column="17">(<argument><expr><literal type="number" pos:line="75" pos:column="18">2<pos:position pos:line="75" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="76" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="78" pos:column="9">/* Throw away new state; it isn't going to be used. */</comment>
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">apr_pool_destroy<pos:position pos:line="79" pos:column="25"/></name><argument_list pos:line="79" pos:column="25">(<argument><expr><name><name pos:line="79" pos:column="26">newlog<pos:position pos:line="79" pos:column="32"/></name><operator pos:line="79" pos:column="32">.<pos:position pos:line="79" pos:column="33"/></operator><name pos:line="79" pos:column="33">pool<pos:position pos:line="79" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="39"/></expr_stmt>

        <comment type="block" pos:line="81" pos:column="9">/* Try to keep this error message constant length
         * in case it occurs several times. */</comment>
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">apr_snprintf<pos:position pos:line="83" pos:column="21"/></name><argument_list pos:line="83" pos:column="21">(<argument><expr><name><name pos:line="83" pos:column="22">status<pos:position pos:line="83" pos:column="28"/></name><operator pos:line="83" pos:column="28">-&gt;<pos:position pos:line="83" pos:column="33"/></operator><name pos:line="83" pos:column="30">errbuf<pos:position pos:line="83" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="83" pos:column="38">sizeof <name><name pos:line="83" pos:column="45">status<pos:position pos:line="83" pos:column="51"/></name><operator pos:line="83" pos:column="51">-&gt;<pos:position pos:line="83" pos:column="56"/></operator><name pos:line="83" pos:column="53">errbuf<pos:position pos:line="83" pos:column="59"/></name></name></sizeof></expr></argument>,
                     <argument><expr><literal type="string" pos:line="84" pos:column="22">"Resetting log file due to error opening "<pos:position pos:line="84" pos:column="64"/></literal>
                     <literal type="string" pos:line="85" pos:column="22">"new log file, %10d messages lost: %-25.25s\n"<pos:position pos:line="85" pos:column="68"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="86" pos:column="22">status<pos:position pos:line="86" pos:column="28"/></name><operator pos:line="86" pos:column="28">-&gt;<pos:position pos:line="86" pos:column="33"/></operator><name pos:line="86" pos:column="30">nMessCount<pos:position pos:line="86" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="42">error<pos:position pos:line="86" pos:column="47"/></name></expr></argument>)<pos:position pos:line="86" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name pos:line="87" pos:column="9">nWrite<pos:position pos:line="87" pos:column="15"/></name> <operator pos:line="87" pos:column="16">=<pos:position pos:line="87" pos:column="17"/></operator> <call><name pos:line="87" pos:column="18">strlen<pos:position pos:line="87" pos:column="24"/></name><argument_list pos:line="87" pos:column="24">(<argument><expr><name><name pos:line="87" pos:column="25">status<pos:position pos:line="87" pos:column="31"/></name><operator pos:line="87" pos:column="31">-&gt;<pos:position pos:line="87" pos:column="36"/></operator><name pos:line="87" pos:column="33">errbuf<pos:position pos:line="87" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="41"/></expr_stmt>

        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><call><name pos:line="89" pos:column="13">apr_file_trunc<pos:position pos:line="89" pos:column="27"/></name><argument_list pos:line="89" pos:column="27">(<argument><expr><name><name pos:line="89" pos:column="28">status<pos:position pos:line="89" pos:column="34"/></name><operator pos:line="89" pos:column="34">-&gt;<pos:position pos:line="89" pos:column="39"/></operator><name pos:line="89" pos:column="36">current<pos:position pos:line="89" pos:column="43"/></name><operator pos:line="89" pos:column="43">.<pos:position pos:line="89" pos:column="44"/></operator><name pos:line="89" pos:column="44">fd<pos:position pos:line="89" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="48">0<pos:position pos:line="89" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="50"/></argument_list></call> <operator pos:line="89" pos:column="51">!=<pos:position pos:line="89" pos:column="53"/></operator> <name pos:line="89" pos:column="54">APR_SUCCESS<pos:position pos:line="89" pos:column="65"/></name></expr>)<pos:position pos:line="89" pos:column="66"/></condition><then pos:line="89" pos:column="66"> <block pos:line="89" pos:column="67">{
            <expr_stmt><expr><call><name pos:line="90" pos:column="13">fprintf<pos:position pos:line="90" pos:column="20"/></name><argument_list pos:line="90" pos:column="20">(<argument><expr><name pos:line="90" pos:column="21">stderr<pos:position pos:line="90" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="29">"Error truncating the file %s\n"<pos:position pos:line="90" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="63">status<pos:position pos:line="90" pos:column="69"/></name><operator pos:line="90" pos:column="69">-&gt;<pos:position pos:line="90" pos:column="74"/></operator><name pos:line="90" pos:column="71">current<pos:position pos:line="90" pos:column="78"/></name><operator pos:line="90" pos:column="78">.<pos:position pos:line="90" pos:column="79"/></operator><name pos:line="90" pos:column="79">name<pos:position pos:line="90" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="85"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="91" pos:column="13">exit<pos:position pos:line="91" pos:column="17"/></name><argument_list pos:line="91" pos:column="17">(<argument><expr><literal type="number" pos:line="91" pos:column="18">2<pos:position pos:line="91" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="92" pos:column="10"/></block></then></if>
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><call><name pos:line="93" pos:column="13">apr_file_write<pos:position pos:line="93" pos:column="27"/></name><argument_list pos:line="93" pos:column="27">(<argument><expr><name><name pos:line="93" pos:column="28">status<pos:position pos:line="93" pos:column="34"/></name><operator pos:line="93" pos:column="34">-&gt;<pos:position pos:line="93" pos:column="39"/></operator><name pos:line="93" pos:column="36">current<pos:position pos:line="93" pos:column="43"/></name><operator pos:line="93" pos:column="43">.<pos:position pos:line="93" pos:column="44"/></operator><name pos:line="93" pos:column="44">fd<pos:position pos:line="93" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="48">status<pos:position pos:line="93" pos:column="54"/></name><operator pos:line="93" pos:column="54">-&gt;<pos:position pos:line="93" pos:column="59"/></operator><name pos:line="93" pos:column="56">errbuf<pos:position pos:line="93" pos:column="62"/></name></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="64">&amp;<pos:position pos:line="93" pos:column="69"/></operator><name pos:line="93" pos:column="65">nWrite<pos:position pos:line="93" pos:column="71"/></name></expr></argument>)<pos:position pos:line="93" pos:column="72"/></argument_list></call> <operator pos:line="93" pos:column="73">!=<pos:position pos:line="93" pos:column="75"/></operator> <name pos:line="93" pos:column="76">APR_SUCCESS<pos:position pos:line="93" pos:column="87"/></name></expr>)<pos:position pos:line="93" pos:column="88"/></condition><then pos:line="93" pos:column="88"> <block pos:line="93" pos:column="89">{
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">fprintf<pos:position pos:line="94" pos:column="20"/></name><argument_list pos:line="94" pos:column="20">(<argument><expr><name pos:line="94" pos:column="21">stderr<pos:position pos:line="94" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="29">"Error writing to the file %s\n"<pos:position pos:line="94" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="63">status<pos:position pos:line="94" pos:column="69"/></name><operator pos:line="94" pos:column="69">-&gt;<pos:position pos:line="94" pos:column="74"/></operator><name pos:line="94" pos:column="71">current<pos:position pos:line="94" pos:column="78"/></name><operator pos:line="94" pos:column="78">.<pos:position pos:line="94" pos:column="79"/></operator><name pos:line="94" pos:column="79">name<pos:position pos:line="94" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="85"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="95" pos:column="13">exit<pos:position pos:line="95" pos:column="17"/></name><argument_list pos:line="95" pos:column="17">(<argument><expr><literal type="number" pos:line="95" pos:column="18">2<pos:position pos:line="95" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="96" pos:column="10"/></block></then></if>
    }<pos:position pos:line="97" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="99" pos:column="5">status<pos:position pos:line="99" pos:column="11"/></name><operator pos:line="99" pos:column="11">-&gt;<pos:position pos:line="99" pos:column="16"/></operator><name pos:line="99" pos:column="13">nMessCount<pos:position pos:line="99" pos:column="23"/></name></name> <operator pos:line="99" pos:column="24">=<pos:position pos:line="99" pos:column="25"/></operator> <literal type="number" pos:line="99" pos:column="26">0<pos:position pos:line="99" pos:column="27"/></literal></expr>;<pos:position pos:line="99" pos:column="28"/></expr_stmt>
}<pos:position pos:line="100" pos:column="2"/></block></function></unit>

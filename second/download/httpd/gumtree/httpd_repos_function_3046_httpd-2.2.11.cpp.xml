<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3046_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">enum<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">XML_Error<pos:position pos:line="1" pos:column="22"/></name></name></type>
<name pos:line="2" pos:column="1">doContent<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">XML_Parser<pos:position pos:line="2" pos:column="21"/></name></type> <name pos:line="2" pos:column="22">parser<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>,
	  <parameter><decl><type><name pos:line="3" pos:column="11">int<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">startTagLevel<pos:position pos:line="3" pos:column="28"/></name></decl></parameter>,
	  <parameter><decl><type><specifier pos:line="4" pos:column="11">const<pos:position pos:line="4" pos:column="16"/></specifier> <name pos:line="4" pos:column="17">ENCODING<pos:position pos:line="4" pos:column="25"/></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">enc<pos:position pos:line="4" pos:column="30"/></name></decl></parameter>,
	  <parameter><decl><type><specifier pos:line="5" pos:column="11">const<pos:position pos:line="5" pos:column="16"/></specifier> <name pos:line="5" pos:column="17">char<pos:position pos:line="5" pos:column="21"/></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">s<pos:position pos:line="5" pos:column="24"/></name></decl></parameter>,
	  <parameter><decl><type><specifier pos:line="6" pos:column="11">const<pos:position pos:line="6" pos:column="16"/></specifier> <name pos:line="6" pos:column="17">char<pos:position pos:line="6" pos:column="21"/></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier></type><name pos:line="6" pos:column="23">end<pos:position pos:line="6" pos:column="26"/></name></decl></parameter>,
	  <parameter><decl><type><specifier pos:line="7" pos:column="11">const<pos:position pos:line="7" pos:column="16"/></specifier> <name pos:line="7" pos:column="17">char<pos:position pos:line="7" pos:column="21"/></name> <modifier pos:line="7" pos:column="22">*<pos:position pos:line="7" pos:column="23"/></modifier><modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">nextPtr<pos:position pos:line="7" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="32"/></parameter_list>
<block pos:line="8" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier><modifier pos:line="9" pos:column="15">*<pos:position pos:line="9" pos:column="16"/></modifier></type><name pos:line="9" pos:column="16">eventPP<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier><modifier pos:line="10" pos:column="15">*<pos:position pos:line="10" pos:column="16"/></modifier></type><name pos:line="10" pos:column="16">eventEndPP<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">enc<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">==<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">encoding<pos:position pos:line="11" pos:column="22"/></name></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23"> <block pos:line="11" pos:column="24">{
    <expr_stmt><expr><name pos:line="12" pos:column="5">eventPP<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <operator pos:line="12" pos:column="15">&amp;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="16">eventPtr<pos:position pos:line="12" pos:column="24"/></name></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">eventEndPP<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <operator pos:line="13" pos:column="18">&amp;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="19">eventEndPtr<pos:position pos:line="13" pos:column="30"/></name></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then>
  <else pos:line="15" pos:column="3">else <block pos:line="15" pos:column="8">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">eventPP<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <operator pos:line="16" pos:column="15">&amp;<pos:position pos:line="16" pos:column="20"/></operator><operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><name><name pos:line="16" pos:column="17">openInternalEntities<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">-&gt;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="39">internalEventPtr<pos:position pos:line="16" pos:column="55"/></name></name><operator pos:line="16" pos:column="55">)<pos:position pos:line="16" pos:column="56"/></operator></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">eventEndPP<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <operator pos:line="17" pos:column="18">&amp;<pos:position pos:line="17" pos:column="23"/></operator><operator pos:line="17" pos:column="19">(<pos:position pos:line="17" pos:column="20"/></operator><name><name pos:line="17" pos:column="20">openInternalEntities<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">-&gt;<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="42">internalEventEndPtr<pos:position pos:line="17" pos:column="61"/></name></name><operator pos:line="17" pos:column="61">)<pos:position pos:line="17" pos:column="62"/></operator></expr>;<pos:position pos:line="17" pos:column="63"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></else></if>
  <expr_stmt><expr><operator pos:line="19" pos:column="3">*<pos:position pos:line="19" pos:column="4"/></operator><name pos:line="19" pos:column="4">eventPP<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <name pos:line="19" pos:column="14">s<pos:position pos:line="19" pos:column="15"/></name></expr>;<pos:position pos:line="19" pos:column="16"/></expr_stmt>
  <for pos:line="20" pos:column="3">for <control pos:line="20" pos:column="7">(<init pos:line="20" pos:column="8">;<pos:position pos:line="20" pos:column="9"/></init><condition pos:line="20" pos:column="9">;<pos:position pos:line="20" pos:column="10"/></condition><incr/>)<pos:position pos:line="20" pos:column="11"/></control> <block pos:line="20" pos:column="12">{
    <decl_stmt><decl><type><specifier pos:line="21" pos:column="5">const<pos:position pos:line="21" pos:column="10"/></specifier> <name pos:line="21" pos:column="11">char<pos:position pos:line="21" pos:column="15"/></name> <modifier pos:line="21" pos:column="16">*<pos:position pos:line="21" pos:column="17"/></modifier></type><name pos:line="21" pos:column="17">next<pos:position pos:line="21" pos:column="21"/></name> <init pos:line="21" pos:column="22">= <expr><name pos:line="21" pos:column="24">s<pos:position pos:line="21" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="26"/></decl_stmt> <comment type="block" pos:line="21" pos:column="27">/* XmlContentTok doesn't always set the last arg */</comment>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">int<pos:position pos:line="22" pos:column="8"/></name></type> <name pos:line="22" pos:column="9">tok<pos:position pos:line="22" pos:column="12"/></name> <init pos:line="22" pos:column="13">= <expr><call><name pos:line="22" pos:column="15">XmlContentTok<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">enc<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">s<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="37">end<pos:position pos:line="22" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="42">&amp;<pos:position pos:line="22" pos:column="47"/></operator><name pos:line="22" pos:column="43">next<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="49"/></decl_stmt>
    <expr_stmt><expr><operator pos:line="23" pos:column="5">*<pos:position pos:line="23" pos:column="6"/></operator><name pos:line="23" pos:column="6">eventEndPP<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">next<pos:position pos:line="23" pos:column="23"/></name></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
    <switch pos:line="24" pos:column="5">switch <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">tok<pos:position pos:line="24" pos:column="16"/></name></expr>)<pos:position pos:line="24" pos:column="17"/></condition> <block pos:line="24" pos:column="18">{
    <case pos:line="25" pos:column="5">case <expr><name pos:line="25" pos:column="10">XML_TOK_TRAILING_CR<pos:position pos:line="25" pos:column="29"/></name></expr>:<pos:position pos:line="25" pos:column="30"/></case>
      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><name pos:line="26" pos:column="11">nextPtr<pos:position pos:line="26" pos:column="18"/></name></expr>)<pos:position pos:line="26" pos:column="19"/></condition><then pos:line="26" pos:column="19"> <block pos:line="26" pos:column="20">{
	<expr_stmt><expr><operator pos:line="27" pos:column="9">*<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">nextPtr<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <name pos:line="27" pos:column="20">s<pos:position pos:line="27" pos:column="21"/></name></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>
	<return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">XML_ERROR_NONE<pos:position pos:line="28" pos:column="30"/></name></expr>;<pos:position pos:line="28" pos:column="31"/></return>
      }<pos:position pos:line="29" pos:column="8"/></block></then></if>
      <expr_stmt><expr><operator pos:line="30" pos:column="7">*<pos:position pos:line="30" pos:column="8"/></operator><name pos:line="30" pos:column="8">eventEndPP<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <name pos:line="30" pos:column="21">end<pos:position pos:line="30" pos:column="24"/></name></expr>;<pos:position pos:line="30" pos:column="25"/></expr_stmt>
      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><name pos:line="31" pos:column="11">characterDataHandler<pos:position pos:line="31" pos:column="31"/></name></expr>)<pos:position pos:line="31" pos:column="32"/></condition><then pos:line="31" pos:column="32"> <block pos:line="31" pos:column="33">{
	<decl_stmt><decl><type><name pos:line="32" pos:column="9">XML_Char<pos:position pos:line="32" pos:column="17"/></name></type> <name pos:line="32" pos:column="18">c<pos:position pos:line="32" pos:column="19"/></name> <init pos:line="32" pos:column="20">= <expr><literal type="number" pos:line="32" pos:column="22">0xA<pos:position pos:line="32" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="26"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">characterDataHandler<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">handlerArg<pos:position pos:line="33" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="42">&amp;<pos:position pos:line="33" pos:column="47"/></operator><name pos:line="33" pos:column="43">c<pos:position pos:line="33" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="46">1<pos:position pos:line="33" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt>
      }<pos:position pos:line="34" pos:column="8"/></block></then>
      <elseif pos:line="35" pos:column="7">else <if pos:line="35" pos:column="12">if <condition pos:line="35" pos:column="15">(<expr><name pos:line="35" pos:column="16">defaultHandler<pos:position pos:line="35" pos:column="30"/></name></expr>)<pos:position pos:line="35" pos:column="31"/></condition><then pos:line="35" pos:column="31">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="9">reportDefault<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><name pos:line="36" pos:column="23">parser<pos:position pos:line="36" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="31">enc<pos:position pos:line="36" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="36">s<pos:position pos:line="36" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="39">end<pos:position pos:line="36" pos:column="42"/></name></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt></block></then></if></elseif></if>
      <if pos:line="37" pos:column="7">if <condition pos:line="37" pos:column="10">(<expr><name pos:line="37" pos:column="11">startTagLevel<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">==<pos:position pos:line="37" pos:column="27"/></operator> <literal type="number" pos:line="37" pos:column="28">0<pos:position pos:line="37" pos:column="29"/></literal></expr>)<pos:position pos:line="37" pos:column="30"/></condition><then pos:line="37" pos:column="30">
	<block type="pseudo"><return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">XML_ERROR_NO_ELEMENTS<pos:position pos:line="38" pos:column="37"/></name></expr>;<pos:position pos:line="38" pos:column="38"/></return></block></then></if>
      <if pos:line="39" pos:column="7">if <condition pos:line="39" pos:column="10">(<expr><name pos:line="39" pos:column="11">tagLevel<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">!=<pos:position pos:line="39" pos:column="22"/></operator> <name pos:line="39" pos:column="23">startTagLevel<pos:position pos:line="39" pos:column="36"/></name></expr>)<pos:position pos:line="39" pos:column="37"/></condition><then pos:line="39" pos:column="37">
	<block type="pseudo"><return pos:line="40" pos:column="9">return <expr><name pos:line="40" pos:column="16">XML_ERROR_ASYNC_ENTITY<pos:position pos:line="40" pos:column="38"/></name></expr>;<pos:position pos:line="40" pos:column="39"/></return></block></then></if>
      <return pos:line="41" pos:column="7">return <expr><name pos:line="41" pos:column="14">XML_ERROR_NONE<pos:position pos:line="41" pos:column="28"/></name></expr>;<pos:position pos:line="41" pos:column="29"/></return>
    <case pos:line="42" pos:column="5">case <expr><name pos:line="42" pos:column="10">XML_TOK_NONE<pos:position pos:line="42" pos:column="22"/></name></expr>:<pos:position pos:line="42" pos:column="23"/></case>
      <if pos:line="43" pos:column="7">if <condition pos:line="43" pos:column="10">(<expr><name pos:line="43" pos:column="11">nextPtr<pos:position pos:line="43" pos:column="18"/></name></expr>)<pos:position pos:line="43" pos:column="19"/></condition><then pos:line="43" pos:column="19"> <block pos:line="43" pos:column="20">{
	<expr_stmt><expr><operator pos:line="44" pos:column="9">*<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">nextPtr<pos:position pos:line="44" pos:column="17"/></name> <operator pos:line="44" pos:column="18">=<pos:position pos:line="44" pos:column="19"/></operator> <name pos:line="44" pos:column="20">s<pos:position pos:line="44" pos:column="21"/></name></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>
	<return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">XML_ERROR_NONE<pos:position pos:line="45" pos:column="30"/></name></expr>;<pos:position pos:line="45" pos:column="31"/></return>
      }<pos:position pos:line="46" pos:column="8"/></block></then></if>
      <if pos:line="47" pos:column="7">if <condition pos:line="47" pos:column="10">(<expr><name pos:line="47" pos:column="11">startTagLevel<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">&gt;<pos:position pos:line="47" pos:column="29"/></operator> <literal type="number" pos:line="47" pos:column="27">0<pos:position pos:line="47" pos:column="28"/></literal></expr>)<pos:position pos:line="47" pos:column="29"/></condition><then pos:line="47" pos:column="29"> <block pos:line="47" pos:column="30">{
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">tagLevel<pos:position pos:line="48" pos:column="21"/></name> <operator pos:line="48" pos:column="22">!=<pos:position pos:line="48" pos:column="24"/></operator> <name pos:line="48" pos:column="25">startTagLevel<pos:position pos:line="48" pos:column="38"/></name></expr>)<pos:position pos:line="48" pos:column="39"/></condition><then pos:line="48" pos:column="39">
	  <block type="pseudo"><return pos:line="49" pos:column="11">return <expr><name pos:line="49" pos:column="18">XML_ERROR_ASYNC_ENTITY<pos:position pos:line="49" pos:column="40"/></name></expr>;<pos:position pos:line="49" pos:column="41"/></return></block></then></if>
	<return pos:line="50" pos:column="9">return <expr><name pos:line="50" pos:column="16">XML_ERROR_NONE<pos:position pos:line="50" pos:column="30"/></name></expr>;<pos:position pos:line="50" pos:column="31"/></return>
      }<pos:position pos:line="51" pos:column="8"/></block></then></if>
      <return pos:line="52" pos:column="7">return <expr><name pos:line="52" pos:column="14">XML_ERROR_NO_ELEMENTS<pos:position pos:line="52" pos:column="35"/></name></expr>;<pos:position pos:line="52" pos:column="36"/></return>
    <case pos:line="53" pos:column="5">case <expr><name pos:line="53" pos:column="10">XML_TOK_INVALID<pos:position pos:line="53" pos:column="25"/></name></expr>:<pos:position pos:line="53" pos:column="26"/></case>
      <expr_stmt><expr><operator pos:line="54" pos:column="7">*<pos:position pos:line="54" pos:column="8"/></operator><name pos:line="54" pos:column="8">eventPP<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <name pos:line="54" pos:column="18">next<pos:position pos:line="54" pos:column="22"/></name></expr>;<pos:position pos:line="54" pos:column="23"/></expr_stmt>
      <return pos:line="55" pos:column="7">return <expr><name pos:line="55" pos:column="14">XML_ERROR_INVALID_TOKEN<pos:position pos:line="55" pos:column="37"/></name></expr>;<pos:position pos:line="55" pos:column="38"/></return>
    <case pos:line="56" pos:column="5">case <expr><name pos:line="56" pos:column="10">XML_TOK_PARTIAL<pos:position pos:line="56" pos:column="25"/></name></expr>:<pos:position pos:line="56" pos:column="26"/></case>
      <if pos:line="57" pos:column="7">if <condition pos:line="57" pos:column="10">(<expr><name pos:line="57" pos:column="11">nextPtr<pos:position pos:line="57" pos:column="18"/></name></expr>)<pos:position pos:line="57" pos:column="19"/></condition><then pos:line="57" pos:column="19"> <block pos:line="57" pos:column="20">{
	<expr_stmt><expr><operator pos:line="58" pos:column="9">*<pos:position pos:line="58" pos:column="10"/></operator><name pos:line="58" pos:column="10">nextPtr<pos:position pos:line="58" pos:column="17"/></name> <operator pos:line="58" pos:column="18">=<pos:position pos:line="58" pos:column="19"/></operator> <name pos:line="58" pos:column="20">s<pos:position pos:line="58" pos:column="21"/></name></expr>;<pos:position pos:line="58" pos:column="22"/></expr_stmt>
	<return pos:line="59" pos:column="9">return <expr><name pos:line="59" pos:column="16">XML_ERROR_NONE<pos:position pos:line="59" pos:column="30"/></name></expr>;<pos:position pos:line="59" pos:column="31"/></return>
      }<pos:position pos:line="60" pos:column="8"/></block></then></if>
      <return pos:line="61" pos:column="7">return <expr><name pos:line="61" pos:column="14">XML_ERROR_UNCLOSED_TOKEN<pos:position pos:line="61" pos:column="38"/></name></expr>;<pos:position pos:line="61" pos:column="39"/></return>
    <case pos:line="62" pos:column="5">case <expr><name pos:line="62" pos:column="10">XML_TOK_PARTIAL_CHAR<pos:position pos:line="62" pos:column="30"/></name></expr>:<pos:position pos:line="62" pos:column="31"/></case>
      <if pos:line="63" pos:column="7">if <condition pos:line="63" pos:column="10">(<expr><name pos:line="63" pos:column="11">nextPtr<pos:position pos:line="63" pos:column="18"/></name></expr>)<pos:position pos:line="63" pos:column="19"/></condition><then pos:line="63" pos:column="19"> <block pos:line="63" pos:column="20">{
	<expr_stmt><expr><operator pos:line="64" pos:column="9">*<pos:position pos:line="64" pos:column="10"/></operator><name pos:line="64" pos:column="10">nextPtr<pos:position pos:line="64" pos:column="17"/></name> <operator pos:line="64" pos:column="18">=<pos:position pos:line="64" pos:column="19"/></operator> <name pos:line="64" pos:column="20">s<pos:position pos:line="64" pos:column="21"/></name></expr>;<pos:position pos:line="64" pos:column="22"/></expr_stmt>
	<return pos:line="65" pos:column="9">return <expr><name pos:line="65" pos:column="16">XML_ERROR_NONE<pos:position pos:line="65" pos:column="30"/></name></expr>;<pos:position pos:line="65" pos:column="31"/></return>
      }<pos:position pos:line="66" pos:column="8"/></block></then></if>
      <return pos:line="67" pos:column="7">return <expr><name pos:line="67" pos:column="14">XML_ERROR_PARTIAL_CHAR<pos:position pos:line="67" pos:column="36"/></name></expr>;<pos:position pos:line="67" pos:column="37"/></return>
    <case pos:line="68" pos:column="5">case <expr><name pos:line="68" pos:column="10">XML_TOK_ENTITY_REF<pos:position pos:line="68" pos:column="28"/></name></expr>:<pos:position pos:line="68" pos:column="29"/></case>
      <block pos:line="69" pos:column="7">{
	<decl_stmt><decl><type><specifier pos:line="70" pos:column="9">const<pos:position pos:line="70" pos:column="14"/></specifier> <name pos:line="70" pos:column="15">XML_Char<pos:position pos:line="70" pos:column="23"/></name> <modifier pos:line="70" pos:column="24">*<pos:position pos:line="70" pos:column="25"/></modifier></type><name pos:line="70" pos:column="25">name<pos:position pos:line="70" pos:column="29"/></name></decl>;<pos:position pos:line="70" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="71" pos:column="9">ENTITY<pos:position pos:line="71" pos:column="15"/></name> <modifier pos:line="71" pos:column="16">*<pos:position pos:line="71" pos:column="17"/></modifier></type><name pos:line="71" pos:column="17">entity<pos:position pos:line="71" pos:column="23"/></name></decl>;<pos:position pos:line="71" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="72" pos:column="9">XML_Char<pos:position pos:line="72" pos:column="17"/></name></type> <name pos:line="72" pos:column="18">ch<pos:position pos:line="72" pos:column="20"/></name> <init pos:line="72" pos:column="21">= <expr><call><name pos:line="72" pos:column="23">XmlPredefinedEntityName<pos:position pos:line="72" pos:column="46"/></name><argument_list pos:line="72" pos:column="46">(<argument><expr><name pos:line="72" pos:column="47">enc<pos:position pos:line="72" pos:column="50"/></name></expr></argument>,
					      <argument><expr><name pos:line="73" pos:column="47">s<pos:position pos:line="73" pos:column="48"/></name> <operator pos:line="73" pos:column="49">+<pos:position pos:line="73" pos:column="50"/></operator> <name><name pos:line="73" pos:column="51">enc<pos:position pos:line="73" pos:column="54"/></name><operator pos:line="73" pos:column="54">-&gt;<pos:position pos:line="73" pos:column="59"/></operator><name pos:line="73" pos:column="56">minBytesPerChar<pos:position pos:line="73" pos:column="71"/></name></name></expr></argument>,
					      <argument><expr><name pos:line="74" pos:column="47">next<pos:position pos:line="74" pos:column="51"/></name> <operator pos:line="74" pos:column="52">-<pos:position pos:line="74" pos:column="53"/></operator> <name><name pos:line="74" pos:column="54">enc<pos:position pos:line="74" pos:column="57"/></name><operator pos:line="74" pos:column="57">-&gt;<pos:position pos:line="74" pos:column="62"/></operator><name pos:line="74" pos:column="59">minBytesPerChar<pos:position pos:line="74" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="74" pos:column="76"/></decl_stmt>
	<if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">ch<pos:position pos:line="75" pos:column="15"/></name></expr>)<pos:position pos:line="75" pos:column="16"/></condition><then pos:line="75" pos:column="16"> <block pos:line="75" pos:column="17">{
	  <if pos:line="76" pos:column="11">if <condition pos:line="76" pos:column="14">(<expr><name pos:line="76" pos:column="15">characterDataHandler<pos:position pos:line="76" pos:column="35"/></name></expr>)<pos:position pos:line="76" pos:column="36"/></condition><then pos:line="76" pos:column="36">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="13">characterDataHandler<pos:position pos:line="77" pos:column="33"/></name><argument_list pos:line="77" pos:column="33">(<argument><expr><name pos:line="77" pos:column="34">handlerArg<pos:position pos:line="77" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="46">&amp;<pos:position pos:line="77" pos:column="51"/></operator><name pos:line="77" pos:column="47">ch<pos:position pos:line="77" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="51">1<pos:position pos:line="77" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="54"/></expr_stmt></block></then>
	  <elseif pos:line="78" pos:column="11">else <if pos:line="78" pos:column="16">if <condition pos:line="78" pos:column="19">(<expr><name pos:line="78" pos:column="20">defaultHandler<pos:position pos:line="78" pos:column="34"/></name></expr>)<pos:position pos:line="78" pos:column="35"/></condition><then pos:line="78" pos:column="35">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="13">reportDefault<pos:position pos:line="79" pos:column="26"/></name><argument_list pos:line="79" pos:column="26">(<argument><expr><name pos:line="79" pos:column="27">parser<pos:position pos:line="79" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="35">enc<pos:position pos:line="79" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="40">s<pos:position pos:line="79" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="43">next<pos:position pos:line="79" pos:column="47"/></name></expr></argument>)<pos:position pos:line="79" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="49"/></expr_stmt></block></then></if></elseif></if>
	  <break pos:line="80" pos:column="11">break;<pos:position pos:line="80" pos:column="17"/></break>
	}<pos:position pos:line="81" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="82" pos:column="9">name<pos:position pos:line="82" pos:column="13"/></name> <operator pos:line="82" pos:column="14">=<pos:position pos:line="82" pos:column="15"/></operator> <call><name pos:line="82" pos:column="16">poolStoreString<pos:position pos:line="82" pos:column="31"/></name><argument_list pos:line="82" pos:column="31">(<argument><expr><operator pos:line="82" pos:column="32">&amp;<pos:position pos:line="82" pos:column="37"/></operator><name><name pos:line="82" pos:column="33">dtd<pos:position pos:line="82" pos:column="36"/></name><operator pos:line="82" pos:column="36">.<pos:position pos:line="82" pos:column="37"/></operator><name pos:line="82" pos:column="37">pool<pos:position pos:line="82" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="43">enc<pos:position pos:line="82" pos:column="46"/></name></expr></argument>,
				<argument><expr><name pos:line="83" pos:column="33">s<pos:position pos:line="83" pos:column="34"/></name> <operator pos:line="83" pos:column="35">+<pos:position pos:line="83" pos:column="36"/></operator> <name><name pos:line="83" pos:column="37">enc<pos:position pos:line="83" pos:column="40"/></name><operator pos:line="83" pos:column="40">-&gt;<pos:position pos:line="83" pos:column="45"/></operator><name pos:line="83" pos:column="42">minBytesPerChar<pos:position pos:line="83" pos:column="57"/></name></name></expr></argument>,
				<argument><expr><name pos:line="84" pos:column="33">next<pos:position pos:line="84" pos:column="37"/></name> <operator pos:line="84" pos:column="38">-<pos:position pos:line="84" pos:column="39"/></operator> <name><name pos:line="84" pos:column="40">enc<pos:position pos:line="84" pos:column="43"/></name><operator pos:line="84" pos:column="43">-&gt;<pos:position pos:line="84" pos:column="48"/></operator><name pos:line="84" pos:column="45">minBytesPerChar<pos:position pos:line="84" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="62"/></expr_stmt>
	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><operator pos:line="85" pos:column="13">!<pos:position pos:line="85" pos:column="14"/></operator><name pos:line="85" pos:column="14">name<pos:position pos:line="85" pos:column="18"/></name></expr>)<pos:position pos:line="85" pos:column="19"/></condition><then pos:line="85" pos:column="19">
	  <block type="pseudo"><return pos:line="86" pos:column="11">return <expr><name pos:line="86" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="86" pos:column="37"/></name></expr>;<pos:position pos:line="86" pos:column="38"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="87" pos:column="9">entity<pos:position pos:line="87" pos:column="15"/></name> <operator pos:line="87" pos:column="16">=<pos:position pos:line="87" pos:column="17"/></operator> <operator pos:line="87" pos:column="18">(<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="19">ENTITY<pos:position pos:line="87" pos:column="25"/></name> <operator pos:line="87" pos:column="26">*<pos:position pos:line="87" pos:column="27"/></operator><operator pos:line="87" pos:column="27">)<pos:position pos:line="87" pos:column="28"/></operator><call><name pos:line="87" pos:column="28">lookup<pos:position pos:line="87" pos:column="34"/></name><argument_list pos:line="87" pos:column="34">(<argument><expr><operator pos:line="87" pos:column="35">&amp;<pos:position pos:line="87" pos:column="40"/></operator><name><name pos:line="87" pos:column="36">dtd<pos:position pos:line="87" pos:column="39"/></name><operator pos:line="87" pos:column="39">.<pos:position pos:line="87" pos:column="40"/></operator><name pos:line="87" pos:column="40">generalEntities<pos:position pos:line="87" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="57">name<pos:position pos:line="87" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="63">0<pos:position pos:line="87" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="88" pos:column="9">poolDiscard<pos:position pos:line="88" pos:column="20"/></name><argument_list pos:line="88" pos:column="20">(<argument><expr><operator pos:line="88" pos:column="21">&amp;<pos:position pos:line="88" pos:column="26"/></operator><name><name pos:line="88" pos:column="22">dtd<pos:position pos:line="88" pos:column="25"/></name><operator pos:line="88" pos:column="25">.<pos:position pos:line="88" pos:column="26"/></operator><name pos:line="88" pos:column="26">pool<pos:position pos:line="88" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="32"/></expr_stmt>
	<if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><operator pos:line="89" pos:column="13">!<pos:position pos:line="89" pos:column="14"/></operator><name pos:line="89" pos:column="14">entity<pos:position pos:line="89" pos:column="20"/></name></expr>)<pos:position pos:line="89" pos:column="21"/></condition><then pos:line="89" pos:column="21"> <block pos:line="89" pos:column="22">{
	  <if pos:line="90" pos:column="11">if <condition pos:line="90" pos:column="14">(<expr><name><name pos:line="90" pos:column="15">dtd<pos:position pos:line="90" pos:column="18"/></name><operator pos:line="90" pos:column="18">.<pos:position pos:line="90" pos:column="19"/></operator><name pos:line="90" pos:column="19">complete<pos:position pos:line="90" pos:column="27"/></name></name> <operator pos:line="90" pos:column="28">||<pos:position pos:line="90" pos:column="30"/></operator> <name><name pos:line="90" pos:column="31">dtd<pos:position pos:line="90" pos:column="34"/></name><operator pos:line="90" pos:column="34">.<pos:position pos:line="90" pos:column="35"/></operator><name pos:line="90" pos:column="35">standalone<pos:position pos:line="90" pos:column="45"/></name></name></expr>)<pos:position pos:line="90" pos:column="46"/></condition><then pos:line="90" pos:column="46">
	    <block type="pseudo"><return pos:line="91" pos:column="13">return <expr><name pos:line="91" pos:column="20">XML_ERROR_UNDEFINED_ENTITY<pos:position pos:line="91" pos:column="46"/></name></expr>;<pos:position pos:line="91" pos:column="47"/></return></block></then></if>
	  <if pos:line="92" pos:column="11">if <condition pos:line="92" pos:column="14">(<expr><name pos:line="92" pos:column="15">defaultHandler<pos:position pos:line="92" pos:column="29"/></name></expr>)<pos:position pos:line="92" pos:column="30"/></condition><then pos:line="92" pos:column="30">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="93" pos:column="13">reportDefault<pos:position pos:line="93" pos:column="26"/></name><argument_list pos:line="93" pos:column="26">(<argument><expr><name pos:line="93" pos:column="27">parser<pos:position pos:line="93" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="35">enc<pos:position pos:line="93" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="40">s<pos:position pos:line="93" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="43">next<pos:position pos:line="93" pos:column="47"/></name></expr></argument>)<pos:position pos:line="93" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="49"/></expr_stmt></block></then></if>
	  <break pos:line="94" pos:column="11">break;<pos:position pos:line="94" pos:column="17"/></break>
	}<pos:position pos:line="95" pos:column="10"/></block></then></if>
	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name><name pos:line="96" pos:column="13">entity<pos:position pos:line="96" pos:column="19"/></name><operator pos:line="96" pos:column="19">-&gt;<pos:position pos:line="96" pos:column="24"/></operator><name pos:line="96" pos:column="21">open<pos:position pos:line="96" pos:column="25"/></name></name></expr>)<pos:position pos:line="96" pos:column="26"/></condition><then pos:line="96" pos:column="26">
	  <block type="pseudo"><return pos:line="97" pos:column="11">return <expr><name pos:line="97" pos:column="18">XML_ERROR_RECURSIVE_ENTITY_REF<pos:position pos:line="97" pos:column="48"/></name></expr>;<pos:position pos:line="97" pos:column="49"/></return></block></then></if>
	<if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><name><name pos:line="98" pos:column="13">entity<pos:position pos:line="98" pos:column="19"/></name><operator pos:line="98" pos:column="19">-&gt;<pos:position pos:line="98" pos:column="24"/></operator><name pos:line="98" pos:column="21">notation<pos:position pos:line="98" pos:column="29"/></name></name></expr>)<pos:position pos:line="98" pos:column="30"/></condition><then pos:line="98" pos:column="30">
	  <block type="pseudo"><return pos:line="99" pos:column="11">return <expr><name pos:line="99" pos:column="18">XML_ERROR_BINARY_ENTITY_REF<pos:position pos:line="99" pos:column="45"/></name></expr>;<pos:position pos:line="99" pos:column="46"/></return></block></then></if>
	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">entity<pos:position pos:line="100" pos:column="19"/></name></expr>)<pos:position pos:line="100" pos:column="20"/></condition><then pos:line="100" pos:column="20"> <block pos:line="100" pos:column="21">{
	  <if pos:line="101" pos:column="11">if <condition pos:line="101" pos:column="14">(<expr><name><name pos:line="101" pos:column="15">entity<pos:position pos:line="101" pos:column="21"/></name><operator pos:line="101" pos:column="21">-&gt;<pos:position pos:line="101" pos:column="26"/></operator><name pos:line="101" pos:column="23">textPtr<pos:position pos:line="101" pos:column="30"/></name></name></expr>)<pos:position pos:line="101" pos:column="31"/></condition><then pos:line="101" pos:column="31"> <block pos:line="101" pos:column="32">{
	    <decl_stmt><decl><type><name><name pos:line="102" pos:column="13">enum<pos:position pos:line="102" pos:column="17"/></name> <name pos:line="102" pos:column="18">XML_Error<pos:position pos:line="102" pos:column="27"/></name></name></type> <name pos:line="102" pos:column="28">result<pos:position pos:line="102" pos:column="34"/></name></decl>;<pos:position pos:line="102" pos:column="35"/></decl_stmt>
	    <decl_stmt><decl><type><name pos:line="103" pos:column="13">OPEN_INTERNAL_ENTITY<pos:position pos:line="103" pos:column="33"/></name></type> <name pos:line="103" pos:column="34">openEntity<pos:position pos:line="103" pos:column="44"/></name></decl>;<pos:position pos:line="103" pos:column="45"/></decl_stmt>
	    <if pos:line="104" pos:column="13">if <condition pos:line="104" pos:column="16">(<expr><name pos:line="104" pos:column="17">defaultHandler<pos:position pos:line="104" pos:column="31"/></name> <operator pos:line="104" pos:column="32">&amp;&amp;<pos:position pos:line="104" pos:column="42"/></operator> <operator pos:line="104" pos:column="35">!<pos:position pos:line="104" pos:column="36"/></operator><name pos:line="104" pos:column="36">defaultExpandInternalEntities<pos:position pos:line="104" pos:column="65"/></name></expr>)<pos:position pos:line="104" pos:column="66"/></condition><then pos:line="104" pos:column="66"> <block pos:line="104" pos:column="67">{
	      <expr_stmt><expr><call><name pos:line="105" pos:column="15">reportDefault<pos:position pos:line="105" pos:column="28"/></name><argument_list pos:line="105" pos:column="28">(<argument><expr><name pos:line="105" pos:column="29">parser<pos:position pos:line="105" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="37">enc<pos:position pos:line="105" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="42">s<pos:position pos:line="105" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="45">next<pos:position pos:line="105" pos:column="49"/></name></expr></argument>)<pos:position pos:line="105" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="51"/></expr_stmt>
	      <break pos:line="106" pos:column="15">break;<pos:position pos:line="106" pos:column="21"/></break>
	    }<pos:position pos:line="107" pos:column="14"/></block></then></if>
	    <expr_stmt><expr><name><name pos:line="108" pos:column="13">entity<pos:position pos:line="108" pos:column="19"/></name><operator pos:line="108" pos:column="19">-&gt;<pos:position pos:line="108" pos:column="24"/></operator><name pos:line="108" pos:column="21">open<pos:position pos:line="108" pos:column="25"/></name></name> <operator pos:line="108" pos:column="26">=<pos:position pos:line="108" pos:column="27"/></operator> <literal type="number" pos:line="108" pos:column="28">1<pos:position pos:line="108" pos:column="29"/></literal></expr>;<pos:position pos:line="108" pos:column="30"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="109" pos:column="13">openEntity<pos:position pos:line="109" pos:column="23"/></name><operator pos:line="109" pos:column="23">.<pos:position pos:line="109" pos:column="24"/></operator><name pos:line="109" pos:column="24">next<pos:position pos:line="109" pos:column="28"/></name></name> <operator pos:line="109" pos:column="29">=<pos:position pos:line="109" pos:column="30"/></operator> <name pos:line="109" pos:column="31">openInternalEntities<pos:position pos:line="109" pos:column="51"/></name></expr>;<pos:position pos:line="109" pos:column="52"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="110" pos:column="13">openInternalEntities<pos:position pos:line="110" pos:column="33"/></name> <operator pos:line="110" pos:column="34">=<pos:position pos:line="110" pos:column="35"/></operator> <operator pos:line="110" pos:column="36">&amp;<pos:position pos:line="110" pos:column="41"/></operator><name pos:line="110" pos:column="37">openEntity<pos:position pos:line="110" pos:column="47"/></name></expr>;<pos:position pos:line="110" pos:column="48"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="111" pos:column="13">openEntity<pos:position pos:line="111" pos:column="23"/></name><operator pos:line="111" pos:column="23">.<pos:position pos:line="111" pos:column="24"/></operator><name pos:line="111" pos:column="24">entity<pos:position pos:line="111" pos:column="30"/></name></name> <operator pos:line="111" pos:column="31">=<pos:position pos:line="111" pos:column="32"/></operator> <name pos:line="111" pos:column="33">entity<pos:position pos:line="111" pos:column="39"/></name></expr>;<pos:position pos:line="111" pos:column="40"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="112" pos:column="13">openEntity<pos:position pos:line="112" pos:column="23"/></name><operator pos:line="112" pos:column="23">.<pos:position pos:line="112" pos:column="24"/></operator><name pos:line="112" pos:column="24">internalEventPtr<pos:position pos:line="112" pos:column="40"/></name></name> <operator pos:line="112" pos:column="41">=<pos:position pos:line="112" pos:column="42"/></operator> <literal type="number" pos:line="112" pos:column="43">0<pos:position pos:line="112" pos:column="44"/></literal></expr>;<pos:position pos:line="112" pos:column="45"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="113" pos:column="13">openEntity<pos:position pos:line="113" pos:column="23"/></name><operator pos:line="113" pos:column="23">.<pos:position pos:line="113" pos:column="24"/></operator><name pos:line="113" pos:column="24">internalEventEndPtr<pos:position pos:line="113" pos:column="43"/></name></name> <operator pos:line="113" pos:column="44">=<pos:position pos:line="113" pos:column="45"/></operator> <literal type="number" pos:line="113" pos:column="46">0<pos:position pos:line="113" pos:column="47"/></literal></expr>;<pos:position pos:line="113" pos:column="48"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="114" pos:column="13">result<pos:position pos:line="114" pos:column="19"/></name> <operator pos:line="114" pos:column="20">=<pos:position pos:line="114" pos:column="21"/></operator> <call><name pos:line="114" pos:column="22">doContent<pos:position pos:line="114" pos:column="31"/></name><argument_list pos:line="114" pos:column="31">(<argument><expr><name pos:line="114" pos:column="32">parser<pos:position pos:line="114" pos:column="38"/></name></expr></argument>,
			       <argument><expr><name pos:line="115" pos:column="32">tagLevel<pos:position pos:line="115" pos:column="40"/></name></expr></argument>,
			       <argument><expr><name pos:line="116" pos:column="32">internalEncoding<pos:position pos:line="116" pos:column="48"/></name></expr></argument>,
			       <argument><expr><operator pos:line="117" pos:column="32">(<pos:position pos:line="117" pos:column="33"/></operator><name pos:line="117" pos:column="33">char<pos:position pos:line="117" pos:column="37"/></name> <operator pos:line="117" pos:column="38">*<pos:position pos:line="117" pos:column="39"/></operator><operator pos:line="117" pos:column="39">)<pos:position pos:line="117" pos:column="40"/></operator><name><name pos:line="117" pos:column="40">entity<pos:position pos:line="117" pos:column="46"/></name><operator pos:line="117" pos:column="46">-&gt;<pos:position pos:line="117" pos:column="51"/></operator><name pos:line="117" pos:column="48">textPtr<pos:position pos:line="117" pos:column="55"/></name></name></expr></argument>,
			       <argument><expr><operator pos:line="118" pos:column="32">(<pos:position pos:line="118" pos:column="33"/></operator><name pos:line="118" pos:column="33">char<pos:position pos:line="118" pos:column="37"/></name> <operator pos:line="118" pos:column="38">*<pos:position pos:line="118" pos:column="39"/></operator><operator pos:line="118" pos:column="39">)<pos:position pos:line="118" pos:column="40"/></operator><operator pos:line="118" pos:column="40">(<pos:position pos:line="118" pos:column="41"/></operator><name><name pos:line="118" pos:column="41">entity<pos:position pos:line="118" pos:column="47"/></name><operator pos:line="118" pos:column="47">-&gt;<pos:position pos:line="118" pos:column="52"/></operator><name pos:line="118" pos:column="49">textPtr<pos:position pos:line="118" pos:column="56"/></name></name> <operator pos:line="118" pos:column="57">+<pos:position pos:line="118" pos:column="58"/></operator> <name><name pos:line="118" pos:column="59">entity<pos:position pos:line="118" pos:column="65"/></name><operator pos:line="118" pos:column="65">-&gt;<pos:position pos:line="118" pos:column="70"/></operator><name pos:line="118" pos:column="67">textLen<pos:position pos:line="118" pos:column="74"/></name></name><operator pos:line="118" pos:column="74">)<pos:position pos:line="118" pos:column="75"/></operator></expr></argument>,
			       <argument><expr><literal type="number" pos:line="119" pos:column="32">0<pos:position pos:line="119" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="35"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="120" pos:column="13">entity<pos:position pos:line="120" pos:column="19"/></name><operator pos:line="120" pos:column="19">-&gt;<pos:position pos:line="120" pos:column="24"/></operator><name pos:line="120" pos:column="21">open<pos:position pos:line="120" pos:column="25"/></name></name> <operator pos:line="120" pos:column="26">=<pos:position pos:line="120" pos:column="27"/></operator> <literal type="number" pos:line="120" pos:column="28">0<pos:position pos:line="120" pos:column="29"/></literal></expr>;<pos:position pos:line="120" pos:column="30"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="121" pos:column="13">openInternalEntities<pos:position pos:line="121" pos:column="33"/></name> <operator pos:line="121" pos:column="34">=<pos:position pos:line="121" pos:column="35"/></operator> <name><name pos:line="121" pos:column="36">openEntity<pos:position pos:line="121" pos:column="46"/></name><operator pos:line="121" pos:column="46">.<pos:position pos:line="121" pos:column="47"/></operator><name pos:line="121" pos:column="47">next<pos:position pos:line="121" pos:column="51"/></name></name></expr>;<pos:position pos:line="121" pos:column="52"/></expr_stmt>
	    <if pos:line="122" pos:column="13">if <condition pos:line="122" pos:column="16">(<expr><name pos:line="122" pos:column="17">result<pos:position pos:line="122" pos:column="23"/></name></expr>)<pos:position pos:line="122" pos:column="24"/></condition><then pos:line="122" pos:column="24">
	      <block type="pseudo"><return pos:line="123" pos:column="15">return <expr><name pos:line="123" pos:column="22">result<pos:position pos:line="123" pos:column="28"/></name></expr>;<pos:position pos:line="123" pos:column="29"/></return></block></then></if>
	  }<pos:position pos:line="124" pos:column="12"/></block></then>
	  <elseif pos:line="125" pos:column="11">else <if pos:line="125" pos:column="16">if <condition pos:line="125" pos:column="19">(<expr><name pos:line="125" pos:column="20">externalEntityRefHandler<pos:position pos:line="125" pos:column="44"/></name></expr>)<pos:position pos:line="125" pos:column="45"/></condition><then pos:line="125" pos:column="45"> <block pos:line="125" pos:column="46">{
	    <decl_stmt><decl><type><specifier pos:line="126" pos:column="13">const<pos:position pos:line="126" pos:column="18"/></specifier> <name pos:line="126" pos:column="19">XML_Char<pos:position pos:line="126" pos:column="27"/></name> <modifier pos:line="126" pos:column="28">*<pos:position pos:line="126" pos:column="29"/></modifier></type><name pos:line="126" pos:column="29">context<pos:position pos:line="126" pos:column="36"/></name></decl>;<pos:position pos:line="126" pos:column="37"/></decl_stmt>
	    <expr_stmt><expr><name><name pos:line="127" pos:column="13">entity<pos:position pos:line="127" pos:column="19"/></name><operator pos:line="127" pos:column="19">-&gt;<pos:position pos:line="127" pos:column="24"/></operator><name pos:line="127" pos:column="21">open<pos:position pos:line="127" pos:column="25"/></name></name> <operator pos:line="127" pos:column="26">=<pos:position pos:line="127" pos:column="27"/></operator> <literal type="number" pos:line="127" pos:column="28">1<pos:position pos:line="127" pos:column="29"/></literal></expr>;<pos:position pos:line="127" pos:column="30"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="128" pos:column="13">context<pos:position pos:line="128" pos:column="20"/></name> <operator pos:line="128" pos:column="21">=<pos:position pos:line="128" pos:column="22"/></operator> <call><name pos:line="128" pos:column="23">getContext<pos:position pos:line="128" pos:column="33"/></name><argument_list pos:line="128" pos:column="33">(<argument><expr><name pos:line="128" pos:column="34">parser<pos:position pos:line="128" pos:column="40"/></name></expr></argument>)<pos:position pos:line="128" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="42"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="129" pos:column="13">entity<pos:position pos:line="129" pos:column="19"/></name><operator pos:line="129" pos:column="19">-&gt;<pos:position pos:line="129" pos:column="24"/></operator><name pos:line="129" pos:column="21">open<pos:position pos:line="129" pos:column="25"/></name></name> <operator pos:line="129" pos:column="26">=<pos:position pos:line="129" pos:column="27"/></operator> <literal type="number" pos:line="129" pos:column="28">0<pos:position pos:line="129" pos:column="29"/></literal></expr>;<pos:position pos:line="129" pos:column="30"/></expr_stmt>
	    <if pos:line="130" pos:column="13">if <condition pos:line="130" pos:column="16">(<expr><operator pos:line="130" pos:column="17">!<pos:position pos:line="130" pos:column="18"/></operator><name pos:line="130" pos:column="18">context<pos:position pos:line="130" pos:column="25"/></name></expr>)<pos:position pos:line="130" pos:column="26"/></condition><then pos:line="130" pos:column="26">
	      <block type="pseudo"><return pos:line="131" pos:column="15">return <expr><name pos:line="131" pos:column="22">XML_ERROR_NO_MEMORY<pos:position pos:line="131" pos:column="41"/></name></expr>;<pos:position pos:line="131" pos:column="42"/></return></block></then></if>
	    <if pos:line="132" pos:column="13">if <condition pos:line="132" pos:column="16">(<expr><operator pos:line="132" pos:column="17">!<pos:position pos:line="132" pos:column="18"/></operator><call><name pos:line="132" pos:column="18">externalEntityRefHandler<pos:position pos:line="132" pos:column="42"/></name><argument_list pos:line="132" pos:column="42">(<argument><expr><name pos:line="132" pos:column="43">externalEntityRefHandlerArg<pos:position pos:line="132" pos:column="70"/></name></expr></argument>,
				          <argument><expr><name pos:line="133" pos:column="43">context<pos:position pos:line="133" pos:column="50"/></name></expr></argument>,
					  <argument><expr><name><name pos:line="134" pos:column="43">entity<pos:position pos:line="134" pos:column="49"/></name><operator pos:line="134" pos:column="49">-&gt;<pos:position pos:line="134" pos:column="54"/></operator><name pos:line="134" pos:column="51">base<pos:position pos:line="134" pos:column="55"/></name></name></expr></argument>,
					  <argument><expr><name><name pos:line="135" pos:column="43">entity<pos:position pos:line="135" pos:column="49"/></name><operator pos:line="135" pos:column="49">-&gt;<pos:position pos:line="135" pos:column="54"/></operator><name pos:line="135" pos:column="51">systemId<pos:position pos:line="135" pos:column="59"/></name></name></expr></argument>,
					  <argument><expr><name><name pos:line="136" pos:column="43">entity<pos:position pos:line="136" pos:column="49"/></name><operator pos:line="136" pos:column="49">-&gt;<pos:position pos:line="136" pos:column="54"/></operator><name pos:line="136" pos:column="51">publicId<pos:position pos:line="136" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="136" pos:column="61"/></condition><then pos:line="136" pos:column="61">
	      <block type="pseudo"><return pos:line="137" pos:column="15">return <expr><name pos:line="137" pos:column="22">XML_ERROR_EXTERNAL_ENTITY_HANDLING<pos:position pos:line="137" pos:column="56"/></name></expr>;<pos:position pos:line="137" pos:column="57"/></return></block></then></if>
	    <expr_stmt><expr><call><name pos:line="138" pos:column="13">poolDiscard<pos:position pos:line="138" pos:column="24"/></name><argument_list pos:line="138" pos:column="24">(<argument><expr><operator pos:line="138" pos:column="25">&amp;<pos:position pos:line="138" pos:column="30"/></operator><name pos:line="138" pos:column="26">tempPool<pos:position pos:line="138" pos:column="34"/></name></expr></argument>)<pos:position pos:line="138" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="36"/></expr_stmt>
	  }<pos:position pos:line="139" pos:column="12"/></block></then></if></elseif>
	  <elseif pos:line="140" pos:column="11">else <if pos:line="140" pos:column="16">if <condition pos:line="140" pos:column="19">(<expr><name pos:line="140" pos:column="20">defaultHandler<pos:position pos:line="140" pos:column="34"/></name></expr>)<pos:position pos:line="140" pos:column="35"/></condition><then pos:line="140" pos:column="35">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="141" pos:column="13">reportDefault<pos:position pos:line="141" pos:column="26"/></name><argument_list pos:line="141" pos:column="26">(<argument><expr><name pos:line="141" pos:column="27">parser<pos:position pos:line="141" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="35">enc<pos:position pos:line="141" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="40">s<pos:position pos:line="141" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="43">next<pos:position pos:line="141" pos:column="47"/></name></expr></argument>)<pos:position pos:line="141" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="49"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="142" pos:column="10"/></block></then></if>
	<break pos:line="143" pos:column="9">break;<pos:position pos:line="143" pos:column="15"/></break>
      }<pos:position pos:line="144" pos:column="8"/></block>
    <case pos:line="145" pos:column="5">case <expr><name pos:line="145" pos:column="10">XML_TOK_START_TAG_WITH_ATTS<pos:position pos:line="145" pos:column="37"/></name></expr>:<pos:position pos:line="145" pos:column="38"/></case>
      <if pos:line="146" pos:column="7">if <condition pos:line="146" pos:column="10">(<expr><operator pos:line="146" pos:column="11">!<pos:position pos:line="146" pos:column="12"/></operator><name pos:line="146" pos:column="12">startElementHandler<pos:position pos:line="146" pos:column="31"/></name></expr>)<pos:position pos:line="146" pos:column="32"/></condition><then pos:line="146" pos:column="32"> <block pos:line="146" pos:column="33">{
	<decl_stmt><decl><type><name><name pos:line="147" pos:column="9">enum<pos:position pos:line="147" pos:column="13"/></name> <name pos:line="147" pos:column="14">XML_Error<pos:position pos:line="147" pos:column="23"/></name></name></type> <name pos:line="147" pos:column="24">result<pos:position pos:line="147" pos:column="30"/></name> <init pos:line="147" pos:column="31">= <expr><call><name pos:line="147" pos:column="33">storeAtts<pos:position pos:line="147" pos:column="42"/></name><argument_list pos:line="147" pos:column="42">(<argument><expr><name pos:line="147" pos:column="43">parser<pos:position pos:line="147" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="51">enc<pos:position pos:line="147" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="56">s<pos:position pos:line="147" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="147" pos:column="59">0<pos:position pos:line="147" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="147" pos:column="62">0<pos:position pos:line="147" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="147" pos:column="65"/></decl_stmt>
	<if pos:line="148" pos:column="9">if <condition pos:line="148" pos:column="12">(<expr><name pos:line="148" pos:column="13">result<pos:position pos:line="148" pos:column="19"/></name></expr>)<pos:position pos:line="148" pos:column="20"/></condition><then pos:line="148" pos:column="20">
	  <block type="pseudo"><return pos:line="149" pos:column="11">return <expr><name pos:line="149" pos:column="18">result<pos:position pos:line="149" pos:column="24"/></name></expr>;<pos:position pos:line="149" pos:column="25"/></return></block></then></if>
      }<pos:position pos:line="150" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="151" pos:column="7">/* fall through */</comment>
    <case pos:line="152" pos:column="5">case <expr><name pos:line="152" pos:column="10">XML_TOK_START_TAG_NO_ATTS<pos:position pos:line="152" pos:column="35"/></name></expr>:<pos:position pos:line="152" pos:column="36"/></case>
      <block pos:line="153" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="154" pos:column="9">TAG<pos:position pos:line="154" pos:column="12"/></name> <modifier pos:line="154" pos:column="13">*<pos:position pos:line="154" pos:column="14"/></modifier></type><name pos:line="154" pos:column="14">tag<pos:position pos:line="154" pos:column="17"/></name></decl>;<pos:position pos:line="154" pos:column="18"/></decl_stmt>
	<if pos:line="155" pos:column="9">if <condition pos:line="155" pos:column="12">(<expr><name pos:line="155" pos:column="13">freeTagList<pos:position pos:line="155" pos:column="24"/></name></expr>)<pos:position pos:line="155" pos:column="25"/></condition><then pos:line="155" pos:column="25"> <block pos:line="155" pos:column="26">{
	  <expr_stmt><expr><name pos:line="156" pos:column="11">tag<pos:position pos:line="156" pos:column="14"/></name> <operator pos:line="156" pos:column="15">=<pos:position pos:line="156" pos:column="16"/></operator> <name pos:line="156" pos:column="17">freeTagList<pos:position pos:line="156" pos:column="28"/></name></expr>;<pos:position pos:line="156" pos:column="29"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="157" pos:column="11">freeTagList<pos:position pos:line="157" pos:column="22"/></name> <operator pos:line="157" pos:column="23">=<pos:position pos:line="157" pos:column="24"/></operator> <name><name pos:line="157" pos:column="25">freeTagList<pos:position pos:line="157" pos:column="36"/></name><operator pos:line="157" pos:column="36">-&gt;<pos:position pos:line="157" pos:column="41"/></operator><name pos:line="157" pos:column="38">parent<pos:position pos:line="157" pos:column="44"/></name></name></expr>;<pos:position pos:line="157" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="158" pos:column="10"/></block></then>
	<else pos:line="159" pos:column="9">else <block pos:line="159" pos:column="14">{
	  <expr_stmt><expr><name pos:line="160" pos:column="11">tag<pos:position pos:line="160" pos:column="14"/></name> <operator pos:line="160" pos:column="15">=<pos:position pos:line="160" pos:column="16"/></operator> <call><name pos:line="160" pos:column="17">MALLOC<pos:position pos:line="160" pos:column="23"/></name><argument_list pos:line="160" pos:column="23">(<argument><expr><sizeof pos:line="160" pos:column="24">sizeof<argument_list pos:line="160" pos:column="30">(<argument><expr><name pos:line="160" pos:column="31">TAG<pos:position pos:line="160" pos:column="34"/></name></expr></argument>)<pos:position pos:line="160" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="160" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="37"/></expr_stmt>
	  <if pos:line="161" pos:column="11">if <condition pos:line="161" pos:column="14">(<expr><operator pos:line="161" pos:column="15">!<pos:position pos:line="161" pos:column="16"/></operator><name pos:line="161" pos:column="16">tag<pos:position pos:line="161" pos:column="19"/></name></expr>)<pos:position pos:line="161" pos:column="20"/></condition><then pos:line="161" pos:column="20">
	    <block type="pseudo"><return pos:line="162" pos:column="13">return <expr><name pos:line="162" pos:column="20">XML_ERROR_NO_MEMORY<pos:position pos:line="162" pos:column="39"/></name></expr>;<pos:position pos:line="162" pos:column="40"/></return></block></then></if>
	  <expr_stmt><expr><name><name pos:line="163" pos:column="11">tag<pos:position pos:line="163" pos:column="14"/></name><operator pos:line="163" pos:column="14">-&gt;<pos:position pos:line="163" pos:column="19"/></operator><name pos:line="163" pos:column="16">buf<pos:position pos:line="163" pos:column="19"/></name></name> <operator pos:line="163" pos:column="20">=<pos:position pos:line="163" pos:column="21"/></operator> <call><name pos:line="163" pos:column="22">MALLOC<pos:position pos:line="163" pos:column="28"/></name><argument_list pos:line="163" pos:column="28">(<argument><expr><name pos:line="163" pos:column="29">INIT_TAG_BUF_SIZE<pos:position pos:line="163" pos:column="46"/></name></expr></argument>)<pos:position pos:line="163" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="48"/></expr_stmt>
	  <if pos:line="164" pos:column="11">if <condition pos:line="164" pos:column="14">(<expr><operator pos:line="164" pos:column="15">!<pos:position pos:line="164" pos:column="16"/></operator><name><name pos:line="164" pos:column="16">tag<pos:position pos:line="164" pos:column="19"/></name><operator pos:line="164" pos:column="19">-&gt;<pos:position pos:line="164" pos:column="24"/></operator><name pos:line="164" pos:column="21">buf<pos:position pos:line="164" pos:column="24"/></name></name></expr>)<pos:position pos:line="164" pos:column="25"/></condition><then pos:line="164" pos:column="25">
	    <block type="pseudo"><return pos:line="165" pos:column="13">return <expr><name pos:line="165" pos:column="20">XML_ERROR_NO_MEMORY<pos:position pos:line="165" pos:column="39"/></name></expr>;<pos:position pos:line="165" pos:column="40"/></return></block></then></if>
	  <expr_stmt><expr><name><name pos:line="166" pos:column="11">tag<pos:position pos:line="166" pos:column="14"/></name><operator pos:line="166" pos:column="14">-&gt;<pos:position pos:line="166" pos:column="19"/></operator><name pos:line="166" pos:column="16">bufEnd<pos:position pos:line="166" pos:column="22"/></name></name> <operator pos:line="166" pos:column="23">=<pos:position pos:line="166" pos:column="24"/></operator> <name><name pos:line="166" pos:column="25">tag<pos:position pos:line="166" pos:column="28"/></name><operator pos:line="166" pos:column="28">-&gt;<pos:position pos:line="166" pos:column="33"/></operator><name pos:line="166" pos:column="30">buf<pos:position pos:line="166" pos:column="33"/></name></name> <operator pos:line="166" pos:column="34">+<pos:position pos:line="166" pos:column="35"/></operator> <name pos:line="166" pos:column="36">INIT_TAG_BUF_SIZE<pos:position pos:line="166" pos:column="53"/></name></expr>;<pos:position pos:line="166" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="167" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name><name pos:line="168" pos:column="9">tag<pos:position pos:line="168" pos:column="12"/></name><operator pos:line="168" pos:column="12">-&gt;<pos:position pos:line="168" pos:column="17"/></operator><name pos:line="168" pos:column="14">bindings<pos:position pos:line="168" pos:column="22"/></name></name> <operator pos:line="168" pos:column="23">=<pos:position pos:line="168" pos:column="24"/></operator> <literal type="number" pos:line="168" pos:column="25">0<pos:position pos:line="168" pos:column="26"/></literal></expr>;<pos:position pos:line="168" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="169" pos:column="9">tag<pos:position pos:line="169" pos:column="12"/></name><operator pos:line="169" pos:column="12">-&gt;<pos:position pos:line="169" pos:column="17"/></operator><name pos:line="169" pos:column="14">parent<pos:position pos:line="169" pos:column="20"/></name></name> <operator pos:line="169" pos:column="21">=<pos:position pos:line="169" pos:column="22"/></operator> <name pos:line="169" pos:column="23">tagStack<pos:position pos:line="169" pos:column="31"/></name></expr>;<pos:position pos:line="169" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="170" pos:column="9">tagStack<pos:position pos:line="170" pos:column="17"/></name> <operator pos:line="170" pos:column="18">=<pos:position pos:line="170" pos:column="19"/></operator> <name pos:line="170" pos:column="20">tag<pos:position pos:line="170" pos:column="23"/></name></expr>;<pos:position pos:line="170" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="171" pos:column="9">tag<pos:position pos:line="171" pos:column="12"/></name><operator pos:line="171" pos:column="12">-&gt;<pos:position pos:line="171" pos:column="17"/></operator><name pos:line="171" pos:column="14">name<pos:position pos:line="171" pos:column="18"/></name><operator pos:line="171" pos:column="18">.<pos:position pos:line="171" pos:column="19"/></operator><name pos:line="171" pos:column="19">localPart<pos:position pos:line="171" pos:column="28"/></name></name> <operator pos:line="171" pos:column="29">=<pos:position pos:line="171" pos:column="30"/></operator> <literal type="number" pos:line="171" pos:column="31">0<pos:position pos:line="171" pos:column="32"/></literal></expr>;<pos:position pos:line="171" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="172" pos:column="9">tag<pos:position pos:line="172" pos:column="12"/></name><operator pos:line="172" pos:column="12">-&gt;<pos:position pos:line="172" pos:column="17"/></operator><name pos:line="172" pos:column="14">rawName<pos:position pos:line="172" pos:column="21"/></name></name> <operator pos:line="172" pos:column="22">=<pos:position pos:line="172" pos:column="23"/></operator> <name pos:line="172" pos:column="24">s<pos:position pos:line="172" pos:column="25"/></name> <operator pos:line="172" pos:column="26">+<pos:position pos:line="172" pos:column="27"/></operator> <name><name pos:line="172" pos:column="28">enc<pos:position pos:line="172" pos:column="31"/></name><operator pos:line="172" pos:column="31">-&gt;<pos:position pos:line="172" pos:column="36"/></operator><name pos:line="172" pos:column="33">minBytesPerChar<pos:position pos:line="172" pos:column="48"/></name></name></expr>;<pos:position pos:line="172" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="173" pos:column="9">tag<pos:position pos:line="173" pos:column="12"/></name><operator pos:line="173" pos:column="12">-&gt;<pos:position pos:line="173" pos:column="17"/></operator><name pos:line="173" pos:column="14">rawNameLength<pos:position pos:line="173" pos:column="27"/></name></name> <operator pos:line="173" pos:column="28">=<pos:position pos:line="173" pos:column="29"/></operator> <call><name pos:line="173" pos:column="30">XmlNameLength<pos:position pos:line="173" pos:column="43"/></name><argument_list pos:line="173" pos:column="43">(<argument><expr><name pos:line="173" pos:column="44">enc<pos:position pos:line="173" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="173" pos:column="49">tag<pos:position pos:line="173" pos:column="52"/></name><operator pos:line="173" pos:column="52">-&gt;<pos:position pos:line="173" pos:column="57"/></operator><name pos:line="173" pos:column="54">rawName<pos:position pos:line="173" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="173" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="63"/></expr_stmt>
	<if pos:line="174" pos:column="9">if <condition pos:line="174" pos:column="12">(<expr><name pos:line="174" pos:column="13">nextPtr<pos:position pos:line="174" pos:column="20"/></name></expr>)<pos:position pos:line="174" pos:column="21"/></condition><then pos:line="174" pos:column="21"> <block pos:line="174" pos:column="22">{
	  <comment type="block" pos:line="175" pos:column="11">/* Need to guarantee that:
	     tag-&gt;buf + ROUND_UP(tag-&gt;rawNameLength, sizeof(XML_Char)) &lt;= tag-&gt;bufEnd - sizeof(XML_Char) */</comment>
	  <if pos:line="177" pos:column="11">if <condition pos:line="177" pos:column="14">(<expr><name><name pos:line="177" pos:column="15">tag<pos:position pos:line="177" pos:column="18"/></name><operator pos:line="177" pos:column="18">-&gt;<pos:position pos:line="177" pos:column="23"/></operator><name pos:line="177" pos:column="20">rawNameLength<pos:position pos:line="177" pos:column="33"/></name></name> <operator pos:line="177" pos:column="34">+<pos:position pos:line="177" pos:column="35"/></operator> <call pos:line="177" pos:column="36">(<name pos:line="177" pos:column="37">int<pos:position pos:line="177" pos:column="40"/></name>)<argument_list pos:line="177" pos:column="41">(<argument><expr><sizeof pos:line="177" pos:column="42">sizeof<argument_list pos:line="177" pos:column="48">(<argument><expr><name pos:line="177" pos:column="49">XML_Char<pos:position pos:line="177" pos:column="57"/></name></expr></argument>)<pos:position pos:line="177" pos:column="58"/></argument_list></sizeof> <operator pos:line="177" pos:column="59">-<pos:position pos:line="177" pos:column="60"/></operator> <literal type="number" pos:line="177" pos:column="61">1<pos:position pos:line="177" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="63"/></argument_list></call> <operator pos:line="177" pos:column="64">+<pos:position pos:line="177" pos:column="65"/></operator> <operator pos:line="177" pos:column="66">(<pos:position pos:line="177" pos:column="67"/></operator><name pos:line="177" pos:column="67">int<pos:position pos:line="177" pos:column="70"/></name><operator pos:line="177" pos:column="70">)<pos:position pos:line="177" pos:column="71"/></operator><sizeof pos:line="177" pos:column="71">sizeof<argument_list pos:line="177" pos:column="77">(<argument><expr><name pos:line="177" pos:column="78">XML_Char<pos:position pos:line="177" pos:column="86"/></name></expr></argument>)<pos:position pos:line="177" pos:column="87"/></argument_list></sizeof> <operator pos:line="177" pos:column="88">&gt;<pos:position pos:line="177" pos:column="92"/></operator> <name><name pos:line="177" pos:column="90">tag<pos:position pos:line="177" pos:column="93"/></name><operator pos:line="177" pos:column="93">-&gt;<pos:position pos:line="177" pos:column="98"/></operator><name pos:line="177" pos:column="95">bufEnd<pos:position pos:line="177" pos:column="101"/></name></name> <operator pos:line="177" pos:column="102">-<pos:position pos:line="177" pos:column="103"/></operator> <name><name pos:line="177" pos:column="104">tag<pos:position pos:line="177" pos:column="107"/></name><operator pos:line="177" pos:column="107">-&gt;<pos:position pos:line="177" pos:column="112"/></operator><name pos:line="177" pos:column="109">buf<pos:position pos:line="177" pos:column="112"/></name></name></expr>)<pos:position pos:line="177" pos:column="113"/></condition><then pos:line="177" pos:column="113"> <block pos:line="177" pos:column="114">{
	    <decl_stmt><decl><type><name pos:line="178" pos:column="13">int<pos:position pos:line="178" pos:column="16"/></name></type> <name pos:line="178" pos:column="17">bufSize<pos:position pos:line="178" pos:column="24"/></name> <init pos:line="178" pos:column="25">= <expr><name><name pos:line="178" pos:column="27">tag<pos:position pos:line="178" pos:column="30"/></name><operator pos:line="178" pos:column="30">-&gt;<pos:position pos:line="178" pos:column="35"/></operator><name pos:line="178" pos:column="32">rawNameLength<pos:position pos:line="178" pos:column="45"/></name></name> <operator pos:line="178" pos:column="46">*<pos:position pos:line="178" pos:column="47"/></operator> <literal type="number" pos:line="178" pos:column="48">4<pos:position pos:line="178" pos:column="49"/></literal></expr></init></decl>;<pos:position pos:line="178" pos:column="50"/></decl_stmt>
	    <expr_stmt><expr><name pos:line="179" pos:column="13">bufSize<pos:position pos:line="179" pos:column="20"/></name> <operator pos:line="179" pos:column="21">=<pos:position pos:line="179" pos:column="22"/></operator> <call><name pos:line="179" pos:column="23">ROUND_UP<pos:position pos:line="179" pos:column="31"/></name><argument_list pos:line="179" pos:column="31">(<argument><expr><name pos:line="179" pos:column="32">bufSize<pos:position pos:line="179" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="179" pos:column="41">sizeof<argument_list pos:line="179" pos:column="47">(<argument><expr><name pos:line="179" pos:column="48">XML_Char<pos:position pos:line="179" pos:column="56"/></name></expr></argument>)<pos:position pos:line="179" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="179" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="59"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="180" pos:column="13">tag<pos:position pos:line="180" pos:column="16"/></name><operator pos:line="180" pos:column="16">-&gt;<pos:position pos:line="180" pos:column="21"/></operator><name pos:line="180" pos:column="18">buf<pos:position pos:line="180" pos:column="21"/></name></name> <operator pos:line="180" pos:column="22">=<pos:position pos:line="180" pos:column="23"/></operator> <call><name pos:line="180" pos:column="24">REALLOC<pos:position pos:line="180" pos:column="31"/></name><argument_list pos:line="180" pos:column="31">(<argument><expr><name><name pos:line="180" pos:column="32">tag<pos:position pos:line="180" pos:column="35"/></name><operator pos:line="180" pos:column="35">-&gt;<pos:position pos:line="180" pos:column="40"/></operator><name pos:line="180" pos:column="37">buf<pos:position pos:line="180" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="42">bufSize<pos:position pos:line="180" pos:column="49"/></name></expr></argument>)<pos:position pos:line="180" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="51"/></expr_stmt>
	    <if pos:line="181" pos:column="13">if <condition pos:line="181" pos:column="16">(<expr><operator pos:line="181" pos:column="17">!<pos:position pos:line="181" pos:column="18"/></operator><name><name pos:line="181" pos:column="18">tag<pos:position pos:line="181" pos:column="21"/></name><operator pos:line="181" pos:column="21">-&gt;<pos:position pos:line="181" pos:column="26"/></operator><name pos:line="181" pos:column="23">buf<pos:position pos:line="181" pos:column="26"/></name></name></expr>)<pos:position pos:line="181" pos:column="27"/></condition><then pos:line="181" pos:column="27">
	      <block type="pseudo"><return pos:line="182" pos:column="15">return <expr><name pos:line="182" pos:column="22">XML_ERROR_NO_MEMORY<pos:position pos:line="182" pos:column="41"/></name></expr>;<pos:position pos:line="182" pos:column="42"/></return></block></then></if>
	    <expr_stmt><expr><name><name pos:line="183" pos:column="13">tag<pos:position pos:line="183" pos:column="16"/></name><operator pos:line="183" pos:column="16">-&gt;<pos:position pos:line="183" pos:column="21"/></operator><name pos:line="183" pos:column="18">bufEnd<pos:position pos:line="183" pos:column="24"/></name></name> <operator pos:line="183" pos:column="25">=<pos:position pos:line="183" pos:column="26"/></operator> <name><name pos:line="183" pos:column="27">tag<pos:position pos:line="183" pos:column="30"/></name><operator pos:line="183" pos:column="30">-&gt;<pos:position pos:line="183" pos:column="35"/></operator><name pos:line="183" pos:column="32">buf<pos:position pos:line="183" pos:column="35"/></name></name> <operator pos:line="183" pos:column="36">+<pos:position pos:line="183" pos:column="37"/></operator> <name pos:line="183" pos:column="38">bufSize<pos:position pos:line="183" pos:column="45"/></name></expr>;<pos:position pos:line="183" pos:column="46"/></expr_stmt>
	  }<pos:position pos:line="184" pos:column="12"/></block></then></if>
	  <expr_stmt><expr><call><name pos:line="185" pos:column="11">memcpy<pos:position pos:line="185" pos:column="17"/></name><argument_list pos:line="185" pos:column="17">(<argument><expr><name><name pos:line="185" pos:column="18">tag<pos:position pos:line="185" pos:column="21"/></name><operator pos:line="185" pos:column="21">-&gt;<pos:position pos:line="185" pos:column="26"/></operator><name pos:line="185" pos:column="23">buf<pos:position pos:line="185" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="185" pos:column="28">tag<pos:position pos:line="185" pos:column="31"/></name><operator pos:line="185" pos:column="31">-&gt;<pos:position pos:line="185" pos:column="36"/></operator><name pos:line="185" pos:column="33">rawName<pos:position pos:line="185" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="185" pos:column="42">tag<pos:position pos:line="185" pos:column="45"/></name><operator pos:line="185" pos:column="45">-&gt;<pos:position pos:line="185" pos:column="50"/></operator><name pos:line="185" pos:column="47">rawNameLength<pos:position pos:line="185" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="185" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="62"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="186" pos:column="11">tag<pos:position pos:line="186" pos:column="14"/></name><operator pos:line="186" pos:column="14">-&gt;<pos:position pos:line="186" pos:column="19"/></operator><name pos:line="186" pos:column="16">rawName<pos:position pos:line="186" pos:column="23"/></name></name> <operator pos:line="186" pos:column="24">=<pos:position pos:line="186" pos:column="25"/></operator> <name><name pos:line="186" pos:column="26">tag<pos:position pos:line="186" pos:column="29"/></name><operator pos:line="186" pos:column="29">-&gt;<pos:position pos:line="186" pos:column="34"/></operator><name pos:line="186" pos:column="31">buf<pos:position pos:line="186" pos:column="34"/></name></name></expr>;<pos:position pos:line="186" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="187" pos:column="10"/></block></then></if>
	<expr_stmt><expr><operator pos:line="188" pos:column="9">++<pos:position pos:line="188" pos:column="11"/></operator><name pos:line="188" pos:column="11">tagLevel<pos:position pos:line="188" pos:column="19"/></name></expr>;<pos:position pos:line="188" pos:column="20"/></expr_stmt>
	<if pos:line="189" pos:column="9">if <condition pos:line="189" pos:column="12">(<expr><name pos:line="189" pos:column="13">startElementHandler<pos:position pos:line="189" pos:column="32"/></name></expr>)<pos:position pos:line="189" pos:column="33"/></condition><then pos:line="189" pos:column="33"> <block pos:line="189" pos:column="34">{
	  <decl_stmt><decl><type><name><name pos:line="190" pos:column="11">enum<pos:position pos:line="190" pos:column="15"/></name> <name pos:line="190" pos:column="16">XML_Error<pos:position pos:line="190" pos:column="25"/></name></name></type> <name pos:line="190" pos:column="26">result<pos:position pos:line="190" pos:column="32"/></name></decl>;<pos:position pos:line="190" pos:column="33"/></decl_stmt>
	  <decl_stmt><decl><type><name pos:line="191" pos:column="11">XML_Char<pos:position pos:line="191" pos:column="19"/></name> <modifier pos:line="191" pos:column="20">*<pos:position pos:line="191" pos:column="21"/></modifier></type><name pos:line="191" pos:column="21">toPtr<pos:position pos:line="191" pos:column="26"/></name></decl>;<pos:position pos:line="191" pos:column="27"/></decl_stmt>
	  <for pos:line="192" pos:column="11">for <control pos:line="192" pos:column="15">(<init pos:line="192" pos:column="16">;<pos:position pos:line="192" pos:column="17"/></init><condition pos:line="192" pos:column="17">;<pos:position pos:line="192" pos:column="18"/></condition><incr/>)<pos:position pos:line="192" pos:column="19"/></control> <block pos:line="192" pos:column="20">{
	    <decl_stmt><decl><type><specifier pos:line="193" pos:column="13">const<pos:position pos:line="193" pos:column="18"/></specifier> <name pos:line="193" pos:column="19">char<pos:position pos:line="193" pos:column="23"/></name> <modifier pos:line="193" pos:column="24">*<pos:position pos:line="193" pos:column="25"/></modifier></type><name pos:line="193" pos:column="25">rawNameEnd<pos:position pos:line="193" pos:column="35"/></name> <init pos:line="193" pos:column="36">= <expr><name><name pos:line="193" pos:column="38">tag<pos:position pos:line="193" pos:column="41"/></name><operator pos:line="193" pos:column="41">-&gt;<pos:position pos:line="193" pos:column="46"/></operator><name pos:line="193" pos:column="43">rawName<pos:position pos:line="193" pos:column="50"/></name></name> <operator pos:line="193" pos:column="51">+<pos:position pos:line="193" pos:column="52"/></operator> <name><name pos:line="193" pos:column="53">tag<pos:position pos:line="193" pos:column="56"/></name><operator pos:line="193" pos:column="56">-&gt;<pos:position pos:line="193" pos:column="61"/></operator><name pos:line="193" pos:column="58">rawNameLength<pos:position pos:line="193" pos:column="71"/></name></name></expr></init></decl>;<pos:position pos:line="193" pos:column="72"/></decl_stmt>
	    <decl_stmt><decl><type><specifier pos:line="194" pos:column="13">const<pos:position pos:line="194" pos:column="18"/></specifier> <name pos:line="194" pos:column="19">char<pos:position pos:line="194" pos:column="23"/></name> <modifier pos:line="194" pos:column="24">*<pos:position pos:line="194" pos:column="25"/></modifier></type><name pos:line="194" pos:column="25">fromPtr<pos:position pos:line="194" pos:column="32"/></name> <init pos:line="194" pos:column="33">= <expr><name><name pos:line="194" pos:column="35">tag<pos:position pos:line="194" pos:column="38"/></name><operator pos:line="194" pos:column="38">-&gt;<pos:position pos:line="194" pos:column="43"/></operator><name pos:line="194" pos:column="40">rawName<pos:position pos:line="194" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="194" pos:column="48"/></decl_stmt>
	    <decl_stmt><decl><type><name pos:line="195" pos:column="13">int<pos:position pos:line="195" pos:column="16"/></name></type> <name pos:line="195" pos:column="17">bufSize<pos:position pos:line="195" pos:column="24"/></name></decl>;<pos:position pos:line="195" pos:column="25"/></decl_stmt>
	    <if pos:line="196" pos:column="13">if <condition pos:line="196" pos:column="16">(<expr><name pos:line="196" pos:column="17">nextPtr<pos:position pos:line="196" pos:column="24"/></name></expr>)<pos:position pos:line="196" pos:column="25"/></condition><then pos:line="196" pos:column="25">
	      <block type="pseudo"><expr_stmt><expr><name pos:line="197" pos:column="15">toPtr<pos:position pos:line="197" pos:column="20"/></name> <operator pos:line="197" pos:column="21">=<pos:position pos:line="197" pos:column="22"/></operator> <operator pos:line="197" pos:column="23">(<pos:position pos:line="197" pos:column="24"/></operator><name pos:line="197" pos:column="24">XML_Char<pos:position pos:line="197" pos:column="32"/></name> <operator pos:line="197" pos:column="33">*<pos:position pos:line="197" pos:column="34"/></operator><operator pos:line="197" pos:column="34">)<pos:position pos:line="197" pos:column="35"/></operator><operator pos:line="197" pos:column="35">(<pos:position pos:line="197" pos:column="36"/></operator><name><name pos:line="197" pos:column="36">tag<pos:position pos:line="197" pos:column="39"/></name><operator pos:line="197" pos:column="39">-&gt;<pos:position pos:line="197" pos:column="44"/></operator><name pos:line="197" pos:column="41">buf<pos:position pos:line="197" pos:column="44"/></name></name> <operator pos:line="197" pos:column="45">+<pos:position pos:line="197" pos:column="46"/></operator> <call><name pos:line="197" pos:column="47">ROUND_UP<pos:position pos:line="197" pos:column="55"/></name><argument_list pos:line="197" pos:column="55">(<argument><expr><name><name pos:line="197" pos:column="56">tag<pos:position pos:line="197" pos:column="59"/></name><operator pos:line="197" pos:column="59">-&gt;<pos:position pos:line="197" pos:column="64"/></operator><name pos:line="197" pos:column="61">rawNameLength<pos:position pos:line="197" pos:column="74"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="197" pos:column="76">sizeof<argument_list pos:line="197" pos:column="82">(<argument><expr><name pos:line="197" pos:column="83">XML_Char<pos:position pos:line="197" pos:column="91"/></name></expr></argument>)<pos:position pos:line="197" pos:column="92"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="197" pos:column="93"/></argument_list></call><operator pos:line="197" pos:column="93">)<pos:position pos:line="197" pos:column="94"/></operator></expr>;<pos:position pos:line="197" pos:column="95"/></expr_stmt></block></then>
	    <else pos:line="198" pos:column="13">else
	      <block type="pseudo"><expr_stmt><expr><name pos:line="199" pos:column="15">toPtr<pos:position pos:line="199" pos:column="20"/></name> <operator pos:line="199" pos:column="21">=<pos:position pos:line="199" pos:column="22"/></operator> <operator pos:line="199" pos:column="23">(<pos:position pos:line="199" pos:column="24"/></operator><name pos:line="199" pos:column="24">XML_Char<pos:position pos:line="199" pos:column="32"/></name> <operator pos:line="199" pos:column="33">*<pos:position pos:line="199" pos:column="34"/></operator><operator pos:line="199" pos:column="34">)<pos:position pos:line="199" pos:column="35"/></operator><name><name pos:line="199" pos:column="35">tag<pos:position pos:line="199" pos:column="38"/></name><operator pos:line="199" pos:column="38">-&gt;<pos:position pos:line="199" pos:column="43"/></operator><name pos:line="199" pos:column="40">buf<pos:position pos:line="199" pos:column="43"/></name></name></expr>;<pos:position pos:line="199" pos:column="44"/></expr_stmt></block></else></if>
	    <expr_stmt><expr><name><name pos:line="200" pos:column="13">tag<pos:position pos:line="200" pos:column="16"/></name><operator pos:line="200" pos:column="16">-&gt;<pos:position pos:line="200" pos:column="21"/></operator><name pos:line="200" pos:column="18">name<pos:position pos:line="200" pos:column="22"/></name><operator pos:line="200" pos:column="22">.<pos:position pos:line="200" pos:column="23"/></operator><name pos:line="200" pos:column="23">str<pos:position pos:line="200" pos:column="26"/></name></name> <operator pos:line="200" pos:column="27">=<pos:position pos:line="200" pos:column="28"/></operator> <name pos:line="200" pos:column="29">toPtr<pos:position pos:line="200" pos:column="34"/></name></expr>;<pos:position pos:line="200" pos:column="35"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="201" pos:column="13">XmlConvert<pos:position pos:line="201" pos:column="23"/></name><argument_list pos:line="201" pos:column="23">(<argument><expr><name pos:line="201" pos:column="24">enc<pos:position pos:line="201" pos:column="27"/></name></expr></argument>,
		       <argument><expr><operator pos:line="202" pos:column="24">&amp;<pos:position pos:line="202" pos:column="29"/></operator><name pos:line="202" pos:column="25">fromPtr<pos:position pos:line="202" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="34">rawNameEnd<pos:position pos:line="202" pos:column="44"/></name></expr></argument>,
		       <argument><expr><operator pos:line="203" pos:column="24">(<pos:position pos:line="203" pos:column="25"/></operator><name pos:line="203" pos:column="25">ICHAR<pos:position pos:line="203" pos:column="30"/></name> <operator pos:line="203" pos:column="31">*<pos:position pos:line="203" pos:column="32"/></operator><operator pos:line="203" pos:column="32">*<pos:position pos:line="203" pos:column="33"/></operator><operator pos:line="203" pos:column="33">)<pos:position pos:line="203" pos:column="34"/></operator><operator pos:line="203" pos:column="34">&amp;<pos:position pos:line="203" pos:column="39"/></operator><name pos:line="203" pos:column="35">toPtr<pos:position pos:line="203" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="203" pos:column="42">(<pos:position pos:line="203" pos:column="43"/></operator><name pos:line="203" pos:column="43">ICHAR<pos:position pos:line="203" pos:column="48"/></name> <operator pos:line="203" pos:column="49">*<pos:position pos:line="203" pos:column="50"/></operator><operator pos:line="203" pos:column="50">)<pos:position pos:line="203" pos:column="51"/></operator><name><name pos:line="203" pos:column="51">tag<pos:position pos:line="203" pos:column="54"/></name><operator pos:line="203" pos:column="54">-&gt;<pos:position pos:line="203" pos:column="59"/></operator><name pos:line="203" pos:column="56">bufEnd<pos:position pos:line="203" pos:column="62"/></name></name> <operator pos:line="203" pos:column="63">-<pos:position pos:line="203" pos:column="64"/></operator> <literal type="number" pos:line="203" pos:column="65">1<pos:position pos:line="203" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="203" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="68"/></expr_stmt>
	    <if pos:line="204" pos:column="13">if <condition pos:line="204" pos:column="16">(<expr><name pos:line="204" pos:column="17">fromPtr<pos:position pos:line="204" pos:column="24"/></name> <operator pos:line="204" pos:column="25">==<pos:position pos:line="204" pos:column="27"/></operator> <name pos:line="204" pos:column="28">rawNameEnd<pos:position pos:line="204" pos:column="38"/></name></expr>)<pos:position pos:line="204" pos:column="39"/></condition><then pos:line="204" pos:column="39">
	      <block type="pseudo"><break pos:line="205" pos:column="15">break;<pos:position pos:line="205" pos:column="21"/></break></block></then></if>
	    <expr_stmt><expr><name pos:line="206" pos:column="13">bufSize<pos:position pos:line="206" pos:column="20"/></name> <operator pos:line="206" pos:column="21">=<pos:position pos:line="206" pos:column="22"/></operator> <operator pos:line="206" pos:column="23">(<pos:position pos:line="206" pos:column="24"/></operator><name><name pos:line="206" pos:column="24">tag<pos:position pos:line="206" pos:column="27"/></name><operator pos:line="206" pos:column="27">-&gt;<pos:position pos:line="206" pos:column="32"/></operator><name pos:line="206" pos:column="29">bufEnd<pos:position pos:line="206" pos:column="35"/></name></name> <operator pos:line="206" pos:column="36">-<pos:position pos:line="206" pos:column="37"/></operator> <name><name pos:line="206" pos:column="38">tag<pos:position pos:line="206" pos:column="41"/></name><operator pos:line="206" pos:column="41">-&gt;<pos:position pos:line="206" pos:column="46"/></operator><name pos:line="206" pos:column="43">buf<pos:position pos:line="206" pos:column="46"/></name></name><operator pos:line="206" pos:column="46">)<pos:position pos:line="206" pos:column="47"/></operator> <operator pos:line="206" pos:column="48">&lt;&lt;<pos:position pos:line="206" pos:column="56"/></operator> <literal type="number" pos:line="206" pos:column="51">1<pos:position pos:line="206" pos:column="52"/></literal></expr>;<pos:position pos:line="206" pos:column="53"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="207" pos:column="13">tag<pos:position pos:line="207" pos:column="16"/></name><operator pos:line="207" pos:column="16">-&gt;<pos:position pos:line="207" pos:column="21"/></operator><name pos:line="207" pos:column="18">buf<pos:position pos:line="207" pos:column="21"/></name></name> <operator pos:line="207" pos:column="22">=<pos:position pos:line="207" pos:column="23"/></operator> <call><name pos:line="207" pos:column="24">REALLOC<pos:position pos:line="207" pos:column="31"/></name><argument_list pos:line="207" pos:column="31">(<argument><expr><name><name pos:line="207" pos:column="32">tag<pos:position pos:line="207" pos:column="35"/></name><operator pos:line="207" pos:column="35">-&gt;<pos:position pos:line="207" pos:column="40"/></operator><name pos:line="207" pos:column="37">buf<pos:position pos:line="207" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="42">bufSize<pos:position pos:line="207" pos:column="49"/></name></expr></argument>)<pos:position pos:line="207" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="51"/></expr_stmt>
	    <if pos:line="208" pos:column="13">if <condition pos:line="208" pos:column="16">(<expr><operator pos:line="208" pos:column="17">!<pos:position pos:line="208" pos:column="18"/></operator><name><name pos:line="208" pos:column="18">tag<pos:position pos:line="208" pos:column="21"/></name><operator pos:line="208" pos:column="21">-&gt;<pos:position pos:line="208" pos:column="26"/></operator><name pos:line="208" pos:column="23">buf<pos:position pos:line="208" pos:column="26"/></name></name></expr>)<pos:position pos:line="208" pos:column="27"/></condition><then pos:line="208" pos:column="27">
	      <block type="pseudo"><return pos:line="209" pos:column="15">return <expr><name pos:line="209" pos:column="22">XML_ERROR_NO_MEMORY<pos:position pos:line="209" pos:column="41"/></name></expr>;<pos:position pos:line="209" pos:column="42"/></return></block></then></if>
	    <expr_stmt><expr><name><name pos:line="210" pos:column="13">tag<pos:position pos:line="210" pos:column="16"/></name><operator pos:line="210" pos:column="16">-&gt;<pos:position pos:line="210" pos:column="21"/></operator><name pos:line="210" pos:column="18">bufEnd<pos:position pos:line="210" pos:column="24"/></name></name> <operator pos:line="210" pos:column="25">=<pos:position pos:line="210" pos:column="26"/></operator> <name><name pos:line="210" pos:column="27">tag<pos:position pos:line="210" pos:column="30"/></name><operator pos:line="210" pos:column="30">-&gt;<pos:position pos:line="210" pos:column="35"/></operator><name pos:line="210" pos:column="32">buf<pos:position pos:line="210" pos:column="35"/></name></name> <operator pos:line="210" pos:column="36">+<pos:position pos:line="210" pos:column="37"/></operator> <name pos:line="210" pos:column="38">bufSize<pos:position pos:line="210" pos:column="45"/></name></expr>;<pos:position pos:line="210" pos:column="46"/></expr_stmt>
	    <if pos:line="211" pos:column="13">if <condition pos:line="211" pos:column="16">(<expr><name pos:line="211" pos:column="17">nextPtr<pos:position pos:line="211" pos:column="24"/></name></expr>)<pos:position pos:line="211" pos:column="25"/></condition><then pos:line="211" pos:column="25">
	      <block type="pseudo"><expr_stmt><expr><name><name pos:line="212" pos:column="15">tag<pos:position pos:line="212" pos:column="18"/></name><operator pos:line="212" pos:column="18">-&gt;<pos:position pos:line="212" pos:column="23"/></operator><name pos:line="212" pos:column="20">rawName<pos:position pos:line="212" pos:column="27"/></name></name> <operator pos:line="212" pos:column="28">=<pos:position pos:line="212" pos:column="29"/></operator> <name><name pos:line="212" pos:column="30">tag<pos:position pos:line="212" pos:column="33"/></name><operator pos:line="212" pos:column="33">-&gt;<pos:position pos:line="212" pos:column="38"/></operator><name pos:line="212" pos:column="35">buf<pos:position pos:line="212" pos:column="38"/></name></name></expr>;<pos:position pos:line="212" pos:column="39"/></expr_stmt></block></then></if>
	  }<pos:position pos:line="213" pos:column="12"/></block></for>
	  <expr_stmt><expr><operator pos:line="214" pos:column="11">*<pos:position pos:line="214" pos:column="12"/></operator><name pos:line="214" pos:column="12">toPtr<pos:position pos:line="214" pos:column="17"/></name> <operator pos:line="214" pos:column="18">=<pos:position pos:line="214" pos:column="19"/></operator> <call><name pos:line="214" pos:column="20">XML_T<pos:position pos:line="214" pos:column="25"/></name><argument_list pos:line="214" pos:column="25">(<argument><expr><literal type="char" pos:line="214" pos:column="26">'\0'<pos:position pos:line="214" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="214" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="32"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="215" pos:column="11">result<pos:position pos:line="215" pos:column="17"/></name> <operator pos:line="215" pos:column="18">=<pos:position pos:line="215" pos:column="19"/></operator> <call><name pos:line="215" pos:column="20">storeAtts<pos:position pos:line="215" pos:column="29"/></name><argument_list pos:line="215" pos:column="29">(<argument><expr><name pos:line="215" pos:column="30">parser<pos:position pos:line="215" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="38">enc<pos:position pos:line="215" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="43">s<pos:position pos:line="215" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="215" pos:column="46">&amp;<pos:position pos:line="215" pos:column="51"/></operator><operator pos:line="215" pos:column="47">(<pos:position pos:line="215" pos:column="48"/></operator><name><name pos:line="215" pos:column="48">tag<pos:position pos:line="215" pos:column="51"/></name><operator pos:line="215" pos:column="51">-&gt;<pos:position pos:line="215" pos:column="56"/></operator><name pos:line="215" pos:column="53">name<pos:position pos:line="215" pos:column="57"/></name></name><operator pos:line="215" pos:column="57">)<pos:position pos:line="215" pos:column="58"/></operator></expr></argument>, <argument><expr><operator pos:line="215" pos:column="60">&amp;<pos:position pos:line="215" pos:column="65"/></operator><operator pos:line="215" pos:column="61">(<pos:position pos:line="215" pos:column="62"/></operator><name><name pos:line="215" pos:column="62">tag<pos:position pos:line="215" pos:column="65"/></name><operator pos:line="215" pos:column="65">-&gt;<pos:position pos:line="215" pos:column="70"/></operator><name pos:line="215" pos:column="67">bindings<pos:position pos:line="215" pos:column="75"/></name></name><operator pos:line="215" pos:column="75">)<pos:position pos:line="215" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="215" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="78"/></expr_stmt>
	  <if pos:line="216" pos:column="11">if <condition pos:line="216" pos:column="14">(<expr><name pos:line="216" pos:column="15">result<pos:position pos:line="216" pos:column="21"/></name></expr>)<pos:position pos:line="216" pos:column="22"/></condition><then pos:line="216" pos:column="22">
	    <block type="pseudo"><return pos:line="217" pos:column="13">return <expr><name pos:line="217" pos:column="20">result<pos:position pos:line="217" pos:column="26"/></name></expr>;<pos:position pos:line="217" pos:column="27"/></return></block></then></if>
	  <expr_stmt><expr><call><name pos:line="218" pos:column="11">startElementHandler<pos:position pos:line="218" pos:column="30"/></name><argument_list pos:line="218" pos:column="30">(<argument><expr><name pos:line="218" pos:column="31">handlerArg<pos:position pos:line="218" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="218" pos:column="43">tag<pos:position pos:line="218" pos:column="46"/></name><operator pos:line="218" pos:column="46">-&gt;<pos:position pos:line="218" pos:column="51"/></operator><name pos:line="218" pos:column="48">name<pos:position pos:line="218" pos:column="52"/></name><operator pos:line="218" pos:column="52">.<pos:position pos:line="218" pos:column="53"/></operator><name pos:line="218" pos:column="53">str<pos:position pos:line="218" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="218" pos:column="58">(<pos:position pos:line="218" pos:column="59"/></operator><specifier pos:line="218" pos:column="59">const<pos:position pos:line="218" pos:column="64"/></specifier> <name pos:line="218" pos:column="65">XML_Char<pos:position pos:line="218" pos:column="73"/></name> <operator pos:line="218" pos:column="74">*<pos:position pos:line="218" pos:column="75"/></operator><operator pos:line="218" pos:column="75">*<pos:position pos:line="218" pos:column="76"/></operator><operator pos:line="218" pos:column="76">)<pos:position pos:line="218" pos:column="77"/></operator><name pos:line="218" pos:column="77">atts<pos:position pos:line="218" pos:column="81"/></name></expr></argument>)<pos:position pos:line="218" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="83"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="219" pos:column="11">poolClear<pos:position pos:line="219" pos:column="20"/></name><argument_list pos:line="219" pos:column="20">(<argument><expr><operator pos:line="219" pos:column="21">&amp;<pos:position pos:line="219" pos:column="26"/></operator><name pos:line="219" pos:column="22">tempPool<pos:position pos:line="219" pos:column="30"/></name></expr></argument>)<pos:position pos:line="219" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="220" pos:column="10"/></block></then>
	<else pos:line="221" pos:column="9">else <block pos:line="221" pos:column="14">{
	  <expr_stmt><expr><name><name pos:line="222" pos:column="11">tag<pos:position pos:line="222" pos:column="14"/></name><operator pos:line="222" pos:column="14">-&gt;<pos:position pos:line="222" pos:column="19"/></operator><name pos:line="222" pos:column="16">name<pos:position pos:line="222" pos:column="20"/></name><operator pos:line="222" pos:column="20">.<pos:position pos:line="222" pos:column="21"/></operator><name pos:line="222" pos:column="21">str<pos:position pos:line="222" pos:column="24"/></name></name> <operator pos:line="222" pos:column="25">=<pos:position pos:line="222" pos:column="26"/></operator> <literal type="number" pos:line="222" pos:column="27">0<pos:position pos:line="222" pos:column="28"/></literal></expr>;<pos:position pos:line="222" pos:column="29"/></expr_stmt>
	  <if pos:line="223" pos:column="11">if <condition pos:line="223" pos:column="14">(<expr><name pos:line="223" pos:column="15">defaultHandler<pos:position pos:line="223" pos:column="29"/></name></expr>)<pos:position pos:line="223" pos:column="30"/></condition><then pos:line="223" pos:column="30">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="224" pos:column="13">reportDefault<pos:position pos:line="224" pos:column="26"/></name><argument_list pos:line="224" pos:column="26">(<argument><expr><name pos:line="224" pos:column="27">parser<pos:position pos:line="224" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="35">enc<pos:position pos:line="224" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="40">s<pos:position pos:line="224" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="43">next<pos:position pos:line="224" pos:column="47"/></name></expr></argument>)<pos:position pos:line="224" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="49"/></expr_stmt></block></then></if>
	}<pos:position pos:line="225" pos:column="10"/></block></else></if>
	<break pos:line="226" pos:column="9">break;<pos:position pos:line="226" pos:column="15"/></break>
      }<pos:position pos:line="227" pos:column="8"/></block>
    <case pos:line="228" pos:column="5">case <expr><name pos:line="228" pos:column="10">XML_TOK_EMPTY_ELEMENT_WITH_ATTS<pos:position pos:line="228" pos:column="41"/></name></expr>:<pos:position pos:line="228" pos:column="42"/></case>
      <if pos:line="229" pos:column="7">if <condition pos:line="229" pos:column="10">(<expr><operator pos:line="229" pos:column="11">!<pos:position pos:line="229" pos:column="12"/></operator><name pos:line="229" pos:column="12">startElementHandler<pos:position pos:line="229" pos:column="31"/></name></expr>)<pos:position pos:line="229" pos:column="32"/></condition><then pos:line="229" pos:column="32"> <block pos:line="229" pos:column="33">{
	<decl_stmt><decl><type><name><name pos:line="230" pos:column="9">enum<pos:position pos:line="230" pos:column="13"/></name> <name pos:line="230" pos:column="14">XML_Error<pos:position pos:line="230" pos:column="23"/></name></name></type> <name pos:line="230" pos:column="24">result<pos:position pos:line="230" pos:column="30"/></name> <init pos:line="230" pos:column="31">= <expr><call><name pos:line="230" pos:column="33">storeAtts<pos:position pos:line="230" pos:column="42"/></name><argument_list pos:line="230" pos:column="42">(<argument><expr><name pos:line="230" pos:column="43">parser<pos:position pos:line="230" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="51">enc<pos:position pos:line="230" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="56">s<pos:position pos:line="230" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="230" pos:column="59">0<pos:position pos:line="230" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="230" pos:column="62">0<pos:position pos:line="230" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="230" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="230" pos:column="65"/></decl_stmt>
	<if pos:line="231" pos:column="9">if <condition pos:line="231" pos:column="12">(<expr><name pos:line="231" pos:column="13">result<pos:position pos:line="231" pos:column="19"/></name></expr>)<pos:position pos:line="231" pos:column="20"/></condition><then pos:line="231" pos:column="20">
	  <block type="pseudo"><return pos:line="232" pos:column="11">return <expr><name pos:line="232" pos:column="18">result<pos:position pos:line="232" pos:column="24"/></name></expr>;<pos:position pos:line="232" pos:column="25"/></return></block></then></if>
      }<pos:position pos:line="233" pos:column="8"/></block></then></if>
      <comment type="block" pos:line="234" pos:column="7">/* fall through */</comment>
    <case pos:line="235" pos:column="5">case <expr><name pos:line="235" pos:column="10">XML_TOK_EMPTY_ELEMENT_NO_ATTS<pos:position pos:line="235" pos:column="39"/></name></expr>:<pos:position pos:line="235" pos:column="40"/></case>
      <if pos:line="236" pos:column="7">if <condition pos:line="236" pos:column="10">(<expr><name pos:line="236" pos:column="11">startElementHandler<pos:position pos:line="236" pos:column="30"/></name> <operator pos:line="236" pos:column="31">||<pos:position pos:line="236" pos:column="33"/></operator> <name pos:line="236" pos:column="34">endElementHandler<pos:position pos:line="236" pos:column="51"/></name></expr>)<pos:position pos:line="236" pos:column="52"/></condition><then pos:line="236" pos:column="52"> <block pos:line="236" pos:column="53">{
	<decl_stmt><decl><type><specifier pos:line="237" pos:column="9">const<pos:position pos:line="237" pos:column="14"/></specifier> <name pos:line="237" pos:column="15">char<pos:position pos:line="237" pos:column="19"/></name> <modifier pos:line="237" pos:column="20">*<pos:position pos:line="237" pos:column="21"/></modifier></type><name pos:line="237" pos:column="21">rawName<pos:position pos:line="237" pos:column="28"/></name> <init pos:line="237" pos:column="29">= <expr><name pos:line="237" pos:column="31">s<pos:position pos:line="237" pos:column="32"/></name> <operator pos:line="237" pos:column="33">+<pos:position pos:line="237" pos:column="34"/></operator> <name><name pos:line="237" pos:column="35">enc<pos:position pos:line="237" pos:column="38"/></name><operator pos:line="237" pos:column="38">-&gt;<pos:position pos:line="237" pos:column="43"/></operator><name pos:line="237" pos:column="40">minBytesPerChar<pos:position pos:line="237" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="237" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="238" pos:column="9">enum<pos:position pos:line="238" pos:column="13"/></name> <name pos:line="238" pos:column="14">XML_Error<pos:position pos:line="238" pos:column="23"/></name></name></type> <name pos:line="238" pos:column="24">result<pos:position pos:line="238" pos:column="30"/></name></decl>;<pos:position pos:line="238" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="239" pos:column="9">BINDING<pos:position pos:line="239" pos:column="16"/></name> <modifier pos:line="239" pos:column="17">*<pos:position pos:line="239" pos:column="18"/></modifier></type><name pos:line="239" pos:column="18">bindings<pos:position pos:line="239" pos:column="26"/></name> <init pos:line="239" pos:column="27">= <expr><literal type="number" pos:line="239" pos:column="29">0<pos:position pos:line="239" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="239" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="240" pos:column="9">TAG_NAME<pos:position pos:line="240" pos:column="17"/></name></type> <name pos:line="240" pos:column="18">name<pos:position pos:line="240" pos:column="22"/></name></decl>;<pos:position pos:line="240" pos:column="23"/></decl_stmt>
	<expr_stmt><expr><name><name pos:line="241" pos:column="9">name<pos:position pos:line="241" pos:column="13"/></name><operator pos:line="241" pos:column="13">.<pos:position pos:line="241" pos:column="14"/></operator><name pos:line="241" pos:column="14">str<pos:position pos:line="241" pos:column="17"/></name></name> <operator pos:line="241" pos:column="18">=<pos:position pos:line="241" pos:column="19"/></operator> <call><name pos:line="241" pos:column="20">poolStoreString<pos:position pos:line="241" pos:column="35"/></name><argument_list pos:line="241" pos:column="35">(<argument><expr><operator pos:line="241" pos:column="36">&amp;<pos:position pos:line="241" pos:column="41"/></operator><name pos:line="241" pos:column="37">tempPool<pos:position pos:line="241" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="241" pos:column="47">enc<pos:position pos:line="241" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="241" pos:column="52">rawName<pos:position pos:line="241" pos:column="59"/></name></expr></argument>,
				   <argument><expr><name pos:line="242" pos:column="36">rawName<pos:position pos:line="242" pos:column="43"/></name> <operator pos:line="242" pos:column="44">+<pos:position pos:line="242" pos:column="45"/></operator> <call><name pos:line="242" pos:column="46">XmlNameLength<pos:position pos:line="242" pos:column="59"/></name><argument_list pos:line="242" pos:column="59">(<argument><expr><name pos:line="242" pos:column="60">enc<pos:position pos:line="242" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="65">rawName<pos:position pos:line="242" pos:column="72"/></name></expr></argument>)<pos:position pos:line="242" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="242" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="75"/></expr_stmt>
	<if pos:line="243" pos:column="9">if <condition pos:line="243" pos:column="12">(<expr><operator pos:line="243" pos:column="13">!<pos:position pos:line="243" pos:column="14"/></operator><name><name pos:line="243" pos:column="14">name<pos:position pos:line="243" pos:column="18"/></name><operator pos:line="243" pos:column="18">.<pos:position pos:line="243" pos:column="19"/></operator><name pos:line="243" pos:column="19">str<pos:position pos:line="243" pos:column="22"/></name></name></expr>)<pos:position pos:line="243" pos:column="23"/></condition><then pos:line="243" pos:column="23">
	  <block type="pseudo"><return pos:line="244" pos:column="11">return <expr><name pos:line="244" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="244" pos:column="37"/></name></expr>;<pos:position pos:line="244" pos:column="38"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="245" pos:column="9">poolFinish<pos:position pos:line="245" pos:column="19"/></name><argument_list pos:line="245" pos:column="19">(<argument><expr><operator pos:line="245" pos:column="20">&amp;<pos:position pos:line="245" pos:column="25"/></operator><name pos:line="245" pos:column="21">tempPool<pos:position pos:line="245" pos:column="29"/></name></expr></argument>)<pos:position pos:line="245" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="246" pos:column="9">result<pos:position pos:line="246" pos:column="15"/></name> <operator pos:line="246" pos:column="16">=<pos:position pos:line="246" pos:column="17"/></operator> <call><name pos:line="246" pos:column="18">storeAtts<pos:position pos:line="246" pos:column="27"/></name><argument_list pos:line="246" pos:column="27">(<argument><expr><name pos:line="246" pos:column="28">parser<pos:position pos:line="246" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="246" pos:column="36">enc<pos:position pos:line="246" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="246" pos:column="41">s<pos:position pos:line="246" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="246" pos:column="44">&amp;<pos:position pos:line="246" pos:column="49"/></operator><name pos:line="246" pos:column="45">name<pos:position pos:line="246" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="246" pos:column="51">&amp;<pos:position pos:line="246" pos:column="56"/></operator><name pos:line="246" pos:column="52">bindings<pos:position pos:line="246" pos:column="60"/></name></expr></argument>)<pos:position pos:line="246" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="62"/></expr_stmt>
	<if pos:line="247" pos:column="9">if <condition pos:line="247" pos:column="12">(<expr><name pos:line="247" pos:column="13">result<pos:position pos:line="247" pos:column="19"/></name></expr>)<pos:position pos:line="247" pos:column="20"/></condition><then pos:line="247" pos:column="20">
	  <block type="pseudo"><return pos:line="248" pos:column="11">return <expr><name pos:line="248" pos:column="18">result<pos:position pos:line="248" pos:column="24"/></name></expr>;<pos:position pos:line="248" pos:column="25"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="249" pos:column="9">poolFinish<pos:position pos:line="249" pos:column="19"/></name><argument_list pos:line="249" pos:column="19">(<argument><expr><operator pos:line="249" pos:column="20">&amp;<pos:position pos:line="249" pos:column="25"/></operator><name pos:line="249" pos:column="21">tempPool<pos:position pos:line="249" pos:column="29"/></name></expr></argument>)<pos:position pos:line="249" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="31"/></expr_stmt>
	<if pos:line="250" pos:column="9">if <condition pos:line="250" pos:column="12">(<expr><name pos:line="250" pos:column="13">startElementHandler<pos:position pos:line="250" pos:column="32"/></name></expr>)<pos:position pos:line="250" pos:column="33"/></condition><then pos:line="250" pos:column="33">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="251" pos:column="11">startElementHandler<pos:position pos:line="251" pos:column="30"/></name><argument_list pos:line="251" pos:column="30">(<argument><expr><name pos:line="251" pos:column="31">handlerArg<pos:position pos:line="251" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="251" pos:column="43">name<pos:position pos:line="251" pos:column="47"/></name><operator pos:line="251" pos:column="47">.<pos:position pos:line="251" pos:column="48"/></operator><name pos:line="251" pos:column="48">str<pos:position pos:line="251" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="251" pos:column="53">(<pos:position pos:line="251" pos:column="54"/></operator><specifier pos:line="251" pos:column="54">const<pos:position pos:line="251" pos:column="59"/></specifier> <name pos:line="251" pos:column="60">XML_Char<pos:position pos:line="251" pos:column="68"/></name> <operator pos:line="251" pos:column="69">*<pos:position pos:line="251" pos:column="70"/></operator><operator pos:line="251" pos:column="70">*<pos:position pos:line="251" pos:column="71"/></operator><operator pos:line="251" pos:column="71">)<pos:position pos:line="251" pos:column="72"/></operator><name pos:line="251" pos:column="72">atts<pos:position pos:line="251" pos:column="76"/></name></expr></argument>)<pos:position pos:line="251" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="78"/></expr_stmt></block></then></if>
	<if pos:line="252" pos:column="9">if <condition pos:line="252" pos:column="12">(<expr><name pos:line="252" pos:column="13">endElementHandler<pos:position pos:line="252" pos:column="30"/></name></expr>)<pos:position pos:line="252" pos:column="31"/></condition><then pos:line="252" pos:column="31"> <block pos:line="252" pos:column="32">{
	  <if pos:line="253" pos:column="11">if <condition pos:line="253" pos:column="14">(<expr><name pos:line="253" pos:column="15">startElementHandler<pos:position pos:line="253" pos:column="34"/></name></expr>)<pos:position pos:line="253" pos:column="35"/></condition><then pos:line="253" pos:column="35">
	    <block type="pseudo"><expr_stmt><expr><operator pos:line="254" pos:column="13">*<pos:position pos:line="254" pos:column="14"/></operator><name pos:line="254" pos:column="14">eventPP<pos:position pos:line="254" pos:column="21"/></name> <operator pos:line="254" pos:column="22">=<pos:position pos:line="254" pos:column="23"/></operator> <operator pos:line="254" pos:column="24">*<pos:position pos:line="254" pos:column="25"/></operator><name pos:line="254" pos:column="25">eventEndPP<pos:position pos:line="254" pos:column="35"/></name></expr>;<pos:position pos:line="254" pos:column="36"/></expr_stmt></block></then></if>
	  <expr_stmt><expr><call><name pos:line="255" pos:column="11">endElementHandler<pos:position pos:line="255" pos:column="28"/></name><argument_list pos:line="255" pos:column="28">(<argument><expr><name pos:line="255" pos:column="29">handlerArg<pos:position pos:line="255" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="255" pos:column="41">name<pos:position pos:line="255" pos:column="45"/></name><operator pos:line="255" pos:column="45">.<pos:position pos:line="255" pos:column="46"/></operator><name pos:line="255" pos:column="46">str<pos:position pos:line="255" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="255" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="256" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="257" pos:column="9">poolClear<pos:position pos:line="257" pos:column="18"/></name><argument_list pos:line="257" pos:column="18">(<argument><expr><operator pos:line="257" pos:column="19">&amp;<pos:position pos:line="257" pos:column="24"/></operator><name pos:line="257" pos:column="20">tempPool<pos:position pos:line="257" pos:column="28"/></name></expr></argument>)<pos:position pos:line="257" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="30"/></expr_stmt>
	<while pos:line="258" pos:column="9">while <condition pos:line="258" pos:column="15">(<expr><name pos:line="258" pos:column="16">bindings<pos:position pos:line="258" pos:column="24"/></name></expr>)<pos:position pos:line="258" pos:column="25"/></condition> <block pos:line="258" pos:column="26">{
	  <decl_stmt><decl><type><name pos:line="259" pos:column="11">BINDING<pos:position pos:line="259" pos:column="18"/></name> <modifier pos:line="259" pos:column="19">*<pos:position pos:line="259" pos:column="20"/></modifier></type><name pos:line="259" pos:column="20">b<pos:position pos:line="259" pos:column="21"/></name> <init pos:line="259" pos:column="22">= <expr><name pos:line="259" pos:column="24">bindings<pos:position pos:line="259" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="259" pos:column="33"/></decl_stmt>
	  <if pos:line="260" pos:column="11">if <condition pos:line="260" pos:column="14">(<expr><name pos:line="260" pos:column="15">endNamespaceDeclHandler<pos:position pos:line="260" pos:column="38"/></name></expr>)<pos:position pos:line="260" pos:column="39"/></condition><then pos:line="260" pos:column="39">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="261" pos:column="13">endNamespaceDeclHandler<pos:position pos:line="261" pos:column="36"/></name><argument_list pos:line="261" pos:column="36">(<argument><expr><name pos:line="261" pos:column="37">handlerArg<pos:position pos:line="261" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="261" pos:column="49">b<pos:position pos:line="261" pos:column="50"/></name><operator pos:line="261" pos:column="50">-&gt;<pos:position pos:line="261" pos:column="55"/></operator><name pos:line="261" pos:column="52">prefix<pos:position pos:line="261" pos:column="58"/></name><operator pos:line="261" pos:column="58">-&gt;<pos:position pos:line="261" pos:column="63"/></operator><name pos:line="261" pos:column="60">name<pos:position pos:line="261" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="261" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="66"/></expr_stmt></block></then></if>
	  <expr_stmt><expr><name pos:line="262" pos:column="11">bindings<pos:position pos:line="262" pos:column="19"/></name> <operator pos:line="262" pos:column="20">=<pos:position pos:line="262" pos:column="21"/></operator> <name><name pos:line="262" pos:column="22">bindings<pos:position pos:line="262" pos:column="30"/></name><operator pos:line="262" pos:column="30">-&gt;<pos:position pos:line="262" pos:column="35"/></operator><name pos:line="262" pos:column="32">nextTagBinding<pos:position pos:line="262" pos:column="46"/></name></name></expr>;<pos:position pos:line="262" pos:column="47"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="263" pos:column="11">b<pos:position pos:line="263" pos:column="12"/></name><operator pos:line="263" pos:column="12">-&gt;<pos:position pos:line="263" pos:column="17"/></operator><name pos:line="263" pos:column="14">nextTagBinding<pos:position pos:line="263" pos:column="28"/></name></name> <operator pos:line="263" pos:column="29">=<pos:position pos:line="263" pos:column="30"/></operator> <name pos:line="263" pos:column="31">freeBindingList<pos:position pos:line="263" pos:column="46"/></name></expr>;<pos:position pos:line="263" pos:column="47"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="264" pos:column="11">freeBindingList<pos:position pos:line="264" pos:column="26"/></name> <operator pos:line="264" pos:column="27">=<pos:position pos:line="264" pos:column="28"/></operator> <name pos:line="264" pos:column="29">b<pos:position pos:line="264" pos:column="30"/></name></expr>;<pos:position pos:line="264" pos:column="31"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="265" pos:column="11">b<pos:position pos:line="265" pos:column="12"/></name><operator pos:line="265" pos:column="12">-&gt;<pos:position pos:line="265" pos:column="17"/></operator><name pos:line="265" pos:column="14">prefix<pos:position pos:line="265" pos:column="20"/></name><operator pos:line="265" pos:column="20">-&gt;<pos:position pos:line="265" pos:column="25"/></operator><name pos:line="265" pos:column="22">binding<pos:position pos:line="265" pos:column="29"/></name></name> <operator pos:line="265" pos:column="30">=<pos:position pos:line="265" pos:column="31"/></operator> <name><name pos:line="265" pos:column="32">b<pos:position pos:line="265" pos:column="33"/></name><operator pos:line="265" pos:column="33">-&gt;<pos:position pos:line="265" pos:column="38"/></operator><name pos:line="265" pos:column="35">prevPrefixBinding<pos:position pos:line="265" pos:column="52"/></name></name></expr>;<pos:position pos:line="265" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="266" pos:column="10"/></block></while>
      }<pos:position pos:line="267" pos:column="8"/></block></then>
      <elseif pos:line="268" pos:column="7">else <if pos:line="268" pos:column="12">if <condition pos:line="268" pos:column="15">(<expr><name pos:line="268" pos:column="16">defaultHandler<pos:position pos:line="268" pos:column="30"/></name></expr>)<pos:position pos:line="268" pos:column="31"/></condition><then pos:line="268" pos:column="31">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="269" pos:column="9">reportDefault<pos:position pos:line="269" pos:column="22"/></name><argument_list pos:line="269" pos:column="22">(<argument><expr><name pos:line="269" pos:column="23">parser<pos:position pos:line="269" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="31">enc<pos:position pos:line="269" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="36">s<pos:position pos:line="269" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="39">next<pos:position pos:line="269" pos:column="43"/></name></expr></argument>)<pos:position pos:line="269" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="269" pos:column="45"/></expr_stmt></block></then></if></elseif></if>
      <if pos:line="270" pos:column="7">if <condition pos:line="270" pos:column="10">(<expr><name pos:line="270" pos:column="11">tagLevel<pos:position pos:line="270" pos:column="19"/></name> <operator pos:line="270" pos:column="20">==<pos:position pos:line="270" pos:column="22"/></operator> <literal type="number" pos:line="270" pos:column="23">0<pos:position pos:line="270" pos:column="24"/></literal></expr>)<pos:position pos:line="270" pos:column="25"/></condition><then pos:line="270" pos:column="25">
	<block type="pseudo"><return pos:line="271" pos:column="9">return <expr><call><name pos:line="271" pos:column="16">epilogProcessor<pos:position pos:line="271" pos:column="31"/></name><argument_list pos:line="271" pos:column="31">(<argument><expr><name pos:line="271" pos:column="32">parser<pos:position pos:line="271" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="271" pos:column="40">next<pos:position pos:line="271" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="271" pos:column="46">end<pos:position pos:line="271" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="271" pos:column="51">nextPtr<pos:position pos:line="271" pos:column="58"/></name></expr></argument>)<pos:position pos:line="271" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="60"/></return></block></then></if>
      <break pos:line="272" pos:column="7">break;<pos:position pos:line="272" pos:column="13"/></break>
    <case pos:line="273" pos:column="5">case <expr><name pos:line="273" pos:column="10">XML_TOK_END_TAG<pos:position pos:line="273" pos:column="25"/></name></expr>:<pos:position pos:line="273" pos:column="26"/></case>
      <if pos:line="274" pos:column="7">if <condition pos:line="274" pos:column="10">(<expr><name pos:line="274" pos:column="11">tagLevel<pos:position pos:line="274" pos:column="19"/></name> <operator pos:line="274" pos:column="20">==<pos:position pos:line="274" pos:column="22"/></operator> <name pos:line="274" pos:column="23">startTagLevel<pos:position pos:line="274" pos:column="36"/></name></expr>)<pos:position pos:line="274" pos:column="37"/></condition><then pos:line="274" pos:column="37">
        <block type="pseudo"><return pos:line="275" pos:column="9">return <expr><name pos:line="275" pos:column="16">XML_ERROR_ASYNC_ENTITY<pos:position pos:line="275" pos:column="38"/></name></expr>;<pos:position pos:line="275" pos:column="39"/></return></block></then>
      <else pos:line="276" pos:column="7">else <block pos:line="276" pos:column="12">{
	<decl_stmt><decl><type><name pos:line="277" pos:column="9">int<pos:position pos:line="277" pos:column="12"/></name></type> <name pos:line="277" pos:column="13">len<pos:position pos:line="277" pos:column="16"/></name></decl>;<pos:position pos:line="277" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="278" pos:column="9">const<pos:position pos:line="278" pos:column="14"/></specifier> <name pos:line="278" pos:column="15">char<pos:position pos:line="278" pos:column="19"/></name> <modifier pos:line="278" pos:column="20">*<pos:position pos:line="278" pos:column="21"/></modifier></type><name pos:line="278" pos:column="21">rawName<pos:position pos:line="278" pos:column="28"/></name></decl>;<pos:position pos:line="278" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="279" pos:column="9">TAG<pos:position pos:line="279" pos:column="12"/></name> <modifier pos:line="279" pos:column="13">*<pos:position pos:line="279" pos:column="14"/></modifier></type><name pos:line="279" pos:column="14">tag<pos:position pos:line="279" pos:column="17"/></name> <init pos:line="279" pos:column="18">= <expr><name pos:line="279" pos:column="20">tagStack<pos:position pos:line="279" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="279" pos:column="29"/></decl_stmt>
	<expr_stmt><expr><name pos:line="280" pos:column="9">tagStack<pos:position pos:line="280" pos:column="17"/></name> <operator pos:line="280" pos:column="18">=<pos:position pos:line="280" pos:column="19"/></operator> <name><name pos:line="280" pos:column="20">tag<pos:position pos:line="280" pos:column="23"/></name><operator pos:line="280" pos:column="23">-&gt;<pos:position pos:line="280" pos:column="28"/></operator><name pos:line="280" pos:column="25">parent<pos:position pos:line="280" pos:column="31"/></name></name></expr>;<pos:position pos:line="280" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="281" pos:column="9">tag<pos:position pos:line="281" pos:column="12"/></name><operator pos:line="281" pos:column="12">-&gt;<pos:position pos:line="281" pos:column="17"/></operator><name pos:line="281" pos:column="14">parent<pos:position pos:line="281" pos:column="20"/></name></name> <operator pos:line="281" pos:column="21">=<pos:position pos:line="281" pos:column="22"/></operator> <name pos:line="281" pos:column="23">freeTagList<pos:position pos:line="281" pos:column="34"/></name></expr>;<pos:position pos:line="281" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="282" pos:column="9">freeTagList<pos:position pos:line="282" pos:column="20"/></name> <operator pos:line="282" pos:column="21">=<pos:position pos:line="282" pos:column="22"/></operator> <name pos:line="282" pos:column="23">tag<pos:position pos:line="282" pos:column="26"/></name></expr>;<pos:position pos:line="282" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="283" pos:column="9">rawName<pos:position pos:line="283" pos:column="16"/></name> <operator pos:line="283" pos:column="17">=<pos:position pos:line="283" pos:column="18"/></operator> <name pos:line="283" pos:column="19">s<pos:position pos:line="283" pos:column="20"/></name> <operator pos:line="283" pos:column="21">+<pos:position pos:line="283" pos:column="22"/></operator> <name><name pos:line="283" pos:column="23">enc<pos:position pos:line="283" pos:column="26"/></name><operator pos:line="283" pos:column="26">-&gt;<pos:position pos:line="283" pos:column="31"/></operator><name pos:line="283" pos:column="28">minBytesPerChar<pos:position pos:line="283" pos:column="43"/></name></name><operator pos:line="283" pos:column="43">*<pos:position pos:line="283" pos:column="44"/></operator><literal type="number" pos:line="283" pos:column="44">2<pos:position pos:line="283" pos:column="45"/></literal></expr>;<pos:position pos:line="283" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name pos:line="284" pos:column="9">len<pos:position pos:line="284" pos:column="12"/></name> <operator pos:line="284" pos:column="13">=<pos:position pos:line="284" pos:column="14"/></operator> <call><name pos:line="284" pos:column="15">XmlNameLength<pos:position pos:line="284" pos:column="28"/></name><argument_list pos:line="284" pos:column="28">(<argument><expr><name pos:line="284" pos:column="29">enc<pos:position pos:line="284" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="284" pos:column="34">rawName<pos:position pos:line="284" pos:column="41"/></name></expr></argument>)<pos:position pos:line="284" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="43"/></expr_stmt>
	<if pos:line="285" pos:column="9">if <condition pos:line="285" pos:column="12">(<expr><name pos:line="285" pos:column="13">len<pos:position pos:line="285" pos:column="16"/></name> <operator pos:line="285" pos:column="17">!=<pos:position pos:line="285" pos:column="19"/></operator> <name><name pos:line="285" pos:column="20">tag<pos:position pos:line="285" pos:column="23"/></name><operator pos:line="285" pos:column="23">-&gt;<pos:position pos:line="285" pos:column="28"/></operator><name pos:line="285" pos:column="25">rawNameLength<pos:position pos:line="285" pos:column="38"/></name></name>
	    <operator pos:line="286" pos:column="13">||<pos:position pos:line="286" pos:column="15"/></operator> <call><name pos:line="286" pos:column="16">memcmp<pos:position pos:line="286" pos:column="22"/></name><argument_list pos:line="286" pos:column="22">(<argument><expr><name><name pos:line="286" pos:column="23">tag<pos:position pos:line="286" pos:column="26"/></name><operator pos:line="286" pos:column="26">-&gt;<pos:position pos:line="286" pos:column="31"/></operator><name pos:line="286" pos:column="28">rawName<pos:position pos:line="286" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="286" pos:column="37">rawName<pos:position pos:line="286" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="286" pos:column="46">len<pos:position pos:line="286" pos:column="49"/></name></expr></argument>)<pos:position pos:line="286" pos:column="50"/></argument_list></call> <operator pos:line="286" pos:column="51">!=<pos:position pos:line="286" pos:column="53"/></operator> <literal type="number" pos:line="286" pos:column="54">0<pos:position pos:line="286" pos:column="55"/></literal></expr>)<pos:position pos:line="286" pos:column="56"/></condition><then pos:line="286" pos:column="56"> <block pos:line="286" pos:column="57">{
	  <expr_stmt><expr><operator pos:line="287" pos:column="11">*<pos:position pos:line="287" pos:column="12"/></operator><name pos:line="287" pos:column="12">eventPP<pos:position pos:line="287" pos:column="19"/></name> <operator pos:line="287" pos:column="20">=<pos:position pos:line="287" pos:column="21"/></operator> <name pos:line="287" pos:column="22">rawName<pos:position pos:line="287" pos:column="29"/></name></expr>;<pos:position pos:line="287" pos:column="30"/></expr_stmt>
	  <return pos:line="288" pos:column="11">return <expr><name pos:line="288" pos:column="18">XML_ERROR_TAG_MISMATCH<pos:position pos:line="288" pos:column="40"/></name></expr>;<pos:position pos:line="288" pos:column="41"/></return>
	}<pos:position pos:line="289" pos:column="10"/></block></then></if>
	<expr_stmt><expr><operator pos:line="290" pos:column="9">--<pos:position pos:line="290" pos:column="11"/></operator><name pos:line="290" pos:column="11">tagLevel<pos:position pos:line="290" pos:column="19"/></name></expr>;<pos:position pos:line="290" pos:column="20"/></expr_stmt>
	<if pos:line="291" pos:column="9">if <condition pos:line="291" pos:column="12">(<expr><name pos:line="291" pos:column="13">endElementHandler<pos:position pos:line="291" pos:column="30"/></name> <operator pos:line="291" pos:column="31">&amp;&amp;<pos:position pos:line="291" pos:column="41"/></operator> <name><name pos:line="291" pos:column="34">tag<pos:position pos:line="291" pos:column="37"/></name><operator pos:line="291" pos:column="37">-&gt;<pos:position pos:line="291" pos:column="42"/></operator><name pos:line="291" pos:column="39">name<pos:position pos:line="291" pos:column="43"/></name><operator pos:line="291" pos:column="43">.<pos:position pos:line="291" pos:column="44"/></operator><name pos:line="291" pos:column="44">str<pos:position pos:line="291" pos:column="47"/></name></name></expr>)<pos:position pos:line="291" pos:column="48"/></condition><then pos:line="291" pos:column="48"> <block pos:line="291" pos:column="49">{
	  <if pos:line="292" pos:column="11">if <condition pos:line="292" pos:column="14">(<expr><name><name pos:line="292" pos:column="15">tag<pos:position pos:line="292" pos:column="18"/></name><operator pos:line="292" pos:column="18">-&gt;<pos:position pos:line="292" pos:column="23"/></operator><name pos:line="292" pos:column="20">name<pos:position pos:line="292" pos:column="24"/></name><operator pos:line="292" pos:column="24">.<pos:position pos:line="292" pos:column="25"/></operator><name pos:line="292" pos:column="25">localPart<pos:position pos:line="292" pos:column="34"/></name></name></expr>)<pos:position pos:line="292" pos:column="35"/></condition><then pos:line="292" pos:column="35"> <block pos:line="292" pos:column="36">{
	    <decl_stmt><decl><type><name pos:line="293" pos:column="13">XML_Char<pos:position pos:line="293" pos:column="21"/></name> <modifier pos:line="293" pos:column="22">*<pos:position pos:line="293" pos:column="23"/></modifier></type><name pos:line="293" pos:column="23">to<pos:position pos:line="293" pos:column="25"/></name> <init pos:line="293" pos:column="26">= <expr><operator pos:line="293" pos:column="28">(<pos:position pos:line="293" pos:column="29"/></operator><name pos:line="293" pos:column="29">XML_Char<pos:position pos:line="293" pos:column="37"/></name> <operator pos:line="293" pos:column="38">*<pos:position pos:line="293" pos:column="39"/></operator><operator pos:line="293" pos:column="39">)<pos:position pos:line="293" pos:column="40"/></operator><name><name pos:line="293" pos:column="40">tag<pos:position pos:line="293" pos:column="43"/></name><operator pos:line="293" pos:column="43">-&gt;<pos:position pos:line="293" pos:column="48"/></operator><name pos:line="293" pos:column="45">name<pos:position pos:line="293" pos:column="49"/></name><operator pos:line="293" pos:column="49">.<pos:position pos:line="293" pos:column="50"/></operator><name pos:line="293" pos:column="50">str<pos:position pos:line="293" pos:column="53"/></name></name> <operator pos:line="293" pos:column="54">+<pos:position pos:line="293" pos:column="55"/></operator> <name><name pos:line="293" pos:column="56">tag<pos:position pos:line="293" pos:column="59"/></name><operator pos:line="293" pos:column="59">-&gt;<pos:position pos:line="293" pos:column="64"/></operator><name pos:line="293" pos:column="61">name<pos:position pos:line="293" pos:column="65"/></name><operator pos:line="293" pos:column="65">.<pos:position pos:line="293" pos:column="66"/></operator><name pos:line="293" pos:column="66">uriLen<pos:position pos:line="293" pos:column="72"/></name></name></expr></init></decl>;<pos:position pos:line="293" pos:column="73"/></decl_stmt>
	    <decl_stmt><decl><type><specifier pos:line="294" pos:column="13">const<pos:position pos:line="294" pos:column="18"/></specifier> <name pos:line="294" pos:column="19">XML_Char<pos:position pos:line="294" pos:column="27"/></name> <modifier pos:line="294" pos:column="28">*<pos:position pos:line="294" pos:column="29"/></modifier></type><name pos:line="294" pos:column="29">from<pos:position pos:line="294" pos:column="33"/></name> <init pos:line="294" pos:column="34">= <expr><name><name pos:line="294" pos:column="36">tag<pos:position pos:line="294" pos:column="39"/></name><operator pos:line="294" pos:column="39">-&gt;<pos:position pos:line="294" pos:column="44"/></operator><name pos:line="294" pos:column="41">name<pos:position pos:line="294" pos:column="45"/></name><operator pos:line="294" pos:column="45">.<pos:position pos:line="294" pos:column="46"/></operator><name pos:line="294" pos:column="46">localPart<pos:position pos:line="294" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="294" pos:column="56"/></decl_stmt>
	    <while pos:line="295" pos:column="13">while <condition pos:line="295" pos:column="19">(<expr><operator pos:line="295" pos:column="20">(<pos:position pos:line="295" pos:column="21"/></operator><operator pos:line="295" pos:column="21">*<pos:position pos:line="295" pos:column="22"/></operator><name pos:line="295" pos:column="22">to<pos:position pos:line="295" pos:column="24"/></name><operator pos:line="295" pos:column="24">++<pos:position pos:line="295" pos:column="26"/></operator> <operator pos:line="295" pos:column="27">=<pos:position pos:line="295" pos:column="28"/></operator> <operator pos:line="295" pos:column="29">*<pos:position pos:line="295" pos:column="30"/></operator><name pos:line="295" pos:column="30">from<pos:position pos:line="295" pos:column="34"/></name><operator pos:line="295" pos:column="34">++<pos:position pos:line="295" pos:column="36"/></operator><operator pos:line="295" pos:column="36">)<pos:position pos:line="295" pos:column="37"/></operator> <operator pos:line="295" pos:column="38">!=<pos:position pos:line="295" pos:column="40"/></operator> <literal type="number" pos:line="295" pos:column="41">0<pos:position pos:line="295" pos:column="42"/></literal></expr>)<pos:position pos:line="295" pos:column="43"/></condition>
	      <block type="pseudo"><empty_stmt pos:line="296" pos:column="15">;<pos:position pos:line="296" pos:column="16"/></empty_stmt></block></while>
	  }<pos:position pos:line="297" pos:column="12"/></block></then></if>
	  <expr_stmt><expr><call><name pos:line="298" pos:column="11">endElementHandler<pos:position pos:line="298" pos:column="28"/></name><argument_list pos:line="298" pos:column="28">(<argument><expr><name pos:line="298" pos:column="29">handlerArg<pos:position pos:line="298" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="298" pos:column="41">tag<pos:position pos:line="298" pos:column="44"/></name><operator pos:line="298" pos:column="44">-&gt;<pos:position pos:line="298" pos:column="49"/></operator><name pos:line="298" pos:column="46">name<pos:position pos:line="298" pos:column="50"/></name><operator pos:line="298" pos:column="50">.<pos:position pos:line="298" pos:column="51"/></operator><name pos:line="298" pos:column="51">str<pos:position pos:line="298" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="298" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="299" pos:column="10"/></block></then>
	<elseif pos:line="300" pos:column="9">else <if pos:line="300" pos:column="14">if <condition pos:line="300" pos:column="17">(<expr><name pos:line="300" pos:column="18">defaultHandler<pos:position pos:line="300" pos:column="32"/></name></expr>)<pos:position pos:line="300" pos:column="33"/></condition><then pos:line="300" pos:column="33">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="301" pos:column="11">reportDefault<pos:position pos:line="301" pos:column="24"/></name><argument_list pos:line="301" pos:column="24">(<argument><expr><name pos:line="301" pos:column="25">parser<pos:position pos:line="301" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="301" pos:column="33">enc<pos:position pos:line="301" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="301" pos:column="38">s<pos:position pos:line="301" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="301" pos:column="41">next<pos:position pos:line="301" pos:column="45"/></name></expr></argument>)<pos:position pos:line="301" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="47"/></expr_stmt></block></then></if></elseif></if>
	<while pos:line="302" pos:column="9">while <condition pos:line="302" pos:column="15">(<expr><name><name pos:line="302" pos:column="16">tag<pos:position pos:line="302" pos:column="19"/></name><operator pos:line="302" pos:column="19">-&gt;<pos:position pos:line="302" pos:column="24"/></operator><name pos:line="302" pos:column="21">bindings<pos:position pos:line="302" pos:column="29"/></name></name></expr>)<pos:position pos:line="302" pos:column="30"/></condition> <block pos:line="302" pos:column="31">{
	  <decl_stmt><decl><type><name pos:line="303" pos:column="11">BINDING<pos:position pos:line="303" pos:column="18"/></name> <modifier pos:line="303" pos:column="19">*<pos:position pos:line="303" pos:column="20"/></modifier></type><name pos:line="303" pos:column="20">b<pos:position pos:line="303" pos:column="21"/></name> <init pos:line="303" pos:column="22">= <expr><name><name pos:line="303" pos:column="24">tag<pos:position pos:line="303" pos:column="27"/></name><operator pos:line="303" pos:column="27">-&gt;<pos:position pos:line="303" pos:column="32"/></operator><name pos:line="303" pos:column="29">bindings<pos:position pos:line="303" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="303" pos:column="38"/></decl_stmt>
	  <if pos:line="304" pos:column="11">if <condition pos:line="304" pos:column="14">(<expr><name pos:line="304" pos:column="15">endNamespaceDeclHandler<pos:position pos:line="304" pos:column="38"/></name></expr>)<pos:position pos:line="304" pos:column="39"/></condition><then pos:line="304" pos:column="39">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="305" pos:column="13">endNamespaceDeclHandler<pos:position pos:line="305" pos:column="36"/></name><argument_list pos:line="305" pos:column="36">(<argument><expr><name pos:line="305" pos:column="37">handlerArg<pos:position pos:line="305" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="305" pos:column="49">b<pos:position pos:line="305" pos:column="50"/></name><operator pos:line="305" pos:column="50">-&gt;<pos:position pos:line="305" pos:column="55"/></operator><name pos:line="305" pos:column="52">prefix<pos:position pos:line="305" pos:column="58"/></name><operator pos:line="305" pos:column="58">-&gt;<pos:position pos:line="305" pos:column="63"/></operator><name pos:line="305" pos:column="60">name<pos:position pos:line="305" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="305" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="66"/></expr_stmt></block></then></if>
	  <expr_stmt><expr><name><name pos:line="306" pos:column="11">tag<pos:position pos:line="306" pos:column="14"/></name><operator pos:line="306" pos:column="14">-&gt;<pos:position pos:line="306" pos:column="19"/></operator><name pos:line="306" pos:column="16">bindings<pos:position pos:line="306" pos:column="24"/></name></name> <operator pos:line="306" pos:column="25">=<pos:position pos:line="306" pos:column="26"/></operator> <name><name pos:line="306" pos:column="27">tag<pos:position pos:line="306" pos:column="30"/></name><operator pos:line="306" pos:column="30">-&gt;<pos:position pos:line="306" pos:column="35"/></operator><name pos:line="306" pos:column="32">bindings<pos:position pos:line="306" pos:column="40"/></name><operator pos:line="306" pos:column="40">-&gt;<pos:position pos:line="306" pos:column="45"/></operator><name pos:line="306" pos:column="42">nextTagBinding<pos:position pos:line="306" pos:column="56"/></name></name></expr>;<pos:position pos:line="306" pos:column="57"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="307" pos:column="11">b<pos:position pos:line="307" pos:column="12"/></name><operator pos:line="307" pos:column="12">-&gt;<pos:position pos:line="307" pos:column="17"/></operator><name pos:line="307" pos:column="14">nextTagBinding<pos:position pos:line="307" pos:column="28"/></name></name> <operator pos:line="307" pos:column="29">=<pos:position pos:line="307" pos:column="30"/></operator> <name pos:line="307" pos:column="31">freeBindingList<pos:position pos:line="307" pos:column="46"/></name></expr>;<pos:position pos:line="307" pos:column="47"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="308" pos:column="11">freeBindingList<pos:position pos:line="308" pos:column="26"/></name> <operator pos:line="308" pos:column="27">=<pos:position pos:line="308" pos:column="28"/></operator> <name pos:line="308" pos:column="29">b<pos:position pos:line="308" pos:column="30"/></name></expr>;<pos:position pos:line="308" pos:column="31"/></expr_stmt>
	  <expr_stmt><expr><name><name pos:line="309" pos:column="11">b<pos:position pos:line="309" pos:column="12"/></name><operator pos:line="309" pos:column="12">-&gt;<pos:position pos:line="309" pos:column="17"/></operator><name pos:line="309" pos:column="14">prefix<pos:position pos:line="309" pos:column="20"/></name><operator pos:line="309" pos:column="20">-&gt;<pos:position pos:line="309" pos:column="25"/></operator><name pos:line="309" pos:column="22">binding<pos:position pos:line="309" pos:column="29"/></name></name> <operator pos:line="309" pos:column="30">=<pos:position pos:line="309" pos:column="31"/></operator> <name><name pos:line="309" pos:column="32">b<pos:position pos:line="309" pos:column="33"/></name><operator pos:line="309" pos:column="33">-&gt;<pos:position pos:line="309" pos:column="38"/></operator><name pos:line="309" pos:column="35">prevPrefixBinding<pos:position pos:line="309" pos:column="52"/></name></name></expr>;<pos:position pos:line="309" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="310" pos:column="10"/></block></while>
	<if pos:line="311" pos:column="9">if <condition pos:line="311" pos:column="12">(<expr><name pos:line="311" pos:column="13">tagLevel<pos:position pos:line="311" pos:column="21"/></name> <operator pos:line="311" pos:column="22">==<pos:position pos:line="311" pos:column="24"/></operator> <literal type="number" pos:line="311" pos:column="25">0<pos:position pos:line="311" pos:column="26"/></literal></expr>)<pos:position pos:line="311" pos:column="27"/></condition><then pos:line="311" pos:column="27">
	  <block type="pseudo"><return pos:line="312" pos:column="11">return <expr><call><name pos:line="312" pos:column="18">epilogProcessor<pos:position pos:line="312" pos:column="33"/></name><argument_list pos:line="312" pos:column="33">(<argument><expr><name pos:line="312" pos:column="34">parser<pos:position pos:line="312" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="312" pos:column="42">next<pos:position pos:line="312" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="312" pos:column="48">end<pos:position pos:line="312" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="312" pos:column="53">nextPtr<pos:position pos:line="312" pos:column="60"/></name></expr></argument>)<pos:position pos:line="312" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="312" pos:column="62"/></return></block></then></if>
      }<pos:position pos:line="313" pos:column="8"/></block></else></if>
      <break pos:line="314" pos:column="7">break;<pos:position pos:line="314" pos:column="13"/></break>
    <case pos:line="315" pos:column="5">case <expr><name pos:line="315" pos:column="10">XML_TOK_CHAR_REF<pos:position pos:line="315" pos:column="26"/></name></expr>:<pos:position pos:line="315" pos:column="27"/></case>
      <block pos:line="316" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="317" pos:column="9">int<pos:position pos:line="317" pos:column="12"/></name></type> <name pos:line="317" pos:column="13">n<pos:position pos:line="317" pos:column="14"/></name> <init pos:line="317" pos:column="15">= <expr><call><name pos:line="317" pos:column="17">XmlCharRefNumber<pos:position pos:line="317" pos:column="33"/></name><argument_list pos:line="317" pos:column="33">(<argument><expr><name pos:line="317" pos:column="34">enc<pos:position pos:line="317" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="317" pos:column="39">s<pos:position pos:line="317" pos:column="40"/></name></expr></argument>)<pos:position pos:line="317" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="317" pos:column="42"/></decl_stmt>
	<if pos:line="318" pos:column="9">if <condition pos:line="318" pos:column="12">(<expr><name pos:line="318" pos:column="13">n<pos:position pos:line="318" pos:column="14"/></name> <operator pos:line="318" pos:column="15">&lt;<pos:position pos:line="318" pos:column="19"/></operator> <literal type="number" pos:line="318" pos:column="17">0<pos:position pos:line="318" pos:column="18"/></literal></expr>)<pos:position pos:line="318" pos:column="19"/></condition><then pos:line="318" pos:column="19">
	  <block type="pseudo"><return pos:line="319" pos:column="11">return <expr><name pos:line="319" pos:column="18">XML_ERROR_BAD_CHAR_REF<pos:position pos:line="319" pos:column="40"/></name></expr>;<pos:position pos:line="319" pos:column="41"/></return></block></then></if>
	<if pos:line="320" pos:column="9">if <condition pos:line="320" pos:column="12">(<expr><name pos:line="320" pos:column="13">characterDataHandler<pos:position pos:line="320" pos:column="33"/></name></expr>)<pos:position pos:line="320" pos:column="34"/></condition><then pos:line="320" pos:column="34"> <block pos:line="320" pos:column="35">{
	  <decl_stmt><decl><type><name pos:line="321" pos:column="11">XML_Char<pos:position pos:line="321" pos:column="19"/></name></type> <name><name pos:line="321" pos:column="20">buf<pos:position pos:line="321" pos:column="23"/></name><index pos:line="321" pos:column="23">[<expr><name pos:line="321" pos:column="24">XML_ENCODE_MAX<pos:position pos:line="321" pos:column="38"/></name></expr>]<pos:position pos:line="321" pos:column="39"/></index></name></decl>;<pos:position pos:line="321" pos:column="40"/></decl_stmt>
	  <expr_stmt><expr><call><name pos:line="322" pos:column="11">characterDataHandler<pos:position pos:line="322" pos:column="31"/></name><argument_list pos:line="322" pos:column="31">(<argument><expr><name pos:line="322" pos:column="32">handlerArg<pos:position pos:line="322" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="322" pos:column="44">buf<pos:position pos:line="322" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="322" pos:column="49">XmlEncode<pos:position pos:line="322" pos:column="58"/></name><argument_list pos:line="322" pos:column="58">(<argument><expr><name pos:line="322" pos:column="59">n<pos:position pos:line="322" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="322" pos:column="62">(<pos:position pos:line="322" pos:column="63"/></operator><name pos:line="322" pos:column="63">ICHAR<pos:position pos:line="322" pos:column="68"/></name> <operator pos:line="322" pos:column="69">*<pos:position pos:line="322" pos:column="70"/></operator><operator pos:line="322" pos:column="70">)<pos:position pos:line="322" pos:column="71"/></operator><name pos:line="322" pos:column="71">buf<pos:position pos:line="322" pos:column="74"/></name></expr></argument>)<pos:position pos:line="322" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="322" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="323" pos:column="10"/></block></then>
	<elseif pos:line="324" pos:column="9">else <if pos:line="324" pos:column="14">if <condition pos:line="324" pos:column="17">(<expr><name pos:line="324" pos:column="18">defaultHandler<pos:position pos:line="324" pos:column="32"/></name></expr>)<pos:position pos:line="324" pos:column="33"/></condition><then pos:line="324" pos:column="33">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="325" pos:column="11">reportDefault<pos:position pos:line="325" pos:column="24"/></name><argument_list pos:line="325" pos:column="24">(<argument><expr><name pos:line="325" pos:column="25">parser<pos:position pos:line="325" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="325" pos:column="33">enc<pos:position pos:line="325" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="325" pos:column="38">s<pos:position pos:line="325" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="325" pos:column="41">next<pos:position pos:line="325" pos:column="45"/></name></expr></argument>)<pos:position pos:line="325" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="325" pos:column="47"/></expr_stmt></block></then></if></elseif></if>
      }<pos:position pos:line="326" pos:column="8"/></block>
      <break pos:line="327" pos:column="7">break;<pos:position pos:line="327" pos:column="13"/></break>
    <case pos:line="328" pos:column="5">case <expr><name pos:line="328" pos:column="10">XML_TOK_XML_DECL<pos:position pos:line="328" pos:column="26"/></name></expr>:<pos:position pos:line="328" pos:column="27"/></case>
      <return pos:line="329" pos:column="7">return <expr><name pos:line="329" pos:column="14">XML_ERROR_MISPLACED_XML_PI<pos:position pos:line="329" pos:column="40"/></name></expr>;<pos:position pos:line="329" pos:column="41"/></return>
    <case pos:line="330" pos:column="5">case <expr><name pos:line="330" pos:column="10">XML_TOK_DATA_NEWLINE<pos:position pos:line="330" pos:column="30"/></name></expr>:<pos:position pos:line="330" pos:column="31"/></case>
      <if pos:line="331" pos:column="7">if <condition pos:line="331" pos:column="10">(<expr><name pos:line="331" pos:column="11">characterDataHandler<pos:position pos:line="331" pos:column="31"/></name></expr>)<pos:position pos:line="331" pos:column="32"/></condition><then pos:line="331" pos:column="32"> <block pos:line="331" pos:column="33">{
	<decl_stmt><decl><type><name pos:line="332" pos:column="9">XML_Char<pos:position pos:line="332" pos:column="17"/></name></type> <name pos:line="332" pos:column="18">c<pos:position pos:line="332" pos:column="19"/></name> <init pos:line="332" pos:column="20">= <expr><literal type="number" pos:line="332" pos:column="22">0xA<pos:position pos:line="332" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="332" pos:column="26"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="333" pos:column="9">characterDataHandler<pos:position pos:line="333" pos:column="29"/></name><argument_list pos:line="333" pos:column="29">(<argument><expr><name pos:line="333" pos:column="30">handlerArg<pos:position pos:line="333" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="333" pos:column="42">&amp;<pos:position pos:line="333" pos:column="47"/></operator><name pos:line="333" pos:column="43">c<pos:position pos:line="333" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="333" pos:column="46">1<pos:position pos:line="333" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="333" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="49"/></expr_stmt>
      }<pos:position pos:line="334" pos:column="8"/></block></then>
      <elseif pos:line="335" pos:column="7">else <if pos:line="335" pos:column="12">if <condition pos:line="335" pos:column="15">(<expr><name pos:line="335" pos:column="16">defaultHandler<pos:position pos:line="335" pos:column="30"/></name></expr>)<pos:position pos:line="335" pos:column="31"/></condition><then pos:line="335" pos:column="31">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="336" pos:column="9">reportDefault<pos:position pos:line="336" pos:column="22"/></name><argument_list pos:line="336" pos:column="22">(<argument><expr><name pos:line="336" pos:column="23">parser<pos:position pos:line="336" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="336" pos:column="31">enc<pos:position pos:line="336" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="336" pos:column="36">s<pos:position pos:line="336" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="336" pos:column="39">next<pos:position pos:line="336" pos:column="43"/></name></expr></argument>)<pos:position pos:line="336" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="336" pos:column="45"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="337" pos:column="7">break;<pos:position pos:line="337" pos:column="13"/></break>
    <case pos:line="338" pos:column="5">case <expr><name pos:line="338" pos:column="10">XML_TOK_CDATA_SECT_OPEN<pos:position pos:line="338" pos:column="33"/></name></expr>:<pos:position pos:line="338" pos:column="34"/></case>
      <block pos:line="339" pos:column="7">{
	<decl_stmt><decl><type><name><name pos:line="340" pos:column="9">enum<pos:position pos:line="340" pos:column="13"/></name> <name pos:line="340" pos:column="14">XML_Error<pos:position pos:line="340" pos:column="23"/></name></name></type> <name pos:line="340" pos:column="24">result<pos:position pos:line="340" pos:column="30"/></name></decl>;<pos:position pos:line="340" pos:column="31"/></decl_stmt>
	<if pos:line="341" pos:column="9">if <condition pos:line="341" pos:column="12">(<expr><name pos:line="341" pos:column="13">startCdataSectionHandler<pos:position pos:line="341" pos:column="37"/></name></expr>)<pos:position pos:line="341" pos:column="38"/></condition><then pos:line="341" pos:column="38">
  	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="342" pos:column="11">startCdataSectionHandler<pos:position pos:line="342" pos:column="35"/></name><argument_list pos:line="342" pos:column="35">(<argument><expr><name pos:line="342" pos:column="36">handlerArg<pos:position pos:line="342" pos:column="46"/></name></expr></argument>)<pos:position pos:line="342" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="342" pos:column="48"/></expr_stmt></block></then>
<cpp:if pos:line="343" pos:column="1">#<cpp:directive pos:line="343" pos:column="2">if<pos:position pos:line="343" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="343" pos:column="5">0<pos:position pos:line="343" pos:column="6"/></literal></expr></cpp:if>
	<comment type="block" pos:line="344" pos:column="9">/* Suppose you doing a transformation on a document that involves
	   changing only the character data.  You set up a defaultHandler
	   and a characterDataHandler.  The defaultHandler simply copies
	   characters through.  The characterDataHandler does the transformation
	   and writes the characters out escaping them as necessary.  This case
	   will fail to work if we leave out the following two lines (because &amp;
	   and &lt; inside CDATA sections will be incorrectly escaped).

	   However, now we have a start/endCdataSectionHandler, so it seems
	   easier to let the user deal with this. */</comment>

	else if (characterDataHandler)
  	  characterDataHandler(handlerArg, dataBuf, 0);
<cpp:endif pos:line="357" pos:column="1">#<cpp:directive pos:line="357" pos:column="2">endif<pos:position pos:line="357" pos:column="7"/></cpp:directive></cpp:endif>
	<elseif pos:line="358" pos:column="9">else <if pos:line="358" pos:column="14">if <condition pos:line="358" pos:column="17">(<expr><name pos:line="358" pos:column="18">defaultHandler<pos:position pos:line="358" pos:column="32"/></name></expr>)<pos:position pos:line="358" pos:column="33"/></condition><then pos:line="358" pos:column="33">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="359" pos:column="11">reportDefault<pos:position pos:line="359" pos:column="24"/></name><argument_list pos:line="359" pos:column="24">(<argument><expr><name pos:line="359" pos:column="25">parser<pos:position pos:line="359" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="359" pos:column="33">enc<pos:position pos:line="359" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="359" pos:column="38">s<pos:position pos:line="359" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="359" pos:column="41">next<pos:position pos:line="359" pos:column="45"/></name></expr></argument>)<pos:position pos:line="359" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="359" pos:column="47"/></expr_stmt></block></then></if></elseif></if>
	<expr_stmt><expr><name pos:line="360" pos:column="9">result<pos:position pos:line="360" pos:column="15"/></name> <operator pos:line="360" pos:column="16">=<pos:position pos:line="360" pos:column="17"/></operator> <call><name pos:line="360" pos:column="18">doCdataSection<pos:position pos:line="360" pos:column="32"/></name><argument_list pos:line="360" pos:column="32">(<argument><expr><name pos:line="360" pos:column="33">parser<pos:position pos:line="360" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="360" pos:column="41">enc<pos:position pos:line="360" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="360" pos:column="46">&amp;<pos:position pos:line="360" pos:column="51"/></operator><name pos:line="360" pos:column="47">next<pos:position pos:line="360" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="360" pos:column="53">end<pos:position pos:line="360" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="360" pos:column="58">nextPtr<pos:position pos:line="360" pos:column="65"/></name></expr></argument>)<pos:position pos:line="360" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="360" pos:column="67"/></expr_stmt>
	<if pos:line="361" pos:column="9">if <condition pos:line="361" pos:column="12">(<expr><operator pos:line="361" pos:column="13">!<pos:position pos:line="361" pos:column="14"/></operator><name pos:line="361" pos:column="14">next<pos:position pos:line="361" pos:column="18"/></name></expr>)<pos:position pos:line="361" pos:column="19"/></condition><then pos:line="361" pos:column="19"> <block pos:line="361" pos:column="20">{
	  <expr_stmt><expr><name pos:line="362" pos:column="11">processor<pos:position pos:line="362" pos:column="20"/></name> <operator pos:line="362" pos:column="21">=<pos:position pos:line="362" pos:column="22"/></operator> <name pos:line="362" pos:column="23">cdataSectionProcessor<pos:position pos:line="362" pos:column="44"/></name></expr>;<pos:position pos:line="362" pos:column="45"/></expr_stmt>
	  <return pos:line="363" pos:column="11">return <expr><name pos:line="363" pos:column="18">result<pos:position pos:line="363" pos:column="24"/></name></expr>;<pos:position pos:line="363" pos:column="25"/></return>
	}<pos:position pos:line="364" pos:column="10"/></block></then></if>
      }<pos:position pos:line="365" pos:column="8"/></block>
      <break pos:line="366" pos:column="7">break;<pos:position pos:line="366" pos:column="13"/></break>
    <case pos:line="367" pos:column="5">case <expr><name pos:line="367" pos:column="10">XML_TOK_TRAILING_RSQB<pos:position pos:line="367" pos:column="31"/></name></expr>:<pos:position pos:line="367" pos:column="32"/></case>
      <if pos:line="368" pos:column="7">if <condition pos:line="368" pos:column="10">(<expr><name pos:line="368" pos:column="11">nextPtr<pos:position pos:line="368" pos:column="18"/></name></expr>)<pos:position pos:line="368" pos:column="19"/></condition><then pos:line="368" pos:column="19"> <block pos:line="368" pos:column="20">{
	<expr_stmt><expr><operator pos:line="369" pos:column="9">*<pos:position pos:line="369" pos:column="10"/></operator><name pos:line="369" pos:column="10">nextPtr<pos:position pos:line="369" pos:column="17"/></name> <operator pos:line="369" pos:column="18">=<pos:position pos:line="369" pos:column="19"/></operator> <name pos:line="369" pos:column="20">s<pos:position pos:line="369" pos:column="21"/></name></expr>;<pos:position pos:line="369" pos:column="22"/></expr_stmt>
	<return pos:line="370" pos:column="9">return <expr><name pos:line="370" pos:column="16">XML_ERROR_NONE<pos:position pos:line="370" pos:column="30"/></name></expr>;<pos:position pos:line="370" pos:column="31"/></return>
      }<pos:position pos:line="371" pos:column="8"/></block></then></if>
      <if pos:line="372" pos:column="7">if <condition pos:line="372" pos:column="10">(<expr><name pos:line="372" pos:column="11">characterDataHandler<pos:position pos:line="372" pos:column="31"/></name></expr>)<pos:position pos:line="372" pos:column="32"/></condition><then pos:line="372" pos:column="32"> <block pos:line="372" pos:column="33">{
	<if pos:line="373" pos:column="9">if <condition pos:line="373" pos:column="12">(<expr><call><name pos:line="373" pos:column="13">MUST_CONVERT<pos:position pos:line="373" pos:column="25"/></name><argument_list pos:line="373" pos:column="25">(<argument><expr><name pos:line="373" pos:column="26">enc<pos:position pos:line="373" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="373" pos:column="31">s<pos:position pos:line="373" pos:column="32"/></name></expr></argument>)<pos:position pos:line="373" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="373" pos:column="34"/></condition><then pos:line="373" pos:column="34"> <block pos:line="373" pos:column="35">{
	  <decl_stmt><decl><type><name pos:line="374" pos:column="11">ICHAR<pos:position pos:line="374" pos:column="16"/></name> <modifier pos:line="374" pos:column="17">*<pos:position pos:line="374" pos:column="18"/></modifier></type><name pos:line="374" pos:column="18">dataPtr<pos:position pos:line="374" pos:column="25"/></name> <init pos:line="374" pos:column="26">= <expr><operator pos:line="374" pos:column="28">(<pos:position pos:line="374" pos:column="29"/></operator><name pos:line="374" pos:column="29">ICHAR<pos:position pos:line="374" pos:column="34"/></name> <operator pos:line="374" pos:column="35">*<pos:position pos:line="374" pos:column="36"/></operator><operator pos:line="374" pos:column="36">)<pos:position pos:line="374" pos:column="37"/></operator><name pos:line="374" pos:column="37">dataBuf<pos:position pos:line="374" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="374" pos:column="45"/></decl_stmt>
	  <expr_stmt><expr><call><name pos:line="375" pos:column="11">XmlConvert<pos:position pos:line="375" pos:column="21"/></name><argument_list pos:line="375" pos:column="21">(<argument><expr><name pos:line="375" pos:column="22">enc<pos:position pos:line="375" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="375" pos:column="27">&amp;<pos:position pos:line="375" pos:column="32"/></operator><name pos:line="375" pos:column="28">s<pos:position pos:line="375" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="375" pos:column="31">end<pos:position pos:line="375" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="375" pos:column="36">&amp;<pos:position pos:line="375" pos:column="41"/></operator><name pos:line="375" pos:column="37">dataPtr<pos:position pos:line="375" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="375" pos:column="46">(<pos:position pos:line="375" pos:column="47"/></operator><name pos:line="375" pos:column="47">ICHAR<pos:position pos:line="375" pos:column="52"/></name> <operator pos:line="375" pos:column="53">*<pos:position pos:line="375" pos:column="54"/></operator><operator pos:line="375" pos:column="54">)<pos:position pos:line="375" pos:column="55"/></operator><name pos:line="375" pos:column="55">dataBufEnd<pos:position pos:line="375" pos:column="65"/></name></expr></argument>)<pos:position pos:line="375" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="375" pos:column="67"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="376" pos:column="11">characterDataHandler<pos:position pos:line="376" pos:column="31"/></name><argument_list pos:line="376" pos:column="31">(<argument><expr><name pos:line="376" pos:column="32">handlerArg<pos:position pos:line="376" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="376" pos:column="44">dataBuf<pos:position pos:line="376" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="376" pos:column="53">dataPtr<pos:position pos:line="376" pos:column="60"/></name> <operator pos:line="376" pos:column="61">-<pos:position pos:line="376" pos:column="62"/></operator> <operator pos:line="376" pos:column="63">(<pos:position pos:line="376" pos:column="64"/></operator><name pos:line="376" pos:column="64">ICHAR<pos:position pos:line="376" pos:column="69"/></name> <operator pos:line="376" pos:column="70">*<pos:position pos:line="376" pos:column="71"/></operator><operator pos:line="376" pos:column="71">)<pos:position pos:line="376" pos:column="72"/></operator><name pos:line="376" pos:column="72">dataBuf<pos:position pos:line="376" pos:column="79"/></name></expr></argument>)<pos:position pos:line="376" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="376" pos:column="81"/></expr_stmt>
	}<pos:position pos:line="377" pos:column="10"/></block></then>
	<else pos:line="378" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="379" pos:column="11">characterDataHandler<pos:position pos:line="379" pos:column="31"/></name><argument_list pos:line="379" pos:column="31">(<argument><expr><name pos:line="379" pos:column="32">handlerArg<pos:position pos:line="379" pos:column="42"/></name></expr></argument>,
		  	       <argument><expr><operator pos:line="380" pos:column="32">(<pos:position pos:line="380" pos:column="33"/></operator><name pos:line="380" pos:column="33">XML_Char<pos:position pos:line="380" pos:column="41"/></name> <operator pos:line="380" pos:column="42">*<pos:position pos:line="380" pos:column="43"/></operator><operator pos:line="380" pos:column="43">)<pos:position pos:line="380" pos:column="44"/></operator><name pos:line="380" pos:column="44">s<pos:position pos:line="380" pos:column="45"/></name></expr></argument>,
			       <argument><expr><operator pos:line="381" pos:column="32">(<pos:position pos:line="381" pos:column="33"/></operator><name pos:line="381" pos:column="33">XML_Char<pos:position pos:line="381" pos:column="41"/></name> <operator pos:line="381" pos:column="42">*<pos:position pos:line="381" pos:column="43"/></operator><operator pos:line="381" pos:column="43">)<pos:position pos:line="381" pos:column="44"/></operator><name pos:line="381" pos:column="44">end<pos:position pos:line="381" pos:column="47"/></name> <operator pos:line="381" pos:column="48">-<pos:position pos:line="381" pos:column="49"/></operator> <operator pos:line="381" pos:column="50">(<pos:position pos:line="381" pos:column="51"/></operator><name pos:line="381" pos:column="51">XML_Char<pos:position pos:line="381" pos:column="59"/></name> <operator pos:line="381" pos:column="60">*<pos:position pos:line="381" pos:column="61"/></operator><operator pos:line="381" pos:column="61">)<pos:position pos:line="381" pos:column="62"/></operator><name pos:line="381" pos:column="62">s<pos:position pos:line="381" pos:column="63"/></name></expr></argument>)<pos:position pos:line="381" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="381" pos:column="65"/></expr_stmt></block></else></if>
      }<pos:position pos:line="382" pos:column="8"/></block></then>
      <elseif pos:line="383" pos:column="7">else <if pos:line="383" pos:column="12">if <condition pos:line="383" pos:column="15">(<expr><name pos:line="383" pos:column="16">defaultHandler<pos:position pos:line="383" pos:column="30"/></name></expr>)<pos:position pos:line="383" pos:column="31"/></condition><then pos:line="383" pos:column="31">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="384" pos:column="9">reportDefault<pos:position pos:line="384" pos:column="22"/></name><argument_list pos:line="384" pos:column="22">(<argument><expr><name pos:line="384" pos:column="23">parser<pos:position pos:line="384" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="384" pos:column="31">enc<pos:position pos:line="384" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="384" pos:column="36">s<pos:position pos:line="384" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="384" pos:column="39">end<pos:position pos:line="384" pos:column="42"/></name></expr></argument>)<pos:position pos:line="384" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="384" pos:column="44"/></expr_stmt></block></then></if></elseif></if>
      <if pos:line="385" pos:column="7">if <condition pos:line="385" pos:column="10">(<expr><name pos:line="385" pos:column="11">startTagLevel<pos:position pos:line="385" pos:column="24"/></name> <operator pos:line="385" pos:column="25">==<pos:position pos:line="385" pos:column="27"/></operator> <literal type="number" pos:line="385" pos:column="28">0<pos:position pos:line="385" pos:column="29"/></literal></expr>)<pos:position pos:line="385" pos:column="30"/></condition><then pos:line="385" pos:column="30"> <block pos:line="385" pos:column="31">{
        <expr_stmt><expr><operator pos:line="386" pos:column="9">*<pos:position pos:line="386" pos:column="10"/></operator><name pos:line="386" pos:column="10">eventPP<pos:position pos:line="386" pos:column="17"/></name> <operator pos:line="386" pos:column="18">=<pos:position pos:line="386" pos:column="19"/></operator> <name pos:line="386" pos:column="20">end<pos:position pos:line="386" pos:column="23"/></name></expr>;<pos:position pos:line="386" pos:column="24"/></expr_stmt>
	<return pos:line="387" pos:column="9">return <expr><name pos:line="387" pos:column="16">XML_ERROR_NO_ELEMENTS<pos:position pos:line="387" pos:column="37"/></name></expr>;<pos:position pos:line="387" pos:column="38"/></return>
      }<pos:position pos:line="388" pos:column="8"/></block></then></if>
      <if pos:line="389" pos:column="7">if <condition pos:line="389" pos:column="10">(<expr><name pos:line="389" pos:column="11">tagLevel<pos:position pos:line="389" pos:column="19"/></name> <operator pos:line="389" pos:column="20">!=<pos:position pos:line="389" pos:column="22"/></operator> <name pos:line="389" pos:column="23">startTagLevel<pos:position pos:line="389" pos:column="36"/></name></expr>)<pos:position pos:line="389" pos:column="37"/></condition><then pos:line="389" pos:column="37"> <block pos:line="389" pos:column="38">{
	<expr_stmt><expr><operator pos:line="390" pos:column="9">*<pos:position pos:line="390" pos:column="10"/></operator><name pos:line="390" pos:column="10">eventPP<pos:position pos:line="390" pos:column="17"/></name> <operator pos:line="390" pos:column="18">=<pos:position pos:line="390" pos:column="19"/></operator> <name pos:line="390" pos:column="20">end<pos:position pos:line="390" pos:column="23"/></name></expr>;<pos:position pos:line="390" pos:column="24"/></expr_stmt>
	<return pos:line="391" pos:column="9">return <expr><name pos:line="391" pos:column="16">XML_ERROR_ASYNC_ENTITY<pos:position pos:line="391" pos:column="38"/></name></expr>;<pos:position pos:line="391" pos:column="39"/></return>
      }<pos:position pos:line="392" pos:column="8"/></block></then></if>
      <return pos:line="393" pos:column="7">return <expr><name pos:line="393" pos:column="14">XML_ERROR_NONE<pos:position pos:line="393" pos:column="28"/></name></expr>;<pos:position pos:line="393" pos:column="29"/></return>
    <case pos:line="394" pos:column="5">case <expr><name pos:line="394" pos:column="10">XML_TOK_DATA_CHARS<pos:position pos:line="394" pos:column="28"/></name></expr>:<pos:position pos:line="394" pos:column="29"/></case>
      <if pos:line="395" pos:column="7">if <condition pos:line="395" pos:column="10">(<expr><name pos:line="395" pos:column="11">characterDataHandler<pos:position pos:line="395" pos:column="31"/></name></expr>)<pos:position pos:line="395" pos:column="32"/></condition><then pos:line="395" pos:column="32"> <block pos:line="395" pos:column="33">{
	<if pos:line="396" pos:column="9">if <condition pos:line="396" pos:column="12">(<expr><call><name pos:line="396" pos:column="13">MUST_CONVERT<pos:position pos:line="396" pos:column="25"/></name><argument_list pos:line="396" pos:column="25">(<argument><expr><name pos:line="396" pos:column="26">enc<pos:position pos:line="396" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="396" pos:column="31">s<pos:position pos:line="396" pos:column="32"/></name></expr></argument>)<pos:position pos:line="396" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="396" pos:column="34"/></condition><then pos:line="396" pos:column="34"> <block pos:line="396" pos:column="35">{
	  <for pos:line="397" pos:column="11">for <control pos:line="397" pos:column="15">(<init pos:line="397" pos:column="16">;<pos:position pos:line="397" pos:column="17"/></init><condition pos:line="397" pos:column="17">;<pos:position pos:line="397" pos:column="18"/></condition><incr/>)<pos:position pos:line="397" pos:column="19"/></control> <block pos:line="397" pos:column="20">{
	    <decl_stmt><decl><type><name pos:line="398" pos:column="13">ICHAR<pos:position pos:line="398" pos:column="18"/></name> <modifier pos:line="398" pos:column="19">*<pos:position pos:line="398" pos:column="20"/></modifier></type><name pos:line="398" pos:column="20">dataPtr<pos:position pos:line="398" pos:column="27"/></name> <init pos:line="398" pos:column="28">= <expr><operator pos:line="398" pos:column="30">(<pos:position pos:line="398" pos:column="31"/></operator><name pos:line="398" pos:column="31">ICHAR<pos:position pos:line="398" pos:column="36"/></name> <operator pos:line="398" pos:column="37">*<pos:position pos:line="398" pos:column="38"/></operator><operator pos:line="398" pos:column="38">)<pos:position pos:line="398" pos:column="39"/></operator><name pos:line="398" pos:column="39">dataBuf<pos:position pos:line="398" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="398" pos:column="47"/></decl_stmt>
	    <expr_stmt><expr><call><name pos:line="399" pos:column="13">XmlConvert<pos:position pos:line="399" pos:column="23"/></name><argument_list pos:line="399" pos:column="23">(<argument><expr><name pos:line="399" pos:column="24">enc<pos:position pos:line="399" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="399" pos:column="29">&amp;<pos:position pos:line="399" pos:column="34"/></operator><name pos:line="399" pos:column="30">s<pos:position pos:line="399" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="399" pos:column="33">next<pos:position pos:line="399" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="399" pos:column="39">&amp;<pos:position pos:line="399" pos:column="44"/></operator><name pos:line="399" pos:column="40">dataPtr<pos:position pos:line="399" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="399" pos:column="49">(<pos:position pos:line="399" pos:column="50"/></operator><name pos:line="399" pos:column="50">ICHAR<pos:position pos:line="399" pos:column="55"/></name> <operator pos:line="399" pos:column="56">*<pos:position pos:line="399" pos:column="57"/></operator><operator pos:line="399" pos:column="57">)<pos:position pos:line="399" pos:column="58"/></operator><name pos:line="399" pos:column="58">dataBufEnd<pos:position pos:line="399" pos:column="68"/></name></expr></argument>)<pos:position pos:line="399" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="399" pos:column="70"/></expr_stmt>
	    <expr_stmt><expr><operator pos:line="400" pos:column="13">*<pos:position pos:line="400" pos:column="14"/></operator><name pos:line="400" pos:column="14">eventEndPP<pos:position pos:line="400" pos:column="24"/></name> <operator pos:line="400" pos:column="25">=<pos:position pos:line="400" pos:column="26"/></operator> <name pos:line="400" pos:column="27">s<pos:position pos:line="400" pos:column="28"/></name></expr>;<pos:position pos:line="400" pos:column="29"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="401" pos:column="13">characterDataHandler<pos:position pos:line="401" pos:column="33"/></name><argument_list pos:line="401" pos:column="33">(<argument><expr><name pos:line="401" pos:column="34">handlerArg<pos:position pos:line="401" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="401" pos:column="46">dataBuf<pos:position pos:line="401" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="401" pos:column="55">dataPtr<pos:position pos:line="401" pos:column="62"/></name> <operator pos:line="401" pos:column="63">-<pos:position pos:line="401" pos:column="64"/></operator> <operator pos:line="401" pos:column="65">(<pos:position pos:line="401" pos:column="66"/></operator><name pos:line="401" pos:column="66">ICHAR<pos:position pos:line="401" pos:column="71"/></name> <operator pos:line="401" pos:column="72">*<pos:position pos:line="401" pos:column="73"/></operator><operator pos:line="401" pos:column="73">)<pos:position pos:line="401" pos:column="74"/></operator><name pos:line="401" pos:column="74">dataBuf<pos:position pos:line="401" pos:column="81"/></name></expr></argument>)<pos:position pos:line="401" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="401" pos:column="83"/></expr_stmt>
	    <if pos:line="402" pos:column="13">if <condition pos:line="402" pos:column="16">(<expr><name pos:line="402" pos:column="17">s<pos:position pos:line="402" pos:column="18"/></name> <operator pos:line="402" pos:column="19">==<pos:position pos:line="402" pos:column="21"/></operator> <name pos:line="402" pos:column="22">next<pos:position pos:line="402" pos:column="26"/></name></expr>)<pos:position pos:line="402" pos:column="27"/></condition><then pos:line="402" pos:column="27">
	      <block type="pseudo"><break pos:line="403" pos:column="15">break;<pos:position pos:line="403" pos:column="21"/></break></block></then></if>
	    <expr_stmt><expr><operator pos:line="404" pos:column="13">*<pos:position pos:line="404" pos:column="14"/></operator><name pos:line="404" pos:column="14">eventPP<pos:position pos:line="404" pos:column="21"/></name> <operator pos:line="404" pos:column="22">=<pos:position pos:line="404" pos:column="23"/></operator> <name pos:line="404" pos:column="24">s<pos:position pos:line="404" pos:column="25"/></name></expr>;<pos:position pos:line="404" pos:column="26"/></expr_stmt>
	  }<pos:position pos:line="405" pos:column="12"/></block></for>
	}<pos:position pos:line="406" pos:column="10"/></block></then>
	<else pos:line="407" pos:column="9">else
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="408" pos:column="11">characterDataHandler<pos:position pos:line="408" pos:column="31"/></name><argument_list pos:line="408" pos:column="31">(<argument><expr><name pos:line="408" pos:column="32">handlerArg<pos:position pos:line="408" pos:column="42"/></name></expr></argument>,
			       <argument><expr><operator pos:line="409" pos:column="32">(<pos:position pos:line="409" pos:column="33"/></operator><name pos:line="409" pos:column="33">XML_Char<pos:position pos:line="409" pos:column="41"/></name> <operator pos:line="409" pos:column="42">*<pos:position pos:line="409" pos:column="43"/></operator><operator pos:line="409" pos:column="43">)<pos:position pos:line="409" pos:column="44"/></operator><name pos:line="409" pos:column="44">s<pos:position pos:line="409" pos:column="45"/></name></expr></argument>,
			       <argument><expr><operator pos:line="410" pos:column="32">(<pos:position pos:line="410" pos:column="33"/></operator><name pos:line="410" pos:column="33">XML_Char<pos:position pos:line="410" pos:column="41"/></name> <operator pos:line="410" pos:column="42">*<pos:position pos:line="410" pos:column="43"/></operator><operator pos:line="410" pos:column="43">)<pos:position pos:line="410" pos:column="44"/></operator><name pos:line="410" pos:column="44">next<pos:position pos:line="410" pos:column="48"/></name> <operator pos:line="410" pos:column="49">-<pos:position pos:line="410" pos:column="50"/></operator> <operator pos:line="410" pos:column="51">(<pos:position pos:line="410" pos:column="52"/></operator><name pos:line="410" pos:column="52">XML_Char<pos:position pos:line="410" pos:column="60"/></name> <operator pos:line="410" pos:column="61">*<pos:position pos:line="410" pos:column="62"/></operator><operator pos:line="410" pos:column="62">)<pos:position pos:line="410" pos:column="63"/></operator><name pos:line="410" pos:column="63">s<pos:position pos:line="410" pos:column="64"/></name></expr></argument>)<pos:position pos:line="410" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="410" pos:column="66"/></expr_stmt></block></else></if>
      }<pos:position pos:line="411" pos:column="8"/></block></then>
      <elseif pos:line="412" pos:column="7">else <if pos:line="412" pos:column="12">if <condition pos:line="412" pos:column="15">(<expr><name pos:line="412" pos:column="16">defaultHandler<pos:position pos:line="412" pos:column="30"/></name></expr>)<pos:position pos:line="412" pos:column="31"/></condition><then pos:line="412" pos:column="31">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="413" pos:column="9">reportDefault<pos:position pos:line="413" pos:column="22"/></name><argument_list pos:line="413" pos:column="22">(<argument><expr><name pos:line="413" pos:column="23">parser<pos:position pos:line="413" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="413" pos:column="31">enc<pos:position pos:line="413" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="413" pos:column="36">s<pos:position pos:line="413" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="413" pos:column="39">next<pos:position pos:line="413" pos:column="43"/></name></expr></argument>)<pos:position pos:line="413" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="413" pos:column="45"/></expr_stmt></block></then></if></elseif></if>
      <break pos:line="414" pos:column="7">break;<pos:position pos:line="414" pos:column="13"/></break>
    <case pos:line="415" pos:column="5">case <expr><name pos:line="415" pos:column="10">XML_TOK_PI<pos:position pos:line="415" pos:column="20"/></name></expr>:<pos:position pos:line="415" pos:column="21"/></case>
      <if pos:line="416" pos:column="7">if <condition pos:line="416" pos:column="10">(<expr><operator pos:line="416" pos:column="11">!<pos:position pos:line="416" pos:column="12"/></operator><call><name pos:line="416" pos:column="12">reportProcessingInstruction<pos:position pos:line="416" pos:column="39"/></name><argument_list pos:line="416" pos:column="39">(<argument><expr><name pos:line="416" pos:column="40">parser<pos:position pos:line="416" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="416" pos:column="48">enc<pos:position pos:line="416" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="416" pos:column="53">s<pos:position pos:line="416" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="416" pos:column="56">next<pos:position pos:line="416" pos:column="60"/></name></expr></argument>)<pos:position pos:line="416" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="416" pos:column="62"/></condition><then pos:line="416" pos:column="62">
	<block type="pseudo"><return pos:line="417" pos:column="9">return <expr><name pos:line="417" pos:column="16">XML_ERROR_NO_MEMORY<pos:position pos:line="417" pos:column="35"/></name></expr>;<pos:position pos:line="417" pos:column="36"/></return></block></then></if>
      <break pos:line="418" pos:column="7">break;<pos:position pos:line="418" pos:column="13"/></break>
    <case pos:line="419" pos:column="5">case <expr><name pos:line="419" pos:column="10">XML_TOK_COMMENT<pos:position pos:line="419" pos:column="25"/></name></expr>:<pos:position pos:line="419" pos:column="26"/></case>
      <if pos:line="420" pos:column="7">if <condition pos:line="420" pos:column="10">(<expr><operator pos:line="420" pos:column="11">!<pos:position pos:line="420" pos:column="12"/></operator><call><name pos:line="420" pos:column="12">reportComment<pos:position pos:line="420" pos:column="25"/></name><argument_list pos:line="420" pos:column="25">(<argument><expr><name pos:line="420" pos:column="26">parser<pos:position pos:line="420" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="420" pos:column="34">enc<pos:position pos:line="420" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="420" pos:column="39">s<pos:position pos:line="420" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="420" pos:column="42">next<pos:position pos:line="420" pos:column="46"/></name></expr></argument>)<pos:position pos:line="420" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="420" pos:column="48"/></condition><then pos:line="420" pos:column="48">
	<block type="pseudo"><return pos:line="421" pos:column="9">return <expr><name pos:line="421" pos:column="16">XML_ERROR_NO_MEMORY<pos:position pos:line="421" pos:column="35"/></name></expr>;<pos:position pos:line="421" pos:column="36"/></return></block></then></if>
      <break pos:line="422" pos:column="7">break;<pos:position pos:line="422" pos:column="13"/></break>
    <default pos:line="423" pos:column="5">default:<pos:position pos:line="423" pos:column="13"/></default>
      <if pos:line="424" pos:column="7">if <condition pos:line="424" pos:column="10">(<expr><name pos:line="424" pos:column="11">defaultHandler<pos:position pos:line="424" pos:column="25"/></name></expr>)<pos:position pos:line="424" pos:column="26"/></condition><then pos:line="424" pos:column="26">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="425" pos:column="9">reportDefault<pos:position pos:line="425" pos:column="22"/></name><argument_list pos:line="425" pos:column="22">(<argument><expr><name pos:line="425" pos:column="23">parser<pos:position pos:line="425" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="425" pos:column="31">enc<pos:position pos:line="425" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="425" pos:column="36">s<pos:position pos:line="425" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="425" pos:column="39">next<pos:position pos:line="425" pos:column="43"/></name></expr></argument>)<pos:position pos:line="425" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="425" pos:column="45"/></expr_stmt></block></then></if>
      <break pos:line="426" pos:column="7">break;<pos:position pos:line="426" pos:column="13"/></break>
    }<pos:position pos:line="427" pos:column="6"/></block></switch>
    <expr_stmt><expr><operator pos:line="428" pos:column="5">*<pos:position pos:line="428" pos:column="6"/></operator><name pos:line="428" pos:column="6">eventPP<pos:position pos:line="428" pos:column="13"/></name> <operator pos:line="428" pos:column="14">=<pos:position pos:line="428" pos:column="15"/></operator> <name pos:line="428" pos:column="16">s<pos:position pos:line="428" pos:column="17"/></name> <operator pos:line="428" pos:column="18">=<pos:position pos:line="428" pos:column="19"/></operator> <name pos:line="428" pos:column="20">next<pos:position pos:line="428" pos:column="24"/></name></expr>;<pos:position pos:line="428" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="429" pos:column="4"/></block></for>
  <comment type="block" pos:line="430" pos:column="3">/* not reached */</comment>
}<pos:position pos:line="431" pos:column="2"/></block></function></unit>

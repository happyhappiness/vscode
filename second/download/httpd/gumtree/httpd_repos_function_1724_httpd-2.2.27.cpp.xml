<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1724_httpd-2.2.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">set_default_end_tag<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">cmd_parms<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">cmd<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">void<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">mconfig<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                       <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">tag<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">include_server_config<pos:position pos:line="4" pos:column="26"/></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">conf<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">p<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">tag<pos:position pos:line="5" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* sanity check. The parser may fail otherwise */</comment>
    <while pos:line="8" pos:column="5">while <condition pos:line="8" pos:column="11">(<expr><operator pos:line="8" pos:column="12">*<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">p<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition> <block pos:line="8" pos:column="16">{
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">apr_isspace<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><operator pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">p<pos:position pos:line="9" pos:column="27"/></name></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="29"/></condition><then pos:line="9" pos:column="29"> <block pos:line="9" pos:column="30">{
            <return pos:line="10" pos:column="13">return <expr><literal type="string" pos:line="10" pos:column="20">"SSIEndTag may not contain any whitespaces"<pos:position pos:line="10" pos:column="63"/></literal></expr>;<pos:position pos:line="10" pos:column="64"/></return>
        }<pos:position pos:line="11" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="12" pos:column="9">++<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">p<pos:position pos:line="12" pos:column="12"/></name></expr>;<pos:position pos:line="12" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></while>

    <expr_stmt><expr><name pos:line="15" pos:column="5">conf<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <call><name pos:line="15" pos:column="11">ap_get_module_config<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><name><name pos:line="15" pos:column="32">cmd<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">server<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">-&gt;<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="45">module_config<pos:position pos:line="15" pos:column="58"/></name></name></expr></argument> , <argument><expr><operator pos:line="15" pos:column="61">&amp;<pos:position pos:line="15" pos:column="66"/></operator><name pos:line="15" pos:column="62">include_module<pos:position pos:line="15" pos:column="76"/></name></expr></argument>)<pos:position pos:line="15" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">conf<pos:position pos:line="16" pos:column="9"/></name><operator pos:line="16" pos:column="9">-&gt;<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="11">default_end_tag<pos:position pos:line="16" pos:column="26"/></name></name> <operator pos:line="16" pos:column="27">=<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="29">tag<pos:position pos:line="16" pos:column="32"/></name></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>

    <return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">NULL<pos:position pos:line="18" pos:column="16"/></name></expr>;<pos:position pos:line="18" pos:column="17"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

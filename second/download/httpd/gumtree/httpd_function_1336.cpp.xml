<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1336.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">DBPROCESS<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">freetds_open<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">apr_pool_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">pool<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">params<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                               <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier><modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">error<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">server<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><name pos:line="4" pos:column="20">NULL<pos:position pos:line="4" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">DBPROCESS<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">process<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">LOGINREC<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">login<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="7" pos:column="5">static<pos:position pos:line="7" pos:column="11"/></specifier> <type><specifier pos:line="7" pos:column="12">const<pos:position pos:line="7" pos:column="17"/></specifier> <name pos:line="7" pos:column="18">char<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">delims<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><literal type="string" pos:line="7" pos:column="33">" \r\n\t;|,"<pos:position pos:line="7" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">ptr<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">key<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">value<pos:position pos:line="10" pos:column="16"/></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">vlen<pos:position pos:line="11" pos:column="13"/></name></decl>;<pos:position pos:line="11" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">klen<pos:position pos:line="12" pos:column="13"/></name></decl>;<pos:position pos:line="12" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">buf<pos:position pos:line="13" pos:column="14"/></name></decl>;<pos:position pos:line="13" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">databaseName<pos:position pos:line="14" pos:column="23"/></name> <init pos:line="14" pos:column="24">= <expr><name pos:line="14" pos:column="26">NULL<pos:position pos:line="14" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="31"/></decl_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* FIXME - this uses malloc */</comment>
    <comment type="block" pos:line="17" pos:column="5">/* FIXME - pass error message back to the caller in case of failure */</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">login<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <call><name pos:line="18" pos:column="13">dblogin<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">()<pos:position pos:line="18" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">login<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">==<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">NULL<pos:position pos:line="19" pos:column="22"/></name></expr>)<pos:position pos:line="19" pos:column="23"/></condition><then pos:line="19" pos:column="23"> <block pos:line="19" pos:column="24">{
        <return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">NULL<pos:position pos:line="20" pos:column="20"/></name></expr>;<pos:position pos:line="20" pos:column="21"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="22" pos:column="5">/* now set login properties */</comment>
    <for pos:line="23" pos:column="5">for <control pos:line="23" pos:column="9">(<init><expr><name pos:line="23" pos:column="10">ptr<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <call><name pos:line="23" pos:column="16">strchr<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">params<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="31">'='<pos:position pos:line="23" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></init> <condition><expr><name pos:line="23" pos:column="37">ptr<pos:position pos:line="23" pos:column="40"/></name></expr>;<pos:position pos:line="23" pos:column="41"/></condition> <incr><expr><name pos:line="23" pos:column="42">ptr<pos:position pos:line="23" pos:column="45"/></name> <operator pos:line="23" pos:column="46">=<pos:position pos:line="23" pos:column="47"/></operator> <call><name pos:line="23" pos:column="48">strchr<pos:position pos:line="23" pos:column="54"/></name><argument_list pos:line="23" pos:column="54">(<argument><expr><name pos:line="23" pos:column="55">ptr<pos:position pos:line="23" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="60">'='<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr></incr>)<pos:position pos:line="23" pos:column="65"/></control> <block pos:line="23" pos:column="66">{
        <comment type="block" pos:line="24" pos:column="9">/* don't dereference memory that may not belong to us */</comment>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">ptr<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">==<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="20">params<pos:position pos:line="25" pos:column="26"/></name></expr>)<pos:position pos:line="25" pos:column="27"/></condition><then pos:line="25" pos:column="27"> <block pos:line="25" pos:column="28">{
            <expr_stmt><expr><operator pos:line="26" pos:column="13">++<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">ptr<pos:position pos:line="26" pos:column="18"/></name></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>
            <continue pos:line="27" pos:column="13">continue;<pos:position pos:line="27" pos:column="22"/></continue>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>
        <for pos:line="29" pos:column="9">for <control pos:line="29" pos:column="13">(<init><expr><name pos:line="29" pos:column="14">key<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <name pos:line="29" pos:column="20">ptr<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">-<pos:position pos:line="29" pos:column="24"/></operator><literal type="number" pos:line="29" pos:column="24">1<pos:position pos:line="29" pos:column="25"/></literal></expr>;<pos:position pos:line="29" pos:column="26"/></init> <condition><expr><call><name pos:line="29" pos:column="27">apr_isspace<pos:position pos:line="29" pos:column="38"/></name><argument_list pos:line="29" pos:column="38">(<argument><expr><operator pos:line="29" pos:column="39">*<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="40">key<pos:position pos:line="29" pos:column="43"/></name></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="45"/></condition> <incr><expr><operator pos:line="29" pos:column="46">--<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="48">key<pos:position pos:line="29" pos:column="51"/></name></expr></incr>)<pos:position pos:line="29" pos:column="52"/></control><block type="pseudo"><empty_stmt pos:line="29" pos:column="52">;<pos:position pos:line="29" pos:column="53"/></empty_stmt></block></for>
        <expr_stmt><expr><name pos:line="30" pos:column="9">klen<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <literal type="number" pos:line="30" pos:column="16">0<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></expr_stmt>
        <while pos:line="31" pos:column="9">while <condition pos:line="31" pos:column="15">(<expr><call><name pos:line="31" pos:column="16">apr_isalpha<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><operator pos:line="31" pos:column="28">*<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="29">key<pos:position pos:line="31" pos:column="32"/></name></expr></argument>)<pos:position pos:line="31" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="34"/></condition> <block pos:line="31" pos:column="35">{
            <expr_stmt><expr><operator pos:line="32" pos:column="13">--<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">key<pos:position pos:line="32" pos:column="18"/></name></expr>;<pos:position pos:line="32" pos:column="19"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="33" pos:column="13">++<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">klen<pos:position pos:line="33" pos:column="19"/></name></expr>;<pos:position pos:line="33" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></while>
        <expr_stmt><expr><operator pos:line="35" pos:column="9">++<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">key<pos:position pos:line="35" pos:column="14"/></name></expr>;<pos:position pos:line="35" pos:column="15"/></expr_stmt>
        <for pos:line="36" pos:column="9">for <control pos:line="36" pos:column="13">(<init><expr><name pos:line="36" pos:column="14">value<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">ptr<pos:position pos:line="36" pos:column="25"/></name><operator pos:line="36" pos:column="25">+<pos:position pos:line="36" pos:column="26"/></operator><literal type="number" pos:line="36" pos:column="26">1<pos:position pos:line="36" pos:column="27"/></literal></expr>;<pos:position pos:line="36" pos:column="28"/></init> <condition><expr><call><name pos:line="36" pos:column="29">apr_isspace<pos:position pos:line="36" pos:column="40"/></name><argument_list pos:line="36" pos:column="40">(<argument><expr><operator pos:line="36" pos:column="41">*<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="42">value<pos:position pos:line="36" pos:column="47"/></name></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="49"/></condition> <incr><expr><operator pos:line="36" pos:column="50">++<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="52">value<pos:position pos:line="36" pos:column="57"/></name></expr></incr>)<pos:position pos:line="36" pos:column="58"/></control><block type="pseudo"><empty_stmt pos:line="36" pos:column="58">;<pos:position pos:line="36" pos:column="59"/></empty_stmt></block></for>

        <expr_stmt><expr><name pos:line="38" pos:column="9">vlen<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <call><name pos:line="38" pos:column="16">strcspn<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><name pos:line="38" pos:column="24">value<pos:position pos:line="38" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="31">delims<pos:position pos:line="38" pos:column="37"/></name></expr></argument>)<pos:position pos:line="38" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="39" pos:column="9">buf<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <call><name pos:line="39" pos:column="15">apr_pstrndup<pos:position pos:line="39" pos:column="27"/></name><argument_list pos:line="39" pos:column="27">(<argument><expr><name pos:line="39" pos:column="28">pool<pos:position pos:line="39" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="34">value<pos:position pos:line="39" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="41">vlen<pos:position pos:line="39" pos:column="45"/></name></expr></argument>)<pos:position pos:line="39" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="47"/></expr_stmt>        <comment type="block" pos:line="39" pos:column="55">/* NULL-terminated copy */</comment>

        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><call><name pos:line="41" pos:column="14">strncasecmp<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">key<pos:position pos:line="41" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="31">"username"<pos:position pos:line="41" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="43">klen<pos:position pos:line="41" pos:column="47"/></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="49"/></condition><then pos:line="41" pos:column="49"> <block pos:line="41" pos:column="50">{
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">DBSETLUSER<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><name pos:line="42" pos:column="24">login<pos:position pos:line="42" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="31">buf<pos:position pos:line="42" pos:column="34"/></name></expr></argument>)<pos:position pos:line="42" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></then>
        <elseif pos:line="44" pos:column="9">else <if pos:line="44" pos:column="14">if <condition pos:line="44" pos:column="17">(<expr><operator pos:line="44" pos:column="18">!<pos:position pos:line="44" pos:column="19"/></operator><call><name pos:line="44" pos:column="19">strncasecmp<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name pos:line="44" pos:column="31">key<pos:position pos:line="44" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="36">"password"<pos:position pos:line="44" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="48">klen<pos:position pos:line="44" pos:column="52"/></name></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="54"/></condition><then pos:line="44" pos:column="54"> <block pos:line="44" pos:column="55">{
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">DBSETLPWD<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><name pos:line="45" pos:column="23">login<pos:position pos:line="45" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="30">buf<pos:position pos:line="45" pos:column="33"/></name></expr></argument>)<pos:position pos:line="45" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="47" pos:column="9">else <if pos:line="47" pos:column="14">if <condition pos:line="47" pos:column="17">(<expr><operator pos:line="47" pos:column="18">!<pos:position pos:line="47" pos:column="19"/></operator><call><name pos:line="47" pos:column="19">strncasecmp<pos:position pos:line="47" pos:column="30"/></name><argument_list pos:line="47" pos:column="30">(<argument><expr><name pos:line="47" pos:column="31">key<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="36">"appname"<pos:position pos:line="47" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="47">klen<pos:position pos:line="47" pos:column="51"/></name></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="53"/></condition><then pos:line="47" pos:column="53"> <block pos:line="47" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">DBSETLAPP<pos:position pos:line="48" pos:column="22"/></name><argument_list pos:line="48" pos:column="22">(<argument><expr><name pos:line="48" pos:column="23">login<pos:position pos:line="48" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="30">buf<pos:position pos:line="48" pos:column="33"/></name></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="50" pos:column="9">else <if pos:line="50" pos:column="14">if <condition pos:line="50" pos:column="17">(<expr><operator pos:line="50" pos:column="18">!<pos:position pos:line="50" pos:column="19"/></operator><call><name pos:line="50" pos:column="19">strncasecmp<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">key<pos:position pos:line="50" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="36">"dbname"<pos:position pos:line="50" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="46">klen<pos:position pos:line="50" pos:column="50"/></name></expr></argument>)<pos:position pos:line="50" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="52"/></condition><then pos:line="50" pos:column="52"> <block pos:line="50" pos:column="53">{
            <expr_stmt><expr><name pos:line="51" pos:column="13">databaseName<pos:position pos:line="51" pos:column="25"/></name> <operator pos:line="51" pos:column="26">=<pos:position pos:line="51" pos:column="27"/></operator> <name pos:line="51" pos:column="28">buf<pos:position pos:line="51" pos:column="31"/></name></expr>;<pos:position pos:line="51" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="53" pos:column="9">else <if pos:line="53" pos:column="14">if <condition pos:line="53" pos:column="17">(<expr><operator pos:line="53" pos:column="18">!<pos:position pos:line="53" pos:column="19"/></operator><call><name pos:line="53" pos:column="19">strncasecmp<pos:position pos:line="53" pos:column="30"/></name><argument_list pos:line="53" pos:column="30">(<argument><expr><name pos:line="53" pos:column="31">key<pos:position pos:line="53" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="36">"host"<pos:position pos:line="53" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="44">klen<pos:position pos:line="53" pos:column="48"/></name></expr></argument>)<pos:position pos:line="53" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="50"/></condition><then pos:line="53" pos:column="50"> <block pos:line="53" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">DBSETLHOST<pos:position pos:line="54" pos:column="23"/></name><argument_list pos:line="54" pos:column="23">(<argument><expr><name pos:line="54" pos:column="24">login<pos:position pos:line="54" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="31">buf<pos:position pos:line="54" pos:column="34"/></name></expr></argument>)<pos:position pos:line="54" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="56" pos:column="9">else <if pos:line="56" pos:column="14">if <condition pos:line="56" pos:column="17">(<expr><operator pos:line="56" pos:column="18">!<pos:position pos:line="56" pos:column="19"/></operator><call><name pos:line="56" pos:column="19">strncasecmp<pos:position pos:line="56" pos:column="30"/></name><argument_list pos:line="56" pos:column="30">(<argument><expr><name pos:line="56" pos:column="31">key<pos:position pos:line="56" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="36">"charset"<pos:position pos:line="56" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="47">klen<pos:position pos:line="56" pos:column="51"/></name></expr></argument>)<pos:position pos:line="56" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="53"/></condition><then pos:line="56" pos:column="53"> <block pos:line="56" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">DBSETLCHARSET<pos:position pos:line="57" pos:column="26"/></name><argument_list pos:line="57" pos:column="26">(<argument><expr><name pos:line="57" pos:column="27">login<pos:position pos:line="57" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="34">buf<pos:position pos:line="57" pos:column="37"/></name></expr></argument>)<pos:position pos:line="57" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="59" pos:column="9">else <if pos:line="59" pos:column="14">if <condition pos:line="59" pos:column="17">(<expr><operator pos:line="59" pos:column="18">!<pos:position pos:line="59" pos:column="19"/></operator><call><name pos:line="59" pos:column="19">strncasecmp<pos:position pos:line="59" pos:column="30"/></name><argument_list pos:line="59" pos:column="30">(<argument><expr><name pos:line="59" pos:column="31">key<pos:position pos:line="59" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="36">"lang"<pos:position pos:line="59" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="44">klen<pos:position pos:line="59" pos:column="48"/></name></expr></argument>)<pos:position pos:line="59" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="50"/></condition><then pos:line="59" pos:column="50"> <block pos:line="59" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">DBSETLNATLANG<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><name pos:line="60" pos:column="27">login<pos:position pos:line="60" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="34">buf<pos:position pos:line="60" pos:column="37"/></name></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="62" pos:column="9">else <if pos:line="62" pos:column="14">if <condition pos:line="62" pos:column="17">(<expr><operator pos:line="62" pos:column="18">!<pos:position pos:line="62" pos:column="19"/></operator><call><name pos:line="62" pos:column="19">strncasecmp<pos:position pos:line="62" pos:column="30"/></name><argument_list pos:line="62" pos:column="30">(<argument><expr><name pos:line="62" pos:column="31">key<pos:position pos:line="62" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="36">"server"<pos:position pos:line="62" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="46">klen<pos:position pos:line="62" pos:column="50"/></name></expr></argument>)<pos:position pos:line="62" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="52"/></condition><then pos:line="62" pos:column="52"> <block pos:line="62" pos:column="53">{
            <expr_stmt><expr><name pos:line="63" pos:column="13">server<pos:position pos:line="63" pos:column="19"/></name> <operator pos:line="63" pos:column="20">=<pos:position pos:line="63" pos:column="21"/></operator> <name pos:line="63" pos:column="22">buf<pos:position pos:line="63" pos:column="25"/></name></expr>;<pos:position pos:line="63" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="64" pos:column="10"/></block></then></if></elseif>
        <else pos:line="65" pos:column="9">else <block pos:line="65" pos:column="14">{
            <comment type="block" pos:line="66" pos:column="13">/* unknown param */</comment>
        }<pos:position pos:line="67" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="68" pos:column="9">ptr<pos:position pos:line="68" pos:column="12"/></name> <operator pos:line="68" pos:column="13">=<pos:position pos:line="68" pos:column="14"/></operator> <name pos:line="68" pos:column="15">value<pos:position pos:line="68" pos:column="20"/></name><operator pos:line="68" pos:column="20">+<pos:position pos:line="68" pos:column="21"/></operator><name pos:line="68" pos:column="21">vlen<pos:position pos:line="68" pos:column="25"/></name></expr>;<pos:position pos:line="68" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="71" pos:column="5">process<pos:position pos:line="71" pos:column="12"/></name> <operator pos:line="71" pos:column="13">=<pos:position pos:line="71" pos:column="14"/></operator> <call><name pos:line="71" pos:column="15">dbopen<pos:position pos:line="71" pos:column="21"/></name><argument_list pos:line="71" pos:column="21">(<argument><expr><name pos:line="71" pos:column="22">login<pos:position pos:line="71" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="29">server<pos:position pos:line="71" pos:column="35"/></name></expr></argument>)<pos:position pos:line="71" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="73" pos:column="5">fprintf<pos:position pos:line="73" pos:column="12"/></name><argument_list pos:line="73" pos:column="12">(<argument><expr><name pos:line="73" pos:column="13">stderr<pos:position pos:line="73" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="21">"databaseName [%s]\n"<pos:position pos:line="73" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="44">databaseName<pos:position pos:line="73" pos:column="56"/></name></expr></argument>)<pos:position pos:line="73" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="58"/></expr_stmt>

    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><name pos:line="75" pos:column="9">databaseName<pos:position pos:line="75" pos:column="21"/></name> <operator pos:line="75" pos:column="22">!=<pos:position pos:line="75" pos:column="24"/></operator> <name pos:line="75" pos:column="25">NULL<pos:position pos:line="75" pos:column="29"/></name></expr>)<pos:position pos:line="75" pos:column="30"/></condition><then pos:line="75" pos:column="30">
    <block pos:line="76" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">dbuse<pos:position pos:line="77" pos:column="14"/></name><argument_list pos:line="77" pos:column="14">(<argument><expr><name pos:line="77" pos:column="15">process<pos:position pos:line="77" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="24">databaseName<pos:position pos:line="77" pos:column="36"/></name></expr></argument>)<pos:position pos:line="77" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if>
 
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">dbloginfree<pos:position pos:line="80" pos:column="16"/></name><argument_list pos:line="80" pos:column="16">(<argument><expr><name pos:line="80" pos:column="17">login<pos:position pos:line="80" pos:column="22"/></name></expr></argument>)<pos:position pos:line="80" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="24"/></expr_stmt>
    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><name pos:line="81" pos:column="9">process<pos:position pos:line="81" pos:column="16"/></name> <operator pos:line="81" pos:column="17">==<pos:position pos:line="81" pos:column="19"/></operator> <name pos:line="81" pos:column="20">NULL<pos:position pos:line="81" pos:column="24"/></name></expr>)<pos:position pos:line="81" pos:column="25"/></condition><then pos:line="81" pos:column="25"> <block pos:line="81" pos:column="26">{
        <return pos:line="82" pos:column="9">return <expr><name pos:line="82" pos:column="16">NULL<pos:position pos:line="82" pos:column="20"/></name></expr>;<pos:position pos:line="82" pos:column="21"/></return>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if>

    <return pos:line="85" pos:column="5">return <expr><name pos:line="85" pos:column="12">process<pos:position pos:line="85" pos:column="19"/></name></expr>;<pos:position pos:line="85" pos:column="20"/></return>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4479.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sendall<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">proxy_conn_rec<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">conn<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">buf<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">apr_size_t<pos:position pos:line="1" pos:column="69"/></name></type> <name pos:line="1" pos:column="70">length<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
                   <parameter><decl><type><name pos:line="2" pos:column="20">request_rec<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">r<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">written<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><name pos:line="7" pos:column="12">length<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">&gt;<pos:position pos:line="7" pos:column="23"/></operator> <literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr>)<pos:position pos:line="7" pos:column="23"/></condition> <block pos:line="7" pos:column="24">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">written<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">length<pos:position pos:line="8" pos:column="25"/></name></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">(<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">rv<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <call><name pos:line="9" pos:column="19">apr_socket_send<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name><name pos:line="9" pos:column="35">conn<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">sock<pos:position pos:line="9" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="47">buf<pos:position pos:line="9" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="52">&amp;<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="53">written<pos:position pos:line="9" pos:column="60"/></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call><operator pos:line="9" pos:column="61">)<pos:position pos:line="9" pos:column="62"/></operator> <operator pos:line="9" pos:column="63">!=<pos:position pos:line="9" pos:column="65"/></operator> <name pos:line="9" pos:column="66">APR_SUCCESS<pos:position pos:line="9" pos:column="77"/></name></expr>)<pos:position pos:line="9" pos:column="78"/></condition><then pos:line="9" pos:column="78"> <block pos:line="9" pos:column="79">{
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">ap_log_rerror<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">APLOG_MARK<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">APLOG_ERR<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="50">rv<pos:position pos:line="10" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="54">r<pos:position pos:line="10" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="11" pos:column="27">"proxy: "<pos:position pos:line="11" pos:column="36"/></literal> <name pos:line="11" pos:column="37">PROXY_FUNCTION<pos:position pos:line="11" pos:column="51"/></name> <literal type="string" pos:line="11" pos:column="52">": sending data to "<pos:position pos:line="11" pos:column="72"/></literal>
                          <literal type="string" pos:line="12" pos:column="27">"%s:%u failed"<pos:position pos:line="12" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="43">conn<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">-&gt;<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="49">hostname<pos:position pos:line="12" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="59">conn<pos:position pos:line="12" pos:column="63"/></name><operator pos:line="12" pos:column="63">-&gt;<pos:position pos:line="12" pos:column="68"/></operator><name pos:line="12" pos:column="65">port<pos:position pos:line="12" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt>
            <return pos:line="13" pos:column="13">return <expr><name pos:line="13" pos:column="20">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="13" pos:column="44"/></name></expr>;<pos:position pos:line="13" pos:column="45"/></return>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="16" pos:column="9">/* count for stats */</comment>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">conn<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">worker<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">s<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">transferred<pos:position pos:line="17" pos:column="37"/></name></name> <operator pos:line="17" pos:column="38">+=<pos:position pos:line="17" pos:column="40"/></operator> <name pos:line="17" pos:column="41">written<pos:position pos:line="17" pos:column="48"/></name></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">buf<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">+=<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">written<pos:position pos:line="18" pos:column="23"/></name></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">length<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">-=<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">written<pos:position pos:line="19" pos:column="26"/></name></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></while>

    <return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">OK<pos:position pos:line="22" pos:column="14"/></name></expr>;<pos:position pos:line="22" pos:column="15"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

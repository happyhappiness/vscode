<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4680.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ssl_check_public_cert<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">server_rec<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">s<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">apr_pool_t<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">ptemp<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">X509<pos:position pos:line="3" pos:column="39"/></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">cert<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="4" pos:column="35">int<pos:position pos:line="4" pos:column="38"/></name></type> <name pos:line="4" pos:column="39">type<pos:position pos:line="4" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="44"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">is_ca<pos:position pos:line="6" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="16">pathlen<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">cn<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">cert<pos:position pos:line="9" pos:column="14"/></name></expr>)<pos:position pos:line="9" pos:column="15"/></condition><then pos:line="9" pos:column="15"> <block pos:line="9" pos:column="16">{
        <return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="13" pos:column="5">/*
     * Some information about the certificate(s)
     */</comment>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">SSL_X509_isSGC<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">cert<pos:position pos:line="17" pos:column="28"/></name></expr></argument>)<pos:position pos:line="17" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="30"/></condition><then pos:line="17" pos:column="30"> <block pos:line="17" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">ap_log_error<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">APLOG_MARK<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">APLOG_INFO<pos:position pos:line="18" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="46">0<pos:position pos:line="18" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="49">s<pos:position pos:line="18" pos:column="50"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="19" pos:column="22">"%s server certificate enables "<pos:position pos:line="19" pos:column="54"/></literal>
                     <literal type="string" pos:line="20" pos:column="22">"Server Gated Cryptography (SGC)"<pos:position pos:line="20" pos:column="55"/></literal></expr></argument>,
                     <argument><expr><call><name pos:line="21" pos:column="22">ssl_asn1_keystr<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><name pos:line="21" pos:column="38">type<pos:position pos:line="21" pos:column="42"/></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><call><name pos:line="24" pos:column="9">SSL_X509_getBC<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">cert<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="30">&amp;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="31">is_ca<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="38">&amp;<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="39">pathlen<pos:position pos:line="24" pos:column="46"/></name></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="48"/></condition><then pos:line="24" pos:column="48"> <block pos:line="24" pos:column="49">{
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">is_ca<pos:position pos:line="25" pos:column="18"/></name></expr>)<pos:position pos:line="25" pos:column="19"/></condition><then pos:line="25" pos:column="19"> <block pos:line="25" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">ap_log_error<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">APLOG_MARK<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="38">APLOG_WARNING<pos:position pos:line="26" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="53">0<pos:position pos:line="26" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="56">s<pos:position pos:line="26" pos:column="57"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="27" pos:column="26">"%s server certificate is a CA certificate "<pos:position pos:line="27" pos:column="70"/></literal>
                         <literal type="string" pos:line="28" pos:column="26">"(BasicConstraints: CA == TRUE !?)"<pos:position pos:line="28" pos:column="61"/></literal></expr></argument>,
                         <argument><expr><call><name pos:line="29" pos:column="26">ssl_asn1_keystr<pos:position pos:line="29" pos:column="41"/></name><argument_list pos:line="29" pos:column="41">(<argument><expr><name pos:line="29" pos:column="42">type<pos:position pos:line="29" pos:column="46"/></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>

        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">pathlen<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">&gt;<pos:position pos:line="32" pos:column="25"/></operator> <literal type="number" pos:line="32" pos:column="23">0<pos:position pos:line="32" pos:column="24"/></literal></expr>)<pos:position pos:line="32" pos:column="25"/></condition><then pos:line="32" pos:column="25"> <block pos:line="32" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">ap_log_error<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">APLOG_MARK<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="38">APLOG_WARNING<pos:position pos:line="33" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="53">0<pos:position pos:line="33" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="56">s<pos:position pos:line="33" pos:column="57"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="34" pos:column="26">"%s server certificate is not a leaf certificate "<pos:position pos:line="34" pos:column="76"/></literal>
                         <literal type="string" pos:line="35" pos:column="26">"(BasicConstraints: pathlen == %d &gt; 0 !?)"<pos:position pos:line="35" pos:column="71"/></literal></expr></argument>,
                         <argument><expr><call><name pos:line="36" pos:column="26">ssl_asn1_keystr<pos:position pos:line="36" pos:column="41"/></name><argument_list pos:line="36" pos:column="41">(<argument><expr><name pos:line="36" pos:column="42">type<pos:position pos:line="36" pos:column="46"/></name></expr></argument>)<pos:position pos:line="36" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="36" pos:column="49">pathlen<pos:position pos:line="36" pos:column="56"/></name></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><call><name pos:line="40" pos:column="9">SSL_X509_getCN<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><name pos:line="40" pos:column="24">ptemp<pos:position pos:line="40" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="31">cert<pos:position pos:line="40" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="37">&amp;<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="38">cn<pos:position pos:line="40" pos:column="40"/></name></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="42"/></condition><then pos:line="40" pos:column="42"> <block pos:line="40" pos:column="43">{
        <decl_stmt><decl><type><name pos:line="41" pos:column="9">int<pos:position pos:line="41" pos:column="12"/></name></type> <name pos:line="41" pos:column="13">fnm_flags<pos:position pos:line="41" pos:column="22"/></name> <init pos:line="41" pos:column="23">= <expr><name pos:line="41" pos:column="25">APR_FNM_PERIOD<pos:position pos:line="41" pos:column="39"/></name><operator pos:line="41" pos:column="39">|<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="40">APR_FNM_CASE_BLIND<pos:position pos:line="41" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="41" pos:column="59"/></decl_stmt>

        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><call><name pos:line="43" pos:column="13">apr_fnmatch_test<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><name pos:line="43" pos:column="30">cn<pos:position pos:line="43" pos:column="32"/></name></expr></argument>)<pos:position pos:line="43" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="34"/></condition><then pos:line="43" pos:column="34"> <block pos:line="43" pos:column="35">{
            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><call><name pos:line="44" pos:column="17">apr_fnmatch<pos:position pos:line="44" pos:column="28"/></name><argument_list pos:line="44" pos:column="28">(<argument><expr><name pos:line="44" pos:column="29">cn<pos:position pos:line="44" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="33">s<pos:position pos:line="44" pos:column="34"/></name><operator pos:line="44" pos:column="34">-&gt;<pos:position pos:line="44" pos:column="39"/></operator><name pos:line="44" pos:column="36">server_hostname<pos:position pos:line="44" pos:column="51"/></name></name></expr></argument>,
                            <argument><expr><name pos:line="45" pos:column="29">fnm_flags<pos:position pos:line="45" pos:column="38"/></name></expr></argument>)<pos:position pos:line="45" pos:column="39"/></argument_list></call> <operator pos:line="45" pos:column="40">==<pos:position pos:line="45" pos:column="42"/></operator> <name pos:line="45" pos:column="43">APR_FNM_NOMATCH<pos:position pos:line="45" pos:column="58"/></name></expr>)<pos:position pos:line="45" pos:column="59"/></condition><then pos:line="45" pos:column="59"> <block pos:line="45" pos:column="60">{
                <expr_stmt><expr><call><name pos:line="46" pos:column="17">ap_log_error<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><name pos:line="46" pos:column="30">APLOG_MARK<pos:position pos:line="46" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="42">APLOG_WARNING<pos:position pos:line="46" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="57">0<pos:position pos:line="46" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="60">s<pos:position pos:line="46" pos:column="61"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="47" pos:column="30">"%s server certificate wildcard CommonName "<pos:position pos:line="47" pos:column="74"/></literal>
                             <literal type="string" pos:line="48" pos:column="30">"(CN) `%s' does NOT match server name!?"<pos:position pos:line="48" pos:column="70"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="49" pos:column="30">ssl_asn1_keystr<pos:position pos:line="49" pos:column="45"/></name><argument_list pos:line="49" pos:column="45">(<argument><expr><name pos:line="49" pos:column="46">type<pos:position pos:line="49" pos:column="50"/></name></expr></argument>)<pos:position pos:line="49" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="49" pos:column="53">cn<pos:position pos:line="49" pos:column="55"/></name></expr></argument>)<pos:position pos:line="49" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="57"/></expr_stmt>
            }<pos:position pos:line="50" pos:column="14"/></block></then></if>
        }<pos:position pos:line="51" pos:column="10"/></block></then>
        <elseif pos:line="52" pos:column="9">else <if pos:line="52" pos:column="14">if <condition pos:line="52" pos:column="17">(<expr><call><name pos:line="52" pos:column="18">strNE<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument><expr><name><name pos:line="52" pos:column="24">s<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">-&gt;<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="27">server_hostname<pos:position pos:line="52" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="44">cn<pos:position pos:line="52" pos:column="46"/></name></expr></argument>)<pos:position pos:line="52" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="48"/></condition><then pos:line="52" pos:column="48"> <block pos:line="52" pos:column="49">{
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">ap_log_error<pos:position pos:line="53" pos:column="25"/></name><argument_list pos:line="53" pos:column="25">(<argument><expr><name pos:line="53" pos:column="26">APLOG_MARK<pos:position pos:line="53" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="38">APLOG_WARNING<pos:position pos:line="53" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="53">0<pos:position pos:line="53" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="56">s<pos:position pos:line="53" pos:column="57"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="54" pos:column="26">"%s server certificate CommonName (CN) `%s' "<pos:position pos:line="54" pos:column="71"/></literal>
                         <literal type="string" pos:line="55" pos:column="26">"does NOT match server name!?"<pos:position pos:line="55" pos:column="56"/></literal></expr></argument>,
                         <argument><expr><call><name pos:line="56" pos:column="26">ssl_asn1_keystr<pos:position pos:line="56" pos:column="41"/></name><argument_list pos:line="56" pos:column="41">(<argument><expr><name pos:line="56" pos:column="42">type<pos:position pos:line="56" pos:column="46"/></name></expr></argument>)<pos:position pos:line="56" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="56" pos:column="49">cn<pos:position pos:line="56" pos:column="51"/></name></expr></argument>)<pos:position pos:line="56" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="57" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

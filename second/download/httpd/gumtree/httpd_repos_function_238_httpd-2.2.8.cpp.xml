<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_238_httpd-2.2.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">dav_error<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">dav_fs_delete_walker<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">dav_walk_resource<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">wres<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">int<pos:position pos:line="1" pos:column="69"/></name></type> <name pos:line="1" pos:column="70">calltype<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dav_resource_private<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">info<pos:position pos:line="3" pos:column="31"/></name> <init pos:line="3" pos:column="32">= <expr><name><name pos:line="3" pos:column="34">wres<pos:position pos:line="3" pos:column="38"/></name><operator pos:line="3" pos:column="38">-&gt;<pos:position pos:line="3" pos:column="43"/></operator><name pos:line="3" pos:column="40">resource<pos:position pos:line="3" pos:column="48"/></name><operator pos:line="3" pos:column="48">-&gt;<pos:position pos:line="3" pos:column="53"/></operator><name pos:line="3" pos:column="50">info<pos:position pos:line="3" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="55"/></decl_stmt>

    <comment type="block" pos:line="5" pos:column="5">/* do not attempt to remove a null resource,
     * or a collection with children
     */</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">wres<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">resource<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">exists<pos:position pos:line="8" pos:column="31"/></name></name> <operator pos:line="8" pos:column="32">&amp;&amp;<pos:position pos:line="8" pos:column="42"/></operator>
        <operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><operator pos:line="9" pos:column="10">!<pos:position pos:line="9" pos:column="11"/></operator><name><name pos:line="9" pos:column="11">wres<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">resource<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">collection<pos:position pos:line="9" pos:column="37"/></name></name> <operator pos:line="9" pos:column="38">||<pos:position pos:line="9" pos:column="40"/></operator> <name pos:line="9" pos:column="41">calltype<pos:position pos:line="9" pos:column="49"/></name> <operator pos:line="9" pos:column="50">==<pos:position pos:line="9" pos:column="52"/></operator> <name pos:line="9" pos:column="53">DAV_CALLTYPE_POSTFIX<pos:position pos:line="9" pos:column="73"/></name><operator pos:line="9" pos:column="73">)<pos:position pos:line="9" pos:column="74"/></operator></expr>)<pos:position pos:line="9" pos:column="75"/></condition><then pos:line="9" pos:column="75"> <block pos:line="9" pos:column="76">{
        <comment type="block" pos:line="10" pos:column="9">/* try to remove the resource */</comment>
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">apr_status_t<pos:position pos:line="11" pos:column="21"/></name></type> <name pos:line="11" pos:column="22">result<pos:position pos:line="11" pos:column="28"/></name></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>

        <expr_stmt><expr><name pos:line="13" pos:column="9">result<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <ternary><condition><expr><name><name pos:line="13" pos:column="18">wres<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">resource<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">-&gt;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="34">collection<pos:position pos:line="13" pos:column="44"/></name></name></expr>
            ?<pos:position pos:line="14" pos:column="14"/></condition><then pos:line="14" pos:column="14"> <expr><call><name pos:line="14" pos:column="15">apr_dir_remove<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name><name pos:line="14" pos:column="30">info<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">-&gt;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="36">pathname<pos:position pos:line="14" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="46">wres<pos:position pos:line="14" pos:column="50"/></name><operator pos:line="14" pos:column="50">-&gt;<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="52">pool<pos:position pos:line="14" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call></expr>
            <pos:position pos:line="15" pos:column="13"/></then><else pos:line="15" pos:column="13">: <expr><call><name pos:line="15" pos:column="15">apr_file_remove<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name><name pos:line="15" pos:column="31">info<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">pathname<pos:position pos:line="15" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="47">wres<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">pool<pos:position pos:line="15" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="59"/></expr_stmt>

        <comment type="block" pos:line="17" pos:column="9">/*
        ** If an error occurred, then add it to multistatus response.
        ** Note that we add it for the root resource, too. It is quite
        ** possible to delete the whole darn tree, yet fail on the root.
        **
        ** (also: remember we are deleting via a postfix traversal)
        */</comment>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">result<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">!=<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">APR_SUCCESS<pos:position pos:line="24" pos:column="34"/></name></expr>)<pos:position pos:line="24" pos:column="35"/></condition><then pos:line="24" pos:column="35"> <block pos:line="24" pos:column="36">{
            <comment type="block" pos:line="25" pos:column="13">/* ### assume there is a permissions problem */</comment>

            <comment type="block" pos:line="27" pos:column="13">/* ### use errno to generate DAV:responsedescription? */</comment>
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">dav_add_response<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">wres<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="36">HTTP_FORBIDDEN<pos:position pos:line="28" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="52">NULL<pos:position pos:line="28" pos:column="56"/></name></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <return pos:line="32" pos:column="5">return <expr><name pos:line="32" pos:column="12">NULL<pos:position pos:line="32" pos:column="16"/></name></expr>;<pos:position pos:line="32" pos:column="17"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

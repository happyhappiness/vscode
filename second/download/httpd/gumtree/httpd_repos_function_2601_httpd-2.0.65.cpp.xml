<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2601_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">long<pos:position pos:line="1" pos:column="21"/></name> <name pos:line="1" pos:column="22">FASTCALL<pos:position pos:line="1" pos:column="30"/></name></type>
<name pos:line="2" pos:column="1">hash<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">KEY<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">s<pos:position pos:line="2" pos:column="11"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="12"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">long<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">h<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><literal type="number" pos:line="4" pos:column="21">0<pos:position pos:line="4" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <while pos:line="5" pos:column="3">while <condition pos:line="5" pos:column="9">(<expr><operator pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">s<pos:position pos:line="5" pos:column="12"/></name></expr>)<pos:position pos:line="5" pos:column="13"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="5">h<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator> <call><name pos:line="6" pos:column="9">CHAR_HASH<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><name pos:line="6" pos:column="19">h<pos:position pos:line="6" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">s<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">++<pos:position pos:line="6" pos:column="26"/></operator></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt></block></while>
  <return pos:line="7" pos:column="3">return <expr><name pos:line="7" pos:column="10">h<pos:position pos:line="7" pos:column="11"/></name></expr>;<pos:position pos:line="7" pos:column="12"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

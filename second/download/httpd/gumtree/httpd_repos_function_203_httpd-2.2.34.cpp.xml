<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_203_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_datum_t<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">dav_fs_build_key<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">apr_pool_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">p<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
                                    <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">dav_resource<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">resource<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">file<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><call><name pos:line="4" pos:column="24">dav_fs_pathname<pos:position pos:line="4" pos:column="39"/></name><argument_list pos:line="4" pos:column="39">(<argument><expr><name pos:line="4" pos:column="40">resource<pos:position pos:line="4" pos:column="48"/></name></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_datum_t<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">key<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_finfo_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">finfo<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_status_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">rv<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* ### use lstat() ?? */</comment>
    <comment type="block" pos:line="10" pos:column="5">/*
     * XXX: What for platforms with no IDENT (dev/inode)?
     */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">rv<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <call><name pos:line="13" pos:column="10">apr_stat<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><operator pos:line="13" pos:column="19">&amp;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="20">finfo<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="27">file<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">APR_FINFO_IDENT<pos:position pos:line="13" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="50">p<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">rv<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">==<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">APR_SUCCESS<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">||<pos:position pos:line="14" pos:column="30"/></operator> <name pos:line="14" pos:column="31">rv<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">==<pos:position pos:line="14" pos:column="36"/></operator> <name pos:line="14" pos:column="37">APR_INCOMPLETE<pos:position pos:line="14" pos:column="51"/></name><operator pos:line="14" pos:column="51">)<pos:position pos:line="14" pos:column="52"/></operator>
        <operator pos:line="15" pos:column="9">&amp;&amp;<pos:position pos:line="15" pos:column="19"/></operator> <operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><name><name pos:line="15" pos:column="14">finfo<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">.<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">valid<pos:position pos:line="15" pos:column="25"/></name></name> <operator pos:line="15" pos:column="26">&amp;<pos:position pos:line="15" pos:column="31"/></operator> <name pos:line="15" pos:column="28">APR_FINFO_IDENT<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">)<pos:position pos:line="15" pos:column="44"/></operator> <operator pos:line="15" pos:column="45">==<pos:position pos:line="15" pos:column="47"/></operator> <name pos:line="15" pos:column="48">APR_FINFO_IDENT<pos:position pos:line="15" pos:column="63"/></name><operator pos:line="15" pos:column="63">)<pos:position pos:line="15" pos:column="64"/></operator></expr>)<pos:position pos:line="15" pos:column="65"/></condition><then pos:line="15" pos:column="65">
    <block pos:line="16" pos:column="5">{
        <comment type="block" pos:line="17" pos:column="9">/* ### can we use a buffer for this? */</comment>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">key<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">.<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">dsize<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <literal type="number" pos:line="18" pos:column="21">1<pos:position pos:line="18" pos:column="22"/></literal> <operator pos:line="18" pos:column="23">+<pos:position pos:line="18" pos:column="24"/></operator> <sizeof pos:line="18" pos:column="25">sizeof<argument_list pos:line="18" pos:column="31">(<argument><expr><name><name pos:line="18" pos:column="32">finfo<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">.<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="38">inode<pos:position pos:line="18" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></sizeof> <operator pos:line="18" pos:column="45">+<pos:position pos:line="18" pos:column="46"/></operator> <sizeof pos:line="18" pos:column="47">sizeof<argument_list pos:line="18" pos:column="53">(<argument><expr><name><name pos:line="18" pos:column="54">finfo<pos:position pos:line="18" pos:column="59"/></name><operator pos:line="18" pos:column="59">.<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="60">device<pos:position pos:line="18" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="67"/></argument_list></sizeof></expr>;<pos:position pos:line="18" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">key<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">.<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">dptr<pos:position pos:line="19" pos:column="17"/></name></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <call><name pos:line="19" pos:column="20">apr_palloc<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">p<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="34">key<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">.<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="38">dsize<pos:position pos:line="19" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></operator><name><name pos:line="20" pos:column="10">key<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">.<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">dptr<pos:position pos:line="20" pos:column="18"/></name></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="21">DAV_TYPE_INODE<pos:position pos:line="20" pos:column="35"/></name></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">memcpy<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name><name pos:line="21" pos:column="16">key<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">.<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="20">dptr<pos:position pos:line="21" pos:column="24"/></name></name> <operator pos:line="21" pos:column="25">+<pos:position pos:line="21" pos:column="26"/></operator> <literal type="number" pos:line="21" pos:column="27">1<pos:position pos:line="21" pos:column="28"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="30">&amp;<pos:position pos:line="21" pos:column="35"/></operator><name><name pos:line="21" pos:column="31">finfo<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">.<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="37">inode<pos:position pos:line="21" pos:column="42"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="44">sizeof<argument_list pos:line="21" pos:column="50">(<argument><expr><name><name pos:line="21" pos:column="51">finfo<pos:position pos:line="21" pos:column="56"/></name><operator pos:line="21" pos:column="56">.<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="57">inode<pos:position pos:line="21" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">memcpy<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><name><name pos:line="22" pos:column="16">key<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">.<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">dptr<pos:position pos:line="22" pos:column="24"/></name></name> <operator pos:line="22" pos:column="25">+<pos:position pos:line="22" pos:column="26"/></operator> <literal type="number" pos:line="22" pos:column="27">1<pos:position pos:line="22" pos:column="28"/></literal> <operator pos:line="22" pos:column="29">+<pos:position pos:line="22" pos:column="30"/></operator> <sizeof pos:line="22" pos:column="31">sizeof<argument_list pos:line="22" pos:column="37">(<argument><expr><name><name pos:line="22" pos:column="38">finfo<pos:position pos:line="22" pos:column="43"/></name><operator pos:line="22" pos:column="43">.<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="44">inode<pos:position pos:line="22" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="22" pos:column="52">&amp;<pos:position pos:line="22" pos:column="57"/></operator><name><name pos:line="22" pos:column="53">finfo<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">.<pos:position pos:line="22" pos:column="59"/></operator><name pos:line="22" pos:column="59">device<pos:position pos:line="22" pos:column="65"/></name></name></expr></argument>,
               <argument><expr><sizeof pos:line="23" pos:column="16">sizeof<argument_list pos:line="23" pos:column="22">(<argument><expr><name><name pos:line="23" pos:column="23">finfo<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">.<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="29">device<pos:position pos:line="23" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>

        <return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">key<pos:position pos:line="25" pos:column="19"/></name></expr>;<pos:position pos:line="25" pos:column="20"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <return pos:line="28" pos:column="5">return <expr><call><name pos:line="28" pos:column="12">dav_fs_build_fname_key<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">p<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="38">file<pos:position pos:line="28" pos:column="42"/></name></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="44"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

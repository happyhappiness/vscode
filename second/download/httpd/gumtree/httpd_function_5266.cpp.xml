<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5266.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">send_listeners_to_child<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">apr_pool_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">p<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">DWORD<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">dwProcessId<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="2" pos:column="36">apr_file_t<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">child_in<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">lcnt<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">ap_listen_rec<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">lr<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">LPWSAPROTOCOL_INFO<pos:position pos:line="7" pos:column="23"/></name></type>  <name pos:line="7" pos:column="25">lpWSAProtocolInfo<pos:position pos:line="7" pos:column="42"/></name></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">BytesWritten<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* Run the chain of open sockets. For each socket, duplicate it
     * for the target process then send the WSAPROTOCOL_INFO
     * (returned by dup socket) to the child.
     */</comment>
    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><expr><name pos:line="14" pos:column="10">lr<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <name pos:line="14" pos:column="15">ap_listeners<pos:position pos:line="14" pos:column="27"/></name></expr>;<pos:position pos:line="14" pos:column="28"/></init> <condition><expr><name pos:line="14" pos:column="29">lr<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></condition> <incr><expr><name pos:line="14" pos:column="33">lr<pos:position pos:line="14" pos:column="35"/></name> <operator pos:line="14" pos:column="36">=<pos:position pos:line="14" pos:column="37"/></operator> <name><name pos:line="14" pos:column="38">lr<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">-&gt;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="42">next<pos:position pos:line="14" pos:column="46"/></name></name></expr><operator pos:line="14" pos:column="46">,<pos:position pos:line="14" pos:column="47"/></operator> <expr><operator pos:line="14" pos:column="48">++<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="50">lcnt<pos:position pos:line="14" pos:column="54"/></name></expr></incr>)<pos:position pos:line="14" pos:column="55"/></control> <block pos:line="14" pos:column="56">{
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">apr_os_sock_t<pos:position pos:line="15" pos:column="22"/></name></type> <name pos:line="15" pos:column="23">nsd<pos:position pos:line="15" pos:column="26"/></name></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">lpWSAProtocolInfo<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">=<pos:position pos:line="16" pos:column="28"/></operator> <call><name pos:line="16" pos:column="29">apr_pcalloc<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">(<argument><expr><name pos:line="16" pos:column="41">p<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="44">sizeof<argument_list pos:line="16" pos:column="50">(<argument><expr><name pos:line="16" pos:column="51">WSAPROTOCOL_INFO<pos:position pos:line="16" pos:column="67"/></name></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">apr_os_sock_get<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><operator pos:line="17" pos:column="25">&amp;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="26">nsd<pos:position pos:line="17" pos:column="29"/></name></expr></argument>,<argument><expr><name><name pos:line="17" pos:column="30">lr<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">sd<pos:position pos:line="17" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">ap_log_error<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">APLOG_MARK<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">APLOG_INFO<pos:position pos:line="18" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="46">APR_SUCCESS<pos:position pos:line="18" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="59">ap_server_conf<pos:position pos:line="18" pos:column="73"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="19" pos:column="22">"Parent: Duplicating socket %d and sending it to child process %d"<pos:position pos:line="19" pos:column="88"/></literal></expr></argument>,
                     <argument><expr><name pos:line="20" pos:column="22">nsd<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="27">dwProcessId<pos:position pos:line="20" pos:column="38"/></name></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">WSADuplicateSocket<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">nsd<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">dwProcessId<pos:position pos:line="21" pos:column="48"/></name></expr></argument>,
                               <argument><expr><name pos:line="22" pos:column="32">lpWSAProtocolInfo<pos:position pos:line="22" pos:column="49"/></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call> <operator pos:line="22" pos:column="51">==<pos:position pos:line="22" pos:column="53"/></operator> <name pos:line="22" pos:column="54">SOCKET_ERROR<pos:position pos:line="22" pos:column="66"/></name></expr>)<pos:position pos:line="22" pos:column="67"/></condition><then pos:line="22" pos:column="67"> <block pos:line="22" pos:column="68">{
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">ap_log_error<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">APLOG_MARK<pos:position pos:line="23" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="38">APLOG_CRIT<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="50">apr_get_netos_error<pos:position pos:line="23" pos:column="69"/></name><argument_list pos:line="23" pos:column="69">()<pos:position pos:line="23" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="23" pos:column="73">ap_server_conf<pos:position pos:line="23" pos:column="87"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="24" pos:column="26">"Parent: WSADuplicateSocket failed for socket %d. Check the FAQ."<pos:position pos:line="24" pos:column="91"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="93">lr<pos:position pos:line="24" pos:column="95"/></name><operator pos:line="24" pos:column="95">-&gt;<pos:position pos:line="24" pos:column="100"/></operator><name pos:line="24" pos:column="97">sd<pos:position pos:line="24" pos:column="99"/></name></name></expr></argument> )<pos:position pos:line="24" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="102"/></expr_stmt>
            <return pos:line="25" pos:column="13">return <expr><operator pos:line="25" pos:column="20">-<pos:position pos:line="25" pos:column="21"/></operator><literal type="number" pos:line="25" pos:column="21">1<pos:position pos:line="25" pos:column="22"/></literal></expr>;<pos:position pos:line="25" pos:column="23"/></return>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">rv<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <call><name pos:line="28" pos:column="19">apr_file_write_full<pos:position pos:line="28" pos:column="38"/></name><argument_list pos:line="28" pos:column="38">(<argument><expr><name pos:line="28" pos:column="39">child_in<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="49">lpWSAProtocolInfo<pos:position pos:line="28" pos:column="66"/></name></expr></argument>,
                                      <argument><expr><sizeof pos:line="29" pos:column="39">sizeof<argument_list pos:line="29" pos:column="45">(<argument><expr><name pos:line="29" pos:column="46">WSAPROTOCOL_INFO<pos:position pos:line="29" pos:column="62"/></name></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="29" pos:column="65">&amp;<pos:position pos:line="29" pos:column="70"/></operator><name pos:line="29" pos:column="66">BytesWritten<pos:position pos:line="29" pos:column="78"/></name></expr></argument>)<pos:position pos:line="29" pos:column="79"/></argument_list></call><operator pos:line="29" pos:column="79">)<pos:position pos:line="29" pos:column="80"/></operator>
                <operator pos:line="30" pos:column="17">!=<pos:position pos:line="30" pos:column="19"/></operator> <name pos:line="30" pos:column="20">APR_SUCCESS<pos:position pos:line="30" pos:column="31"/></name></expr>)<pos:position pos:line="30" pos:column="32"/></condition><then pos:line="30" pos:column="32"> <block pos:line="30" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">ap_log_error<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">APLOG_MARK<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">APLOG_CRIT<pos:position pos:line="31" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="50">rv<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="54">ap_server_conf<pos:position pos:line="31" pos:column="68"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="32" pos:column="26">"Parent: Unable to write duplicated socket %d to the child."<pos:position pos:line="32" pos:column="86"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="88">lr<pos:position pos:line="32" pos:column="90"/></name><operator pos:line="32" pos:column="90">-&gt;<pos:position pos:line="32" pos:column="95"/></operator><name pos:line="32" pos:column="92">sd<pos:position pos:line="32" pos:column="94"/></name></name></expr></argument> )<pos:position pos:line="32" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="97"/></expr_stmt>
            <return pos:line="33" pos:column="13">return <expr><operator pos:line="33" pos:column="20">-<pos:position pos:line="33" pos:column="21"/></operator><literal type="number" pos:line="33" pos:column="21">1<pos:position pos:line="33" pos:column="22"/></literal></expr>;<pos:position pos:line="33" pos:column="23"/></return>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
    }<pos:position pos:line="35" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="37" pos:column="5">ap_log_error<pos:position pos:line="37" pos:column="17"/></name><argument_list pos:line="37" pos:column="17">(<argument><expr><name pos:line="37" pos:column="18">APLOG_MARK<pos:position pos:line="37" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="30">APLOG_DEBUG<pos:position pos:line="37" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="43">0<pos:position pos:line="37" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="46">ap_server_conf<pos:position pos:line="37" pos:column="60"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="38" pos:column="18">"Parent: Sent %d listeners to child %d"<pos:position pos:line="38" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="59">lcnt<pos:position pos:line="38" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="65">dwProcessId<pos:position pos:line="38" pos:column="76"/></name></expr></argument>)<pos:position pos:line="38" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="78"/></expr_stmt>
    <return pos:line="39" pos:column="5">return <expr><literal type="number" pos:line="39" pos:column="12">0<pos:position pos:line="39" pos:column="13"/></literal></expr>;<pos:position pos:line="39" pos:column="14"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

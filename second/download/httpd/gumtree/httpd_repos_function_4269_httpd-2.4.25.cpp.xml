<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_4269_httpd-2.4.25.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">set_service_description<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">void<pos:position pos:line="1" pos:column="41"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">full_description<pos:position pos:line="3" pos:column="33"/></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SC_HANDLE<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">schSCManager<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* Nothing to do if we are a console
     */</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">mpm_service_name<pos:position pos:line="8" pos:column="26"/></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27">
        <block type="pseudo"><return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="11" pos:column="5">/* Time to fix up the description, upon each successful restart
     */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">full_description<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <call><name pos:line="13" pos:column="24">ap_get_server_description<pos:position pos:line="13" pos:column="49"/></name><argument_list pos:line="13" pos:column="49">()<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">ChangeServiceConfig2<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">)<pos:position pos:line="15" pos:column="31"/></operator> <operator pos:line="15" pos:column="32">&amp;&amp;<pos:position pos:line="15" pos:column="42"/></operator>
        <operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">schSCManager<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <call><name pos:line="16" pos:column="25">OpenSCManager<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">NULL<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">NULL<pos:position pos:line="16" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="51">SC_MANAGER_CONNECT<pos:position pos:line="16" pos:column="69"/></name></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call><operator pos:line="16" pos:column="70">)<pos:position pos:line="16" pos:column="71"/></operator></expr>)<pos:position pos:line="16" pos:column="72"/></condition><then pos:line="16" pos:column="72">
    <block pos:line="17" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">SC_HANDLE<pos:position pos:line="18" pos:column="18"/></name></type> <name pos:line="18" pos:column="19">schService<pos:position pos:line="18" pos:column="29"/></name></decl>;<pos:position pos:line="18" pos:column="30"/></decl_stmt>

<cpp:if pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">if<pos:position pos:line="20" pos:column="4"/></cpp:directive> <expr><name pos:line="20" pos:column="5">APR_HAS_UNICODE_FS<pos:position pos:line="20" pos:column="23"/></name></expr></cpp:if>
        <macro><name pos:line="21" pos:column="9">IF_WIN_OS_IS_UNICODE<pos:position pos:line="21" pos:column="29"/></name></macro>
        <block pos:line="22" pos:column="9">{
            <expr_stmt><expr><name pos:line="23" pos:column="13">schService<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">=<pos:position pos:line="23" pos:column="25"/></operator> <call><name pos:line="23" pos:column="26">OpenServiceW<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><name pos:line="23" pos:column="39">schSCManager<pos:position pos:line="23" pos:column="51"/></name></expr></argument>,
                                      <argument><expr><operator pos:line="24" pos:column="39">(<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="40">LPCWSTR<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">)<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="48">mpm_service_name_w<pos:position pos:line="24" pos:column="66"/></name></expr></argument>,
                                      <argument><expr><name pos:line="25" pos:column="39">SERVICE_CHANGE_CONFIG<pos:position pos:line="25" pos:column="60"/></name></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="27" pos:column="8">/* APR_HAS_UNICODE_FS */</comment>
<cpp:if pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">if<pos:position pos:line="28" pos:column="4"/></cpp:directive> <expr><name pos:line="28" pos:column="5">APR_HAS_ANSI_FS<pos:position pos:line="28" pos:column="20"/></name></expr></cpp:if>
        <macro><name pos:line="29" pos:column="9">ELSE_WIN_OS_IS_ANSI<pos:position pos:line="29" pos:column="28"/></name></macro>
        <block pos:line="30" pos:column="9">{
            <expr_stmt><expr><name pos:line="31" pos:column="13">schService<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <call><name pos:line="31" pos:column="26">OpenService<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name pos:line="31" pos:column="38">schSCManager<pos:position pos:line="31" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="52">mpm_service_name<pos:position pos:line="31" pos:column="68"/></name></expr></argument>,
                                     <argument><expr><name pos:line="32" pos:column="38">SERVICE_CHANGE_CONFIG<pos:position pos:line="32" pos:column="59"/></name></expr></argument>)<pos:position pos:line="32" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">schService<pos:position pos:line="35" pos:column="23"/></name></expr>)<pos:position pos:line="35" pos:column="24"/></condition><then pos:line="35" pos:column="24"> <block pos:line="35" pos:column="25">{
            <comment type="block" pos:line="36" pos:column="13">/* Cast is necessary, ChangeServiceConfig2 handles multiple
             * object types, some volatile, some not.
             */</comment>
<cpp:if pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">if<pos:position pos:line="39" pos:column="4"/></cpp:directive> <expr><name pos:line="39" pos:column="5">APR_HAS_UNICODE_FS<pos:position pos:line="39" pos:column="23"/></name></expr></cpp:if>
            <macro><name pos:line="40" pos:column="13">IF_WIN_OS_IS_UNICODE<pos:position pos:line="40" pos:column="33"/></name></macro>
            <block pos:line="41" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="42" pos:column="17">apr_size_t<pos:position pos:line="42" pos:column="27"/></name></type> <name pos:line="42" pos:column="28">slen<pos:position pos:line="42" pos:column="32"/></name> <init pos:line="42" pos:column="33">= <expr><call><name pos:line="42" pos:column="35">strlen<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><name pos:line="42" pos:column="42">full_description<pos:position pos:line="42" pos:column="58"/></name></expr></argument>)<pos:position pos:line="42" pos:column="59"/></argument_list></call> <operator pos:line="42" pos:column="60">+<pos:position pos:line="42" pos:column="61"/></operator> <literal type="number" pos:line="42" pos:column="62">1<pos:position pos:line="42" pos:column="63"/></literal></expr></init></decl>;<pos:position pos:line="42" pos:column="64"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="43" pos:column="17">apr_size_t<pos:position pos:line="43" pos:column="27"/></name></type> <name pos:line="43" pos:column="28">wslen<pos:position pos:line="43" pos:column="33"/></name> <init pos:line="43" pos:column="34">= <expr><name pos:line="43" pos:column="36">slen<pos:position pos:line="43" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="43" pos:column="41"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="44" pos:column="17">apr_wchar_t<pos:position pos:line="44" pos:column="28"/></name> <modifier pos:line="44" pos:column="29">*<pos:position pos:line="44" pos:column="30"/></modifier></type><name pos:line="44" pos:column="30">full_description_w<pos:position pos:line="44" pos:column="48"/></name> <init pos:line="44" pos:column="49">= 
                    <expr><operator pos:line="45" pos:column="21">(<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="22">apr_wchar_t<pos:position pos:line="45" pos:column="33"/></name><operator pos:line="45" pos:column="33">*<pos:position pos:line="45" pos:column="34"/></operator><operator pos:line="45" pos:column="34">)<pos:position pos:line="45" pos:column="35"/></operator><call><name pos:line="45" pos:column="35">apr_palloc<pos:position pos:line="45" pos:column="45"/></name><argument_list pos:line="45" pos:column="45">(<argument><expr><name pos:line="45" pos:column="46">pconf<pos:position pos:line="45" pos:column="51"/></name></expr></argument>, 
                                             <argument><expr><name pos:line="46" pos:column="46">wslen<pos:position pos:line="46" pos:column="51"/></name> <operator pos:line="46" pos:column="52">*<pos:position pos:line="46" pos:column="53"/></operator> <sizeof pos:line="46" pos:column="54">sizeof<argument_list pos:line="46" pos:column="60">(<argument><expr><name pos:line="46" pos:column="61">apr_wchar_t<pos:position pos:line="46" pos:column="72"/></name></expr></argument>)<pos:position pos:line="46" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="75"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="47" pos:column="17">apr_status_t<pos:position pos:line="47" pos:column="29"/></name></type> <name pos:line="47" pos:column="30">rv<pos:position pos:line="47" pos:column="32"/></name> <init pos:line="47" pos:column="33">= <expr><call><name pos:line="47" pos:column="35">apr_conv_utf8_to_ucs2<pos:position pos:line="47" pos:column="56"/></name><argument_list pos:line="47" pos:column="56">(<argument><expr><name pos:line="47" pos:column="57">full_description<pos:position pos:line="47" pos:column="73"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="75">&amp;<pos:position pos:line="47" pos:column="80"/></operator><name pos:line="47" pos:column="76">slen<pos:position pos:line="47" pos:column="80"/></name></expr></argument>,
                                                        <argument><expr><name pos:line="48" pos:column="57">full_description_w<pos:position pos:line="48" pos:column="75"/></name></expr></argument>,
                                                        <argument><expr><operator pos:line="49" pos:column="57">&amp;<pos:position pos:line="49" pos:column="62"/></operator><name pos:line="49" pos:column="58">wslen<pos:position pos:line="49" pos:column="63"/></name></expr></argument>)<pos:position pos:line="49" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="49" pos:column="65"/></decl_stmt>
                <if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><operator pos:line="50" pos:column="21">(<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="22">rv<pos:position pos:line="50" pos:column="24"/></name> <operator pos:line="50" pos:column="25">!=<pos:position pos:line="50" pos:column="27"/></operator> <name pos:line="50" pos:column="28">APR_SUCCESS<pos:position pos:line="50" pos:column="39"/></name><operator pos:line="50" pos:column="39">)<pos:position pos:line="50" pos:column="40"/></operator> <operator pos:line="50" pos:column="41">||<pos:position pos:line="50" pos:column="43"/></operator> <name pos:line="50" pos:column="44">slen<pos:position pos:line="50" pos:column="48"/></name>
                        <operator pos:line="51" pos:column="25">||<pos:position pos:line="51" pos:column="27"/></operator> <call><name pos:line="51" pos:column="28">ChangeServiceConfig2W<pos:position pos:line="51" pos:column="49"/></name><argument_list pos:line="51" pos:column="49">(<argument><expr><name pos:line="51" pos:column="50">schService<pos:position pos:line="51" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="62">1<pos:position pos:line="51" pos:column="63"/></literal></expr></argument>
                                                 <comment type="block" pos:line="52" pos:column="50">/*SERVICE_CONFIG_DESCRIPTION*/</comment>,
                                                 <argument><expr><operator pos:line="53" pos:column="50">(<pos:position pos:line="53" pos:column="51"/></operator><name pos:line="53" pos:column="51">LPVOID<pos:position pos:line="53" pos:column="57"/></name><operator pos:line="53" pos:column="57">)<pos:position pos:line="53" pos:column="58"/></operator> <operator pos:line="53" pos:column="59">&amp;<pos:position pos:line="53" pos:column="64"/></operator><name pos:line="53" pos:column="60">full_description_w<pos:position pos:line="53" pos:column="78"/></name></expr></argument>)<pos:position pos:line="53" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="80"/></condition><then pos:line="53" pos:column="80">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="21">full_description<pos:position pos:line="54" pos:column="37"/></name> <operator pos:line="54" pos:column="38">=<pos:position pos:line="54" pos:column="39"/></operator> <name pos:line="54" pos:column="40">NULL<pos:position pos:line="54" pos:column="44"/></name></expr>;<pos:position pos:line="54" pos:column="45"/></expr_stmt></block></then></if>
            }<pos:position pos:line="55" pos:column="14"/></block>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="56" pos:column="8">/* APR_HAS_UNICODE_FS */</comment>
<cpp:if pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">if<pos:position pos:line="57" pos:column="4"/></cpp:directive> <expr><name pos:line="57" pos:column="5">APR_HAS_ANSI_FS<pos:position pos:line="57" pos:column="20"/></name></expr></cpp:if>
            <macro><name pos:line="58" pos:column="13">ELSE_WIN_OS_IS_ANSI<pos:position pos:line="58" pos:column="32"/></name></macro>
            <block pos:line="59" pos:column="13">{
                <if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><call><name pos:line="60" pos:column="21">ChangeServiceConfig2<pos:position pos:line="60" pos:column="41"/></name><argument_list pos:line="60" pos:column="41">(<argument><expr><name pos:line="60" pos:column="42">schService<pos:position pos:line="60" pos:column="52"/></name></expr></argument>,
                                         <argument><expr><literal type="number" pos:line="61" pos:column="42">1<pos:position pos:line="61" pos:column="43"/></literal></expr></argument> <comment type="block" pos:line="61" pos:column="44">/* SERVICE_CONFIG_DESCRIPTION */</comment>,
                                         <argument><expr><operator pos:line="62" pos:column="42">(<pos:position pos:line="62" pos:column="43"/></operator><name pos:line="62" pos:column="43">LPVOID<pos:position pos:line="62" pos:column="49"/></name><operator pos:line="62" pos:column="49">)<pos:position pos:line="62" pos:column="50"/></operator> <operator pos:line="62" pos:column="51">&amp;<pos:position pos:line="62" pos:column="56"/></operator><name pos:line="62" pos:column="52">full_description<pos:position pos:line="62" pos:column="68"/></name></expr></argument>)<pos:position pos:line="62" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="70"/></condition><then pos:line="62" pos:column="70">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="21">full_description<pos:position pos:line="63" pos:column="37"/></name> <operator pos:line="63" pos:column="38">=<pos:position pos:line="63" pos:column="39"/></operator> <name pos:line="63" pos:column="40">NULL<pos:position pos:line="63" pos:column="44"/></name></expr>;<pos:position pos:line="63" pos:column="45"/></expr_stmt></block></then></if>
            }<pos:position pos:line="64" pos:column="14"/></block>
<cpp:endif pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">endif<pos:position pos:line="65" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">CloseServiceHandle<pos:position pos:line="66" pos:column="31"/></name><argument_list pos:line="66" pos:column="31">(<argument><expr><name pos:line="66" pos:column="32">schService<pos:position pos:line="66" pos:column="42"/></name></expr></argument>)<pos:position pos:line="66" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="67" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">CloseServiceHandle<pos:position pos:line="68" pos:column="27"/></name><argument_list pos:line="68" pos:column="27">(<argument><expr><name pos:line="68" pos:column="28">schSCManager<pos:position pos:line="68" pos:column="40"/></name></expr></argument>)<pos:position pos:line="68" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

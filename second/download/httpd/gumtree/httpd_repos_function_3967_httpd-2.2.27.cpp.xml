<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3967_httpd-2.2.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_socket_sendfile<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">apr_socket_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">sock<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">apr_file_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">file<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">apr_hdtr_t<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">hdtr<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">apr_off_t<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">offset<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="3" pos:column="34">apr_size_t<pos:position pos:line="3" pos:column="44"/></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">len<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="51">apr_int32_t<pos:position pos:line="3" pos:column="62"/></name></type> <name pos:line="3" pos:column="63">flags<pos:position pos:line="3" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="69"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_ssize_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">rc<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">nbytes<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><operator pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">len<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="31">headerlen<pos:position pos:line="7" pos:column="40"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="42">trailerlen<pos:position pos:line="7" pos:column="52"/></name></decl>;<pos:position pos:line="7" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">iovec<pos:position pos:line="8" pos:column="17"/></name></name></type> <name><name pos:line="8" pos:column="18">hdtrarray<pos:position pos:line="8" pos:column="27"/></name><index pos:line="8" pos:column="27">[<expr><literal type="number" pos:line="8" pos:column="28">2<pos:position pos:line="8" pos:column="29"/></literal></expr>]<pos:position pos:line="8" pos:column="30"/></index></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">headerbuf<pos:position pos:line="9" pos:column="20"/></name></decl>, <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="23">trailerbuf<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>

<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><name pos:line="11" pos:column="5">APR_HAS_LARGE_FILES<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">&amp;&amp;<pos:position pos:line="11" pos:column="35"/></operator> <call><name pos:line="11" pos:column="28">defined<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">HAVE_SENDFILE64<pos:position pos:line="11" pos:column="51"/></name></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr></cpp:if>
    <comment type="block" pos:line="12" pos:column="5">/* later HP-UXes have a sendfile64() */</comment>
<cpp:define pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">define<pos:position pos:line="13" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="13" pos:column="9">sendfile<pos:position pos:line="13" pos:column="17"/></name></cpp:macro> <cpp:value pos:line="13" pos:column="18">sendfile64<pos:position pos:line="13" pos:column="28"/></cpp:value></cpp:define>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_off_t<pos:position pos:line="14" pos:column="14"/></name></type> <name pos:line="14" pos:column="15">off<pos:position pos:line="14" pos:column="18"/></name> <init pos:line="14" pos:column="19">= <expr><operator pos:line="14" pos:column="21">*<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">offset<pos:position pos:line="14" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>

<cpp:elif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">elif<pos:position pos:line="16" pos:column="6"/></cpp:directive> <expr><name pos:line="16" pos:column="7">APR_HAS_LARGE_FILES<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">&amp;&amp;<pos:position pos:line="16" pos:column="37"/></operator> <name pos:line="16" pos:column="30">SIZEOF_OFF_T<pos:position pos:line="16" pos:column="42"/></name> <operator pos:line="16" pos:column="43">==<pos:position pos:line="16" pos:column="45"/></operator> <literal type="number" pos:line="16" pos:column="46">4<pos:position pos:line="16" pos:column="47"/></literal></expr></cpp:elif>
    <comment type="block" pos:line="17" pos:column="5">/* HP-UX 11.00 doesn't have a sendfile64(): fail if trying to send
     * past the 2Gb limit */</comment>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">off_t<pos:position pos:line="19" pos:column="10"/></name></type> <name pos:line="19" pos:column="11">off<pos:position pos:line="19" pos:column="14"/></name></decl>;<pos:position pos:line="19" pos:column="15"/></decl_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">apr_int64_t<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">)<pos:position pos:line="21" pos:column="22"/></operator><operator pos:line="21" pos:column="22">*<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="23">offset<pos:position pos:line="21" pos:column="29"/></name> <operator pos:line="21" pos:column="30">+<pos:position pos:line="21" pos:column="31"/></operator> <operator pos:line="21" pos:column="32">*<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="33">len<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">&gt;<pos:position pos:line="21" pos:column="41"/></operator> <name pos:line="21" pos:column="39">INT_MAX<pos:position pos:line="21" pos:column="46"/></name></expr>)<pos:position pos:line="21" pos:column="47"/></condition><then pos:line="21" pos:column="47"> <block pos:line="21" pos:column="48">{
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">EINVAL<pos:position pos:line="22" pos:column="22"/></name></expr>;<pos:position pos:line="22" pos:column="23"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="24" pos:column="5">off<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">=<pos:position pos:line="24" pos:column="10"/></operator> <operator pos:line="24" pos:column="11">*<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">offset<pos:position pos:line="24" pos:column="18"/></name></expr>;<pos:position pos:line="24" pos:column="19"/></expr_stmt>
<cpp:else pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">else<pos:position pos:line="25" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">apr_off_t<pos:position pos:line="26" pos:column="14"/></name></type> <name pos:line="26" pos:column="15">off<pos:position pos:line="26" pos:column="18"/></name> <init pos:line="26" pos:column="19">= <expr><operator pos:line="26" pos:column="21">*<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">offset<pos:position pos:line="26" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="29"/></decl_stmt>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">!<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">hdtr<pos:position pos:line="29" pos:column="14"/></name></expr>)<pos:position pos:line="29" pos:column="15"/></condition><then pos:line="29" pos:column="15"> <block pos:line="29" pos:column="16">{
        <expr_stmt><expr><name pos:line="30" pos:column="9">hdtr<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <operator pos:line="30" pos:column="16">&amp;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="17">no_hdtr<pos:position pos:line="30" pos:column="24"/></name></expr>;<pos:position pos:line="30" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="33" pos:column="5">/* Ignore flags for now. */</comment>
    <expr_stmt><expr><name pos:line="34" pos:column="5">flags<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <literal type="number" pos:line="34" pos:column="13">0<pos:position pos:line="34" pos:column="14"/></literal></expr>;<pos:position pos:line="34" pos:column="15"/></expr_stmt>

    <comment type="block" pos:line="36" pos:column="5">/* HP-UX can only send one header iovec and one footer iovec; try to
     * only allocate storage to combine input iovecs when we really have to
     */</comment>

    <switch pos:line="40" pos:column="5">switch<condition pos:line="40" pos:column="11">(<expr><name><name pos:line="40" pos:column="12">hdtr<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">numheaders<pos:position pos:line="40" pos:column="28"/></name></name></expr>)<pos:position pos:line="40" pos:column="29"/></condition> <block pos:line="40" pos:column="30">{
    <case pos:line="41" pos:column="5">case <expr><literal type="number" pos:line="41" pos:column="10">0<pos:position pos:line="41" pos:column="11"/></literal></expr>:<pos:position pos:line="41" pos:column="12"/></case>
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">hdtrarray<pos:position pos:line="42" pos:column="18"/></name><index pos:line="42" pos:column="18">[<expr><literal type="number" pos:line="42" pos:column="19">0<pos:position pos:line="42" pos:column="20"/></literal></expr>]<pos:position pos:line="42" pos:column="21"/></index></name><operator pos:line="42" pos:column="21">.<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">iov_base<pos:position pos:line="42" pos:column="30"/></name> <operator pos:line="42" pos:column="31">=<pos:position pos:line="42" pos:column="32"/></operator> <name pos:line="42" pos:column="33">NULL<pos:position pos:line="42" pos:column="37"/></name></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="43" pos:column="9">hdtrarray<pos:position pos:line="43" pos:column="18"/></name><index pos:line="43" pos:column="18">[<expr><literal type="number" pos:line="43" pos:column="19">0<pos:position pos:line="43" pos:column="20"/></literal></expr>]<pos:position pos:line="43" pos:column="21"/></index></name><operator pos:line="43" pos:column="21">.<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">iov_len<pos:position pos:line="43" pos:column="29"/></name> <operator pos:line="43" pos:column="30">=<pos:position pos:line="43" pos:column="31"/></operator> <literal type="number" pos:line="43" pos:column="32">0<pos:position pos:line="43" pos:column="33"/></literal></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>
        <break pos:line="44" pos:column="9">break;<pos:position pos:line="44" pos:column="15"/></break>
    <case pos:line="45" pos:column="5">case <expr><literal type="number" pos:line="45" pos:column="10">1<pos:position pos:line="45" pos:column="11"/></literal></expr>:<pos:position pos:line="45" pos:column="12"/></case>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">hdtrarray<pos:position pos:line="46" pos:column="18"/></name><index pos:line="46" pos:column="18">[<expr><literal type="number" pos:line="46" pos:column="19">0<pos:position pos:line="46" pos:column="20"/></literal></expr>]<pos:position pos:line="46" pos:column="21"/></index></name> <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <name><name pos:line="46" pos:column="24">hdtr<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">-&gt;<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="30">headers<pos:position pos:line="46" pos:column="37"/></name><index pos:line="46" pos:column="37">[<expr><literal type="number" pos:line="46" pos:column="38">0<pos:position pos:line="46" pos:column="39"/></literal></expr>]<pos:position pos:line="46" pos:column="40"/></index></name></expr>;<pos:position pos:line="46" pos:column="41"/></expr_stmt>
        <break pos:line="47" pos:column="9">break;<pos:position pos:line="47" pos:column="15"/></break>
    <default pos:line="48" pos:column="5">default:<pos:position pos:line="48" pos:column="13"/></default>
        <expr_stmt><expr><name pos:line="49" pos:column="9">headerlen<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">=<pos:position pos:line="49" pos:column="20"/></operator> <literal type="number" pos:line="49" pos:column="21">0<pos:position pos:line="49" pos:column="22"/></literal></expr>;<pos:position pos:line="49" pos:column="23"/></expr_stmt>
        <for pos:line="50" pos:column="9">for <control pos:line="50" pos:column="13">(<init><expr><name pos:line="50" pos:column="14">i<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <literal type="number" pos:line="50" pos:column="18">0<pos:position pos:line="50" pos:column="19"/></literal></expr>;<pos:position pos:line="50" pos:column="20"/></init> <condition><expr><name pos:line="50" pos:column="21">i<pos:position pos:line="50" pos:column="22"/></name> <operator pos:line="50" pos:column="23">&lt;<pos:position pos:line="50" pos:column="27"/></operator> <name><name pos:line="50" pos:column="25">hdtr<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">-&gt;<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="31">numheaders<pos:position pos:line="50" pos:column="41"/></name></name></expr>;<pos:position pos:line="50" pos:column="42"/></condition> <incr><expr><name pos:line="50" pos:column="43">i<pos:position pos:line="50" pos:column="44"/></name><operator pos:line="50" pos:column="44">++<pos:position pos:line="50" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="50" pos:column="47"/></control> <block pos:line="50" pos:column="48">{
            <expr_stmt><expr><name pos:line="51" pos:column="13">headerlen<pos:position pos:line="51" pos:column="22"/></name> <operator pos:line="51" pos:column="23">+=<pos:position pos:line="51" pos:column="25"/></operator> <name><name pos:line="51" pos:column="26">hdtr<pos:position pos:line="51" pos:column="30"/></name><operator pos:line="51" pos:column="30">-&gt;<pos:position pos:line="51" pos:column="35"/></operator><name pos:line="51" pos:column="32">headers<pos:position pos:line="51" pos:column="39"/></name><index pos:line="51" pos:column="39">[<expr><name pos:line="51" pos:column="40">i<pos:position pos:line="51" pos:column="41"/></name></expr>]<pos:position pos:line="51" pos:column="42"/></index></name><operator pos:line="51" pos:column="42">.<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="43">iov_len<pos:position pos:line="51" pos:column="50"/></name></expr>;<pos:position pos:line="51" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="52" pos:column="10"/></block></for>  

        <comment type="block" pos:line="54" pos:column="9">/* XXX:  BUHHH? wow, what a memory leak! */</comment>
        <expr_stmt><expr><name pos:line="55" pos:column="9">headerbuf<pos:position pos:line="55" pos:column="18"/></name> <operator pos:line="55" pos:column="19">=<pos:position pos:line="55" pos:column="20"/></operator> <name><name pos:line="55" pos:column="21">hdtrarray<pos:position pos:line="55" pos:column="30"/></name><index pos:line="55" pos:column="30">[<expr><literal type="number" pos:line="55" pos:column="31">0<pos:position pos:line="55" pos:column="32"/></literal></expr>]<pos:position pos:line="55" pos:column="33"/></index></name><operator pos:line="55" pos:column="33">.<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="34">iov_base<pos:position pos:line="55" pos:column="42"/></name> <operator pos:line="55" pos:column="43">=<pos:position pos:line="55" pos:column="44"/></operator> <call><name pos:line="55" pos:column="45">apr_palloc<pos:position pos:line="55" pos:column="55"/></name><argument_list pos:line="55" pos:column="55">(<argument><expr><name><name pos:line="55" pos:column="56">sock<pos:position pos:line="55" pos:column="60"/></name><operator pos:line="55" pos:column="60">-&gt;<pos:position pos:line="55" pos:column="65"/></operator><name pos:line="55" pos:column="62">pool<pos:position pos:line="55" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="68">headerlen<pos:position pos:line="55" pos:column="77"/></name></expr></argument>)<pos:position pos:line="55" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="56" pos:column="9">hdtrarray<pos:position pos:line="56" pos:column="18"/></name><index pos:line="56" pos:column="18">[<expr><literal type="number" pos:line="56" pos:column="19">0<pos:position pos:line="56" pos:column="20"/></literal></expr>]<pos:position pos:line="56" pos:column="21"/></index></name><operator pos:line="56" pos:column="21">.<pos:position pos:line="56" pos:column="22"/></operator><name pos:line="56" pos:column="22">iov_len<pos:position pos:line="56" pos:column="29"/></name> <operator pos:line="56" pos:column="30">=<pos:position pos:line="56" pos:column="31"/></operator> <name pos:line="56" pos:column="32">headerlen<pos:position pos:line="56" pos:column="41"/></name></expr>;<pos:position pos:line="56" pos:column="42"/></expr_stmt>

        <for pos:line="58" pos:column="9">for <control pos:line="58" pos:column="13">(<init><expr><name pos:line="58" pos:column="14">i<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator> <literal type="number" pos:line="58" pos:column="18">0<pos:position pos:line="58" pos:column="19"/></literal></expr>;<pos:position pos:line="58" pos:column="20"/></init> <condition><expr><name pos:line="58" pos:column="21">i<pos:position pos:line="58" pos:column="22"/></name> <operator pos:line="58" pos:column="23">&lt;<pos:position pos:line="58" pos:column="27"/></operator> <name><name pos:line="58" pos:column="25">hdtr<pos:position pos:line="58" pos:column="29"/></name><operator pos:line="58" pos:column="29">-&gt;<pos:position pos:line="58" pos:column="34"/></operator><name pos:line="58" pos:column="31">numheaders<pos:position pos:line="58" pos:column="41"/></name></name></expr>;<pos:position pos:line="58" pos:column="42"/></condition> <incr><expr><name pos:line="58" pos:column="43">i<pos:position pos:line="58" pos:column="44"/></name><operator pos:line="58" pos:column="44">++<pos:position pos:line="58" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="58" pos:column="47"/></control> <block pos:line="58" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">memcpy<pos:position pos:line="59" pos:column="19"/></name><argument_list pos:line="59" pos:column="19">(<argument><expr><name pos:line="59" pos:column="20">headerbuf<pos:position pos:line="59" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="31">hdtr<pos:position pos:line="59" pos:column="35"/></name><operator pos:line="59" pos:column="35">-&gt;<pos:position pos:line="59" pos:column="40"/></operator><name pos:line="59" pos:column="37">headers<pos:position pos:line="59" pos:column="44"/></name><index pos:line="59" pos:column="44">[<expr><name pos:line="59" pos:column="45">i<pos:position pos:line="59" pos:column="46"/></name></expr>]<pos:position pos:line="59" pos:column="47"/></index></name><operator pos:line="59" pos:column="47">.<pos:position pos:line="59" pos:column="48"/></operator><name pos:line="59" pos:column="48">iov_base<pos:position pos:line="59" pos:column="56"/></name></expr></argument>,
                   <argument><expr><name><name pos:line="60" pos:column="20">hdtr<pos:position pos:line="60" pos:column="24"/></name><operator pos:line="60" pos:column="24">-&gt;<pos:position pos:line="60" pos:column="29"/></operator><name pos:line="60" pos:column="26">headers<pos:position pos:line="60" pos:column="33"/></name><index pos:line="60" pos:column="33">[<expr><name pos:line="60" pos:column="34">i<pos:position pos:line="60" pos:column="35"/></name></expr>]<pos:position pos:line="60" pos:column="36"/></index></name><operator pos:line="60" pos:column="36">.<pos:position pos:line="60" pos:column="37"/></operator><name pos:line="60" pos:column="37">iov_len<pos:position pos:line="60" pos:column="44"/></name></expr></argument>)<pos:position pos:line="60" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name pos:line="61" pos:column="13">headerbuf<pos:position pos:line="61" pos:column="22"/></name> <operator pos:line="61" pos:column="23">+=<pos:position pos:line="61" pos:column="25"/></operator> <name><name pos:line="61" pos:column="26">hdtr<pos:position pos:line="61" pos:column="30"/></name><operator pos:line="61" pos:column="30">-&gt;<pos:position pos:line="61" pos:column="35"/></operator><name pos:line="61" pos:column="32">headers<pos:position pos:line="61" pos:column="39"/></name><index pos:line="61" pos:column="39">[<expr><name pos:line="61" pos:column="40">i<pos:position pos:line="61" pos:column="41"/></name></expr>]<pos:position pos:line="61" pos:column="42"/></index></name><operator pos:line="61" pos:column="42">.<pos:position pos:line="61" pos:column="43"/></operator><name pos:line="61" pos:column="43">iov_len<pos:position pos:line="61" pos:column="50"/></name></expr>;<pos:position pos:line="61" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="62" pos:column="10"/></block></for>
    }<pos:position pos:line="63" pos:column="6"/></block></switch>

    <switch pos:line="65" pos:column="5">switch<condition pos:line="65" pos:column="11">(<expr><name><name pos:line="65" pos:column="12">hdtr<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">-&gt;<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="18">numtrailers<pos:position pos:line="65" pos:column="29"/></name></name></expr>)<pos:position pos:line="65" pos:column="30"/></condition> <block pos:line="65" pos:column="31">{
    <case pos:line="66" pos:column="5">case <expr><literal type="number" pos:line="66" pos:column="10">0<pos:position pos:line="66" pos:column="11"/></literal></expr>:<pos:position pos:line="66" pos:column="12"/></case>
        <expr_stmt><expr><name><name pos:line="67" pos:column="9">hdtrarray<pos:position pos:line="67" pos:column="18"/></name><index pos:line="67" pos:column="18">[<expr><literal type="number" pos:line="67" pos:column="19">1<pos:position pos:line="67" pos:column="20"/></literal></expr>]<pos:position pos:line="67" pos:column="21"/></index></name><operator pos:line="67" pos:column="21">.<pos:position pos:line="67" pos:column="22"/></operator><name pos:line="67" pos:column="22">iov_base<pos:position pos:line="67" pos:column="30"/></name> <operator pos:line="67" pos:column="31">=<pos:position pos:line="67" pos:column="32"/></operator> <name pos:line="67" pos:column="33">NULL<pos:position pos:line="67" pos:column="37"/></name></expr>;<pos:position pos:line="67" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="68" pos:column="9">hdtrarray<pos:position pos:line="68" pos:column="18"/></name><index pos:line="68" pos:column="18">[<expr><literal type="number" pos:line="68" pos:column="19">1<pos:position pos:line="68" pos:column="20"/></literal></expr>]<pos:position pos:line="68" pos:column="21"/></index></name><operator pos:line="68" pos:column="21">.<pos:position pos:line="68" pos:column="22"/></operator><name pos:line="68" pos:column="22">iov_len<pos:position pos:line="68" pos:column="29"/></name> <operator pos:line="68" pos:column="30">=<pos:position pos:line="68" pos:column="31"/></operator> <literal type="number" pos:line="68" pos:column="32">0<pos:position pos:line="68" pos:column="33"/></literal></expr>;<pos:position pos:line="68" pos:column="34"/></expr_stmt>
        <break pos:line="69" pos:column="9">break;<pos:position pos:line="69" pos:column="15"/></break>
    <case pos:line="70" pos:column="5">case <expr><literal type="number" pos:line="70" pos:column="10">1<pos:position pos:line="70" pos:column="11"/></literal></expr>:<pos:position pos:line="70" pos:column="12"/></case>
        <expr_stmt><expr><name><name pos:line="71" pos:column="9">hdtrarray<pos:position pos:line="71" pos:column="18"/></name><index pos:line="71" pos:column="18">[<expr><literal type="number" pos:line="71" pos:column="19">1<pos:position pos:line="71" pos:column="20"/></literal></expr>]<pos:position pos:line="71" pos:column="21"/></index></name> <operator pos:line="71" pos:column="22">=<pos:position pos:line="71" pos:column="23"/></operator> <name><name pos:line="71" pos:column="24">hdtr<pos:position pos:line="71" pos:column="28"/></name><operator pos:line="71" pos:column="28">-&gt;<pos:position pos:line="71" pos:column="33"/></operator><name pos:line="71" pos:column="30">trailers<pos:position pos:line="71" pos:column="38"/></name><index pos:line="71" pos:column="38">[<expr><literal type="number" pos:line="71" pos:column="39">0<pos:position pos:line="71" pos:column="40"/></literal></expr>]<pos:position pos:line="71" pos:column="41"/></index></name></expr>;<pos:position pos:line="71" pos:column="42"/></expr_stmt>
        <break pos:line="72" pos:column="9">break;<pos:position pos:line="72" pos:column="15"/></break>
    <default pos:line="73" pos:column="5">default:<pos:position pos:line="73" pos:column="13"/></default>
        <expr_stmt><expr><name pos:line="74" pos:column="9">trailerlen<pos:position pos:line="74" pos:column="19"/></name> <operator pos:line="74" pos:column="20">=<pos:position pos:line="74" pos:column="21"/></operator> <literal type="number" pos:line="74" pos:column="22">0<pos:position pos:line="74" pos:column="23"/></literal></expr>;<pos:position pos:line="74" pos:column="24"/></expr_stmt>
        <for pos:line="75" pos:column="9">for <control pos:line="75" pos:column="13">(<init><expr><name pos:line="75" pos:column="14">i<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">=<pos:position pos:line="75" pos:column="17"/></operator> <literal type="number" pos:line="75" pos:column="18">0<pos:position pos:line="75" pos:column="19"/></literal></expr>;<pos:position pos:line="75" pos:column="20"/></init> <condition><expr><name pos:line="75" pos:column="21">i<pos:position pos:line="75" pos:column="22"/></name> <operator pos:line="75" pos:column="23">&lt;<pos:position pos:line="75" pos:column="27"/></operator> <name><name pos:line="75" pos:column="25">hdtr<pos:position pos:line="75" pos:column="29"/></name><operator pos:line="75" pos:column="29">-&gt;<pos:position pos:line="75" pos:column="34"/></operator><name pos:line="75" pos:column="31">numtrailers<pos:position pos:line="75" pos:column="42"/></name></name></expr>;<pos:position pos:line="75" pos:column="43"/></condition> <incr><expr><name pos:line="75" pos:column="44">i<pos:position pos:line="75" pos:column="45"/></name><operator pos:line="75" pos:column="45">++<pos:position pos:line="75" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="75" pos:column="48"/></control> <block pos:line="75" pos:column="49">{
            <expr_stmt><expr><name pos:line="76" pos:column="13">trailerlen<pos:position pos:line="76" pos:column="23"/></name> <operator pos:line="76" pos:column="24">+=<pos:position pos:line="76" pos:column="26"/></operator> <name><name pos:line="76" pos:column="27">hdtr<pos:position pos:line="76" pos:column="31"/></name><operator pos:line="76" pos:column="31">-&gt;<pos:position pos:line="76" pos:column="36"/></operator><name pos:line="76" pos:column="33">trailers<pos:position pos:line="76" pos:column="41"/></name><index pos:line="76" pos:column="41">[<expr><name pos:line="76" pos:column="42">i<pos:position pos:line="76" pos:column="43"/></name></expr>]<pos:position pos:line="76" pos:column="44"/></index></name><operator pos:line="76" pos:column="44">.<pos:position pos:line="76" pos:column="45"/></operator><name pos:line="76" pos:column="45">iov_len<pos:position pos:line="76" pos:column="52"/></name></expr>;<pos:position pos:line="76" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></for>

        <comment type="block" pos:line="79" pos:column="9">/* XXX:  BUHHH? wow, what a memory leak! */</comment>
        <expr_stmt><expr><name pos:line="80" pos:column="9">trailerbuf<pos:position pos:line="80" pos:column="19"/></name> <operator pos:line="80" pos:column="20">=<pos:position pos:line="80" pos:column="21"/></operator> <name><name pos:line="80" pos:column="22">hdtrarray<pos:position pos:line="80" pos:column="31"/></name><index pos:line="80" pos:column="31">[<expr><literal type="number" pos:line="80" pos:column="32">1<pos:position pos:line="80" pos:column="33"/></literal></expr>]<pos:position pos:line="80" pos:column="34"/></index></name><operator pos:line="80" pos:column="34">.<pos:position pos:line="80" pos:column="35"/></operator><name pos:line="80" pos:column="35">iov_base<pos:position pos:line="80" pos:column="43"/></name> <operator pos:line="80" pos:column="44">=<pos:position pos:line="80" pos:column="45"/></operator> <call><name pos:line="80" pos:column="46">apr_palloc<pos:position pos:line="80" pos:column="56"/></name><argument_list pos:line="80" pos:column="56">(<argument><expr><name><name pos:line="80" pos:column="57">sock<pos:position pos:line="80" pos:column="61"/></name><operator pos:line="80" pos:column="61">-&gt;<pos:position pos:line="80" pos:column="66"/></operator><name pos:line="80" pos:column="63">pool<pos:position pos:line="80" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="69">trailerlen<pos:position pos:line="80" pos:column="79"/></name></expr></argument>)<pos:position pos:line="80" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="81" pos:column="9">hdtrarray<pos:position pos:line="81" pos:column="18"/></name><index pos:line="81" pos:column="18">[<expr><literal type="number" pos:line="81" pos:column="19">1<pos:position pos:line="81" pos:column="20"/></literal></expr>]<pos:position pos:line="81" pos:column="21"/></index></name><operator pos:line="81" pos:column="21">.<pos:position pos:line="81" pos:column="22"/></operator><name pos:line="81" pos:column="22">iov_len<pos:position pos:line="81" pos:column="29"/></name> <operator pos:line="81" pos:column="30">=<pos:position pos:line="81" pos:column="31"/></operator> <name pos:line="81" pos:column="32">trailerlen<pos:position pos:line="81" pos:column="42"/></name></expr>;<pos:position pos:line="81" pos:column="43"/></expr_stmt>

        <for pos:line="83" pos:column="9">for <control pos:line="83" pos:column="13">(<init><expr><name pos:line="83" pos:column="14">i<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">=<pos:position pos:line="83" pos:column="17"/></operator> <literal type="number" pos:line="83" pos:column="18">0<pos:position pos:line="83" pos:column="19"/></literal></expr>;<pos:position pos:line="83" pos:column="20"/></init> <condition><expr><name pos:line="83" pos:column="21">i<pos:position pos:line="83" pos:column="22"/></name> <operator pos:line="83" pos:column="23">&lt;<pos:position pos:line="83" pos:column="27"/></operator> <name><name pos:line="83" pos:column="25">hdtr<pos:position pos:line="83" pos:column="29"/></name><operator pos:line="83" pos:column="29">-&gt;<pos:position pos:line="83" pos:column="34"/></operator><name pos:line="83" pos:column="31">numtrailers<pos:position pos:line="83" pos:column="42"/></name></name></expr>;<pos:position pos:line="83" pos:column="43"/></condition> <incr><expr><name pos:line="83" pos:column="44">i<pos:position pos:line="83" pos:column="45"/></name><operator pos:line="83" pos:column="45">++<pos:position pos:line="83" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="83" pos:column="48"/></control> <block pos:line="83" pos:column="49">{
            <expr_stmt><expr><call><name pos:line="84" pos:column="13">memcpy<pos:position pos:line="84" pos:column="19"/></name><argument_list pos:line="84" pos:column="19">(<argument><expr><name pos:line="84" pos:column="20">trailerbuf<pos:position pos:line="84" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="32">hdtr<pos:position pos:line="84" pos:column="36"/></name><operator pos:line="84" pos:column="36">-&gt;<pos:position pos:line="84" pos:column="41"/></operator><name pos:line="84" pos:column="38">trailers<pos:position pos:line="84" pos:column="46"/></name><index pos:line="84" pos:column="46">[<expr><name pos:line="84" pos:column="47">i<pos:position pos:line="84" pos:column="48"/></name></expr>]<pos:position pos:line="84" pos:column="49"/></index></name><operator pos:line="84" pos:column="49">.<pos:position pos:line="84" pos:column="50"/></operator><name pos:line="84" pos:column="50">iov_base<pos:position pos:line="84" pos:column="58"/></name></expr></argument>,
                   <argument><expr><name><name pos:line="85" pos:column="20">hdtr<pos:position pos:line="85" pos:column="24"/></name><operator pos:line="85" pos:column="24">-&gt;<pos:position pos:line="85" pos:column="29"/></operator><name pos:line="85" pos:column="26">trailers<pos:position pos:line="85" pos:column="34"/></name><index pos:line="85" pos:column="34">[<expr><name pos:line="85" pos:column="35">i<pos:position pos:line="85" pos:column="36"/></name></expr>]<pos:position pos:line="85" pos:column="37"/></index></name><operator pos:line="85" pos:column="37">.<pos:position pos:line="85" pos:column="38"/></operator><name pos:line="85" pos:column="38">iov_len<pos:position pos:line="85" pos:column="45"/></name></expr></argument>)<pos:position pos:line="85" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name pos:line="86" pos:column="13">trailerbuf<pos:position pos:line="86" pos:column="23"/></name> <operator pos:line="86" pos:column="24">+=<pos:position pos:line="86" pos:column="26"/></operator> <name><name pos:line="86" pos:column="27">hdtr<pos:position pos:line="86" pos:column="31"/></name><operator pos:line="86" pos:column="31">-&gt;<pos:position pos:line="86" pos:column="36"/></operator><name pos:line="86" pos:column="33">trailers<pos:position pos:line="86" pos:column="41"/></name><index pos:line="86" pos:column="41">[<expr><name pos:line="86" pos:column="42">i<pos:position pos:line="86" pos:column="43"/></name></expr>]<pos:position pos:line="86" pos:column="44"/></index></name><operator pos:line="86" pos:column="44">.<pos:position pos:line="86" pos:column="45"/></operator><name pos:line="86" pos:column="45">iov_len<pos:position pos:line="86" pos:column="52"/></name></expr>;<pos:position pos:line="86" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="87" pos:column="10"/></block></for>
    }<pos:position pos:line="88" pos:column="6"/></block></switch>

    <do pos:line="90" pos:column="5">do <block pos:line="90" pos:column="8">{
        <if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><name pos:line="91" pos:column="13">nbytes<pos:position pos:line="91" pos:column="19"/></name></expr>)<pos:position pos:line="91" pos:column="20"/></condition><then pos:line="91" pos:column="20"> <block pos:line="91" pos:column="21">{       <comment type="block" pos:line="91" pos:column="29">/* any bytes to send from the file? */</comment>
            <expr_stmt><expr><name pos:line="92" pos:column="13">rc<pos:position pos:line="92" pos:column="15"/></name> <operator pos:line="92" pos:column="16">=<pos:position pos:line="92" pos:column="17"/></operator> <call><name pos:line="92" pos:column="18">sendfile<pos:position pos:line="92" pos:column="26"/></name><argument_list pos:line="92" pos:column="26">(<argument><expr><name><name pos:line="92" pos:column="27">sock<pos:position pos:line="92" pos:column="31"/></name><operator pos:line="92" pos:column="31">-&gt;<pos:position pos:line="92" pos:column="36"/></operator><name pos:line="92" pos:column="33">socketdes<pos:position pos:line="92" pos:column="42"/></name></name></expr></argument>,      <comment type="block" pos:line="92" pos:column="49">/* socket  */</comment>
                          <argument><expr><name><name pos:line="93" pos:column="27">file<pos:position pos:line="93" pos:column="31"/></name><operator pos:line="93" pos:column="31">-&gt;<pos:position pos:line="93" pos:column="36"/></operator><name pos:line="93" pos:column="33">filedes<pos:position pos:line="93" pos:column="40"/></name></name></expr></argument>,        <comment type="block" pos:line="93" pos:column="49">/* file descriptor to send */</comment>
                          <argument><expr><name pos:line="94" pos:column="27">off<pos:position pos:line="94" pos:column="30"/></name></expr></argument>,                  <comment type="block" pos:line="94" pos:column="49">/* where in the file to start */</comment>
                          <argument><expr><name pos:line="95" pos:column="27">nbytes<pos:position pos:line="95" pos:column="33"/></name></expr></argument>,               <comment type="block" pos:line="95" pos:column="49">/* number of bytes to send from file */</comment>
                          <argument><expr><name pos:line="96" pos:column="27">hdtrarray<pos:position pos:line="96" pos:column="36"/></name></expr></argument>,            <comment type="block" pos:line="96" pos:column="49">/* Headers/footers */</comment>
                          <argument><expr><name pos:line="97" pos:column="27">flags<pos:position pos:line="97" pos:column="32"/></name></expr></argument>)<pos:position pos:line="97" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="34"/></expr_stmt>               <comment type="block" pos:line="97" pos:column="49">/* undefined, set to 0 */</comment>
        }<pos:position pos:line="98" pos:column="10"/></block></then>
        <else pos:line="99" pos:column="9">else <block pos:line="99" pos:column="14">{              <comment type="block" pos:line="99" pos:column="29">/* we can't call sendfile() with no bytes to send from the file */</comment>
            <expr_stmt><expr><name pos:line="100" pos:column="13">rc<pos:position pos:line="100" pos:column="15"/></name> <operator pos:line="100" pos:column="16">=<pos:position pos:line="100" pos:column="17"/></operator> <call><name pos:line="100" pos:column="18">writev<pos:position pos:line="100" pos:column="24"/></name><argument_list pos:line="100" pos:column="24">(<argument><expr><name><name pos:line="100" pos:column="25">sock<pos:position pos:line="100" pos:column="29"/></name><operator pos:line="100" pos:column="29">-&gt;<pos:position pos:line="100" pos:column="34"/></operator><name pos:line="100" pos:column="31">socketdes<pos:position pos:line="100" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="42">hdtrarray<pos:position pos:line="100" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="100" pos:column="53">2<pos:position pos:line="100" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="101" pos:column="10"/></block></else></if>
    }<pos:position pos:line="102" pos:column="6"/></block> while <condition pos:line="102" pos:column="13">(<expr><name pos:line="102" pos:column="14">rc<pos:position pos:line="102" pos:column="16"/></name> <operator pos:line="102" pos:column="17">==<pos:position pos:line="102" pos:column="19"/></operator> <operator pos:line="102" pos:column="20">-<pos:position pos:line="102" pos:column="21"/></operator><literal type="number" pos:line="102" pos:column="21">1<pos:position pos:line="102" pos:column="22"/></literal> <operator pos:line="102" pos:column="23">&amp;&amp;<pos:position pos:line="102" pos:column="33"/></operator> <name pos:line="102" pos:column="26">errno<pos:position pos:line="102" pos:column="31"/></name> <operator pos:line="102" pos:column="32">==<pos:position pos:line="102" pos:column="34"/></operator> <name pos:line="102" pos:column="35">EINTR<pos:position pos:line="102" pos:column="40"/></name></expr>)<pos:position pos:line="102" pos:column="41"/></condition>;<pos:position pos:line="102" pos:column="42"/></do>

    <while pos:line="104" pos:column="5">while <condition pos:line="104" pos:column="11">(<expr><operator pos:line="104" pos:column="12">(<pos:position pos:line="104" pos:column="13"/></operator><name pos:line="104" pos:column="13">rc<pos:position pos:line="104" pos:column="15"/></name> <operator pos:line="104" pos:column="16">==<pos:position pos:line="104" pos:column="18"/></operator> <operator pos:line="104" pos:column="19">-<pos:position pos:line="104" pos:column="20"/></operator><literal type="number" pos:line="104" pos:column="20">1<pos:position pos:line="104" pos:column="21"/></literal><operator pos:line="104" pos:column="21">)<pos:position pos:line="104" pos:column="22"/></operator> <operator pos:line="104" pos:column="23">&amp;&amp;<pos:position pos:line="104" pos:column="33"/></operator> <operator pos:line="104" pos:column="26">(<pos:position pos:line="104" pos:column="27"/></operator><name pos:line="104" pos:column="27">errno<pos:position pos:line="104" pos:column="32"/></name> <operator pos:line="104" pos:column="33">==<pos:position pos:line="104" pos:column="35"/></operator> <name pos:line="104" pos:column="36">EAGAIN<pos:position pos:line="104" pos:column="42"/></name> <operator pos:line="104" pos:column="43">||<pos:position pos:line="104" pos:column="45"/></operator> <name pos:line="104" pos:column="46">errno<pos:position pos:line="104" pos:column="51"/></name> <operator pos:line="104" pos:column="52">==<pos:position pos:line="104" pos:column="54"/></operator> <name pos:line="104" pos:column="55">EWOULDBLOCK<pos:position pos:line="104" pos:column="66"/></name><operator pos:line="104" pos:column="66">)<pos:position pos:line="104" pos:column="67"/></operator> 
                      <operator pos:line="105" pos:column="23">&amp;&amp;<pos:position pos:line="105" pos:column="33"/></operator> <operator pos:line="105" pos:column="26">(<pos:position pos:line="105" pos:column="27"/></operator><name><name pos:line="105" pos:column="27">sock<pos:position pos:line="105" pos:column="31"/></name><operator pos:line="105" pos:column="31">-&gt;<pos:position pos:line="105" pos:column="36"/></operator><name pos:line="105" pos:column="33">timeout<pos:position pos:line="105" pos:column="40"/></name></name> <operator pos:line="105" pos:column="41">&gt;<pos:position pos:line="105" pos:column="45"/></operator> <literal type="number" pos:line="105" pos:column="43">0<pos:position pos:line="105" pos:column="44"/></literal><operator pos:line="105" pos:column="44">)<pos:position pos:line="105" pos:column="45"/></operator></expr>)<pos:position pos:line="105" pos:column="46"/></condition> <block pos:line="105" pos:column="47">{
        <decl_stmt><decl><type><name pos:line="106" pos:column="9">apr_status_t<pos:position pos:line="106" pos:column="21"/></name></type> <name pos:line="106" pos:column="22">arv<pos:position pos:line="106" pos:column="25"/></name> <init pos:line="106" pos:column="26">= <expr><call><name pos:line="106" pos:column="28">apr_wait_for_io_or_timeout<pos:position pos:line="106" pos:column="54"/></name><argument_list pos:line="106" pos:column="54">(<argument><expr><name pos:line="106" pos:column="55">NULL<pos:position pos:line="106" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="61">sock<pos:position pos:line="106" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="106" pos:column="67">0<pos:position pos:line="106" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="106" pos:column="70"/></decl_stmt>

        <if pos:line="108" pos:column="9">if <condition pos:line="108" pos:column="12">(<expr><name pos:line="108" pos:column="13">arv<pos:position pos:line="108" pos:column="16"/></name> <operator pos:line="108" pos:column="17">!=<pos:position pos:line="108" pos:column="19"/></operator> <name pos:line="108" pos:column="20">APR_SUCCESS<pos:position pos:line="108" pos:column="31"/></name></expr>)<pos:position pos:line="108" pos:column="32"/></condition><then pos:line="108" pos:column="32"> <block pos:line="108" pos:column="33">{
            <expr_stmt><expr><operator pos:line="109" pos:column="13">*<pos:position pos:line="109" pos:column="14"/></operator><name pos:line="109" pos:column="14">len<pos:position pos:line="109" pos:column="17"/></name> <operator pos:line="109" pos:column="18">=<pos:position pos:line="109" pos:column="19"/></operator> <literal type="number" pos:line="109" pos:column="20">0<pos:position pos:line="109" pos:column="21"/></literal></expr>;<pos:position pos:line="109" pos:column="22"/></expr_stmt>
            <return pos:line="110" pos:column="13">return <expr><name pos:line="110" pos:column="20">arv<pos:position pos:line="110" pos:column="23"/></name></expr>;<pos:position pos:line="110" pos:column="24"/></return>
        }<pos:position pos:line="111" pos:column="10"/></block></then>
        <else pos:line="112" pos:column="9">else <block pos:line="112" pos:column="14">{
            <do pos:line="113" pos:column="13">do <block pos:line="113" pos:column="16">{
                <if pos:line="114" pos:column="17">if <condition pos:line="114" pos:column="20">(<expr><name pos:line="114" pos:column="21">nbytes<pos:position pos:line="114" pos:column="27"/></name></expr>)<pos:position pos:line="114" pos:column="28"/></condition><then pos:line="114" pos:column="28"> <block pos:line="114" pos:column="29">{
                    <expr_stmt><expr><name pos:line="115" pos:column="21">rc<pos:position pos:line="115" pos:column="23"/></name> <operator pos:line="115" pos:column="24">=<pos:position pos:line="115" pos:column="25"/></operator> <call><name pos:line="115" pos:column="26">sendfile<pos:position pos:line="115" pos:column="34"/></name><argument_list pos:line="115" pos:column="34">(<argument><expr><name><name pos:line="115" pos:column="35">sock<pos:position pos:line="115" pos:column="39"/></name><operator pos:line="115" pos:column="39">-&gt;<pos:position pos:line="115" pos:column="44"/></operator><name pos:line="115" pos:column="41">socketdes<pos:position pos:line="115" pos:column="50"/></name></name></expr></argument>,    <comment type="block" pos:line="115" pos:column="55">/* socket  */</comment>
                                  <argument><expr><name><name pos:line="116" pos:column="35">file<pos:position pos:line="116" pos:column="39"/></name><operator pos:line="116" pos:column="39">-&gt;<pos:position pos:line="116" pos:column="44"/></operator><name pos:line="116" pos:column="41">filedes<pos:position pos:line="116" pos:column="48"/></name></name></expr></argument>,      <comment type="block" pos:line="116" pos:column="55">/* file descriptor to send */</comment>
                                  <argument><expr><name pos:line="117" pos:column="35">off<pos:position pos:line="117" pos:column="38"/></name></expr></argument>,                <comment type="block" pos:line="117" pos:column="55">/* where in the file to start */</comment>
                                  <argument><expr><name pos:line="118" pos:column="35">nbytes<pos:position pos:line="118" pos:column="41"/></name></expr></argument>,             <comment type="block" pos:line="118" pos:column="55">/* number of bytes to send from file */</comment>
                                  <argument><expr><name pos:line="119" pos:column="35">hdtrarray<pos:position pos:line="119" pos:column="44"/></name></expr></argument>,          <comment type="block" pos:line="119" pos:column="55">/* Headers/footers */</comment>
                                  <argument><expr><name pos:line="120" pos:column="35">flags<pos:position pos:line="120" pos:column="40"/></name></expr></argument>)<pos:position pos:line="120" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="42"/></expr_stmt>             <comment type="block" pos:line="120" pos:column="55">/* undefined, set to 0 */</comment>
                }<pos:position pos:line="121" pos:column="18"/></block></then>
                <else pos:line="122" pos:column="17">else <block pos:line="122" pos:column="22">{      <comment type="block" pos:line="122" pos:column="29">/* we can't call sendfile() with no bytes to send from the file */</comment>
                    <expr_stmt><expr><name pos:line="123" pos:column="21">rc<pos:position pos:line="123" pos:column="23"/></name> <operator pos:line="123" pos:column="24">=<pos:position pos:line="123" pos:column="25"/></operator> <call><name pos:line="123" pos:column="26">writev<pos:position pos:line="123" pos:column="32"/></name><argument_list pos:line="123" pos:column="32">(<argument><expr><name><name pos:line="123" pos:column="33">sock<pos:position pos:line="123" pos:column="37"/></name><operator pos:line="123" pos:column="37">-&gt;<pos:position pos:line="123" pos:column="42"/></operator><name pos:line="123" pos:column="39">socketdes<pos:position pos:line="123" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="50">hdtrarray<pos:position pos:line="123" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="123" pos:column="61">2<pos:position pos:line="123" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="64"/></expr_stmt>
                }<pos:position pos:line="124" pos:column="18"/></block></else></if>
            }<pos:position pos:line="125" pos:column="14"/></block> while <condition pos:line="125" pos:column="21">(<expr><name pos:line="125" pos:column="22">rc<pos:position pos:line="125" pos:column="24"/></name> <operator pos:line="125" pos:column="25">==<pos:position pos:line="125" pos:column="27"/></operator> <operator pos:line="125" pos:column="28">-<pos:position pos:line="125" pos:column="29"/></operator><literal type="number" pos:line="125" pos:column="29">1<pos:position pos:line="125" pos:column="30"/></literal> <operator pos:line="125" pos:column="31">&amp;&amp;<pos:position pos:line="125" pos:column="41"/></operator> <name pos:line="125" pos:column="34">errno<pos:position pos:line="125" pos:column="39"/></name> <operator pos:line="125" pos:column="40">==<pos:position pos:line="125" pos:column="42"/></operator> <name pos:line="125" pos:column="43">EINTR<pos:position pos:line="125" pos:column="48"/></name></expr>)<pos:position pos:line="125" pos:column="49"/></condition>;<pos:position pos:line="125" pos:column="50"/></do>
        }<pos:position pos:line="126" pos:column="10"/></block></else></if>
    }<pos:position pos:line="127" pos:column="6"/></block></while>

    <if pos:line="129" pos:column="5">if <condition pos:line="129" pos:column="8">(<expr><name pos:line="129" pos:column="9">rc<pos:position pos:line="129" pos:column="11"/></name> <operator pos:line="129" pos:column="12">==<pos:position pos:line="129" pos:column="14"/></operator> <operator pos:line="129" pos:column="15">-<pos:position pos:line="129" pos:column="16"/></operator><literal type="number" pos:line="129" pos:column="16">1<pos:position pos:line="129" pos:column="17"/></literal></expr>)<pos:position pos:line="129" pos:column="18"/></condition><then pos:line="129" pos:column="18"> <block pos:line="129" pos:column="19">{
        <expr_stmt><expr><operator pos:line="130" pos:column="9">*<pos:position pos:line="130" pos:column="10"/></operator><name pos:line="130" pos:column="10">len<pos:position pos:line="130" pos:column="13"/></name> <operator pos:line="130" pos:column="14">=<pos:position pos:line="130" pos:column="15"/></operator> <literal type="number" pos:line="130" pos:column="16">0<pos:position pos:line="130" pos:column="17"/></literal></expr>;<pos:position pos:line="130" pos:column="18"/></expr_stmt>
        <return pos:line="131" pos:column="9">return <expr><name pos:line="131" pos:column="16">errno<pos:position pos:line="131" pos:column="21"/></name></expr>;<pos:position pos:line="131" pos:column="22"/></return>
    }<pos:position pos:line="132" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="134" pos:column="5">/* Set len to the number of bytes written */</comment>
    <expr_stmt><expr><operator pos:line="135" pos:column="5">*<pos:position pos:line="135" pos:column="6"/></operator><name pos:line="135" pos:column="6">len<pos:position pos:line="135" pos:column="9"/></name> <operator pos:line="135" pos:column="10">=<pos:position pos:line="135" pos:column="11"/></operator> <name pos:line="135" pos:column="12">rc<pos:position pos:line="135" pos:column="14"/></name></expr>;<pos:position pos:line="135" pos:column="15"/></expr_stmt>
    <return pos:line="136" pos:column="5">return <expr><name pos:line="136" pos:column="12">APR_SUCCESS<pos:position pos:line="136" pos:column="23"/></name></expr>;<pos:position pos:line="136" pos:column="24"/></return>
}<pos:position pos:line="137" pos:column="2"/></block></function></unit>

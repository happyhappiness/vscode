<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_131_httpd-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">check_args<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">argc<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier></type> <name><name pos:line="1" pos:column="52">argv<pos:position pos:line="1" pos:column="56"/></name><index pos:line="1" pos:column="56">[]<pos:position pos:line="1" pos:column="58"/></index></name></decl></parameter>,
                       <parameter><decl><type><name><name pos:line="2" pos:column="24">struct<pos:position pos:line="2" pos:column="30"/></name> <name pos:line="2" pos:column="31">passwd_ctx<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">ctx<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">unsigned<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">mask<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="64">char<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier><modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">user<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="3" pos:column="24">char<pos:position pos:line="3" pos:column="28"/></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier><modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">pwfilename<pos:position pos:line="3" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="42"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">arg<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">args_left<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><literal type="number" pos:line="6" pos:column="21">2<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="12">ret<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_getopt_t<pos:position pos:line="8" pos:column="17"/></name> <modifier pos:line="8" pos:column="18">*<pos:position pos:line="8" pos:column="19"/></modifier></type><name pos:line="8" pos:column="19">state<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_status_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">rv<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">opt<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">opt_arg<pos:position pos:line="11" pos:column="24"/></name></decl>;<pos:position pos:line="11" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_pool_t<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">pool<pos:position pos:line="12" pos:column="21"/></name> <init pos:line="12" pos:column="22">= <expr><name><name pos:line="12" pos:column="24">ctx<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">pool<pos:position pos:line="12" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><name pos:line="14" pos:column="5">rv<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <call><name pos:line="14" pos:column="10">apr_getopt_init<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><operator pos:line="14" pos:column="26">&amp;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="27">state<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">pool<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">argc<pos:position pos:line="14" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="46">argv<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">rv<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">!=<pos:position pos:line="15" pos:column="14"/></operator> <name pos:line="15" pos:column="15">APR_SUCCESS<pos:position pos:line="15" pos:column="26"/></name></expr>)<pos:position pos:line="15" pos:column="27"/></condition><then pos:line="15" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="9">exit<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><name pos:line="16" pos:column="14">ERR_SYNTAX<pos:position pos:line="16" pos:column="24"/></name></expr></argument>)<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt></block></then></if>

    <while pos:line="18" pos:column="5">while <condition pos:line="18" pos:column="11">(<expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">rv<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <call><name pos:line="18" pos:column="18">apr_getopt<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">state<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="36">"cnmspdBbDiC:v"<pos:position pos:line="18" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="53">&amp;<pos:position pos:line="18" pos:column="58"/></operator><name pos:line="18" pos:column="54">opt<pos:position pos:line="18" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="59">&amp;<pos:position pos:line="18" pos:column="64"/></operator><name pos:line="18" pos:column="60">opt_arg<pos:position pos:line="18" pos:column="67"/></name></expr></argument>)<pos:position pos:line="18" pos:column="68"/></argument_list></call><operator pos:line="18" pos:column="68">)<pos:position pos:line="18" pos:column="69"/></operator> <operator pos:line="18" pos:column="70">==<pos:position pos:line="18" pos:column="72"/></operator> <name pos:line="18" pos:column="73">APR_SUCCESS<pos:position pos:line="18" pos:column="84"/></name></expr>)<pos:position pos:line="18" pos:column="85"/></condition> <block pos:line="18" pos:column="86">{
        <switch pos:line="19" pos:column="9">switch <condition pos:line="19" pos:column="16">(<expr><name pos:line="19" pos:column="17">opt<pos:position pos:line="19" pos:column="20"/></name></expr>)<pos:position pos:line="19" pos:column="21"/></condition> <block pos:line="19" pos:column="22">{
        <case pos:line="20" pos:column="9">case <expr><literal type="char" pos:line="20" pos:column="14">'c'<pos:position pos:line="20" pos:column="17"/></literal></expr>:<pos:position pos:line="20" pos:column="18"/></case>
            <expr_stmt><expr><operator pos:line="21" pos:column="13">*<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">mask<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">|=<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">APHTP_NEWFILE<pos:position pos:line="21" pos:column="35"/></name></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
            <break pos:line="22" pos:column="13">break;<pos:position pos:line="22" pos:column="19"/></break>
        <case pos:line="23" pos:column="9">case <expr><literal type="char" pos:line="23" pos:column="14">'n'<pos:position pos:line="23" pos:column="17"/></literal></expr>:<pos:position pos:line="23" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="24" pos:column="13">args_left<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">--<pos:position pos:line="24" pos:column="24"/></operator></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="25" pos:column="13">*<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">mask<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">|=<pos:position pos:line="25" pos:column="21"/></operator> <name pos:line="25" pos:column="22">APHTP_NOFILE<pos:position pos:line="25" pos:column="34"/></name></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
            <break pos:line="26" pos:column="13">break;<pos:position pos:line="26" pos:column="19"/></break>
        <case pos:line="27" pos:column="9">case <expr><literal type="char" pos:line="27" pos:column="14">'D'<pos:position pos:line="27" pos:column="17"/></literal></expr>:<pos:position pos:line="27" pos:column="18"/></case>
            <expr_stmt><expr><operator pos:line="28" pos:column="13">*<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">mask<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">|=<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="22">APHTP_DELUSER<pos:position pos:line="28" pos:column="35"/></name></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
            <break pos:line="29" pos:column="13">break;<pos:position pos:line="29" pos:column="19"/></break>
        <case pos:line="30" pos:column="9">case <expr><literal type="char" pos:line="30" pos:column="14">'v'<pos:position pos:line="30" pos:column="17"/></literal></expr>:<pos:position pos:line="30" pos:column="18"/></case>
            <expr_stmt><expr><operator pos:line="31" pos:column="13">*<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">mask<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">|=<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">APHTP_VERIFY<pos:position pos:line="31" pos:column="34"/></name></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
            <break pos:line="32" pos:column="13">break;<pos:position pos:line="32" pos:column="19"/></break>
        <default pos:line="33" pos:column="9">default:<pos:position pos:line="33" pos:column="17"/></default>
            <expr_stmt><expr><name pos:line="34" pos:column="13">ret<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <call><name pos:line="34" pos:column="19">parse_common_options<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">ctx<pos:position pos:line="34" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="45">opt<pos:position pos:line="34" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="50">opt_arg<pos:position pos:line="34" pos:column="57"/></name></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="59"/></expr_stmt>
            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><name pos:line="35" pos:column="17">ret<pos:position pos:line="35" pos:column="20"/></name></expr>)<pos:position pos:line="35" pos:column="21"/></condition><then pos:line="35" pos:column="21"> <block pos:line="35" pos:column="22">{
                <expr_stmt><expr><call><name pos:line="36" pos:column="17">apr_file_printf<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">errfile<pos:position pos:line="36" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="42">"%s: %s"<pos:position pos:line="36" pos:column="50"/></literal> <name pos:line="36" pos:column="51">NL<pos:position pos:line="36" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="55">argv<pos:position pos:line="36" pos:column="59"/></name><index pos:line="36" pos:column="59">[<expr><literal type="number" pos:line="36" pos:column="60">0<pos:position pos:line="36" pos:column="61"/></literal></expr>]<pos:position pos:line="36" pos:column="62"/></index></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="64">ctx<pos:position pos:line="36" pos:column="67"/></name><operator pos:line="36" pos:column="67">-&gt;<pos:position pos:line="36" pos:column="72"/></operator><name pos:line="36" pos:column="69">errstr<pos:position pos:line="36" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="77"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="37" pos:column="17">exit<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name pos:line="37" pos:column="22">ret<pos:position pos:line="37" pos:column="25"/></name></expr></argument>)<pos:position pos:line="37" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="38" pos:column="14"/></block></then></if>
        }<pos:position pos:line="39" pos:column="10"/></block></switch>
    }<pos:position pos:line="40" pos:column="6"/></block></while>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name><name pos:line="41" pos:column="9">ctx<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">-&gt;<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="14">passwd_src<pos:position pos:line="41" pos:column="24"/></name></name> <operator pos:line="41" pos:column="25">==<pos:position pos:line="41" pos:column="27"/></operator> <name pos:line="41" pos:column="28">PW_ARG<pos:position pos:line="41" pos:column="34"/></name></expr>)<pos:position pos:line="41" pos:column="35"/></condition><then pos:line="41" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="9">args_left<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">++<pos:position pos:line="42" pos:column="20"/></operator></expr>;<pos:position pos:line="42" pos:column="21"/></expr_stmt></block></then></if>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">rv<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">!=<pos:position pos:line="43" pos:column="14"/></operator> <name pos:line="43" pos:column="15">APR_EOF<pos:position pos:line="43" pos:column="22"/></name></expr>)<pos:position pos:line="43" pos:column="23"/></condition><then pos:line="43" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="9">usage<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">()<pos:position pos:line="44" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="17"/></expr_stmt></block></then></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">(<pos:position pos:line="46" pos:column="10"/></operator><operator pos:line="46" pos:column="10">*<pos:position pos:line="46" pos:column="11"/></operator><name pos:line="46" pos:column="11">mask<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">)<pos:position pos:line="46" pos:column="16"/></operator> <operator pos:line="46" pos:column="17">&amp;<pos:position pos:line="46" pos:column="22"/></operator> <operator pos:line="46" pos:column="19">(<pos:position pos:line="46" pos:column="20"/></operator><operator pos:line="46" pos:column="20">*<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="21">mask<pos:position pos:line="46" pos:column="25"/></name> <operator pos:line="46" pos:column="26">-<pos:position pos:line="46" pos:column="27"/></operator> <literal type="number" pos:line="46" pos:column="28">1<pos:position pos:line="46" pos:column="29"/></literal><operator pos:line="46" pos:column="29">)<pos:position pos:line="46" pos:column="30"/></operator></expr>)<pos:position pos:line="46" pos:column="31"/></condition><then pos:line="46" pos:column="31"> <block pos:line="46" pos:column="32">{
        <comment type="block" pos:line="47" pos:column="9">/* not a power of two, i.e. more than one flag specified */</comment>
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">apr_file_printf<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">errfile<pos:position pos:line="48" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="34">"%s: only one of -c -n -v -D may be specified"<pos:position pos:line="48" pos:column="80"/></literal> <name pos:line="48" pos:column="81">NL<pos:position pos:line="48" pos:column="83"/></name></expr></argument>,
            <argument><expr><name><name pos:line="49" pos:column="13">argv<pos:position pos:line="49" pos:column="17"/></name><index pos:line="49" pos:column="17">[<expr><literal type="number" pos:line="49" pos:column="18">0<pos:position pos:line="49" pos:column="19"/></literal></expr>]<pos:position pos:line="49" pos:column="20"/></index></name></expr></argument>)<pos:position pos:line="49" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">exit<pos:position pos:line="50" pos:column="13"/></name><argument_list pos:line="50" pos:column="13">(<argument><expr><name pos:line="50" pos:column="14">ERR_SYNTAX<pos:position pos:line="50" pos:column="24"/></name></expr></argument>)<pos:position pos:line="50" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><operator pos:line="52" pos:column="9">(<pos:position pos:line="52" pos:column="10"/></operator><operator pos:line="52" pos:column="10">*<pos:position pos:line="52" pos:column="11"/></operator><name pos:line="52" pos:column="11">mask<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">&amp;<pos:position pos:line="52" pos:column="21"/></operator> <name pos:line="52" pos:column="18">APHTP_VERIFY<pos:position pos:line="52" pos:column="30"/></name><operator pos:line="52" pos:column="30">)<pos:position pos:line="52" pos:column="31"/></operator> <operator pos:line="52" pos:column="32">&amp;&amp;<pos:position pos:line="52" pos:column="42"/></operator> <name><name pos:line="52" pos:column="35">ctx<pos:position pos:line="52" pos:column="38"/></name><operator pos:line="52" pos:column="38">-&gt;<pos:position pos:line="52" pos:column="43"/></operator><name pos:line="52" pos:column="40">passwd_src<pos:position pos:line="52" pos:column="50"/></name></name> <operator pos:line="52" pos:column="51">==<pos:position pos:line="52" pos:column="53"/></operator> <name pos:line="52" pos:column="54">PW_PROMPT<pos:position pos:line="52" pos:column="63"/></name></expr>)<pos:position pos:line="52" pos:column="64"/></condition><then pos:line="52" pos:column="64">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="53" pos:column="9">ctx<pos:position pos:line="53" pos:column="12"/></name><operator pos:line="53" pos:column="12">-&gt;<pos:position pos:line="53" pos:column="17"/></operator><name pos:line="53" pos:column="14">passwd_src<pos:position pos:line="53" pos:column="24"/></name></name> <operator pos:line="53" pos:column="25">=<pos:position pos:line="53" pos:column="26"/></operator> <name pos:line="53" pos:column="27">PW_PROMPT_VERIFY<pos:position pos:line="53" pos:column="43"/></name></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="55" pos:column="5">/*
     * Make sure we still have exactly the right number of arguments left
     * (the filename, the username, and possibly the password if -b was
     * specified).
     */</comment>
    <expr_stmt><expr><name pos:line="60" pos:column="5">i<pos:position pos:line="60" pos:column="6"/></name> <operator pos:line="60" pos:column="7">=<pos:position pos:line="60" pos:column="8"/></operator> <name><name pos:line="60" pos:column="9">state<pos:position pos:line="60" pos:column="14"/></name><operator pos:line="60" pos:column="14">-&gt;<pos:position pos:line="60" pos:column="19"/></operator><name pos:line="60" pos:column="16">ind<pos:position pos:line="60" pos:column="19"/></name></name></expr>;<pos:position pos:line="60" pos:column="20"/></expr_stmt>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><operator pos:line="61" pos:column="9">(<pos:position pos:line="61" pos:column="10"/></operator><name pos:line="61" pos:column="10">argc<pos:position pos:line="61" pos:column="14"/></name> <operator pos:line="61" pos:column="15">-<pos:position pos:line="61" pos:column="16"/></operator> <name pos:line="61" pos:column="17">i<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">)<pos:position pos:line="61" pos:column="19"/></operator> <operator pos:line="61" pos:column="20">!=<pos:position pos:line="61" pos:column="22"/></operator> <name pos:line="61" pos:column="23">args_left<pos:position pos:line="61" pos:column="32"/></name></expr>)<pos:position pos:line="61" pos:column="33"/></condition><then pos:line="61" pos:column="33"> <block pos:line="61" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">usage<pos:position pos:line="62" pos:column="14"/></name><argument_list pos:line="62" pos:column="14">()<pos:position pos:line="62" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><operator pos:line="65" pos:column="9">!<pos:position pos:line="65" pos:column="10"/></operator><operator pos:line="65" pos:column="10">(<pos:position pos:line="65" pos:column="11"/></operator><operator pos:line="65" pos:column="11">*<pos:position pos:line="65" pos:column="12"/></operator><name pos:line="65" pos:column="12">mask<pos:position pos:line="65" pos:column="16"/></name> <operator pos:line="65" pos:column="17">&amp;<pos:position pos:line="65" pos:column="22"/></operator> <name pos:line="65" pos:column="19">APHTP_NOFILE<pos:position pos:line="65" pos:column="31"/></name><operator pos:line="65" pos:column="31">)<pos:position pos:line="65" pos:column="32"/></operator></expr>)<pos:position pos:line="65" pos:column="33"/></condition><then pos:line="65" pos:column="33"> <block pos:line="65" pos:column="34">{
        <if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><call><name pos:line="66" pos:column="13">strlen<pos:position pos:line="66" pos:column="19"/></name><argument_list pos:line="66" pos:column="19">(<argument><expr><name><name pos:line="66" pos:column="20">argv<pos:position pos:line="66" pos:column="24"/></name><index pos:line="66" pos:column="24">[<expr><name pos:line="66" pos:column="25">i<pos:position pos:line="66" pos:column="26"/></name></expr>]<pos:position pos:line="66" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="66" pos:column="28"/></argument_list></call> <operator pos:line="66" pos:column="29">&gt;<pos:position pos:line="66" pos:column="33"/></operator> <operator pos:line="66" pos:column="31">(<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="32">APR_PATH_MAX<pos:position pos:line="66" pos:column="44"/></name> <operator pos:line="66" pos:column="45">-<pos:position pos:line="66" pos:column="46"/></operator> <literal type="number" pos:line="66" pos:column="47">1<pos:position pos:line="66" pos:column="48"/></literal><operator pos:line="66" pos:column="48">)<pos:position pos:line="66" pos:column="49"/></operator></expr>)<pos:position pos:line="66" pos:column="50"/></condition><then pos:line="66" pos:column="50"> <block pos:line="66" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="67" pos:column="13">apr_file_printf<pos:position pos:line="67" pos:column="28"/></name><argument_list pos:line="67" pos:column="28">(<argument><expr><name pos:line="67" pos:column="29">errfile<pos:position pos:line="67" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="38">"%s: filename too long"<pos:position pos:line="67" pos:column="61"/></literal> <name pos:line="67" pos:column="62">NL<pos:position pos:line="67" pos:column="64"/></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="66">argv<pos:position pos:line="67" pos:column="70"/></name><index pos:line="67" pos:column="70">[<expr><literal type="number" pos:line="67" pos:column="71">0<pos:position pos:line="67" pos:column="72"/></literal></expr>]<pos:position pos:line="67" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="67" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">exit<pos:position pos:line="68" pos:column="17"/></name><argument_list pos:line="68" pos:column="17">(<argument><expr><name pos:line="68" pos:column="18">ERR_OVERFLOW<pos:position pos:line="68" pos:column="30"/></name></expr></argument>)<pos:position pos:line="68" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="70" pos:column="9">*<pos:position pos:line="70" pos:column="10"/></operator><name pos:line="70" pos:column="10">pwfilename<pos:position pos:line="70" pos:column="20"/></name> <operator pos:line="70" pos:column="21">=<pos:position pos:line="70" pos:column="22"/></operator> <call><name pos:line="70" pos:column="23">apr_pstrdup<pos:position pos:line="70" pos:column="34"/></name><argument_list pos:line="70" pos:column="34">(<argument><expr><name pos:line="70" pos:column="35">pool<pos:position pos:line="70" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="41">argv<pos:position pos:line="70" pos:column="45"/></name><index pos:line="70" pos:column="45">[<expr><name pos:line="70" pos:column="46">i<pos:position pos:line="70" pos:column="47"/></name><operator pos:line="70" pos:column="47">++<pos:position pos:line="70" pos:column="49"/></operator></expr>]<pos:position pos:line="70" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="70" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>
    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><call><name pos:line="72" pos:column="9">strlen<pos:position pos:line="72" pos:column="15"/></name><argument_list pos:line="72" pos:column="15">(<argument><expr><name><name pos:line="72" pos:column="16">argv<pos:position pos:line="72" pos:column="20"/></name><index pos:line="72" pos:column="20">[<expr><name pos:line="72" pos:column="21">i<pos:position pos:line="72" pos:column="22"/></name></expr>]<pos:position pos:line="72" pos:column="23"/></index></name></expr></argument>)<pos:position pos:line="72" pos:column="24"/></argument_list></call> <operator pos:line="72" pos:column="25">&gt;<pos:position pos:line="72" pos:column="29"/></operator> <operator pos:line="72" pos:column="27">(<pos:position pos:line="72" pos:column="28"/></operator><name pos:line="72" pos:column="28">MAX_STRING_LEN<pos:position pos:line="72" pos:column="42"/></name> <operator pos:line="72" pos:column="43">-<pos:position pos:line="72" pos:column="44"/></operator> <literal type="number" pos:line="72" pos:column="45">1<pos:position pos:line="72" pos:column="46"/></literal><operator pos:line="72" pos:column="46">)<pos:position pos:line="72" pos:column="47"/></operator></expr>)<pos:position pos:line="72" pos:column="48"/></condition><then pos:line="72" pos:column="48"> <block pos:line="72" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">apr_file_printf<pos:position pos:line="73" pos:column="24"/></name><argument_list pos:line="73" pos:column="24">(<argument><expr><name pos:line="73" pos:column="25">errfile<pos:position pos:line="73" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="34">"%s: username too long (&gt; %d)"<pos:position pos:line="73" pos:column="67"/></literal> <name pos:line="73" pos:column="65">NL<pos:position pos:line="73" pos:column="67"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="74" pos:column="25">argv<pos:position pos:line="74" pos:column="29"/></name><index pos:line="74" pos:column="29">[<expr><literal type="number" pos:line="74" pos:column="30">0<pos:position pos:line="74" pos:column="31"/></literal></expr>]<pos:position pos:line="74" pos:column="32"/></index></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="34">MAX_STRING_LEN<pos:position pos:line="74" pos:column="48"/></name> <operator pos:line="74" pos:column="49">-<pos:position pos:line="74" pos:column="50"/></operator> <literal type="number" pos:line="74" pos:column="51">1<pos:position pos:line="74" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">exit<pos:position pos:line="75" pos:column="13"/></name><argument_list pos:line="75" pos:column="13">(<argument><expr><name pos:line="75" pos:column="14">ERR_OVERFLOW<pos:position pos:line="75" pos:column="26"/></name></expr></argument>)<pos:position pos:line="75" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="77" pos:column="5">*<pos:position pos:line="77" pos:column="6"/></operator><name pos:line="77" pos:column="6">user<pos:position pos:line="77" pos:column="10"/></name> <operator pos:line="77" pos:column="11">=<pos:position pos:line="77" pos:column="12"/></operator> <call><name pos:line="77" pos:column="13">apr_pstrdup<pos:position pos:line="77" pos:column="24"/></name><argument_list pos:line="77" pos:column="24">(<argument><expr><name pos:line="77" pos:column="25">pool<pos:position pos:line="77" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="31">argv<pos:position pos:line="77" pos:column="35"/></name><index pos:line="77" pos:column="35">[<expr><name pos:line="77" pos:column="36">i<pos:position pos:line="77" pos:column="37"/></name><operator pos:line="77" pos:column="37">++<pos:position pos:line="77" pos:column="39"/></operator></expr>]<pos:position pos:line="77" pos:column="40"/></index></name></expr></argument>)<pos:position pos:line="77" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="42"/></expr_stmt>
    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><operator pos:line="78" pos:column="9">(<pos:position pos:line="78" pos:column="10"/></operator><name pos:line="78" pos:column="10">arg<pos:position pos:line="78" pos:column="13"/></name> <operator pos:line="78" pos:column="14">=<pos:position pos:line="78" pos:column="15"/></operator> <call><name pos:line="78" pos:column="16">strchr<pos:position pos:line="78" pos:column="22"/></name><argument_list pos:line="78" pos:column="22">(<argument><expr><operator pos:line="78" pos:column="23">*<pos:position pos:line="78" pos:column="24"/></operator><name pos:line="78" pos:column="24">user<pos:position pos:line="78" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="78" pos:column="30">':'<pos:position pos:line="78" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="34"/></argument_list></call><operator pos:line="78" pos:column="34">)<pos:position pos:line="78" pos:column="35"/></operator> <operator pos:line="78" pos:column="36">!=<pos:position pos:line="78" pos:column="38"/></operator> <name pos:line="78" pos:column="39">NULL<pos:position pos:line="78" pos:column="43"/></name></expr>)<pos:position pos:line="78" pos:column="44"/></condition><then pos:line="78" pos:column="44"> <block pos:line="78" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">apr_file_printf<pos:position pos:line="79" pos:column="24"/></name><argument_list pos:line="79" pos:column="24">(<argument><expr><name pos:line="79" pos:column="25">errfile<pos:position pos:line="79" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="34">"%s: username contains illegal "<pos:position pos:line="79" pos:column="66"/></literal>
                        <literal type="string" pos:line="80" pos:column="25">"character '%c'"<pos:position pos:line="80" pos:column="41"/></literal> <name pos:line="80" pos:column="42">NL<pos:position pos:line="80" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="46">argv<pos:position pos:line="80" pos:column="50"/></name><index pos:line="80" pos:column="50">[<expr><literal type="number" pos:line="80" pos:column="51">0<pos:position pos:line="80" pos:column="52"/></literal></expr>]<pos:position pos:line="80" pos:column="53"/></index></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="55">*<pos:position pos:line="80" pos:column="56"/></operator><name pos:line="80" pos:column="56">arg<pos:position pos:line="80" pos:column="59"/></name></expr></argument>)<pos:position pos:line="80" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">exit<pos:position pos:line="81" pos:column="13"/></name><argument_list pos:line="81" pos:column="13">(<argument><expr><name pos:line="81" pos:column="14">ERR_BADUSER<pos:position pos:line="81" pos:column="25"/></name></expr></argument>)<pos:position pos:line="81" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if>
    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name><name pos:line="83" pos:column="9">ctx<pos:position pos:line="83" pos:column="12"/></name><operator pos:line="83" pos:column="12">-&gt;<pos:position pos:line="83" pos:column="17"/></operator><name pos:line="83" pos:column="14">passwd_src<pos:position pos:line="83" pos:column="24"/></name></name> <operator pos:line="83" pos:column="25">==<pos:position pos:line="83" pos:column="27"/></operator> <name pos:line="83" pos:column="28">PW_ARG<pos:position pos:line="83" pos:column="34"/></name></expr>)<pos:position pos:line="83" pos:column="35"/></condition><then pos:line="83" pos:column="35"> <block pos:line="83" pos:column="36">{
        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><call><name pos:line="84" pos:column="13">strlen<pos:position pos:line="84" pos:column="19"/></name><argument_list pos:line="84" pos:column="19">(<argument><expr><name><name pos:line="84" pos:column="20">argv<pos:position pos:line="84" pos:column="24"/></name><index pos:line="84" pos:column="24">[<expr><name pos:line="84" pos:column="25">i<pos:position pos:line="84" pos:column="26"/></name></expr>]<pos:position pos:line="84" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="84" pos:column="28"/></argument_list></call> <operator pos:line="84" pos:column="29">&gt;<pos:position pos:line="84" pos:column="33"/></operator> <operator pos:line="84" pos:column="31">(<pos:position pos:line="84" pos:column="32"/></operator><name pos:line="84" pos:column="32">MAX_STRING_LEN<pos:position pos:line="84" pos:column="46"/></name> <operator pos:line="84" pos:column="47">-<pos:position pos:line="84" pos:column="48"/></operator> <literal type="number" pos:line="84" pos:column="49">1<pos:position pos:line="84" pos:column="50"/></literal><operator pos:line="84" pos:column="50">)<pos:position pos:line="84" pos:column="51"/></operator></expr>)<pos:position pos:line="84" pos:column="52"/></condition><then pos:line="84" pos:column="52"> <block pos:line="84" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">apr_file_printf<pos:position pos:line="85" pos:column="28"/></name><argument_list pos:line="85" pos:column="28">(<argument><expr><name pos:line="85" pos:column="29">errfile<pos:position pos:line="85" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="38">"%s: password too long (&gt; %d)"<pos:position pos:line="85" pos:column="71"/></literal> <name pos:line="85" pos:column="69">NL<pos:position pos:line="85" pos:column="71"/></name></expr></argument>,
                <argument><expr><name><name pos:line="86" pos:column="17">argv<pos:position pos:line="86" pos:column="21"/></name><index pos:line="86" pos:column="21">[<expr><literal type="number" pos:line="86" pos:column="22">0<pos:position pos:line="86" pos:column="23"/></literal></expr>]<pos:position pos:line="86" pos:column="24"/></index></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="26">MAX_STRING_LEN<pos:position pos:line="86" pos:column="40"/></name></expr></argument>)<pos:position pos:line="86" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">exit<pos:position pos:line="87" pos:column="17"/></name><argument_list pos:line="87" pos:column="17">(<argument><expr><name pos:line="87" pos:column="18">ERR_OVERFLOW<pos:position pos:line="87" pos:column="30"/></name></expr></argument>)<pos:position pos:line="87" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="88" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="89" pos:column="9">ctx<pos:position pos:line="89" pos:column="12"/></name><operator pos:line="89" pos:column="12">-&gt;<pos:position pos:line="89" pos:column="17"/></operator><name pos:line="89" pos:column="14">passwd<pos:position pos:line="89" pos:column="20"/></name></name> <operator pos:line="89" pos:column="21">=<pos:position pos:line="89" pos:column="22"/></operator> <call><name pos:line="89" pos:column="23">apr_pstrdup<pos:position pos:line="89" pos:column="34"/></name><argument_list pos:line="89" pos:column="34">(<argument><expr><name pos:line="89" pos:column="35">pool<pos:position pos:line="89" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="41">argv<pos:position pos:line="89" pos:column="45"/></name><index pos:line="89" pos:column="45">[<expr><name pos:line="89" pos:column="46">i<pos:position pos:line="89" pos:column="47"/></name></expr>]<pos:position pos:line="89" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="89" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2419_httpd-2.0.64.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">makroom<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">apr_sdbm_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">db<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">long<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">hash<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">need<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">long<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">newp<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">twin<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">PBLKSIZ<pos:position pos:line="4" pos:column="22"/></name></expr>]<pos:position pos:line="4" pos:column="23"/></index></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">pag<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><name><name pos:line="5" pos:column="17">db<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">-&gt;<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="21">pagbuf<pos:position pos:line="5" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></operator><operator pos:line="6" pos:column="11">new<pos:position pos:line="6" pos:column="14"/></operator> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <name pos:line="6" pos:column="17">twin<pos:position pos:line="6" pos:column="21"/></name></expr>;<pos:position pos:line="6" pos:column="22"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">register<pos:position pos:line="7" pos:column="13"/></specifier> <name pos:line="7" pos:column="14">int<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">smax<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">SPLTMAX<pos:position pos:line="7" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">status<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>

    <do pos:line="10" pos:column="5">do <block pos:line="10" pos:column="8">{
        <comment type="block" pos:line="11" pos:column="9">/*
         * split the current page
         */</comment>
        <expr_stmt><expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">void<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">)<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">splpage<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">pag<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="29">new<pos:position pos:line="14" pos:column="32"/></operator></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="34">db<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">-&gt;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="38">hmask<pos:position pos:line="14" pos:column="43"/></name></name> <operator pos:line="14" pos:column="44">+<pos:position pos:line="14" pos:column="45"/></operator> <literal type="number" pos:line="14" pos:column="46">1<pos:position pos:line="14" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>
        <comment type="block" pos:line="15" pos:column="9">/*
         * address of the new page
         */</comment>
        <expr_stmt><expr><name pos:line="18" pos:column="9">newp<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <operator pos:line="18" pos:column="16">(<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">hash<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">&amp;<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="24">db<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">-&gt;<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="28">hmask<pos:position pos:line="18" pos:column="33"/></name></name><operator pos:line="18" pos:column="33">)<pos:position pos:line="18" pos:column="34"/></operator> <operator pos:line="18" pos:column="35">|<pos:position pos:line="18" pos:column="36"/></operator> <operator pos:line="18" pos:column="37">(<pos:position pos:line="18" pos:column="38"/></operator><name><name pos:line="18" pos:column="38">db<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">-&gt;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="42">hmask<pos:position pos:line="18" pos:column="47"/></name></name> <operator pos:line="18" pos:column="48">+<pos:position pos:line="18" pos:column="49"/></operator> <literal type="number" pos:line="18" pos:column="50">1<pos:position pos:line="18" pos:column="51"/></literal><operator pos:line="18" pos:column="51">)<pos:position pos:line="18" pos:column="52"/></operator></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>

        <comment type="block" pos:line="20" pos:column="9">/*
         * write delay, read avoidence/cache shuffle:
         * select the page for incoming pair: if key is to go to the new page,
         * write out the previous one, and copy the new one over, thus making
         * it the current page. If not, simply write the new page, and we are
         * still looking at the page of interest. current page is not updated
         * here, as sdbm_store will do so, after it inserts the incoming pair.
         */</comment>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">hash<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">&amp;<pos:position pos:line="28" pos:column="23"/></operator> <operator pos:line="28" pos:column="20">(<pos:position pos:line="28" pos:column="21"/></operator><name><name pos:line="28" pos:column="21">db<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">-&gt;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="25">hmask<pos:position pos:line="28" pos:column="30"/></name></name> <operator pos:line="28" pos:column="31">+<pos:position pos:line="28" pos:column="32"/></operator> <literal type="number" pos:line="28" pos:column="33">1<pos:position pos:line="28" pos:column="34"/></literal><operator pos:line="28" pos:column="34">)<pos:position pos:line="28" pos:column="35"/></operator></expr>)<pos:position pos:line="28" pos:column="36"/></condition><then pos:line="28" pos:column="36"> <block pos:line="28" pos:column="37">{
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><operator pos:line="29" pos:column="17">(<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">status<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">=<pos:position pos:line="29" pos:column="26"/></operator> <call><name pos:line="29" pos:column="27">write_page<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">db<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="42">db<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">-&gt;<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="46">pagbuf<pos:position pos:line="29" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="54">db<pos:position pos:line="29" pos:column="56"/></name><operator pos:line="29" pos:column="56">-&gt;<pos:position pos:line="29" pos:column="61"/></operator><name pos:line="29" pos:column="58">pagbno<pos:position pos:line="29" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call><operator pos:line="29" pos:column="65">)<pos:position pos:line="29" pos:column="66"/></operator> 
                        <operator pos:line="30" pos:column="25">!=<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="28">APR_SUCCESS<pos:position pos:line="30" pos:column="39"/></name></expr>)<pos:position pos:line="30" pos:column="40"/></condition><then pos:line="30" pos:column="40">
                <block type="pseudo"><return pos:line="31" pos:column="17">return <expr><name pos:line="31" pos:column="24">status<pos:position pos:line="31" pos:column="30"/></name></expr>;<pos:position pos:line="31" pos:column="31"/></return></block></then></if>
                    
            <expr_stmt><expr><name><name pos:line="33" pos:column="13">db<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">pagbno<pos:position pos:line="33" pos:column="23"/></name></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="26">newp<pos:position pos:line="33" pos:column="30"/></name></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="34" pos:column="13">(<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">void<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">)<pos:position pos:line="34" pos:column="19"/></operator> <call><name pos:line="34" pos:column="20">memcpy<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">pag<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="32">new<pos:position pos:line="34" pos:column="35"/></operator></expr></argument>, <argument><expr><name pos:line="34" pos:column="37">PBLKSIZ<pos:position pos:line="34" pos:column="44"/></name></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></then>
        <else pos:line="36" pos:column="9">else <block pos:line="36" pos:column="14">{
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><operator pos:line="37" pos:column="17">(<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="18">status<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <call><name pos:line="37" pos:column="27">write_page<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><name pos:line="37" pos:column="38">db<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="42">new<pos:position pos:line="37" pos:column="45"/></operator></expr></argument>, <argument><expr><name pos:line="37" pos:column="47">newp<pos:position pos:line="37" pos:column="51"/></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call><operator pos:line="37" pos:column="52">)<pos:position pos:line="37" pos:column="53"/></operator> <operator pos:line="37" pos:column="54">!=<pos:position pos:line="37" pos:column="56"/></operator> <name pos:line="37" pos:column="57">APR_SUCCESS<pos:position pos:line="37" pos:column="68"/></name></expr>)<pos:position pos:line="37" pos:column="69"/></condition><then pos:line="37" pos:column="69">
                <block type="pseudo"><return pos:line="38" pos:column="17">return <expr><name pos:line="38" pos:column="24">status<pos:position pos:line="38" pos:column="30"/></name></expr>;<pos:position pos:line="38" pos:column="31"/></return></block></then></if>
        }<pos:position pos:line="39" pos:column="10"/></block></else></if>

        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">(<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">status<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <call><name pos:line="41" pos:column="23">setdbit<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><name pos:line="41" pos:column="31">db<pos:position pos:line="41" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="35">db<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">-&gt;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="39">curbit<pos:position pos:line="41" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call><operator pos:line="41" pos:column="46">)<pos:position pos:line="41" pos:column="47"/></operator> <operator pos:line="41" pos:column="48">!=<pos:position pos:line="41" pos:column="50"/></operator> <name pos:line="41" pos:column="51">APR_SUCCESS<pos:position pos:line="41" pos:column="62"/></name></expr>)<pos:position pos:line="41" pos:column="63"/></condition><then pos:line="41" pos:column="63">
            <block type="pseudo"><return pos:line="42" pos:column="13">return <expr><name pos:line="42" pos:column="20">status<pos:position pos:line="42" pos:column="26"/></name></expr>;<pos:position pos:line="42" pos:column="27"/></return></block></then></if>
        <comment type="block" pos:line="43" pos:column="9">/*
         * see if we have enough room now
         */</comment>
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><call><name pos:line="46" pos:column="13">fitpair<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">pag<pos:position pos:line="46" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="26">need<pos:position pos:line="46" pos:column="30"/></name></expr></argument>)<pos:position pos:line="46" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="32"/></condition><then pos:line="46" pos:column="32">
            <block type="pseudo"><return pos:line="47" pos:column="13">return <expr><name pos:line="47" pos:column="20">APR_SUCCESS<pos:position pos:line="47" pos:column="31"/></name></expr>;<pos:position pos:line="47" pos:column="32"/></return></block></then></if>
        <comment type="block" pos:line="48" pos:column="9">/*
         * try again... update curbit and hmask as getpage would have
         * done. because of our update of the current page, we do not
         * need to read in anything. BUT we have to write the current
         * [deferred] page out, as the window of failure is too great.
         */</comment>
        <expr_stmt><expr><name><name pos:line="54" pos:column="9">db<pos:position pos:line="54" pos:column="11"/></name><operator pos:line="54" pos:column="11">-&gt;<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="13">curbit<pos:position pos:line="54" pos:column="19"/></name></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <literal type="number" pos:line="54" pos:column="22">2<pos:position pos:line="54" pos:column="23"/></literal> <operator pos:line="54" pos:column="24">*<pos:position pos:line="54" pos:column="25"/></operator> <name><name pos:line="54" pos:column="26">db<pos:position pos:line="54" pos:column="28"/></name><operator pos:line="54" pos:column="28">-&gt;<pos:position pos:line="54" pos:column="33"/></operator><name pos:line="54" pos:column="30">curbit<pos:position pos:line="54" pos:column="36"/></name></name>
                   <operator pos:line="55" pos:column="20">+<pos:position pos:line="55" pos:column="21"/></operator> <operator pos:line="55" pos:column="22">(<pos:position pos:line="55" pos:column="23"/></operator><ternary><condition><expr><operator pos:line="55" pos:column="23">(<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="24">hash<pos:position pos:line="55" pos:column="28"/></name> <operator pos:line="55" pos:column="29">&amp;<pos:position pos:line="55" pos:column="34"/></operator> <operator pos:line="55" pos:column="31">(<pos:position pos:line="55" pos:column="32"/></operator><name><name pos:line="55" pos:column="32">db<pos:position pos:line="55" pos:column="34"/></name><operator pos:line="55" pos:column="34">-&gt;<pos:position pos:line="55" pos:column="39"/></operator><name pos:line="55" pos:column="36">hmask<pos:position pos:line="55" pos:column="41"/></name></name> <operator pos:line="55" pos:column="42">+<pos:position pos:line="55" pos:column="43"/></operator> <literal type="number" pos:line="55" pos:column="44">1<pos:position pos:line="55" pos:column="45"/></literal><operator pos:line="55" pos:column="45">)<pos:position pos:line="55" pos:column="46"/></operator><operator pos:line="55" pos:column="46">)<pos:position pos:line="55" pos:column="47"/></operator></expr> ?<pos:position pos:line="55" pos:column="49"/></condition><then pos:line="55" pos:column="49"> <expr><literal type="number" pos:line="55" pos:column="50">2<pos:position pos:line="55" pos:column="51"/></literal></expr> <pos:position pos:line="55" pos:column="52"/></then><else pos:line="55" pos:column="52">: <expr><literal type="number" pos:line="55" pos:column="54">1<pos:position pos:line="55" pos:column="55"/></literal></expr></else></ternary><operator pos:line="55" pos:column="55">)<pos:position pos:line="55" pos:column="56"/></operator></expr>;<pos:position pos:line="55" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="56" pos:column="9">db<pos:position pos:line="56" pos:column="11"/></name><operator pos:line="56" pos:column="11">-&gt;<pos:position pos:line="56" pos:column="16"/></operator><name pos:line="56" pos:column="13">hmask<pos:position pos:line="56" pos:column="18"/></name></name> <operator pos:line="56" pos:column="19">|=<pos:position pos:line="56" pos:column="21"/></operator> <name><name pos:line="56" pos:column="22">db<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">-&gt;<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="26">hmask<pos:position pos:line="56" pos:column="31"/></name></name> <operator pos:line="56" pos:column="32">+<pos:position pos:line="56" pos:column="33"/></operator> <literal type="number" pos:line="56" pos:column="34">1<pos:position pos:line="56" pos:column="35"/></literal></expr>;<pos:position pos:line="56" pos:column="36"/></expr_stmt>
            
        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><operator pos:line="58" pos:column="13">(<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="14">status<pos:position pos:line="58" pos:column="20"/></name> <operator pos:line="58" pos:column="21">=<pos:position pos:line="58" pos:column="22"/></operator> <call><name pos:line="58" pos:column="23">write_page<pos:position pos:line="58" pos:column="33"/></name><argument_list pos:line="58" pos:column="33">(<argument><expr><name pos:line="58" pos:column="34">db<pos:position pos:line="58" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="38">db<pos:position pos:line="58" pos:column="40"/></name><operator pos:line="58" pos:column="40">-&gt;<pos:position pos:line="58" pos:column="45"/></operator><name pos:line="58" pos:column="42">pagbuf<pos:position pos:line="58" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="50">db<pos:position pos:line="58" pos:column="52"/></name><operator pos:line="58" pos:column="52">-&gt;<pos:position pos:line="58" pos:column="57"/></operator><name pos:line="58" pos:column="54">pagbno<pos:position pos:line="58" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="61"/></argument_list></call><operator pos:line="58" pos:column="61">)<pos:position pos:line="58" pos:column="62"/></operator>
                    <operator pos:line="59" pos:column="21">!=<pos:position pos:line="59" pos:column="23"/></operator> <name pos:line="59" pos:column="24">APR_SUCCESS<pos:position pos:line="59" pos:column="35"/></name></expr>)<pos:position pos:line="59" pos:column="36"/></condition><then pos:line="59" pos:column="36">
            <block type="pseudo"><return pos:line="60" pos:column="13">return <expr><name pos:line="60" pos:column="20">status<pos:position pos:line="60" pos:column="26"/></name></expr>;<pos:position pos:line="60" pos:column="27"/></return></block></then></if>
            
    }<pos:position pos:line="62" pos:column="6"/></block> while <condition pos:line="62" pos:column="13">(<expr><operator pos:line="62" pos:column="14">--<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="16">smax<pos:position pos:line="62" pos:column="20"/></name></expr>)<pos:position pos:line="62" pos:column="21"/></condition>;<pos:position pos:line="62" pos:column="22"/></do>

    <comment type="block" pos:line="64" pos:column="5">/*
     * if we are here, this is real bad news. After SPLTMAX splits,
     * we still cannot fit the key. say goodnight.
     */</comment>
<cpp:if pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">if<pos:position pos:line="68" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="68" pos:column="5">0<pos:position pos:line="68" pos:column="6"/></literal></expr></cpp:if>
    (void) write(2, "sdbm: cannot insert after SPLTMAX attempts.\n", 44);
<cpp:endif pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">endif<pos:position pos:line="70" pos:column="7"/></cpp:directive></cpp:endif>
    <comment type="block" pos:line="71" pos:column="5">/* ### ENOSPC not really appropriate but better than nothing */</comment>
    <return pos:line="72" pos:column="5">return <expr><name pos:line="72" pos:column="12">APR_ENOSPC<pos:position pos:line="72" pos:column="22"/></name></expr>;<pos:position pos:line="72" pos:column="23"/></return>

}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

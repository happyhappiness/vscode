<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3638_httpd-2.2.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">path_remove_last_component<pos:position pos:line="1" pos:column="40"/></name> <parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">path<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">apr_pool_t<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">pool<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">newpath<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">path_canonicalize<pos:position pos:line="3" pos:column="44"/></name> <argument_list pos:line="3" pos:column="45">(<argument><expr><name pos:line="3" pos:column="46">path<pos:position pos:line="3" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="52">pool<pos:position pos:line="3" pos:column="56"/></name></expr></argument>)<pos:position pos:line="3" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="58"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    
    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><expr><name pos:line="6" pos:column="10">i<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <operator pos:line="6" pos:column="14">(<pos:position pos:line="6" pos:column="15"/></operator><call><name pos:line="6" pos:column="15">strlen<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">newpath<pos:position pos:line="6" pos:column="29"/></name></expr></argument>)<pos:position pos:line="6" pos:column="30"/></argument_list></call> <operator pos:line="6" pos:column="31">-<pos:position pos:line="6" pos:column="32"/></operator> <literal type="number" pos:line="6" pos:column="33">1<pos:position pos:line="6" pos:column="34"/></literal><operator pos:line="6" pos:column="34">)<pos:position pos:line="6" pos:column="35"/></operator></expr>;<pos:position pos:line="6" pos:column="36"/></init> <condition><expr><name pos:line="6" pos:column="37">i<pos:position pos:line="6" pos:column="38"/></name> <operator pos:line="6" pos:column="39">&gt;=<pos:position pos:line="6" pos:column="44"/></operator> <literal type="number" pos:line="6" pos:column="42">0<pos:position pos:line="6" pos:column="43"/></literal></expr>;<pos:position pos:line="6" pos:column="44"/></condition> <incr><expr><name pos:line="6" pos:column="45">i<pos:position pos:line="6" pos:column="46"/></name><operator pos:line="6" pos:column="46">--<pos:position pos:line="6" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="49"/></control> <block pos:line="6" pos:column="50">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">path<pos:position pos:line="7" pos:column="17"/></name><index pos:line="7" pos:column="17">[<expr><name pos:line="7" pos:column="18">i<pos:position pos:line="7" pos:column="19"/></name></expr>]<pos:position pos:line="7" pos:column="20"/></index></name> <operator pos:line="7" pos:column="21">==<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">PATH_SEPARATOR<pos:position pos:line="7" pos:column="38"/></name></expr>)<pos:position pos:line="7" pos:column="39"/></condition><then pos:line="7" pos:column="39">
            <block type="pseudo"><break pos:line="8" pos:column="13">break;<pos:position pos:line="8" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="9" pos:column="6"/></block></for>

    <return pos:line="11" pos:column="5">return <expr><call><name pos:line="11" pos:column="12">apr_pstrndup<pos:position pos:line="11" pos:column="24"/></name> <argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">pool<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="32">path<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="11" pos:column="38">(<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">i<pos:position pos:line="11" pos:column="40"/></name> <operator pos:line="11" pos:column="41">&lt;<pos:position pos:line="11" pos:column="45"/></operator> <literal type="number" pos:line="11" pos:column="43">0<pos:position pos:line="11" pos:column="44"/></literal><operator pos:line="11" pos:column="44">)<pos:position pos:line="11" pos:column="45"/></operator></expr> ?<pos:position pos:line="11" pos:column="47"/></condition><then pos:line="11" pos:column="47"> <expr><literal type="number" pos:line="11" pos:column="48">0<pos:position pos:line="11" pos:column="49"/></literal></expr> <pos:position pos:line="11" pos:column="50"/></then><else pos:line="11" pos:column="50">: <expr><name pos:line="11" pos:column="52">i<pos:position pos:line="11" pos:column="53"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="55"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4796.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">verify_ocsp_status<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">X509<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">cert<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">X509_STORE_CTX<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">ctx<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">conn_rec<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">c<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>, 
                              <parameter><decl><type><name pos:line="2" pos:column="31">SSLSrvConfigRec<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">sc<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">server_rec<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">s<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="3" pos:column="31">apr_pool_t<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">pool<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list> 
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">rc<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><name pos:line="5" pos:column="14">V_OCSP_CERTSTATUS_GOOD<pos:position pos:line="5" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">OCSP_RESPONSE<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">response<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><name pos:line="6" pos:column="31">NULL<pos:position pos:line="6" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">OCSP_BASICRESP<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">basicResponse<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><name pos:line="7" pos:column="37">NULL<pos:position pos:line="7" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">OCSP_REQUEST<pos:position pos:line="8" pos:column="17"/></name> <modifier pos:line="8" pos:column="18">*<pos:position pos:line="8" pos:column="19"/></modifier></type><name pos:line="8" pos:column="19">request<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><name pos:line="8" pos:column="29">NULL<pos:position pos:line="8" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">OCSP_CERTID<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">certID<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><name pos:line="9" pos:column="27">NULL<pos:position pos:line="9" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_uri_t<pos:position pos:line="10" pos:column="14"/></name> <modifier pos:line="10" pos:column="15">*<pos:position pos:line="10" pos:column="16"/></modifier></type><name pos:line="10" pos:column="16">ruri<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
   
    <expr_stmt><expr><name pos:line="12" pos:column="5">ruri<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <call><name pos:line="12" pos:column="12">determine_responder_uri<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><name pos:line="12" pos:column="36">sc<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="40">cert<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="46">c<pos:position pos:line="12" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="49">pool<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">ruri<pos:position pos:line="13" pos:column="14"/></name></expr>)<pos:position pos:line="13" pos:column="15"/></condition><then pos:line="13" pos:column="15"> <block pos:line="13" pos:column="16">{
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">V_OCSP_CERTSTATUS_UNKNOWN<pos:position pos:line="14" pos:column="41"/></name></expr>;<pos:position pos:line="14" pos:column="42"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">request<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">create_request<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">ctx<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="35">cert<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="41">&amp;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="42">certID<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">s<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="53">pool<pos:position pos:line="17" pos:column="57"/></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">request<pos:position pos:line="18" pos:column="16"/></name></expr>)<pos:position pos:line="18" pos:column="17"/></condition><then pos:line="18" pos:column="17"> <block pos:line="18" pos:column="18">{
        <comment type="block" pos:line="19" pos:column="9">/* Use default I/O timeout for the server. */</comment>
        <expr_stmt><expr><name pos:line="20" pos:column="9">response<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <call><name pos:line="20" pos:column="20">modssl_dispatch_ocsp_request<pos:position pos:line="20" pos:column="48"/></name><argument_list pos:line="20" pos:column="48">(<argument><expr><name pos:line="20" pos:column="49">ruri<pos:position pos:line="20" pos:column="53"/></name></expr></argument>, 
                                                <argument><expr><call><name pos:line="21" pos:column="49">mySrvFromConn<pos:position pos:line="21" pos:column="62"/></name><argument_list pos:line="21" pos:column="62">(<argument><expr><name pos:line="21" pos:column="63">c<pos:position pos:line="21" pos:column="64"/></name></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></call><operator pos:line="21" pos:column="65">-&gt;<pos:position pos:line="21" pos:column="70"/></operator><name pos:line="21" pos:column="67">timeout<pos:position pos:line="21" pos:column="74"/></name></expr></argument>,
                                                <argument><expr><name pos:line="22" pos:column="49">request<pos:position pos:line="22" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="58">c<pos:position pos:line="22" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="61">pool<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">request<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">||<pos:position pos:line="25" pos:column="20"/></operator> <operator pos:line="25" pos:column="21">!<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">response<pos:position pos:line="25" pos:column="30"/></name></expr>)<pos:position pos:line="25" pos:column="31"/></condition><then pos:line="25" pos:column="31"> <block pos:line="25" pos:column="32">{
        <expr_stmt><expr><name pos:line="26" pos:column="9">rc<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">V_OCSP_CERTSTATUS_UNKNOWN<pos:position pos:line="26" pos:column="39"/></name></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">rc<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">==<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">V_OCSP_CERTSTATUS_GOOD<pos:position pos:line="29" pos:column="37"/></name></expr>)<pos:position pos:line="29" pos:column="38"/></condition><then pos:line="29" pos:column="38"> <block pos:line="29" pos:column="39">{
        <decl_stmt><decl><type><name pos:line="30" pos:column="9">int<pos:position pos:line="30" pos:column="12"/></name></type> <name pos:line="30" pos:column="13">r<pos:position pos:line="30" pos:column="14"/></name> <init pos:line="30" pos:column="15">= <expr><call><name pos:line="30" pos:column="17">OCSP_response_status<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><name pos:line="30" pos:column="38">response<pos:position pos:line="30" pos:column="46"/></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="48"/></decl_stmt>

        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">r<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">!=<pos:position pos:line="32" pos:column="17"/></operator> <name pos:line="32" pos:column="18">OCSP_RESPONSE_STATUS_SUCCESSFUL<pos:position pos:line="32" pos:column="49"/></name></expr>)<pos:position pos:line="32" pos:column="50"/></condition><then pos:line="32" pos:column="50"> <block pos:line="32" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">ap_log_error<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">APLOG_MARK<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="38">APLOG_ERR<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="49">0<pos:position pos:line="33" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="52">s<pos:position pos:line="33" pos:column="53"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="34" pos:column="26">"OCSP response not successful: %d"<pos:position pos:line="34" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="62">rc<pos:position pos:line="34" pos:column="64"/></name></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><name pos:line="35" pos:column="13">rc<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <name pos:line="35" pos:column="18">V_OCSP_CERTSTATUS_UNKNOWN<pos:position pos:line="35" pos:column="43"/></name></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
    
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">rc<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">==<pos:position pos:line="39" pos:column="14"/></operator> <name pos:line="39" pos:column="15">V_OCSP_CERTSTATUS_GOOD<pos:position pos:line="39" pos:column="37"/></name></expr>)<pos:position pos:line="39" pos:column="38"/></condition><then pos:line="39" pos:column="38"> <block pos:line="39" pos:column="39">{
        <expr_stmt><expr><name pos:line="40" pos:column="9">basicResponse<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <call><name pos:line="40" pos:column="25">OCSP_response_get1_basic<pos:position pos:line="40" pos:column="49"/></name><argument_list pos:line="40" pos:column="49">(<argument><expr><name pos:line="40" pos:column="50">response<pos:position pos:line="40" pos:column="58"/></name></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="60"/></expr_stmt>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">basicResponse<pos:position pos:line="41" pos:column="27"/></name></expr>)<pos:position pos:line="41" pos:column="28"/></condition><then pos:line="41" pos:column="28"> <block pos:line="41" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">ssl_log_ssl_error<pos:position pos:line="42" pos:column="30"/></name><argument_list pos:line="42" pos:column="30">(<argument><expr><name pos:line="42" pos:column="31">SSLLOG_MARK<pos:position pos:line="42" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="44">APLOG_ERR<pos:position pos:line="42" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="55">s<pos:position pos:line="42" pos:column="56"/></name></expr></argument>)<pos:position pos:line="42" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">ap_log_cerror<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">APLOG_MARK<pos:position pos:line="43" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="39">APLOG_ERR<pos:position pos:line="43" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="50">0<pos:position pos:line="43" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="53">c<pos:position pos:line="43" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="44" pos:column="27">"could not retrieve OCSP basic response"<pos:position pos:line="44" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><name pos:line="45" pos:column="13">rc<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <name pos:line="45" pos:column="18">V_OCSP_CERTSTATUS_UNKNOWN<pos:position pos:line="45" pos:column="43"/></name></expr>;<pos:position pos:line="45" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
    
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">rc<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">==<pos:position pos:line="49" pos:column="14"/></operator> <name pos:line="49" pos:column="15">V_OCSP_CERTSTATUS_GOOD<pos:position pos:line="49" pos:column="37"/></name></expr>)<pos:position pos:line="49" pos:column="38"/></condition><then pos:line="49" pos:column="38"> <block pos:line="49" pos:column="39">{
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><call><name pos:line="50" pos:column="13">OCSP_check_nonce<pos:position pos:line="50" pos:column="29"/></name><argument_list pos:line="50" pos:column="29">(<argument><expr><name pos:line="50" pos:column="30">request<pos:position pos:line="50" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="39">basicResponse<pos:position pos:line="50" pos:column="52"/></name></expr></argument>)<pos:position pos:line="50" pos:column="53"/></argument_list></call> <operator pos:line="50" pos:column="54">!=<pos:position pos:line="50" pos:column="56"/></operator> <literal type="number" pos:line="50" pos:column="57">1<pos:position pos:line="50" pos:column="58"/></literal></expr>)<pos:position pos:line="50" pos:column="59"/></condition><then pos:line="50" pos:column="59"> <block pos:line="50" pos:column="60">{
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">ap_log_error<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><name pos:line="51" pos:column="26">APLOG_MARK<pos:position pos:line="51" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="38">APLOG_ERR<pos:position pos:line="51" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="49">0<pos:position pos:line="51" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="52">s<pos:position pos:line="51" pos:column="53"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="52" pos:column="25">"Bad OCSP responder answer (bad nonce)"<pos:position pos:line="52" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><name pos:line="53" pos:column="13">rc<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <name pos:line="53" pos:column="18">V_OCSP_CERTSTATUS_UNKNOWN<pos:position pos:line="53" pos:column="43"/></name></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name pos:line="57" pos:column="9">rc<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">==<pos:position pos:line="57" pos:column="14"/></operator> <name pos:line="57" pos:column="15">V_OCSP_CERTSTATUS_GOOD<pos:position pos:line="57" pos:column="37"/></name></expr>)<pos:position pos:line="57" pos:column="38"/></condition><then pos:line="57" pos:column="38"> <block pos:line="57" pos:column="39">{
        <comment type="block" pos:line="58" pos:column="9">/* TODO: allow flags configuration. */</comment>
        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><call><name pos:line="59" pos:column="13">OCSP_basic_verify<pos:position pos:line="59" pos:column="30"/></name><argument_list pos:line="59" pos:column="30">(<argument><expr><name pos:line="59" pos:column="31">basicResponse<pos:position pos:line="59" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="46">NULL<pos:position pos:line="59" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="52">ctx<pos:position pos:line="59" pos:column="55"/></name><operator pos:line="59" pos:column="55">-&gt;<pos:position pos:line="59" pos:column="60"/></operator><name pos:line="59" pos:column="57">ctx<pos:position pos:line="59" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="62">0<pos:position pos:line="59" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="64"/></argument_list></call> <operator pos:line="59" pos:column="65">!=<pos:position pos:line="59" pos:column="67"/></operator> <literal type="number" pos:line="59" pos:column="68">1<pos:position pos:line="59" pos:column="69"/></literal></expr>)<pos:position pos:line="59" pos:column="70"/></condition><then pos:line="59" pos:column="70"> <block pos:line="59" pos:column="71">{
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">ssl_log_ssl_error<pos:position pos:line="60" pos:column="30"/></name><argument_list pos:line="60" pos:column="30">(<argument><expr><name pos:line="60" pos:column="31">SSLLOG_MARK<pos:position pos:line="60" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="44">APLOG_ERR<pos:position pos:line="60" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="55">s<pos:position pos:line="60" pos:column="56"/></name></expr></argument>)<pos:position pos:line="60" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">ap_log_error<pos:position pos:line="61" pos:column="25"/></name><argument_list pos:line="61" pos:column="25">(<argument><expr><name pos:line="61" pos:column="26">APLOG_MARK<pos:position pos:line="61" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="38">APLOG_ERR<pos:position pos:line="61" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="49">0<pos:position pos:line="61" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="52">s<pos:position pos:line="61" pos:column="53"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="62" pos:column="25">"failed to verify the OCSP response"<pos:position pos:line="62" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><name pos:line="63" pos:column="13">rc<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">=<pos:position pos:line="63" pos:column="17"/></operator> <name pos:line="63" pos:column="18">V_OCSP_CERTSTATUS_UNKNOWN<pos:position pos:line="63" pos:column="43"/></name></expr>;<pos:position pos:line="63" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="64" pos:column="10"/></block></then></if>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>
    
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name pos:line="67" pos:column="9">rc<pos:position pos:line="67" pos:column="11"/></name> <operator pos:line="67" pos:column="12">==<pos:position pos:line="67" pos:column="14"/></operator> <name pos:line="67" pos:column="15">V_OCSP_CERTSTATUS_GOOD<pos:position pos:line="67" pos:column="37"/></name></expr>)<pos:position pos:line="67" pos:column="38"/></condition><then pos:line="67" pos:column="38"> <block pos:line="67" pos:column="39">{
        <decl_stmt><decl><type><name pos:line="68" pos:column="9">int<pos:position pos:line="68" pos:column="12"/></name></type> <name pos:line="68" pos:column="13">reason<pos:position pos:line="68" pos:column="19"/></name> <init pos:line="68" pos:column="20">= <expr><operator pos:line="68" pos:column="22">-<pos:position pos:line="68" pos:column="23"/></operator><literal type="number" pos:line="68" pos:column="23">1<pos:position pos:line="68" pos:column="24"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="68" pos:column="26">status<pos:position pos:line="68" pos:column="32"/></name></decl>;<pos:position pos:line="68" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="69" pos:column="9">ASN1_GENERALIZEDTIME<pos:position pos:line="69" pos:column="29"/></name> <modifier pos:line="69" pos:column="30">*<pos:position pos:line="69" pos:column="31"/></modifier></type><name pos:line="69" pos:column="31">thisup<pos:position pos:line="69" pos:column="37"/></name> <init pos:line="69" pos:column="38">= <expr><name pos:line="69" pos:column="40">NULL<pos:position pos:line="69" pos:column="44"/></name></expr></init></decl>, <modifier pos:line="69" pos:column="46">*<pos:position pos:line="69" pos:column="47"/></modifier><decl><type ref="prev"/><name pos:line="69" pos:column="47">nextup<pos:position pos:line="69" pos:column="53"/></name> <init pos:line="69" pos:column="54">= <expr><name pos:line="69" pos:column="56">NULL<pos:position pos:line="69" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="69" pos:column="61"/></decl_stmt>

        <expr_stmt><expr><name pos:line="71" pos:column="9">rc<pos:position pos:line="71" pos:column="11"/></name> <operator pos:line="71" pos:column="12">=<pos:position pos:line="71" pos:column="13"/></operator> <call><name pos:line="71" pos:column="14">OCSP_resp_find_status<pos:position pos:line="71" pos:column="35"/></name><argument_list pos:line="71" pos:column="35">(<argument><expr><name pos:line="71" pos:column="36">basicResponse<pos:position pos:line="71" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="51">certID<pos:position pos:line="71" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="59">&amp;<pos:position pos:line="71" pos:column="64"/></operator><name pos:line="71" pos:column="60">status<pos:position pos:line="71" pos:column="66"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="72" pos:column="36">&amp;<pos:position pos:line="72" pos:column="41"/></operator><name pos:line="72" pos:column="37">reason<pos:position pos:line="72" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="45">NULL<pos:position pos:line="72" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="51">&amp;<pos:position pos:line="72" pos:column="56"/></operator><name pos:line="72" pos:column="52">thisup<pos:position pos:line="72" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="60">&amp;<pos:position pos:line="72" pos:column="65"/></operator><name pos:line="72" pos:column="61">nextup<pos:position pos:line="72" pos:column="67"/></name></expr></argument>)<pos:position pos:line="72" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="69"/></expr_stmt>
        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">rc<pos:position pos:line="73" pos:column="15"/></name> <operator pos:line="73" pos:column="16">!=<pos:position pos:line="73" pos:column="18"/></operator> <literal type="number" pos:line="73" pos:column="19">1<pos:position pos:line="73" pos:column="20"/></literal></expr>)<pos:position pos:line="73" pos:column="21"/></condition><then pos:line="73" pos:column="21"> <block pos:line="73" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">ssl_log_ssl_error<pos:position pos:line="74" pos:column="30"/></name><argument_list pos:line="74" pos:column="30">(<argument><expr><name pos:line="74" pos:column="31">SSLLOG_MARK<pos:position pos:line="74" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="44">APLOG_ERR<pos:position pos:line="74" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="55">s<pos:position pos:line="74" pos:column="56"/></name></expr></argument>)<pos:position pos:line="74" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">ssl_log_cxerror<pos:position pos:line="75" pos:column="28"/></name><argument_list pos:line="75" pos:column="28">(<argument><expr><name pos:line="75" pos:column="29">SSLLOG_MARK<pos:position pos:line="75" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="42">APLOG_ERR<pos:position pos:line="75" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="53">0<pos:position pos:line="75" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="56">c<pos:position pos:line="75" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="59">cert<pos:position pos:line="75" pos:column="63"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="76" pos:column="29">"failed to retrieve OCSP response status"<pos:position pos:line="76" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><name pos:line="77" pos:column="13">rc<pos:position pos:line="77" pos:column="15"/></name> <operator pos:line="77" pos:column="16">=<pos:position pos:line="77" pos:column="17"/></operator> <name pos:line="77" pos:column="18">V_OCSP_CERTSTATUS_UNKNOWN<pos:position pos:line="77" pos:column="43"/></name></expr>;<pos:position pos:line="77" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="78" pos:column="10"/></block></then>
        <else pos:line="79" pos:column="9">else <block pos:line="79" pos:column="14">{
            <expr_stmt><expr><name pos:line="80" pos:column="13">rc<pos:position pos:line="80" pos:column="15"/></name> <operator pos:line="80" pos:column="16">=<pos:position pos:line="80" pos:column="17"/></operator> <name pos:line="80" pos:column="18">status<pos:position pos:line="80" pos:column="24"/></name></expr>;<pos:position pos:line="80" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="81" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="83" pos:column="9">/* TODO: make these configurable. */</comment>
<cpp:define pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">define<pos:position pos:line="84" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="84" pos:column="9">MAX_SKEW<pos:position pos:line="84" pos:column="17"/></name></cpp:macro> <cpp:value pos:line="84" pos:column="18">(60)<pos:position pos:line="84" pos:column="22"/></cpp:value></cpp:define>
<cpp:define pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">define<pos:position pos:line="85" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="85" pos:column="9">MAX_AGE<pos:position pos:line="85" pos:column="16"/></name></cpp:macro> <cpp:value pos:line="85" pos:column="17">(360)<pos:position pos:line="85" pos:column="22"/></cpp:value></cpp:define>

        <comment type="block" pos:line="87" pos:column="9">/* Check whether the response is inside the defined validity
         * period; otherwise fail.  */</comment>
        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name pos:line="89" pos:column="13">rc<pos:position pos:line="89" pos:column="15"/></name> <operator pos:line="89" pos:column="16">!=<pos:position pos:line="89" pos:column="18"/></operator> <name pos:line="89" pos:column="19">V_OCSP_CERTSTATUS_UNKNOWN<pos:position pos:line="89" pos:column="44"/></name></expr>)<pos:position pos:line="89" pos:column="45"/></condition><then pos:line="89" pos:column="45"> <block pos:line="89" pos:column="46">{
            <decl_stmt><decl><type><name pos:line="90" pos:column="13">int<pos:position pos:line="90" pos:column="16"/></name></type> <name pos:line="90" pos:column="17">vrc<pos:position pos:line="90" pos:column="20"/></name>  <init pos:line="90" pos:column="22">= <expr><call><name pos:line="90" pos:column="24">OCSP_check_validity<pos:position pos:line="90" pos:column="43"/></name><argument_list pos:line="90" pos:column="43">(<argument><expr><name pos:line="90" pos:column="44">thisup<pos:position pos:line="90" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="52">nextup<pos:position pos:line="90" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="60">MAX_SKEW<pos:position pos:line="90" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="70">MAX_AGE<pos:position pos:line="90" pos:column="77"/></name></expr></argument>)<pos:position pos:line="90" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="90" pos:column="79"/></decl_stmt>
            
            <if pos:line="92" pos:column="13">if <condition pos:line="92" pos:column="16">(<expr><name pos:line="92" pos:column="17">vrc<pos:position pos:line="92" pos:column="20"/></name> <operator pos:line="92" pos:column="21">!=<pos:position pos:line="92" pos:column="23"/></operator> <literal type="number" pos:line="92" pos:column="24">1<pos:position pos:line="92" pos:column="25"/></literal></expr>)<pos:position pos:line="92" pos:column="26"/></condition><then pos:line="92" pos:column="26"> <block pos:line="92" pos:column="27">{
                <expr_stmt><expr><call><name pos:line="93" pos:column="17">ssl_log_ssl_error<pos:position pos:line="93" pos:column="34"/></name><argument_list pos:line="93" pos:column="34">(<argument><expr><name pos:line="93" pos:column="35">SSLLOG_MARK<pos:position pos:line="93" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="48">APLOG_ERR<pos:position pos:line="93" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="59">s<pos:position pos:line="93" pos:column="60"/></name></expr></argument>)<pos:position pos:line="93" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="94" pos:column="17">ssl_log_cxerror<pos:position pos:line="94" pos:column="32"/></name><argument_list pos:line="94" pos:column="32">(<argument><expr><name pos:line="94" pos:column="33">SSLLOG_MARK<pos:position pos:line="94" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="46">APLOG_ERR<pos:position pos:line="94" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="57">0<pos:position pos:line="94" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="60">c<pos:position pos:line="94" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="63">cert<pos:position pos:line="94" pos:column="67"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="95" pos:column="33">"OCSP response outside validity period"<pos:position pos:line="95" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="74"/></expr_stmt>
                <expr_stmt><expr><name pos:line="96" pos:column="17">rc<pos:position pos:line="96" pos:column="19"/></name> <operator pos:line="96" pos:column="20">=<pos:position pos:line="96" pos:column="21"/></operator> <name pos:line="96" pos:column="22">V_OCSP_CERTSTATUS_UNKNOWN<pos:position pos:line="96" pos:column="47"/></name></expr>;<pos:position pos:line="96" pos:column="48"/></expr_stmt>
            }<pos:position pos:line="97" pos:column="14"/></block></then></if>
        }<pos:position pos:line="98" pos:column="10"/></block></then></if>

        <block pos:line="100" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="101" pos:column="13">int<pos:position pos:line="101" pos:column="16"/></name></type> <name pos:line="101" pos:column="17">level<pos:position pos:line="101" pos:column="22"/></name> <init pos:line="101" pos:column="23">= 
                <expr><ternary><condition><expr><operator pos:line="102" pos:column="17">(<pos:position pos:line="102" pos:column="18"/></operator><name pos:line="102" pos:column="18">status<pos:position pos:line="102" pos:column="24"/></name> <operator pos:line="102" pos:column="25">==<pos:position pos:line="102" pos:column="27"/></operator> <name pos:line="102" pos:column="28">V_OCSP_CERTSTATUS_GOOD<pos:position pos:line="102" pos:column="50"/></name><operator pos:line="102" pos:column="50">)<pos:position pos:line="102" pos:column="51"/></operator></expr> ?<pos:position pos:line="102" pos:column="53"/></condition><then pos:line="102" pos:column="53"> <expr><name pos:line="102" pos:column="54">APLOG_INFO<pos:position pos:line="102" pos:column="64"/></name></expr> <pos:position pos:line="102" pos:column="65"/></then><else pos:line="102" pos:column="65">: <expr><name pos:line="102" pos:column="67">APLOG_ERR<pos:position pos:line="102" pos:column="76"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="102" pos:column="77"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="103" pos:column="13">const<pos:position pos:line="103" pos:column="18"/></specifier> <name pos:line="103" pos:column="19">char<pos:position pos:line="103" pos:column="23"/></name> <modifier pos:line="103" pos:column="24">*<pos:position pos:line="103" pos:column="25"/></modifier></type><name pos:line="103" pos:column="25">result<pos:position pos:line="103" pos:column="31"/></name> <init pos:line="103" pos:column="32">= 
                <expr><ternary><condition><expr><name pos:line="104" pos:column="17">status<pos:position pos:line="104" pos:column="23"/></name> <operator pos:line="104" pos:column="24">==<pos:position pos:line="104" pos:column="26"/></operator> <name pos:line="104" pos:column="27">V_OCSP_CERTSTATUS_GOOD<pos:position pos:line="104" pos:column="49"/></name></expr> ?<pos:position pos:line="104" pos:column="51"/></condition><then pos:line="104" pos:column="51"> <expr><literal type="string" pos:line="104" pos:column="52">"good"<pos:position pos:line="104" pos:column="58"/></literal></expr> <pos:position pos:line="104" pos:column="59"/></then><else pos:line="104" pos:column="59">: 
                <expr><operator pos:line="105" pos:column="17">(<pos:position pos:line="105" pos:column="18"/></operator><ternary><condition><expr><name pos:line="105" pos:column="18">status<pos:position pos:line="105" pos:column="24"/></name> <operator pos:line="105" pos:column="25">==<pos:position pos:line="105" pos:column="27"/></operator> <name pos:line="105" pos:column="28">V_OCSP_CERTSTATUS_REVOKED<pos:position pos:line="105" pos:column="53"/></name></expr> ?<pos:position pos:line="105" pos:column="55"/></condition><then pos:line="105" pos:column="55"> <expr><literal type="string" pos:line="105" pos:column="56">"revoked"<pos:position pos:line="105" pos:column="65"/></literal></expr> <pos:position pos:line="105" pos:column="66"/></then><else pos:line="105" pos:column="66">: <expr><literal type="string" pos:line="105" pos:column="68">"unknown"<pos:position pos:line="105" pos:column="77"/></literal></expr></else></ternary><operator pos:line="105" pos:column="77">)<pos:position pos:line="105" pos:column="78"/></operator></expr></else></ternary></expr></init></decl>;<pos:position pos:line="105" pos:column="79"/></decl_stmt>

            <expr_stmt><expr><call><name pos:line="107" pos:column="13">ssl_log_cxerror<pos:position pos:line="107" pos:column="28"/></name><argument_list pos:line="107" pos:column="28">(<argument><expr><name pos:line="107" pos:column="29">SSLLOG_MARK<pos:position pos:line="107" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="42">level<pos:position pos:line="107" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="49">0<pos:position pos:line="107" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="52">c<pos:position pos:line="107" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="55">cert<pos:position pos:line="107" pos:column="59"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="108" pos:column="29">"OCSP validation completed, "<pos:position pos:line="108" pos:column="58"/></literal>
                            <literal type="string" pos:line="109" pos:column="29">"certificate status: %s (%d, %d)"<pos:position pos:line="109" pos:column="62"/></literal></expr></argument>,
                            <argument><expr><name pos:line="110" pos:column="29">result<pos:position pos:line="110" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="37">status<pos:position pos:line="110" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="45">reason<pos:position pos:line="110" pos:column="51"/></name></expr></argument>)<pos:position pos:line="110" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="111" pos:column="10"/></block>
    }<pos:position pos:line="112" pos:column="6"/></block></then></if>
    
    <if pos:line="114" pos:column="5">if <condition pos:line="114" pos:column="8">(<expr><name pos:line="114" pos:column="9">request<pos:position pos:line="114" pos:column="16"/></name></expr>)<pos:position pos:line="114" pos:column="17"/></condition><then pos:line="114" pos:column="17"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="18">OCSP_REQUEST_free<pos:position pos:line="114" pos:column="35"/></name><argument_list pos:line="114" pos:column="35">(<argument><expr><name pos:line="114" pos:column="36">request<pos:position pos:line="114" pos:column="43"/></name></expr></argument>)<pos:position pos:line="114" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="45"/></expr_stmt></block></then></if>
    <if pos:line="115" pos:column="5">if <condition pos:line="115" pos:column="8">(<expr><name pos:line="115" pos:column="9">response<pos:position pos:line="115" pos:column="17"/></name></expr>)<pos:position pos:line="115" pos:column="18"/></condition><then pos:line="115" pos:column="18"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="115" pos:column="19">OCSP_RESPONSE_free<pos:position pos:line="115" pos:column="37"/></name><argument_list pos:line="115" pos:column="37">(<argument><expr><name pos:line="115" pos:column="38">response<pos:position pos:line="115" pos:column="46"/></name></expr></argument>)<pos:position pos:line="115" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="48"/></expr_stmt></block></then></if>
    <if pos:line="116" pos:column="5">if <condition pos:line="116" pos:column="8">(<expr><name pos:line="116" pos:column="9">basicResponse<pos:position pos:line="116" pos:column="22"/></name></expr>)<pos:position pos:line="116" pos:column="23"/></condition><then pos:line="116" pos:column="23"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="24">OCSP_BASICRESP_free<pos:position pos:line="116" pos:column="43"/></name><argument_list pos:line="116" pos:column="43">(<argument><expr><name pos:line="116" pos:column="44">basicResponse<pos:position pos:line="116" pos:column="57"/></name></expr></argument>)<pos:position pos:line="116" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="59"/></expr_stmt></block></then></if>
    <comment type="block" pos:line="117" pos:column="5">/* certID is freed when the request is freed */</comment>

    <return pos:line="119" pos:column="5">return <expr><name pos:line="119" pos:column="12">rc<pos:position pos:line="119" pos:column="14"/></name></expr>;<pos:position pos:line="119" pos:column="15"/></return>
}<pos:position pos:line="120" pos:column="2"/></block></function></unit>

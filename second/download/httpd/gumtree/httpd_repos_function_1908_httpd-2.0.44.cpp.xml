<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1908_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">http2env<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">apr_pool_t<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">a<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">w<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">res<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><operator pos:line="3" pos:column="17">(<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name> <operator pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></operator><operator pos:line="3" pos:column="24">)<pos:position pos:line="3" pos:column="25"/></operator><call><name pos:line="3" pos:column="25">apr_palloc<pos:position pos:line="3" pos:column="35"/></name><argument_list pos:line="3" pos:column="35">(<argument><expr><name pos:line="3" pos:column="36">a<pos:position pos:line="3" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="39">sizeof<argument_list pos:line="3" pos:column="45">(<argument><expr><literal type="string" pos:line="3" pos:column="46">"HTTP_"<pos:position pos:line="3" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="54"/></argument_list></sizeof> <operator pos:line="3" pos:column="55">+<pos:position pos:line="3" pos:column="56"/></operator> <call><name pos:line="3" pos:column="57">strlen<pos:position pos:line="3" pos:column="63"/></name><argument_list pos:line="3" pos:column="63">(<argument><expr><name pos:line="3" pos:column="64">w<pos:position pos:line="3" pos:column="65"/></name></expr></argument>)<pos:position pos:line="3" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="68"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">cp<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><name pos:line="4" pos:column="16">res<pos:position pos:line="4" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">c<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="7" pos:column="5">*<pos:position pos:line="7" pos:column="6"/></operator><name pos:line="7" pos:column="6">cp<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">++<pos:position pos:line="7" pos:column="10"/></operator> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <literal type="char" pos:line="7" pos:column="13">'H'<pos:position pos:line="7" pos:column="16"/></literal></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="8" pos:column="5">*<pos:position pos:line="8" pos:column="6"/></operator><name pos:line="8" pos:column="6">cp<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">++<pos:position pos:line="8" pos:column="10"/></operator> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <literal type="char" pos:line="8" pos:column="13">'T'<pos:position pos:line="8" pos:column="16"/></literal></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="9" pos:column="5">*<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">cp<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">++<pos:position pos:line="9" pos:column="10"/></operator> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <literal type="char" pos:line="9" pos:column="13">'T'<pos:position pos:line="9" pos:column="16"/></literal></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="10" pos:column="5">*<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">cp<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">++<pos:position pos:line="10" pos:column="10"/></operator> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <literal type="char" pos:line="10" pos:column="13">'P'<pos:position pos:line="10" pos:column="16"/></literal></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="11" pos:column="5">*<pos:position pos:line="11" pos:column="6"/></operator><name pos:line="11" pos:column="6">cp<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">++<pos:position pos:line="11" pos:column="10"/></operator> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <literal type="char" pos:line="11" pos:column="13">'_'<pos:position pos:line="11" pos:column="16"/></literal></expr>;<pos:position pos:line="11" pos:column="17"/></expr_stmt>

    <while pos:line="13" pos:column="5">while <condition pos:line="13" pos:column="11">(<expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">c<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <operator pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">w<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">++<pos:position pos:line="13" pos:column="21"/></operator><operator pos:line="13" pos:column="21">)<pos:position pos:line="13" pos:column="22"/></operator> <operator pos:line="13" pos:column="23">!=<pos:position pos:line="13" pos:column="25"/></operator> <literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal></expr>)<pos:position pos:line="13" pos:column="28"/></condition> <block pos:line="13" pos:column="29">{
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name pos:line="14" pos:column="14">apr_isalnum<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">c<pos:position pos:line="14" pos:column="27"/></name></expr></argument>)<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29"> <block pos:line="14" pos:column="30">{
            <expr_stmt><expr><operator pos:line="15" pos:column="13">*<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">cp<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">++<pos:position pos:line="15" pos:column="18"/></operator> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <literal type="char" pos:line="15" pos:column="21">'_'<pos:position pos:line="15" pos:column="24"/></literal></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then>
        <else pos:line="17" pos:column="9">else <block pos:line="17" pos:column="14">{
            <expr_stmt><expr><operator pos:line="18" pos:column="13">*<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">cp<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">++<pos:position pos:line="18" pos:column="18"/></operator> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <call><name pos:line="18" pos:column="21">apr_toupper<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">c<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></else></if>
    }<pos:position pos:line="20" pos:column="6"/></block></while>
    <expr_stmt><expr><operator pos:line="21" pos:column="5">*<pos:position pos:line="21" pos:column="6"/></operator><name pos:line="21" pos:column="6">cp<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <literal type="number" pos:line="21" pos:column="11">0<pos:position pos:line="21" pos:column="12"/></literal></expr>;<pos:position pos:line="21" pos:column="13"/></expr_stmt>
 
    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">res<pos:position pos:line="23" pos:column="15"/></name></expr>;<pos:position pos:line="23" pos:column="16"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

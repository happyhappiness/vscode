<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2160_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">accept_mutex_on<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><call><name pos:line="3" pos:column="23">apr_proc_mutex_lock<pos:position pos:line="3" pos:column="42"/></name><argument_list pos:line="3" pos:column="42">(<argument><expr><name pos:line="3" pos:column="43">accept_mutex<pos:position pos:line="3" pos:column="55"/></name></expr></argument>)<pos:position pos:line="3" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="57"/></decl_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">rv<pos:position pos:line="4" pos:column="11"/></name> <operator pos:line="4" pos:column="12">!=<pos:position pos:line="4" pos:column="14"/></operator> <name pos:line="4" pos:column="15">APR_SUCCESS<pos:position pos:line="4" pos:column="26"/></name></expr>)<pos:position pos:line="4" pos:column="27"/></condition><then pos:line="4" pos:column="27"> <block pos:line="4" pos:column="28">{
        <decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">msg<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><literal type="string" pos:line="5" pos:column="27">"couldn't grab the accept mutex"<pos:position pos:line="5" pos:column="59"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="60"/></decl_stmt>

        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">ap_my_generation<pos:position pos:line="7" pos:column="29"/></name> <operator pos:line="7" pos:column="30">!=<pos:position pos:line="7" pos:column="32"/></operator> 
            <name><name pos:line="8" pos:column="13">ap_scoreboard_image<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">global<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">-&gt;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="42">running_generation<pos:position pos:line="8" pos:column="60"/></name></name></expr>)<pos:position pos:line="8" pos:column="61"/></condition><then pos:line="8" pos:column="61"> <block pos:line="8" pos:column="62">{
            <expr_stmt><expr><call><name pos:line="9" pos:column="13">ap_log_error<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">APLOG_MARK<pos:position pos:line="9" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="38">APLOG_DEBUG<pos:position pos:line="9" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="51">rv<pos:position pos:line="9" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="55">NULL<pos:position pos:line="9" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="61">msg<pos:position pos:line="9" pos:column="64"/></name></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">clean_child_exit<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><literal type="number" pos:line="10" pos:column="30">0<pos:position pos:line="10" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="11" pos:column="10"/></block></then>
        <else pos:line="12" pos:column="9">else <block pos:line="12" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">ap_log_error<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">APLOG_MARK<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="38">APLOG_EMERG<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">rv<pos:position pos:line="13" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="55">NULL<pos:position pos:line="13" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="61">msg<pos:position pos:line="13" pos:column="64"/></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">exit<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">APEXIT_CHILDFATAL<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></else></if>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

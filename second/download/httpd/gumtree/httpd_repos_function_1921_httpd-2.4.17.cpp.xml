<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1921_httpd-2.4.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">clean_warning_headers<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">void<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">data<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">key<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="63">const<pos:position pos:line="1" pos:column="68"/></specifier> <name pos:line="1" pos:column="69">char<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">val<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_table_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">headers<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><operator pos:line="3" pos:column="28">(<pos:position pos:line="3" pos:column="29"/></operator><operator pos:line="3" pos:column="29">(<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="30">header_dptr<pos:position pos:line="3" pos:column="41"/></name><operator pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></operator><operator pos:line="3" pos:column="42">)<pos:position pos:line="3" pos:column="43"/></operator><name pos:line="3" pos:column="43">data<pos:position pos:line="3" pos:column="47"/></name><operator pos:line="3" pos:column="47">)<pos:position pos:line="3" pos:column="48"/></operator><operator pos:line="3" pos:column="48">-&gt;<pos:position pos:line="3" pos:column="53"/></operator><name pos:line="3" pos:column="50">table<pos:position pos:line="3" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_pool_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">pool<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><operator pos:line="4" pos:column="24">(<pos:position pos:line="4" pos:column="25"/></operator><operator pos:line="4" pos:column="25">(<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">header_dptr<pos:position pos:line="4" pos:column="37"/></name><operator pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></operator><operator pos:line="4" pos:column="38">)<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="39">data<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">)<pos:position pos:line="4" pos:column="44"/></operator><operator pos:line="4" pos:column="44">-&gt;<pos:position pos:line="4" pos:column="49"/></operator><name pos:line="4" pos:column="46">pool<pos:position pos:line="4" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">warning<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">date<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_time_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">warn_time<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">int<pos:position pos:line="8" pos:column="14"/></name></type> <name pos:line="8" pos:column="15">nmatch<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="number" pos:line="8" pos:column="24">3<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ap_regmatch_t<pos:position pos:line="9" pos:column="18"/></name></type> <name><name pos:line="9" pos:column="19">pmatch<pos:position pos:line="9" pos:column="25"/></name><index pos:line="9" pos:column="25">[<expr><literal type="number" pos:line="9" pos:column="26">3<pos:position pos:line="9" pos:column="27"/></literal></expr>]<pos:position pos:line="9" pos:column="28"/></index></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">headers<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">==<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="20">NULL<pos:position pos:line="11" pos:column="24"/></name></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25"> <block pos:line="11" pos:column="26">{
        <expr_stmt><expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">header_dptr<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></operator><operator pos:line="12" pos:column="23">)<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">data<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">)<pos:position pos:line="12" pos:column="29"/></operator><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">table<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">=<pos:position pos:line="12" pos:column="38"/></operator> <name pos:line="12" pos:column="39">headers<pos:position pos:line="12" pos:column="46"/></name> <operator pos:line="12" pos:column="47">=<pos:position pos:line="12" pos:column="48"/></operator> <call><name pos:line="12" pos:column="49">apr_table_make<pos:position pos:line="12" pos:column="63"/></name><argument_list pos:line="12" pos:column="63">(<argument><expr><name pos:line="12" pos:column="64">pool<pos:position pos:line="12" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="70">2<pos:position pos:line="12" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
<comment type="block" pos:line="14" pos:column="1">/*
 * Parse this, suckers!
 *
 *    Warning    = "Warning" ":" 1#warning-value
 *
 *    warning-value = warn-code SP warn-agent SP warn-text
 *                                             [SP warn-date]
 *
 *    warn-code  = 3DIGIT
 *    warn-agent = ( host [ ":" port ] ) | pseudonym
 *                    ; the name or pseudonym of the server adding
 *                    ; the Warning header, for use in debugging
 *    warn-text  = quoted-string
 *    warn-date  = &lt;"&gt; HTTP-date &lt;"&gt;
 *
 * Buggrit, use a bloomin' regexp!
 * (\d{3}\s+\S+\s+\".*?\"(\s+\"(.*?)\")?)  --&gt; whole in $1, date in $3
 */</comment>
    <while pos:line="32" pos:column="5">while <condition pos:line="32" pos:column="11">(<expr><operator pos:line="32" pos:column="12">!<pos:position pos:line="32" pos:column="13"/></operator><call><name pos:line="32" pos:column="13">ap_regexec<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><name pos:line="32" pos:column="24">warn_rx<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="33">val<pos:position pos:line="32" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="38">nmatch<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="46">pmatch<pos:position pos:line="32" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="54">0<pos:position pos:line="32" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="57"/></condition> <block pos:line="32" pos:column="58">{
        <expr_stmt><expr><name pos:line="33" pos:column="9">warning<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <call><name pos:line="33" pos:column="19">apr_pstrndup<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><name pos:line="33" pos:column="32">pool<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="38">val<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">+<pos:position pos:line="33" pos:column="42"/></operator><name><name pos:line="33" pos:column="42">pmatch<pos:position pos:line="33" pos:column="48"/></name><index pos:line="33" pos:column="48">[<expr><literal type="number" pos:line="33" pos:column="49">0<pos:position pos:line="33" pos:column="50"/></literal></expr>]<pos:position pos:line="33" pos:column="51"/></index></name><operator pos:line="33" pos:column="51">.<pos:position pos:line="33" pos:column="52"/></operator><name pos:line="33" pos:column="52">rm_so<pos:position pos:line="33" pos:column="57"/></name></expr></argument>,
                               <argument><expr><name><name pos:line="34" pos:column="32">pmatch<pos:position pos:line="34" pos:column="38"/></name><index pos:line="34" pos:column="38">[<expr><literal type="number" pos:line="34" pos:column="39">0<pos:position pos:line="34" pos:column="40"/></literal></expr>]<pos:position pos:line="34" pos:column="41"/></index></name><operator pos:line="34" pos:column="41">.<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="42">rm_eo<pos:position pos:line="34" pos:column="47"/></name> <operator pos:line="34" pos:column="48">-<pos:position pos:line="34" pos:column="49"/></operator> <name><name pos:line="34" pos:column="50">pmatch<pos:position pos:line="34" pos:column="56"/></name><index pos:line="34" pos:column="56">[<expr><literal type="number" pos:line="34" pos:column="57">0<pos:position pos:line="34" pos:column="58"/></literal></expr>]<pos:position pos:line="34" pos:column="59"/></index></name><operator pos:line="34" pos:column="59">.<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="60">rm_so<pos:position pos:line="34" pos:column="65"/></name></expr></argument>)<pos:position pos:line="34" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">warn_time<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <literal type="number" pos:line="35" pos:column="21">0<pos:position pos:line="35" pos:column="22"/></literal></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">pmatch<pos:position pos:line="36" pos:column="19"/></name><index pos:line="36" pos:column="19">[<expr><literal type="number" pos:line="36" pos:column="20">2<pos:position pos:line="36" pos:column="21"/></literal></expr>]<pos:position pos:line="36" pos:column="22"/></index></name><operator pos:line="36" pos:column="22">.<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="23">rm_eo<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">&gt;<pos:position pos:line="36" pos:column="33"/></operator> <name><name pos:line="36" pos:column="31">pmatch<pos:position pos:line="36" pos:column="37"/></name><index pos:line="36" pos:column="37">[<expr><literal type="number" pos:line="36" pos:column="38">2<pos:position pos:line="36" pos:column="39"/></literal></expr>]<pos:position pos:line="36" pos:column="40"/></index></name><operator pos:line="36" pos:column="40">.<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="41">rm_so<pos:position pos:line="36" pos:column="46"/></name></expr>)<pos:position pos:line="36" pos:column="47"/></condition><then pos:line="36" pos:column="47"> <block pos:line="36" pos:column="48">{
            <comment type="block" pos:line="37" pos:column="13">/* OK, we have a date here */</comment>
            <expr_stmt><expr><name pos:line="38" pos:column="13">date<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <call><name pos:line="38" pos:column="20">apr_pstrndup<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">pool<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="39">val<pos:position pos:line="38" pos:column="42"/></name><operator pos:line="38" pos:column="42">+<pos:position pos:line="38" pos:column="43"/></operator><name><name pos:line="38" pos:column="43">pmatch<pos:position pos:line="38" pos:column="49"/></name><index pos:line="38" pos:column="49">[<expr><literal type="number" pos:line="38" pos:column="50">2<pos:position pos:line="38" pos:column="51"/></literal></expr>]<pos:position pos:line="38" pos:column="52"/></index></name><operator pos:line="38" pos:column="52">.<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="53">rm_so<pos:position pos:line="38" pos:column="58"/></name></expr></argument>,
                                <argument><expr><name><name pos:line="39" pos:column="33">pmatch<pos:position pos:line="39" pos:column="39"/></name><index pos:line="39" pos:column="39">[<expr><literal type="number" pos:line="39" pos:column="40">2<pos:position pos:line="39" pos:column="41"/></literal></expr>]<pos:position pos:line="39" pos:column="42"/></index></name><operator pos:line="39" pos:column="42">.<pos:position pos:line="39" pos:column="43"/></operator><name pos:line="39" pos:column="43">rm_eo<pos:position pos:line="39" pos:column="48"/></name> <operator pos:line="39" pos:column="49">-<pos:position pos:line="39" pos:column="50"/></operator> <name><name pos:line="39" pos:column="51">pmatch<pos:position pos:line="39" pos:column="57"/></name><index pos:line="39" pos:column="57">[<expr><literal type="number" pos:line="39" pos:column="58">2<pos:position pos:line="39" pos:column="59"/></literal></expr>]<pos:position pos:line="39" pos:column="60"/></index></name><operator pos:line="39" pos:column="60">.<pos:position pos:line="39" pos:column="61"/></operator><name pos:line="39" pos:column="61">rm_so<pos:position pos:line="39" pos:column="66"/></name></expr></argument>)<pos:position pos:line="39" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><name pos:line="40" pos:column="13">warn_time<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <call><name pos:line="40" pos:column="25">apr_date_parse_http<pos:position pos:line="40" pos:column="44"/></name><argument_list pos:line="40" pos:column="44">(<argument><expr><name pos:line="40" pos:column="45">date<pos:position pos:line="40" pos:column="49"/></name></expr></argument>)<pos:position pos:line="40" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">!<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">warn_time<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">||<pos:position pos:line="42" pos:column="26"/></operator> <operator pos:line="42" pos:column="27">(<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="28">warn_time<pos:position pos:line="42" pos:column="37"/></name> <operator pos:line="42" pos:column="38">==<pos:position pos:line="42" pos:column="40"/></operator> <operator pos:line="42" pos:column="41">(<pos:position pos:line="42" pos:column="42"/></operator><operator pos:line="42" pos:column="42">(<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="43">header_dptr<pos:position pos:line="42" pos:column="54"/></name><operator pos:line="42" pos:column="54">*<pos:position pos:line="42" pos:column="55"/></operator><operator pos:line="42" pos:column="55">)<pos:position pos:line="42" pos:column="56"/></operator><name pos:line="42" pos:column="56">data<pos:position pos:line="42" pos:column="60"/></name><operator pos:line="42" pos:column="60">)<pos:position pos:line="42" pos:column="61"/></operator><operator pos:line="42" pos:column="61">-&gt;<pos:position pos:line="42" pos:column="66"/></operator><name pos:line="42" pos:column="63">time<pos:position pos:line="42" pos:column="67"/></name><operator pos:line="42" pos:column="67">)<pos:position pos:line="42" pos:column="68"/></operator></expr>)<pos:position pos:line="42" pos:column="69"/></condition><then pos:line="42" pos:column="69"> <block pos:line="42" pos:column="70">{
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">apr_table_addn<pos:position pos:line="43" pos:column="27"/></name><argument_list pos:line="43" pos:column="27">(<argument><expr><name pos:line="43" pos:column="28">headers<pos:position pos:line="43" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="37">key<pos:position pos:line="43" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="42">warning<pos:position pos:line="43" pos:column="49"/></name></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="45" pos:column="9">val<pos:position pos:line="45" pos:column="12"/></name> <operator pos:line="45" pos:column="13">+=<pos:position pos:line="45" pos:column="15"/></operator> <name><name pos:line="45" pos:column="16">pmatch<pos:position pos:line="45" pos:column="22"/></name><index pos:line="45" pos:column="22">[<expr><literal type="number" pos:line="45" pos:column="23">0<pos:position pos:line="45" pos:column="24"/></literal></expr>]<pos:position pos:line="45" pos:column="25"/></index></name><operator pos:line="45" pos:column="25">.<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="26">rm_eo<pos:position pos:line="45" pos:column="31"/></name></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></while>
    <return pos:line="47" pos:column="5">return <expr><literal type="number" pos:line="47" pos:column="12">1<pos:position pos:line="47" pos:column="13"/></literal></expr>;<pos:position pos:line="47" pos:column="14"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

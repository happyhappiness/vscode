<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3805_httpd-2.2.19.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">impl_pollset_poll<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">apr_pollset_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">pollset<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="2" pos:column="39">apr_interval_time_t<pos:position pos:line="2" pos:column="58"/></name></type> <name pos:line="2" pos:column="59">timeout<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="3" pos:column="39">apr_int32_t<pos:position pos:line="3" pos:column="50"/></name> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier></type><name pos:line="3" pos:column="52">num<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>,
                                      <parameter><decl><type><specifier pos:line="4" pos:column="39">const<pos:position pos:line="4" pos:column="44"/></specifier> <name pos:line="4" pos:column="45">apr_pollfd_t<pos:position pos:line="4" pos:column="57"/></name> <modifier pos:line="4" pos:column="58">*<pos:position pos:line="4" pos:column="59"/></modifier><modifier pos:line="4" pos:column="59">*<pos:position pos:line="4" pos:column="60"/></modifier></type><name pos:line="4" pos:column="60">descriptors<pos:position pos:line="4" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="72"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">rs<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_uint32_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">i<pos:position pos:line="7" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="21">j<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">timeval<pos:position pos:line="8" pos:column="19"/></name></name></type> <name pos:line="8" pos:column="20">tv<pos:position pos:line="8" pos:column="22"/></name></decl>, <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="25">tvptr<pos:position pos:line="8" pos:column="30"/></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">fd_set<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">readset<pos:position pos:line="9" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="21">writeset<pos:position pos:line="9" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="31">exceptset<pos:position pos:line="9" pos:column="40"/></name></decl>;<pos:position pos:line="9" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_status_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">rv<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><name pos:line="10" pos:column="23">APR_SUCCESS<pos:position pos:line="10" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>

<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">WIN32<pos:position pos:line="12" pos:column="13"/></name></cpp:ifdef>
    <comment type="block" pos:line="13" pos:column="5">/* On Win32, select() must be presented with at least one socket to
     * poll on, or select() will return WSAEINVAL.  So, we'll just
     * short-circuit and bail now.
     */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">pollset<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">nelts<pos:position pos:line="17" pos:column="23"/></name></name> <operator pos:line="17" pos:column="24">==<pos:position pos:line="17" pos:column="26"/></operator> <literal type="number" pos:line="17" pos:column="27">0<pos:position pos:line="17" pos:column="28"/></literal></expr>)<pos:position pos:line="17" pos:column="29"/></condition><then pos:line="17" pos:column="29"> <block pos:line="17" pos:column="30">{
        <expr_stmt><expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><operator pos:line="18" pos:column="10">*<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">num<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">)<pos:position pos:line="18" pos:column="15"/></operator> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">timeout<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">&gt;<pos:position pos:line="19" pos:column="25"/></operator> <literal type="number" pos:line="19" pos:column="23">0<pos:position pos:line="19" pos:column="24"/></literal></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25"> <block pos:line="19" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">apr_sleep<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">timeout<pos:position pos:line="20" pos:column="30"/></name></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
            <return pos:line="21" pos:column="13">return <expr><name pos:line="21" pos:column="20">APR_TIMEUP<pos:position pos:line="21" pos:column="30"/></name></expr>;<pos:position pos:line="21" pos:column="31"/></return>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">APR_SUCCESS<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">timeout<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">&lt;<pos:position pos:line="27" pos:column="21"/></operator> <literal type="number" pos:line="27" pos:column="19">0<pos:position pos:line="27" pos:column="20"/></literal></expr>)<pos:position pos:line="27" pos:column="21"/></condition><then pos:line="27" pos:column="21"> <block pos:line="27" pos:column="22">{
        <expr_stmt><expr><name pos:line="28" pos:column="9">tvptr<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <name pos:line="28" pos:column="17">NULL<pos:position pos:line="28" pos:column="21"/></name></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then>
    <else pos:line="30" pos:column="5">else <block pos:line="30" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">tv<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">.<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">tv_sec<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <operator pos:line="31" pos:column="21">(<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">long<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">)<pos:position pos:line="31" pos:column="27"/></operator> <call><name pos:line="31" pos:column="28">apr_time_sec<pos:position pos:line="31" pos:column="40"/></name><argument_list pos:line="31" pos:column="40">(<argument><expr><name pos:line="31" pos:column="41">timeout<pos:position pos:line="31" pos:column="48"/></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="32" pos:column="9">tv<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">.<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">tv_usec<pos:position pos:line="32" pos:column="19"/></name></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <operator pos:line="32" pos:column="22">(<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">long<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">)<pos:position pos:line="32" pos:column="28"/></operator> <call><name pos:line="32" pos:column="29">apr_time_usec<pos:position pos:line="32" pos:column="42"/></name><argument_list pos:line="32" pos:column="42">(<argument><expr><name pos:line="32" pos:column="43">timeout<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name pos:line="33" pos:column="9">tvptr<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">=<pos:position pos:line="33" pos:column="16"/></operator> <operator pos:line="33" pos:column="17">&amp;<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="18">tv<pos:position pos:line="33" pos:column="20"/></name></expr>;<pos:position pos:line="33" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">memcpy<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><operator pos:line="36" pos:column="12">&amp;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="13">readset<pos:position pos:line="36" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="22">&amp;<pos:position pos:line="36" pos:column="27"/></operator><operator pos:line="36" pos:column="23">(<pos:position pos:line="36" pos:column="24"/></operator><name><name pos:line="36" pos:column="24">pollset<pos:position pos:line="36" pos:column="31"/></name><operator pos:line="36" pos:column="31">-&gt;<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="33">p<pos:position pos:line="36" pos:column="34"/></name><operator pos:line="36" pos:column="34">-&gt;<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="36">readset<pos:position pos:line="36" pos:column="43"/></name></name><operator pos:line="36" pos:column="43">)<pos:position pos:line="36" pos:column="44"/></operator></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="46">sizeof<argument_list pos:line="36" pos:column="52">(<argument><expr><name pos:line="36" pos:column="53">fd_set<pos:position pos:line="36" pos:column="59"/></name></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">memcpy<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><operator pos:line="37" pos:column="12">&amp;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="13">writeset<pos:position pos:line="37" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="23">&amp;<pos:position pos:line="37" pos:column="28"/></operator><operator pos:line="37" pos:column="24">(<pos:position pos:line="37" pos:column="25"/></operator><name><name pos:line="37" pos:column="25">pollset<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">-&gt;<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="34">p<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">-&gt;<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="37">writeset<pos:position pos:line="37" pos:column="45"/></name></name><operator pos:line="37" pos:column="45">)<pos:position pos:line="37" pos:column="46"/></operator></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="48">sizeof<argument_list pos:line="37" pos:column="54">(<argument><expr><name pos:line="37" pos:column="55">fd_set<pos:position pos:line="37" pos:column="61"/></name></expr></argument>)<pos:position pos:line="37" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">memcpy<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><operator pos:line="38" pos:column="12">&amp;<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="13">exceptset<pos:position pos:line="38" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="24">&amp;<pos:position pos:line="38" pos:column="29"/></operator><operator pos:line="38" pos:column="25">(<pos:position pos:line="38" pos:column="26"/></operator><name><name pos:line="38" pos:column="26">pollset<pos:position pos:line="38" pos:column="33"/></name><operator pos:line="38" pos:column="33">-&gt;<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="35">p<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">-&gt;<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="38">exceptset<pos:position pos:line="38" pos:column="47"/></name></name><operator pos:line="38" pos:column="47">)<pos:position pos:line="38" pos:column="48"/></operator></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="50">sizeof<argument_list pos:line="38" pos:column="56">(<argument><expr><name pos:line="38" pos:column="57">fd_set<pos:position pos:line="38" pos:column="63"/></name></expr></argument>)<pos:position pos:line="38" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="66"/></expr_stmt>

<cpp:ifdef pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">ifdef<pos:position pos:line="40" pos:column="7"/></cpp:directive> <name pos:line="40" pos:column="8">NETWARE<pos:position pos:line="40" pos:column="15"/></name></cpp:ifdef>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><call><name pos:line="41" pos:column="9">HAS_PIPES<pos:position pos:line="41" pos:column="18"/></name><argument_list pos:line="41" pos:column="18">(<argument><expr><name><name pos:line="41" pos:column="19">pollset<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">-&gt;<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="28">p<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">-&gt;<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="31">set_type<pos:position pos:line="41" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="41"/></condition><then pos:line="41" pos:column="41"> <block pos:line="41" pos:column="42">{
        <expr_stmt><expr><name pos:line="42" pos:column="9">rs<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <call><name pos:line="42" pos:column="14">pipe_select<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><name><name pos:line="42" pos:column="26">pollset<pos:position pos:line="42" pos:column="33"/></name><operator pos:line="42" pos:column="33">-&gt;<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="35">p<pos:position pos:line="42" pos:column="36"/></name><operator pos:line="42" pos:column="36">-&gt;<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="38">maxfd<pos:position pos:line="42" pos:column="43"/></name></name> <operator pos:line="42" pos:column="44">+<pos:position pos:line="42" pos:column="45"/></operator> <literal type="number" pos:line="42" pos:column="46">1<pos:position pos:line="42" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="42" pos:column="49">&amp;<pos:position pos:line="42" pos:column="54"/></operator><name pos:line="42" pos:column="50">readset<pos:position pos:line="42" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="59">&amp;<pos:position pos:line="42" pos:column="64"/></operator><name pos:line="42" pos:column="60">writeset<pos:position pos:line="42" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="70">&amp;<pos:position pos:line="42" pos:column="75"/></operator><name pos:line="42" pos:column="71">exceptset<pos:position pos:line="42" pos:column="80"/></name></expr></argument>,
                         <argument><expr><name pos:line="43" pos:column="26">tvptr<pos:position pos:line="43" pos:column="31"/></name></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then>
    <else pos:line="45" pos:column="5">else
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>
        <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="9">rs<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <call><name pos:line="47" pos:column="14">select<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name><name pos:line="47" pos:column="21">pollset<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">-&gt;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="30">p<pos:position pos:line="47" pos:column="31"/></name><operator pos:line="47" pos:column="31">-&gt;<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="33">maxfd<pos:position pos:line="47" pos:column="38"/></name></name> <operator pos:line="47" pos:column="39">+<pos:position pos:line="47" pos:column="40"/></operator> <literal type="number" pos:line="47" pos:column="41">1<pos:position pos:line="47" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="47" pos:column="44">&amp;<pos:position pos:line="47" pos:column="49"/></operator><name pos:line="47" pos:column="45">readset<pos:position pos:line="47" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="54">&amp;<pos:position pos:line="47" pos:column="59"/></operator><name pos:line="47" pos:column="55">writeset<pos:position pos:line="47" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="65">&amp;<pos:position pos:line="47" pos:column="70"/></operator><name pos:line="47" pos:column="66">exceptset<pos:position pos:line="47" pos:column="75"/></name></expr></argument>,
                    <argument><expr><name pos:line="48" pos:column="21">tvptr<pos:position pos:line="48" pos:column="26"/></name></expr></argument>)<pos:position pos:line="48" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="28"/></expr_stmt></block></else></if>

    <expr_stmt><expr><operator pos:line="50" pos:column="5">(<pos:position pos:line="50" pos:column="6"/></operator><operator pos:line="50" pos:column="6">*<pos:position pos:line="50" pos:column="7"/></operator><name pos:line="50" pos:column="7">num<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">)<pos:position pos:line="50" pos:column="11"/></operator> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <name pos:line="50" pos:column="14">rs<pos:position pos:line="50" pos:column="16"/></name></expr>;<pos:position pos:line="50" pos:column="17"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">rs<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">&lt;<pos:position pos:line="51" pos:column="16"/></operator> <literal type="number" pos:line="51" pos:column="14">0<pos:position pos:line="51" pos:column="15"/></literal></expr>)<pos:position pos:line="51" pos:column="16"/></condition><then pos:line="51" pos:column="16"> <block pos:line="51" pos:column="17">{
        <return pos:line="52" pos:column="9">return <expr><call><name pos:line="52" pos:column="16">apr_get_netos_error<pos:position pos:line="52" pos:column="35"/></name><argument_list pos:line="52" pos:column="35">()<pos:position pos:line="52" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="38"/></return>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">rs<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">==<pos:position pos:line="54" pos:column="14"/></operator> <literal type="number" pos:line="54" pos:column="15">0<pos:position pos:line="54" pos:column="16"/></literal></expr>)<pos:position pos:line="54" pos:column="17"/></condition><then pos:line="54" pos:column="17"> <block pos:line="54" pos:column="18">{
        <return pos:line="55" pos:column="9">return <expr><name pos:line="55" pos:column="16">APR_TIMEUP<pos:position pos:line="55" pos:column="26"/></name></expr>;<pos:position pos:line="55" pos:column="27"/></return>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="57" pos:column="5">j<pos:position pos:line="57" pos:column="6"/></name> <operator pos:line="57" pos:column="7">=<pos:position pos:line="57" pos:column="8"/></operator> <literal type="number" pos:line="57" pos:column="9">0<pos:position pos:line="57" pos:column="10"/></literal></expr>;<pos:position pos:line="57" pos:column="11"/></expr_stmt>
    <for pos:line="58" pos:column="5">for <control pos:line="58" pos:column="9">(<init><expr><name pos:line="58" pos:column="10">i<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">=<pos:position pos:line="58" pos:column="13"/></operator> <literal type="number" pos:line="58" pos:column="14">0<pos:position pos:line="58" pos:column="15"/></literal></expr>;<pos:position pos:line="58" pos:column="16"/></init> <condition><expr><name pos:line="58" pos:column="17">i<pos:position pos:line="58" pos:column="18"/></name> <operator pos:line="58" pos:column="19">&lt;<pos:position pos:line="58" pos:column="23"/></operator> <name><name pos:line="58" pos:column="21">pollset<pos:position pos:line="58" pos:column="28"/></name><operator pos:line="58" pos:column="28">-&gt;<pos:position pos:line="58" pos:column="33"/></operator><name pos:line="58" pos:column="30">nelts<pos:position pos:line="58" pos:column="35"/></name></name></expr>;<pos:position pos:line="58" pos:column="36"/></condition> <incr><expr><name pos:line="58" pos:column="37">i<pos:position pos:line="58" pos:column="38"/></name><operator pos:line="58" pos:column="38">++<pos:position pos:line="58" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="58" pos:column="41"/></control> <block pos:line="58" pos:column="42">{
        <decl_stmt><decl><type><name pos:line="59" pos:column="9">apr_os_sock_t<pos:position pos:line="59" pos:column="22"/></name></type> <name pos:line="59" pos:column="23">fd<pos:position pos:line="59" pos:column="25"/></name></decl>;<pos:position pos:line="59" pos:column="26"/></decl_stmt>
        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name><name pos:line="60" pos:column="13">pollset<pos:position pos:line="60" pos:column="20"/></name><operator pos:line="60" pos:column="20">-&gt;<pos:position pos:line="60" pos:column="25"/></operator><name pos:line="60" pos:column="22">p<pos:position pos:line="60" pos:column="23"/></name><operator pos:line="60" pos:column="23">-&gt;<pos:position pos:line="60" pos:column="28"/></operator><name pos:line="60" pos:column="25">query_set<pos:position pos:line="60" pos:column="34"/></name><index pos:line="60" pos:column="34">[<expr><name pos:line="60" pos:column="35">i<pos:position pos:line="60" pos:column="36"/></name></expr>]<pos:position pos:line="60" pos:column="37"/></index></name><operator pos:line="60" pos:column="37">.<pos:position pos:line="60" pos:column="38"/></operator><name pos:line="60" pos:column="38">desc_type<pos:position pos:line="60" pos:column="47"/></name> <operator pos:line="60" pos:column="48">==<pos:position pos:line="60" pos:column="50"/></operator> <name pos:line="60" pos:column="51">APR_POLL_SOCKET<pos:position pos:line="60" pos:column="66"/></name></expr>)<pos:position pos:line="60" pos:column="67"/></condition><then pos:line="60" pos:column="67"> <block pos:line="60" pos:column="68">{
            <expr_stmt><expr><name pos:line="61" pos:column="13">fd<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <name><name pos:line="61" pos:column="18">pollset<pos:position pos:line="61" pos:column="25"/></name><operator pos:line="61" pos:column="25">-&gt;<pos:position pos:line="61" pos:column="30"/></operator><name pos:line="61" pos:column="27">p<pos:position pos:line="61" pos:column="28"/></name><operator pos:line="61" pos:column="28">-&gt;<pos:position pos:line="61" pos:column="33"/></operator><name pos:line="61" pos:column="30">query_set<pos:position pos:line="61" pos:column="39"/></name><index pos:line="61" pos:column="39">[<expr><name pos:line="61" pos:column="40">i<pos:position pos:line="61" pos:column="41"/></name></expr>]<pos:position pos:line="61" pos:column="42"/></index></name><operator pos:line="61" pos:column="42">.<pos:position pos:line="61" pos:column="43"/></operator><name><name pos:line="61" pos:column="43">desc<pos:position pos:line="61" pos:column="47"/></name><operator pos:line="61" pos:column="47">.<pos:position pos:line="61" pos:column="48"/></operator><name pos:line="61" pos:column="48">s<pos:position pos:line="61" pos:column="49"/></name><operator pos:line="61" pos:column="49">-&gt;<pos:position pos:line="61" pos:column="54"/></operator><name pos:line="61" pos:column="51">socketdes<pos:position pos:line="61" pos:column="60"/></name></name></expr>;<pos:position pos:line="61" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="62" pos:column="10"/></block></then>
        <else pos:line="63" pos:column="9">else <block pos:line="63" pos:column="14">{
            <if pos:line="64" pos:column="13">if <condition pos:line="64" pos:column="16">(<expr><operator pos:line="64" pos:column="17">(<pos:position pos:line="64" pos:column="18"/></operator><name><name pos:line="64" pos:column="18">pollset<pos:position pos:line="64" pos:column="25"/></name><operator pos:line="64" pos:column="25">-&gt;<pos:position pos:line="64" pos:column="30"/></operator><name pos:line="64" pos:column="27">flags<pos:position pos:line="64" pos:column="32"/></name></name> <operator pos:line="64" pos:column="33">&amp;<pos:position pos:line="64" pos:column="38"/></operator> <name pos:line="64" pos:column="35">APR_POLLSET_WAKEABLE<pos:position pos:line="64" pos:column="55"/></name><operator pos:line="64" pos:column="55">)<pos:position pos:line="64" pos:column="56"/></operator> <operator pos:line="64" pos:column="57">&amp;&amp;<pos:position pos:line="64" pos:column="67"/></operator>
                <name><name pos:line="65" pos:column="17">pollset<pos:position pos:line="65" pos:column="24"/></name><operator pos:line="65" pos:column="24">-&gt;<pos:position pos:line="65" pos:column="29"/></operator><name pos:line="65" pos:column="26">p<pos:position pos:line="65" pos:column="27"/></name><operator pos:line="65" pos:column="27">-&gt;<pos:position pos:line="65" pos:column="32"/></operator><name pos:line="65" pos:column="29">query_set<pos:position pos:line="65" pos:column="38"/></name><index pos:line="65" pos:column="38">[<expr><name pos:line="65" pos:column="39">i<pos:position pos:line="65" pos:column="40"/></name></expr>]<pos:position pos:line="65" pos:column="41"/></index></name><operator pos:line="65" pos:column="41">.<pos:position pos:line="65" pos:column="42"/></operator><name><name pos:line="65" pos:column="42">desc<pos:position pos:line="65" pos:column="46"/></name><operator pos:line="65" pos:column="46">.<pos:position pos:line="65" pos:column="47"/></operator><name pos:line="65" pos:column="47">f<pos:position pos:line="65" pos:column="48"/></name></name> <operator pos:line="65" pos:column="49">==<pos:position pos:line="65" pos:column="51"/></operator> <name><name pos:line="65" pos:column="52">pollset<pos:position pos:line="65" pos:column="59"/></name><operator pos:line="65" pos:column="59">-&gt;<pos:position pos:line="65" pos:column="64"/></operator><name pos:line="65" pos:column="61">wakeup_pipe<pos:position pos:line="65" pos:column="72"/></name><index pos:line="65" pos:column="72">[<expr><literal type="number" pos:line="65" pos:column="73">0<pos:position pos:line="65" pos:column="74"/></literal></expr>]<pos:position pos:line="65" pos:column="75"/></index></name></expr>)<pos:position pos:line="65" pos:column="76"/></condition><then pos:line="65" pos:column="76"> <block pos:line="65" pos:column="77">{
                <expr_stmt><expr><call><name pos:line="66" pos:column="17">apr_pollset_drain_wakeup_pipe<pos:position pos:line="66" pos:column="46"/></name><argument_list pos:line="66" pos:column="46">(<argument><expr><name pos:line="66" pos:column="47">pollset<pos:position pos:line="66" pos:column="54"/></name></expr></argument>)<pos:position pos:line="66" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="56"/></expr_stmt>
                <expr_stmt><expr><name pos:line="67" pos:column="17">rv<pos:position pos:line="67" pos:column="19"/></name> <operator pos:line="67" pos:column="20">=<pos:position pos:line="67" pos:column="21"/></operator> <name pos:line="67" pos:column="22">APR_EINTR<pos:position pos:line="67" pos:column="31"/></name></expr>;<pos:position pos:line="67" pos:column="32"/></expr_stmt>
                <continue pos:line="68" pos:column="17">continue;<pos:position pos:line="68" pos:column="26"/></continue>
            }<pos:position pos:line="69" pos:column="14"/></block></then>
            <else pos:line="70" pos:column="13">else <block pos:line="70" pos:column="18">{
<cpp:if pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">if<pos:position pos:line="71" pos:column="4"/></cpp:directive> <expr><operator pos:line="71" pos:column="5">!<pos:position pos:line="71" pos:column="6"/></operator><name pos:line="71" pos:column="6">APR_FILES_AS_SOCKETS<pos:position pos:line="71" pos:column="26"/></name></expr></cpp:if>
                <return pos:line="72" pos:column="17">return <expr><name pos:line="72" pos:column="24">APR_EBADF<pos:position pos:line="72" pos:column="33"/></name></expr>;<pos:position pos:line="72" pos:column="34"/></return>
<cpp:else pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">else<pos:position pos:line="73" pos:column="6"/></cpp:directive></cpp:else>
                <expr_stmt><expr><name pos:line="74" pos:column="17">fd<pos:position pos:line="74" pos:column="19"/></name> <operator pos:line="74" pos:column="20">=<pos:position pos:line="74" pos:column="21"/></operator> <name><name pos:line="74" pos:column="22">pollset<pos:position pos:line="74" pos:column="29"/></name><operator pos:line="74" pos:column="29">-&gt;<pos:position pos:line="74" pos:column="34"/></operator><name pos:line="74" pos:column="31">p<pos:position pos:line="74" pos:column="32"/></name><operator pos:line="74" pos:column="32">-&gt;<pos:position pos:line="74" pos:column="37"/></operator><name pos:line="74" pos:column="34">query_set<pos:position pos:line="74" pos:column="43"/></name><index pos:line="74" pos:column="43">[<expr><name pos:line="74" pos:column="44">i<pos:position pos:line="74" pos:column="45"/></name></expr>]<pos:position pos:line="74" pos:column="46"/></index></name><operator pos:line="74" pos:column="46">.<pos:position pos:line="74" pos:column="47"/></operator><name><name pos:line="74" pos:column="47">desc<pos:position pos:line="74" pos:column="51"/></name><operator pos:line="74" pos:column="51">.<pos:position pos:line="74" pos:column="52"/></operator><name pos:line="74" pos:column="52">f<pos:position pos:line="74" pos:column="53"/></name><operator pos:line="74" pos:column="53">-&gt;<pos:position pos:line="74" pos:column="58"/></operator><name pos:line="74" pos:column="55">filedes<pos:position pos:line="74" pos:column="62"/></name></name></expr>;<pos:position pos:line="74" pos:column="63"/></expr_stmt>
<cpp:endif pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">endif<pos:position pos:line="75" pos:column="7"/></cpp:directive></cpp:endif>
            }<pos:position pos:line="76" pos:column="14"/></block></else></if>
        }<pos:position pos:line="77" pos:column="10"/></block></else></if>
        <if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><call><name pos:line="78" pos:column="13">FD_ISSET<pos:position pos:line="78" pos:column="21"/></name><argument_list pos:line="78" pos:column="21">(<argument><expr><name pos:line="78" pos:column="22">fd<pos:position pos:line="78" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="26">&amp;<pos:position pos:line="78" pos:column="31"/></operator><name pos:line="78" pos:column="27">readset<pos:position pos:line="78" pos:column="34"/></name></expr></argument>)<pos:position pos:line="78" pos:column="35"/></argument_list></call> <operator pos:line="78" pos:column="36">||<pos:position pos:line="78" pos:column="38"/></operator> <call><name pos:line="78" pos:column="39">FD_ISSET<pos:position pos:line="78" pos:column="47"/></name><argument_list pos:line="78" pos:column="47">(<argument><expr><name pos:line="78" pos:column="48">fd<pos:position pos:line="78" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="52">&amp;<pos:position pos:line="78" pos:column="57"/></operator><name pos:line="78" pos:column="53">writeset<pos:position pos:line="78" pos:column="61"/></name></expr></argument>)<pos:position pos:line="78" pos:column="62"/></argument_list></call> <operator pos:line="78" pos:column="63">||<pos:position pos:line="78" pos:column="65"/></operator>
            <call><name pos:line="79" pos:column="13">FD_ISSET<pos:position pos:line="79" pos:column="21"/></name><argument_list pos:line="79" pos:column="21">(<argument><expr><name pos:line="79" pos:column="22">fd<pos:position pos:line="79" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="26">&amp;<pos:position pos:line="79" pos:column="31"/></operator><name pos:line="79" pos:column="27">exceptset<pos:position pos:line="79" pos:column="36"/></name></expr></argument>)<pos:position pos:line="79" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="38"/></condition><then pos:line="79" pos:column="38"> <block pos:line="79" pos:column="39">{
            <expr_stmt><expr><name><name pos:line="80" pos:column="13">pollset<pos:position pos:line="80" pos:column="20"/></name><operator pos:line="80" pos:column="20">-&gt;<pos:position pos:line="80" pos:column="25"/></operator><name pos:line="80" pos:column="22">p<pos:position pos:line="80" pos:column="23"/></name><operator pos:line="80" pos:column="23">-&gt;<pos:position pos:line="80" pos:column="28"/></operator><name pos:line="80" pos:column="25">result_set<pos:position pos:line="80" pos:column="35"/></name><index pos:line="80" pos:column="35">[<expr><name pos:line="80" pos:column="36">j<pos:position pos:line="80" pos:column="37"/></name></expr>]<pos:position pos:line="80" pos:column="38"/></index></name> <operator pos:line="80" pos:column="39">=<pos:position pos:line="80" pos:column="40"/></operator> <name><name pos:line="80" pos:column="41">pollset<pos:position pos:line="80" pos:column="48"/></name><operator pos:line="80" pos:column="48">-&gt;<pos:position pos:line="80" pos:column="53"/></operator><name pos:line="80" pos:column="50">p<pos:position pos:line="80" pos:column="51"/></name><operator pos:line="80" pos:column="51">-&gt;<pos:position pos:line="80" pos:column="56"/></operator><name pos:line="80" pos:column="53">query_set<pos:position pos:line="80" pos:column="62"/></name><index pos:line="80" pos:column="62">[<expr><name pos:line="80" pos:column="63">i<pos:position pos:line="80" pos:column="64"/></name></expr>]<pos:position pos:line="80" pos:column="65"/></index></name></expr>;<pos:position pos:line="80" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="81" pos:column="13">pollset<pos:position pos:line="81" pos:column="20"/></name><operator pos:line="81" pos:column="20">-&gt;<pos:position pos:line="81" pos:column="25"/></operator><name pos:line="81" pos:column="22">p<pos:position pos:line="81" pos:column="23"/></name><operator pos:line="81" pos:column="23">-&gt;<pos:position pos:line="81" pos:column="28"/></operator><name pos:line="81" pos:column="25">result_set<pos:position pos:line="81" pos:column="35"/></name><index pos:line="81" pos:column="35">[<expr><name pos:line="81" pos:column="36">j<pos:position pos:line="81" pos:column="37"/></name></expr>]<pos:position pos:line="81" pos:column="38"/></index></name><operator pos:line="81" pos:column="38">.<pos:position pos:line="81" pos:column="39"/></operator><name pos:line="81" pos:column="39">rtnevents<pos:position pos:line="81" pos:column="48"/></name> <operator pos:line="81" pos:column="49">=<pos:position pos:line="81" pos:column="50"/></operator> <literal type="number" pos:line="81" pos:column="51">0<pos:position pos:line="81" pos:column="52"/></literal></expr>;<pos:position pos:line="81" pos:column="53"/></expr_stmt>
            <if pos:line="82" pos:column="13">if <condition pos:line="82" pos:column="16">(<expr><call><name pos:line="82" pos:column="17">FD_ISSET<pos:position pos:line="82" pos:column="25"/></name><argument_list pos:line="82" pos:column="25">(<argument><expr><name pos:line="82" pos:column="26">fd<pos:position pos:line="82" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="30">&amp;<pos:position pos:line="82" pos:column="35"/></operator><name pos:line="82" pos:column="31">readset<pos:position pos:line="82" pos:column="38"/></name></expr></argument>)<pos:position pos:line="82" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="40"/></condition><then pos:line="82" pos:column="40"> <block pos:line="82" pos:column="41">{
                <expr_stmt><expr><name><name pos:line="83" pos:column="17">pollset<pos:position pos:line="83" pos:column="24"/></name><operator pos:line="83" pos:column="24">-&gt;<pos:position pos:line="83" pos:column="29"/></operator><name pos:line="83" pos:column="26">p<pos:position pos:line="83" pos:column="27"/></name><operator pos:line="83" pos:column="27">-&gt;<pos:position pos:line="83" pos:column="32"/></operator><name pos:line="83" pos:column="29">result_set<pos:position pos:line="83" pos:column="39"/></name><index pos:line="83" pos:column="39">[<expr><name pos:line="83" pos:column="40">j<pos:position pos:line="83" pos:column="41"/></name></expr>]<pos:position pos:line="83" pos:column="42"/></index></name><operator pos:line="83" pos:column="42">.<pos:position pos:line="83" pos:column="43"/></operator><name pos:line="83" pos:column="43">rtnevents<pos:position pos:line="83" pos:column="52"/></name> <operator pos:line="83" pos:column="53">|=<pos:position pos:line="83" pos:column="55"/></operator> <name pos:line="83" pos:column="56">APR_POLLIN<pos:position pos:line="83" pos:column="66"/></name></expr>;<pos:position pos:line="83" pos:column="67"/></expr_stmt>
            }<pos:position pos:line="84" pos:column="14"/></block></then></if>
            <if pos:line="85" pos:column="13">if <condition pos:line="85" pos:column="16">(<expr><call><name pos:line="85" pos:column="17">FD_ISSET<pos:position pos:line="85" pos:column="25"/></name><argument_list pos:line="85" pos:column="25">(<argument><expr><name pos:line="85" pos:column="26">fd<pos:position pos:line="85" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="30">&amp;<pos:position pos:line="85" pos:column="35"/></operator><name pos:line="85" pos:column="31">writeset<pos:position pos:line="85" pos:column="39"/></name></expr></argument>)<pos:position pos:line="85" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="41"/></condition><then pos:line="85" pos:column="41"> <block pos:line="85" pos:column="42">{
                <expr_stmt><expr><name><name pos:line="86" pos:column="17">pollset<pos:position pos:line="86" pos:column="24"/></name><operator pos:line="86" pos:column="24">-&gt;<pos:position pos:line="86" pos:column="29"/></operator><name pos:line="86" pos:column="26">p<pos:position pos:line="86" pos:column="27"/></name><operator pos:line="86" pos:column="27">-&gt;<pos:position pos:line="86" pos:column="32"/></operator><name pos:line="86" pos:column="29">result_set<pos:position pos:line="86" pos:column="39"/></name><index pos:line="86" pos:column="39">[<expr><name pos:line="86" pos:column="40">j<pos:position pos:line="86" pos:column="41"/></name></expr>]<pos:position pos:line="86" pos:column="42"/></index></name><operator pos:line="86" pos:column="42">.<pos:position pos:line="86" pos:column="43"/></operator><name pos:line="86" pos:column="43">rtnevents<pos:position pos:line="86" pos:column="52"/></name> <operator pos:line="86" pos:column="53">|=<pos:position pos:line="86" pos:column="55"/></operator> <name pos:line="86" pos:column="56">APR_POLLOUT<pos:position pos:line="86" pos:column="67"/></name></expr>;<pos:position pos:line="86" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="87" pos:column="14"/></block></then></if>
            <if pos:line="88" pos:column="13">if <condition pos:line="88" pos:column="16">(<expr><call><name pos:line="88" pos:column="17">FD_ISSET<pos:position pos:line="88" pos:column="25"/></name><argument_list pos:line="88" pos:column="25">(<argument><expr><name pos:line="88" pos:column="26">fd<pos:position pos:line="88" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="30">&amp;<pos:position pos:line="88" pos:column="35"/></operator><name pos:line="88" pos:column="31">exceptset<pos:position pos:line="88" pos:column="40"/></name></expr></argument>)<pos:position pos:line="88" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="42"/></condition><then pos:line="88" pos:column="42"> <block pos:line="88" pos:column="43">{
                <expr_stmt><expr><name><name pos:line="89" pos:column="17">pollset<pos:position pos:line="89" pos:column="24"/></name><operator pos:line="89" pos:column="24">-&gt;<pos:position pos:line="89" pos:column="29"/></operator><name pos:line="89" pos:column="26">p<pos:position pos:line="89" pos:column="27"/></name><operator pos:line="89" pos:column="27">-&gt;<pos:position pos:line="89" pos:column="32"/></operator><name pos:line="89" pos:column="29">result_set<pos:position pos:line="89" pos:column="39"/></name><index pos:line="89" pos:column="39">[<expr><name pos:line="89" pos:column="40">j<pos:position pos:line="89" pos:column="41"/></name></expr>]<pos:position pos:line="89" pos:column="42"/></index></name><operator pos:line="89" pos:column="42">.<pos:position pos:line="89" pos:column="43"/></operator><name pos:line="89" pos:column="43">rtnevents<pos:position pos:line="89" pos:column="52"/></name> <operator pos:line="89" pos:column="53">|=<pos:position pos:line="89" pos:column="55"/></operator> <name pos:line="89" pos:column="56">APR_POLLERR<pos:position pos:line="89" pos:column="67"/></name></expr>;<pos:position pos:line="89" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="90" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="91" pos:column="13">j<pos:position pos:line="91" pos:column="14"/></name><operator pos:line="91" pos:column="14">++<pos:position pos:line="91" pos:column="16"/></operator></expr>;<pos:position pos:line="91" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="92" pos:column="10"/></block></then></if>
    }<pos:position pos:line="93" pos:column="6"/></block></for>
    <if pos:line="94" pos:column="5">if <condition pos:line="94" pos:column="8">(<expr><operator pos:line="94" pos:column="9">(<pos:position pos:line="94" pos:column="10"/></operator><operator pos:line="94" pos:column="10">(<pos:position pos:line="94" pos:column="11"/></operator><operator pos:line="94" pos:column="11">*<pos:position pos:line="94" pos:column="12"/></operator><name pos:line="94" pos:column="12">num<pos:position pos:line="94" pos:column="15"/></name><operator pos:line="94" pos:column="15">)<pos:position pos:line="94" pos:column="16"/></operator> <operator pos:line="94" pos:column="17">=<pos:position pos:line="94" pos:column="18"/></operator> <name pos:line="94" pos:column="19">j<pos:position pos:line="94" pos:column="20"/></name><operator pos:line="94" pos:column="20">)<pos:position pos:line="94" pos:column="21"/></operator> <operator pos:line="94" pos:column="22">!=<pos:position pos:line="94" pos:column="24"/></operator> <literal type="number" pos:line="94" pos:column="25">0<pos:position pos:line="94" pos:column="26"/></literal></expr>)<pos:position pos:line="94" pos:column="27"/></condition><then pos:line="94" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="9">rv<pos:position pos:line="95" pos:column="11"/></name> <operator pos:line="95" pos:column="12">=<pos:position pos:line="95" pos:column="13"/></operator> <name pos:line="95" pos:column="14">APR_SUCCESS<pos:position pos:line="95" pos:column="25"/></name></expr>;<pos:position pos:line="95" pos:column="26"/></expr_stmt></block></then></if>

    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><name pos:line="97" pos:column="9">descriptors<pos:position pos:line="97" pos:column="20"/></name></expr>)<pos:position pos:line="97" pos:column="21"/></condition><then pos:line="97" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="98" pos:column="9">*<pos:position pos:line="98" pos:column="10"/></operator><name pos:line="98" pos:column="10">descriptors<pos:position pos:line="98" pos:column="21"/></name> <operator pos:line="98" pos:column="22">=<pos:position pos:line="98" pos:column="23"/></operator> <name><name pos:line="98" pos:column="24">pollset<pos:position pos:line="98" pos:column="31"/></name><operator pos:line="98" pos:column="31">-&gt;<pos:position pos:line="98" pos:column="36"/></operator><name pos:line="98" pos:column="33">p<pos:position pos:line="98" pos:column="34"/></name><operator pos:line="98" pos:column="34">-&gt;<pos:position pos:line="98" pos:column="39"/></operator><name pos:line="98" pos:column="36">result_set<pos:position pos:line="98" pos:column="46"/></name></name></expr>;<pos:position pos:line="98" pos:column="47"/></expr_stmt></block></then></if>
    <return pos:line="99" pos:column="5">return <expr><name pos:line="99" pos:column="12">rv<pos:position pos:line="99" pos:column="14"/></name></expr>;<pos:position pos:line="99" pos:column="15"/></return>
}<pos:position pos:line="100" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2751_httpd-2.2.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">enum<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">XML_Error<pos:position pos:line="1" pos:column="22"/></name></name></type>
<name pos:line="2" pos:column="1">processXmlDecl<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">XML_Parser<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">parser<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">int<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">isGeneralTextEntity<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>,
	       <parameter><decl><type><specifier pos:line="3" pos:column="16">const<pos:position pos:line="3" pos:column="21"/></specifier> <name pos:line="3" pos:column="22">char<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">s<pos:position pos:line="3" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="31">const<pos:position pos:line="3" pos:column="36"/></specifier> <name pos:line="3" pos:column="37">char<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">next<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">encodingName<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><literal type="number" pos:line="5" pos:column="30">0<pos:position pos:line="5" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">storedEncName<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><literal type="number" pos:line="6" pos:column="31">0<pos:position pos:line="6" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">ENCODING<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">newEncoding<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><literal type="number" pos:line="7" pos:column="33">0<pos:position pos:line="7" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">version<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><literal type="number" pos:line="8" pos:column="25">0<pos:position pos:line="8" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">const<pos:position pos:line="9" pos:column="8"/></specifier> <name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">versionend<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">storedversion<pos:position pos:line="10" pos:column="28"/></name> <init pos:line="10" pos:column="29">= <expr><literal type="number" pos:line="10" pos:column="31">0<pos:position pos:line="10" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">standalone<pos:position pos:line="11" pos:column="17"/></name> <init pos:line="11" pos:column="18">= <expr><operator pos:line="11" pos:column="20">-<pos:position pos:line="11" pos:column="21"/></operator><literal type="number" pos:line="11" pos:column="21">1<pos:position pos:line="11" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><operator pos:line="12" pos:column="8">(<pos:position pos:line="12" pos:column="9"/></operator><ternary><condition><expr><name pos:line="12" pos:column="9">ns<pos:position pos:line="12" pos:column="11"/></name></expr>
        ?<pos:position pos:line="13" pos:column="10"/></condition><then pos:line="13" pos:column="10"> <expr><name pos:line="13" pos:column="11">XmlParseXmlDeclNS<pos:position pos:line="13" pos:column="28"/></name></expr>
	<pos:position pos:line="14" pos:column="2"/></then><else pos:line="14" pos:column="9">: <expr><name pos:line="14" pos:column="11">XmlParseXmlDecl<pos:position pos:line="14" pos:column="26"/></name></expr></else></ternary><operator pos:line="14" pos:column="26">)<pos:position pos:line="14" pos:column="27"/></operator><operator pos:line="14" pos:column="27">(<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">isGeneralTextEntity<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">,<pos:position pos:line="14" pos:column="48"/></operator>
		           <name pos:line="15" pos:column="28">encoding<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">,<pos:position pos:line="15" pos:column="37"/></operator>
		           <name pos:line="16" pos:column="28">s<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">,<pos:position pos:line="16" pos:column="30"/></operator>
		           <name pos:line="17" pos:column="28">next<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">,<pos:position pos:line="17" pos:column="33"/></operator>
		           <operator pos:line="18" pos:column="28">&amp;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="29">eventPtr<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">,<pos:position pos:line="18" pos:column="38"/></operator>
		           <operator pos:line="19" pos:column="28">&amp;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="29">version<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">,<pos:position pos:line="19" pos:column="37"/></operator>
			   <operator pos:line="20" pos:column="28">&amp;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="29">versionend<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">,<pos:position pos:line="20" pos:column="40"/></operator>
		           <operator pos:line="21" pos:column="28">&amp;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="29">encodingName<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">,<pos:position pos:line="21" pos:column="42"/></operator>
		           <operator pos:line="22" pos:column="28">&amp;<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="29">newEncoding<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">,<pos:position pos:line="22" pos:column="41"/></operator>
		           <operator pos:line="23" pos:column="28">&amp;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="29">standalone<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">)<pos:position pos:line="23" pos:column="40"/></operator></expr>)<pos:position pos:line="23" pos:column="41"/></condition><then pos:line="23" pos:column="41">
    <block type="pseudo"><return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">XML_ERROR_SYNTAX<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></return></block></then></if>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><operator pos:line="25" pos:column="7">!<pos:position pos:line="25" pos:column="8"/></operator><name pos:line="25" pos:column="8">isGeneralTextEntity<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">&amp;&amp;<pos:position pos:line="25" pos:column="38"/></operator> <name pos:line="25" pos:column="31">standalone<pos:position pos:line="25" pos:column="41"/></name> <operator pos:line="25" pos:column="42">==<pos:position pos:line="25" pos:column="44"/></operator> <literal type="number" pos:line="25" pos:column="45">1<pos:position pos:line="25" pos:column="46"/></literal></expr>)<pos:position pos:line="25" pos:column="47"/></condition><then pos:line="25" pos:column="47"> <block pos:line="25" pos:column="48">{
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">dtd<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">.<pos:position pos:line="26" pos:column="9"/></operator><name pos:line="26" pos:column="9">standalone<pos:position pos:line="26" pos:column="19"/></name></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <literal type="number" pos:line="26" pos:column="22">1<pos:position pos:line="26" pos:column="23"/></literal></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
<cpp:ifdef pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">ifdef<pos:position pos:line="27" pos:column="7"/></cpp:directive> <name pos:line="27" pos:column="8">XML_DTD<pos:position pos:line="27" pos:column="15"/></name></cpp:ifdef>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">paramEntityParsing<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">==<pos:position pos:line="28" pos:column="30"/></operator> <name pos:line="28" pos:column="31">XML_PARAM_ENTITY_PARSING_UNLESS_STANDALONE<pos:position pos:line="28" pos:column="73"/></name></expr>)<pos:position pos:line="28" pos:column="74"/></condition><then pos:line="28" pos:column="74">
      <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="7">paramEntityParsing<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <name pos:line="29" pos:column="28">XML_PARAM_ENTITY_PARSING_NEVER<pos:position pos:line="29" pos:column="58"/></name></expr>;<pos:position pos:line="29" pos:column="59"/></expr_stmt></block></then></if>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="30" pos:column="8">/* XML_DTD */</comment>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name pos:line="32" pos:column="7">xmlDeclHandler<pos:position pos:line="32" pos:column="21"/></name></expr>)<pos:position pos:line="32" pos:column="22"/></condition><then pos:line="32" pos:column="22"> <block pos:line="32" pos:column="23">{
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">encodingName<pos:position pos:line="33" pos:column="21"/></name></expr>)<pos:position pos:line="33" pos:column="22"/></condition><then pos:line="33" pos:column="22"> <block pos:line="33" pos:column="23">{
      <expr_stmt><expr><name pos:line="34" pos:column="7">storedEncName<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <call><name pos:line="34" pos:column="23">poolStoreString<pos:position pos:line="34" pos:column="38"/></name><argument_list pos:line="34" pos:column="38">(<argument><expr><operator pos:line="34" pos:column="39">&amp;<pos:position pos:line="34" pos:column="44"/></operator><name pos:line="34" pos:column="40">temp2Pool<pos:position pos:line="34" pos:column="49"/></name></expr></argument>,
				      <argument><expr><name pos:line="35" pos:column="39">encoding<pos:position pos:line="35" pos:column="47"/></name></expr></argument>,
				      <argument><expr><name pos:line="36" pos:column="39">encodingName<pos:position pos:line="36" pos:column="51"/></name></expr></argument>,
				      <argument><expr><name pos:line="37" pos:column="39">encodingName<pos:position pos:line="37" pos:column="51"/></name>
				      <operator pos:line="38" pos:column="39">+<pos:position pos:line="38" pos:column="40"/></operator> <call><name pos:line="38" pos:column="41">XmlNameLength<pos:position pos:line="38" pos:column="54"/></name><argument_list pos:line="38" pos:column="54">(<argument><expr><name pos:line="38" pos:column="55">encoding<pos:position pos:line="38" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="65">encodingName<pos:position pos:line="38" pos:column="77"/></name></expr></argument>)<pos:position pos:line="38" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="80"/></expr_stmt>
      <if pos:line="39" pos:column="7">if <condition pos:line="39" pos:column="10">(<expr><operator pos:line="39" pos:column="11">!<pos:position pos:line="39" pos:column="12"/></operator> <name pos:line="39" pos:column="13">storedEncName<pos:position pos:line="39" pos:column="26"/></name></expr>)<pos:position pos:line="39" pos:column="27"/></condition><then pos:line="39" pos:column="27">
	<block type="pseudo"><return pos:line="40" pos:column="9">return <expr><name pos:line="40" pos:column="16">XML_ERROR_NO_MEMORY<pos:position pos:line="40" pos:column="35"/></name></expr>;<pos:position pos:line="40" pos:column="36"/></return></block></then></if>
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">poolFinish<pos:position pos:line="41" pos:column="17"/></name><argument_list pos:line="41" pos:column="17">(<argument><expr><operator pos:line="41" pos:column="18">&amp;<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="19">temp2Pool<pos:position pos:line="41" pos:column="28"/></name></expr></argument>)<pos:position pos:line="41" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">version<pos:position pos:line="43" pos:column="16"/></name></expr>)<pos:position pos:line="43" pos:column="17"/></condition><then pos:line="43" pos:column="17"> <block pos:line="43" pos:column="18">{
      <expr_stmt><expr><name pos:line="44" pos:column="7">storedversion<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <call><name pos:line="44" pos:column="23">poolStoreString<pos:position pos:line="44" pos:column="38"/></name><argument_list pos:line="44" pos:column="38">(<argument><expr><operator pos:line="44" pos:column="39">&amp;<pos:position pos:line="44" pos:column="44"/></operator><name pos:line="44" pos:column="40">temp2Pool<pos:position pos:line="44" pos:column="49"/></name></expr></argument>,
				      <argument><expr><name pos:line="45" pos:column="39">encoding<pos:position pos:line="45" pos:column="47"/></name></expr></argument>,
				      <argument><expr><name pos:line="46" pos:column="39">version<pos:position pos:line="46" pos:column="46"/></name></expr></argument>,
				      <argument><expr><name pos:line="47" pos:column="39">versionend<pos:position pos:line="47" pos:column="49"/></name> <operator pos:line="47" pos:column="50">-<pos:position pos:line="47" pos:column="51"/></operator> <name><name pos:line="47" pos:column="52">encoding<pos:position pos:line="47" pos:column="60"/></name><operator pos:line="47" pos:column="60">-&gt;<pos:position pos:line="47" pos:column="65"/></operator><name pos:line="47" pos:column="62">minBytesPerChar<pos:position pos:line="47" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="79"/></expr_stmt>
      <if pos:line="48" pos:column="7">if <condition pos:line="48" pos:column="10">(<expr><operator pos:line="48" pos:column="11">!<pos:position pos:line="48" pos:column="12"/></operator> <name pos:line="48" pos:column="13">storedversion<pos:position pos:line="48" pos:column="26"/></name></expr>)<pos:position pos:line="48" pos:column="27"/></condition><then pos:line="48" pos:column="27">
	<block type="pseudo"><return pos:line="49" pos:column="9">return <expr><name pos:line="49" pos:column="16">XML_ERROR_NO_MEMORY<pos:position pos:line="49" pos:column="35"/></name></expr>;<pos:position pos:line="49" pos:column="36"/></return></block></then></if>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">xmlDeclHandler<pos:position pos:line="51" pos:column="19"/></name><argument_list pos:line="51" pos:column="19">(<argument><expr><name pos:line="51" pos:column="20">handlerArg<pos:position pos:line="51" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="32">storedversion<pos:position pos:line="51" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="47">storedEncName<pos:position pos:line="51" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="62">standalone<pos:position pos:line="51" pos:column="72"/></name></expr></argument>)<pos:position pos:line="51" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="74"/></expr_stmt>
  }<pos:position pos:line="52" pos:column="4"/></block></then>
  <elseif pos:line="53" pos:column="3">else <if pos:line="53" pos:column="8">if <condition pos:line="53" pos:column="11">(<expr><name pos:line="53" pos:column="12">defaultHandler<pos:position pos:line="53" pos:column="26"/></name></expr>)<pos:position pos:line="53" pos:column="27"/></condition><then pos:line="53" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="5">reportDefault<pos:position pos:line="54" pos:column="18"/></name><argument_list pos:line="54" pos:column="18">(<argument><expr><name pos:line="54" pos:column="19">parser<pos:position pos:line="54" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="27">encoding<pos:position pos:line="54" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="37">s<pos:position pos:line="54" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="40">next<pos:position pos:line="54" pos:column="44"/></name></expr></argument>)<pos:position pos:line="54" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="46"/></expr_stmt></block></then></if></elseif></if>
  <if pos:line="55" pos:column="3">if <condition pos:line="55" pos:column="6">(<expr><operator pos:line="55" pos:column="7">!<pos:position pos:line="55" pos:column="8"/></operator><name pos:line="55" pos:column="8">protocolEncodingName<pos:position pos:line="55" pos:column="28"/></name></expr>)<pos:position pos:line="55" pos:column="29"/></condition><then pos:line="55" pos:column="29"> <block pos:line="55" pos:column="30">{
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">newEncoding<pos:position pos:line="56" pos:column="20"/></name></expr>)<pos:position pos:line="56" pos:column="21"/></condition><then pos:line="56" pos:column="21"> <block pos:line="56" pos:column="22">{
      <if pos:line="57" pos:column="7">if <condition pos:line="57" pos:column="10">(<expr><name><name pos:line="57" pos:column="11">newEncoding<pos:position pos:line="57" pos:column="22"/></name><operator pos:line="57" pos:column="22">-&gt;<pos:position pos:line="57" pos:column="27"/></operator><name pos:line="57" pos:column="24">minBytesPerChar<pos:position pos:line="57" pos:column="39"/></name></name> <operator pos:line="57" pos:column="40">!=<pos:position pos:line="57" pos:column="42"/></operator> <name><name pos:line="57" pos:column="43">encoding<pos:position pos:line="57" pos:column="51"/></name><operator pos:line="57" pos:column="51">-&gt;<pos:position pos:line="57" pos:column="56"/></operator><name pos:line="57" pos:column="53">minBytesPerChar<pos:position pos:line="57" pos:column="68"/></name></name></expr>)<pos:position pos:line="57" pos:column="69"/></condition><then pos:line="57" pos:column="69"> <block pos:line="57" pos:column="70">{
	<expr_stmt><expr><name pos:line="58" pos:column="9">eventPtr<pos:position pos:line="58" pos:column="17"/></name> <operator pos:line="58" pos:column="18">=<pos:position pos:line="58" pos:column="19"/></operator> <name pos:line="58" pos:column="20">encodingName<pos:position pos:line="58" pos:column="32"/></name></expr>;<pos:position pos:line="58" pos:column="33"/></expr_stmt>
	<return pos:line="59" pos:column="9">return <expr><name pos:line="59" pos:column="16">XML_ERROR_INCORRECT_ENCODING<pos:position pos:line="59" pos:column="44"/></name></expr>;<pos:position pos:line="59" pos:column="45"/></return>
      }<pos:position pos:line="60" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="61" pos:column="7">encoding<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <name pos:line="61" pos:column="18">newEncoding<pos:position pos:line="61" pos:column="29"/></name></expr>;<pos:position pos:line="61" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></then>
    <elseif pos:line="63" pos:column="5">else <if pos:line="63" pos:column="10">if <condition pos:line="63" pos:column="13">(<expr><name pos:line="63" pos:column="14">encodingName<pos:position pos:line="63" pos:column="26"/></name></expr>)<pos:position pos:line="63" pos:column="27"/></condition><then pos:line="63" pos:column="27"> <block pos:line="63" pos:column="28">{
      <decl_stmt><decl><type><name><name pos:line="64" pos:column="7">enum<pos:position pos:line="64" pos:column="11"/></name> <name pos:line="64" pos:column="12">XML_Error<pos:position pos:line="64" pos:column="21"/></name></name></type> <name pos:line="64" pos:column="22">result<pos:position pos:line="64" pos:column="28"/></name></decl>;<pos:position pos:line="64" pos:column="29"/></decl_stmt>
      <if pos:line="65" pos:column="7">if <condition pos:line="65" pos:column="10">(<expr><operator pos:line="65" pos:column="11">!<pos:position pos:line="65" pos:column="12"/></operator> <name pos:line="65" pos:column="13">storedEncName<pos:position pos:line="65" pos:column="26"/></name></expr>)<pos:position pos:line="65" pos:column="27"/></condition><then pos:line="65" pos:column="27"> <block pos:line="65" pos:column="28">{
	<expr_stmt><expr><name pos:line="66" pos:column="9">storedEncName<pos:position pos:line="66" pos:column="22"/></name> <operator pos:line="66" pos:column="23">=<pos:position pos:line="66" pos:column="24"/></operator> <call><name pos:line="66" pos:column="25">poolStoreString<pos:position pos:line="66" pos:column="40"/></name><argument_list pos:line="66" pos:column="40">(<argument><expr><operator pos:line="66" pos:column="41">&amp;<pos:position pos:line="66" pos:column="46"/></operator><name pos:line="66" pos:column="42">temp2Pool<pos:position pos:line="66" pos:column="51"/></name></expr></argument>,
					<argument><expr><name pos:line="67" pos:column="41">encoding<pos:position pos:line="67" pos:column="49"/></name></expr></argument>,
					<argument><expr><name pos:line="68" pos:column="41">encodingName<pos:position pos:line="68" pos:column="53"/></name></expr></argument>,
					<argument><expr><name pos:line="69" pos:column="41">encodingName<pos:position pos:line="69" pos:column="53"/></name>
					<operator pos:line="70" pos:column="41">+<pos:position pos:line="70" pos:column="42"/></operator> <call><name pos:line="70" pos:column="43">XmlNameLength<pos:position pos:line="70" pos:column="56"/></name><argument_list pos:line="70" pos:column="56">(<argument><expr><name pos:line="70" pos:column="57">encoding<pos:position pos:line="70" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="67">encodingName<pos:position pos:line="70" pos:column="79"/></name></expr></argument>)<pos:position pos:line="70" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="82"/></expr_stmt>
	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><operator pos:line="71" pos:column="13">!<pos:position pos:line="71" pos:column="14"/></operator> <name pos:line="71" pos:column="15">storedEncName<pos:position pos:line="71" pos:column="28"/></name></expr>)<pos:position pos:line="71" pos:column="29"/></condition><then pos:line="71" pos:column="29">
	  <block type="pseudo"><return pos:line="72" pos:column="11">return <expr><name pos:line="72" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="72" pos:column="37"/></name></expr>;<pos:position pos:line="72" pos:column="38"/></return></block></then></if>
      }<pos:position pos:line="73" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="74" pos:column="7">result<pos:position pos:line="74" pos:column="13"/></name> <operator pos:line="74" pos:column="14">=<pos:position pos:line="74" pos:column="15"/></operator> <call><name pos:line="74" pos:column="16">handleUnknownEncoding<pos:position pos:line="74" pos:column="37"/></name><argument_list pos:line="74" pos:column="37">(<argument><expr><name pos:line="74" pos:column="38">parser<pos:position pos:line="74" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="46">storedEncName<pos:position pos:line="74" pos:column="59"/></name></expr></argument>)<pos:position pos:line="74" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="75" pos:column="7">poolClear<pos:position pos:line="75" pos:column="16"/></name><argument_list pos:line="75" pos:column="16">(<argument><expr><operator pos:line="75" pos:column="17">&amp;<pos:position pos:line="75" pos:column="22"/></operator><name pos:line="75" pos:column="18">tempPool<pos:position pos:line="75" pos:column="26"/></name></expr></argument>)<pos:position pos:line="75" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="28"/></expr_stmt>
      <if pos:line="76" pos:column="7">if <condition pos:line="76" pos:column="10">(<expr><name pos:line="76" pos:column="11">result<pos:position pos:line="76" pos:column="17"/></name> <operator pos:line="76" pos:column="18">==<pos:position pos:line="76" pos:column="20"/></operator> <name pos:line="76" pos:column="21">XML_ERROR_UNKNOWN_ENCODING<pos:position pos:line="76" pos:column="47"/></name></expr>)<pos:position pos:line="76" pos:column="48"/></condition><then pos:line="76" pos:column="48">
	<block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="9">eventPtr<pos:position pos:line="77" pos:column="17"/></name> <operator pos:line="77" pos:column="18">=<pos:position pos:line="77" pos:column="19"/></operator> <name pos:line="77" pos:column="20">encodingName<pos:position pos:line="77" pos:column="32"/></name></expr>;<pos:position pos:line="77" pos:column="33"/></expr_stmt></block></then></if>
      <return pos:line="78" pos:column="7">return <expr><name pos:line="78" pos:column="14">result<pos:position pos:line="78" pos:column="20"/></name></expr>;<pos:position pos:line="78" pos:column="21"/></return>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if>

  <if pos:line="82" pos:column="3">if <condition pos:line="82" pos:column="6">(<expr><name pos:line="82" pos:column="7">storedEncName<pos:position pos:line="82" pos:column="20"/></name> <operator pos:line="82" pos:column="21">||<pos:position pos:line="82" pos:column="23"/></operator> <name pos:line="82" pos:column="24">storedversion<pos:position pos:line="82" pos:column="37"/></name></expr>)<pos:position pos:line="82" pos:column="38"/></condition><then pos:line="82" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="5">poolClear<pos:position pos:line="83" pos:column="14"/></name><argument_list pos:line="83" pos:column="14">(<argument><expr><operator pos:line="83" pos:column="15">&amp;<pos:position pos:line="83" pos:column="20"/></operator><name pos:line="83" pos:column="16">temp2Pool<pos:position pos:line="83" pos:column="25"/></name></expr></argument>)<pos:position pos:line="83" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="27"/></expr_stmt></block></then></if>

  <return pos:line="85" pos:column="3">return <expr><name pos:line="85" pos:column="10">XML_ERROR_NONE<pos:position pos:line="85" pos:column="24"/></name></expr>;<pos:position pos:line="85" pos:column="25"/></return>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

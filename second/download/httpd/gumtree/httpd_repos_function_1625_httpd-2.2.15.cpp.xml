<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1625_httpd-2.2.15.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">merge_ef_dir_conf<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">apr_pool_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">p<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">void<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">basev<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">void<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">overridesv<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ef_dir_t<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">a<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><operator pos:line="3" pos:column="19">(<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="20">ef_dir_t<pos:position pos:line="3" pos:column="28"/></name> <operator pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></operator><operator pos:line="3" pos:column="30">)<pos:position pos:line="3" pos:column="31"/></operator><call><name pos:line="3" pos:column="31">apr_pcalloc<pos:position pos:line="3" pos:column="42"/></name> <argument_list pos:line="3" pos:column="43">(<argument><expr><name pos:line="3" pos:column="44">p<pos:position pos:line="3" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="47">sizeof<argument_list pos:line="3" pos:column="53">(<argument><expr><name pos:line="3" pos:column="54">ef_dir_t<pos:position pos:line="3" pos:column="62"/></name></expr></argument>)<pos:position pos:line="3" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="65"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ef_dir_t<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">base<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><operator pos:line="4" pos:column="22">(<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">ef_dir_t<pos:position pos:line="4" pos:column="31"/></name> <operator pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></operator><operator pos:line="4" pos:column="33">)<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="34">basev<pos:position pos:line="4" pos:column="39"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="42">over<pos:position pos:line="4" pos:column="46"/></name> <init pos:line="4" pos:column="47">= <expr><operator pos:line="4" pos:column="49">(<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="50">ef_dir_t<pos:position pos:line="4" pos:column="58"/></name> <operator pos:line="4" pos:column="59">*<pos:position pos:line="4" pos:column="60"/></operator><operator pos:line="4" pos:column="60">)<pos:position pos:line="4" pos:column="61"/></operator><name pos:line="4" pos:column="61">overridesv<pos:position pos:line="4" pos:column="71"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="72"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">over<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">debug<pos:position pos:line="6" pos:column="20"/></name></name> <operator pos:line="6" pos:column="21">!=<pos:position pos:line="6" pos:column="23"/></operator> <operator pos:line="6" pos:column="24">-<pos:position pos:line="6" pos:column="25"/></operator><literal type="number" pos:line="6" pos:column="25">1<pos:position pos:line="6" pos:column="26"/></literal></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27"> <block pos:line="6" pos:column="28">{        <comment type="block" pos:line="6" pos:column="37">/* if admin coded something... */</comment>
        <expr_stmt><expr><name><name pos:line="7" pos:column="9">a<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">debug<pos:position pos:line="7" pos:column="17"/></name></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <name><name pos:line="7" pos:column="20">over<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">-&gt;<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="26">debug<pos:position pos:line="7" pos:column="31"/></name></name></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then>
    <else pos:line="9" pos:column="5">else <block pos:line="9" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">a<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">debug<pos:position pos:line="10" pos:column="17"/></name></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <name><name pos:line="10" pos:column="20">base<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">debug<pos:position pos:line="10" pos:column="31"/></name></name></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></else></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">over<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">log_stderr<pos:position pos:line="13" pos:column="25"/></name></name> <operator pos:line="13" pos:column="26">!=<pos:position pos:line="13" pos:column="28"/></operator> <operator pos:line="13" pos:column="29">-<pos:position pos:line="13" pos:column="30"/></operator><literal type="number" pos:line="13" pos:column="30">1<pos:position pos:line="13" pos:column="31"/></literal></expr>)<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32"> <block pos:line="13" pos:column="33">{   <comment type="block" pos:line="13" pos:column="37">/* if admin coded something... */</comment>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">a<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">log_stderr<pos:position pos:line="14" pos:column="22"/></name></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <name><name pos:line="14" pos:column="25">over<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">log_stderr<pos:position pos:line="14" pos:column="41"/></name></name></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then>
    <else pos:line="16" pos:column="5">else <block pos:line="16" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">a<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">log_stderr<pos:position pos:line="17" pos:column="22"/></name></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <name><name pos:line="17" pos:column="25">base<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">-&gt;<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="31">log_stderr<pos:position pos:line="17" pos:column="41"/></name></name></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">over<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">onfail<pos:position pos:line="20" pos:column="21"/></name></name> <operator pos:line="20" pos:column="22">!=<pos:position pos:line="20" pos:column="24"/></operator> <operator pos:line="20" pos:column="25">-<pos:position pos:line="20" pos:column="26"/></operator><literal type="number" pos:line="20" pos:column="26">1<pos:position pos:line="20" pos:column="27"/></literal></expr>)<pos:position pos:line="20" pos:column="28"/></condition><then pos:line="20" pos:column="28"> <block pos:line="20" pos:column="29">{   <comment type="block" pos:line="20" pos:column="33">/* if admin coded something... */</comment>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">a<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">onfail<pos:position pos:line="21" pos:column="18"/></name></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <name><name pos:line="21" pos:column="21">over<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">onfail<pos:position pos:line="21" pos:column="33"/></name></name></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then>
    <else pos:line="23" pos:column="5">else <block pos:line="23" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">a<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">onfail<pos:position pos:line="24" pos:column="18"/></name></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name><name pos:line="24" pos:column="21">base<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">onfail<pos:position pos:line="24" pos:column="33"/></name></name></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></else></if>

    <return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">a<pos:position pos:line="27" pos:column="13"/></name></expr>;<pos:position pos:line="27" pos:column="14"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

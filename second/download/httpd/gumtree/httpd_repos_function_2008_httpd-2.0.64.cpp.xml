<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2008_httpd-2.0.64.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ap_reclaim_child_processes<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">int<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">terminate<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_time_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">waittime<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><literal type="number" pos:line="3" pos:column="27">1024<pos:position pos:line="3" pos:column="31"/></literal> <operator pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></operator> <literal type="number" pos:line="3" pos:column="34">16<pos:position pos:line="3" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">extra_process_t<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">cur_extra<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">not_dead_yet<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">max_daemons<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_time_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">starttime<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><call><name pos:line="8" pos:column="28">apr_time_now<pos:position pos:line="8" pos:column="40"/></name><argument_list pos:line="8" pos:column="40">()<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt>
    <comment type="block" pos:line="9" pos:column="5">/* this table of actions and elapsed times tells what action is taken
     * at which elapsed time from starting the reclaim
     */</comment>
    <struct pos:line="12" pos:column="5">struct <block pos:line="12" pos:column="12">{<public type="default" pos:line="12" pos:column="13">
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">action_t<pos:position pos:line="13" pos:column="17"/></name></type> <name pos:line="13" pos:column="18">action<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">apr_time_t<pos:position pos:line="14" pos:column="19"/></name></type> <name pos:line="14" pos:column="20">action_time<pos:position pos:line="14" pos:column="31"/></name></decl>;<pos:position pos:line="14" pos:column="32"/></decl_stmt>
    <pos:position pos:line="15" pos:column="5"/></public>}<pos:position pos:line="15" pos:column="6"/></block> <decl><name><name pos:line="15" pos:column="7">action_table<pos:position pos:line="15" pos:column="19"/></name><index pos:line="15" pos:column="19">[]<pos:position pos:line="15" pos:column="21"/></index></name> <init pos:line="15" pos:column="22">= <expr><block pos:line="15" pos:column="24">{
        <expr><block pos:line="16" pos:column="9">{<expr><name pos:line="16" pos:column="10">DO_NOTHING<pos:position pos:line="16" pos:column="20"/></name></expr>, <expr><literal type="number" pos:line="16" pos:column="22">0<pos:position pos:line="16" pos:column="23"/></literal></expr>}<pos:position pos:line="16" pos:column="24"/></block></expr>, <comment type="block" pos:line="16" pos:column="26">/* dummy entry for iterations where we reap
                          * children but take no action against
                          * stragglers
                          */</comment>
        <expr><block pos:line="20" pos:column="9">{<expr><name pos:line="20" pos:column="10">SEND_SIGTERM<pos:position pos:line="20" pos:column="22"/></name></expr>, <macro><name pos:line="20" pos:column="24">apr_time_from_sec<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">(<argument><literal type="number" pos:line="20" pos:column="42">3<pos:position pos:line="20" pos:column="43"/></literal></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></macro>}<pos:position pos:line="20" pos:column="45"/></block></expr>,
        <expr><block pos:line="21" pos:column="9">{<expr><name pos:line="21" pos:column="10">SEND_SIGTERM<pos:position pos:line="21" pos:column="22"/></name></expr>, <macro><name pos:line="21" pos:column="24">apr_time_from_sec<pos:position pos:line="21" pos:column="41"/></name><argument_list pos:line="21" pos:column="41">(<argument><literal type="number" pos:line="21" pos:column="42">5<pos:position pos:line="21" pos:column="43"/></literal></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></macro>}<pos:position pos:line="21" pos:column="45"/></block></expr>,
        <expr><block pos:line="22" pos:column="9">{<expr><name pos:line="22" pos:column="10">SEND_SIGTERM<pos:position pos:line="22" pos:column="22"/></name></expr>, <macro><name pos:line="22" pos:column="24">apr_time_from_sec<pos:position pos:line="22" pos:column="41"/></name><argument_list pos:line="22" pos:column="41">(<argument><literal type="number" pos:line="22" pos:column="42">7<pos:position pos:line="22" pos:column="43"/></literal></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></macro>}<pos:position pos:line="22" pos:column="45"/></block></expr>,
        <expr><block pos:line="23" pos:column="9">{<expr><name pos:line="23" pos:column="10">SEND_SIGKILL<pos:position pos:line="23" pos:column="22"/></name></expr>, <macro><name pos:line="23" pos:column="24">apr_time_from_sec<pos:position pos:line="23" pos:column="41"/></name><argument_list pos:line="23" pos:column="41">(<argument><literal type="number" pos:line="23" pos:column="42">9<pos:position pos:line="23" pos:column="43"/></literal></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></macro>}<pos:position pos:line="23" pos:column="45"/></block></expr>,
        <expr><block pos:line="24" pos:column="9">{<expr><name pos:line="24" pos:column="10">GIVEUP<pos:position pos:line="24" pos:column="16"/></name></expr>,       <macro><name pos:line="24" pos:column="24">apr_time_from_sec<pos:position pos:line="24" pos:column="41"/></name><argument_list pos:line="24" pos:column="41">(<argument><literal type="number" pos:line="24" pos:column="42">10<pos:position pos:line="24" pos:column="44"/></literal></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></macro>}<pos:position pos:line="24" pos:column="46"/></block></expr>
    }<pos:position pos:line="25" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="25" pos:column="7"/></struct>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">int<pos:position pos:line="26" pos:column="8"/></name></type> <name pos:line="26" pos:column="9">cur_action<pos:position pos:line="26" pos:column="19"/></name></decl>;<pos:position pos:line="26" pos:column="20"/></decl_stmt>      <comment type="block" pos:line="26" pos:column="26">/* index of action we decided to take this
                          * iteration
                          */</comment>
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">int<pos:position pos:line="29" pos:column="8"/></name></type> <name pos:line="29" pos:column="9">next_action<pos:position pos:line="29" pos:column="20"/></name> <init pos:line="29" pos:column="21">= <expr><literal type="number" pos:line="29" pos:column="23">1<pos:position pos:line="29" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="25"/></decl_stmt> <comment type="block" pos:line="29" pos:column="26">/* index of first real action */</comment>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">ap_mpm_query<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">AP_MPMQ_MAX_DAEMON_USED<pos:position pos:line="31" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="43">&amp;<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="44">max_daemons<pos:position pos:line="31" pos:column="55"/></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>

    <do pos:line="33" pos:column="5">do <block pos:line="33" pos:column="8">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">apr_sleep<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><name pos:line="34" pos:column="19">waittime<pos:position pos:line="34" pos:column="27"/></name></expr></argument>)<pos:position pos:line="34" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
        <comment type="block" pos:line="35" pos:column="9">/* don't let waittime get longer than 1 second; otherwise, we don't
         * react quickly to the last child exiting, and taking action can
         * be delayed
         */</comment>
        <expr_stmt><expr><name pos:line="39" pos:column="9">waittime<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">=<pos:position pos:line="39" pos:column="19"/></operator> <name pos:line="39" pos:column="20">waittime<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">*<pos:position pos:line="39" pos:column="30"/></operator> <literal type="number" pos:line="39" pos:column="31">4<pos:position pos:line="39" pos:column="32"/></literal></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">waittime<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">&gt;<pos:position pos:line="40" pos:column="26"/></operator> <call><name pos:line="40" pos:column="24">apr_time_from_sec<pos:position pos:line="40" pos:column="41"/></name><argument_list pos:line="40" pos:column="41">(<argument><expr><literal type="number" pos:line="40" pos:column="42">1<pos:position pos:line="40" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="45"/></condition><then pos:line="40" pos:column="45"> <block pos:line="40" pos:column="46">{
            <expr_stmt><expr><name pos:line="41" pos:column="13">waittime<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <call><name pos:line="41" pos:column="24">apr_time_from_sec<pos:position pos:line="41" pos:column="41"/></name><argument_list pos:line="41" pos:column="41">(<argument><expr><literal type="number" pos:line="41" pos:column="42">1<pos:position pos:line="41" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="44" pos:column="9">/* see what action to take, if any */</comment>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name><name pos:line="45" pos:column="13">action_table<pos:position pos:line="45" pos:column="25"/></name><index pos:line="45" pos:column="25">[<expr><name pos:line="45" pos:column="26">next_action<pos:position pos:line="45" pos:column="37"/></name></expr>]<pos:position pos:line="45" pos:column="38"/></index></name><operator pos:line="45" pos:column="38">.<pos:position pos:line="45" pos:column="39"/></operator><name pos:line="45" pos:column="39">action_time<pos:position pos:line="45" pos:column="50"/></name> <operator pos:line="45" pos:column="51">&lt;=<pos:position pos:line="45" pos:column="56"/></operator> <call><name pos:line="45" pos:column="54">apr_time_now<pos:position pos:line="45" pos:column="66"/></name><argument_list pos:line="45" pos:column="66">()<pos:position pos:line="45" pos:column="68"/></argument_list></call> <operator pos:line="45" pos:column="69">-<pos:position pos:line="45" pos:column="70"/></operator> <name pos:line="45" pos:column="71">starttime<pos:position pos:line="45" pos:column="80"/></name></expr>)<pos:position pos:line="45" pos:column="81"/></condition><then pos:line="45" pos:column="81"> <block pos:line="45" pos:column="82">{
            <expr_stmt><expr><name pos:line="46" pos:column="13">cur_action<pos:position pos:line="46" pos:column="23"/></name> <operator pos:line="46" pos:column="24">=<pos:position pos:line="46" pos:column="25"/></operator> <name pos:line="46" pos:column="26">next_action<pos:position pos:line="46" pos:column="37"/></name></expr>;<pos:position pos:line="46" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="47" pos:column="13">++<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="15">next_action<pos:position pos:line="47" pos:column="26"/></name></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="48" pos:column="10"/></block></then>
        <else pos:line="49" pos:column="9">else <block pos:line="49" pos:column="14">{
            <expr_stmt><expr><name pos:line="50" pos:column="13">cur_action<pos:position pos:line="50" pos:column="23"/></name> <operator pos:line="50" pos:column="24">=<pos:position pos:line="50" pos:column="25"/></operator> <literal type="number" pos:line="50" pos:column="26">0<pos:position pos:line="50" pos:column="27"/></literal></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt> <comment type="block" pos:line="50" pos:column="29">/* nothing to do */</comment>
        }<pos:position pos:line="51" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="53" pos:column="9">/* now see who is done */</comment>
        <expr_stmt><expr><name pos:line="54" pos:column="9">not_dead_yet<pos:position pos:line="54" pos:column="21"/></name> <operator pos:line="54" pos:column="22">=<pos:position pos:line="54" pos:column="23"/></operator> <literal type="number" pos:line="54" pos:column="24">0<pos:position pos:line="54" pos:column="25"/></literal></expr>;<pos:position pos:line="54" pos:column="26"/></expr_stmt>
        <for pos:line="55" pos:column="9">for <control pos:line="55" pos:column="13">(<init><expr><name pos:line="55" pos:column="14">i<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">=<pos:position pos:line="55" pos:column="17"/></operator> <literal type="number" pos:line="55" pos:column="18">0<pos:position pos:line="55" pos:column="19"/></literal></expr>;<pos:position pos:line="55" pos:column="20"/></init> <condition><expr><name pos:line="55" pos:column="21">i<pos:position pos:line="55" pos:column="22"/></name> <operator pos:line="55" pos:column="23">&lt;<pos:position pos:line="55" pos:column="27"/></operator> <name pos:line="55" pos:column="25">max_daemons<pos:position pos:line="55" pos:column="36"/></name></expr>;<pos:position pos:line="55" pos:column="37"/></condition> <incr><expr><operator pos:line="55" pos:column="38">++<pos:position pos:line="55" pos:column="40"/></operator><name pos:line="55" pos:column="40">i<pos:position pos:line="55" pos:column="41"/></name></expr></incr>)<pos:position pos:line="55" pos:column="42"/></control> <block pos:line="55" pos:column="43">{
            <decl_stmt><decl><type><name pos:line="56" pos:column="13">pid_t<pos:position pos:line="56" pos:column="18"/></name></type> <name pos:line="56" pos:column="19">pid<pos:position pos:line="56" pos:column="22"/></name> <init pos:line="56" pos:column="23">= <expr><call><name pos:line="56" pos:column="25">MPM_CHILD_PID<pos:position pos:line="56" pos:column="38"/></name><argument_list pos:line="56" pos:column="38">(<argument><expr><name pos:line="56" pos:column="39">i<pos:position pos:line="56" pos:column="40"/></name></expr></argument>)<pos:position pos:line="56" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="56" pos:column="42"/></decl_stmt>

            <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><name pos:line="58" pos:column="17">pid<pos:position pos:line="58" pos:column="20"/></name> <operator pos:line="58" pos:column="21">==<pos:position pos:line="58" pos:column="23"/></operator> <literal type="number" pos:line="58" pos:column="24">0<pos:position pos:line="58" pos:column="25"/></literal></expr>)<pos:position pos:line="58" pos:column="26"/></condition><then pos:line="58" pos:column="26"> <block pos:line="58" pos:column="27">{
                <continue pos:line="59" pos:column="17">continue;<pos:position pos:line="59" pos:column="26"/></continue> <comment type="block" pos:line="59" pos:column="27">/* not every scoreboard entry is in use */</comment>
            }<pos:position pos:line="60" pos:column="14"/></block></then></if>

            <if pos:line="62" pos:column="13">if <condition pos:line="62" pos:column="16">(<expr><call><name pos:line="62" pos:column="17">reclaim_one_pid<pos:position pos:line="62" pos:column="32"/></name><argument_list pos:line="62" pos:column="32">(<argument><expr><name pos:line="62" pos:column="33">pid<pos:position pos:line="62" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="38">action_table<pos:position pos:line="62" pos:column="50"/></name><index pos:line="62" pos:column="50">[<expr><name pos:line="62" pos:column="51">cur_action<pos:position pos:line="62" pos:column="61"/></name></expr>]<pos:position pos:line="62" pos:column="62"/></index></name><operator pos:line="62" pos:column="62">.<pos:position pos:line="62" pos:column="63"/></operator><name pos:line="62" pos:column="63">action<pos:position pos:line="62" pos:column="69"/></name></expr></argument>)<pos:position pos:line="62" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="71"/></condition><then pos:line="62" pos:column="71"> <block pos:line="62" pos:column="72">{
                <expr_stmt><expr><call><name pos:line="63" pos:column="17">MPM_NOTE_CHILD_KILLED<pos:position pos:line="63" pos:column="38"/></name><argument_list pos:line="63" pos:column="38">(<argument><expr><name pos:line="63" pos:column="39">i<pos:position pos:line="63" pos:column="40"/></name></expr></argument>)<pos:position pos:line="63" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="64" pos:column="14"/></block></then>
            <else pos:line="65" pos:column="13">else <block pos:line="65" pos:column="18">{
                <expr_stmt><expr><operator pos:line="66" pos:column="17">++<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="19">not_dead_yet<pos:position pos:line="66" pos:column="31"/></name></expr>;<pos:position pos:line="66" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="67" pos:column="14"/></block></else></if>
        }<pos:position pos:line="68" pos:column="10"/></block></for>
 
        <expr_stmt><expr><name pos:line="70" pos:column="9">cur_extra<pos:position pos:line="70" pos:column="18"/></name> <operator pos:line="70" pos:column="19">=<pos:position pos:line="70" pos:column="20"/></operator> <name pos:line="70" pos:column="21">extras<pos:position pos:line="70" pos:column="27"/></name></expr>;<pos:position pos:line="70" pos:column="28"/></expr_stmt>
        <while pos:line="71" pos:column="9">while <condition pos:line="71" pos:column="15">(<expr><name pos:line="71" pos:column="16">cur_extra<pos:position pos:line="71" pos:column="25"/></name></expr>)<pos:position pos:line="71" pos:column="26"/></condition> <block pos:line="71" pos:column="27">{
            <decl_stmt><decl><type><name pos:line="72" pos:column="13">extra_process_t<pos:position pos:line="72" pos:column="28"/></name> <modifier pos:line="72" pos:column="29">*<pos:position pos:line="72" pos:column="30"/></modifier></type><name pos:line="72" pos:column="30">next<pos:position pos:line="72" pos:column="34"/></name> <init pos:line="72" pos:column="35">= <expr><name><name pos:line="72" pos:column="37">cur_extra<pos:position pos:line="72" pos:column="46"/></name><operator pos:line="72" pos:column="46">-&gt;<pos:position pos:line="72" pos:column="51"/></operator><name pos:line="72" pos:column="48">next<pos:position pos:line="72" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="72" pos:column="53"/></decl_stmt>

            <if pos:line="74" pos:column="13">if <condition pos:line="74" pos:column="16">(<expr><call><name pos:line="74" pos:column="17">reclaim_one_pid<pos:position pos:line="74" pos:column="32"/></name><argument_list pos:line="74" pos:column="32">(<argument><expr><name><name pos:line="74" pos:column="33">cur_extra<pos:position pos:line="74" pos:column="42"/></name><operator pos:line="74" pos:column="42">-&gt;<pos:position pos:line="74" pos:column="47"/></operator><name pos:line="74" pos:column="44">pid<pos:position pos:line="74" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="49">action_table<pos:position pos:line="74" pos:column="61"/></name><index pos:line="74" pos:column="61">[<expr><name pos:line="74" pos:column="62">cur_action<pos:position pos:line="74" pos:column="72"/></name></expr>]<pos:position pos:line="74" pos:column="73"/></index></name><operator pos:line="74" pos:column="73">.<pos:position pos:line="74" pos:column="74"/></operator><name pos:line="74" pos:column="74">action<pos:position pos:line="74" pos:column="80"/></name></expr></argument>)<pos:position pos:line="74" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="82"/></condition><then pos:line="74" pos:column="82"> <block pos:line="74" pos:column="83">{
                <expr_stmt><expr><call><name pos:line="75" pos:column="17">AP_DEBUG_ASSERT<pos:position pos:line="75" pos:column="32"/></name><argument_list pos:line="75" pos:column="32">(<argument><expr><literal type="number" pos:line="75" pos:column="33">1<pos:position pos:line="75" pos:column="34"/></literal> <operator pos:line="75" pos:column="35">==<pos:position pos:line="75" pos:column="37"/></operator> <call><name pos:line="75" pos:column="38">ap_unregister_extra_mpm_process<pos:position pos:line="75" pos:column="69"/></name><argument_list pos:line="75" pos:column="69">(<argument><expr><name><name pos:line="75" pos:column="70">cur_extra<pos:position pos:line="75" pos:column="79"/></name><operator pos:line="75" pos:column="79">-&gt;<pos:position pos:line="75" pos:column="84"/></operator><name pos:line="75" pos:column="81">pid<pos:position pos:line="75" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="87"/></expr_stmt>
            }<pos:position pos:line="76" pos:column="14"/></block></then>
            <else pos:line="77" pos:column="13">else <block pos:line="77" pos:column="18">{
                <expr_stmt><expr><operator pos:line="78" pos:column="17">++<pos:position pos:line="78" pos:column="19"/></operator><name pos:line="78" pos:column="19">not_dead_yet<pos:position pos:line="78" pos:column="31"/></name></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="79" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="80" pos:column="13">cur_extra<pos:position pos:line="80" pos:column="22"/></name> <operator pos:line="80" pos:column="23">=<pos:position pos:line="80" pos:column="24"/></operator> <name pos:line="80" pos:column="25">next<pos:position pos:line="80" pos:column="29"/></name></expr>;<pos:position pos:line="80" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="81" pos:column="10"/></block></while>

<cpp:if pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">if<pos:position pos:line="83" pos:column="4"/></cpp:directive> <expr><name pos:line="83" pos:column="5">APR_HAS_OTHER_CHILD<pos:position pos:line="83" pos:column="24"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">apr_proc_other_child_check<pos:position pos:line="84" pos:column="35"/></name><argument_list pos:line="84" pos:column="35">()<pos:position pos:line="84" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">endif<pos:position pos:line="85" pos:column="7"/></cpp:directive></cpp:endif>

    }<pos:position pos:line="87" pos:column="6"/></block> while <condition pos:line="87" pos:column="13">(<expr><name pos:line="87" pos:column="14">not_dead_yet<pos:position pos:line="87" pos:column="26"/></name> <operator pos:line="87" pos:column="27">&gt;<pos:position pos:line="87" pos:column="31"/></operator> <literal type="number" pos:line="87" pos:column="29">0<pos:position pos:line="87" pos:column="30"/></literal> <operator pos:line="87" pos:column="31">&amp;&amp;<pos:position pos:line="87" pos:column="41"/></operator>
             <name><name pos:line="88" pos:column="14">action_table<pos:position pos:line="88" pos:column="26"/></name><index pos:line="88" pos:column="26">[<expr><name pos:line="88" pos:column="27">cur_action<pos:position pos:line="88" pos:column="37"/></name></expr>]<pos:position pos:line="88" pos:column="38"/></index></name><operator pos:line="88" pos:column="38">.<pos:position pos:line="88" pos:column="39"/></operator><name pos:line="88" pos:column="39">action<pos:position pos:line="88" pos:column="45"/></name> <operator pos:line="88" pos:column="46">!=<pos:position pos:line="88" pos:column="48"/></operator> <name pos:line="88" pos:column="49">GIVEUP<pos:position pos:line="88" pos:column="55"/></name></expr>)<pos:position pos:line="88" pos:column="56"/></condition>;<pos:position pos:line="88" pos:column="57"/></do>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

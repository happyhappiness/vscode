<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3570_httpd-2.2.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">EXPORT<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type>
<name pos:line="2" pos:column="1">regerror<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">int<pos:position pos:line="2" pos:column="13"/></name></type> <name pos:line="2" pos:column="14">errcode<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">regex_t<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">preg<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">errbuf<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">size_t<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">errbuf_size<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
<decl_stmt><decl><type><specifier pos:line="4" pos:column="1">const<pos:position pos:line="4" pos:column="6"/></specifier> <name pos:line="4" pos:column="7">char<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">message<pos:position pos:line="4" pos:column="20"/></name></decl>, <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="23">addmessage<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="5" pos:column="1">size_t<pos:position pos:line="5" pos:column="7"/></name></type> <name pos:line="5" pos:column="8">length<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">addlength<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>

<expr_stmt><expr><name pos:line="7" pos:column="1">message<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">=<pos:position pos:line="7" pos:column="10"/></operator> <ternary><condition><expr><operator pos:line="7" pos:column="11">(<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="12">errcode<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">&gt;=<pos:position pos:line="7" pos:column="25"/></operator> <call pos:line="7" pos:column="23">(<name pos:line="7" pos:column="24">int<pos:position pos:line="7" pos:column="27"/></name>)<argument_list pos:line="7" pos:column="28">(<argument><expr><sizeof pos:line="7" pos:column="29">sizeof<argument_list pos:line="7" pos:column="35">(<argument><expr><name pos:line="7" pos:column="36">pstring<pos:position pos:line="7" pos:column="43"/></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></sizeof><operator pos:line="7" pos:column="44">/<pos:position pos:line="7" pos:column="45"/></operator><sizeof pos:line="7" pos:column="45">sizeof<argument_list pos:line="7" pos:column="51">(<argument><expr><name pos:line="7" pos:column="52">char<pos:position pos:line="7" pos:column="56"/></name> <operator pos:line="7" pos:column="57">*<pos:position pos:line="7" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call><operator pos:line="7" pos:column="60">)<pos:position pos:line="7" pos:column="61"/></operator></expr>?<pos:position pos:line="7" pos:column="62"/></condition><then pos:line="7" pos:column="62">
  <expr><literal type="string" pos:line="8" pos:column="3">"unknown error code"<pos:position pos:line="8" pos:column="23"/></literal></expr> <pos:position pos:line="8" pos:column="24"/></then><else pos:line="8" pos:column="24">: <expr><name><name pos:line="8" pos:column="26">pstring<pos:position pos:line="8" pos:column="33"/></name><index pos:line="8" pos:column="33">[<expr><name pos:line="8" pos:column="34">errcode<pos:position pos:line="8" pos:column="41"/></name></expr>]<pos:position pos:line="8" pos:column="42"/></index></name></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>
<expr_stmt><expr><name pos:line="9" pos:column="1">length<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator> <call><name pos:line="9" pos:column="10">strlen<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">message<pos:position pos:line="9" pos:column="24"/></name></expr></argument>)<pos:position pos:line="9" pos:column="25"/></argument_list></call> <operator pos:line="9" pos:column="26">+<pos:position pos:line="9" pos:column="27"/></operator> <literal type="number" pos:line="9" pos:column="28">1<pos:position pos:line="9" pos:column="29"/></literal></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>

<expr_stmt><expr><name pos:line="11" pos:column="1">addmessage<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <literal type="string" pos:line="11" pos:column="14">" at offset "<pos:position pos:line="11" pos:column="27"/></literal></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
<expr_stmt><expr><name pos:line="12" pos:column="1">addlength<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <ternary><condition><expr><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">preg<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">!=<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">NULL<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">&amp;&amp;<pos:position pos:line="12" pos:column="37"/></operator> <operator pos:line="12" pos:column="30">(<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="31">int<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">)<pos:position pos:line="12" pos:column="35"/></operator><name><name pos:line="12" pos:column="35">preg<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">re_erroffset<pos:position pos:line="12" pos:column="53"/></name></name> <operator pos:line="12" pos:column="54">!=<pos:position pos:line="12" pos:column="56"/></operator> <operator pos:line="12" pos:column="57">-<pos:position pos:line="12" pos:column="58"/></operator><literal type="number" pos:line="12" pos:column="58">1<pos:position pos:line="12" pos:column="59"/></literal><operator pos:line="12" pos:column="59">)<pos:position pos:line="12" pos:column="60"/></operator></expr>?<pos:position pos:line="12" pos:column="61"/></condition><then pos:line="12" pos:column="61">
  <expr><call><name pos:line="13" pos:column="3">strlen<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">(<argument><expr><name pos:line="13" pos:column="10">addmessage<pos:position pos:line="13" pos:column="20"/></name></expr></argument>)<pos:position pos:line="13" pos:column="21"/></argument_list></call> <operator pos:line="13" pos:column="22">+<pos:position pos:line="13" pos:column="23"/></operator> <literal type="number" pos:line="13" pos:column="24">6<pos:position pos:line="13" pos:column="25"/></literal></expr> <pos:position pos:line="13" pos:column="26"/></then><else pos:line="13" pos:column="26">: <expr><literal type="number" pos:line="13" pos:column="28">0<pos:position pos:line="13" pos:column="29"/></literal></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>

<if pos:line="15" pos:column="1">if <condition pos:line="15" pos:column="4">(<expr><name pos:line="15" pos:column="5">errbuf_size<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">&gt;<pos:position pos:line="15" pos:column="21"/></operator> <literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr>)<pos:position pos:line="15" pos:column="21"/></condition><then pos:line="15" pos:column="21">
  <block pos:line="16" pos:column="3">{
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">addlength<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">&gt;<pos:position pos:line="17" pos:column="21"/></operator> <literal type="number" pos:line="17" pos:column="19">0<pos:position pos:line="17" pos:column="20"/></literal> <operator pos:line="17" pos:column="21">&amp;&amp;<pos:position pos:line="17" pos:column="31"/></operator> <name pos:line="17" pos:column="24">errbuf_size<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">&gt;=<pos:position pos:line="17" pos:column="41"/></operator> <name pos:line="17" pos:column="39">length<pos:position pos:line="17" pos:column="45"/></name> <operator pos:line="17" pos:column="46">+<pos:position pos:line="17" pos:column="47"/></operator> <name pos:line="17" pos:column="48">addlength<pos:position pos:line="17" pos:column="57"/></name></expr>)<pos:position pos:line="17" pos:column="58"/></condition><then pos:line="17" pos:column="58">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="5">sprintf<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><name pos:line="18" pos:column="13">errbuf<pos:position pos:line="18" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="21">"%s%s%-6d"<pos:position pos:line="18" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">message<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="42">addmessage<pos:position pos:line="18" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="54">(<pos:position pos:line="18" pos:column="55"/></operator><name pos:line="18" pos:column="55">int<pos:position pos:line="18" pos:column="58"/></name><operator pos:line="18" pos:column="58">)<pos:position pos:line="18" pos:column="59"/></operator><name><name pos:line="18" pos:column="59">preg<pos:position pos:line="18" pos:column="63"/></name><operator pos:line="18" pos:column="63">-&gt;<pos:position pos:line="18" pos:column="68"/></operator><name pos:line="18" pos:column="65">re_erroffset<pos:position pos:line="18" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="79"/></expr_stmt></block></then>
  <else pos:line="19" pos:column="3">else
    <block pos:line="20" pos:column="5">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">strncpy<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><name pos:line="21" pos:column="13">errbuf<pos:position pos:line="21" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="21">message<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="30">errbuf_size<pos:position pos:line="21" pos:column="41"/></name> <operator pos:line="21" pos:column="42">-<pos:position pos:line="21" pos:column="43"/></operator> <literal type="number" pos:line="21" pos:column="44">1<pos:position pos:line="21" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">errbuf<pos:position pos:line="22" pos:column="11"/></name><index pos:line="22" pos:column="11">[<expr><name pos:line="22" pos:column="12">errbuf_size<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-<pos:position pos:line="22" pos:column="24"/></operator><literal type="number" pos:line="22" pos:column="24">1<pos:position pos:line="22" pos:column="25"/></literal></expr>]<pos:position pos:line="22" pos:column="26"/></index></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <literal type="number" pos:line="22" pos:column="29">0<pos:position pos:line="22" pos:column="30"/></literal></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></else></if>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

<return pos:line="26" pos:column="1">return <expr><name pos:line="26" pos:column="8">length<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">+<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="17">addlength<pos:position pos:line="26" pos:column="26"/></name></expr>;<pos:position pos:line="26" pos:column="27"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3480_httpd-2.2.16.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">truncate_dll_name<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">path<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/* Cut DLL name down to 8 characters after removing any mod_ prefix */</comment>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">tmppath<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><call><name pos:line="4" pos:column="21">strdup<pos:position pos:line="4" pos:column="27"/></name><argument_list pos:line="4" pos:column="27">(<argument><expr><name pos:line="4" pos:column="28">path<pos:position pos:line="4" pos:column="32"/></name></expr></argument>)<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">newname<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><call><name pos:line="5" pos:column="21">strrchr<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><name pos:line="5" pos:column="29">tmppath<pos:position pos:line="5" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="5" pos:column="38">'/'<pos:position pos:line="5" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call> <operator pos:line="5" pos:column="43">+<pos:position pos:line="5" pos:column="44"/></operator> <literal type="number" pos:line="5" pos:column="45">1<pos:position pos:line="5" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">ext<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><call><name pos:line="6" pos:column="17">strrchr<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">tmppath<pos:position pos:line="6" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="6" pos:column="34">'.'<pos:position pos:line="6" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">len<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">ext<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">==<pos:position pos:line="9" pos:column="15"/></operator> <name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">tmppath<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="12" pos:column="5">len<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <name pos:line="12" pos:column="11">ext<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">-<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">newname<pos:position pos:line="12" pos:column="24"/></name></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">strncmp<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">newname<pos:position pos:line="14" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="26">"mod_"<pos:position pos:line="14" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="34">4<pos:position pos:line="14" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call> <operator pos:line="14" pos:column="37">==<pos:position pos:line="14" pos:column="39"/></operator> <literal type="number" pos:line="14" pos:column="40">0<pos:position pos:line="14" pos:column="41"/></literal></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42"> <block pos:line="14" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">strcpy<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name pos:line="15" pos:column="16">newname<pos:position pos:line="15" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="25">newname<pos:position pos:line="15" pos:column="32"/></name> <operator pos:line="15" pos:column="33">+<pos:position pos:line="15" pos:column="34"/></operator> <literal type="number" pos:line="15" pos:column="35">4<pos:position pos:line="15" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">len<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">-=<pos:position pos:line="16" pos:column="15"/></operator> <literal type="number" pos:line="16" pos:column="16">4<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">len<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">&gt;<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="15">8<pos:position pos:line="19" pos:column="16"/></literal></expr>)<pos:position pos:line="19" pos:column="17"/></condition><then pos:line="19" pos:column="17"> <block pos:line="19" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">strcpy<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name pos:line="20" pos:column="16">newname<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">+<pos:position pos:line="20" pos:column="25"/></operator> <literal type="number" pos:line="20" pos:column="26">8<pos:position pos:line="20" pos:column="27"/></literal></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="29">strchr<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">newname<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="45">'.'<pos:position pos:line="20" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">tmppath<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

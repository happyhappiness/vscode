<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1647_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">merge_substitute_dcfg<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">apr_pool_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">p<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">void<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">basev<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">void<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">overv<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">subst_dir_conf<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">a<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">=
        <expr><operator pos:line="4" pos:column="9">(<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">subst_dir_conf<pos:position pos:line="4" pos:column="24"/></name> <operator pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></operator><operator pos:line="4" pos:column="26">)<pos:position pos:line="4" pos:column="27"/></operator> <call><name pos:line="4" pos:column="28">apr_palloc<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><name pos:line="4" pos:column="39">p<pos:position pos:line="4" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="42">sizeof<argument_list pos:line="4" pos:column="48">(<argument><expr><name pos:line="4" pos:column="49">subst_dir_conf<pos:position pos:line="4" pos:column="63"/></name></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="66"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">subst_dir_conf<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">base<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><operator pos:line="5" pos:column="28">(<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">subst_dir_conf<pos:position pos:line="5" pos:column="43"/></name> <operator pos:line="5" pos:column="44">*<pos:position pos:line="5" pos:column="45"/></operator><operator pos:line="5" pos:column="45">)<pos:position pos:line="5" pos:column="46"/></operator> <name pos:line="5" pos:column="47">basev<pos:position pos:line="5" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">subst_dir_conf<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">over<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><operator pos:line="6" pos:column="28">(<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">subst_dir_conf<pos:position pos:line="6" pos:column="43"/></name> <operator pos:line="6" pos:column="44">*<pos:position pos:line="6" pos:column="45"/></operator><operator pos:line="6" pos:column="45">)<pos:position pos:line="6" pos:column="46"/></operator> <name pos:line="6" pos:column="47">overv<pos:position pos:line="6" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="53"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="8" pos:column="5">a<pos:position pos:line="8" pos:column="6"/></name><operator pos:line="8" pos:column="6">-&gt;<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="8">inherit_before<pos:position pos:line="8" pos:column="22"/></name></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <ternary><condition><expr><operator pos:line="8" pos:column="25">(<pos:position pos:line="8" pos:column="26"/></operator><name><name pos:line="8" pos:column="26">over<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">-&gt;<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="32">inherit_before<pos:position pos:line="8" pos:column="46"/></name></name> <operator pos:line="8" pos:column="47">!=<pos:position pos:line="8" pos:column="49"/></operator> <operator pos:line="8" pos:column="50">-<pos:position pos:line="8" pos:column="51"/></operator><literal type="number" pos:line="8" pos:column="51">1<pos:position pos:line="8" pos:column="52"/></literal><operator pos:line="8" pos:column="52">)<pos:position pos:line="8" pos:column="53"/></operator></expr>
                            ?<pos:position pos:line="9" pos:column="30"/></condition><then pos:line="9" pos:column="30"> <expr><name><name pos:line="9" pos:column="31">over<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">inherit_before<pos:position pos:line="9" pos:column="51"/></name></name></expr>
                            <pos:position pos:line="10" pos:column="29"/></then><else pos:line="10" pos:column="29">: <expr><name><name pos:line="10" pos:column="31">base<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">-&gt;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="37">inherit_before<pos:position pos:line="10" pos:column="51"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
    <comment type="block" pos:line="11" pos:column="5">/* SubstituteInheritBefore wasn't the default behavior until 2.5.x,
     * and may be re-disabled as desired; the original default behavior
     * was to apply inherited subst patterns after locally scoped patterns.
     * In later 2.2 and 2.4 versions, SubstituteInheritBefore may be toggled
     * 'on' to follow the corrected/expected behavior, without violating POLS.
     */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">a<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">inherit_before<pos:position pos:line="17" pos:column="26"/></name></name> <operator pos:line="17" pos:column="27">==<pos:position pos:line="17" pos:column="29"/></operator> <literal type="number" pos:line="17" pos:column="30">1<pos:position pos:line="17" pos:column="31"/></literal></expr>)<pos:position pos:line="17" pos:column="32"/></condition><then pos:line="17" pos:column="32"> <block pos:line="17" pos:column="33">{
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">a<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">patterns<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <call><name pos:line="18" pos:column="23">apr_array_append<pos:position pos:line="18" pos:column="39"/></name><argument_list pos:line="18" pos:column="39">(<argument><expr><name pos:line="18" pos:column="40">p<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="43">base<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">-&gt;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="49">patterns<pos:position pos:line="18" pos:column="57"/></name></name></expr></argument>,
                                          <argument><expr><name><name pos:line="19" pos:column="43">over<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">patterns<pos:position pos:line="19" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then>
    <else pos:line="21" pos:column="5">else <block pos:line="21" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">a<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">patterns<pos:position pos:line="22" pos:column="20"/></name></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <call><name pos:line="22" pos:column="23">apr_array_append<pos:position pos:line="22" pos:column="39"/></name><argument_list pos:line="22" pos:column="39">(<argument><expr><name pos:line="22" pos:column="40">p<pos:position pos:line="22" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="43">over<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">-&gt;<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="49">patterns<pos:position pos:line="22" pos:column="57"/></name></name></expr></argument>,
                                          <argument><expr><name><name pos:line="23" pos:column="43">base<pos:position pos:line="23" pos:column="47"/></name><operator pos:line="23" pos:column="47">-&gt;<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="49">patterns<pos:position pos:line="23" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></else></if>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">a<pos:position pos:line="25" pos:column="13"/></name></expr>;<pos:position pos:line="25" pos:column="14"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

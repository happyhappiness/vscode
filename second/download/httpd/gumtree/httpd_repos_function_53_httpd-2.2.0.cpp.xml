<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_53_httpd-2.2.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name><name pos:line="1" pos:column="26">argv<pos:position pos:line="1" pos:column="30"/></name><index pos:line="1" pos:column="30">[]<pos:position pos:line="1" pos:column="32"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">userdir<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>        <comment type="block" pos:line="3" pos:column="29">/* ~userdir flag             */</comment>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">uid_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">uid<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>              <comment type="block" pos:line="4" pos:column="29">/* user information          */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">gid_t<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">gid<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>              <comment type="block" pos:line="5" pos:column="29">/* target group placeholder  */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">target_uname<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>     <comment type="block" pos:line="6" pos:column="29">/* target user name          */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">target_gname<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>     <comment type="block" pos:line="7" pos:column="29">/* target group name         */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">target_homedir<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>   <comment type="block" pos:line="8" pos:column="29">/* target home directory     */</comment>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">actual_uname<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>     <comment type="block" pos:line="9" pos:column="29">/* actual user name          */</comment>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">actual_gname<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>     <comment type="block" pos:line="10" pos:column="29">/* actual group name         */</comment>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">prog<pos:position pos:line="11" pos:column="15"/></name></decl>;<pos:position pos:line="11" pos:column="16"/></decl_stmt>             <comment type="block" pos:line="11" pos:column="29">/* name of this program      */</comment>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">cmd<pos:position pos:line="12" pos:column="14"/></name></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>              <comment type="block" pos:line="12" pos:column="29">/* command to be executed    */</comment>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name></type> <name><name pos:line="13" pos:column="10">cwd<pos:position pos:line="13" pos:column="13"/></name><index pos:line="13" pos:column="13">[<expr><name pos:line="13" pos:column="14">AP_MAXPATH<pos:position pos:line="13" pos:column="24"/></name></expr>]<pos:position pos:line="13" pos:column="25"/></index></name></decl>;<pos:position pos:line="13" pos:column="26"/></decl_stmt>   <comment type="block" pos:line="13" pos:column="29">/* current working directory */</comment>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name></type> <name><name pos:line="14" pos:column="10">dwd<pos:position pos:line="14" pos:column="13"/></name><index pos:line="14" pos:column="13">[<expr><name pos:line="14" pos:column="14">AP_MAXPATH<pos:position pos:line="14" pos:column="24"/></name></expr>]<pos:position pos:line="14" pos:column="25"/></index></name></decl>;<pos:position pos:line="14" pos:column="26"/></decl_stmt>   <comment type="block" pos:line="14" pos:column="29">/* docroot working directory */</comment>
    <decl_stmt><decl><type><name><name pos:line="15" pos:column="5">struct<pos:position pos:line="15" pos:column="11"/></name> <name pos:line="15" pos:column="12">passwd<pos:position pos:line="15" pos:column="18"/></name></name> <modifier pos:line="15" pos:column="19">*<pos:position pos:line="15" pos:column="20"/></modifier></type><name pos:line="15" pos:column="20">pw<pos:position pos:line="15" pos:column="22"/></name></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>      <comment type="block" pos:line="15" pos:column="29">/* password entry holder     */</comment>
    <decl_stmt><decl><type><name><name pos:line="16" pos:column="5">struct<pos:position pos:line="16" pos:column="11"/></name> <name pos:line="16" pos:column="12">group<pos:position pos:line="16" pos:column="17"/></name></name> <modifier pos:line="16" pos:column="18">*<pos:position pos:line="16" pos:column="19"/></modifier></type><name pos:line="16" pos:column="19">gr<pos:position pos:line="16" pos:column="21"/></name></decl>;<pos:position pos:line="16" pos:column="22"/></decl_stmt>       <comment type="block" pos:line="16" pos:column="29">/* group entry holder        */</comment>
    <decl_stmt><decl><type><name><name pos:line="17" pos:column="5">struct<pos:position pos:line="17" pos:column="11"/></name> <name pos:line="17" pos:column="12">stat<pos:position pos:line="17" pos:column="16"/></name></name></type> <name pos:line="17" pos:column="17">dir_info<pos:position pos:line="17" pos:column="25"/></name></decl>;<pos:position pos:line="17" pos:column="26"/></decl_stmt>   <comment type="block" pos:line="17" pos:column="29">/* directory info holder     */</comment>
    <decl_stmt><decl><type><name><name pos:line="18" pos:column="5">struct<pos:position pos:line="18" pos:column="11"/></name> <name pos:line="18" pos:column="12">stat<pos:position pos:line="18" pos:column="16"/></name></name></type> <name pos:line="18" pos:column="17">prg_info<pos:position pos:line="18" pos:column="25"/></name></decl>;<pos:position pos:line="18" pos:column="26"/></decl_stmt>   <comment type="block" pos:line="18" pos:column="29">/* program info holder       */</comment>

    <comment type="block" pos:line="20" pos:column="5">/*
     * Start with a "clean" environment
     */</comment>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">clean_env<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">()<pos:position pos:line="23" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="17"/></expr_stmt>

    <expr_stmt><expr><name pos:line="25" pos:column="5">prog<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <name><name pos:line="25" pos:column="12">argv<pos:position pos:line="25" pos:column="16"/></name><index pos:line="25" pos:column="16">[<expr><literal type="number" pos:line="25" pos:column="17">0<pos:position pos:line="25" pos:column="18"/></literal></expr>]<pos:position pos:line="25" pos:column="19"/></index></name></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>
    <comment type="block" pos:line="26" pos:column="5">/*
     * Check existence/validity of the UID of the user
     * running this program.  Error out if invalid.
     */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">uid<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator> <call><name pos:line="30" pos:column="11">getuid<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">()<pos:position pos:line="30" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="20"/></expr_stmt>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">(<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">pw<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <call><name pos:line="31" pos:column="15">getpwuid<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><name pos:line="31" pos:column="24">uid<pos:position pos:line="31" pos:column="27"/></name></expr></argument>)<pos:position pos:line="31" pos:column="28"/></argument_list></call><operator pos:line="31" pos:column="28">)<pos:position pos:line="31" pos:column="29"/></operator> <operator pos:line="31" pos:column="30">==<pos:position pos:line="31" pos:column="32"/></operator> <name pos:line="31" pos:column="33">NULL<pos:position pos:line="31" pos:column="37"/></name></expr>)<pos:position pos:line="31" pos:column="38"/></condition><then pos:line="31" pos:column="38"> <block pos:line="31" pos:column="39">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">log_err<pos:position pos:line="32" pos:column="16"/></name><argument_list pos:line="32" pos:column="16">(<argument><expr><literal type="string" pos:line="32" pos:column="17">"crit: invalid uid: (%ld)\n"<pos:position pos:line="32" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="47">uid<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">exit<pos:position pos:line="33" pos:column="13"/></name><argument_list pos:line="33" pos:column="13">(<argument><expr><literal type="number" pos:line="33" pos:column="14">102<pos:position pos:line="33" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="35" pos:column="5">/*
     * See if this is a 'how were you compiled' request, and
     * comply if so.
     */</comment>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">(<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">argc<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">&gt;<pos:position pos:line="39" pos:column="19"/></operator> <literal type="number" pos:line="39" pos:column="17">1<pos:position pos:line="39" pos:column="18"/></literal><operator pos:line="39" pos:column="18">)<pos:position pos:line="39" pos:column="19"/></operator>
        <operator pos:line="40" pos:column="9">&amp;&amp;<pos:position pos:line="40" pos:column="19"/></operator> <operator pos:line="40" pos:column="12">(<pos:position pos:line="40" pos:column="13"/></operator><operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator> <call><name pos:line="40" pos:column="15">strcmp<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><name><name pos:line="40" pos:column="22">argv<pos:position pos:line="40" pos:column="26"/></name><index pos:line="40" pos:column="26">[<expr><literal type="number" pos:line="40" pos:column="27">1<pos:position pos:line="40" pos:column="28"/></literal></expr>]<pos:position pos:line="40" pos:column="29"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="31">"-V"<pos:position pos:line="40" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="36"/></argument_list></call><operator pos:line="40" pos:column="36">)<pos:position pos:line="40" pos:column="37"/></operator>
        <operator pos:line="41" pos:column="9">&amp;&amp;<pos:position pos:line="41" pos:column="19"/></operator> <operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><operator pos:line="41" pos:column="13">(<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">uid<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">==<pos:position pos:line="41" pos:column="20"/></operator> <literal type="number" pos:line="41" pos:column="21">0<pos:position pos:line="41" pos:column="22"/></literal><operator pos:line="41" pos:column="22">)<pos:position pos:line="41" pos:column="23"/></operator>
<cpp:ifdef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifdef<pos:position pos:line="42" pos:column="7"/></cpp:directive> <name pos:line="42" pos:column="8">_OSD_POSIX<pos:position pos:line="42" pos:column="18"/></name></cpp:ifdef>
        <comment type="block" pos:line="43" pos:column="9">/* User name comparisons are case insensitive on BS2000/OSD */</comment>
            <operator pos:line="44" pos:column="13">||<pos:position pos:line="44" pos:column="15"/></operator> <operator pos:line="44" pos:column="16">(<pos:position pos:line="44" pos:column="17"/></operator><operator pos:line="44" pos:column="17">!<pos:position pos:line="44" pos:column="18"/></operator> <call><name pos:line="44" pos:column="19">strcasecmp<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><name pos:line="44" pos:column="30">AP_HTTPD_USER<pos:position pos:line="44" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="45">pw<pos:position pos:line="44" pos:column="47"/></name><operator pos:line="44" pos:column="47">-&gt;<pos:position pos:line="44" pos:column="52"/></operator><name pos:line="44" pos:column="49">pw_name<pos:position pos:line="44" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></call><operator pos:line="44" pos:column="57">)<pos:position pos:line="44" pos:column="58"/></operator><operator pos:line="44" pos:column="58">)<pos:position pos:line="44" pos:column="59"/></operator>
<cpp:else pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">else<pos:position pos:line="45" pos:column="6"/></cpp:directive></cpp:else>  <comment type="block" pos:line="45" pos:column="8">/* _OSD_POSIX */</comment>
            <operator pos:line="46" pos:column="13">||<pos:position pos:line="46" pos:column="15"/></operator> <operator pos:line="46" pos:column="16">(<pos:position pos:line="46" pos:column="17"/></operator><operator pos:line="46" pos:column="17">!<pos:position pos:line="46" pos:column="18"/></operator> <call><name pos:line="46" pos:column="19">strcmp<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><name pos:line="46" pos:column="26">AP_HTTPD_USER<pos:position pos:line="46" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="41">pw<pos:position pos:line="46" pos:column="43"/></name><operator pos:line="46" pos:column="43">-&gt;<pos:position pos:line="46" pos:column="48"/></operator><name pos:line="46" pos:column="45">pw_name<pos:position pos:line="46" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="53"/></argument_list></call><operator pos:line="46" pos:column="53">)<pos:position pos:line="46" pos:column="54"/></operator></expr>)<pos:position pos:line="46" pos:column="55"/></condition><then pos:line="46" pos:column="55">
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif<pos:position pos:line="47" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="47" pos:column="8">/* _OSD_POSIX */</comment>
        <block type="pseudo"><pos:position pos:line="48" pos:column="9"/></block></then></if>)<pos:position pos:line="48" pos:column="10"/></block> <block pos:line="48" pos:column="11">{
<cpp:ifdef pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">ifdef<pos:position pos:line="49" pos:column="7"/></cpp:directive> <name pos:line="49" pos:column="8">AP_DOC_ROOT<pos:position pos:line="49" pos:column="19"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">fprintf<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">(<argument><expr><name pos:line="50" pos:column="17">stderr<pos:position pos:line="50" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="25">" -D AP_DOC_ROOT=\"%s\"\n"<pos:position pos:line="50" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="53">AP_DOC_ROOT<pos:position pos:line="50" pos:column="64"/></name></expr></argument>)<pos:position pos:line="50" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="66"/></expr_stmt>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">ifdef<pos:position pos:line="52" pos:column="7"/></cpp:directive> <name pos:line="52" pos:column="8">AP_GID_MIN<pos:position pos:line="52" pos:column="18"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">fprintf<pos:position pos:line="53" pos:column="16"/></name><argument_list pos:line="53" pos:column="16">(<argument><expr><name pos:line="53" pos:column="17">stderr<pos:position pos:line="53" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="25">" -D AP_GID_MIN=%d\n"<pos:position pos:line="53" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="48">AP_GID_MIN<pos:position pos:line="53" pos:column="58"/></name></expr></argument>)<pos:position pos:line="53" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="60"/></expr_stmt>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">ifdef<pos:position pos:line="55" pos:column="7"/></cpp:directive> <name pos:line="55" pos:column="8">AP_HTTPD_USER<pos:position pos:line="55" pos:column="21"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">fprintf<pos:position pos:line="56" pos:column="16"/></name><argument_list pos:line="56" pos:column="16">(<argument><expr><name pos:line="56" pos:column="17">stderr<pos:position pos:line="56" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="25">" -D AP_HTTPD_USER=\"%s\"\n"<pos:position pos:line="56" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="55">AP_HTTPD_USER<pos:position pos:line="56" pos:column="68"/></name></expr></argument>)<pos:position pos:line="56" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="70"/></expr_stmt>
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">ifdef<pos:position pos:line="58" pos:column="7"/></cpp:directive> <name pos:line="58" pos:column="8">AP_LOG_EXEC<pos:position pos:line="58" pos:column="19"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">fprintf<pos:position pos:line="59" pos:column="16"/></name><argument_list pos:line="59" pos:column="16">(<argument><expr><name pos:line="59" pos:column="17">stderr<pos:position pos:line="59" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="25">" -D AP_LOG_EXEC=\"%s\"\n"<pos:position pos:line="59" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="53">AP_LOG_EXEC<pos:position pos:line="59" pos:column="64"/></name></expr></argument>)<pos:position pos:line="59" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="66"/></expr_stmt>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">ifdef<pos:position pos:line="61" pos:column="7"/></cpp:directive> <name pos:line="61" pos:column="8">AP_SAFE_PATH<pos:position pos:line="61" pos:column="20"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">fprintf<pos:position pos:line="62" pos:column="16"/></name><argument_list pos:line="62" pos:column="16">(<argument><expr><name pos:line="62" pos:column="17">stderr<pos:position pos:line="62" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="25">" -D AP_SAFE_PATH=\"%s\"\n"<pos:position pos:line="62" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="54">AP_SAFE_PATH<pos:position pos:line="62" pos:column="66"/></name></expr></argument>)<pos:position pos:line="62" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="68"/></expr_stmt>
<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif<pos:position pos:line="63" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">ifdef<pos:position pos:line="64" pos:column="7"/></cpp:directive> <name pos:line="64" pos:column="8">AP_SUEXEC_UMASK<pos:position pos:line="64" pos:column="23"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">fprintf<pos:position pos:line="65" pos:column="16"/></name><argument_list pos:line="65" pos:column="16">(<argument><expr><name pos:line="65" pos:column="17">stderr<pos:position pos:line="65" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="25">" -D AP_SUEXEC_UMASK=%03o\n"<pos:position pos:line="65" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="55">AP_SUEXEC_UMASK<pos:position pos:line="65" pos:column="70"/></name></expr></argument>)<pos:position pos:line="65" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="72"/></expr_stmt>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif<pos:position pos:line="66" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">ifdef<pos:position pos:line="67" pos:column="7"/></cpp:directive> <name pos:line="67" pos:column="8">AP_UID_MIN<pos:position pos:line="67" pos:column="18"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">fprintf<pos:position pos:line="68" pos:column="16"/></name><argument_list pos:line="68" pos:column="16">(<argument><expr><name pos:line="68" pos:column="17">stderr<pos:position pos:line="68" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="25">" -D AP_UID_MIN=%d\n"<pos:position pos:line="68" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="48">AP_UID_MIN<pos:position pos:line="68" pos:column="58"/></name></expr></argument>)<pos:position pos:line="68" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="60"/></expr_stmt>
<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif<pos:position pos:line="69" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">ifdef<pos:position pos:line="70" pos:column="7"/></cpp:directive> <name pos:line="70" pos:column="8">AP_USERDIR_SUFFIX<pos:position pos:line="70" pos:column="25"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">fprintf<pos:position pos:line="71" pos:column="16"/></name><argument_list pos:line="71" pos:column="16">(<argument><expr><name pos:line="71" pos:column="17">stderr<pos:position pos:line="71" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="25">" -D AP_USERDIR_SUFFIX=\"%s\"\n"<pos:position pos:line="71" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="59">AP_USERDIR_SUFFIX<pos:position pos:line="71" pos:column="76"/></name></expr></argument>)<pos:position pos:line="71" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="78"/></expr_stmt>
<cpp:endif pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">endif<pos:position pos:line="72" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">exit<pos:position pos:line="73" pos:column="13"/></name><argument_list pos:line="73" pos:column="13">(<argument><expr><literal type="number" pos:line="73" pos:column="14">0<pos:position pos:line="73" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></function></unit>

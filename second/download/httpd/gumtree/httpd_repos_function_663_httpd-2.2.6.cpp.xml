<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_663_httpd-2.2.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">ssl_expr_eval_word<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">request_rec<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">r<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">ssl_expr<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">node<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <switch pos:line="3" pos:column="5">switch <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">node<pos:position pos:line="3" pos:column="17"/></name><operator pos:line="3" pos:column="17">-&gt;<pos:position pos:line="3" pos:column="22"/></operator><name pos:line="3" pos:column="19">node_op<pos:position pos:line="3" pos:column="26"/></name></name></expr>)<pos:position pos:line="3" pos:column="27"/></condition> <block pos:line="3" pos:column="28">{
        <case pos:line="4" pos:column="9">case <expr><name pos:line="4" pos:column="14">op_Digit<pos:position pos:line="4" pos:column="22"/></name></expr>:<pos:position pos:line="4" pos:column="23"/></case> <block pos:line="4" pos:column="24">{
            <decl_stmt><decl><type><name pos:line="5" pos:column="13">char<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">string<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><operator pos:line="5" pos:column="28">(<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">char<pos:position pos:line="5" pos:column="33"/></name> <operator pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></operator><operator pos:line="5" pos:column="35">)<pos:position pos:line="5" pos:column="36"/></operator><name><name pos:line="5" pos:column="36">node<pos:position pos:line="5" pos:column="40"/></name><operator pos:line="5" pos:column="40">-&gt;<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="42">node_arg1<pos:position pos:line="5" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>
            <return pos:line="6" pos:column="13">return <expr><name pos:line="6" pos:column="20">string<pos:position pos:line="6" pos:column="26"/></name></expr>;<pos:position pos:line="6" pos:column="27"/></return>
        }<pos:position pos:line="7" pos:column="10"/></block>
        <case pos:line="8" pos:column="9">case <expr><name pos:line="8" pos:column="14">op_String<pos:position pos:line="8" pos:column="23"/></name></expr>:<pos:position pos:line="8" pos:column="24"/></case> <block pos:line="8" pos:column="25">{
            <decl_stmt><decl><type><name pos:line="9" pos:column="13">char<pos:position pos:line="9" pos:column="17"/></name> <modifier pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></modifier></type><name pos:line="9" pos:column="19">string<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><operator pos:line="9" pos:column="28">(<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">char<pos:position pos:line="9" pos:column="33"/></name> <operator pos:line="9" pos:column="34">*<pos:position pos:line="9" pos:column="35"/></operator><operator pos:line="9" pos:column="35">)<pos:position pos:line="9" pos:column="36"/></operator><name><name pos:line="9" pos:column="36">node<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">-&gt;<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="42">node_arg1<pos:position pos:line="9" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="52"/></decl_stmt>
            <return pos:line="10" pos:column="13">return <expr><name pos:line="10" pos:column="20">string<pos:position pos:line="10" pos:column="26"/></name></expr>;<pos:position pos:line="10" pos:column="27"/></return>
        }<pos:position pos:line="11" pos:column="10"/></block>
        <case pos:line="12" pos:column="9">case <expr><name pos:line="12" pos:column="14">op_Var<pos:position pos:line="12" pos:column="20"/></name></expr>:<pos:position pos:line="12" pos:column="21"/></case> <block pos:line="12" pos:column="22">{
            <decl_stmt><decl><type><name pos:line="13" pos:column="13">char<pos:position pos:line="13" pos:column="17"/></name> <modifier pos:line="13" pos:column="18">*<pos:position pos:line="13" pos:column="19"/></modifier></type><name pos:line="13" pos:column="19">var<pos:position pos:line="13" pos:column="22"/></name> <init pos:line="13" pos:column="23">= <expr><operator pos:line="13" pos:column="25">(<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">char<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">*<pos:position pos:line="13" pos:column="32"/></operator><operator pos:line="13" pos:column="32">)<pos:position pos:line="13" pos:column="33"/></operator><name><name pos:line="13" pos:column="33">node<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">-&gt;<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="39">node_arg1<pos:position pos:line="13" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="49"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="14" pos:column="13">char<pos:position pos:line="14" pos:column="17"/></name> <modifier pos:line="14" pos:column="18">*<pos:position pos:line="14" pos:column="19"/></modifier></type><name pos:line="14" pos:column="19">val<pos:position pos:line="14" pos:column="22"/></name> <init pos:line="14" pos:column="23">= <expr><call><name pos:line="14" pos:column="25">ssl_var_lookup<pos:position pos:line="14" pos:column="39"/></name><argument_list pos:line="14" pos:column="39">(<argument><expr><name><name pos:line="14" pos:column="40">r<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">-&gt;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="43">pool<pos:position pos:line="14" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="49">r<pos:position pos:line="14" pos:column="50"/></name><operator pos:line="14" pos:column="50">-&gt;<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="52">server<pos:position pos:line="14" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="60">r<pos:position pos:line="14" pos:column="61"/></name><operator pos:line="14" pos:column="61">-&gt;<pos:position pos:line="14" pos:column="66"/></operator><name pos:line="14" pos:column="63">connection<pos:position pos:line="14" pos:column="73"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="75">r<pos:position pos:line="14" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="78">var<pos:position pos:line="14" pos:column="81"/></name></expr></argument>)<pos:position pos:line="14" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="83"/></decl_stmt>
            <return pos:line="15" pos:column="13">return <expr><operator pos:line="15" pos:column="20">(<pos:position pos:line="15" pos:column="21"/></operator><ternary><condition><expr><name pos:line="15" pos:column="21">val<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">==<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="28">NULL<pos:position pos:line="15" pos:column="32"/></name></expr> ?<pos:position pos:line="15" pos:column="34"/></condition><then pos:line="15" pos:column="34"> <expr><literal type="string" pos:line="15" pos:column="35">""<pos:position pos:line="15" pos:column="37"/></literal></expr> <pos:position pos:line="15" pos:column="38"/></then><else pos:line="15" pos:column="38">: <expr><name pos:line="15" pos:column="40">val<pos:position pos:line="15" pos:column="43"/></name></expr></else></ternary><operator pos:line="15" pos:column="43">)<pos:position pos:line="15" pos:column="44"/></operator></expr>;<pos:position pos:line="15" pos:column="45"/></return>
        }<pos:position pos:line="16" pos:column="10"/></block>
        <case pos:line="17" pos:column="9">case <expr><name pos:line="17" pos:column="14">op_Func<pos:position pos:line="17" pos:column="21"/></name></expr>:<pos:position pos:line="17" pos:column="22"/></case> <block pos:line="17" pos:column="23">{
            <decl_stmt><decl><type><name pos:line="18" pos:column="13">char<pos:position pos:line="18" pos:column="17"/></name> <modifier pos:line="18" pos:column="18">*<pos:position pos:line="18" pos:column="19"/></modifier></type><name pos:line="18" pos:column="19">name<pos:position pos:line="18" pos:column="23"/></name> <init pos:line="18" pos:column="24">= <expr><operator pos:line="18" pos:column="26">(<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">char<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">*<pos:position pos:line="18" pos:column="33"/></operator><operator pos:line="18" pos:column="33">)<pos:position pos:line="18" pos:column="34"/></operator><name><name pos:line="18" pos:column="34">node<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">-&gt;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="40">node_arg1<pos:position pos:line="18" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="18" pos:column="50"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="19" pos:column="13">ssl_expr<pos:position pos:line="19" pos:column="21"/></name> <modifier pos:line="19" pos:column="22">*<pos:position pos:line="19" pos:column="23"/></modifier></type><name pos:line="19" pos:column="23">args<pos:position pos:line="19" pos:column="27"/></name> <init pos:line="19" pos:column="28">= <expr><operator pos:line="19" pos:column="30">(<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="31">ssl_expr<pos:position pos:line="19" pos:column="39"/></name> <operator pos:line="19" pos:column="40">*<pos:position pos:line="19" pos:column="41"/></operator><operator pos:line="19" pos:column="41">)<pos:position pos:line="19" pos:column="42"/></operator><name><name pos:line="19" pos:column="42">node<pos:position pos:line="19" pos:column="46"/></name><operator pos:line="19" pos:column="46">-&gt;<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="48">node_arg2<pos:position pos:line="19" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="19" pos:column="58"/></decl_stmt>
            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><call><name pos:line="20" pos:column="17">strEQ<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">name<pos:position pos:line="20" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="29">"file"<pos:position pos:line="20" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="37"/></condition><then pos:line="20" pos:column="37">
                <block type="pseudo"><return pos:line="21" pos:column="17">return <expr><call><name pos:line="21" pos:column="24">ssl_expr_eval_func_file<pos:position pos:line="21" pos:column="47"/></name><argument_list pos:line="21" pos:column="47">(<argument><expr><name pos:line="21" pos:column="48">r<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="51">(<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="52">char<pos:position pos:line="21" pos:column="56"/></name> <operator pos:line="21" pos:column="57">*<pos:position pos:line="21" pos:column="58"/></operator><operator pos:line="21" pos:column="58">)<pos:position pos:line="21" pos:column="59"/></operator><operator pos:line="21" pos:column="59">(<pos:position pos:line="21" pos:column="60"/></operator><name><name pos:line="21" pos:column="60">args<pos:position pos:line="21" pos:column="64"/></name><operator pos:line="21" pos:column="64">-&gt;<pos:position pos:line="21" pos:column="69"/></operator><name pos:line="21" pos:column="66">node_arg1<pos:position pos:line="21" pos:column="75"/></name></name><operator pos:line="21" pos:column="75">)<pos:position pos:line="21" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="78"/></return></block></then>
            <else pos:line="22" pos:column="13">else <block pos:line="22" pos:column="18">{
                <expr_stmt><expr><name pos:line="23" pos:column="17">ssl_expr_error<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">=<pos:position pos:line="23" pos:column="33"/></operator> <literal type="string" pos:line="23" pos:column="34">"Internal evaluation error: Unknown function name"<pos:position pos:line="23" pos:column="84"/></literal></expr>;<pos:position pos:line="23" pos:column="85"/></expr_stmt>
                <return pos:line="24" pos:column="17">return <expr><literal type="string" pos:line="24" pos:column="24">""<pos:position pos:line="24" pos:column="26"/></literal></expr>;<pos:position pos:line="24" pos:column="27"/></return>
            }<pos:position pos:line="25" pos:column="14"/></block></else></if>
        }<pos:position pos:line="26" pos:column="10"/></block>
        <default pos:line="27" pos:column="9">default:<pos:position pos:line="27" pos:column="17"/></default> <block pos:line="27" pos:column="18">{
            <expr_stmt><expr><name pos:line="28" pos:column="13">ssl_expr_error<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">=<pos:position pos:line="28" pos:column="29"/></operator> <literal type="string" pos:line="28" pos:column="30">"Internal evaluation error: Unknown expression node"<pos:position pos:line="28" pos:column="82"/></literal></expr>;<pos:position pos:line="28" pos:column="83"/></expr_stmt>
            <return pos:line="29" pos:column="13">return <expr><name pos:line="29" pos:column="20">FALSE<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></return>
        }<pos:position pos:line="30" pos:column="10"/></block>
    }<pos:position pos:line="31" pos:column="6"/></block></switch>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

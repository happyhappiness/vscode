<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_659.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">send_parsed_content<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">ap_filter_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">f<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">apr_bucket_brigade<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">bb<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ssi_ctx_t<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">ctx<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name><name pos:line="3" pos:column="22">f<pos:position pos:line="3" pos:column="23"/></name><operator pos:line="3" pos:column="23">-&gt;<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="25">ctx<pos:position pos:line="3" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">request_rec<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">r<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name><name pos:line="4" pos:column="22">f<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">-&gt;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="25">r<pos:position pos:line="4" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_bucket<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">b<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><call><name pos:line="5" pos:column="21">APR_BRIGADE_FIRST<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">bb<pos:position pos:line="5" pos:column="41"/></name></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_bucket_brigade<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">pass_bb<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_status_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">rv<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">APR_SUCCESS<pos:position pos:line="7" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">magic<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt> <comment type="block" pos:line="8" pos:column="18">/* magic pointer for sentinel use */</comment>

    <comment type="block" pos:line="10" pos:column="5">/* fast exit */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">APR_BRIGADE_EMPTY<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">bb<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="31"/></condition><then pos:line="11" pos:column="31"> <block pos:line="11" pos:column="32">{
        <return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">APR_SUCCESS<pos:position pos:line="12" pos:column="27"/></name></expr>;<pos:position pos:line="12" pos:column="28"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* we may crash, since already cleaned up; hand over the responsibility
     * to the next filter;-)
     */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">ctx<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">seen_eos<pos:position pos:line="18" pos:column="22"/></name></name></expr>)<pos:position pos:line="18" pos:column="23"/></condition><then pos:line="18" pos:column="23"> <block pos:line="18" pos:column="24">{
        <return pos:line="19" pos:column="9">return <expr><call><name pos:line="19" pos:column="16">ap_pass_brigade<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><name><name pos:line="19" pos:column="32">f<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">-&gt;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="35">next<pos:position pos:line="19" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="41">bb<pos:position pos:line="19" pos:column="43"/></name></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="45"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="22" pos:column="5">/* All stuff passed along has to be put into that brigade */</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">pass_bb<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">apr_brigade_create<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name><name pos:line="23" pos:column="34">ctx<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">-&gt;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="39">ctx<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">-&gt;<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="44">pool<pos:position pos:line="23" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="50">f<pos:position pos:line="23" pos:column="51"/></name><operator pos:line="23" pos:column="51">-&gt;<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="53">c<pos:position pos:line="23" pos:column="54"/></name><operator pos:line="23" pos:column="54">-&gt;<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="56">bucket_alloc<pos:position pos:line="23" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">ctx<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">-&gt;<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="10">ctx<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">bytes_parsed<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <literal type="number" pos:line="24" pos:column="30">0<pos:position pos:line="24" pos:column="31"/></literal></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">ctx<pos:position pos:line="25" pos:column="8"/></name><operator pos:line="25" pos:column="8">-&gt;<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="10">ctx<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">output_now<pos:position pos:line="25" pos:column="25"/></name></name> <operator pos:line="25" pos:column="26">=<pos:position pos:line="25" pos:column="27"/></operator> <literal type="number" pos:line="25" pos:column="28">0<pos:position pos:line="25" pos:column="29"/></literal></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">ctx<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">-&gt;<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="10">error<pos:position pos:line="26" pos:column="15"/></name></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <literal type="number" pos:line="26" pos:column="18">0<pos:position pos:line="26" pos:column="19"/></literal></expr>;<pos:position pos:line="26" pos:column="20"/></expr_stmt>

    <comment type="block" pos:line="28" pos:column="5">/* loop over the current bucket brigade */</comment>
    <while pos:line="29" pos:column="5">while <condition pos:line="29" pos:column="11">(<expr><name pos:line="29" pos:column="12">b<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">!=<pos:position pos:line="29" pos:column="16"/></operator> <call><name pos:line="29" pos:column="17">APR_BRIGADE_SENTINEL<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">bb<pos:position pos:line="29" pos:column="40"/></name></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="42"/></condition> <block pos:line="29" pos:column="43">{
        <decl_stmt><decl><type><specifier pos:line="30" pos:column="9">const<pos:position pos:line="30" pos:column="14"/></specifier> <name pos:line="30" pos:column="15">char<pos:position pos:line="30" pos:column="19"/></name> <modifier pos:line="30" pos:column="20">*<pos:position pos:line="30" pos:column="21"/></modifier></type><name pos:line="30" pos:column="21">data<pos:position pos:line="30" pos:column="25"/></name> <init pos:line="30" pos:column="26">= <expr><name pos:line="30" pos:column="28">NULL<pos:position pos:line="30" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">apr_size_t<pos:position pos:line="31" pos:column="19"/></name></type> <name pos:line="31" pos:column="20">len<pos:position pos:line="31" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="31" pos:column="25">index<pos:position pos:line="31" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="31" pos:column="32">release<pos:position pos:line="31" pos:column="39"/></name></decl>;<pos:position pos:line="31" pos:column="40"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">apr_bucket<pos:position pos:line="32" pos:column="19"/></name> <modifier pos:line="32" pos:column="20">*<pos:position pos:line="32" pos:column="21"/></modifier></type><name pos:line="32" pos:column="21">newb<pos:position pos:line="32" pos:column="25"/></name> <init pos:line="32" pos:column="26">= <expr><name pos:line="32" pos:column="28">NULL<pos:position pos:line="32" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="32" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="33" pos:column="9">char<pos:position pos:line="33" pos:column="13"/></name> <modifier pos:line="33" pos:column="14">*<pos:position pos:line="33" pos:column="15"/></modifier><modifier pos:line="33" pos:column="15">*<pos:position pos:line="33" pos:column="16"/></modifier></type><name pos:line="33" pos:column="16">store<pos:position pos:line="33" pos:column="21"/></name> <init pos:line="33" pos:column="22">= <expr><operator pos:line="33" pos:column="24">&amp;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="25">magic<pos:position pos:line="33" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="34" pos:column="9">apr_size_t<pos:position pos:line="34" pos:column="19"/></name> <modifier pos:line="34" pos:column="20">*<pos:position pos:line="34" pos:column="21"/></modifier></type><name pos:line="34" pos:column="21">store_len<pos:position pos:line="34" pos:column="30"/></name></decl>;<pos:position pos:line="34" pos:column="31"/></decl_stmt>

        <comment type="block" pos:line="36" pos:column="9">/* handle meta buckets before reading any data */</comment>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">APR_BUCKET_IS_METADATA<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><name pos:line="37" pos:column="36">b<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="39"/></condition><then pos:line="37" pos:column="39"> <block pos:line="37" pos:column="40">{
            <expr_stmt><expr><name pos:line="38" pos:column="13">newb<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <call><name pos:line="38" pos:column="20">APR_BUCKET_NEXT<pos:position pos:line="38" pos:column="35"/></name><argument_list pos:line="38" pos:column="35">(<argument><expr><name pos:line="38" pos:column="36">b<pos:position pos:line="38" pos:column="37"/></name></expr></argument>)<pos:position pos:line="38" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="39"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="40" pos:column="13">APR_BUCKET_REMOVE<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">b<pos:position pos:line="40" pos:column="32"/></name></expr></argument>)<pos:position pos:line="40" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>

            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><call><name pos:line="42" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="42" pos:column="34"/></name><argument_list pos:line="42" pos:column="34">(<argument><expr><name pos:line="42" pos:column="35">b<pos:position pos:line="42" pos:column="36"/></name></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="38"/></condition><then pos:line="42" pos:column="38"> <block pos:line="42" pos:column="39">{
                <expr_stmt><expr><name><name pos:line="43" pos:column="17">ctx<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">-&gt;<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="22">seen_eos<pos:position pos:line="43" pos:column="30"/></name></name> <operator pos:line="43" pos:column="31">=<pos:position pos:line="43" pos:column="32"/></operator> <literal type="number" pos:line="43" pos:column="33">1<pos:position pos:line="43" pos:column="34"/></literal></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>

                <comment type="block" pos:line="45" pos:column="17">/* Hit end of stream, time for cleanup ... But wait!
                 * Perhaps we're not ready yet. We may have to loop one or
                 * two times again to finish our work. In that case, we
                 * just re-insert the EOS bucket to allow for an extra loop.
                 *
                 * PARSE_EXECUTE means, we've hit a directive just before the
                 *    EOS, which is now waiting for execution.
                 *
                 * PARSE_DIRECTIVE_POSTTAIL means, we've hit a directive with
                 *    no argument and no space between directive and end_seq
                 *    just before the EOS. (consider &lt;!--#printenv--&gt; as last
                 *    or only string within the stream). This state, however,
                 *    just cleans up and turns itself to PARSE_EXECUTE, which
                 *    will be passed through within the next (and actually
                 *    last) round.
                 */</comment>
                <if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><name pos:line="61" pos:column="21">PARSE_EXECUTE<pos:position pos:line="61" pos:column="34"/></name>            <operator pos:line="61" pos:column="46">==<pos:position pos:line="61" pos:column="48"/></operator> <name><name pos:line="61" pos:column="49">ctx<pos:position pos:line="61" pos:column="52"/></name><operator pos:line="61" pos:column="52">-&gt;<pos:position pos:line="61" pos:column="57"/></operator><name pos:line="61" pos:column="54">state<pos:position pos:line="61" pos:column="59"/></name></name> <operator pos:line="61" pos:column="60">||<pos:position pos:line="61" pos:column="62"/></operator>
                    <name pos:line="62" pos:column="21">PARSE_DIRECTIVE_POSTTAIL<pos:position pos:line="62" pos:column="45"/></name> <operator pos:line="62" pos:column="46">==<pos:position pos:line="62" pos:column="48"/></operator> <name><name pos:line="62" pos:column="49">ctx<pos:position pos:line="62" pos:column="52"/></name><operator pos:line="62" pos:column="52">-&gt;<pos:position pos:line="62" pos:column="57"/></operator><name pos:line="62" pos:column="54">state<pos:position pos:line="62" pos:column="59"/></name></name></expr>)<pos:position pos:line="62" pos:column="60"/></condition><then pos:line="62" pos:column="60"> <block pos:line="62" pos:column="61">{
                    <expr_stmt><expr><call><name pos:line="63" pos:column="21">APR_BUCKET_INSERT_BEFORE<pos:position pos:line="63" pos:column="45"/></name><argument_list pos:line="63" pos:column="45">(<argument><expr><name pos:line="63" pos:column="46">newb<pos:position pos:line="63" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="52">b<pos:position pos:line="63" pos:column="53"/></name></expr></argument>)<pos:position pos:line="63" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="55"/></expr_stmt>
                }<pos:position pos:line="64" pos:column="18"/></block></then>
                <else pos:line="65" pos:column="17">else <block pos:line="65" pos:column="22">{
                    <break pos:line="66" pos:column="21">break;<pos:position pos:line="66" pos:column="27"/></break> <comment type="block" pos:line="66" pos:column="28">/* END OF STREAM */</comment>
                }<pos:position pos:line="67" pos:column="18"/></block></else></if>
            }<pos:position pos:line="68" pos:column="14"/></block></then>
            <else pos:line="69" pos:column="13">else <block pos:line="69" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="70" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="70" pos:column="40"/></name><argument_list pos:line="70" pos:column="40">(<argument><expr><name pos:line="70" pos:column="41">pass_bb<pos:position pos:line="70" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="50">b<pos:position pos:line="70" pos:column="51"/></name></expr></argument>)<pos:position pos:line="70" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="53"/></expr_stmt>

                <if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><call><name pos:line="72" pos:column="21">APR_BUCKET_IS_FLUSH<pos:position pos:line="72" pos:column="40"/></name><argument_list pos:line="72" pos:column="40">(<argument><expr><name pos:line="72" pos:column="41">b<pos:position pos:line="72" pos:column="42"/></name></expr></argument>)<pos:position pos:line="72" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="44"/></condition><then pos:line="72" pos:column="44"> <block pos:line="72" pos:column="45">{
                    <expr_stmt><expr><name><name pos:line="73" pos:column="21">ctx<pos:position pos:line="73" pos:column="24"/></name><operator pos:line="73" pos:column="24">-&gt;<pos:position pos:line="73" pos:column="29"/></operator><name pos:line="73" pos:column="26">ctx<pos:position pos:line="73" pos:column="29"/></name><operator pos:line="73" pos:column="29">-&gt;<pos:position pos:line="73" pos:column="34"/></operator><name pos:line="73" pos:column="31">output_now<pos:position pos:line="73" pos:column="41"/></name></name> <operator pos:line="73" pos:column="42">=<pos:position pos:line="73" pos:column="43"/></operator> <literal type="number" pos:line="73" pos:column="44">1<pos:position pos:line="73" pos:column="45"/></literal></expr>;<pos:position pos:line="73" pos:column="46"/></expr_stmt>
                }<pos:position pos:line="74" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="76" pos:column="17">b<pos:position pos:line="76" pos:column="18"/></name> <operator pos:line="76" pos:column="19">=<pos:position pos:line="76" pos:column="20"/></operator> <name pos:line="76" pos:column="21">newb<pos:position pos:line="76" pos:column="25"/></name></expr>;<pos:position pos:line="76" pos:column="26"/></expr_stmt>
                <continue pos:line="77" pos:column="17">continue;<pos:position pos:line="77" pos:column="26"/></continue>
            }<pos:position pos:line="78" pos:column="14"/></block></else></if>
        }<pos:position pos:line="79" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="81" pos:column="9">/* enough is enough ... */</comment>
        <if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><name><name pos:line="82" pos:column="13">ctx<pos:position pos:line="82" pos:column="16"/></name><operator pos:line="82" pos:column="16">-&gt;<pos:position pos:line="82" pos:column="21"/></operator><name pos:line="82" pos:column="18">ctx<pos:position pos:line="82" pos:column="21"/></name><operator pos:line="82" pos:column="21">-&gt;<pos:position pos:line="82" pos:column="26"/></operator><name pos:line="82" pos:column="23">output_now<pos:position pos:line="82" pos:column="33"/></name></name> <operator pos:line="82" pos:column="34">||<pos:position pos:line="82" pos:column="36"/></operator>
            <name><name pos:line="83" pos:column="13">ctx<pos:position pos:line="83" pos:column="16"/></name><operator pos:line="83" pos:column="16">-&gt;<pos:position pos:line="83" pos:column="21"/></operator><name pos:line="83" pos:column="18">ctx<pos:position pos:line="83" pos:column="21"/></name><operator pos:line="83" pos:column="21">-&gt;<pos:position pos:line="83" pos:column="26"/></operator><name pos:line="83" pos:column="23">bytes_parsed<pos:position pos:line="83" pos:column="35"/></name></name> <operator pos:line="83" pos:column="36">&gt;<pos:position pos:line="83" pos:column="40"/></operator> <name pos:line="83" pos:column="38">AP_MIN_BYTES_TO_WRITE<pos:position pos:line="83" pos:column="59"/></name></expr>)<pos:position pos:line="83" pos:column="60"/></condition><then pos:line="83" pos:column="60"> <block pos:line="83" pos:column="61">{

            <if pos:line="85" pos:column="13">if <condition pos:line="85" pos:column="16">(<expr><operator pos:line="85" pos:column="17">!<pos:position pos:line="85" pos:column="18"/></operator><call><name pos:line="85" pos:column="18">APR_BRIGADE_EMPTY<pos:position pos:line="85" pos:column="35"/></name><argument_list pos:line="85" pos:column="35">(<argument><expr><name pos:line="85" pos:column="36">pass_bb<pos:position pos:line="85" pos:column="43"/></name></expr></argument>)<pos:position pos:line="85" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="45"/></condition><then pos:line="85" pos:column="45"> <block pos:line="85" pos:column="46">{
                <expr_stmt><expr><name pos:line="86" pos:column="17">rv<pos:position pos:line="86" pos:column="19"/></name> <operator pos:line="86" pos:column="20">=<pos:position pos:line="86" pos:column="21"/></operator> <call><name pos:line="86" pos:column="22">ap_pass_brigade<pos:position pos:line="86" pos:column="37"/></name><argument_list pos:line="86" pos:column="37">(<argument><expr><name><name pos:line="86" pos:column="38">f<pos:position pos:line="86" pos:column="39"/></name><operator pos:line="86" pos:column="39">-&gt;<pos:position pos:line="86" pos:column="44"/></operator><name pos:line="86" pos:column="41">next<pos:position pos:line="86" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="47">pass_bb<pos:position pos:line="86" pos:column="54"/></name></expr></argument>)<pos:position pos:line="86" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="56"/></expr_stmt>
                <if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><operator pos:line="87" pos:column="21">!<pos:position pos:line="87" pos:column="22"/></operator><call><name pos:line="87" pos:column="22">APR_STATUS_IS_SUCCESS<pos:position pos:line="87" pos:column="43"/></name><argument_list pos:line="87" pos:column="43">(<argument><expr><name pos:line="87" pos:column="44">rv<pos:position pos:line="87" pos:column="46"/></name></expr></argument>)<pos:position pos:line="87" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="48"/></condition><then pos:line="87" pos:column="48"> <block pos:line="87" pos:column="49">{
                    <expr_stmt><expr><call><name pos:line="88" pos:column="21">apr_brigade_destroy<pos:position pos:line="88" pos:column="40"/></name><argument_list pos:line="88" pos:column="40">(<argument><expr><name pos:line="88" pos:column="41">pass_bb<pos:position pos:line="88" pos:column="48"/></name></expr></argument>)<pos:position pos:line="88" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="50"/></expr_stmt>
                    <return pos:line="89" pos:column="21">return <expr><name pos:line="89" pos:column="28">rv<pos:position pos:line="89" pos:column="30"/></name></expr>;<pos:position pos:line="89" pos:column="31"/></return>
                }<pos:position pos:line="90" pos:column="18"/></block></then></if>
            }<pos:position pos:line="91" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name><name pos:line="93" pos:column="13">ctx<pos:position pos:line="93" pos:column="16"/></name><operator pos:line="93" pos:column="16">-&gt;<pos:position pos:line="93" pos:column="21"/></operator><name pos:line="93" pos:column="18">ctx<pos:position pos:line="93" pos:column="21"/></name><operator pos:line="93" pos:column="21">-&gt;<pos:position pos:line="93" pos:column="26"/></operator><name pos:line="93" pos:column="23">output_now<pos:position pos:line="93" pos:column="33"/></name></name> <operator pos:line="93" pos:column="34">=<pos:position pos:line="93" pos:column="35"/></operator> <literal type="number" pos:line="93" pos:column="36">0<pos:position pos:line="93" pos:column="37"/></literal></expr>;<pos:position pos:line="93" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="94" pos:column="13">ctx<pos:position pos:line="94" pos:column="16"/></name><operator pos:line="94" pos:column="16">-&gt;<pos:position pos:line="94" pos:column="21"/></operator><name pos:line="94" pos:column="18">ctx<pos:position pos:line="94" pos:column="21"/></name><operator pos:line="94" pos:column="21">-&gt;<pos:position pos:line="94" pos:column="26"/></operator><name pos:line="94" pos:column="23">bytes_parsed<pos:position pos:line="94" pos:column="35"/></name></name> <operator pos:line="94" pos:column="36">=<pos:position pos:line="94" pos:column="37"/></operator> <literal type="number" pos:line="94" pos:column="38">0<pos:position pos:line="94" pos:column="39"/></literal></expr>;<pos:position pos:line="94" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="95" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="97" pos:column="9">/* read the current bucket data */</comment>
        <expr_stmt><expr><name pos:line="98" pos:column="9">len<pos:position pos:line="98" pos:column="12"/></name> <operator pos:line="98" pos:column="13">=<pos:position pos:line="98" pos:column="14"/></operator> <literal type="number" pos:line="98" pos:column="15">0<pos:position pos:line="98" pos:column="16"/></literal></expr>;<pos:position pos:line="98" pos:column="17"/></expr_stmt>
        <if pos:line="99" pos:column="9">if <condition pos:line="99" pos:column="12">(<expr><operator pos:line="99" pos:column="13">!<pos:position pos:line="99" pos:column="14"/></operator><name><name pos:line="99" pos:column="14">ctx<pos:position pos:line="99" pos:column="17"/></name><operator pos:line="99" pos:column="17">-&gt;<pos:position pos:line="99" pos:column="22"/></operator><name pos:line="99" pos:column="19">seen_eos<pos:position pos:line="99" pos:column="27"/></name></name></expr>)<pos:position pos:line="99" pos:column="28"/></condition><then pos:line="99" pos:column="28"> <block pos:line="99" pos:column="29">{
            <if pos:line="100" pos:column="13">if <condition pos:line="100" pos:column="16">(<expr><name><name pos:line="100" pos:column="17">ctx<pos:position pos:line="100" pos:column="20"/></name><operator pos:line="100" pos:column="20">-&gt;<pos:position pos:line="100" pos:column="25"/></operator><name pos:line="100" pos:column="22">ctx<pos:position pos:line="100" pos:column="25"/></name><operator pos:line="100" pos:column="25">-&gt;<pos:position pos:line="100" pos:column="30"/></operator><name pos:line="100" pos:column="27">bytes_parsed<pos:position pos:line="100" pos:column="39"/></name></name> <operator pos:line="100" pos:column="40">&gt;<pos:position pos:line="100" pos:column="44"/></operator> <literal type="number" pos:line="100" pos:column="42">0<pos:position pos:line="100" pos:column="43"/></literal></expr>)<pos:position pos:line="100" pos:column="44"/></condition><then pos:line="100" pos:column="44"> <block pos:line="100" pos:column="45">{
                <expr_stmt><expr><name pos:line="101" pos:column="17">rv<pos:position pos:line="101" pos:column="19"/></name> <operator pos:line="101" pos:column="20">=<pos:position pos:line="101" pos:column="21"/></operator> <call><name pos:line="101" pos:column="22">apr_bucket_read<pos:position pos:line="101" pos:column="37"/></name><argument_list pos:line="101" pos:column="37">(<argument><expr><name pos:line="101" pos:column="38">b<pos:position pos:line="101" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="101" pos:column="41">&amp;<pos:position pos:line="101" pos:column="46"/></operator><name pos:line="101" pos:column="42">data<pos:position pos:line="101" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="101" pos:column="48">&amp;<pos:position pos:line="101" pos:column="53"/></operator><name pos:line="101" pos:column="49">len<pos:position pos:line="101" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="54">APR_NONBLOCK_READ<pos:position pos:line="101" pos:column="71"/></name></expr></argument>)<pos:position pos:line="101" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="73"/></expr_stmt>
                <if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><call><name pos:line="102" pos:column="21">APR_STATUS_IS_EAGAIN<pos:position pos:line="102" pos:column="41"/></name><argument_list pos:line="102" pos:column="41">(<argument><expr><name pos:line="102" pos:column="42">rv<pos:position pos:line="102" pos:column="44"/></name></expr></argument>)<pos:position pos:line="102" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="102" pos:column="46"/></condition><then pos:line="102" pos:column="46"> <block pos:line="102" pos:column="47">{
                    <expr_stmt><expr><name><name pos:line="103" pos:column="21">ctx<pos:position pos:line="103" pos:column="24"/></name><operator pos:line="103" pos:column="24">-&gt;<pos:position pos:line="103" pos:column="29"/></operator><name pos:line="103" pos:column="26">ctx<pos:position pos:line="103" pos:column="29"/></name><operator pos:line="103" pos:column="29">-&gt;<pos:position pos:line="103" pos:column="34"/></operator><name pos:line="103" pos:column="31">output_now<pos:position pos:line="103" pos:column="41"/></name></name> <operator pos:line="103" pos:column="42">=<pos:position pos:line="103" pos:column="43"/></operator> <literal type="number" pos:line="103" pos:column="44">1<pos:position pos:line="103" pos:column="45"/></literal></expr>;<pos:position pos:line="103" pos:column="46"/></expr_stmt>
                    <continue pos:line="104" pos:column="21">continue;<pos:position pos:line="104" pos:column="30"/></continue>
                }<pos:position pos:line="105" pos:column="18"/></block></then></if>
            }<pos:position pos:line="106" pos:column="14"/></block></then></if>

            <if pos:line="108" pos:column="13">if <condition pos:line="108" pos:column="16">(<expr><operator pos:line="108" pos:column="17">!<pos:position pos:line="108" pos:column="18"/></operator><name pos:line="108" pos:column="18">len<pos:position pos:line="108" pos:column="21"/></name> <operator pos:line="108" pos:column="22">||<pos:position pos:line="108" pos:column="24"/></operator> <operator pos:line="108" pos:column="25">!<pos:position pos:line="108" pos:column="26"/></operator><call><name pos:line="108" pos:column="26">APR_STATUS_IS_SUCCESS<pos:position pos:line="108" pos:column="47"/></name><argument_list pos:line="108" pos:column="47">(<argument><expr><name pos:line="108" pos:column="48">rv<pos:position pos:line="108" pos:column="50"/></name></expr></argument>)<pos:position pos:line="108" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="108" pos:column="52"/></condition><then pos:line="108" pos:column="52"> <block pos:line="108" pos:column="53">{
                <expr_stmt><expr><name pos:line="109" pos:column="17">rv<pos:position pos:line="109" pos:column="19"/></name> <operator pos:line="109" pos:column="20">=<pos:position pos:line="109" pos:column="21"/></operator> <call><name pos:line="109" pos:column="22">apr_bucket_read<pos:position pos:line="109" pos:column="37"/></name><argument_list pos:line="109" pos:column="37">(<argument><expr><name pos:line="109" pos:column="38">b<pos:position pos:line="109" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="109" pos:column="41">&amp;<pos:position pos:line="109" pos:column="46"/></operator><name pos:line="109" pos:column="42">data<pos:position pos:line="109" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="109" pos:column="48">&amp;<pos:position pos:line="109" pos:column="53"/></operator><name pos:line="109" pos:column="49">len<pos:position pos:line="109" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="54">APR_BLOCK_READ<pos:position pos:line="109" pos:column="68"/></name></expr></argument>)<pos:position pos:line="109" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="70"/></expr_stmt>
            }<pos:position pos:line="110" pos:column="14"/></block></then></if>

            <if pos:line="112" pos:column="13">if <condition pos:line="112" pos:column="16">(<expr><operator pos:line="112" pos:column="17">!<pos:position pos:line="112" pos:column="18"/></operator><call><name pos:line="112" pos:column="18">APR_STATUS_IS_SUCCESS<pos:position pos:line="112" pos:column="39"/></name><argument_list pos:line="112" pos:column="39">(<argument><expr><name pos:line="112" pos:column="40">rv<pos:position pos:line="112" pos:column="42"/></name></expr></argument>)<pos:position pos:line="112" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="112" pos:column="44"/></condition><then pos:line="112" pos:column="44"> <block pos:line="112" pos:column="45">{
                <expr_stmt><expr><call><name pos:line="113" pos:column="17">apr_brigade_destroy<pos:position pos:line="113" pos:column="36"/></name><argument_list pos:line="113" pos:column="36">(<argument><expr><name pos:line="113" pos:column="37">pass_bb<pos:position pos:line="113" pos:column="44"/></name></expr></argument>)<pos:position pos:line="113" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="46"/></expr_stmt>
                <return pos:line="114" pos:column="17">return <expr><name pos:line="114" pos:column="24">rv<pos:position pos:line="114" pos:column="26"/></name></expr>;<pos:position pos:line="114" pos:column="27"/></return>
            }<pos:position pos:line="115" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name><name pos:line="117" pos:column="13">ctx<pos:position pos:line="117" pos:column="16"/></name><operator pos:line="117" pos:column="16">-&gt;<pos:position pos:line="117" pos:column="21"/></operator><name pos:line="117" pos:column="18">ctx<pos:position pos:line="117" pos:column="21"/></name><operator pos:line="117" pos:column="21">-&gt;<pos:position pos:line="117" pos:column="26"/></operator><name pos:line="117" pos:column="23">bytes_parsed<pos:position pos:line="117" pos:column="35"/></name></name> <operator pos:line="117" pos:column="36">+=<pos:position pos:line="117" pos:column="38"/></operator> <name pos:line="117" pos:column="39">len<pos:position pos:line="117" pos:column="42"/></name></expr>;<pos:position pos:line="117" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="118" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="120" pos:column="9">/* zero length bucket, fetch next one */</comment>
        <if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><operator pos:line="121" pos:column="13">!<pos:position pos:line="121" pos:column="14"/></operator><name pos:line="121" pos:column="14">len<pos:position pos:line="121" pos:column="17"/></name> <operator pos:line="121" pos:column="18">&amp;&amp;<pos:position pos:line="121" pos:column="28"/></operator> <operator pos:line="121" pos:column="21">!<pos:position pos:line="121" pos:column="22"/></operator><name><name pos:line="121" pos:column="22">ctx<pos:position pos:line="121" pos:column="25"/></name><operator pos:line="121" pos:column="25">-&gt;<pos:position pos:line="121" pos:column="30"/></operator><name pos:line="121" pos:column="27">seen_eos<pos:position pos:line="121" pos:column="35"/></name></name></expr>)<pos:position pos:line="121" pos:column="36"/></condition><then pos:line="121" pos:column="36"> <block pos:line="121" pos:column="37">{
            <expr_stmt><expr><name pos:line="122" pos:column="13">b<pos:position pos:line="122" pos:column="14"/></name> <operator pos:line="122" pos:column="15">=<pos:position pos:line="122" pos:column="16"/></operator> <call><name pos:line="122" pos:column="17">APR_BUCKET_NEXT<pos:position pos:line="122" pos:column="32"/></name><argument_list pos:line="122" pos:column="32">(<argument><expr><name pos:line="122" pos:column="33">b<pos:position pos:line="122" pos:column="34"/></name></expr></argument>)<pos:position pos:line="122" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="36"/></expr_stmt>
            <continue pos:line="123" pos:column="13">continue;<pos:position pos:line="123" pos:column="22"/></continue>
        }<pos:position pos:line="124" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="126" pos:column="9">/*
         * it's actually a data containing bucket, start/continue parsing
         */</comment>

        <switch pos:line="130" pos:column="9">switch <condition pos:line="130" pos:column="16">(<expr><name><name pos:line="130" pos:column="17">ctx<pos:position pos:line="130" pos:column="20"/></name><operator pos:line="130" pos:column="20">-&gt;<pos:position pos:line="130" pos:column="25"/></operator><name pos:line="130" pos:column="22">state<pos:position pos:line="130" pos:column="27"/></name></name></expr>)<pos:position pos:line="130" pos:column="28"/></condition> <block pos:line="130" pos:column="29">{
        <comment type="block" pos:line="131" pos:column="9">/* no current tag; search for start sequence */</comment>
        <case pos:line="132" pos:column="9">case <expr><name pos:line="132" pos:column="14">PARSE_PRE_HEAD<pos:position pos:line="132" pos:column="28"/></name></expr>:<pos:position pos:line="132" pos:column="29"/></case>
            <expr_stmt><expr><name pos:line="133" pos:column="13">index<pos:position pos:line="133" pos:column="18"/></name> <operator pos:line="133" pos:column="19">=<pos:position pos:line="133" pos:column="20"/></operator> <call><name pos:line="133" pos:column="21">find_start_sequence<pos:position pos:line="133" pos:column="40"/></name><argument_list pos:line="133" pos:column="40">(<argument><expr><name pos:line="133" pos:column="41">ctx<pos:position pos:line="133" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="46">data<pos:position pos:line="133" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="52">len<pos:position pos:line="133" pos:column="55"/></name></expr></argument>)<pos:position pos:line="133" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="57"/></expr_stmt>

            <if pos:line="135" pos:column="13">if <condition pos:line="135" pos:column="16">(<expr><name pos:line="135" pos:column="17">index<pos:position pos:line="135" pos:column="22"/></name> <operator pos:line="135" pos:column="23">&lt;<pos:position pos:line="135" pos:column="27"/></operator> <name pos:line="135" pos:column="25">len<pos:position pos:line="135" pos:column="28"/></name></expr>)<pos:position pos:line="135" pos:column="29"/></condition><then pos:line="135" pos:column="29"> <block pos:line="135" pos:column="30">{
                <expr_stmt><expr><call><name pos:line="136" pos:column="17">apr_bucket_split<pos:position pos:line="136" pos:column="33"/></name><argument_list pos:line="136" pos:column="33">(<argument><expr><name pos:line="136" pos:column="34">b<pos:position pos:line="136" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="37">index<pos:position pos:line="136" pos:column="42"/></name></expr></argument>)<pos:position pos:line="136" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="44"/></expr_stmt>
            }<pos:position pos:line="137" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="139" pos:column="13">newb<pos:position pos:line="139" pos:column="17"/></name> <operator pos:line="139" pos:column="18">=<pos:position pos:line="139" pos:column="19"/></operator> <call><name pos:line="139" pos:column="20">APR_BUCKET_NEXT<pos:position pos:line="139" pos:column="35"/></name><argument_list pos:line="139" pos:column="35">(<argument><expr><name pos:line="139" pos:column="36">b<pos:position pos:line="139" pos:column="37"/></name></expr></argument>)<pos:position pos:line="139" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="39"/></expr_stmt>
            <if pos:line="140" pos:column="13">if <condition pos:line="140" pos:column="16">(<expr><name><name pos:line="140" pos:column="17">ctx<pos:position pos:line="140" pos:column="20"/></name><operator pos:line="140" pos:column="20">-&gt;<pos:position pos:line="140" pos:column="25"/></operator><name pos:line="140" pos:column="22">ctx<pos:position pos:line="140" pos:column="25"/></name><operator pos:line="140" pos:column="25">-&gt;<pos:position pos:line="140" pos:column="30"/></operator><name pos:line="140" pos:column="27">flags<pos:position pos:line="140" pos:column="32"/></name></name> <operator pos:line="140" pos:column="33">&amp;<pos:position pos:line="140" pos:column="38"/></operator> <name pos:line="140" pos:column="35">FLAG_PRINTING<pos:position pos:line="140" pos:column="48"/></name></expr>)<pos:position pos:line="140" pos:column="49"/></condition><then pos:line="140" pos:column="49"> <block pos:line="140" pos:column="50">{
                <expr_stmt><expr><call><name pos:line="141" pos:column="17">APR_BUCKET_REMOVE<pos:position pos:line="141" pos:column="34"/></name><argument_list pos:line="141" pos:column="34">(<argument><expr><name pos:line="141" pos:column="35">b<pos:position pos:line="141" pos:column="36"/></name></expr></argument>)<pos:position pos:line="141" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="142" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="142" pos:column="40"/></name><argument_list pos:line="142" pos:column="40">(<argument><expr><name pos:line="142" pos:column="41">pass_bb<pos:position pos:line="142" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="50">b<pos:position pos:line="142" pos:column="51"/></name></expr></argument>)<pos:position pos:line="142" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="143" pos:column="14"/></block></then>
            <else pos:line="144" pos:column="13">else <block pos:line="144" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="145" pos:column="17">apr_bucket_delete<pos:position pos:line="145" pos:column="34"/></name><argument_list pos:line="145" pos:column="34">(<argument><expr><name pos:line="145" pos:column="35">b<pos:position pos:line="145" pos:column="36"/></name></expr></argument>)<pos:position pos:line="145" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="146" pos:column="14"/></block></else></if>

            <if pos:line="148" pos:column="13">if <condition pos:line="148" pos:column="16">(<expr><name pos:line="148" pos:column="17">index<pos:position pos:line="148" pos:column="22"/></name> <operator pos:line="148" pos:column="23">&lt;<pos:position pos:line="148" pos:column="27"/></operator> <name pos:line="148" pos:column="25">len<pos:position pos:line="148" pos:column="28"/></name></expr>)<pos:position pos:line="148" pos:column="29"/></condition><then pos:line="148" pos:column="29"> <block pos:line="148" pos:column="30">{
                <comment type="block" pos:line="149" pos:column="17">/* now delete the start_seq stuff from the remaining bucket */</comment>
                <if pos:line="150" pos:column="17">if <condition pos:line="150" pos:column="20">(<expr><name pos:line="150" pos:column="21">PARSE_DIRECTIVE<pos:position pos:line="150" pos:column="36"/></name> <operator pos:line="150" pos:column="37">==<pos:position pos:line="150" pos:column="39"/></operator> <name><name pos:line="150" pos:column="40">ctx<pos:position pos:line="150" pos:column="43"/></name><operator pos:line="150" pos:column="43">-&gt;<pos:position pos:line="150" pos:column="48"/></operator><name pos:line="150" pos:column="45">state<pos:position pos:line="150" pos:column="50"/></name></name></expr>)<pos:position pos:line="150" pos:column="51"/></condition><then pos:line="150" pos:column="51"> <block pos:line="150" pos:column="52">{ <comment type="block" pos:line="150" pos:column="54">/* full match */</comment>
                    <expr_stmt><expr><call><name pos:line="151" pos:column="21">apr_bucket_split<pos:position pos:line="151" pos:column="37"/></name><argument_list pos:line="151" pos:column="37">(<argument><expr><name pos:line="151" pos:column="38">newb<pos:position pos:line="151" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="151" pos:column="44">ctx<pos:position pos:line="151" pos:column="47"/></name><operator pos:line="151" pos:column="47">-&gt;<pos:position pos:line="151" pos:column="52"/></operator><name pos:line="151" pos:column="49">ctx<pos:position pos:line="151" pos:column="52"/></name><operator pos:line="151" pos:column="52">-&gt;<pos:position pos:line="151" pos:column="57"/></operator><name pos:line="151" pos:column="54">start_seq_len<pos:position pos:line="151" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="151" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="69"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="152" pos:column="21">ctx<pos:position pos:line="152" pos:column="24"/></name><operator pos:line="152" pos:column="24">-&gt;<pos:position pos:line="152" pos:column="29"/></operator><name pos:line="152" pos:column="26">ctx<pos:position pos:line="152" pos:column="29"/></name><operator pos:line="152" pos:column="29">-&gt;<pos:position pos:line="152" pos:column="34"/></operator><name pos:line="152" pos:column="31">output_now<pos:position pos:line="152" pos:column="41"/></name></name> <operator pos:line="152" pos:column="42">=<pos:position pos:line="152" pos:column="43"/></operator> <literal type="number" pos:line="152" pos:column="44">1<pos:position pos:line="152" pos:column="45"/></literal></expr>;<pos:position pos:line="152" pos:column="46"/></expr_stmt> <comment type="block" pos:line="152" pos:column="47">/* pass pre-tag stuff */</comment>
                }<pos:position pos:line="153" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="155" pos:column="17">b<pos:position pos:line="155" pos:column="18"/></name> <operator pos:line="155" pos:column="19">=<pos:position pos:line="155" pos:column="20"/></operator> <call><name pos:line="155" pos:column="21">APR_BUCKET_NEXT<pos:position pos:line="155" pos:column="36"/></name><argument_list pos:line="155" pos:column="36">(<argument><expr><name pos:line="155" pos:column="37">newb<pos:position pos:line="155" pos:column="41"/></name></expr></argument>)<pos:position pos:line="155" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="156" pos:column="17">apr_bucket_delete<pos:position pos:line="156" pos:column="34"/></name><argument_list pos:line="156" pos:column="34">(<argument><expr><name pos:line="156" pos:column="35">newb<pos:position pos:line="156" pos:column="39"/></name></expr></argument>)<pos:position pos:line="156" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="157" pos:column="14"/></block></then>
            <else pos:line="158" pos:column="13">else <block pos:line="158" pos:column="18">{
                <expr_stmt><expr><name pos:line="159" pos:column="17">b<pos:position pos:line="159" pos:column="18"/></name> <operator pos:line="159" pos:column="19">=<pos:position pos:line="159" pos:column="20"/></operator> <name pos:line="159" pos:column="21">newb<pos:position pos:line="159" pos:column="25"/></name></expr>;<pos:position pos:line="159" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="160" pos:column="14"/></block></else></if>

            <break pos:line="162" pos:column="13">break;<pos:position pos:line="162" pos:column="19"/></break>

        <comment type="block" pos:line="164" pos:column="9">/* we're currently looking for the end of the start sequence */</comment>
        <case pos:line="165" pos:column="9">case <expr><name pos:line="165" pos:column="14">PARSE_HEAD<pos:position pos:line="165" pos:column="24"/></name></expr>:<pos:position pos:line="165" pos:column="25"/></case>
            <expr_stmt><expr><name pos:line="166" pos:column="13">index<pos:position pos:line="166" pos:column="18"/></name> <operator pos:line="166" pos:column="19">=<pos:position pos:line="166" pos:column="20"/></operator> <call><name pos:line="166" pos:column="21">find_partial_start_sequence<pos:position pos:line="166" pos:column="48"/></name><argument_list pos:line="166" pos:column="48">(<argument><expr><name pos:line="166" pos:column="49">ctx<pos:position pos:line="166" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="54">data<pos:position pos:line="166" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="60">len<pos:position pos:line="166" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="166" pos:column="65">&amp;<pos:position pos:line="166" pos:column="70"/></operator><name pos:line="166" pos:column="66">release<pos:position pos:line="166" pos:column="73"/></name></expr></argument>)<pos:position pos:line="166" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="75"/></expr_stmt>

            <comment type="block" pos:line="168" pos:column="13">/* check if we mismatched earlier and have to release some chars */</comment>
            <if pos:line="169" pos:column="13">if <condition pos:line="169" pos:column="16">(<expr><name pos:line="169" pos:column="17">release<pos:position pos:line="169" pos:column="24"/></name> <operator pos:line="169" pos:column="25">&amp;&amp;<pos:position pos:line="169" pos:column="35"/></operator> <operator pos:line="169" pos:column="28">(<pos:position pos:line="169" pos:column="29"/></operator><name><name pos:line="169" pos:column="29">ctx<pos:position pos:line="169" pos:column="32"/></name><operator pos:line="169" pos:column="32">-&gt;<pos:position pos:line="169" pos:column="37"/></operator><name pos:line="169" pos:column="34">ctx<pos:position pos:line="169" pos:column="37"/></name><operator pos:line="169" pos:column="37">-&gt;<pos:position pos:line="169" pos:column="42"/></operator><name pos:line="169" pos:column="39">flags<pos:position pos:line="169" pos:column="44"/></name></name> <operator pos:line="169" pos:column="45">&amp;<pos:position pos:line="169" pos:column="50"/></operator> <name pos:line="169" pos:column="47">FLAG_PRINTING<pos:position pos:line="169" pos:column="60"/></name><operator pos:line="169" pos:column="60">)<pos:position pos:line="169" pos:column="61"/></operator></expr>)<pos:position pos:line="169" pos:column="62"/></condition><then pos:line="169" pos:column="62"> <block pos:line="169" pos:column="63">{
                <decl_stmt><decl><type><name pos:line="170" pos:column="17">char<pos:position pos:line="170" pos:column="21"/></name> <modifier pos:line="170" pos:column="22">*<pos:position pos:line="170" pos:column="23"/></modifier></type><name pos:line="170" pos:column="23">to_release<pos:position pos:line="170" pos:column="33"/></name> <init pos:line="170" pos:column="34">= <expr><call><name pos:line="170" pos:column="36">apr_palloc<pos:position pos:line="170" pos:column="46"/></name><argument_list pos:line="170" pos:column="46">(<argument><expr><name><name pos:line="170" pos:column="47">ctx<pos:position pos:line="170" pos:column="50"/></name><operator pos:line="170" pos:column="50">-&gt;<pos:position pos:line="170" pos:column="55"/></operator><name pos:line="170" pos:column="52">ctx<pos:position pos:line="170" pos:column="55"/></name><operator pos:line="170" pos:column="55">-&gt;<pos:position pos:line="170" pos:column="60"/></operator><name pos:line="170" pos:column="57">pool<pos:position pos:line="170" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="170" pos:column="63">release<pos:position pos:line="170" pos:column="70"/></name></expr></argument>)<pos:position pos:line="170" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="170" pos:column="72"/></decl_stmt>

                <expr_stmt><expr><call><name pos:line="172" pos:column="17">memcpy<pos:position pos:line="172" pos:column="23"/></name><argument_list pos:line="172" pos:column="23">(<argument><expr><name pos:line="172" pos:column="24">to_release<pos:position pos:line="172" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="172" pos:column="36">ctx<pos:position pos:line="172" pos:column="39"/></name><operator pos:line="172" pos:column="39">-&gt;<pos:position pos:line="172" pos:column="44"/></operator><name pos:line="172" pos:column="41">ctx<pos:position pos:line="172" pos:column="44"/></name><operator pos:line="172" pos:column="44">-&gt;<pos:position pos:line="172" pos:column="49"/></operator><name pos:line="172" pos:column="46">start_seq<pos:position pos:line="172" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="57">release<pos:position pos:line="172" pos:column="64"/></name></expr></argument>)<pos:position pos:line="172" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="66"/></expr_stmt>
                <expr_stmt><expr><name pos:line="173" pos:column="17">newb<pos:position pos:line="173" pos:column="21"/></name> <operator pos:line="173" pos:column="22">=<pos:position pos:line="173" pos:column="23"/></operator> <call><name pos:line="173" pos:column="24">apr_bucket_pool_create<pos:position pos:line="173" pos:column="46"/></name><argument_list pos:line="173" pos:column="46">(<argument><expr><name pos:line="173" pos:column="47">to_release<pos:position pos:line="173" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="59">release<pos:position pos:line="173" pos:column="66"/></name></expr></argument>,
                                              <argument><expr><name><name pos:line="174" pos:column="47">ctx<pos:position pos:line="174" pos:column="50"/></name><operator pos:line="174" pos:column="50">-&gt;<pos:position pos:line="174" pos:column="55"/></operator><name pos:line="174" pos:column="52">ctx<pos:position pos:line="174" pos:column="55"/></name><operator pos:line="174" pos:column="55">-&gt;<pos:position pos:line="174" pos:column="60"/></operator><name pos:line="174" pos:column="57">pool<pos:position pos:line="174" pos:column="61"/></name></name></expr></argument>,
                                              <argument><expr><name><name pos:line="175" pos:column="47">f<pos:position pos:line="175" pos:column="48"/></name><operator pos:line="175" pos:column="48">-&gt;<pos:position pos:line="175" pos:column="53"/></operator><name pos:line="175" pos:column="50">c<pos:position pos:line="175" pos:column="51"/></name><operator pos:line="175" pos:column="51">-&gt;<pos:position pos:line="175" pos:column="56"/></operator><name pos:line="175" pos:column="53">bucket_alloc<pos:position pos:line="175" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="175" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="67"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="176" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="176" pos:column="40"/></name><argument_list pos:line="176" pos:column="40">(<argument><expr><name pos:line="176" pos:column="41">pass_bb<pos:position pos:line="176" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="50">newb<pos:position pos:line="176" pos:column="54"/></name></expr></argument>)<pos:position pos:line="176" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="177" pos:column="14"/></block></then></if>

            <if pos:line="179" pos:column="13">if <condition pos:line="179" pos:column="16">(<expr><name pos:line="179" pos:column="17">index<pos:position pos:line="179" pos:column="22"/></name></expr>)<pos:position pos:line="179" pos:column="23"/></condition><then pos:line="179" pos:column="23"> <block pos:line="179" pos:column="24">{ <comment type="block" pos:line="179" pos:column="26">/* any match */</comment>
                <comment type="block" pos:line="180" pos:column="17">/* now delete the start_seq stuff from the remaining bucket */</comment>
                <if pos:line="181" pos:column="17">if <condition pos:line="181" pos:column="20">(<expr><name pos:line="181" pos:column="21">PARSE_DIRECTIVE<pos:position pos:line="181" pos:column="36"/></name> <operator pos:line="181" pos:column="37">==<pos:position pos:line="181" pos:column="39"/></operator> <name><name pos:line="181" pos:column="40">ctx<pos:position pos:line="181" pos:column="43"/></name><operator pos:line="181" pos:column="43">-&gt;<pos:position pos:line="181" pos:column="48"/></operator><name pos:line="181" pos:column="45">state<pos:position pos:line="181" pos:column="50"/></name></name></expr>)<pos:position pos:line="181" pos:column="51"/></condition><then pos:line="181" pos:column="51"> <block pos:line="181" pos:column="52">{ <comment type="block" pos:line="181" pos:column="54">/* final match */</comment>
                    <expr_stmt><expr><call><name pos:line="182" pos:column="21">apr_bucket_split<pos:position pos:line="182" pos:column="37"/></name><argument_list pos:line="182" pos:column="37">(<argument><expr><name pos:line="182" pos:column="38">b<pos:position pos:line="182" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="41">index<pos:position pos:line="182" pos:column="46"/></name></expr></argument>)<pos:position pos:line="182" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="48"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="183" pos:column="21">ctx<pos:position pos:line="183" pos:column="24"/></name><operator pos:line="183" pos:column="24">-&gt;<pos:position pos:line="183" pos:column="29"/></operator><name pos:line="183" pos:column="26">ctx<pos:position pos:line="183" pos:column="29"/></name><operator pos:line="183" pos:column="29">-&gt;<pos:position pos:line="183" pos:column="34"/></operator><name pos:line="183" pos:column="31">output_now<pos:position pos:line="183" pos:column="41"/></name></name> <operator pos:line="183" pos:column="42">=<pos:position pos:line="183" pos:column="43"/></operator> <literal type="number" pos:line="183" pos:column="44">1<pos:position pos:line="183" pos:column="45"/></literal></expr>;<pos:position pos:line="183" pos:column="46"/></expr_stmt> <comment type="block" pos:line="183" pos:column="47">/* pass pre-tag stuff */</comment>
                }<pos:position pos:line="184" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="185" pos:column="17">newb<pos:position pos:line="185" pos:column="21"/></name> <operator pos:line="185" pos:column="22">=<pos:position pos:line="185" pos:column="23"/></operator> <call><name pos:line="185" pos:column="24">APR_BUCKET_NEXT<pos:position pos:line="185" pos:column="39"/></name><argument_list pos:line="185" pos:column="39">(<argument><expr><name pos:line="185" pos:column="40">b<pos:position pos:line="185" pos:column="41"/></name></expr></argument>)<pos:position pos:line="185" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="186" pos:column="17">apr_bucket_delete<pos:position pos:line="186" pos:column="34"/></name><argument_list pos:line="186" pos:column="34">(<argument><expr><name pos:line="186" pos:column="35">b<pos:position pos:line="186" pos:column="36"/></name></expr></argument>)<pos:position pos:line="186" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="187" pos:column="17">b<pos:position pos:line="187" pos:column="18"/></name> <operator pos:line="187" pos:column="19">=<pos:position pos:line="187" pos:column="20"/></operator> <name pos:line="187" pos:column="21">newb<pos:position pos:line="187" pos:column="25"/></name></expr>;<pos:position pos:line="187" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="188" pos:column="14"/></block></then></if>

            <break pos:line="190" pos:column="13">break;<pos:position pos:line="190" pos:column="19"/></break>

        <comment type="block" pos:line="192" pos:column="9">/* we're currently grabbing the directive name */</comment>
        <case pos:line="193" pos:column="9">case <expr><name pos:line="193" pos:column="14">PARSE_DIRECTIVE<pos:position pos:line="193" pos:column="29"/></name></expr>:<pos:position pos:line="193" pos:column="30"/></case>
        <case pos:line="194" pos:column="9">case <expr><name pos:line="194" pos:column="14">PARSE_DIRECTIVE_POSTNAME<pos:position pos:line="194" pos:column="38"/></name></expr>:<pos:position pos:line="194" pos:column="39"/></case>
        <case pos:line="195" pos:column="9">case <expr><name pos:line="195" pos:column="14">PARSE_DIRECTIVE_TAIL<pos:position pos:line="195" pos:column="34"/></name></expr>:<pos:position pos:line="195" pos:column="35"/></case>
        <case pos:line="196" pos:column="9">case <expr><name pos:line="196" pos:column="14">PARSE_DIRECTIVE_POSTTAIL<pos:position pos:line="196" pos:column="38"/></name></expr>:<pos:position pos:line="196" pos:column="39"/></case>
            <expr_stmt><expr><name pos:line="197" pos:column="13">index<pos:position pos:line="197" pos:column="18"/></name> <operator pos:line="197" pos:column="19">=<pos:position pos:line="197" pos:column="20"/></operator> <call><name pos:line="197" pos:column="21">find_directive<pos:position pos:line="197" pos:column="35"/></name><argument_list pos:line="197" pos:column="35">(<argument><expr><name pos:line="197" pos:column="36">ctx<pos:position pos:line="197" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="41">data<pos:position pos:line="197" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="47">len<pos:position pos:line="197" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="197" pos:column="52">&amp;<pos:position pos:line="197" pos:column="57"/></operator><name pos:line="197" pos:column="53">store<pos:position pos:line="197" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="197" pos:column="60">&amp;<pos:position pos:line="197" pos:column="65"/></operator><name pos:line="197" pos:column="61">store_len<pos:position pos:line="197" pos:column="70"/></name></expr></argument>)<pos:position pos:line="197" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="72"/></expr_stmt>

            <if pos:line="199" pos:column="13">if <condition pos:line="199" pos:column="16">(<expr><name pos:line="199" pos:column="17">index<pos:position pos:line="199" pos:column="22"/></name></expr>)<pos:position pos:line="199" pos:column="23"/></condition><then pos:line="199" pos:column="23"> <block pos:line="199" pos:column="24">{
                <expr_stmt><expr><call><name pos:line="200" pos:column="17">apr_bucket_split<pos:position pos:line="200" pos:column="33"/></name><argument_list pos:line="200" pos:column="33">(<argument><expr><name pos:line="200" pos:column="34">b<pos:position pos:line="200" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="200" pos:column="37">index<pos:position pos:line="200" pos:column="42"/></name></expr></argument>)<pos:position pos:line="200" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><name pos:line="201" pos:column="17">newb<pos:position pos:line="201" pos:column="21"/></name> <operator pos:line="201" pos:column="22">=<pos:position pos:line="201" pos:column="23"/></operator> <call><name pos:line="201" pos:column="24">APR_BUCKET_NEXT<pos:position pos:line="201" pos:column="39"/></name><argument_list pos:line="201" pos:column="39">(<argument><expr><name pos:line="201" pos:column="40">b<pos:position pos:line="201" pos:column="41"/></name></expr></argument>)<pos:position pos:line="201" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="202" pos:column="14"/></block></then></if>

            <if pos:line="204" pos:column="13">if <condition pos:line="204" pos:column="16">(<expr><name pos:line="204" pos:column="17">store<pos:position pos:line="204" pos:column="22"/></name></expr>)<pos:position pos:line="204" pos:column="23"/></condition><then pos:line="204" pos:column="23"> <block pos:line="204" pos:column="24">{
                <if pos:line="205" pos:column="17">if <condition pos:line="205" pos:column="20">(<expr><name pos:line="205" pos:column="21">index<pos:position pos:line="205" pos:column="26"/></name></expr>)<pos:position pos:line="205" pos:column="27"/></condition><then pos:line="205" pos:column="27"> <block pos:line="205" pos:column="28">{
                    <expr_stmt><expr><call><name pos:line="206" pos:column="21">APR_BUCKET_REMOVE<pos:position pos:line="206" pos:column="38"/></name><argument_list pos:line="206" pos:column="38">(<argument><expr><name pos:line="206" pos:column="39">b<pos:position pos:line="206" pos:column="40"/></name></expr></argument>)<pos:position pos:line="206" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="42"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="207" pos:column="21">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="207" pos:column="44"/></name><argument_list pos:line="207" pos:column="44">(<argument><expr><name><name pos:line="207" pos:column="45">ctx<pos:position pos:line="207" pos:column="48"/></name><operator pos:line="207" pos:column="48">-&gt;<pos:position pos:line="207" pos:column="53"/></operator><name pos:line="207" pos:column="50">tmp_bb<pos:position pos:line="207" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="58">b<pos:position pos:line="207" pos:column="59"/></name></expr></argument>)<pos:position pos:line="207" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="61"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="208" pos:column="21">b<pos:position pos:line="208" pos:column="22"/></name> <operator pos:line="208" pos:column="23">=<pos:position pos:line="208" pos:column="24"/></operator> <name pos:line="208" pos:column="25">newb<pos:position pos:line="208" pos:column="29"/></name></expr>;<pos:position pos:line="208" pos:column="30"/></expr_stmt>
                }<pos:position pos:line="209" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="211" pos:column="17">/* time for cleanup? */</comment>
                <if pos:line="212" pos:column="17">if <condition pos:line="212" pos:column="20">(<expr><name pos:line="212" pos:column="21">store<pos:position pos:line="212" pos:column="26"/></name> <operator pos:line="212" pos:column="27">!=<pos:position pos:line="212" pos:column="29"/></operator> <operator pos:line="212" pos:column="30">&amp;<pos:position pos:line="212" pos:column="35"/></operator><name pos:line="212" pos:column="31">magic<pos:position pos:line="212" pos:column="36"/></name></expr>)<pos:position pos:line="212" pos:column="37"/></condition><then pos:line="212" pos:column="37"> <block pos:line="212" pos:column="38">{
                    <expr_stmt><expr><call><name pos:line="213" pos:column="21">apr_brigade_pflatten<pos:position pos:line="213" pos:column="41"/></name><argument_list pos:line="213" pos:column="41">(<argument><expr><name><name pos:line="213" pos:column="42">ctx<pos:position pos:line="213" pos:column="45"/></name><operator pos:line="213" pos:column="45">-&gt;<pos:position pos:line="213" pos:column="50"/></operator><name pos:line="213" pos:column="47">tmp_bb<pos:position pos:line="213" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="55">store<pos:position pos:line="213" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="62">store_len<pos:position pos:line="213" pos:column="71"/></name></expr></argument>,
                                         <argument><expr><name><name pos:line="214" pos:column="42">ctx<pos:position pos:line="214" pos:column="45"/></name><operator pos:line="214" pos:column="45">-&gt;<pos:position pos:line="214" pos:column="50"/></operator><name pos:line="214" pos:column="47">dpool<pos:position pos:line="214" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="214" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="54"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="215" pos:column="21">apr_brigade_cleanup<pos:position pos:line="215" pos:column="40"/></name><argument_list pos:line="215" pos:column="40">(<argument><expr><name><name pos:line="215" pos:column="41">ctx<pos:position pos:line="215" pos:column="44"/></name><operator pos:line="215" pos:column="44">-&gt;<pos:position pos:line="215" pos:column="49"/></operator><name pos:line="215" pos:column="46">tmp_bb<pos:position pos:line="215" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="215" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="54"/></expr_stmt>
                }<pos:position pos:line="216" pos:column="18"/></block></then></if>
            }<pos:position pos:line="217" pos:column="14"/></block></then>
            <elseif pos:line="218" pos:column="13">else <if pos:line="218" pos:column="18">if <condition pos:line="218" pos:column="21">(<expr><name pos:line="218" pos:column="22">index<pos:position pos:line="218" pos:column="27"/></name></expr>)<pos:position pos:line="218" pos:column="28"/></condition><then pos:line="218" pos:column="28"> <block pos:line="218" pos:column="29">{
                <expr_stmt><expr><call><name pos:line="219" pos:column="17">apr_bucket_delete<pos:position pos:line="219" pos:column="34"/></name><argument_list pos:line="219" pos:column="34">(<argument><expr><name pos:line="219" pos:column="35">b<pos:position pos:line="219" pos:column="36"/></name></expr></argument>)<pos:position pos:line="219" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="220" pos:column="17">b<pos:position pos:line="220" pos:column="18"/></name> <operator pos:line="220" pos:column="19">=<pos:position pos:line="220" pos:column="20"/></operator> <name pos:line="220" pos:column="21">newb<pos:position pos:line="220" pos:column="25"/></name></expr>;<pos:position pos:line="220" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="221" pos:column="14"/></block></then></if></elseif></if>

            <break pos:line="223" pos:column="13">break;<pos:position pos:line="223" pos:column="19"/></break>

        <comment type="block" pos:line="225" pos:column="9">/* skip WS and find out what comes next (arg or end_seq) */</comment>
        <case pos:line="226" pos:column="9">case <expr><name pos:line="226" pos:column="14">PARSE_PRE_ARG<pos:position pos:line="226" pos:column="27"/></name></expr>:<pos:position pos:line="226" pos:column="28"/></case>
            <expr_stmt><expr><name pos:line="227" pos:column="13">index<pos:position pos:line="227" pos:column="18"/></name> <operator pos:line="227" pos:column="19">=<pos:position pos:line="227" pos:column="20"/></operator> <call><name pos:line="227" pos:column="21">find_arg_or_tail<pos:position pos:line="227" pos:column="37"/></name><argument_list pos:line="227" pos:column="37">(<argument><expr><name pos:line="227" pos:column="38">ctx<pos:position pos:line="227" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="227" pos:column="43">data<pos:position pos:line="227" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="227" pos:column="49">len<pos:position pos:line="227" pos:column="52"/></name></expr></argument>)<pos:position pos:line="227" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="54"/></expr_stmt>

            <if pos:line="229" pos:column="13">if <condition pos:line="229" pos:column="16">(<expr><name pos:line="229" pos:column="17">index<pos:position pos:line="229" pos:column="22"/></name></expr>)<pos:position pos:line="229" pos:column="23"/></condition><then pos:line="229" pos:column="23"> <block pos:line="229" pos:column="24">{ <comment type="block" pos:line="229" pos:column="26">/* skipped whitespaces */</comment>
                <if pos:line="230" pos:column="17">if <condition pos:line="230" pos:column="20">(<expr><name pos:line="230" pos:column="21">index<pos:position pos:line="230" pos:column="26"/></name> <operator pos:line="230" pos:column="27">&lt;<pos:position pos:line="230" pos:column="31"/></operator> <name pos:line="230" pos:column="29">len<pos:position pos:line="230" pos:column="32"/></name></expr>)<pos:position pos:line="230" pos:column="33"/></condition><then pos:line="230" pos:column="33"> <block pos:line="230" pos:column="34">{
                    <expr_stmt><expr><call><name pos:line="231" pos:column="21">apr_bucket_split<pos:position pos:line="231" pos:column="37"/></name><argument_list pos:line="231" pos:column="37">(<argument><expr><name pos:line="231" pos:column="38">b<pos:position pos:line="231" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="231" pos:column="41">index<pos:position pos:line="231" pos:column="46"/></name></expr></argument>)<pos:position pos:line="231" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="48"/></expr_stmt>
                }<pos:position pos:line="232" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="233" pos:column="17">newb<pos:position pos:line="233" pos:column="21"/></name> <operator pos:line="233" pos:column="22">=<pos:position pos:line="233" pos:column="23"/></operator> <call><name pos:line="233" pos:column="24">APR_BUCKET_NEXT<pos:position pos:line="233" pos:column="39"/></name><argument_list pos:line="233" pos:column="39">(<argument><expr><name pos:line="233" pos:column="40">b<pos:position pos:line="233" pos:column="41"/></name></expr></argument>)<pos:position pos:line="233" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="234" pos:column="17">apr_bucket_delete<pos:position pos:line="234" pos:column="34"/></name><argument_list pos:line="234" pos:column="34">(<argument><expr><name pos:line="234" pos:column="35">b<pos:position pos:line="234" pos:column="36"/></name></expr></argument>)<pos:position pos:line="234" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="235" pos:column="17">b<pos:position pos:line="235" pos:column="18"/></name> <operator pos:line="235" pos:column="19">=<pos:position pos:line="235" pos:column="20"/></operator> <name pos:line="235" pos:column="21">newb<pos:position pos:line="235" pos:column="25"/></name></expr>;<pos:position pos:line="235" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="236" pos:column="14"/></block></then></if>

            <break pos:line="238" pos:column="13">break;<pos:position pos:line="238" pos:column="19"/></break>

        <comment type="block" pos:line="240" pos:column="9">/* currently parsing name[=val] */</comment>
        <case pos:line="241" pos:column="9">case <expr><name pos:line="241" pos:column="14">PARSE_ARG<pos:position pos:line="241" pos:column="23"/></name></expr>:<pos:position pos:line="241" pos:column="24"/></case>
        <case pos:line="242" pos:column="9">case <expr><name pos:line="242" pos:column="14">PARSE_ARG_NAME<pos:position pos:line="242" pos:column="28"/></name></expr>:<pos:position pos:line="242" pos:column="29"/></case>
        <case pos:line="243" pos:column="9">case <expr><name pos:line="243" pos:column="14">PARSE_ARG_POSTNAME<pos:position pos:line="243" pos:column="32"/></name></expr>:<pos:position pos:line="243" pos:column="33"/></case>
        <case pos:line="244" pos:column="9">case <expr><name pos:line="244" pos:column="14">PARSE_ARG_EQ<pos:position pos:line="244" pos:column="26"/></name></expr>:<pos:position pos:line="244" pos:column="27"/></case>
        <case pos:line="245" pos:column="9">case <expr><name pos:line="245" pos:column="14">PARSE_ARG_PREVAL<pos:position pos:line="245" pos:column="30"/></name></expr>:<pos:position pos:line="245" pos:column="31"/></case>
        <case pos:line="246" pos:column="9">case <expr><name pos:line="246" pos:column="14">PARSE_ARG_VAL<pos:position pos:line="246" pos:column="27"/></name></expr>:<pos:position pos:line="246" pos:column="28"/></case>
        <case pos:line="247" pos:column="9">case <expr><name pos:line="247" pos:column="14">PARSE_ARG_VAL_ESC<pos:position pos:line="247" pos:column="31"/></name></expr>:<pos:position pos:line="247" pos:column="32"/></case>
        <case pos:line="248" pos:column="9">case <expr><name pos:line="248" pos:column="14">PARSE_ARG_POSTVAL<pos:position pos:line="248" pos:column="31"/></name></expr>:<pos:position pos:line="248" pos:column="32"/></case>
            <expr_stmt><expr><name pos:line="249" pos:column="13">index<pos:position pos:line="249" pos:column="18"/></name> <operator pos:line="249" pos:column="19">=<pos:position pos:line="249" pos:column="20"/></operator> <call><name pos:line="249" pos:column="21">find_argument<pos:position pos:line="249" pos:column="34"/></name><argument_list pos:line="249" pos:column="34">(<argument><expr><name pos:line="249" pos:column="35">ctx<pos:position pos:line="249" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="40">data<pos:position pos:line="249" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="46">len<pos:position pos:line="249" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="249" pos:column="51">&amp;<pos:position pos:line="249" pos:column="56"/></operator><name pos:line="249" pos:column="52">store<pos:position pos:line="249" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="249" pos:column="59">&amp;<pos:position pos:line="249" pos:column="64"/></operator><name pos:line="249" pos:column="60">store_len<pos:position pos:line="249" pos:column="69"/></name></expr></argument>)<pos:position pos:line="249" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="71"/></expr_stmt>

            <if pos:line="251" pos:column="13">if <condition pos:line="251" pos:column="16">(<expr><name pos:line="251" pos:column="17">index<pos:position pos:line="251" pos:column="22"/></name></expr>)<pos:position pos:line="251" pos:column="23"/></condition><then pos:line="251" pos:column="23"> <block pos:line="251" pos:column="24">{
                <expr_stmt><expr><call><name pos:line="252" pos:column="17">apr_bucket_split<pos:position pos:line="252" pos:column="33"/></name><argument_list pos:line="252" pos:column="33">(<argument><expr><name pos:line="252" pos:column="34">b<pos:position pos:line="252" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="252" pos:column="37">index<pos:position pos:line="252" pos:column="42"/></name></expr></argument>)<pos:position pos:line="252" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><name pos:line="253" pos:column="17">newb<pos:position pos:line="253" pos:column="21"/></name> <operator pos:line="253" pos:column="22">=<pos:position pos:line="253" pos:column="23"/></operator> <call><name pos:line="253" pos:column="24">APR_BUCKET_NEXT<pos:position pos:line="253" pos:column="39"/></name><argument_list pos:line="253" pos:column="39">(<argument><expr><name pos:line="253" pos:column="40">b<pos:position pos:line="253" pos:column="41"/></name></expr></argument>)<pos:position pos:line="253" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="254" pos:column="14"/></block></then></if>

            <if pos:line="256" pos:column="13">if <condition pos:line="256" pos:column="16">(<expr><name pos:line="256" pos:column="17">store<pos:position pos:line="256" pos:column="22"/></name></expr>)<pos:position pos:line="256" pos:column="23"/></condition><then pos:line="256" pos:column="23"> <block pos:line="256" pos:column="24">{
                <if pos:line="257" pos:column="17">if <condition pos:line="257" pos:column="20">(<expr><name pos:line="257" pos:column="21">index<pos:position pos:line="257" pos:column="26"/></name></expr>)<pos:position pos:line="257" pos:column="27"/></condition><then pos:line="257" pos:column="27"> <block pos:line="257" pos:column="28">{
                    <expr_stmt><expr><call><name pos:line="258" pos:column="21">APR_BUCKET_REMOVE<pos:position pos:line="258" pos:column="38"/></name><argument_list pos:line="258" pos:column="38">(<argument><expr><name pos:line="258" pos:column="39">b<pos:position pos:line="258" pos:column="40"/></name></expr></argument>)<pos:position pos:line="258" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="42"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="259" pos:column="21">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="259" pos:column="44"/></name><argument_list pos:line="259" pos:column="44">(<argument><expr><name><name pos:line="259" pos:column="45">ctx<pos:position pos:line="259" pos:column="48"/></name><operator pos:line="259" pos:column="48">-&gt;<pos:position pos:line="259" pos:column="53"/></operator><name pos:line="259" pos:column="50">tmp_bb<pos:position pos:line="259" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="259" pos:column="58">b<pos:position pos:line="259" pos:column="59"/></name></expr></argument>)<pos:position pos:line="259" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="61"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="260" pos:column="21">b<pos:position pos:line="260" pos:column="22"/></name> <operator pos:line="260" pos:column="23">=<pos:position pos:line="260" pos:column="24"/></operator> <name pos:line="260" pos:column="25">newb<pos:position pos:line="260" pos:column="29"/></name></expr>;<pos:position pos:line="260" pos:column="30"/></expr_stmt>
                }<pos:position pos:line="261" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="263" pos:column="17">/* time for cleanup? */</comment>
                <if pos:line="264" pos:column="17">if <condition pos:line="264" pos:column="20">(<expr><name pos:line="264" pos:column="21">store<pos:position pos:line="264" pos:column="26"/></name> <operator pos:line="264" pos:column="27">!=<pos:position pos:line="264" pos:column="29"/></operator> <operator pos:line="264" pos:column="30">&amp;<pos:position pos:line="264" pos:column="35"/></operator><name pos:line="264" pos:column="31">magic<pos:position pos:line="264" pos:column="36"/></name></expr>)<pos:position pos:line="264" pos:column="37"/></condition><then pos:line="264" pos:column="37"> <block pos:line="264" pos:column="38">{
                    <expr_stmt><expr><call><name pos:line="265" pos:column="21">apr_brigade_pflatten<pos:position pos:line="265" pos:column="41"/></name><argument_list pos:line="265" pos:column="41">(<argument><expr><name><name pos:line="265" pos:column="42">ctx<pos:position pos:line="265" pos:column="45"/></name><operator pos:line="265" pos:column="45">-&gt;<pos:position pos:line="265" pos:column="50"/></operator><name pos:line="265" pos:column="47">tmp_bb<pos:position pos:line="265" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="55">store<pos:position pos:line="265" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="62">store_len<pos:position pos:line="265" pos:column="71"/></name></expr></argument>,
                                         <argument><expr><name><name pos:line="266" pos:column="42">ctx<pos:position pos:line="266" pos:column="45"/></name><operator pos:line="266" pos:column="45">-&gt;<pos:position pos:line="266" pos:column="50"/></operator><name pos:line="266" pos:column="47">dpool<pos:position pos:line="266" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="266" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="54"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="267" pos:column="21">apr_brigade_cleanup<pos:position pos:line="267" pos:column="40"/></name><argument_list pos:line="267" pos:column="40">(<argument><expr><name><name pos:line="267" pos:column="41">ctx<pos:position pos:line="267" pos:column="44"/></name><operator pos:line="267" pos:column="44">-&gt;<pos:position pos:line="267" pos:column="49"/></operator><name pos:line="267" pos:column="46">tmp_bb<pos:position pos:line="267" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="267" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="54"/></expr_stmt>
                }<pos:position pos:line="268" pos:column="18"/></block></then></if>
            }<pos:position pos:line="269" pos:column="14"/></block></then>
            <elseif pos:line="270" pos:column="13">else <if pos:line="270" pos:column="18">if <condition pos:line="270" pos:column="21">(<expr><name pos:line="270" pos:column="22">index<pos:position pos:line="270" pos:column="27"/></name></expr>)<pos:position pos:line="270" pos:column="28"/></condition><then pos:line="270" pos:column="28"> <block pos:line="270" pos:column="29">{
                <expr_stmt><expr><call><name pos:line="271" pos:column="17">apr_bucket_delete<pos:position pos:line="271" pos:column="34"/></name><argument_list pos:line="271" pos:column="34">(<argument><expr><name pos:line="271" pos:column="35">b<pos:position pos:line="271" pos:column="36"/></name></expr></argument>)<pos:position pos:line="271" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="272" pos:column="17">b<pos:position pos:line="272" pos:column="18"/></name> <operator pos:line="272" pos:column="19">=<pos:position pos:line="272" pos:column="20"/></operator> <name pos:line="272" pos:column="21">newb<pos:position pos:line="272" pos:column="25"/></name></expr>;<pos:position pos:line="272" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="273" pos:column="14"/></block></then></if></elseif></if>

            <break pos:line="275" pos:column="13">break;<pos:position pos:line="275" pos:column="19"/></break>

        <comment type="block" pos:line="277" pos:column="9">/* try to match end_seq at current pos. */</comment>
        <case pos:line="278" pos:column="9">case <expr><name pos:line="278" pos:column="14">PARSE_TAIL<pos:position pos:line="278" pos:column="24"/></name></expr>:<pos:position pos:line="278" pos:column="25"/></case>
        <case pos:line="279" pos:column="9">case <expr><name pos:line="279" pos:column="14">PARSE_TAIL_SEQ<pos:position pos:line="279" pos:column="28"/></name></expr>:<pos:position pos:line="279" pos:column="29"/></case>
            <expr_stmt><expr><name pos:line="280" pos:column="13">index<pos:position pos:line="280" pos:column="18"/></name> <operator pos:line="280" pos:column="19">=<pos:position pos:line="280" pos:column="20"/></operator> <call><name pos:line="280" pos:column="21">find_tail<pos:position pos:line="280" pos:column="30"/></name><argument_list pos:line="280" pos:column="30">(<argument><expr><name pos:line="280" pos:column="31">ctx<pos:position pos:line="280" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="280" pos:column="36">data<pos:position pos:line="280" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="280" pos:column="42">len<pos:position pos:line="280" pos:column="45"/></name></expr></argument>)<pos:position pos:line="280" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="280" pos:column="47"/></expr_stmt>

            <switch pos:line="282" pos:column="13">switch <condition pos:line="282" pos:column="20">(<expr><name><name pos:line="282" pos:column="21">ctx<pos:position pos:line="282" pos:column="24"/></name><operator pos:line="282" pos:column="24">-&gt;<pos:position pos:line="282" pos:column="29"/></operator><name pos:line="282" pos:column="26">state<pos:position pos:line="282" pos:column="31"/></name></name></expr>)<pos:position pos:line="282" pos:column="32"/></condition> <block pos:line="282" pos:column="33">{
            <case pos:line="283" pos:column="13">case <expr><name pos:line="283" pos:column="18">PARSE_EXECUTE<pos:position pos:line="283" pos:column="31"/></name></expr>:<pos:position pos:line="283" pos:column="32"/></case>  <comment type="block" pos:line="283" pos:column="34">/* full match */</comment>
                <expr_stmt><expr><call><name pos:line="284" pos:column="17">apr_bucket_split<pos:position pos:line="284" pos:column="33"/></name><argument_list pos:line="284" pos:column="33">(<argument><expr><name pos:line="284" pos:column="34">b<pos:position pos:line="284" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="284" pos:column="37">index<pos:position pos:line="284" pos:column="42"/></name></expr></argument>)<pos:position pos:line="284" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><name pos:line="285" pos:column="17">newb<pos:position pos:line="285" pos:column="21"/></name> <operator pos:line="285" pos:column="22">=<pos:position pos:line="285" pos:column="23"/></operator> <call><name pos:line="285" pos:column="24">APR_BUCKET_NEXT<pos:position pos:line="285" pos:column="39"/></name><argument_list pos:line="285" pos:column="39">(<argument><expr><name pos:line="285" pos:column="40">b<pos:position pos:line="285" pos:column="41"/></name></expr></argument>)<pos:position pos:line="285" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="286" pos:column="17">apr_bucket_delete<pos:position pos:line="286" pos:column="34"/></name><argument_list pos:line="286" pos:column="34">(<argument><expr><name pos:line="286" pos:column="35">b<pos:position pos:line="286" pos:column="36"/></name></expr></argument>)<pos:position pos:line="286" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="287" pos:column="17">b<pos:position pos:line="287" pos:column="18"/></name> <operator pos:line="287" pos:column="19">=<pos:position pos:line="287" pos:column="20"/></operator> <name pos:line="287" pos:column="21">newb<pos:position pos:line="287" pos:column="25"/></name></expr>;<pos:position pos:line="287" pos:column="26"/></expr_stmt>
                <break pos:line="288" pos:column="17">break;<pos:position pos:line="288" pos:column="23"/></break>

            <case pos:line="290" pos:column="13">case <expr><name pos:line="290" pos:column="18">PARSE_ARG<pos:position pos:line="290" pos:column="27"/></name></expr>:<pos:position pos:line="290" pos:column="28"/></case>      <comment type="block" pos:line="290" pos:column="34">/* no match */</comment>
                <comment type="block" pos:line="291" pos:column="17">/* PARSE_ARG must reparse at the beginning */</comment>
                <expr_stmt><expr><call><name pos:line="292" pos:column="17">APR_BRIGADE_PREPEND<pos:position pos:line="292" pos:column="36"/></name><argument_list pos:line="292" pos:column="36">(<argument><expr><name pos:line="292" pos:column="37">bb<pos:position pos:line="292" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="41">ctx<pos:position pos:line="292" pos:column="44"/></name><operator pos:line="292" pos:column="44">-&gt;<pos:position pos:line="292" pos:column="49"/></operator><name pos:line="292" pos:column="46">tmp_bb<pos:position pos:line="292" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="292" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><name pos:line="293" pos:column="17">b<pos:position pos:line="293" pos:column="18"/></name> <operator pos:line="293" pos:column="19">=<pos:position pos:line="293" pos:column="20"/></operator> <call><name pos:line="293" pos:column="21">APR_BRIGADE_FIRST<pos:position pos:line="293" pos:column="38"/></name><argument_list pos:line="293" pos:column="38">(<argument><expr><name pos:line="293" pos:column="39">bb<pos:position pos:line="293" pos:column="41"/></name></expr></argument>)<pos:position pos:line="293" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="43"/></expr_stmt>
                <break pos:line="294" pos:column="17">break;<pos:position pos:line="294" pos:column="23"/></break>

            <default pos:line="296" pos:column="13">default:<pos:position pos:line="296" pos:column="21"/></default>             <comment type="block" pos:line="296" pos:column="34">/* partial match */</comment>
                <expr_stmt><expr><name pos:line="297" pos:column="17">newb<pos:position pos:line="297" pos:column="21"/></name> <operator pos:line="297" pos:column="22">=<pos:position pos:line="297" pos:column="23"/></operator> <call><name pos:line="297" pos:column="24">APR_BUCKET_NEXT<pos:position pos:line="297" pos:column="39"/></name><argument_list pos:line="297" pos:column="39">(<argument><expr><name pos:line="297" pos:column="40">b<pos:position pos:line="297" pos:column="41"/></name></expr></argument>)<pos:position pos:line="297" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="298" pos:column="17">APR_BUCKET_REMOVE<pos:position pos:line="298" pos:column="34"/></name><argument_list pos:line="298" pos:column="34">(<argument><expr><name pos:line="298" pos:column="35">b<pos:position pos:line="298" pos:column="36"/></name></expr></argument>)<pos:position pos:line="298" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="299" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="299" pos:column="40"/></name><argument_list pos:line="299" pos:column="40">(<argument><expr><name><name pos:line="299" pos:column="41">ctx<pos:position pos:line="299" pos:column="44"/></name><operator pos:line="299" pos:column="44">-&gt;<pos:position pos:line="299" pos:column="49"/></operator><name pos:line="299" pos:column="46">tmp_bb<pos:position pos:line="299" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="299" pos:column="54">b<pos:position pos:line="299" pos:column="55"/></name></expr></argument>)<pos:position pos:line="299" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="57"/></expr_stmt>
                <expr_stmt><expr><name pos:line="300" pos:column="17">b<pos:position pos:line="300" pos:column="18"/></name> <operator pos:line="300" pos:column="19">=<pos:position pos:line="300" pos:column="20"/></operator> <name pos:line="300" pos:column="21">newb<pos:position pos:line="300" pos:column="25"/></name></expr>;<pos:position pos:line="300" pos:column="26"/></expr_stmt>
                <break pos:line="301" pos:column="17">break;<pos:position pos:line="301" pos:column="23"/></break>
            }<pos:position pos:line="302" pos:column="14"/></block></switch>

            <break pos:line="304" pos:column="13">break;<pos:position pos:line="304" pos:column="19"/></break>

        <comment type="block" pos:line="306" pos:column="9">/* now execute the parsed directive, cleanup the space and
         * start again with PARSE_PRE_HEAD
         */</comment>
        <case pos:line="309" pos:column="9">case <expr><name pos:line="309" pos:column="14">PARSE_EXECUTE<pos:position pos:line="309" pos:column="27"/></name></expr>:<pos:position pos:line="309" pos:column="28"/></case>
            <comment type="block" pos:line="310" pos:column="13">/* if there was an error, it was already logged; just stop here */</comment>
            <if pos:line="311" pos:column="13">if <condition pos:line="311" pos:column="16">(<expr><name><name pos:line="311" pos:column="17">ctx<pos:position pos:line="311" pos:column="20"/></name><operator pos:line="311" pos:column="20">-&gt;<pos:position pos:line="311" pos:column="25"/></operator><name pos:line="311" pos:column="22">error<pos:position pos:line="311" pos:column="27"/></name></name></expr>)<pos:position pos:line="311" pos:column="28"/></condition><then pos:line="311" pos:column="28"> <block pos:line="311" pos:column="29">{
                <if pos:line="312" pos:column="17">if <condition pos:line="312" pos:column="20">(<expr><name><name pos:line="312" pos:column="21">ctx<pos:position pos:line="312" pos:column="24"/></name><operator pos:line="312" pos:column="24">-&gt;<pos:position pos:line="312" pos:column="29"/></operator><name pos:line="312" pos:column="26">ctx<pos:position pos:line="312" pos:column="29"/></name><operator pos:line="312" pos:column="29">-&gt;<pos:position pos:line="312" pos:column="34"/></operator><name pos:line="312" pos:column="31">flags<pos:position pos:line="312" pos:column="36"/></name></name> <operator pos:line="312" pos:column="37">&amp;<pos:position pos:line="312" pos:column="42"/></operator> <name pos:line="312" pos:column="39">FLAG_PRINTING<pos:position pos:line="312" pos:column="52"/></name></expr>)<pos:position pos:line="312" pos:column="53"/></condition><then pos:line="312" pos:column="53"> <block pos:line="312" pos:column="54">{
                    <expr_stmt><expr><call><name pos:line="313" pos:column="21">SSI_CREATE_ERROR_BUCKET<pos:position pos:line="313" pos:column="44"/></name><argument_list pos:line="313" pos:column="44">(<argument><expr><name><name pos:line="313" pos:column="45">ctx<pos:position pos:line="313" pos:column="48"/></name><operator pos:line="313" pos:column="48">-&gt;<pos:position pos:line="313" pos:column="53"/></operator><name pos:line="313" pos:column="50">ctx<pos:position pos:line="313" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="313" pos:column="55">f<pos:position pos:line="313" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="313" pos:column="58">pass_bb<pos:position pos:line="313" pos:column="65"/></name></expr></argument>)<pos:position pos:line="313" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="313" pos:column="67"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="314" pos:column="21">ctx<pos:position pos:line="314" pos:column="24"/></name><operator pos:line="314" pos:column="24">-&gt;<pos:position pos:line="314" pos:column="29"/></operator><name pos:line="314" pos:column="26">error<pos:position pos:line="314" pos:column="31"/></name></name> <operator pos:line="314" pos:column="32">=<pos:position pos:line="314" pos:column="33"/></operator> <literal type="number" pos:line="314" pos:column="34">0<pos:position pos:line="314" pos:column="35"/></literal></expr>;<pos:position pos:line="314" pos:column="36"/></expr_stmt>
                }<pos:position pos:line="315" pos:column="18"/></block></then></if>
            }<pos:position pos:line="316" pos:column="14"/></block></then>
            <else pos:line="317" pos:column="13">else <block pos:line="317" pos:column="18">{
                <decl_stmt><decl><type><name pos:line="318" pos:column="17">include_handler_fn_t<pos:position pos:line="318" pos:column="37"/></name> <modifier pos:line="318" pos:column="38">*<pos:position pos:line="318" pos:column="39"/></modifier></type><name pos:line="318" pos:column="39">handle_func<pos:position pos:line="318" pos:column="50"/></name></decl>;<pos:position pos:line="318" pos:column="51"/></decl_stmt>

                <expr_stmt><expr><name pos:line="320" pos:column="17">handle_func<pos:position pos:line="320" pos:column="28"/></name> <operator pos:line="320" pos:column="29">=<pos:position pos:line="320" pos:column="30"/></operator>
                    <operator pos:line="321" pos:column="21">(<pos:position pos:line="321" pos:column="22"/></operator><name pos:line="321" pos:column="22">include_handler_fn_t<pos:position pos:line="321" pos:column="42"/></name> <operator pos:line="321" pos:column="43">*<pos:position pos:line="321" pos:column="44"/></operator><operator pos:line="321" pos:column="44">)<pos:position pos:line="321" pos:column="45"/></operator> <call><name pos:line="321" pos:column="46">apr_hash_get<pos:position pos:line="321" pos:column="58"/></name><argument_list pos:line="321" pos:column="58">(<argument><expr><name pos:line="321" pos:column="59">include_hash<pos:position pos:line="321" pos:column="71"/></name></expr></argument>,
                                                    <argument><expr><name><name pos:line="322" pos:column="53">ctx<pos:position pos:line="322" pos:column="56"/></name><operator pos:line="322" pos:column="56">-&gt;<pos:position pos:line="322" pos:column="61"/></operator><name pos:line="322" pos:column="58">directive<pos:position pos:line="322" pos:column="67"/></name></name></expr></argument>,
                                                    <argument><expr><name><name pos:line="323" pos:column="53">ctx<pos:position pos:line="323" pos:column="56"/></name><operator pos:line="323" pos:column="56">-&gt;<pos:position pos:line="323" pos:column="61"/></operator><name pos:line="323" pos:column="58">ctx<pos:position pos:line="323" pos:column="61"/></name><operator pos:line="323" pos:column="61">-&gt;<pos:position pos:line="323" pos:column="66"/></operator><name pos:line="323" pos:column="63">directive_length<pos:position pos:line="323" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="323" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="81"/></expr_stmt>
                <if pos:line="324" pos:column="17">if <condition pos:line="324" pos:column="20">(<expr><name pos:line="324" pos:column="21">handle_func<pos:position pos:line="324" pos:column="32"/></name></expr>)<pos:position pos:line="324" pos:column="33"/></condition><then pos:line="324" pos:column="33"> <block pos:line="324" pos:column="34">{
                    <decl_stmt><decl><type><name pos:line="325" pos:column="21">apr_bucket<pos:position pos:line="325" pos:column="31"/></name> <modifier pos:line="325" pos:column="32">*<pos:position pos:line="325" pos:column="33"/></modifier></type><name pos:line="325" pos:column="33">dummy<pos:position pos:line="325" pos:column="38"/></name></decl>;<pos:position pos:line="325" pos:column="39"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="326" pos:column="21">char<pos:position pos:line="326" pos:column="25"/></name> <modifier pos:line="326" pos:column="26">*<pos:position pos:line="326" pos:column="27"/></modifier></type><name pos:line="326" pos:column="27">tag<pos:position pos:line="326" pos:column="30"/></name></decl>;<pos:position pos:line="326" pos:column="31"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="327" pos:column="21">apr_size_t<pos:position pos:line="327" pos:column="31"/></name></type> <name pos:line="327" pos:column="32">tag_len<pos:position pos:line="327" pos:column="39"/></name> <init pos:line="327" pos:column="40">= <expr><literal type="number" pos:line="327" pos:column="42">0<pos:position pos:line="327" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="327" pos:column="44"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="328" pos:column="21">ssi_arg_item_t<pos:position pos:line="328" pos:column="35"/></name> <modifier pos:line="328" pos:column="36">*<pos:position pos:line="328" pos:column="37"/></modifier></type><name pos:line="328" pos:column="37">carg<pos:position pos:line="328" pos:column="41"/></name> <init pos:line="328" pos:column="42">= <expr><name><name pos:line="328" pos:column="44">ctx<pos:position pos:line="328" pos:column="47"/></name><operator pos:line="328" pos:column="47">-&gt;<pos:position pos:line="328" pos:column="52"/></operator><name pos:line="328" pos:column="49">argv<pos:position pos:line="328" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="328" pos:column="54"/></decl_stmt>

                    <comment type="block" pos:line="330" pos:column="21">/* legacy wrapper code */</comment>
                    <while pos:line="331" pos:column="21">while <condition pos:line="331" pos:column="27">(<expr><name pos:line="331" pos:column="28">carg<pos:position pos:line="331" pos:column="32"/></name></expr>)<pos:position pos:line="331" pos:column="33"/></condition> <block pos:line="331" pos:column="34">{
                        <comment type="block" pos:line="332" pos:column="25">/* +1 \0 byte (either after tag or value)
                         * +1 =  byte (before value)
                         */</comment>
                        <expr_stmt><expr><name pos:line="335" pos:column="25">tag_len<pos:position pos:line="335" pos:column="32"/></name> <operator pos:line="335" pos:column="33">+=<pos:position pos:line="335" pos:column="35"/></operator> <operator pos:line="335" pos:column="36">(<pos:position pos:line="335" pos:column="37"/></operator><ternary><condition><expr><name><name pos:line="335" pos:column="37">carg<pos:position pos:line="335" pos:column="41"/></name><operator pos:line="335" pos:column="41">-&gt;<pos:position pos:line="335" pos:column="46"/></operator><name pos:line="335" pos:column="43">name<pos:position pos:line="335" pos:column="47"/></name></name></expr>  ?<pos:position pos:line="335" pos:column="50"/></condition><then pos:line="335" pos:column="50"> <expr><name><name pos:line="335" pos:column="51">carg<pos:position pos:line="335" pos:column="55"/></name><operator pos:line="335" pos:column="55">-&gt;<pos:position pos:line="335" pos:column="60"/></operator><name pos:line="335" pos:column="57">name_len<pos:position pos:line="335" pos:column="65"/></name></name></expr>      <pos:position pos:line="335" pos:column="71"/></then><else pos:line="335" pos:column="71">: <expr><literal type="number" pos:line="335" pos:column="73">0<pos:position pos:line="335" pos:column="74"/></literal></expr></else></ternary><operator pos:line="335" pos:column="74">)<pos:position pos:line="335" pos:column="75"/></operator> <operator pos:line="335" pos:column="76">+<pos:position pos:line="335" pos:column="77"/></operator>
                                   <operator pos:line="336" pos:column="36">(<pos:position pos:line="336" pos:column="37"/></operator><ternary><condition><expr><name><name pos:line="336" pos:column="37">carg<pos:position pos:line="336" pos:column="41"/></name><operator pos:line="336" pos:column="41">-&gt;<pos:position pos:line="336" pos:column="46"/></operator><name pos:line="336" pos:column="43">value<pos:position pos:line="336" pos:column="48"/></name></name></expr> ?<pos:position pos:line="336" pos:column="50"/></condition><then pos:line="336" pos:column="50"> <expr><name><name pos:line="336" pos:column="51">carg<pos:position pos:line="336" pos:column="55"/></name><operator pos:line="336" pos:column="55">-&gt;<pos:position pos:line="336" pos:column="60"/></operator><name pos:line="336" pos:column="57">value_len<pos:position pos:line="336" pos:column="66"/></name></name> <operator pos:line="336" pos:column="67">+<pos:position pos:line="336" pos:column="68"/></operator> <literal type="number" pos:line="336" pos:column="69">1<pos:position pos:line="336" pos:column="70"/></literal></expr> <pos:position pos:line="336" pos:column="71"/></then><else pos:line="336" pos:column="71">: <expr><literal type="number" pos:line="336" pos:column="73">0<pos:position pos:line="336" pos:column="74"/></literal></expr></else></ternary><operator pos:line="336" pos:column="74">)<pos:position pos:line="336" pos:column="75"/></operator> <operator pos:line="336" pos:column="76">+<pos:position pos:line="336" pos:column="77"/></operator> <literal type="number" pos:line="336" pos:column="78">1<pos:position pos:line="336" pos:column="79"/></literal></expr>;<pos:position pos:line="336" pos:column="80"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="337" pos:column="25">carg<pos:position pos:line="337" pos:column="29"/></name> <operator pos:line="337" pos:column="30">=<pos:position pos:line="337" pos:column="31"/></operator> <name><name pos:line="337" pos:column="32">carg<pos:position pos:line="337" pos:column="36"/></name><operator pos:line="337" pos:column="36">-&gt;<pos:position pos:line="337" pos:column="41"/></operator><name pos:line="337" pos:column="38">next<pos:position pos:line="337" pos:column="42"/></name></name></expr>;<pos:position pos:line="337" pos:column="43"/></expr_stmt>
                    }<pos:position pos:line="338" pos:column="22"/></block></while>

                    <expr_stmt><expr><name pos:line="340" pos:column="21">tag<pos:position pos:line="340" pos:column="24"/></name> <operator pos:line="340" pos:column="25">=<pos:position pos:line="340" pos:column="26"/></operator> <name><name pos:line="340" pos:column="27">ctx<pos:position pos:line="340" pos:column="30"/></name><operator pos:line="340" pos:column="30">-&gt;<pos:position pos:line="340" pos:column="35"/></operator><name pos:line="340" pos:column="32">ctx<pos:position pos:line="340" pos:column="35"/></name><operator pos:line="340" pos:column="35">-&gt;<pos:position pos:line="340" pos:column="40"/></operator><name pos:line="340" pos:column="37">combined_tag<pos:position pos:line="340" pos:column="49"/></name></name> <operator pos:line="340" pos:column="50">=<pos:position pos:line="340" pos:column="51"/></operator> <name><name pos:line="340" pos:column="52">ctx<pos:position pos:line="340" pos:column="55"/></name><operator pos:line="340" pos:column="55">-&gt;<pos:position pos:line="340" pos:column="60"/></operator><name pos:line="340" pos:column="57">ctx<pos:position pos:line="340" pos:column="60"/></name><operator pos:line="340" pos:column="60">-&gt;<pos:position pos:line="340" pos:column="65"/></operator><name pos:line="340" pos:column="62">curr_tag_pos<pos:position pos:line="340" pos:column="74"/></name></name> <operator pos:line="340" pos:column="75">=<pos:position pos:line="340" pos:column="76"/></operator>
                        <call><name pos:line="341" pos:column="25">apr_palloc<pos:position pos:line="341" pos:column="35"/></name><argument_list pos:line="341" pos:column="35">(<argument><expr><name><name pos:line="341" pos:column="36">ctx<pos:position pos:line="341" pos:column="39"/></name><operator pos:line="341" pos:column="39">-&gt;<pos:position pos:line="341" pos:column="44"/></operator><name pos:line="341" pos:column="41">dpool<pos:position pos:line="341" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="48">tag_len<pos:position pos:line="341" pos:column="55"/></name></expr></argument>)<pos:position pos:line="341" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="341" pos:column="57"/></expr_stmt>

                    <expr_stmt><expr><name pos:line="343" pos:column="21">carg<pos:position pos:line="343" pos:column="25"/></name> <operator pos:line="343" pos:column="26">=<pos:position pos:line="343" pos:column="27"/></operator> <name><name pos:line="343" pos:column="28">ctx<pos:position pos:line="343" pos:column="31"/></name><operator pos:line="343" pos:column="31">-&gt;<pos:position pos:line="343" pos:column="36"/></operator><name pos:line="343" pos:column="33">argv<pos:position pos:line="343" pos:column="37"/></name></name></expr>;<pos:position pos:line="343" pos:column="38"/></expr_stmt>
                    <while pos:line="344" pos:column="21">while <condition pos:line="344" pos:column="27">(<expr><name pos:line="344" pos:column="28">carg<pos:position pos:line="344" pos:column="32"/></name></expr>)<pos:position pos:line="344" pos:column="33"/></condition> <block pos:line="344" pos:column="34">{
                        <if pos:line="345" pos:column="25">if <condition pos:line="345" pos:column="28">(<expr><name><name pos:line="345" pos:column="29">carg<pos:position pos:line="345" pos:column="33"/></name><operator pos:line="345" pos:column="33">-&gt;<pos:position pos:line="345" pos:column="38"/></operator><name pos:line="345" pos:column="35">name<pos:position pos:line="345" pos:column="39"/></name></name></expr>)<pos:position pos:line="345" pos:column="40"/></condition><then pos:line="345" pos:column="40"> <block pos:line="345" pos:column="41">{
                            <expr_stmt><expr><call><name pos:line="346" pos:column="29">memcpy<pos:position pos:line="346" pos:column="35"/></name><argument_list pos:line="346" pos:column="35">(<argument><expr><name pos:line="346" pos:column="36">tag<pos:position pos:line="346" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="346" pos:column="41">carg<pos:position pos:line="346" pos:column="45"/></name><operator pos:line="346" pos:column="45">-&gt;<pos:position pos:line="346" pos:column="50"/></operator><name pos:line="346" pos:column="47">name<pos:position pos:line="346" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="346" pos:column="53">carg<pos:position pos:line="346" pos:column="57"/></name><operator pos:line="346" pos:column="57">-&gt;<pos:position pos:line="346" pos:column="62"/></operator><name pos:line="346" pos:column="59">name_len<pos:position pos:line="346" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="346" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="69"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="347" pos:column="29">tag<pos:position pos:line="347" pos:column="32"/></name> <operator pos:line="347" pos:column="33">+=<pos:position pos:line="347" pos:column="35"/></operator> <name><name pos:line="347" pos:column="36">carg<pos:position pos:line="347" pos:column="40"/></name><operator pos:line="347" pos:column="40">-&gt;<pos:position pos:line="347" pos:column="45"/></operator><name pos:line="347" pos:column="42">name_len<pos:position pos:line="347" pos:column="50"/></name></name></expr>;<pos:position pos:line="347" pos:column="51"/></expr_stmt>
                        }<pos:position pos:line="348" pos:column="26"/></block></then></if>
                        <if pos:line="349" pos:column="25">if <condition pos:line="349" pos:column="28">(<expr><name><name pos:line="349" pos:column="29">carg<pos:position pos:line="349" pos:column="33"/></name><operator pos:line="349" pos:column="33">-&gt;<pos:position pos:line="349" pos:column="38"/></operator><name pos:line="349" pos:column="35">value<pos:position pos:line="349" pos:column="40"/></name></name></expr>)<pos:position pos:line="349" pos:column="41"/></condition><then pos:line="349" pos:column="41"> <block pos:line="349" pos:column="42">{
                            <expr_stmt><expr><operator pos:line="350" pos:column="29">*<pos:position pos:line="350" pos:column="30"/></operator><name pos:line="350" pos:column="30">tag<pos:position pos:line="350" pos:column="33"/></name><operator pos:line="350" pos:column="33">++<pos:position pos:line="350" pos:column="35"/></operator> <operator pos:line="350" pos:column="36">=<pos:position pos:line="350" pos:column="37"/></operator> <literal type="char" pos:line="350" pos:column="38">'='<pos:position pos:line="350" pos:column="41"/></literal></expr>;<pos:position pos:line="350" pos:column="42"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="351" pos:column="29">memcpy<pos:position pos:line="351" pos:column="35"/></name><argument_list pos:line="351" pos:column="35">(<argument><expr><name pos:line="351" pos:column="36">tag<pos:position pos:line="351" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="351" pos:column="41">carg<pos:position pos:line="351" pos:column="45"/></name><operator pos:line="351" pos:column="45">-&gt;<pos:position pos:line="351" pos:column="50"/></operator><name pos:line="351" pos:column="47">value<pos:position pos:line="351" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="351" pos:column="54">carg<pos:position pos:line="351" pos:column="58"/></name><operator pos:line="351" pos:column="58">-&gt;<pos:position pos:line="351" pos:column="63"/></operator><name pos:line="351" pos:column="60">value_len<pos:position pos:line="351" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="351" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="71"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="352" pos:column="29">tag<pos:position pos:line="352" pos:column="32"/></name> <operator pos:line="352" pos:column="33">+=<pos:position pos:line="352" pos:column="35"/></operator> <name><name pos:line="352" pos:column="36">carg<pos:position pos:line="352" pos:column="40"/></name><operator pos:line="352" pos:column="40">-&gt;<pos:position pos:line="352" pos:column="45"/></operator><name pos:line="352" pos:column="42">value_len<pos:position pos:line="352" pos:column="51"/></name></name></expr>;<pos:position pos:line="352" pos:column="52"/></expr_stmt>
                        }<pos:position pos:line="353" pos:column="26"/></block></then></if>
                        <expr_stmt><expr><operator pos:line="354" pos:column="25">*<pos:position pos:line="354" pos:column="26"/></operator><name pos:line="354" pos:column="26">tag<pos:position pos:line="354" pos:column="29"/></name><operator pos:line="354" pos:column="29">++<pos:position pos:line="354" pos:column="31"/></operator> <operator pos:line="354" pos:column="32">=<pos:position pos:line="354" pos:column="33"/></operator> <literal type="char" pos:line="354" pos:column="34">'\0'<pos:position pos:line="354" pos:column="38"/></literal></expr>;<pos:position pos:line="354" pos:column="39"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="355" pos:column="25">carg<pos:position pos:line="355" pos:column="29"/></name> <operator pos:line="355" pos:column="30">=<pos:position pos:line="355" pos:column="31"/></operator> <name><name pos:line="355" pos:column="32">carg<pos:position pos:line="355" pos:column="36"/></name><operator pos:line="355" pos:column="36">-&gt;<pos:position pos:line="355" pos:column="41"/></operator><name pos:line="355" pos:column="38">next<pos:position pos:line="355" pos:column="42"/></name></name></expr>;<pos:position pos:line="355" pos:column="43"/></expr_stmt>
                    }<pos:position pos:line="356" pos:column="22"/></block></while>
                    <expr_stmt><expr><name><name pos:line="357" pos:column="21">ctx<pos:position pos:line="357" pos:column="24"/></name><operator pos:line="357" pos:column="24">-&gt;<pos:position pos:line="357" pos:column="29"/></operator><name pos:line="357" pos:column="26">ctx<pos:position pos:line="357" pos:column="29"/></name><operator pos:line="357" pos:column="29">-&gt;<pos:position pos:line="357" pos:column="34"/></operator><name pos:line="357" pos:column="31">tag_length<pos:position pos:line="357" pos:column="41"/></name></name> <operator pos:line="357" pos:column="42">=<pos:position pos:line="357" pos:column="43"/></operator> <name pos:line="357" pos:column="44">tag_len<pos:position pos:line="357" pos:column="51"/></name></expr>;<pos:position pos:line="357" pos:column="52"/></expr_stmt>

                    <comment type="block" pos:line="359" pos:column="21">/* create dummy buckets for backards compat */</comment>
                    <expr_stmt><expr><name><name pos:line="360" pos:column="21">ctx<pos:position pos:line="360" pos:column="24"/></name><operator pos:line="360" pos:column="24">-&gt;<pos:position pos:line="360" pos:column="29"/></operator><name pos:line="360" pos:column="26">ctx<pos:position pos:line="360" pos:column="29"/></name><operator pos:line="360" pos:column="29">-&gt;<pos:position pos:line="360" pos:column="34"/></operator><name pos:line="360" pos:column="31">head_start_bucket<pos:position pos:line="360" pos:column="48"/></name></name> <operator pos:line="360" pos:column="49">=<pos:position pos:line="360" pos:column="50"/></operator>
                        <call><name pos:line="361" pos:column="25">apr_bucket_pool_create<pos:position pos:line="361" pos:column="47"/></name><argument_list pos:line="361" pos:column="47">(<argument><expr><call><name pos:line="361" pos:column="48">apr_pmemdup<pos:position pos:line="361" pos:column="59"/></name><argument_list pos:line="361" pos:column="59">(<argument><expr><name><name pos:line="361" pos:column="60">ctx<pos:position pos:line="361" pos:column="63"/></name><operator pos:line="361" pos:column="63">-&gt;<pos:position pos:line="361" pos:column="68"/></operator><name pos:line="361" pos:column="65">ctx<pos:position pos:line="361" pos:column="68"/></name><operator pos:line="361" pos:column="68">-&gt;<pos:position pos:line="361" pos:column="73"/></operator><name pos:line="361" pos:column="70">pool<pos:position pos:line="361" pos:column="74"/></name></name></expr></argument>,
                                                           <argument><expr><name><name pos:line="362" pos:column="60">ctx<pos:position pos:line="362" pos:column="63"/></name><operator pos:line="362" pos:column="63">-&gt;<pos:position pos:line="362" pos:column="68"/></operator><name pos:line="362" pos:column="65">ctx<pos:position pos:line="362" pos:column="68"/></name><operator pos:line="362" pos:column="68">-&gt;<pos:position pos:line="362" pos:column="73"/></operator><name pos:line="362" pos:column="70">start_seq<pos:position pos:line="362" pos:column="79"/></name></name></expr></argument>,
                                                       <argument><expr><name><name pos:line="363" pos:column="56">ctx<pos:position pos:line="363" pos:column="59"/></name><operator pos:line="363" pos:column="59">-&gt;<pos:position pos:line="363" pos:column="64"/></operator><name pos:line="363" pos:column="61">ctx<pos:position pos:line="363" pos:column="64"/></name><operator pos:line="363" pos:column="64">-&gt;<pos:position pos:line="363" pos:column="69"/></operator><name pos:line="363" pos:column="66">start_seq_len<pos:position pos:line="363" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="363" pos:column="80"/></argument_list></call></expr></argument>,
                                               <argument><expr><name><name pos:line="364" pos:column="48">ctx<pos:position pos:line="364" pos:column="51"/></name><operator pos:line="364" pos:column="51">-&gt;<pos:position pos:line="364" pos:column="56"/></operator><name pos:line="364" pos:column="53">ctx<pos:position pos:line="364" pos:column="56"/></name><operator pos:line="364" pos:column="56">-&gt;<pos:position pos:line="364" pos:column="61"/></operator><name pos:line="364" pos:column="58">start_seq_len<pos:position pos:line="364" pos:column="71"/></name></name></expr></argument>,
                                               <argument><expr><name><name pos:line="365" pos:column="48">ctx<pos:position pos:line="365" pos:column="51"/></name><operator pos:line="365" pos:column="51">-&gt;<pos:position pos:line="365" pos:column="56"/></operator><name pos:line="365" pos:column="53">ctx<pos:position pos:line="365" pos:column="56"/></name><operator pos:line="365" pos:column="56">-&gt;<pos:position pos:line="365" pos:column="61"/></operator><name pos:line="365" pos:column="58">pool<pos:position pos:line="365" pos:column="62"/></name></name></expr></argument>,
                                               <argument><expr><name><name pos:line="366" pos:column="48">f<pos:position pos:line="366" pos:column="49"/></name><operator pos:line="366" pos:column="49">-&gt;<pos:position pos:line="366" pos:column="54"/></operator><name pos:line="366" pos:column="51">c<pos:position pos:line="366" pos:column="52"/></name><operator pos:line="366" pos:column="52">-&gt;<pos:position pos:line="366" pos:column="57"/></operator><name pos:line="366" pos:column="54">bucket_alloc<pos:position pos:line="366" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="366" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="366" pos:column="68"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="367" pos:column="21">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="367" pos:column="44"/></name><argument_list pos:line="367" pos:column="44">(<argument><expr><name><name pos:line="367" pos:column="45">ctx<pos:position pos:line="367" pos:column="48"/></name><operator pos:line="367" pos:column="48">-&gt;<pos:position pos:line="367" pos:column="53"/></operator><name pos:line="367" pos:column="50">ctx<pos:position pos:line="367" pos:column="53"/></name><operator pos:line="367" pos:column="53">-&gt;<pos:position pos:line="367" pos:column="58"/></operator><name pos:line="367" pos:column="55">ssi_tag_brigade<pos:position pos:line="367" pos:column="70"/></name></name></expr></argument>,
                                            <argument><expr><name><name pos:line="368" pos:column="45">ctx<pos:position pos:line="368" pos:column="48"/></name><operator pos:line="368" pos:column="48">-&gt;<pos:position pos:line="368" pos:column="53"/></operator><name pos:line="368" pos:column="50">ctx<pos:position pos:line="368" pos:column="53"/></name><operator pos:line="368" pos:column="53">-&gt;<pos:position pos:line="368" pos:column="58"/></operator><name pos:line="368" pos:column="55">head_start_bucket<pos:position pos:line="368" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="368" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="368" pos:column="74"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="369" pos:column="21">ctx<pos:position pos:line="369" pos:column="24"/></name><operator pos:line="369" pos:column="24">-&gt;<pos:position pos:line="369" pos:column="29"/></operator><name pos:line="369" pos:column="26">ctx<pos:position pos:line="369" pos:column="29"/></name><operator pos:line="369" pos:column="29">-&gt;<pos:position pos:line="369" pos:column="34"/></operator><name pos:line="369" pos:column="31">tag_start_bucket<pos:position pos:line="369" pos:column="47"/></name></name> <operator pos:line="369" pos:column="48">=<pos:position pos:line="369" pos:column="49"/></operator>
                        <call><name pos:line="370" pos:column="25">apr_bucket_pool_create<pos:position pos:line="370" pos:column="47"/></name><argument_list pos:line="370" pos:column="47">(<argument><expr><call><name pos:line="370" pos:column="48">apr_pmemdup<pos:position pos:line="370" pos:column="59"/></name><argument_list pos:line="370" pos:column="59">(<argument><expr><name><name pos:line="370" pos:column="60">ctx<pos:position pos:line="370" pos:column="63"/></name><operator pos:line="370" pos:column="63">-&gt;<pos:position pos:line="370" pos:column="68"/></operator><name pos:line="370" pos:column="65">ctx<pos:position pos:line="370" pos:column="68"/></name><operator pos:line="370" pos:column="68">-&gt;<pos:position pos:line="370" pos:column="73"/></operator><name pos:line="370" pos:column="70">pool<pos:position pos:line="370" pos:column="74"/></name></name></expr></argument>,
                                                         <argument><expr><name><name pos:line="371" pos:column="58">ctx<pos:position pos:line="371" pos:column="61"/></name><operator pos:line="371" pos:column="61">-&gt;<pos:position pos:line="371" pos:column="66"/></operator><name pos:line="371" pos:column="63">ctx<pos:position pos:line="371" pos:column="66"/></name><operator pos:line="371" pos:column="66">-&gt;<pos:position pos:line="371" pos:column="71"/></operator><name pos:line="371" pos:column="68">combined_tag<pos:position pos:line="371" pos:column="80"/></name></name></expr></argument>,
                                                         <argument><expr><name><name pos:line="372" pos:column="58">ctx<pos:position pos:line="372" pos:column="61"/></name><operator pos:line="372" pos:column="61">-&gt;<pos:position pos:line="372" pos:column="66"/></operator><name pos:line="372" pos:column="63">ctx<pos:position pos:line="372" pos:column="66"/></name><operator pos:line="372" pos:column="66">-&gt;<pos:position pos:line="372" pos:column="71"/></operator><name pos:line="372" pos:column="68">tag_length<pos:position pos:line="372" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="372" pos:column="79"/></argument_list></call></expr></argument>,
                                               <argument><expr><name><name pos:line="373" pos:column="48">ctx<pos:position pos:line="373" pos:column="51"/></name><operator pos:line="373" pos:column="51">-&gt;<pos:position pos:line="373" pos:column="56"/></operator><name pos:line="373" pos:column="53">ctx<pos:position pos:line="373" pos:column="56"/></name><operator pos:line="373" pos:column="56">-&gt;<pos:position pos:line="373" pos:column="61"/></operator><name pos:line="373" pos:column="58">tag_length<pos:position pos:line="373" pos:column="68"/></name></name></expr></argument>,
                                               <argument><expr><name><name pos:line="374" pos:column="48">ctx<pos:position pos:line="374" pos:column="51"/></name><operator pos:line="374" pos:column="51">-&gt;<pos:position pos:line="374" pos:column="56"/></operator><name pos:line="374" pos:column="53">ctx<pos:position pos:line="374" pos:column="56"/></name><operator pos:line="374" pos:column="56">-&gt;<pos:position pos:line="374" pos:column="61"/></operator><name pos:line="374" pos:column="58">pool<pos:position pos:line="374" pos:column="62"/></name></name></expr></argument>,
                                               <argument><expr><name><name pos:line="375" pos:column="48">f<pos:position pos:line="375" pos:column="49"/></name><operator pos:line="375" pos:column="49">-&gt;<pos:position pos:line="375" pos:column="54"/></operator><name pos:line="375" pos:column="51">c<pos:position pos:line="375" pos:column="52"/></name><operator pos:line="375" pos:column="52">-&gt;<pos:position pos:line="375" pos:column="57"/></operator><name pos:line="375" pos:column="54">bucket_alloc<pos:position pos:line="375" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="375" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="375" pos:column="68"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="376" pos:column="21">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="376" pos:column="44"/></name><argument_list pos:line="376" pos:column="44">(<argument><expr><name><name pos:line="376" pos:column="45">ctx<pos:position pos:line="376" pos:column="48"/></name><operator pos:line="376" pos:column="48">-&gt;<pos:position pos:line="376" pos:column="53"/></operator><name pos:line="376" pos:column="50">ctx<pos:position pos:line="376" pos:column="53"/></name><operator pos:line="376" pos:column="53">-&gt;<pos:position pos:line="376" pos:column="58"/></operator><name pos:line="376" pos:column="55">ssi_tag_brigade<pos:position pos:line="376" pos:column="70"/></name></name></expr></argument>,
                                            <argument><expr><name><name pos:line="377" pos:column="45">ctx<pos:position pos:line="377" pos:column="48"/></name><operator pos:line="377" pos:column="48">-&gt;<pos:position pos:line="377" pos:column="53"/></operator><name pos:line="377" pos:column="50">ctx<pos:position pos:line="377" pos:column="53"/></name><operator pos:line="377" pos:column="53">-&gt;<pos:position pos:line="377" pos:column="58"/></operator><name pos:line="377" pos:column="55">tag_start_bucket<pos:position pos:line="377" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="377" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="377" pos:column="73"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="378" pos:column="21">ctx<pos:position pos:line="378" pos:column="24"/></name><operator pos:line="378" pos:column="24">-&gt;<pos:position pos:line="378" pos:column="29"/></operator><name pos:line="378" pos:column="26">ctx<pos:position pos:line="378" pos:column="29"/></name><operator pos:line="378" pos:column="29">-&gt;<pos:position pos:line="378" pos:column="34"/></operator><name pos:line="378" pos:column="31">tail_start_bucket<pos:position pos:line="378" pos:column="48"/></name></name> <operator pos:line="378" pos:column="49">=<pos:position pos:line="378" pos:column="50"/></operator>
                        <call><name pos:line="379" pos:column="25">apr_bucket_pool_create<pos:position pos:line="379" pos:column="47"/></name><argument_list pos:line="379" pos:column="47">(<argument><expr><call><name pos:line="379" pos:column="48">apr_pmemdup<pos:position pos:line="379" pos:column="59"/></name><argument_list pos:line="379" pos:column="59">(<argument><expr><name><name pos:line="379" pos:column="60">ctx<pos:position pos:line="379" pos:column="63"/></name><operator pos:line="379" pos:column="63">-&gt;<pos:position pos:line="379" pos:column="68"/></operator><name pos:line="379" pos:column="65">ctx<pos:position pos:line="379" pos:column="68"/></name><operator pos:line="379" pos:column="68">-&gt;<pos:position pos:line="379" pos:column="73"/></operator><name pos:line="379" pos:column="70">pool<pos:position pos:line="379" pos:column="74"/></name></name></expr></argument>,
                                                           <argument><expr><name><name pos:line="380" pos:column="60">ctx<pos:position pos:line="380" pos:column="63"/></name><operator pos:line="380" pos:column="63">-&gt;<pos:position pos:line="380" pos:column="68"/></operator><name pos:line="380" pos:column="65">ctx<pos:position pos:line="380" pos:column="68"/></name><operator pos:line="380" pos:column="68">-&gt;<pos:position pos:line="380" pos:column="73"/></operator><name pos:line="380" pos:column="70">end_seq<pos:position pos:line="380" pos:column="77"/></name></name></expr></argument>,
                                                           <argument><expr><name><name pos:line="381" pos:column="60">ctx<pos:position pos:line="381" pos:column="63"/></name><operator pos:line="381" pos:column="63">-&gt;<pos:position pos:line="381" pos:column="68"/></operator><name pos:line="381" pos:column="65">end_seq_len<pos:position pos:line="381" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="381" pos:column="77"/></argument_list></call></expr></argument>,
                                               <argument><expr><name><name pos:line="382" pos:column="48">ctx<pos:position pos:line="382" pos:column="51"/></name><operator pos:line="382" pos:column="51">-&gt;<pos:position pos:line="382" pos:column="56"/></operator><name pos:line="382" pos:column="53">end_seq_len<pos:position pos:line="382" pos:column="64"/></name></name></expr></argument>,
                                               <argument><expr><name><name pos:line="383" pos:column="48">ctx<pos:position pos:line="383" pos:column="51"/></name><operator pos:line="383" pos:column="51">-&gt;<pos:position pos:line="383" pos:column="56"/></operator><name pos:line="383" pos:column="53">ctx<pos:position pos:line="383" pos:column="56"/></name><operator pos:line="383" pos:column="56">-&gt;<pos:position pos:line="383" pos:column="61"/></operator><name pos:line="383" pos:column="58">pool<pos:position pos:line="383" pos:column="62"/></name></name></expr></argument>,
                                               <argument><expr><name><name pos:line="384" pos:column="48">f<pos:position pos:line="384" pos:column="49"/></name><operator pos:line="384" pos:column="49">-&gt;<pos:position pos:line="384" pos:column="54"/></operator><name pos:line="384" pos:column="51">c<pos:position pos:line="384" pos:column="52"/></name><operator pos:line="384" pos:column="52">-&gt;<pos:position pos:line="384" pos:column="57"/></operator><name pos:line="384" pos:column="54">bucket_alloc<pos:position pos:line="384" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="384" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="384" pos:column="68"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="385" pos:column="21">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="385" pos:column="44"/></name><argument_list pos:line="385" pos:column="44">(<argument><expr><name><name pos:line="385" pos:column="45">ctx<pos:position pos:line="385" pos:column="48"/></name><operator pos:line="385" pos:column="48">-&gt;<pos:position pos:line="385" pos:column="53"/></operator><name pos:line="385" pos:column="50">ctx<pos:position pos:line="385" pos:column="53"/></name><operator pos:line="385" pos:column="53">-&gt;<pos:position pos:line="385" pos:column="58"/></operator><name pos:line="385" pos:column="55">ssi_tag_brigade<pos:position pos:line="385" pos:column="70"/></name></name></expr></argument>,
                                            <argument><expr><name><name pos:line="386" pos:column="45">ctx<pos:position pos:line="386" pos:column="48"/></name><operator pos:line="386" pos:column="48">-&gt;<pos:position pos:line="386" pos:column="53"/></operator><name pos:line="386" pos:column="50">ctx<pos:position pos:line="386" pos:column="53"/></name><operator pos:line="386" pos:column="53">-&gt;<pos:position pos:line="386" pos:column="58"/></operator><name pos:line="386" pos:column="55">tail_start_bucket<pos:position pos:line="386" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="386" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="386" pos:column="74"/></expr_stmt>

                    <expr_stmt><expr><name pos:line="388" pos:column="21">rv<pos:position pos:line="388" pos:column="23"/></name> <operator pos:line="388" pos:column="24">=<pos:position pos:line="388" pos:column="25"/></operator> <call><name pos:line="388" pos:column="26">handle_func<pos:position pos:line="388" pos:column="37"/></name><argument_list pos:line="388" pos:column="37">(<argument><expr><name><name pos:line="388" pos:column="38">ctx<pos:position pos:line="388" pos:column="41"/></name><operator pos:line="388" pos:column="41">-&gt;<pos:position pos:line="388" pos:column="46"/></operator><name pos:line="388" pos:column="43">ctx<pos:position pos:line="388" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="388" pos:column="48">&amp;<pos:position pos:line="388" pos:column="53"/></operator><name pos:line="388" pos:column="49">bb<pos:position pos:line="388" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="388" pos:column="53">r<pos:position pos:line="388" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="388" pos:column="56">f<pos:position pos:line="388" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="388" pos:column="59">b<pos:position pos:line="388" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="388" pos:column="62">&amp;<pos:position pos:line="388" pos:column="67"/></operator><name pos:line="388" pos:column="63">dummy<pos:position pos:line="388" pos:column="68"/></name></expr></argument>)<pos:position pos:line="388" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="388" pos:column="70"/></expr_stmt>

                    <expr_stmt><expr><call><name pos:line="390" pos:column="21">apr_brigade_cleanup<pos:position pos:line="390" pos:column="40"/></name><argument_list pos:line="390" pos:column="40">(<argument><expr><name><name pos:line="390" pos:column="41">ctx<pos:position pos:line="390" pos:column="44"/></name><operator pos:line="390" pos:column="44">-&gt;<pos:position pos:line="390" pos:column="49"/></operator><name pos:line="390" pos:column="46">ctx<pos:position pos:line="390" pos:column="49"/></name><operator pos:line="390" pos:column="49">-&gt;<pos:position pos:line="390" pos:column="54"/></operator><name pos:line="390" pos:column="51">ssi_tag_brigade<pos:position pos:line="390" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="390" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="390" pos:column="68"/></expr_stmt>

                    <if pos:line="392" pos:column="21">if <condition pos:line="392" pos:column="24">(<expr><name pos:line="392" pos:column="25">rv<pos:position pos:line="392" pos:column="27"/></name> <operator pos:line="392" pos:column="28">!=<pos:position pos:line="392" pos:column="30"/></operator> <literal type="number" pos:line="392" pos:column="31">0<pos:position pos:line="392" pos:column="32"/></literal> <operator pos:line="392" pos:column="33">&amp;&amp;<pos:position pos:line="392" pos:column="43"/></operator> <name pos:line="392" pos:column="36">rv<pos:position pos:line="392" pos:column="38"/></name> <operator pos:line="392" pos:column="39">!=<pos:position pos:line="392" pos:column="41"/></operator> <literal type="number" pos:line="392" pos:column="42">1<pos:position pos:line="392" pos:column="43"/></literal> <operator pos:line="392" pos:column="44">&amp;&amp;<pos:position pos:line="392" pos:column="54"/></operator> <name pos:line="392" pos:column="47">rv<pos:position pos:line="392" pos:column="49"/></name> <operator pos:line="392" pos:column="50">!=<pos:position pos:line="392" pos:column="52"/></operator> <operator pos:line="392" pos:column="53">-<pos:position pos:line="392" pos:column="54"/></operator><literal type="number" pos:line="392" pos:column="54">1<pos:position pos:line="392" pos:column="55"/></literal></expr>)<pos:position pos:line="392" pos:column="56"/></condition><then pos:line="392" pos:column="56"> <block pos:line="392" pos:column="57">{
                        <expr_stmt><expr><call><name pos:line="393" pos:column="25">apr_brigade_destroy<pos:position pos:line="393" pos:column="44"/></name><argument_list pos:line="393" pos:column="44">(<argument><expr><name pos:line="393" pos:column="45">pass_bb<pos:position pos:line="393" pos:column="52"/></name></expr></argument>)<pos:position pos:line="393" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="393" pos:column="54"/></expr_stmt>
                        <return pos:line="394" pos:column="25">return <expr><name pos:line="394" pos:column="32">rv<pos:position pos:line="394" pos:column="34"/></name></expr>;<pos:position pos:line="394" pos:column="35"/></return>
                    }<pos:position pos:line="395" pos:column="22"/></block></then></if>

                    <if pos:line="397" pos:column="21">if <condition pos:line="397" pos:column="24">(<expr><name pos:line="397" pos:column="25">dummy<pos:position pos:line="397" pos:column="30"/></name></expr>)<pos:position pos:line="397" pos:column="31"/></condition><then pos:line="397" pos:column="31"> <block pos:line="397" pos:column="32">{
                        <decl_stmt><decl><type><name pos:line="398" pos:column="25">apr_bucket_brigade<pos:position pos:line="398" pos:column="43"/></name> <modifier pos:line="398" pos:column="44">*<pos:position pos:line="398" pos:column="45"/></modifier></type><name pos:line="398" pos:column="45">remain<pos:position pos:line="398" pos:column="51"/></name></decl>;<pos:position pos:line="398" pos:column="52"/></decl_stmt>

                        <expr_stmt><expr><name pos:line="400" pos:column="25">remain<pos:position pos:line="400" pos:column="31"/></name> <operator pos:line="400" pos:column="32">=<pos:position pos:line="400" pos:column="33"/></operator> <call><name pos:line="400" pos:column="34">apr_brigade_split<pos:position pos:line="400" pos:column="51"/></name><argument_list pos:line="400" pos:column="51">(<argument><expr><name pos:line="400" pos:column="52">bb<pos:position pos:line="400" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="400" pos:column="56">b<pos:position pos:line="400" pos:column="57"/></name></expr></argument>)<pos:position pos:line="400" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="400" pos:column="59"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="401" pos:column="25">APR_BRIGADE_CONCAT<pos:position pos:line="401" pos:column="43"/></name><argument_list pos:line="401" pos:column="43">(<argument><expr><name pos:line="401" pos:column="44">pass_bb<pos:position pos:line="401" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="401" pos:column="53">bb<pos:position pos:line="401" pos:column="55"/></name></expr></argument>)<pos:position pos:line="401" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="401" pos:column="57"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="402" pos:column="25">bb<pos:position pos:line="402" pos:column="27"/></name> <operator pos:line="402" pos:column="28">=<pos:position pos:line="402" pos:column="29"/></operator> <name pos:line="402" pos:column="30">remain<pos:position pos:line="402" pos:column="36"/></name></expr>;<pos:position pos:line="402" pos:column="37"/></expr_stmt>
                    }<pos:position pos:line="403" pos:column="22"/></block></then></if>
                }<pos:position pos:line="404" pos:column="18"/></block></then>
                <else pos:line="405" pos:column="17">else <block pos:line="405" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="406" pos:column="21">ap_log_rerror<pos:position pos:line="406" pos:column="34"/></name><argument_list pos:line="406" pos:column="34">(<argument><expr><name pos:line="406" pos:column="35">APLOG_MARK<pos:position pos:line="406" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="406" pos:column="47">APLOG_ERR<pos:position pos:line="406" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="406" pos:column="58">0<pos:position pos:line="406" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="406" pos:column="61">r<pos:position pos:line="406" pos:column="62"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="407" pos:column="35">"unknown directive \"%s\" in parsed doc %s"<pos:position pos:line="407" pos:column="78"/></literal></expr></argument>,
                                  <argument><expr><call><name pos:line="408" pos:column="35">apr_pstrmemdup<pos:position pos:line="408" pos:column="49"/></name><argument_list pos:line="408" pos:column="49">(<argument><expr><name><name pos:line="408" pos:column="50">r<pos:position pos:line="408" pos:column="51"/></name><operator pos:line="408" pos:column="51">-&gt;<pos:position pos:line="408" pos:column="56"/></operator><name pos:line="408" pos:column="53">pool<pos:position pos:line="408" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="408" pos:column="59">ctx<pos:position pos:line="408" pos:column="62"/></name><operator pos:line="408" pos:column="62">-&gt;<pos:position pos:line="408" pos:column="67"/></operator><name pos:line="408" pos:column="64">directive<pos:position pos:line="408" pos:column="73"/></name></name></expr></argument>,
                                                 <argument><expr><name><name pos:line="409" pos:column="50">ctx<pos:position pos:line="409" pos:column="53"/></name><operator pos:line="409" pos:column="53">-&gt;<pos:position pos:line="409" pos:column="58"/></operator><name pos:line="409" pos:column="55">ctx<pos:position pos:line="409" pos:column="58"/></name><operator pos:line="409" pos:column="58">-&gt;<pos:position pos:line="409" pos:column="63"/></operator><name pos:line="409" pos:column="60">directive_length<pos:position pos:line="409" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="409" pos:column="77"/></argument_list></call></expr></argument>,
                                                 <argument><expr><name><name pos:line="410" pos:column="50">r<pos:position pos:line="410" pos:column="51"/></name><operator pos:line="410" pos:column="51">-&gt;<pos:position pos:line="410" pos:column="56"/></operator><name pos:line="410" pos:column="53">filename<pos:position pos:line="410" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="410" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="410" pos:column="63"/></expr_stmt>
                    <if pos:line="411" pos:column="21">if <condition pos:line="411" pos:column="24">(<expr><name><name pos:line="411" pos:column="25">ctx<pos:position pos:line="411" pos:column="28"/></name><operator pos:line="411" pos:column="28">-&gt;<pos:position pos:line="411" pos:column="33"/></operator><name pos:line="411" pos:column="30">ctx<pos:position pos:line="411" pos:column="33"/></name><operator pos:line="411" pos:column="33">-&gt;<pos:position pos:line="411" pos:column="38"/></operator><name pos:line="411" pos:column="35">flags<pos:position pos:line="411" pos:column="40"/></name></name> <operator pos:line="411" pos:column="41">&amp;<pos:position pos:line="411" pos:column="46"/></operator> <name pos:line="411" pos:column="43">FLAG_PRINTING<pos:position pos:line="411" pos:column="56"/></name></expr>)<pos:position pos:line="411" pos:column="57"/></condition><then pos:line="411" pos:column="57"> <block pos:line="411" pos:column="58">{
                        <expr_stmt><expr><call><name pos:line="412" pos:column="25">SSI_CREATE_ERROR_BUCKET<pos:position pos:line="412" pos:column="48"/></name><argument_list pos:line="412" pos:column="48">(<argument><expr><name><name pos:line="412" pos:column="49">ctx<pos:position pos:line="412" pos:column="52"/></name><operator pos:line="412" pos:column="52">-&gt;<pos:position pos:line="412" pos:column="57"/></operator><name pos:line="412" pos:column="54">ctx<pos:position pos:line="412" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="412" pos:column="59">f<pos:position pos:line="412" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="412" pos:column="62">pass_bb<pos:position pos:line="412" pos:column="69"/></name></expr></argument>)<pos:position pos:line="412" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="412" pos:column="71"/></expr_stmt>
                    }<pos:position pos:line="413" pos:column="22"/></block></then></if>
                }<pos:position pos:line="414" pos:column="18"/></block></else></if>
            }<pos:position pos:line="415" pos:column="14"/></block></else></if>

            <comment type="block" pos:line="417" pos:column="13">/* cleanup */</comment>
            <expr_stmt><expr><call><name pos:line="418" pos:column="13">apr_pool_clear<pos:position pos:line="418" pos:column="27"/></name><argument_list pos:line="418" pos:column="27">(<argument><expr><name><name pos:line="418" pos:column="28">ctx<pos:position pos:line="418" pos:column="31"/></name><operator pos:line="418" pos:column="31">-&gt;<pos:position pos:line="418" pos:column="36"/></operator><name pos:line="418" pos:column="33">dpool<pos:position pos:line="418" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="418" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="418" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="419" pos:column="13">apr_brigade_cleanup<pos:position pos:line="419" pos:column="32"/></name><argument_list pos:line="419" pos:column="32">(<argument><expr><name><name pos:line="419" pos:column="33">ctx<pos:position pos:line="419" pos:column="36"/></name><operator pos:line="419" pos:column="36">-&gt;<pos:position pos:line="419" pos:column="41"/></operator><name pos:line="419" pos:column="38">tmp_bb<pos:position pos:line="419" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="419" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="419" pos:column="46"/></expr_stmt>

            <comment type="block" pos:line="421" pos:column="13">/* Oooof. Done here, start next round */</comment>
            <expr_stmt><expr><name><name pos:line="422" pos:column="13">ctx<pos:position pos:line="422" pos:column="16"/></name><operator pos:line="422" pos:column="16">-&gt;<pos:position pos:line="422" pos:column="21"/></operator><name pos:line="422" pos:column="18">state<pos:position pos:line="422" pos:column="23"/></name></name> <operator pos:line="422" pos:column="24">=<pos:position pos:line="422" pos:column="25"/></operator> <name pos:line="422" pos:column="26">PARSE_PRE_HEAD<pos:position pos:line="422" pos:column="40"/></name></expr>;<pos:position pos:line="422" pos:column="41"/></expr_stmt>
            <break pos:line="423" pos:column="13">break;<pos:position pos:line="423" pos:column="19"/></break>
        }<pos:position pos:line="424" pos:column="10"/></block></switch>

    }<pos:position pos:line="426" pos:column="6"/></block></while> <comment type="block" pos:line="426" pos:column="7">/* while (brigade) */</comment>

    <comment type="block" pos:line="428" pos:column="5">/* End of stream. Final cleanup */</comment>
    <if pos:line="429" pos:column="5">if <condition pos:line="429" pos:column="8">(<expr><name><name pos:line="429" pos:column="9">ctx<pos:position pos:line="429" pos:column="12"/></name><operator pos:line="429" pos:column="12">-&gt;<pos:position pos:line="429" pos:column="17"/></operator><name pos:line="429" pos:column="14">seen_eos<pos:position pos:line="429" pos:column="22"/></name></name></expr>)<pos:position pos:line="429" pos:column="23"/></condition><then pos:line="429" pos:column="23"> <block pos:line="429" pos:column="24">{
        <if pos:line="430" pos:column="9">if <condition pos:line="430" pos:column="12">(<expr><name pos:line="430" pos:column="13">PARSE_HEAD<pos:position pos:line="430" pos:column="23"/></name> <operator pos:line="430" pos:column="24">==<pos:position pos:line="430" pos:column="26"/></operator> <name><name pos:line="430" pos:column="27">ctx<pos:position pos:line="430" pos:column="30"/></name><operator pos:line="430" pos:column="30">-&gt;<pos:position pos:line="430" pos:column="35"/></operator><name pos:line="430" pos:column="32">state<pos:position pos:line="430" pos:column="37"/></name></name></expr>)<pos:position pos:line="430" pos:column="38"/></condition><then pos:line="430" pos:column="38"> <block pos:line="430" pos:column="39">{
            <if pos:line="431" pos:column="13">if <condition pos:line="431" pos:column="16">(<expr><name><name pos:line="431" pos:column="17">ctx<pos:position pos:line="431" pos:column="20"/></name><operator pos:line="431" pos:column="20">-&gt;<pos:position pos:line="431" pos:column="25"/></operator><name pos:line="431" pos:column="22">ctx<pos:position pos:line="431" pos:column="25"/></name><operator pos:line="431" pos:column="25">-&gt;<pos:position pos:line="431" pos:column="30"/></operator><name pos:line="431" pos:column="27">flags<pos:position pos:line="431" pos:column="32"/></name></name> <operator pos:line="431" pos:column="33">&amp;<pos:position pos:line="431" pos:column="38"/></operator> <name pos:line="431" pos:column="35">FLAG_PRINTING<pos:position pos:line="431" pos:column="48"/></name></expr>)<pos:position pos:line="431" pos:column="49"/></condition><then pos:line="431" pos:column="49"> <block pos:line="431" pos:column="50">{
                <decl_stmt><decl><type><name pos:line="432" pos:column="17">char<pos:position pos:line="432" pos:column="21"/></name> <modifier pos:line="432" pos:column="22">*<pos:position pos:line="432" pos:column="23"/></modifier></type><name pos:line="432" pos:column="23">to_release<pos:position pos:line="432" pos:column="33"/></name> <init pos:line="432" pos:column="34">= <expr><call><name pos:line="432" pos:column="36">apr_palloc<pos:position pos:line="432" pos:column="46"/></name><argument_list pos:line="432" pos:column="46">(<argument><expr><name><name pos:line="432" pos:column="47">ctx<pos:position pos:line="432" pos:column="50"/></name><operator pos:line="432" pos:column="50">-&gt;<pos:position pos:line="432" pos:column="55"/></operator><name pos:line="432" pos:column="52">ctx<pos:position pos:line="432" pos:column="55"/></name><operator pos:line="432" pos:column="55">-&gt;<pos:position pos:line="432" pos:column="60"/></operator><name pos:line="432" pos:column="57">pool<pos:position pos:line="432" pos:column="61"/></name></name></expr></argument>,
                                              <argument><expr><name><name pos:line="433" pos:column="47">ctx<pos:position pos:line="433" pos:column="50"/></name><operator pos:line="433" pos:column="50">-&gt;<pos:position pos:line="433" pos:column="55"/></operator><name pos:line="433" pos:column="52">ctx<pos:position pos:line="433" pos:column="55"/></name><operator pos:line="433" pos:column="55">-&gt;<pos:position pos:line="433" pos:column="60"/></operator><name pos:line="433" pos:column="57">parse_pos<pos:position pos:line="433" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="433" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="433" pos:column="68"/></decl_stmt>

                <expr_stmt><expr><call><name pos:line="435" pos:column="17">memcpy<pos:position pos:line="435" pos:column="23"/></name><argument_list pos:line="435" pos:column="23">(<argument><expr><name pos:line="435" pos:column="24">to_release<pos:position pos:line="435" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="435" pos:column="36">ctx<pos:position pos:line="435" pos:column="39"/></name><operator pos:line="435" pos:column="39">-&gt;<pos:position pos:line="435" pos:column="44"/></operator><name pos:line="435" pos:column="41">ctx<pos:position pos:line="435" pos:column="44"/></name><operator pos:line="435" pos:column="44">-&gt;<pos:position pos:line="435" pos:column="49"/></operator><name pos:line="435" pos:column="46">start_seq<pos:position pos:line="435" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="435" pos:column="57">ctx<pos:position pos:line="435" pos:column="60"/></name><operator pos:line="435" pos:column="60">-&gt;<pos:position pos:line="435" pos:column="65"/></operator><name pos:line="435" pos:column="62">ctx<pos:position pos:line="435" pos:column="65"/></name><operator pos:line="435" pos:column="65">-&gt;<pos:position pos:line="435" pos:column="70"/></operator><name pos:line="435" pos:column="67">parse_pos<pos:position pos:line="435" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="435" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="435" pos:column="78"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="436" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="436" pos:column="40"/></name><argument_list pos:line="436" pos:column="40">(<argument><expr><name pos:line="436" pos:column="41">pass_bb<pos:position pos:line="436" pos:column="48"/></name></expr></argument>,
                                        <argument><expr><call><name pos:line="437" pos:column="41">apr_bucket_pool_create<pos:position pos:line="437" pos:column="63"/></name><argument_list pos:line="437" pos:column="63">(<argument><expr><name pos:line="437" pos:column="64">to_release<pos:position pos:line="437" pos:column="74"/></name></expr></argument>,
                                        <argument><expr><name><name pos:line="438" pos:column="41">ctx<pos:position pos:line="438" pos:column="44"/></name><operator pos:line="438" pos:column="44">-&gt;<pos:position pos:line="438" pos:column="49"/></operator><name pos:line="438" pos:column="46">ctx<pos:position pos:line="438" pos:column="49"/></name><operator pos:line="438" pos:column="49">-&gt;<pos:position pos:line="438" pos:column="54"/></operator><name pos:line="438" pos:column="51">parse_pos<pos:position pos:line="438" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="438" pos:column="62">ctx<pos:position pos:line="438" pos:column="65"/></name><operator pos:line="438" pos:column="65">-&gt;<pos:position pos:line="438" pos:column="70"/></operator><name pos:line="438" pos:column="67">ctx<pos:position pos:line="438" pos:column="70"/></name><operator pos:line="438" pos:column="70">-&gt;<pos:position pos:line="438" pos:column="75"/></operator><name pos:line="438" pos:column="72">pool<pos:position pos:line="438" pos:column="76"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="439" pos:column="41">f<pos:position pos:line="439" pos:column="42"/></name><operator pos:line="439" pos:column="42">-&gt;<pos:position pos:line="439" pos:column="47"/></operator><name pos:line="439" pos:column="44">c<pos:position pos:line="439" pos:column="45"/></name><operator pos:line="439" pos:column="45">-&gt;<pos:position pos:line="439" pos:column="50"/></operator><name pos:line="439" pos:column="47">bucket_alloc<pos:position pos:line="439" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="439" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="439" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="439" pos:column="62"/></expr_stmt>
            }<pos:position pos:line="440" pos:column="14"/></block></then></if>
        }<pos:position pos:line="441" pos:column="10"/></block></then>
        <elseif pos:line="442" pos:column="9">else <if pos:line="442" pos:column="14">if <condition pos:line="442" pos:column="17">(<expr><name pos:line="442" pos:column="18">PARSE_PRE_HEAD<pos:position pos:line="442" pos:column="32"/></name> <operator pos:line="442" pos:column="33">!=<pos:position pos:line="442" pos:column="35"/></operator> <name><name pos:line="442" pos:column="36">ctx<pos:position pos:line="442" pos:column="39"/></name><operator pos:line="442" pos:column="39">-&gt;<pos:position pos:line="442" pos:column="44"/></operator><name pos:line="442" pos:column="41">state<pos:position pos:line="442" pos:column="46"/></name></name></expr>)<pos:position pos:line="442" pos:column="47"/></condition><then pos:line="442" pos:column="47"> <block pos:line="442" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="443" pos:column="13">ap_log_rerror<pos:position pos:line="443" pos:column="26"/></name><argument_list pos:line="443" pos:column="26">(<argument><expr><name pos:line="443" pos:column="27">APLOG_MARK<pos:position pos:line="443" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="443" pos:column="39">APLOG_ERR<pos:position pos:line="443" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="443" pos:column="50">0<pos:position pos:line="443" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="443" pos:column="53">r<pos:position pos:line="443" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="444" pos:column="27">"SSI directive was not properly finished at the end "<pos:position pos:line="444" pos:column="80"/></literal>
                          <literal type="string" pos:line="445" pos:column="27">"of parsed document %s"<pos:position pos:line="445" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="445" pos:column="52">r<pos:position pos:line="445" pos:column="53"/></name><operator pos:line="445" pos:column="53">-&gt;<pos:position pos:line="445" pos:column="58"/></operator><name pos:line="445" pos:column="55">filename<pos:position pos:line="445" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="445" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="445" pos:column="65"/></expr_stmt>
            <if pos:line="446" pos:column="13">if <condition pos:line="446" pos:column="16">(<expr><name><name pos:line="446" pos:column="17">ctx<pos:position pos:line="446" pos:column="20"/></name><operator pos:line="446" pos:column="20">-&gt;<pos:position pos:line="446" pos:column="25"/></operator><name pos:line="446" pos:column="22">ctx<pos:position pos:line="446" pos:column="25"/></name><operator pos:line="446" pos:column="25">-&gt;<pos:position pos:line="446" pos:column="30"/></operator><name pos:line="446" pos:column="27">flags<pos:position pos:line="446" pos:column="32"/></name></name> <operator pos:line="446" pos:column="33">&amp;<pos:position pos:line="446" pos:column="38"/></operator> <name pos:line="446" pos:column="35">FLAG_PRINTING<pos:position pos:line="446" pos:column="48"/></name></expr>)<pos:position pos:line="446" pos:column="49"/></condition><then pos:line="446" pos:column="49"> <block pos:line="446" pos:column="50">{
                <expr_stmt><expr><call><name pos:line="447" pos:column="17">SSI_CREATE_ERROR_BUCKET<pos:position pos:line="447" pos:column="40"/></name><argument_list pos:line="447" pos:column="40">(<argument><expr><name><name pos:line="447" pos:column="41">ctx<pos:position pos:line="447" pos:column="44"/></name><operator pos:line="447" pos:column="44">-&gt;<pos:position pos:line="447" pos:column="49"/></operator><name pos:line="447" pos:column="46">ctx<pos:position pos:line="447" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="447" pos:column="51">f<pos:position pos:line="447" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="447" pos:column="54">pass_bb<pos:position pos:line="447" pos:column="61"/></name></expr></argument>)<pos:position pos:line="447" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="447" pos:column="63"/></expr_stmt>
            }<pos:position pos:line="448" pos:column="14"/></block></then></if>
        }<pos:position pos:line="449" pos:column="10"/></block></then></if></elseif></if>

        <if pos:line="451" pos:column="9">if <condition pos:line="451" pos:column="12">(<expr><operator pos:line="451" pos:column="13">!<pos:position pos:line="451" pos:column="14"/></operator><operator pos:line="451" pos:column="14">(<pos:position pos:line="451" pos:column="15"/></operator><name><name pos:line="451" pos:column="15">ctx<pos:position pos:line="451" pos:column="18"/></name><operator pos:line="451" pos:column="18">-&gt;<pos:position pos:line="451" pos:column="23"/></operator><name pos:line="451" pos:column="20">ctx<pos:position pos:line="451" pos:column="23"/></name><operator pos:line="451" pos:column="23">-&gt;<pos:position pos:line="451" pos:column="28"/></operator><name pos:line="451" pos:column="25">flags<pos:position pos:line="451" pos:column="30"/></name></name> <operator pos:line="451" pos:column="31">&amp;<pos:position pos:line="451" pos:column="36"/></operator> <name pos:line="451" pos:column="33">FLAG_PRINTING<pos:position pos:line="451" pos:column="46"/></name><operator pos:line="451" pos:column="46">)<pos:position pos:line="451" pos:column="47"/></operator></expr>)<pos:position pos:line="451" pos:column="48"/></condition><then pos:line="451" pos:column="48"> <block pos:line="451" pos:column="49">{
            <expr_stmt><expr><call><name pos:line="452" pos:column="13">ap_log_rerror<pos:position pos:line="452" pos:column="26"/></name><argument_list pos:line="452" pos:column="26">(<argument><expr><name pos:line="452" pos:column="27">APLOG_MARK<pos:position pos:line="452" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="452" pos:column="39">APLOG_WARNING<pos:position pos:line="452" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="452" pos:column="54">0<pos:position pos:line="452" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="452" pos:column="57">r<pos:position pos:line="452" pos:column="58"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="453" pos:column="27">"missing closing endif directive in parsed document"<pos:position pos:line="453" pos:column="79"/></literal>
                          <literal type="string" pos:line="454" pos:column="27">" %s"<pos:position pos:line="454" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="454" pos:column="34">r<pos:position pos:line="454" pos:column="35"/></name><operator pos:line="454" pos:column="35">-&gt;<pos:position pos:line="454" pos:column="40"/></operator><name pos:line="454" pos:column="37">filename<pos:position pos:line="454" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="454" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="454" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="455" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="457" pos:column="9">/* cleanup our temporary memory */</comment>
        <expr_stmt><expr><call><name pos:line="458" pos:column="9">apr_brigade_destroy<pos:position pos:line="458" pos:column="28"/></name><argument_list pos:line="458" pos:column="28">(<argument><expr><name><name pos:line="458" pos:column="29">ctx<pos:position pos:line="458" pos:column="32"/></name><operator pos:line="458" pos:column="32">-&gt;<pos:position pos:line="458" pos:column="37"/></operator><name pos:line="458" pos:column="34">tmp_bb<pos:position pos:line="458" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="458" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="458" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="459" pos:column="9">apr_pool_destroy<pos:position pos:line="459" pos:column="25"/></name><argument_list pos:line="459" pos:column="25">(<argument><expr><name><name pos:line="459" pos:column="26">ctx<pos:position pos:line="459" pos:column="29"/></name><operator pos:line="459" pos:column="29">-&gt;<pos:position pos:line="459" pos:column="34"/></operator><name pos:line="459" pos:column="31">dpool<pos:position pos:line="459" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="459" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="459" pos:column="38"/></expr_stmt>

        <comment type="block" pos:line="461" pos:column="9">/* don't forget to finally insert the EOS bucket */</comment>
        <expr_stmt><expr><call><name pos:line="462" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="462" pos:column="32"/></name><argument_list pos:line="462" pos:column="32">(<argument><expr><name pos:line="462" pos:column="33">pass_bb<pos:position pos:line="462" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="462" pos:column="42">b<pos:position pos:line="462" pos:column="43"/></name></expr></argument>)<pos:position pos:line="462" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="462" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="463" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="465" pos:column="5">/* if something's left over, pass it along */</comment>
    <if pos:line="466" pos:column="5">if <condition pos:line="466" pos:column="8">(<expr><operator pos:line="466" pos:column="9">!<pos:position pos:line="466" pos:column="10"/></operator><call><name pos:line="466" pos:column="10">APR_BRIGADE_EMPTY<pos:position pos:line="466" pos:column="27"/></name><argument_list pos:line="466" pos:column="27">(<argument><expr><name pos:line="466" pos:column="28">pass_bb<pos:position pos:line="466" pos:column="35"/></name></expr></argument>)<pos:position pos:line="466" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="466" pos:column="37"/></condition><then pos:line="466" pos:column="37"> <block pos:line="466" pos:column="38">{
        <expr_stmt><expr><name pos:line="467" pos:column="9">rv<pos:position pos:line="467" pos:column="11"/></name> <operator pos:line="467" pos:column="12">=<pos:position pos:line="467" pos:column="13"/></operator> <call><name pos:line="467" pos:column="14">ap_pass_brigade<pos:position pos:line="467" pos:column="29"/></name><argument_list pos:line="467" pos:column="29">(<argument><expr><name><name pos:line="467" pos:column="30">f<pos:position pos:line="467" pos:column="31"/></name><operator pos:line="467" pos:column="31">-&gt;<pos:position pos:line="467" pos:column="36"/></operator><name pos:line="467" pos:column="33">next<pos:position pos:line="467" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="467" pos:column="39">pass_bb<pos:position pos:line="467" pos:column="46"/></name></expr></argument>)<pos:position pos:line="467" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="467" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="468" pos:column="6"/></block></then>
    <else pos:line="469" pos:column="5">else <block pos:line="469" pos:column="10">{
        <expr_stmt><expr><name pos:line="470" pos:column="9">rv<pos:position pos:line="470" pos:column="11"/></name> <operator pos:line="470" pos:column="12">=<pos:position pos:line="470" pos:column="13"/></operator> <name pos:line="470" pos:column="14">APR_SUCCESS<pos:position pos:line="470" pos:column="25"/></name></expr>;<pos:position pos:line="470" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="471" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="473" pos:column="5">apr_brigade_destroy<pos:position pos:line="473" pos:column="24"/></name><argument_list pos:line="473" pos:column="24">(<argument><expr><name pos:line="473" pos:column="25">pass_bb<pos:position pos:line="473" pos:column="32"/></name></expr></argument>)<pos:position pos:line="473" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="473" pos:column="34"/></expr_stmt>
    <return pos:line="474" pos:column="5">return <expr><name pos:line="474" pos:column="12">rv<pos:position pos:line="474" pos:column="14"/></name></expr>;<pos:position pos:line="474" pos:column="15"/></return>
}<pos:position pos:line="475" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3312.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">convert_secure_socket<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">conn_rec<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">c<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">apr_socket_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">csd<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
        <decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">rcode<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">tlsclientopts<pos:position pos:line="4" pos:column="29"/></name></name></type> <name pos:line="4" pos:column="30">sWS2Opts<pos:position pos:line="4" pos:column="38"/></name></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">nwtlsopts<pos:position pos:line="5" pos:column="25"/></name></name></type> <name pos:line="5" pos:column="26">sNWTLSOpts<pos:position pos:line="5" pos:column="36"/></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">sslserveropts<pos:position pos:line="6" pos:column="29"/></name></name></type> <name pos:line="6" pos:column="30">opts<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">long<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">ulFlags<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">SOCKET<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">sock<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">unicode_t<pos:position pos:line="9" pos:column="14"/></name></type> <name><name pos:line="9" pos:column="15">keyFileName<pos:position pos:line="9" pos:column="26"/></name><index pos:line="9" pos:column="26">[<expr><literal type="number" pos:line="9" pos:column="27">60<pos:position pos:line="9" pos:column="29"/></literal></expr>]<pos:position pos:line="9" pos:column="30"/></index></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">apr_os_sock_get<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><operator pos:line="11" pos:column="21">&amp;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="22">sock<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="28">csd<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* zero out buffers */</comment>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">memset<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">char<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">*<pos:position pos:line="14" pos:column="23"/></operator><operator pos:line="14" pos:column="23">)<pos:position pos:line="14" pos:column="24"/></operator><operator pos:line="14" pos:column="24">&amp;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="25">sWS2Opts<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="35">0<pos:position pos:line="14" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="38">sizeof<argument_list pos:line="14" pos:column="44">(<argument><expr pos:line="14" pos:column="45">struct <name pos:line="14" pos:column="52">tlsclientopts<pos:position pos:line="14" pos:column="65"/></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">memset<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><operator pos:line="15" pos:column="16">(<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">char<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></operator><operator pos:line="15" pos:column="23">)<pos:position pos:line="15" pos:column="24"/></operator><operator pos:line="15" pos:column="24">&amp;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="25">sNWTLSOpts<pos:position pos:line="15" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="37">0<pos:position pos:line="15" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="40">sizeof<argument_list pos:line="15" pos:column="46">(<argument><expr pos:line="15" pos:column="47">struct <name pos:line="15" pos:column="54">nwtlsopts<pos:position pos:line="15" pos:column="63"/></name></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="66"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* turn on ssl for the socket */</comment>
        <expr_stmt><expr><name pos:line="18" pos:column="9">ulFlags<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <operator pos:line="18" pos:column="19">(<pos:position pos:line="18" pos:column="20"/></operator><ternary><condition><expr><name pos:line="18" pos:column="20">numcerts<pos:position pos:line="18" pos:column="28"/></name></expr> ?<pos:position pos:line="18" pos:column="30"/></condition><then pos:line="18" pos:column="30"> <expr><name pos:line="18" pos:column="31">SO_TLS_ENABLE<pos:position pos:line="18" pos:column="44"/></name></expr> <pos:position pos:line="18" pos:column="45"/></then><else pos:line="18" pos:column="45">: <expr><name pos:line="18" pos:column="47">SO_TLS_ENABLE<pos:position pos:line="18" pos:column="60"/></name> <operator pos:line="18" pos:column="61">|<pos:position pos:line="18" pos:column="62"/></operator> <name pos:line="18" pos:column="63">SO_TLS_BLIND_ACCEPT<pos:position pos:line="18" pos:column="82"/></name></expr></else></ternary><operator pos:line="18" pos:column="82">)<pos:position pos:line="18" pos:column="83"/></operator></expr>;<pos:position pos:line="18" pos:column="84"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">rcode<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <call><name pos:line="19" pos:column="17">WSAIoctl<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">sock<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="32">SO_TLS_SET_FLAGS<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="50">&amp;<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="51">ulFlags<pos:position pos:line="19" pos:column="58"/></name></expr></argument>, <argument><expr pos:line="19" pos:column="60">sizeof<operator pos:line="19" pos:column="66">(<pos:position pos:line="19" pos:column="67"/></operator><name pos:line="19" pos:column="67">unsigned<pos:position pos:line="19" pos:column="75"/></name> <name pos:line="19" pos:column="76">long<pos:position pos:line="19" pos:column="80"/></name><operator pos:line="19" pos:column="80">)<pos:position pos:line="19" pos:column="81"/></operator></expr></argument>,
                     <argument><expr><name pos:line="20" pos:column="22">NULL<pos:position pos:line="20" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="28">0<pos:position pos:line="20" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="31">NULL<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="37">NULL<pos:position pos:line="20" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="43">NULL<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">SOCKET_ERROR<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">==<pos:position pos:line="21" pos:column="28"/></operator> <name pos:line="21" pos:column="29">rcode<pos:position pos:line="21" pos:column="34"/></name></expr>)<pos:position pos:line="21" pos:column="35"/></condition><then pos:line="21" pos:column="35">
        <block pos:line="22" pos:column="9">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">ap_log_error<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">APLOG_MARK<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">APLOG_ERR<pos:position pos:line="23" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="45">0<pos:position pos:line="23" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="48">c<pos:position pos:line="23" pos:column="49"/></name><operator pos:line="23" pos:column="49">-&gt;<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="51">base_server<pos:position pos:line="23" pos:column="62"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="24" pos:column="22">"Error: %d with ioctlsocket(flag SO_TLS_ENABLE)"<pos:position pos:line="24" pos:column="70"/></literal></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="72">WSAGetLastError<pos:position pos:line="24" pos:column="87"/></name><argument_list pos:line="24" pos:column="87">()<pos:position pos:line="24" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="91"/></expr_stmt>
                <return pos:line="25" pos:column="17">return <expr><name pos:line="25" pos:column="24">rcode<pos:position pos:line="25" pos:column="29"/></name></expr>;<pos:position pos:line="25" pos:column="30"/></return>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>

    <expr_stmt><expr><name pos:line="28" pos:column="5">ulFlags<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <name pos:line="28" pos:column="15">SO_TLS_UNCLEAN_SHUTDOWN<pos:position pos:line="28" pos:column="38"/></name></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">WSAIoctl<pos:position pos:line="29" pos:column="17"/></name><argument_list pos:line="29" pos:column="17">(<argument><expr><name pos:line="29" pos:column="18">sock<pos:position pos:line="29" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="24">SO_TLS_SET_FLAGS<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="42">&amp;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="43">ulFlags<pos:position pos:line="29" pos:column="50"/></name></expr></argument>, <argument><expr pos:line="29" pos:column="52">sizeof<operator pos:line="29" pos:column="58">(<pos:position pos:line="29" pos:column="59"/></operator><name pos:line="29" pos:column="59">unsigned<pos:position pos:line="29" pos:column="67"/></name> <name pos:line="29" pos:column="68">long<pos:position pos:line="29" pos:column="72"/></name><operator pos:line="29" pos:column="72">)<pos:position pos:line="29" pos:column="73"/></operator></expr></argument>,
                     <argument><expr><name pos:line="30" pos:column="22">NULL<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="28">0<pos:position pos:line="30" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="31">NULL<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="37">NULL<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="43">NULL<pos:position pos:line="30" pos:column="47"/></name></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="49"/></expr_stmt>

    <comment type="block" pos:line="32" pos:column="5">/* setup the socket for SSL */</comment>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">memset<pos:position pos:line="33" pos:column="11"/></name> <argument_list pos:line="33" pos:column="12">(<argument><expr><operator pos:line="33" pos:column="13">&amp;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="14">sWS2Opts<pos:position pos:line="33" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="24">0<pos:position pos:line="33" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="27">sizeof<argument_list pos:line="33" pos:column="33">(<argument><expr><name pos:line="33" pos:column="34">sWS2Opts<pos:position pos:line="33" pos:column="42"/></name></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">memset<pos:position pos:line="34" pos:column="11"/></name> <argument_list pos:line="34" pos:column="12">(<argument><expr><operator pos:line="34" pos:column="13">&amp;<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="14">sNWTLSOpts<pos:position pos:line="34" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="26">0<pos:position pos:line="34" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="29">sizeof<argument_list pos:line="34" pos:column="35">(<argument><expr><name pos:line="34" pos:column="36">sNWTLSOpts<pos:position pos:line="34" pos:column="46"/></name></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">sWS2Opts<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">.<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">options<pos:position pos:line="35" pos:column="21"/></name></name> <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <operator pos:line="35" pos:column="24">&amp;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="25">sNWTLSOpts<pos:position pos:line="35" pos:column="35"/></name></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">numcerts<pos:position pos:line="37" pos:column="17"/></name></expr>)<pos:position pos:line="37" pos:column="18"/></condition><then pos:line="37" pos:column="18"> <block pos:line="37" pos:column="19">{
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">sNWTLSOpts<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">.<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">walletProvider<pos:position pos:line="38" pos:column="34"/></name></name> <operator pos:line="38" pos:column="35">=<pos:position pos:line="38" pos:column="36"/></operator> <name pos:line="38" pos:column="37">WAL_PROV_DER<pos:position pos:line="38" pos:column="49"/></name></expr>;<pos:position pos:line="38" pos:column="50"/></expr_stmt>   <comment type="line" pos:line="38" pos:column="53">//the wallet provider defined in wdefs.h</comment>
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">sNWTLSOpts<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">.<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="20">TrustedRootList<pos:position pos:line="39" pos:column="35"/></name></name> <operator pos:line="39" pos:column="36">=<pos:position pos:line="39" pos:column="37"/></operator> <name pos:line="39" pos:column="38">certarray<pos:position pos:line="39" pos:column="47"/></name></expr>;<pos:position pos:line="39" pos:column="48"/></expr_stmt>     <comment type="line" pos:line="39" pos:column="53">//array of certs in UNICODE format</comment>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">sNWTLSOpts<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">.<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="20">numElementsInTRList<pos:position pos:line="40" pos:column="39"/></name></name> <operator pos:line="40" pos:column="40">=<pos:position pos:line="40" pos:column="41"/></operator> <name pos:line="40" pos:column="42">numcerts<pos:position pos:line="40" pos:column="50"/></name></expr>;<pos:position pos:line="40" pos:column="51"/></expr_stmt>  <comment type="line" pos:line="40" pos:column="53">//number of certs in TRList</comment>
    }<pos:position pos:line="41" pos:column="6"/></block></then>
    <else pos:line="42" pos:column="5">else <block pos:line="42" pos:column="10">{
        <comment type="block" pos:line="43" pos:column="9">/* setup the socket for SSL */</comment>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">unicpy<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><name pos:line="44" pos:column="16">keyFileName<pos:position pos:line="44" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="29">L"SSL CertificateIP"<pos:position pos:line="44" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">sWS2Opts<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">.<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="18">wallet<pos:position pos:line="45" pos:column="24"/></name></name> <operator pos:line="45" pos:column="25">=<pos:position pos:line="45" pos:column="26"/></operator> <name pos:line="45" pos:column="27">keyFileName<pos:position pos:line="45" pos:column="38"/></name></expr>;<pos:position pos:line="45" pos:column="39"/></expr_stmt>    <comment type="block" pos:line="45" pos:column="43">/* no client certificate */</comment>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">sWS2Opts<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">.<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="18">walletlen<pos:position pos:line="46" pos:column="27"/></name></name> <operator pos:line="46" pos:column="28">=<pos:position pos:line="46" pos:column="29"/></operator> <call><name pos:line="46" pos:column="30">unilen<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><name pos:line="46" pos:column="37">keyFileName<pos:position pos:line="46" pos:column="48"/></name></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="50"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="48" pos:column="9">sNWTLSOpts<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">.<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">walletProvider<pos:position pos:line="48" pos:column="34"/></name></name> <operator pos:line="48" pos:column="35">=<pos:position pos:line="48" pos:column="36"/></operator> <name pos:line="48" pos:column="37">WAL_PROV_KMO<pos:position pos:line="48" pos:column="49"/></name></expr>;<pos:position pos:line="48" pos:column="50"/></expr_stmt>  <comment type="line" pos:line="48" pos:column="52">//the wallet provider defined in wdefs.h</comment>
    }<pos:position pos:line="49" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="51" pos:column="5">/* make the IOCTL call */</comment>
    <expr_stmt><expr><name pos:line="52" pos:column="5">rcode<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">=<pos:position pos:line="52" pos:column="12"/></operator> <call><name pos:line="52" pos:column="13">WSAIoctl<pos:position pos:line="52" pos:column="21"/></name><argument_list pos:line="52" pos:column="21">(<argument><expr><name pos:line="52" pos:column="22">sock<pos:position pos:line="52" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="28">SO_TLS_SET_CLIENT<pos:position pos:line="52" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="47">&amp;<pos:position pos:line="52" pos:column="52"/></operator><name pos:line="52" pos:column="48">sWS2Opts<pos:position pos:line="52" pos:column="56"/></name></expr></argument>,
                     <argument><expr><sizeof pos:line="53" pos:column="22">sizeof<argument_list pos:line="53" pos:column="28">(<argument><expr pos:line="53" pos:column="29">struct <name pos:line="53" pos:column="36">tlsclientopts<pos:position pos:line="53" pos:column="49"/></name></expr></argument>)<pos:position pos:line="53" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="53" pos:column="52">NULL<pos:position pos:line="53" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="58">0<pos:position pos:line="53" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="61">NULL<pos:position pos:line="53" pos:column="65"/></name></expr></argument>,
                     <argument><expr><name pos:line="54" pos:column="22">NULL<pos:position pos:line="54" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="28">NULL<pos:position pos:line="54" pos:column="32"/></name></expr></argument>)<pos:position pos:line="54" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="56" pos:column="5">/* make sure that it was successfull */</comment>
        <if pos:line="57" pos:column="9">if<condition pos:line="57" pos:column="11">(<expr><name pos:line="57" pos:column="12">SOCKET_ERROR<pos:position pos:line="57" pos:column="24"/></name> <operator pos:line="57" pos:column="25">==<pos:position pos:line="57" pos:column="27"/></operator> <name pos:line="57" pos:column="28">rcode<pos:position pos:line="57" pos:column="33"/></name></expr> )<pos:position pos:line="57" pos:column="35"/></condition><then><block pos:line="57" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">ap_log_error<pos:position pos:line="58" pos:column="21"/></name><argument_list pos:line="58" pos:column="21">(<argument><expr><name pos:line="58" pos:column="22">APLOG_MARK<pos:position pos:line="58" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="34">APLOG_ERR<pos:position pos:line="58" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="45">0<pos:position pos:line="58" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="48">c<pos:position pos:line="58" pos:column="49"/></name><operator pos:line="58" pos:column="49">-&gt;<pos:position pos:line="58" pos:column="54"/></operator><name pos:line="58" pos:column="51">base_server<pos:position pos:line="58" pos:column="62"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="59" pos:column="22">"Error: %d with ioctl (SO_TLS_SET_CLIENT)"<pos:position pos:line="59" pos:column="64"/></literal></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="66">WSAGetLastError<pos:position pos:line="59" pos:column="81"/></name><argument_list pos:line="59" pos:column="81">()<pos:position pos:line="59" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="85"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>
        <return pos:line="61" pos:column="9">return <expr><name pos:line="61" pos:column="16">rcode<pos:position pos:line="61" pos:column="21"/></name></expr>;<pos:position pos:line="61" pos:column="22"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

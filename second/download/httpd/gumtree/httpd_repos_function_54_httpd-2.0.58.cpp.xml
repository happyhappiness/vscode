<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_54_httpd-2.0.58.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">to_dbm<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">apr_dbm_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">dbm<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">apr_file_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">fp<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">apr_pool_t<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">pool<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">APR_SUCCESS<pos:position pos:line="3" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">line<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">REWRITE_MAX_TXT_MAP_LINE<pos:position pos:line="4" pos:column="39"/></name> <operator pos:line="4" pos:column="40">+<pos:position pos:line="4" pos:column="41"/></operator> <literal type="number" pos:line="4" pos:column="42">1<pos:position pos:line="4" pos:column="43"/></literal></expr>]<pos:position pos:line="4" pos:column="44"/></index></name></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt> <comment type="block" pos:line="4" pos:column="46">/* +1 for \0 */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_datum_t<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">dbmkey<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_datum_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">dbmval<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_pool_t<pos:position pos:line="7" pos:column="15"/></name><modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type> <name pos:line="7" pos:column="17">p<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">apr_pool_create<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><operator pos:line="9" pos:column="21">&amp;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="22">p<pos:position pos:line="9" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="25">pool<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>

    <while pos:line="11" pos:column="5">while <condition pos:line="11" pos:column="11">(<expr><call><name pos:line="11" pos:column="12">apr_file_gets<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">line<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="32">sizeof<argument_list pos:line="11" pos:column="38">(<argument><expr><name pos:line="11" pos:column="39">line<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">fp<pos:position pos:line="11" pos:column="48"/></name></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call> <operator pos:line="11" pos:column="50">==<pos:position pos:line="11" pos:column="52"/></operator> <name pos:line="11" pos:column="53">APR_SUCCESS<pos:position pos:line="11" pos:column="64"/></name></expr>)<pos:position pos:line="11" pos:column="65"/></condition> <block pos:line="11" pos:column="66">{
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">c<pos:position pos:line="12" pos:column="16"/></name></decl>, <modifier pos:line="12" pos:column="18">*<pos:position pos:line="12" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="19">value<pos:position pos:line="12" pos:column="24"/></name></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>

        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">*<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">line<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">==<pos:position pos:line="14" pos:column="21"/></operator> <literal type="char" pos:line="14" pos:column="22">'#'<pos:position pos:line="14" pos:column="25"/></literal> <operator pos:line="14" pos:column="26">||<pos:position pos:line="14" pos:column="28"/></operator> <call><name pos:line="14" pos:column="29">apr_isspace<pos:position pos:line="14" pos:column="40"/></name><argument_list pos:line="14" pos:column="40">(<argument><expr><operator pos:line="14" pos:column="41">*<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="42">line<pos:position pos:line="14" pos:column="46"/></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="48"/></condition><then pos:line="14" pos:column="48"> <block pos:line="14" pos:column="49">{
            <continue pos:line="15" pos:column="13">continue;<pos:position pos:line="15" pos:column="22"/></continue>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="18" pos:column="9">c<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <name pos:line="18" pos:column="13">line<pos:position pos:line="18" pos:column="17"/></name></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>

        <while pos:line="20" pos:column="9">while <condition pos:line="20" pos:column="15">(<expr><operator pos:line="20" pos:column="16">*<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">c<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">&amp;&amp;<pos:position pos:line="20" pos:column="29"/></operator> <operator pos:line="20" pos:column="22">!<pos:position pos:line="20" pos:column="23"/></operator><call><name pos:line="20" pos:column="23">apr_isspace<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><operator pos:line="20" pos:column="35">*<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">c<pos:position pos:line="20" pos:column="37"/></name></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="39"/></condition> <block pos:line="20" pos:column="40">{
            <expr_stmt><expr><operator pos:line="21" pos:column="13">++<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">c<pos:position pos:line="21" pos:column="16"/></name></expr>;<pos:position pos:line="21" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></while>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><operator pos:line="24" pos:column="14">*<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">c<pos:position pos:line="24" pos:column="16"/></name></expr>)<pos:position pos:line="24" pos:column="17"/></condition><then pos:line="24" pos:column="17"> <block pos:line="24" pos:column="18">{
            <comment type="block" pos:line="25" pos:column="13">/* no value. solid line of data. */</comment>
            <continue pos:line="26" pos:column="13">continue;<pos:position pos:line="26" pos:column="22"/></continue>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="29" pos:column="9">dbmkey<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">.<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">dptr<pos:position pos:line="29" pos:column="20"/></name></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <call><name pos:line="29" pos:column="23">apr_pstrmemdup<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">p<pos:position pos:line="29" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="41">line<pos:position pos:line="29" pos:column="45"/></name></expr></argument>,  <argument><expr><name pos:line="29" pos:column="48">c<pos:position pos:line="29" pos:column="49"/></name> <operator pos:line="29" pos:column="50">-<pos:position pos:line="29" pos:column="51"/></operator> <name pos:line="29" pos:column="52">line<pos:position pos:line="29" pos:column="56"/></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">dbmkey<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">.<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="16">dsize<pos:position pos:line="30" pos:column="21"/></name></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <operator pos:line="30" pos:column="24">(<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">c<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">-<pos:position pos:line="30" pos:column="28"/></operator> <name pos:line="30" pos:column="29">line<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">)<pos:position pos:line="30" pos:column="34"/></operator></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt>

        <while pos:line="32" pos:column="9">while <condition pos:line="32" pos:column="15">(<expr><operator pos:line="32" pos:column="16">*<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">c<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">&amp;&amp;<pos:position pos:line="32" pos:column="29"/></operator> <call><name pos:line="32" pos:column="22">apr_isspace<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><operator pos:line="32" pos:column="34">*<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="35">c<pos:position pos:line="32" pos:column="36"/></name></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="38"/></condition> <block pos:line="32" pos:column="39">{
            <expr_stmt><expr><operator pos:line="33" pos:column="13">++<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">c<pos:position pos:line="33" pos:column="16"/></name></expr>;<pos:position pos:line="33" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></while>

        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><operator pos:line="36" pos:column="14">*<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">c<pos:position pos:line="36" pos:column="16"/></name></expr>)<pos:position pos:line="36" pos:column="17"/></condition><then pos:line="36" pos:column="17"> <block pos:line="36" pos:column="18">{
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">apr_pool_clear<pos:position pos:line="37" pos:column="27"/></name><argument_list pos:line="37" pos:column="27">(<argument><expr><name pos:line="37" pos:column="28">p<pos:position pos:line="37" pos:column="29"/></name></expr></argument>)<pos:position pos:line="37" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>
            <continue pos:line="38" pos:column="13">continue;<pos:position pos:line="38" pos:column="22"/></continue>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="41" pos:column="9">value<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <name pos:line="41" pos:column="17">c<pos:position pos:line="41" pos:column="18"/></name></expr>;<pos:position pos:line="41" pos:column="19"/></expr_stmt>

        <while pos:line="43" pos:column="9">while <condition pos:line="43" pos:column="15">(<expr><operator pos:line="43" pos:column="16">*<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="17">c<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">&amp;&amp;<pos:position pos:line="43" pos:column="29"/></operator> <operator pos:line="43" pos:column="22">!<pos:position pos:line="43" pos:column="23"/></operator><call><name pos:line="43" pos:column="23">apr_isspace<pos:position pos:line="43" pos:column="34"/></name><argument_list pos:line="43" pos:column="34">(<argument><expr><operator pos:line="43" pos:column="35">*<pos:position pos:line="43" pos:column="36"/></operator><name pos:line="43" pos:column="36">c<pos:position pos:line="43" pos:column="37"/></name></expr></argument>)<pos:position pos:line="43" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="39"/></condition> <block pos:line="43" pos:column="40">{
            <expr_stmt><expr><operator pos:line="44" pos:column="13">++<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">c<pos:position pos:line="44" pos:column="16"/></name></expr>;<pos:position pos:line="44" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></while>

        <expr_stmt><expr><name><name pos:line="47" pos:column="9">dbmval<pos:position pos:line="47" pos:column="15"/></name><operator pos:line="47" pos:column="15">.<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="16">dptr<pos:position pos:line="47" pos:column="20"/></name></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <call><name pos:line="47" pos:column="23">apr_pstrmemdup<pos:position pos:line="47" pos:column="37"/></name><argument_list pos:line="47" pos:column="37">(<argument><expr><name pos:line="47" pos:column="38">p<pos:position pos:line="47" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="41">value<pos:position pos:line="47" pos:column="46"/></name></expr></argument>,  <argument><expr><name pos:line="47" pos:column="49">c<pos:position pos:line="47" pos:column="50"/></name> <operator pos:line="47" pos:column="51">-<pos:position pos:line="47" pos:column="52"/></operator> <name pos:line="47" pos:column="53">value<pos:position pos:line="47" pos:column="58"/></name></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="48" pos:column="9">dbmval<pos:position pos:line="48" pos:column="15"/></name><operator pos:line="48" pos:column="15">.<pos:position pos:line="48" pos:column="16"/></operator><name pos:line="48" pos:column="16">dsize<pos:position pos:line="48" pos:column="21"/></name></name> <operator pos:line="48" pos:column="22">=<pos:position pos:line="48" pos:column="23"/></operator> <operator pos:line="48" pos:column="24">(<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="25">c<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">-<pos:position pos:line="48" pos:column="28"/></operator> <name pos:line="48" pos:column="29">line<pos:position pos:line="48" pos:column="33"/></name><operator pos:line="48" pos:column="33">)<pos:position pos:line="48" pos:column="34"/></operator></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>

        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">verbose<pos:position pos:line="50" pos:column="20"/></name></expr>)<pos:position pos:line="50" pos:column="21"/></condition><then pos:line="50" pos:column="21"> <block pos:line="50" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">apr_file_printf<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">errfile<pos:position pos:line="51" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="38">"    '%s' -&gt; '%s'"<pos:position pos:line="51" pos:column="59"/></literal><name pos:line="51" pos:column="56">NL<pos:position pos:line="51" pos:column="58"/></name></expr></argument>,
                            <argument><expr><name><name pos:line="52" pos:column="29">dbmkey<pos:position pos:line="52" pos:column="35"/></name><operator pos:line="52" pos:column="35">.<pos:position pos:line="52" pos:column="36"/></operator><name pos:line="52" pos:column="36">dptr<pos:position pos:line="52" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="42">dbmval<pos:position pos:line="52" pos:column="48"/></name><operator pos:line="52" pos:column="48">.<pos:position pos:line="52" pos:column="49"/></operator><name pos:line="52" pos:column="49">dptr<pos:position pos:line="52" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="55" pos:column="9">rv<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <call><name pos:line="55" pos:column="14">apr_dbm_store<pos:position pos:line="55" pos:column="27"/></name><argument_list pos:line="55" pos:column="27">(<argument><expr><name pos:line="55" pos:column="28">dbm<pos:position pos:line="55" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="33">dbmkey<pos:position pos:line="55" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="41">dbmval<pos:position pos:line="55" pos:column="47"/></name></expr></argument>)<pos:position pos:line="55" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="49"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="57" pos:column="9">apr_pool_clear<pos:position pos:line="57" pos:column="23"/></name><argument_list pos:line="57" pos:column="23">(<argument><expr><name pos:line="57" pos:column="24">p<pos:position pos:line="57" pos:column="25"/></name></expr></argument>)<pos:position pos:line="57" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>

        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">rv<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">!=<pos:position pos:line="59" pos:column="18"/></operator> <name pos:line="59" pos:column="19">APR_SUCCESS<pos:position pos:line="59" pos:column="30"/></name></expr>)<pos:position pos:line="59" pos:column="31"/></condition><then pos:line="59" pos:column="31"> <block pos:line="59" pos:column="32">{
            <break pos:line="60" pos:column="13">break;<pos:position pos:line="60" pos:column="19"/></break>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>
    }<pos:position pos:line="62" pos:column="6"/></block></while>

    <return pos:line="64" pos:column="5">return <expr><name pos:line="64" pos:column="12">rv<pos:position pos:line="64" pos:column="14"/></name></expr>;<pos:position pos:line="64" pos:column="15"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

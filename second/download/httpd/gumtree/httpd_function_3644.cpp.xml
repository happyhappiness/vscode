<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3644.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dumpio_output_filter<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">ap_filter_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">f<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">apr_bucket_brigade<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">bb<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_bucket<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">b<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">conn_rec<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">c<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name><name pos:line="4" pos:column="19">f<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">-&gt;<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="22">c<pos:position pos:line="4" pos:column="23"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">dumpio_conf_t<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">ptr<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><name><name pos:line="5" pos:column="26">f<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">ctx<pos:position pos:line="5" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">ap_log_error<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name pos:line="7" pos:column="18">APLOG_MARK<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="30">APLOG_TRACE7<pos:position pos:line="7" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="44">0<pos:position pos:line="7" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="47">c<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">-&gt;<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="50">base_server<pos:position pos:line="7" pos:column="61"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="63">"mod_dumpio: %s"<pos:position pos:line="7" pos:column="79"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="81">f<pos:position pos:line="7" pos:column="82"/></name><operator pos:line="7" pos:column="82">-&gt;<pos:position pos:line="7" pos:column="87"/></operator><name pos:line="7" pos:column="84">frec<pos:position pos:line="7" pos:column="88"/></name><operator pos:line="7" pos:column="88">-&gt;<pos:position pos:line="7" pos:column="93"/></operator><name pos:line="7" pos:column="90">name<pos:position pos:line="7" pos:column="94"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="95"/></argument_list></call></expr> ;<pos:position pos:line="7" pos:column="97"/></expr_stmt>

    <for pos:line="9" pos:column="5">for <control pos:line="9" pos:column="9">(<init><expr><name pos:line="9" pos:column="10">b<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">APR_BRIGADE_FIRST<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name pos:line="9" pos:column="32">bb<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></init> <condition><expr><name pos:line="9" pos:column="37">b<pos:position pos:line="9" pos:column="38"/></name> <operator pos:line="9" pos:column="39">!=<pos:position pos:line="9" pos:column="41"/></operator> <call><name pos:line="9" pos:column="42">APR_BRIGADE_SENTINEL<pos:position pos:line="9" pos:column="62"/></name><argument_list pos:line="9" pos:column="62">(<argument><expr><name pos:line="9" pos:column="63">bb<pos:position pos:line="9" pos:column="65"/></name></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="67"/></condition> <incr><expr><name pos:line="9" pos:column="68">b<pos:position pos:line="9" pos:column="69"/></name> <operator pos:line="9" pos:column="70">=<pos:position pos:line="9" pos:column="71"/></operator> <call><name pos:line="9" pos:column="72">APR_BUCKET_NEXT<pos:position pos:line="9" pos:column="87"/></name><argument_list pos:line="9" pos:column="87">(<argument><expr><name pos:line="9" pos:column="88">b<pos:position pos:line="9" pos:column="89"/></name></expr></argument>)<pos:position pos:line="9" pos:column="90"/></argument_list></call></expr></incr>)<pos:position pos:line="9" pos:column="91"/></control> <block pos:line="9" pos:column="92">{
        <comment type="block" pos:line="10" pos:column="9">/*
         * If we ever see an EOS, make sure to FLUSH.
         */</comment>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">APR_BUCKET_IS_EOS<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">b<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="34"/></condition><then pos:line="13" pos:column="34"> <block pos:line="13" pos:column="35">{
            <decl_stmt><decl><type><name pos:line="14" pos:column="13">apr_bucket<pos:position pos:line="14" pos:column="23"/></name> <modifier pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></modifier></type><name pos:line="14" pos:column="25">flush<pos:position pos:line="14" pos:column="30"/></name> <init pos:line="14" pos:column="31">= <expr><call><name pos:line="14" pos:column="33">apr_bucket_flush_create<pos:position pos:line="14" pos:column="56"/></name><argument_list pos:line="14" pos:column="56">(<argument><expr><name><name pos:line="14" pos:column="57">f<pos:position pos:line="14" pos:column="58"/></name><operator pos:line="14" pos:column="58">-&gt;<pos:position pos:line="14" pos:column="63"/></operator><name pos:line="14" pos:column="60">c<pos:position pos:line="14" pos:column="61"/></name><operator pos:line="14" pos:column="61">-&gt;<pos:position pos:line="14" pos:column="66"/></operator><name pos:line="14" pos:column="63">bucket_alloc<pos:position pos:line="14" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="77"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">APR_BUCKET_INSERT_BEFORE<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">b<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="41">flush<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">dumpit<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">f<pos:position pos:line="17" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="19">b<pos:position pos:line="17" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="22">ptr<pos:position pos:line="17" pos:column="25"/></name></expr></argument>)<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></for>

    <return pos:line="20" pos:column="5">return <expr><call><name pos:line="20" pos:column="12">ap_pass_brigade<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name><name pos:line="20" pos:column="28">f<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">next<pos:position pos:line="20" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="37">bb<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr> ;<pos:position pos:line="20" pos:column="42"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

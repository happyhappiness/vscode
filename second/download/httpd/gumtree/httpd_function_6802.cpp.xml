<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6802.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_mplx_idle<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">h2_mplx<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">m<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">status<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name pos:line="3" pos:column="27">APR_SUCCESS<pos:position pos:line="3" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_time_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">now<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>            
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">scount<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">H2_MPLX_ENTER<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">m<pos:position pos:line="7" pos:column="20"/></name></expr></argument>)<pos:position pos:line="7" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">scount<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">h2_ihash_count<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name><name pos:line="9" pos:column="29">m<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">streams<pos:position pos:line="9" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">scount<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">&gt;<pos:position pos:line="10" pos:column="20"/></operator> <literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr>)<pos:position pos:line="10" pos:column="20"/></condition><then pos:line="10" pos:column="20"> <block pos:line="10" pos:column="21">{
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">m<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">tasks_active<pos:position pos:line="11" pos:column="28"/></name></name></expr>)<pos:position pos:line="11" pos:column="29"/></condition><then pos:line="11" pos:column="29"> <block pos:line="11" pos:column="30">{
            <comment type="block" pos:line="12" pos:column="13">/* If we have streams in connection state 'IDLE', meaning
             * all streams are ready to sent data out, but lack
             * WINDOW_UPDATEs. 
             * 
             * This is ok, unless we have streams that still occupy
             * h2 workers. As worker threads are a scarce resource, 
             * we need to take measures that we do not get DoSed.
             * 
             * This is what we call an 'idle block'. Limit the amount 
             * of busy workers we allow for this connection until it
             * well behaves.
             */</comment>
            <expr_stmt><expr><name pos:line="24" pos:column="13">now<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <call><name pos:line="24" pos:column="19">apr_time_now<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">()<pos:position pos:line="24" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="25" pos:column="13">m<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">last_idle_block<pos:position pos:line="25" pos:column="31"/></name></name> <operator pos:line="25" pos:column="32">=<pos:position pos:line="25" pos:column="33"/></operator> <name pos:line="25" pos:column="34">now<pos:position pos:line="25" pos:column="37"/></name></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><name><name pos:line="26" pos:column="17">m<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">limit_active<pos:position pos:line="26" pos:column="32"/></name></name> <operator pos:line="26" pos:column="33">&gt;<pos:position pos:line="26" pos:column="37"/></operator> <literal type="number" pos:line="26" pos:column="35">2<pos:position pos:line="26" pos:column="36"/></literal> 
                <operator pos:line="27" pos:column="17">&amp;&amp;<pos:position pos:line="27" pos:column="27"/></operator> <name pos:line="27" pos:column="20">now<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">-<pos:position pos:line="27" pos:column="25"/></operator> <name><name pos:line="27" pos:column="26">m<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">last_limit_change<pos:position pos:line="27" pos:column="46"/></name></name> <operator pos:line="27" pos:column="47">&gt;=<pos:position pos:line="27" pos:column="52"/></operator> <name><name pos:line="27" pos:column="50">m<pos:position pos:line="27" pos:column="51"/></name><operator pos:line="27" pos:column="51">-&gt;<pos:position pos:line="27" pos:column="56"/></operator><name pos:line="27" pos:column="53">limit_change_interval<pos:position pos:line="27" pos:column="74"/></name></name></expr>)<pos:position pos:line="27" pos:column="75"/></condition><then pos:line="27" pos:column="75"> <block pos:line="27" pos:column="76">{
                <if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name><name pos:line="28" pos:column="21">m<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">limit_active<pos:position pos:line="28" pos:column="36"/></name></name> <operator pos:line="28" pos:column="37">&gt;<pos:position pos:line="28" pos:column="41"/></operator> <literal type="number" pos:line="28" pos:column="39">16<pos:position pos:line="28" pos:column="41"/></literal></expr>)<pos:position pos:line="28" pos:column="42"/></condition><then pos:line="28" pos:column="42"> <block pos:line="28" pos:column="43">{
                    <expr_stmt><expr><name><name pos:line="29" pos:column="21">m<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">limit_active<pos:position pos:line="29" pos:column="36"/></name></name> <operator pos:line="29" pos:column="37">=<pos:position pos:line="29" pos:column="38"/></operator> <literal type="number" pos:line="29" pos:column="39">16<pos:position pos:line="29" pos:column="41"/></literal></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt>
                }<pos:position pos:line="30" pos:column="18"/></block></then>
                <elseif pos:line="31" pos:column="17">else <if pos:line="31" pos:column="22">if <condition pos:line="31" pos:column="25">(<expr><name><name pos:line="31" pos:column="26">m<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">-&gt;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="29">limit_active<pos:position pos:line="31" pos:column="41"/></name></name> <operator pos:line="31" pos:column="42">&gt;<pos:position pos:line="31" pos:column="46"/></operator> <literal type="number" pos:line="31" pos:column="44">8<pos:position pos:line="31" pos:column="45"/></literal></expr>)<pos:position pos:line="31" pos:column="46"/></condition><then pos:line="31" pos:column="46"> <block pos:line="31" pos:column="47">{
                    <expr_stmt><expr><name><name pos:line="32" pos:column="21">m<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">-&gt;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="24">limit_active<pos:position pos:line="32" pos:column="36"/></name></name> <operator pos:line="32" pos:column="37">=<pos:position pos:line="32" pos:column="38"/></operator> <literal type="number" pos:line="32" pos:column="39">8<pos:position pos:line="32" pos:column="40"/></literal></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="33" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="34" pos:column="17">else <if pos:line="34" pos:column="22">if <condition pos:line="34" pos:column="25">(<expr><name><name pos:line="34" pos:column="26">m<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">-&gt;<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="29">limit_active<pos:position pos:line="34" pos:column="41"/></name></name> <operator pos:line="34" pos:column="42">&gt;<pos:position pos:line="34" pos:column="46"/></operator> <literal type="number" pos:line="34" pos:column="44">4<pos:position pos:line="34" pos:column="45"/></literal></expr>)<pos:position pos:line="34" pos:column="46"/></condition><then pos:line="34" pos:column="46"> <block pos:line="34" pos:column="47">{
                    <expr_stmt><expr><name><name pos:line="35" pos:column="21">m<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">-&gt;<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="24">limit_active<pos:position pos:line="35" pos:column="36"/></name></name> <operator pos:line="35" pos:column="37">=<pos:position pos:line="35" pos:column="38"/></operator> <literal type="number" pos:line="35" pos:column="39">4<pos:position pos:line="35" pos:column="40"/></literal></expr>;<pos:position pos:line="35" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="36" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="37" pos:column="17">else <if pos:line="37" pos:column="22">if <condition pos:line="37" pos:column="25">(<expr><name><name pos:line="37" pos:column="26">m<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">-&gt;<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="29">limit_active<pos:position pos:line="37" pos:column="41"/></name></name> <operator pos:line="37" pos:column="42">&gt;<pos:position pos:line="37" pos:column="46"/></operator> <literal type="number" pos:line="37" pos:column="44">2<pos:position pos:line="37" pos:column="45"/></literal></expr>)<pos:position pos:line="37" pos:column="46"/></condition><then pos:line="37" pos:column="46"> <block pos:line="37" pos:column="47">{
                    <expr_stmt><expr><name><name pos:line="38" pos:column="21">m<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-&gt;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="24">limit_active<pos:position pos:line="38" pos:column="36"/></name></name> <operator pos:line="38" pos:column="37">=<pos:position pos:line="38" pos:column="38"/></operator> <literal type="number" pos:line="38" pos:column="39">2<pos:position pos:line="38" pos:column="40"/></literal></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="39" pos:column="18"/></block></then></if></elseif></if>
                <expr_stmt><expr><name><name pos:line="40" pos:column="17">m<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">-&gt;<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="20">last_limit_change<pos:position pos:line="40" pos:column="37"/></name></name> <operator pos:line="40" pos:column="38">=<pos:position pos:line="40" pos:column="39"/></operator> <name pos:line="40" pos:column="40">now<pos:position pos:line="40" pos:column="43"/></name></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="41" pos:column="17">ap_log_cerror<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><name pos:line="41" pos:column="31">APLOG_MARK<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="43">APLOG_TRACE1<pos:position pos:line="41" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="57">0<pos:position pos:line="41" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="60">m<pos:position pos:line="41" pos:column="61"/></name><operator pos:line="41" pos:column="61">-&gt;<pos:position pos:line="41" pos:column="66"/></operator><name pos:line="41" pos:column="63">c<pos:position pos:line="41" pos:column="64"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="42" pos:column="31">"h2_mplx(%ld): decrease worker limit to %d"<pos:position pos:line="42" pos:column="74"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="43" pos:column="31">m<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">-&gt;<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="34">id<pos:position pos:line="43" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="38">m<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">-&gt;<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="41">limit_active<pos:position pos:line="43" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="55"/></expr_stmt>
            }<pos:position pos:line="44" pos:column="14"/></block></then></if>
            
            <if pos:line="46" pos:column="13">if <condition pos:line="46" pos:column="16">(<expr><name><name pos:line="46" pos:column="17">m<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">-&gt;<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="20">tasks_active<pos:position pos:line="46" pos:column="32"/></name></name> <operator pos:line="46" pos:column="33">&gt;<pos:position pos:line="46" pos:column="37"/></operator> <name><name pos:line="46" pos:column="35">m<pos:position pos:line="46" pos:column="36"/></name><operator pos:line="46" pos:column="36">-&gt;<pos:position pos:line="46" pos:column="41"/></operator><name pos:line="46" pos:column="38">limit_active<pos:position pos:line="46" pos:column="50"/></name></name></expr>)<pos:position pos:line="46" pos:column="51"/></condition><then pos:line="46" pos:column="51"> <block pos:line="46" pos:column="52">{
                <expr_stmt><expr><name pos:line="47" pos:column="17">status<pos:position pos:line="47" pos:column="23"/></name> <operator pos:line="47" pos:column="24">=<pos:position pos:line="47" pos:column="25"/></operator> <call><name pos:line="47" pos:column="26">unschedule_slow_tasks<pos:position pos:line="47" pos:column="47"/></name><argument_list pos:line="47" pos:column="47">(<argument><expr><name pos:line="47" pos:column="48">m<pos:position pos:line="47" pos:column="49"/></name></expr></argument>)<pos:position pos:line="47" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="48" pos:column="14"/></block></then></if>
        }<pos:position pos:line="49" pos:column="10"/></block></then>
        <elseif pos:line="50" pos:column="9">else <if pos:line="50" pos:column="14">if <condition pos:line="50" pos:column="17">(<expr><operator pos:line="50" pos:column="18">!<pos:position pos:line="50" pos:column="19"/></operator><call><name pos:line="50" pos:column="19">h2_iq_empty<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><name><name pos:line="50" pos:column="31">m<pos:position pos:line="50" pos:column="32"/></name><operator pos:line="50" pos:column="32">-&gt;<pos:position pos:line="50" pos:column="37"/></operator><name pos:line="50" pos:column="34">q<pos:position pos:line="50" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="37"/></condition><then pos:line="50" pos:column="37"> <block pos:line="50" pos:column="38">{
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">ap_log_cerror<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">APLOG_MARK<pos:position pos:line="51" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="39">APLOG_TRACE1<pos:position pos:line="51" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="53">0<pos:position pos:line="51" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="56">m<pos:position pos:line="51" pos:column="57"/></name><operator pos:line="51" pos:column="57">-&gt;<pos:position pos:line="51" pos:column="62"/></operator><name pos:line="51" pos:column="59">c<pos:position pos:line="51" pos:column="60"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="52" pos:column="27">"h2_mplx(%ld): idle, but %d streams to process"<pos:position pos:line="52" pos:column="74"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="53" pos:column="27">m<pos:position pos:line="53" pos:column="28"/></name><operator pos:line="53" pos:column="28">-&gt;<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="30">id<pos:position pos:line="53" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="34">(<pos:position pos:line="53" pos:column="35"/></operator><name pos:line="53" pos:column="35">int<pos:position pos:line="53" pos:column="38"/></name><operator pos:line="53" pos:column="38">)<pos:position pos:line="53" pos:column="39"/></operator><call><name pos:line="53" pos:column="39">h2_iq_count<pos:position pos:line="53" pos:column="50"/></name><argument_list pos:line="53" pos:column="50">(<argument><expr><name><name pos:line="53" pos:column="51">m<pos:position pos:line="53" pos:column="52"/></name><operator pos:line="53" pos:column="52">-&gt;<pos:position pos:line="53" pos:column="57"/></operator><name pos:line="53" pos:column="54">q<pos:position pos:line="53" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name pos:line="54" pos:column="13">status<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <name pos:line="54" pos:column="22">APR_EAGAIN<pos:position pos:line="54" pos:column="32"/></name></expr>;<pos:position pos:line="54" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if></elseif>
        <else pos:line="56" pos:column="9">else <block pos:line="56" pos:column="14">{
            <comment type="block" pos:line="57" pos:column="13">/* idle, have streams, but no tasks active. what are we waiting for?
             * WINDOW_UPDATEs from client? */</comment>
            <decl_stmt><decl><type><name pos:line="59" pos:column="13">h2_stream<pos:position pos:line="59" pos:column="22"/></name> <modifier pos:line="59" pos:column="23">*<pos:position pos:line="59" pos:column="24"/></modifier></type><name pos:line="59" pos:column="24">stream<pos:position pos:line="59" pos:column="30"/></name> <init pos:line="59" pos:column="31">= <expr><name pos:line="59" pos:column="33">NULL<pos:position pos:line="59" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="59" pos:column="38"/></decl_stmt>
            
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">ap_log_cerror<pos:position pos:line="61" pos:column="26"/></name><argument_list pos:line="61" pos:column="26">(<argument><expr><name pos:line="61" pos:column="27">APLOG_MARK<pos:position pos:line="61" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="39">APLOG_TRACE1<pos:position pos:line="61" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="53">0<pos:position pos:line="61" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="56">m<pos:position pos:line="61" pos:column="57"/></name><operator pos:line="61" pos:column="57">-&gt;<pos:position pos:line="61" pos:column="62"/></operator><name pos:line="61" pos:column="59">c<pos:position pos:line="61" pos:column="60"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="62" pos:column="27">"h2_mplx(%ld): idle, no tasks ongoing, %d streams"<pos:position pos:line="62" pos:column="77"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="63" pos:column="27">m<pos:position pos:line="63" pos:column="28"/></name><operator pos:line="63" pos:column="28">-&gt;<pos:position pos:line="63" pos:column="33"/></operator><name pos:line="63" pos:column="30">id<pos:position pos:line="63" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="34">(<pos:position pos:line="63" pos:column="35"/></operator><name pos:line="63" pos:column="35">int<pos:position pos:line="63" pos:column="38"/></name><operator pos:line="63" pos:column="38">)<pos:position pos:line="63" pos:column="39"/></operator><call><name pos:line="63" pos:column="39">h2_ihash_count<pos:position pos:line="63" pos:column="53"/></name><argument_list pos:line="63" pos:column="53">(<argument><expr><name><name pos:line="63" pos:column="54">m<pos:position pos:line="63" pos:column="55"/></name><operator pos:line="63" pos:column="55">-&gt;<pos:position pos:line="63" pos:column="60"/></operator><name pos:line="63" pos:column="57">streams<pos:position pos:line="63" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="64" pos:column="13">h2_ihash_shift<pos:position pos:line="64" pos:column="27"/></name><argument_list pos:line="64" pos:column="27">(<argument><expr><name><name pos:line="64" pos:column="28">m<pos:position pos:line="64" pos:column="29"/></name><operator pos:line="64" pos:column="29">-&gt;<pos:position pos:line="64" pos:column="34"/></operator><name pos:line="64" pos:column="31">streams<pos:position pos:line="64" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="40">(<pos:position pos:line="64" pos:column="41"/></operator><name pos:line="64" pos:column="41">void<pos:position pos:line="64" pos:column="45"/></name><operator pos:line="64" pos:column="45">*<pos:position pos:line="64" pos:column="46"/></operator><operator pos:line="64" pos:column="46">*<pos:position pos:line="64" pos:column="47"/></operator><operator pos:line="64" pos:column="47">)<pos:position pos:line="64" pos:column="48"/></operator><operator pos:line="64" pos:column="48">&amp;<pos:position pos:line="64" pos:column="53"/></operator><name pos:line="64" pos:column="49">stream<pos:position pos:line="64" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="57">1<pos:position pos:line="64" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="60"/></expr_stmt>
            <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><name pos:line="65" pos:column="17">stream<pos:position pos:line="65" pos:column="23"/></name></expr>)<pos:position pos:line="65" pos:column="24"/></condition><then pos:line="65" pos:column="24"> <block pos:line="65" pos:column="25">{
                <expr_stmt><expr><call><name pos:line="66" pos:column="17">h2_ihash_add<pos:position pos:line="66" pos:column="29"/></name><argument_list pos:line="66" pos:column="29">(<argument><expr><name><name pos:line="66" pos:column="30">m<pos:position pos:line="66" pos:column="31"/></name><operator pos:line="66" pos:column="31">-&gt;<pos:position pos:line="66" pos:column="36"/></operator><name pos:line="66" pos:column="33">streams<pos:position pos:line="66" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="42">stream<pos:position pos:line="66" pos:column="48"/></name></expr></argument>)<pos:position pos:line="66" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="50"/></expr_stmt>
                <if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><name><name pos:line="67" pos:column="21">stream<pos:position pos:line="67" pos:column="27"/></name><operator pos:line="67" pos:column="27">-&gt;<pos:position pos:line="67" pos:column="32"/></operator><name pos:line="67" pos:column="29">output<pos:position pos:line="67" pos:column="35"/></name></name> <operator pos:line="67" pos:column="36">&amp;&amp;<pos:position pos:line="67" pos:column="46"/></operator> <operator pos:line="67" pos:column="39">!<pos:position pos:line="67" pos:column="40"/></operator><name><name pos:line="67" pos:column="40">stream<pos:position pos:line="67" pos:column="46"/></name><operator pos:line="67" pos:column="46">-&gt;<pos:position pos:line="67" pos:column="51"/></operator><name pos:line="67" pos:column="48">out_checked<pos:position pos:line="67" pos:column="59"/></name></name></expr>)<pos:position pos:line="67" pos:column="60"/></condition><then pos:line="67" pos:column="60"> <block pos:line="67" pos:column="61">{
                    <comment type="block" pos:line="68" pos:column="21">/* FIXME: this looks like a race between the session thinking
                     * it is idle and the EOF on a stream not being sent.
                     * Signal to caller to leave IDLE state.
                     */</comment>
                    <expr_stmt><expr><call><name pos:line="72" pos:column="21">ap_log_cerror<pos:position pos:line="72" pos:column="34"/></name><argument_list pos:line="72" pos:column="34">(<argument><expr><name pos:line="72" pos:column="35">APLOG_MARK<pos:position pos:line="72" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="47">APLOG_TRACE2<pos:position pos:line="72" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="61">0<pos:position pos:line="72" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="64">m<pos:position pos:line="72" pos:column="65"/></name><operator pos:line="72" pos:column="65">-&gt;<pos:position pos:line="72" pos:column="70"/></operator><name pos:line="72" pos:column="67">c<pos:position pos:line="72" pos:column="68"/></name></name></expr></argument>,
                                  <argument><expr><call><name pos:line="73" pos:column="35">H2_STRM_MSG<pos:position pos:line="73" pos:column="46"/></name><argument_list pos:line="73" pos:column="46">(<argument><expr><name pos:line="73" pos:column="47">stream<pos:position pos:line="73" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="55">"output closed=%d, mplx idle"<pos:position pos:line="73" pos:column="84"/></literal>
                                              <literal type="string" pos:line="74" pos:column="47">", out has %ld bytes buffered"<pos:position pos:line="74" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="78"/></argument_list></call></expr></argument>,
                                  <argument><expr><call><name pos:line="75" pos:column="35">h2_beam_is_closed<pos:position pos:line="75" pos:column="52"/></name><argument_list pos:line="75" pos:column="52">(<argument><expr><name><name pos:line="75" pos:column="53">stream<pos:position pos:line="75" pos:column="59"/></name><operator pos:line="75" pos:column="59">-&gt;<pos:position pos:line="75" pos:column="64"/></operator><name pos:line="75" pos:column="61">output<pos:position pos:line="75" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="68"/></argument_list></call></expr></argument>,
                                  <argument><expr><operator pos:line="76" pos:column="35">(<pos:position pos:line="76" pos:column="36"/></operator><name pos:line="76" pos:column="36">long<pos:position pos:line="76" pos:column="40"/></name><operator pos:line="76" pos:column="40">)<pos:position pos:line="76" pos:column="41"/></operator><call><name pos:line="76" pos:column="41">h2_beam_get_buffered<pos:position pos:line="76" pos:column="61"/></name><argument_list pos:line="76" pos:column="61">(<argument><expr><name><name pos:line="76" pos:column="62">stream<pos:position pos:line="76" pos:column="68"/></name><operator pos:line="76" pos:column="68">-&gt;<pos:position pos:line="76" pos:column="73"/></operator><name pos:line="76" pos:column="70">output<pos:position pos:line="76" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="79"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="77" pos:column="21">h2_ihash_add<pos:position pos:line="77" pos:column="33"/></name><argument_list pos:line="77" pos:column="33">(<argument><expr><name><name pos:line="77" pos:column="34">m<pos:position pos:line="77" pos:column="35"/></name><operator pos:line="77" pos:column="35">-&gt;<pos:position pos:line="77" pos:column="40"/></operator><name pos:line="77" pos:column="37">streams<pos:position pos:line="77" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="46">stream<pos:position pos:line="77" pos:column="52"/></name></expr></argument>)<pos:position pos:line="77" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="54"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="78" pos:column="21">check_data_for<pos:position pos:line="78" pos:column="35"/></name><argument_list pos:line="78" pos:column="35">(<argument><expr><name pos:line="78" pos:column="36">m<pos:position pos:line="78" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="39">stream<pos:position pos:line="78" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="47">0<pos:position pos:line="78" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="50"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="79" pos:column="21">stream<pos:position pos:line="79" pos:column="27"/></name><operator pos:line="79" pos:column="27">-&gt;<pos:position pos:line="79" pos:column="32"/></operator><name pos:line="79" pos:column="29">out_checked<pos:position pos:line="79" pos:column="40"/></name></name> <operator pos:line="79" pos:column="41">=<pos:position pos:line="79" pos:column="42"/></operator> <literal type="number" pos:line="79" pos:column="43">1<pos:position pos:line="79" pos:column="44"/></literal></expr>;<pos:position pos:line="79" pos:column="45"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="80" pos:column="21">status<pos:position pos:line="80" pos:column="27"/></name> <operator pos:line="80" pos:column="28">=<pos:position pos:line="80" pos:column="29"/></operator> <name pos:line="80" pos:column="30">APR_EAGAIN<pos:position pos:line="80" pos:column="40"/></name></expr>;<pos:position pos:line="80" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="81" pos:column="18"/></block></then></if>
            }<pos:position pos:line="82" pos:column="14"/></block></then></if>
        }<pos:position pos:line="83" pos:column="10"/></block></else></if>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">register_if_needed<pos:position pos:line="85" pos:column="23"/></name><argument_list pos:line="85" pos:column="23">(<argument><expr><name pos:line="85" pos:column="24">m<pos:position pos:line="85" pos:column="25"/></name></expr></argument>)<pos:position pos:line="85" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="87" pos:column="5">H2_MPLX_LEAVE<pos:position pos:line="87" pos:column="18"/></name><argument_list pos:line="87" pos:column="18">(<argument><expr><name pos:line="87" pos:column="19">m<pos:position pos:line="87" pos:column="20"/></name></expr></argument>)<pos:position pos:line="87" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="22"/></expr_stmt>
    <return pos:line="88" pos:column="5">return <expr><name pos:line="88" pos:column="12">status<pos:position pos:line="88" pos:column="18"/></name></expr>;<pos:position pos:line="88" pos:column="19"/></return>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

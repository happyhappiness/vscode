<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1583.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ssl_tmp_key_init_ec<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">server_rec<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">s<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">bits<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">int<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">idx<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SSLModConfigRec<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">mc<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><call><name pos:line="4" pos:column="27">myModConfig<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><name pos:line="4" pos:column="39">s<pos:position pos:line="4" pos:column="40"/></name></expr></argument>)<pos:position pos:line="4" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">EC_KEY<pos:position pos:line="5" pos:column="11"/></name> <modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier></type><name pos:line="5" pos:column="13">ecdh<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* XXX: Are there any FIPS constraints we should enforce? */</comment>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">bits<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">!=<pos:position pos:line="9" pos:column="16"/></operator> <literal type="number" pos:line="9" pos:column="17">256<pos:position pos:line="9" pos:column="20"/></literal></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21"> <block pos:line="9" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">ap_log_error<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">APLOG_MARK<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="34">APLOG_ERR<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="45">0<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="48">s<pos:position pos:line="10" pos:column="49"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="11" pos:column="22">"Init: Failed to generate temporary "<pos:position pos:line="11" pos:column="59"/></literal>
                     <literal type="string" pos:line="12" pos:column="22">"%d bit EC parameters, only 256 bits supported"<pos:position pos:line="12" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="71">bits<pos:position pos:line="12" pos:column="75"/></name></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="77"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><operator pos:line="13" pos:column="16">!<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">OK<pos:position pos:line="13" pos:column="19"/></name></expr>;<pos:position pos:line="13" pos:column="20"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">ecdh<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <call><name pos:line="16" pos:column="17">EC_KEY_new<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">()<pos:position pos:line="16" pos:column="29"/></argument_list></call><operator pos:line="16" pos:column="29">)<pos:position pos:line="16" pos:column="30"/></operator> <operator pos:line="16" pos:column="31">==<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="34">NULL<pos:position pos:line="16" pos:column="38"/></name> <operator pos:line="16" pos:column="39">||<pos:position pos:line="16" pos:column="41"/></operator>
        <call><name pos:line="17" pos:column="9">EC_KEY_set_group<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">ecdh<pos:position pos:line="17" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="32">EC_GROUP_new_by_curve_name<pos:position pos:line="17" pos:column="58"/></name><argument_list pos:line="17" pos:column="58">(<argument><expr><name pos:line="17" pos:column="59">NID_X9_62_prime256v1<pos:position pos:line="17" pos:column="79"/></name></expr></argument>)<pos:position pos:line="17" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="81"/></argument_list></call> <operator pos:line="17" pos:column="82">!=<pos:position pos:line="17" pos:column="84"/></operator> <literal type="number" pos:line="17" pos:column="85">1<pos:position pos:line="17" pos:column="86"/></literal></expr>)<pos:position pos:line="17" pos:column="87"/></condition><then pos:line="17" pos:column="87">
    <block pos:line="18" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">ap_log_error<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">APLOG_MARK<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">APLOG_ERR<pos:position pos:line="19" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="45">0<pos:position pos:line="19" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="48">s<pos:position pos:line="19" pos:column="49"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="20" pos:column="22">"Init: Failed to generate temporary "<pos:position pos:line="20" pos:column="59"/></literal>
                     <literal type="string" pos:line="21" pos:column="22">"%d bit EC parameters"<pos:position pos:line="21" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="46">bits<pos:position pos:line="21" pos:column="50"/></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><operator pos:line="22" pos:column="16">!<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">OK<pos:position pos:line="22" pos:column="19"/></name></expr>;<pos:position pos:line="22" pos:column="20"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="25" pos:column="5">mc<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">pTmpKeys<pos:position pos:line="25" pos:column="17"/></name><index pos:line="25" pos:column="17">[<expr><name pos:line="25" pos:column="18">idx<pos:position pos:line="25" pos:column="21"/></name></expr>]<pos:position pos:line="25" pos:column="22"/></index></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">ecdh<pos:position pos:line="25" pos:column="29"/></name></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
    <return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">OK<pos:position pos:line="26" pos:column="14"/></name></expr>;<pos:position pos:line="26" pos:column="15"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_555_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">match_version<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">apr_pool_t<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">pool<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">version_string<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                         <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier><modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">error<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ap_regex_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">compiled<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">to_match<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">rc<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">compiled<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">ap_pregcomp<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">pool<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="34">version_string<pos:position pos:line="8" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="50">AP_REG_EXTENDED<pos:position pos:line="8" pos:column="65"/></name></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="67"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">compiled<pos:position pos:line="9" pos:column="18"/></name></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19"> <block pos:line="9" pos:column="20">{
        <expr_stmt><expr><operator pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">error<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <literal type="string" pos:line="10" pos:column="18">"Unable to compile regular expression"<pos:position pos:line="10" pos:column="56"/></literal></expr>;<pos:position pos:line="10" pos:column="57"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="14" pos:column="5">*<pos:position pos:line="14" pos:column="6"/></operator><name pos:line="14" pos:column="6">error<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <name pos:line="14" pos:column="14">NULL<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><name pos:line="16" pos:column="5">to_match<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">apr_psprintf<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">pool<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="35">"%d.%d.%d%s"<pos:position pos:line="16" pos:column="47"/></literal></expr></argument>,
                            <argument><expr><name><name pos:line="17" pos:column="29">httpd_version<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">.<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">major<pos:position pos:line="17" pos:column="48"/></name></name></expr></argument>,
                            <argument><expr><name><name pos:line="18" pos:column="29">httpd_version<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">.<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="43">minor<pos:position pos:line="18" pos:column="48"/></name></name></expr></argument>,
                            <argument><expr><name><name pos:line="19" pos:column="29">httpd_version<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">.<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="43">patch<pos:position pos:line="19" pos:column="48"/></name></name></expr></argument>,
                            <argument><expr><name><name pos:line="20" pos:column="29">httpd_version<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">.<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="43">add_string<pos:position pos:line="20" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">rc<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <operator pos:line="22" pos:column="10">!<pos:position pos:line="22" pos:column="11"/></operator><call><name pos:line="22" pos:column="11">ap_regexec<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">compiled<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="32">to_match<pos:position pos:line="22" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="42">0<pos:position pos:line="22" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="45">NULL<pos:position pos:line="22" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="51">0<pos:position pos:line="22" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">ap_pregfree<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">pool<pos:position pos:line="24" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="23">compiled<pos:position pos:line="24" pos:column="31"/></name></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">rc<pos:position pos:line="25" pos:column="14"/></name></expr>;<pos:position pos:line="25" pos:column="15"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

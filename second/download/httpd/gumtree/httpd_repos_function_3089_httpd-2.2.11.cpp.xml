<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3089_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">void<pos:position pos:line="2" pos:column="5"/></name></type> <name pos:line="2" pos:column="6">poolDestroy<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">STRING_POOL<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">pool<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">BLOCK<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">p<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><name><name pos:line="4" pos:column="14">pool<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">-&gt;<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="20">blocks<pos:position pos:line="4" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <while pos:line="5" pos:column="3">while <condition pos:line="5" pos:column="9">(<expr><name pos:line="5" pos:column="10">p<pos:position pos:line="5" pos:column="11"/></name></expr>)<pos:position pos:line="5" pos:column="12"/></condition> <block pos:line="5" pos:column="13">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">BLOCK<pos:position pos:line="6" pos:column="10"/></name> <modifier pos:line="6" pos:column="11">*<pos:position pos:line="6" pos:column="12"/></modifier></type><name pos:line="6" pos:column="12">tem<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><name><name pos:line="6" pos:column="18">p<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">next<pos:position pos:line="6" pos:column="25"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">pool<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">-&gt;<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="11">mem<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">free_fcn<pos:position pos:line="7" pos:column="24"/></name></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">p<pos:position pos:line="7" pos:column="26"/></name></expr></argument>)<pos:position pos:line="7" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">p<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <name pos:line="8" pos:column="9">tem<pos:position pos:line="8" pos:column="12"/></name></expr>;<pos:position pos:line="8" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></while>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">pool<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">blocks<pos:position pos:line="10" pos:column="15"/></name></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="11" pos:column="3">p<pos:position pos:line="11" pos:column="4"/></name> <operator pos:line="11" pos:column="5">=<pos:position pos:line="11" pos:column="6"/></operator> <name><name pos:line="11" pos:column="7">pool<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">freeBlocks<pos:position pos:line="11" pos:column="23"/></name></name></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
  <while pos:line="12" pos:column="3">while <condition pos:line="12" pos:column="9">(<expr><name pos:line="12" pos:column="10">p<pos:position pos:line="12" pos:column="11"/></name></expr>)<pos:position pos:line="12" pos:column="12"/></condition> <block pos:line="12" pos:column="13">{
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">BLOCK<pos:position pos:line="13" pos:column="10"/></name> <modifier pos:line="13" pos:column="11">*<pos:position pos:line="13" pos:column="12"/></modifier></type><name pos:line="13" pos:column="12">tem<pos:position pos:line="13" pos:column="15"/></name> <init pos:line="13" pos:column="16">= <expr><name><name pos:line="13" pos:column="18">p<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">next<pos:position pos:line="13" pos:column="25"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">pool<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">-&gt;<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="11">mem<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">free_fcn<pos:position pos:line="14" pos:column="24"/></name></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">p<pos:position pos:line="14" pos:column="26"/></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">p<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <name pos:line="15" pos:column="9">tem<pos:position pos:line="15" pos:column="12"/></name></expr>;<pos:position pos:line="15" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></while>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">pool<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">freeBlocks<pos:position pos:line="17" pos:column="19"/></name></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <literal type="number" pos:line="17" pos:column="22">0<pos:position pos:line="17" pos:column="23"/></literal></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">pool<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">ptr<pos:position pos:line="18" pos:column="12"/></name></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <literal type="number" pos:line="18" pos:column="15">0<pos:position pos:line="18" pos:column="16"/></literal></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">pool<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">start<pos:position pos:line="19" pos:column="14"/></name></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <literal type="number" pos:line="19" pos:column="17">0<pos:position pos:line="19" pos:column="18"/></literal></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">pool<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">end<pos:position pos:line="20" pos:column="12"/></name></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <literal type="number" pos:line="20" pos:column="15">0<pos:position pos:line="20" pos:column="16"/></literal></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_180_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">dav_error<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">dav_fs_copymove_file<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(
    <parameter><decl><type><name pos:line="2" pos:column="5">int<pos:position pos:line="2" pos:column="8"/></name></type> <name pos:line="2" pos:column="9">is_move<pos:position pos:line="2" pos:column="16"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="3" pos:column="5">apr_pool_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type> <name pos:line="3" pos:column="18">p<pos:position pos:line="3" pos:column="19"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">src<pos:position pos:line="4" pos:column="20"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">dst<pos:position pos:line="5" pos:column="20"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="6" pos:column="5">dav_buffer<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">pbuf<pos:position pos:line="6" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="22"/></parameter_list>
<block pos:line="7" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">dav_buffer<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">work_buf<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><block pos:line="8" pos:column="27">{ <expr><literal type="number" pos:line="8" pos:column="29">0<pos:position pos:line="8" pos:column="30"/></literal></expr> }<pos:position pos:line="8" pos:column="32"/></block></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_file_t<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">inf<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><name pos:line="9" pos:column="23">NULL<pos:position pos:line="9" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_file_t<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">outf<pos:position pos:line="10" pos:column="21"/></name> <init pos:line="10" pos:column="22">= <expr><name pos:line="10" pos:column="24">NULL<pos:position pos:line="10" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">pbuf<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">==<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">NULL<pos:position pos:line="12" pos:column="21"/></name></expr>)<pos:position pos:line="12" pos:column="22"/></condition><then pos:line="12" pos:column="22">
	<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="9">pbuf<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <operator pos:line="13" pos:column="16">&amp;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="17">work_buf<pos:position pos:line="13" pos:column="25"/></name></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">dav_set_bufsize<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">p<pos:position pos:line="15" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="24">pbuf<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="30">DAV_FS_COPY_BLOCKSIZE<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><call><name pos:line="17" pos:column="10">apr_file_open<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><operator pos:line="17" pos:column="24">&amp;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="25">inf<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="30">src<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="35">APR_READ<pos:position pos:line="17" pos:column="43"/></name> <operator pos:line="17" pos:column="44">|<pos:position pos:line="17" pos:column="45"/></operator> <name pos:line="17" pos:column="46">APR_BINARY<pos:position pos:line="17" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="58">APR_OS_DEFAULT<pos:position pos:line="17" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="74">p<pos:position pos:line="17" pos:column="75"/></name></expr></argument>)<pos:position pos:line="17" pos:column="76"/></argument_list></call><operator pos:line="17" pos:column="76">)<pos:position pos:line="17" pos:column="77"/></operator> 
	<operator pos:line="18" pos:column="9">!=<pos:position pos:line="18" pos:column="11"/></operator> <name pos:line="18" pos:column="12">APR_SUCCESS<pos:position pos:line="18" pos:column="23"/></name></expr>)<pos:position pos:line="18" pos:column="24"/></condition><then pos:line="18" pos:column="24"> <block pos:line="18" pos:column="25">{
	<comment type="block" pos:line="19" pos:column="9">/* ### use something besides 500? */</comment>
	<return pos:line="20" pos:column="9">return <expr><call><name pos:line="20" pos:column="16">dav_new_error<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">p<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="33">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="20" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="61">0<pos:position pos:line="20" pos:column="62"/></literal></expr></argument>,
			     <argument><expr><literal type="string" pos:line="21" pos:column="30">"Could not open file for reading"<pos:position pos:line="21" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="24" pos:column="5">/* ### do we need to deal with the umask? */</comment>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><call><name pos:line="25" pos:column="10">apr_file_open<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><operator pos:line="25" pos:column="24">&amp;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="25">outf<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="31">dst<pos:position pos:line="25" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="36">APR_WRITE<pos:position pos:line="25" pos:column="45"/></name> <operator pos:line="25" pos:column="46">|<pos:position pos:line="25" pos:column="47"/></operator> <name pos:line="25" pos:column="48">APR_CREATE<pos:position pos:line="25" pos:column="58"/></name> <operator pos:line="25" pos:column="59">|<pos:position pos:line="25" pos:column="60"/></operator> <name pos:line="25" pos:column="61">APR_TRUNCATE<pos:position pos:line="25" pos:column="73"/></name> <operator pos:line="25" pos:column="74">|<pos:position pos:line="25" pos:column="75"/></operator> <name pos:line="25" pos:column="76">APR_BINARY<pos:position pos:line="25" pos:column="86"/></name></expr></argument>,
		 <argument><expr><name pos:line="26" pos:column="18">APR_OS_DEFAULT<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">p<pos:position pos:line="26" pos:column="35"/></name></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call><operator pos:line="26" pos:column="36">)<pos:position pos:line="26" pos:column="37"/></operator> <operator pos:line="26" pos:column="38">!=<pos:position pos:line="26" pos:column="40"/></operator> <name pos:line="26" pos:column="41">APR_SUCCESS<pos:position pos:line="26" pos:column="52"/></name></expr>)<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53"> <block pos:line="26" pos:column="54">{
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">apr_file_close<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">inf<pos:position pos:line="27" pos:column="27"/></name></expr></argument>)<pos:position pos:line="27" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>

	<comment type="block" pos:line="29" pos:column="9">/* ### use something besides 500? */</comment>
	<return pos:line="30" pos:column="9">return <expr><call><name pos:line="30" pos:column="16">dav_new_error<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">p<pos:position pos:line="30" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="33">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="30" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="61">0<pos:position pos:line="30" pos:column="62"/></literal></expr></argument>,
			     <argument><expr><literal type="string" pos:line="31" pos:column="30">"Could not open file for writing"<pos:position pos:line="31" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="65"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <while pos:line="34" pos:column="5">while <condition pos:line="34" pos:column="11">(<expr><literal type="number" pos:line="34" pos:column="12">1<pos:position pos:line="34" pos:column="13"/></literal></expr>)<pos:position pos:line="34" pos:column="14"/></condition> <block pos:line="34" pos:column="15">{
	<decl_stmt><decl><type><name pos:line="35" pos:column="9">apr_size_t<pos:position pos:line="35" pos:column="19"/></name></type> <name pos:line="35" pos:column="20">len<pos:position pos:line="35" pos:column="23"/></name> <init pos:line="35" pos:column="24">= <expr><name pos:line="35" pos:column="26">DAV_FS_COPY_BLOCKSIZE<pos:position pos:line="35" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="35" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="36" pos:column="9">apr_status_t<pos:position pos:line="36" pos:column="21"/></name></type> <name pos:line="36" pos:column="22">status<pos:position pos:line="36" pos:column="28"/></name></decl>;<pos:position pos:line="36" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><name pos:line="38" pos:column="9">status<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <call><name pos:line="38" pos:column="18">apr_file_read<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><name pos:line="38" pos:column="32">inf<pos:position pos:line="38" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="37">pbuf<pos:position pos:line="38" pos:column="41"/></name><operator pos:line="38" pos:column="41">-&gt;<pos:position pos:line="38" pos:column="46"/></operator><name pos:line="38" pos:column="43">buf<pos:position pos:line="38" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="48">&amp;<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="49">len<pos:position pos:line="38" pos:column="52"/></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">status<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">!=<pos:position pos:line="39" pos:column="22"/></operator> <name pos:line="39" pos:column="23">APR_SUCCESS<pos:position pos:line="39" pos:column="34"/></name> <operator pos:line="39" pos:column="35">&amp;&amp;<pos:position pos:line="39" pos:column="45"/></operator> <name pos:line="39" pos:column="38">status<pos:position pos:line="39" pos:column="44"/></name> <operator pos:line="39" pos:column="45">!=<pos:position pos:line="39" pos:column="47"/></operator> <name pos:line="39" pos:column="48">APR_EOF<pos:position pos:line="39" pos:column="55"/></name></expr>)<pos:position pos:line="39" pos:column="56"/></condition><then pos:line="39" pos:column="56"> <block pos:line="39" pos:column="57">{
	    <expr_stmt><expr><call><name pos:line="40" pos:column="13">apr_file_close<pos:position pos:line="40" pos:column="27"/></name><argument_list pos:line="40" pos:column="27">(<argument><expr><name pos:line="40" pos:column="28">inf<pos:position pos:line="40" pos:column="31"/></name></expr></argument>)<pos:position pos:line="40" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="41" pos:column="13">apr_file_close<pos:position pos:line="41" pos:column="27"/></name><argument_list pos:line="41" pos:column="27">(<argument><expr><name pos:line="41" pos:column="28">outf<pos:position pos:line="41" pos:column="32"/></name></expr></argument>)<pos:position pos:line="41" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt>
	    
	    <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><call><name pos:line="43" pos:column="17">apr_file_remove<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">(<argument><expr><name pos:line="43" pos:column="33">dst<pos:position pos:line="43" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="38">p<pos:position pos:line="43" pos:column="39"/></name></expr></argument>)<pos:position pos:line="43" pos:column="40"/></argument_list></call> <operator pos:line="43" pos:column="41">!=<pos:position pos:line="43" pos:column="43"/></operator> <name pos:line="43" pos:column="44">APR_SUCCESS<pos:position pos:line="43" pos:column="55"/></name></expr>)<pos:position pos:line="43" pos:column="56"/></condition><then pos:line="43" pos:column="56"> <block pos:line="43" pos:column="57">{
		<comment type="block" pos:line="44" pos:column="17">/* ### ACK! Inconsistent state... */</comment>

		<comment type="block" pos:line="46" pos:column="17">/* ### use something besides 500? */</comment>
		<return pos:line="47" pos:column="17">return <expr><call><name pos:line="47" pos:column="24">dav_new_error<pos:position pos:line="47" pos:column="37"/></name><argument_list pos:line="47" pos:column="37">(<argument><expr><name pos:line="47" pos:column="38">p<pos:position pos:line="47" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="41">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="47" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="69">0<pos:position pos:line="47" pos:column="70"/></literal></expr></argument>,
				     <argument><expr><literal type="string" pos:line="48" pos:column="38">"Could not delete output after read "<pos:position pos:line="48" pos:column="75"/></literal>
				     <literal type="string" pos:line="49" pos:column="38">"failure. Server is now in an "<pos:position pos:line="49" pos:column="69"/></literal>
				     <literal type="string" pos:line="50" pos:column="38">"inconsistent state."<pos:position pos:line="50" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="61"/></return>
	    }<pos:position pos:line="51" pos:column="14"/></block></then></if>

	    <comment type="block" pos:line="53" pos:column="13">/* ### use something besides 500? */</comment>
	    <return pos:line="54" pos:column="13">return <expr><call><name pos:line="54" pos:column="20">dav_new_error<pos:position pos:line="54" pos:column="33"/></name><argument_list pos:line="54" pos:column="33">(<argument><expr><name pos:line="54" pos:column="34">p<pos:position pos:line="54" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="37">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="54" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="65">0<pos:position pos:line="54" pos:column="66"/></literal></expr></argument>,
				 <argument><expr><literal type="string" pos:line="55" pos:column="34">"Could not read input file"<pos:position pos:line="55" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="63"/></return>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="58" pos:column="9">/* write any bytes that were read (applies to APR_EOF, too) */</comment>
        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><call><name pos:line="59" pos:column="13">apr_file_write_full<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><name pos:line="59" pos:column="33">outf<pos:position pos:line="59" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="39">pbuf<pos:position pos:line="59" pos:column="43"/></name><operator pos:line="59" pos:column="43">-&gt;<pos:position pos:line="59" pos:column="48"/></operator><name pos:line="59" pos:column="45">buf<pos:position pos:line="59" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="50">len<pos:position pos:line="59" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="55">NULL<pos:position pos:line="59" pos:column="59"/></name></expr></argument>)<pos:position pos:line="59" pos:column="60"/></argument_list></call> <operator pos:line="59" pos:column="61">!=<pos:position pos:line="59" pos:column="63"/></operator> <name pos:line="59" pos:column="64">APR_SUCCESS<pos:position pos:line="59" pos:column="75"/></name></expr>)<pos:position pos:line="59" pos:column="76"/></condition><then pos:line="59" pos:column="76"> <block pos:line="59" pos:column="77">{
            <decl_stmt><decl><type><name pos:line="60" pos:column="13">int<pos:position pos:line="60" pos:column="16"/></name></type> <name pos:line="60" pos:column="17">save_errno<pos:position pos:line="60" pos:column="27"/></name> <init pos:line="60" pos:column="28">= <expr><name pos:line="60" pos:column="30">errno<pos:position pos:line="60" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="60" pos:column="36"/></decl_stmt>

	    <expr_stmt><expr><call><name pos:line="62" pos:column="13">apr_file_close<pos:position pos:line="62" pos:column="27"/></name><argument_list pos:line="62" pos:column="27">(<argument><expr><name pos:line="62" pos:column="28">inf<pos:position pos:line="62" pos:column="31"/></name></expr></argument>)<pos:position pos:line="62" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="33"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="63" pos:column="13">apr_file_close<pos:position pos:line="63" pos:column="27"/></name><argument_list pos:line="63" pos:column="27">(<argument><expr><name pos:line="63" pos:column="28">outf<pos:position pos:line="63" pos:column="32"/></name></expr></argument>)<pos:position pos:line="63" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="34"/></expr_stmt>

	    <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><call><name pos:line="65" pos:column="17">apr_file_remove<pos:position pos:line="65" pos:column="32"/></name><argument_list pos:line="65" pos:column="32">(<argument><expr><name pos:line="65" pos:column="33">dst<pos:position pos:line="65" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="38">p<pos:position pos:line="65" pos:column="39"/></name></expr></argument>)<pos:position pos:line="65" pos:column="40"/></argument_list></call> <operator pos:line="65" pos:column="41">!=<pos:position pos:line="65" pos:column="43"/></operator> <name pos:line="65" pos:column="44">APR_SUCCESS<pos:position pos:line="65" pos:column="55"/></name></expr>)<pos:position pos:line="65" pos:column="56"/></condition><then pos:line="65" pos:column="56"> <block pos:line="65" pos:column="57">{
		<comment type="block" pos:line="66" pos:column="17">/* ### ACK! Inconsistent state... */</comment>

		<comment type="block" pos:line="68" pos:column="17">/* ### use something besides 500? */</comment>
		<return pos:line="69" pos:column="17">return <expr><call><name pos:line="69" pos:column="24">dav_new_error<pos:position pos:line="69" pos:column="37"/></name><argument_list pos:line="69" pos:column="37">(<argument><expr><name pos:line="69" pos:column="38">p<pos:position pos:line="69" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="41">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="69" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="69">0<pos:position pos:line="69" pos:column="70"/></literal></expr></argument>,
				     <argument><expr><literal type="string" pos:line="70" pos:column="38">"Could not delete output after write "<pos:position pos:line="70" pos:column="76"/></literal>
				     <literal type="string" pos:line="71" pos:column="38">"failure. Server is now in an "<pos:position pos:line="71" pos:column="69"/></literal>
				     <literal type="string" pos:line="72" pos:column="38">"inconsistent state."<pos:position pos:line="72" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="61"/></return>
	    }<pos:position pos:line="73" pos:column="14"/></block></then></if>

	    <if pos:line="75" pos:column="13">if <condition pos:line="75" pos:column="16">(<expr><name pos:line="75" pos:column="17">save_errno<pos:position pos:line="75" pos:column="27"/></name> <operator pos:line="75" pos:column="28">==<pos:position pos:line="75" pos:column="30"/></operator> <name pos:line="75" pos:column="31">ENOSPC<pos:position pos:line="75" pos:column="37"/></name></expr>)<pos:position pos:line="75" pos:column="38"/></condition><then pos:line="75" pos:column="38"> <block pos:line="75" pos:column="39">{
		<return pos:line="76" pos:column="17">return <expr><call><name pos:line="76" pos:column="24">dav_new_error<pos:position pos:line="76" pos:column="37"/></name><argument_list pos:line="76" pos:column="37">(<argument><expr><name pos:line="76" pos:column="38">p<pos:position pos:line="76" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="41">HTTP_INSUFFICIENT_STORAGE<pos:position pos:line="76" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="68">0<pos:position pos:line="76" pos:column="69"/></literal></expr></argument>,
				     <argument><expr><literal type="string" pos:line="77" pos:column="38">"There is not enough storage to write to "<pos:position pos:line="77" pos:column="80"/></literal>
				     <literal type="string" pos:line="78" pos:column="38">"this resource."<pos:position pos:line="78" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="56"/></return>
	    }<pos:position pos:line="79" pos:column="14"/></block></then></if>

	    <comment type="block" pos:line="81" pos:column="13">/* ### use something besides 500? */</comment>
	    <return pos:line="82" pos:column="13">return <expr><call><name pos:line="82" pos:column="20">dav_new_error<pos:position pos:line="82" pos:column="33"/></name><argument_list pos:line="82" pos:column="33">(<argument><expr><name pos:line="82" pos:column="34">p<pos:position pos:line="82" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="37">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="82" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="65">0<pos:position pos:line="82" pos:column="66"/></literal></expr></argument>,
				 <argument><expr><literal type="string" pos:line="83" pos:column="34">"Could not write output file"<pos:position pos:line="83" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="65"/></return>
	}<pos:position pos:line="84" pos:column="10"/></block></then></if>

        <if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><name pos:line="86" pos:column="13">status<pos:position pos:line="86" pos:column="19"/></name> <operator pos:line="86" pos:column="20">==<pos:position pos:line="86" pos:column="22"/></operator> <name pos:line="86" pos:column="23">APR_EOF<pos:position pos:line="86" pos:column="30"/></name></expr>)<pos:position pos:line="86" pos:column="31"/></condition><then pos:line="86" pos:column="31">
            <block type="pseudo"><break pos:line="87" pos:column="13">break;<pos:position pos:line="87" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="88" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="90" pos:column="5">apr_file_close<pos:position pos:line="90" pos:column="19"/></name><argument_list pos:line="90" pos:column="19">(<argument><expr><name pos:line="90" pos:column="20">inf<pos:position pos:line="90" pos:column="23"/></name></expr></argument>)<pos:position pos:line="90" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">apr_file_close<pos:position pos:line="91" pos:column="19"/></name><argument_list pos:line="91" pos:column="19">(<argument><expr><name pos:line="91" pos:column="20">outf<pos:position pos:line="91" pos:column="24"/></name></expr></argument>)<pos:position pos:line="91" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="26"/></expr_stmt>

    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><name pos:line="93" pos:column="9">is_move<pos:position pos:line="93" pos:column="16"/></name> <operator pos:line="93" pos:column="17">&amp;&amp;<pos:position pos:line="93" pos:column="27"/></operator> <call><name pos:line="93" pos:column="20">apr_file_remove<pos:position pos:line="93" pos:column="35"/></name><argument_list pos:line="93" pos:column="35">(<argument><expr><name pos:line="93" pos:column="36">src<pos:position pos:line="93" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="41">p<pos:position pos:line="93" pos:column="42"/></name></expr></argument>)<pos:position pos:line="93" pos:column="43"/></argument_list></call> <operator pos:line="93" pos:column="44">!=<pos:position pos:line="93" pos:column="46"/></operator> <name pos:line="93" pos:column="47">APR_SUCCESS<pos:position pos:line="93" pos:column="58"/></name></expr>)<pos:position pos:line="93" pos:column="59"/></condition><then pos:line="93" pos:column="59"> <block pos:line="93" pos:column="60">{
	<decl_stmt><decl><type><name pos:line="94" pos:column="9">dav_error<pos:position pos:line="94" pos:column="18"/></name> <modifier pos:line="94" pos:column="19">*<pos:position pos:line="94" pos:column="20"/></modifier></type><name pos:line="94" pos:column="20">err<pos:position pos:line="94" pos:column="23"/></name></decl>;<pos:position pos:line="94" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="95" pos:column="9">int<pos:position pos:line="95" pos:column="12"/></name></type> <name pos:line="95" pos:column="13">save_errno<pos:position pos:line="95" pos:column="23"/></name> <init pos:line="95" pos:column="24">= <expr><name pos:line="95" pos:column="26">errno<pos:position pos:line="95" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="95" pos:column="32"/></decl_stmt>	<comment type="block" pos:line="95" pos:column="33">/* save the errno that got us here */</comment>

	<if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><call><name pos:line="97" pos:column="13">apr_file_remove<pos:position pos:line="97" pos:column="28"/></name><argument_list pos:line="97" pos:column="28">(<argument><expr><name pos:line="97" pos:column="29">dst<pos:position pos:line="97" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="34">p<pos:position pos:line="97" pos:column="35"/></name></expr></argument>)<pos:position pos:line="97" pos:column="36"/></argument_list></call> <operator pos:line="97" pos:column="37">!=<pos:position pos:line="97" pos:column="39"/></operator> <name pos:line="97" pos:column="40">APR_SUCCESS<pos:position pos:line="97" pos:column="51"/></name></expr>)<pos:position pos:line="97" pos:column="52"/></condition><then pos:line="97" pos:column="52"> <block pos:line="97" pos:column="53">{
	    <comment type="block" pos:line="98" pos:column="13">/* ### ACK. this creates an inconsistency. do more!? */</comment>

	    <comment type="block" pos:line="100" pos:column="13">/* ### use something besides 500? */</comment>
	    <comment type="block" pos:line="101" pos:column="13">/* Note that we use the latest errno */</comment>
	    <return pos:line="102" pos:column="13">return <expr><call><name pos:line="102" pos:column="20">dav_new_error<pos:position pos:line="102" pos:column="33"/></name><argument_list pos:line="102" pos:column="33">(<argument><expr><name pos:line="102" pos:column="34">p<pos:position pos:line="102" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="37">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="102" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="65">0<pos:position pos:line="102" pos:column="66"/></literal></expr></argument>,
				 <argument><expr><literal type="string" pos:line="103" pos:column="34">"Could not remove source or destination "<pos:position pos:line="103" pos:column="75"/></literal>
				 <literal type="string" pos:line="104" pos:column="34">"file. Server is now in an inconsistent "<pos:position pos:line="104" pos:column="75"/></literal>
				 <literal type="string" pos:line="105" pos:column="34">"state."<pos:position pos:line="105" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="44"/></return>
	}<pos:position pos:line="106" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="108" pos:column="9">/* ### use something besides 500? */</comment>
	<expr_stmt><expr><name pos:line="109" pos:column="9">err<pos:position pos:line="109" pos:column="12"/></name> <operator pos:line="109" pos:column="13">=<pos:position pos:line="109" pos:column="14"/></operator> <call><name pos:line="109" pos:column="15">dav_new_error<pos:position pos:line="109" pos:column="28"/></name><argument_list pos:line="109" pos:column="28">(<argument><expr><name pos:line="109" pos:column="29">p<pos:position pos:line="109" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="32">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="109" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="109" pos:column="60">0<pos:position pos:line="109" pos:column="61"/></literal></expr></argument>,
			    <argument><expr><literal type="string" pos:line="110" pos:column="29">"Could not remove source file after move. "<pos:position pos:line="110" pos:column="72"/></literal>
			    <literal type="string" pos:line="111" pos:column="29">"Destination was removed to ensure consistency."<pos:position pos:line="111" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="79"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="112" pos:column="9">err<pos:position pos:line="112" pos:column="12"/></name><operator pos:line="112" pos:column="12">-&gt;<pos:position pos:line="112" pos:column="17"/></operator><name pos:line="112" pos:column="14">save_errno<pos:position pos:line="112" pos:column="24"/></name></name> <operator pos:line="112" pos:column="25">=<pos:position pos:line="112" pos:column="26"/></operator> <name pos:line="112" pos:column="27">save_errno<pos:position pos:line="112" pos:column="37"/></name></expr>;<pos:position pos:line="112" pos:column="38"/></expr_stmt>
	<return pos:line="113" pos:column="9">return <expr><name pos:line="113" pos:column="16">err<pos:position pos:line="113" pos:column="19"/></name></expr>;<pos:position pos:line="113" pos:column="20"/></return>
    }<pos:position pos:line="114" pos:column="6"/></block></then></if>

    <return pos:line="116" pos:column="5">return <expr><name pos:line="116" pos:column="12">NULL<pos:position pos:line="116" pos:column="16"/></name></expr>;<pos:position pos:line="116" pos:column="17"/></return>
}<pos:position pos:line="117" pos:column="2"/></block></function></unit>

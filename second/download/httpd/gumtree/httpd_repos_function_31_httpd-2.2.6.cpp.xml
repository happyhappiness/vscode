<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_31_httpd-2.2.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">test<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">()<pos:position pos:line="1" pos:column="11"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">timeval<pos:position pos:line="3" pos:column="17"/></name></name></type> <name pos:line="3" pos:column="18">timeout<pos:position pos:line="3" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="27">now<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">fd_set<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">sel_read<pos:position pos:line="4" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="20">sel_except<pos:position pos:line="4" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="32">sel_write<pos:position pos:line="4" pos:column="41"/></name></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>

  <block pos:line="7" pos:column="3">{
    <comment type="block" pos:line="8" pos:column="5">/* get server information */</comment>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">struct<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">hostent<pos:position pos:line="9" pos:column="19"/></name></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">he<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">he<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <call><name pos:line="10" pos:column="10">gethostbyname<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">machine<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">he<pos:position pos:line="11" pos:column="12"/></name></expr>)<pos:position pos:line="11" pos:column="13"/></condition><then pos:line="11" pos:column="13"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="14">err<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><literal type="string" pos:line="11" pos:column="18">"gethostbyname"<pos:position pos:line="11" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">server<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">.<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">sin_family<pos:position pos:line="12" pos:column="22"/></name></name>      <operator pos:line="12" pos:column="28">=<pos:position pos:line="12" pos:column="29"/></operator> <name><name pos:line="12" pos:column="30">he<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">h_addrtype<pos:position pos:line="12" pos:column="44"/></name></name></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">server<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">.<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">sin_port<pos:position pos:line="13" pos:column="20"/></name></name>        <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <call><name pos:line="13" pos:column="30">htons<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">port<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">server<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">.<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">sin_addr<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">.<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">s_addr<pos:position pos:line="14" pos:column="27"/></name></name> <operator pos:line="14" pos:column="28">=<pos:position pos:line="14" pos:column="29"/></operator> <operator pos:line="14" pos:column="30">(<pos:position pos:line="14" pos:column="31"/></operator><operator pos:line="14" pos:column="31">(<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="32">unsigned<pos:position pos:line="14" pos:column="40"/></name> <name pos:line="14" pos:column="41">long<pos:position pos:line="14" pos:column="45"/></name> <operator pos:line="14" pos:column="46">*<pos:position pos:line="14" pos:column="47"/></operator><operator pos:line="14" pos:column="47">)<pos:position pos:line="14" pos:column="48"/></operator><operator pos:line="14" pos:column="48">(<pos:position pos:line="14" pos:column="49"/></operator><name><name pos:line="14" pos:column="49">he<pos:position pos:line="14" pos:column="51"/></name><operator pos:line="14" pos:column="51">-&gt;<pos:position pos:line="14" pos:column="56"/></operator><name pos:line="14" pos:column="53">h_addr_list<pos:position pos:line="14" pos:column="64"/></name><index pos:line="14" pos:column="64">[<expr><literal type="number" pos:line="14" pos:column="65">0<pos:position pos:line="14" pos:column="66"/></literal></expr>]<pos:position pos:line="14" pos:column="67"/></index></name><operator pos:line="14" pos:column="67">)<pos:position pos:line="14" pos:column="68"/></operator><operator pos:line="14" pos:column="68">)<pos:position pos:line="14" pos:column="69"/></operator><index pos:line="14" pos:column="69">[<expr><literal type="number" pos:line="14" pos:column="70">0<pos:position pos:line="14" pos:column="71"/></literal></expr>]<pos:position pos:line="14" pos:column="72"/></index></expr>;<pos:position pos:line="14" pos:column="73"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block>

  <expr_stmt><expr><name pos:line="17" pos:column="3">con<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name pos:line="17" pos:column="9">malloc<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">concurrency<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">*<pos:position pos:line="17" pos:column="28"/></operator><sizeof pos:line="17" pos:column="28">sizeof<argument_list pos:line="17" pos:column="34">(<argument><expr pos:line="17" pos:column="35">struct <name pos:line="17" pos:column="42">connection<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">memset<pos:position pos:line="18" pos:column="9"/></name><argument_list pos:line="18" pos:column="9">(<argument><expr><name pos:line="18" pos:column="10">con<pos:position pos:line="18" pos:column="13"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="18" pos:column="14">0<pos:position pos:line="18" pos:column="15"/></literal></expr></argument>,<argument><expr><name pos:line="18" pos:column="16">concurrency<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">*<pos:position pos:line="18" pos:column="28"/></operator><sizeof pos:line="18" pos:column="28">sizeof<argument_list pos:line="18" pos:column="34">(<argument><expr pos:line="18" pos:column="35">struct <name pos:line="18" pos:column="42">connection<pos:position pos:line="18" pos:column="52"/></name></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>

  <expr_stmt><expr><name pos:line="20" pos:column="3">stats<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <call><name pos:line="20" pos:column="11">malloc<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">requests<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">*<pos:position pos:line="20" pos:column="28"/></operator> <sizeof pos:line="20" pos:column="29">sizeof<argument_list pos:line="20" pos:column="35">(<argument><expr pos:line="20" pos:column="36">struct <name pos:line="20" pos:column="43">data<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">FD_ZERO<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><operator pos:line="22" pos:column="11">&amp;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="12">readbits<pos:position pos:line="22" pos:column="20"/></name></expr></argument>)<pos:position pos:line="22" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">FD_ZERO<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><operator pos:line="23" pos:column="11">&amp;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="12">writebits<pos:position pos:line="23" pos:column="21"/></name></expr></argument>)<pos:position pos:line="23" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* setup request */</comment>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">sprintf<pos:position pos:line="26" pos:column="10"/></name><argument_list pos:line="26" pos:column="10">(<argument><expr><name pos:line="26" pos:column="11">request<pos:position pos:line="26" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="26" pos:column="19">"GET %s HTTP/1.0\r\nUser-Agent: ZeusBench/1.0\r\n"<pos:position pos:line="26" pos:column="69"/></literal>
          <literal type="string" pos:line="27" pos:column="11">"%sHost: %s\r\nAccept: */*\r\n\r\n"<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">file<pos:position pos:line="27" pos:column="52"/></name></expr></argument>,
          <argument><expr><ternary><condition><expr><name pos:line="28" pos:column="11">keepalive<pos:position pos:line="28" pos:column="20"/></name></expr>?<pos:position pos:line="28" pos:column="21"/></condition><then><expr><literal type="string" pos:line="28" pos:column="21">"Connection: Keep-Alive\r\n"<pos:position pos:line="28" pos:column="49"/></literal></expr></then><else pos:line="28" pos:column="49">:<expr><literal type="string" pos:line="28" pos:column="50">""<pos:position pos:line="28" pos:column="52"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="28" pos:column="54">machine<pos:position pos:line="28" pos:column="61"/></name></expr></argument> )<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></expr_stmt>

  <expr_stmt><expr><name pos:line="30" pos:column="3">reqlen<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">=<pos:position pos:line="30" pos:column="11"/></operator> <call><name pos:line="30" pos:column="12">strlen<pos:position pos:line="30" pos:column="18"/></name><argument_list pos:line="30" pos:column="18">(<argument><expr><name pos:line="30" pos:column="19">request<pos:position pos:line="30" pos:column="26"/></name></expr></argument>)<pos:position pos:line="30" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="32" pos:column="3">/* ok - lets start */</comment>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">gettimeofday<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><operator pos:line="33" pos:column="16">&amp;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="17">start<pos:position pos:line="33" pos:column="22"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="33" pos:column="23">0<pos:position pos:line="33" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>

  <comment type="block" pos:line="35" pos:column="3">/* initialise lots of requests */</comment>
  <for pos:line="36" pos:column="3">for<control pos:line="36" pos:column="6">(<init><expr><name pos:line="36" pos:column="7">i<pos:position pos:line="36" pos:column="8"/></name><operator pos:line="36" pos:column="8">=<pos:position pos:line="36" pos:column="9"/></operator><literal type="number" pos:line="36" pos:column="9">0<pos:position pos:line="36" pos:column="10"/></literal></expr>;<pos:position pos:line="36" pos:column="11"/></init> <condition><expr><name pos:line="36" pos:column="12">i<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">&lt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">concurrency<pos:position pos:line="36" pos:column="25"/></name></expr>;<pos:position pos:line="36" pos:column="26"/></condition> <incr><expr><name pos:line="36" pos:column="27">i<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">++<pos:position pos:line="36" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="31"/></control> <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="32">start_connect<pos:position pos:line="36" pos:column="45"/></name><argument_list pos:line="36" pos:column="45">(<argument><expr><operator pos:line="36" pos:column="46">&amp;<pos:position pos:line="36" pos:column="51"/></operator><name><name pos:line="36" pos:column="47">con<pos:position pos:line="36" pos:column="50"/></name><index pos:line="36" pos:column="50">[<expr><name pos:line="36" pos:column="51">i<pos:position pos:line="36" pos:column="52"/></name></expr>]<pos:position pos:line="36" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="55"/></expr_stmt></block></for>

  <while pos:line="38" pos:column="3">while<condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">done<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">&lt;<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="14">requests<pos:position pos:line="38" pos:column="22"/></name></expr>)<pos:position pos:line="38" pos:column="23"/></condition> <block pos:line="38" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">int<pos:position pos:line="39" pos:column="8"/></name></type> <name pos:line="39" pos:column="9">n<pos:position pos:line="39" pos:column="10"/></name></decl>;<pos:position pos:line="39" pos:column="11"/></decl_stmt>
    <comment type="block" pos:line="40" pos:column="5">/* setup bit arrays */</comment>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">memcpy<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><operator pos:line="41" pos:column="12">&amp;<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="13">sel_except<pos:position pos:line="41" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="25">&amp;<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="26">readbits<pos:position pos:line="41" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="36">sizeof<argument_list pos:line="41" pos:column="42">(<argument><expr><name pos:line="41" pos:column="43">readbits<pos:position pos:line="41" pos:column="51"/></name></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">memcpy<pos:position pos:line="42" pos:column="11"/></name><argument_list pos:line="42" pos:column="11">(<argument><expr><operator pos:line="42" pos:column="12">&amp;<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="13">sel_read<pos:position pos:line="42" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="23">&amp;<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="24">readbits<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="34">sizeof<argument_list pos:line="42" pos:column="40">(<argument><expr><name pos:line="42" pos:column="41">readbits<pos:position pos:line="42" pos:column="49"/></name></expr></argument>)<pos:position pos:line="42" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">memcpy<pos:position pos:line="43" pos:column="11"/></name><argument_list pos:line="43" pos:column="11">(<argument><expr><operator pos:line="43" pos:column="12">&amp;<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="13">sel_write<pos:position pos:line="43" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="24">&amp;<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="25">writebits<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="36">sizeof<argument_list pos:line="43" pos:column="42">(<argument><expr><name pos:line="43" pos:column="43">readbits<pos:position pos:line="43" pos:column="51"/></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="54"/></expr_stmt>

    <comment type="block" pos:line="45" pos:column="5">/* check for time limit expiry */</comment>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">gettimeofday<pos:position pos:line="46" pos:column="17"/></name><argument_list pos:line="46" pos:column="17">(<argument><expr><operator pos:line="46" pos:column="18">&amp;<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="19">now<pos:position pos:line="46" pos:column="22"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="46" pos:column="23">0<pos:position pos:line="46" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="26"/></expr_stmt>
    <if pos:line="47" pos:column="5">if<condition pos:line="47" pos:column="7">(<expr><name pos:line="47" pos:column="8">tlimit<pos:position pos:line="47" pos:column="14"/></name> <operator pos:line="47" pos:column="15">&amp;&amp;<pos:position pos:line="47" pos:column="25"/></operator> <call><name pos:line="47" pos:column="18">timedif<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><name pos:line="47" pos:column="26">now<pos:position pos:line="47" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="47" pos:column="30">start<pos:position pos:line="47" pos:column="35"/></name></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call> <operator pos:line="47" pos:column="37">&gt;<pos:position pos:line="47" pos:column="41"/></operator> <operator pos:line="47" pos:column="39">(<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="40">tlimit<pos:position pos:line="47" pos:column="46"/></name><operator pos:line="47" pos:column="46">*<pos:position pos:line="47" pos:column="47"/></operator><literal type="number" pos:line="47" pos:column="47">1000<pos:position pos:line="47" pos:column="51"/></literal><operator pos:line="47" pos:column="51">)<pos:position pos:line="47" pos:column="52"/></operator></expr>)<pos:position pos:line="47" pos:column="53"/></condition><then pos:line="47" pos:column="53"> <block pos:line="47" pos:column="54">{
      <expr_stmt><expr><name pos:line="48" pos:column="7">requests<pos:position pos:line="48" pos:column="15"/></name><operator pos:line="48" pos:column="15">=<pos:position pos:line="48" pos:column="16"/></operator><name pos:line="48" pos:column="16">done<pos:position pos:line="48" pos:column="20"/></name></expr>;<pos:position pos:line="48" pos:column="21"/></expr_stmt>   <comment type="block" pos:line="48" pos:column="24">/* so stats are correct */</comment>
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">output_results<pos:position pos:line="49" pos:column="21"/></name><argument_list pos:line="49" pos:column="21">()<pos:position pos:line="49" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="52" pos:column="5">/* Timeout of 30 seconds. */</comment>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">timeout<pos:position pos:line="53" pos:column="12"/></name><operator pos:line="53" pos:column="12">.<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="13">tv_sec<pos:position pos:line="53" pos:column="19"/></name></name><operator pos:line="53" pos:column="19">=<pos:position pos:line="53" pos:column="20"/></operator><literal type="number" pos:line="53" pos:column="20">30<pos:position pos:line="53" pos:column="22"/></literal></expr>;<pos:position pos:line="53" pos:column="23"/></expr_stmt> <expr_stmt><expr><name><name pos:line="53" pos:column="24">timeout<pos:position pos:line="53" pos:column="31"/></name><operator pos:line="53" pos:column="31">.<pos:position pos:line="53" pos:column="32"/></operator><name pos:line="53" pos:column="32">tv_usec<pos:position pos:line="53" pos:column="39"/></name></name><operator pos:line="53" pos:column="39">=<pos:position pos:line="53" pos:column="40"/></operator><literal type="number" pos:line="53" pos:column="40">0<pos:position pos:line="53" pos:column="41"/></literal></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="54" pos:column="5">n<pos:position pos:line="54" pos:column="6"/></name><operator pos:line="54" pos:column="6">=<pos:position pos:line="54" pos:column="7"/></operator><call><name pos:line="54" pos:column="7">select<pos:position pos:line="54" pos:column="13"/></name><argument_list pos:line="54" pos:column="13">(<argument><expr><literal type="number" pos:line="54" pos:column="14">256<pos:position pos:line="54" pos:column="17"/></literal></expr></argument>, <argument><expr><operator pos:line="54" pos:column="19">&amp;<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="20">sel_read<pos:position pos:line="54" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="30">&amp;<pos:position pos:line="54" pos:column="35"/></operator><name pos:line="54" pos:column="31">sel_write<pos:position pos:line="54" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="42">&amp;<pos:position pos:line="54" pos:column="47"/></operator><name pos:line="54" pos:column="43">sel_except<pos:position pos:line="54" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="55">&amp;<pos:position pos:line="54" pos:column="60"/></operator><name pos:line="54" pos:column="56">timeout<pos:position pos:line="54" pos:column="63"/></name></expr></argument>)<pos:position pos:line="54" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="65"/></expr_stmt>
    <if pos:line="55" pos:column="5">if<condition pos:line="55" pos:column="7">(<expr><operator pos:line="55" pos:column="8">!<pos:position pos:line="55" pos:column="9"/></operator><name pos:line="55" pos:column="9">n<pos:position pos:line="55" pos:column="10"/></name></expr>)<pos:position pos:line="55" pos:column="11"/></condition><then pos:line="55" pos:column="11"> <block pos:line="55" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">printf<pos:position pos:line="56" pos:column="13"/></name><argument_list pos:line="56" pos:column="13">(<argument><expr><literal type="string" pos:line="56" pos:column="14">"\nServer timed out\n\n"<pos:position pos:line="56" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="57" pos:column="7">exit<pos:position pos:line="57" pos:column="11"/></name><argument_list pos:line="57" pos:column="11">(<argument><expr><literal type="number" pos:line="57" pos:column="12">1<pos:position pos:line="57" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>
    <if pos:line="59" pos:column="5">if<condition pos:line="59" pos:column="7">(<expr><name pos:line="59" pos:column="8">n<pos:position pos:line="59" pos:column="9"/></name><operator pos:line="59" pos:column="9">&lt;<pos:position pos:line="59" pos:column="13"/></operator><literal type="number" pos:line="59" pos:column="10">1<pos:position pos:line="59" pos:column="11"/></literal></expr>)<pos:position pos:line="59" pos:column="12"/></condition><then pos:line="59" pos:column="12"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="13">err<pos:position pos:line="59" pos:column="16"/></name><argument_list pos:line="59" pos:column="16">(<argument><expr><literal type="string" pos:line="59" pos:column="17">"select"<pos:position pos:line="59" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="27"/></expr_stmt></block></then></if>

    <for pos:line="61" pos:column="5">for<control pos:line="61" pos:column="8">(<init><expr><name pos:line="61" pos:column="9">i<pos:position pos:line="61" pos:column="10"/></name><operator pos:line="61" pos:column="10">=<pos:position pos:line="61" pos:column="11"/></operator><literal type="number" pos:line="61" pos:column="11">0<pos:position pos:line="61" pos:column="12"/></literal></expr>;<pos:position pos:line="61" pos:column="13"/></init> <condition><expr><name pos:line="61" pos:column="14">i<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">&lt;<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="16">concurrency<pos:position pos:line="61" pos:column="27"/></name></expr>;<pos:position pos:line="61" pos:column="28"/></condition> <incr><expr><name pos:line="61" pos:column="29">i<pos:position pos:line="61" pos:column="30"/></name><operator pos:line="61" pos:column="30">++<pos:position pos:line="61" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="61" pos:column="33"/></control> <block pos:line="61" pos:column="34">{
      <decl_stmt><decl><type><name pos:line="62" pos:column="7">int<pos:position pos:line="62" pos:column="10"/></name></type> <name pos:line="62" pos:column="11">s<pos:position pos:line="62" pos:column="12"/></name> <init pos:line="62" pos:column="13">= <expr><name><name pos:line="62" pos:column="15">con<pos:position pos:line="62" pos:column="18"/></name><index pos:line="62" pos:column="18">[<expr><name pos:line="62" pos:column="19">i<pos:position pos:line="62" pos:column="20"/></name></expr>]<pos:position pos:line="62" pos:column="21"/></index></name><operator pos:line="62" pos:column="21">.<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="22">fd<pos:position pos:line="62" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="62" pos:column="25"/></decl_stmt>
      <if pos:line="63" pos:column="7">if<condition pos:line="63" pos:column="9">(<expr><call><name pos:line="63" pos:column="10">FD_ISSET<pos:position pos:line="63" pos:column="18"/></name><argument_list pos:line="63" pos:column="18">(<argument><expr><name pos:line="63" pos:column="19">s<pos:position pos:line="63" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="22">&amp;<pos:position pos:line="63" pos:column="27"/></operator><name pos:line="63" pos:column="23">sel_except<pos:position pos:line="63" pos:column="33"/></name></expr></argument>)<pos:position pos:line="63" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="35"/></condition><then pos:line="63" pos:column="35"> <block pos:line="63" pos:column="36">{
        <expr_stmt><expr><name pos:line="64" pos:column="9">bad<pos:position pos:line="64" pos:column="12"/></name><operator pos:line="64" pos:column="12">++<pos:position pos:line="64" pos:column="14"/></operator></expr>;<pos:position pos:line="64" pos:column="15"/></expr_stmt>
        <expr_stmt><expr><name pos:line="65" pos:column="9">err_except<pos:position pos:line="65" pos:column="19"/></name><operator pos:line="65" pos:column="19">++<pos:position pos:line="65" pos:column="21"/></operator></expr>;<pos:position pos:line="65" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">start_connect<pos:position pos:line="66" pos:column="22"/></name><argument_list pos:line="66" pos:column="22">(<argument><expr><operator pos:line="66" pos:column="23">&amp;<pos:position pos:line="66" pos:column="28"/></operator><name><name pos:line="66" pos:column="24">con<pos:position pos:line="66" pos:column="27"/></name><index pos:line="66" pos:column="27">[<expr><name pos:line="66" pos:column="28">i<pos:position pos:line="66" pos:column="29"/></name></expr>]<pos:position pos:line="66" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="66" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="32"/></expr_stmt>
        <continue pos:line="67" pos:column="9">continue;<pos:position pos:line="67" pos:column="18"/></continue>
      }<pos:position pos:line="68" pos:column="8"/></block></then></if>
      <if pos:line="69" pos:column="7">if<condition pos:line="69" pos:column="9">(<expr><call><name pos:line="69" pos:column="10">FD_ISSET<pos:position pos:line="69" pos:column="18"/></name><argument_list pos:line="69" pos:column="18">(<argument><expr><name pos:line="69" pos:column="19">s<pos:position pos:line="69" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="22">&amp;<pos:position pos:line="69" pos:column="27"/></operator><name pos:line="69" pos:column="23">sel_read<pos:position pos:line="69" pos:column="31"/></name></expr></argument>)<pos:position pos:line="69" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="33"/></condition><then pos:line="69" pos:column="33"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="34">read_connection<pos:position pos:line="69" pos:column="49"/></name><argument_list pos:line="69" pos:column="49">(<argument><expr><operator pos:line="69" pos:column="50">&amp;<pos:position pos:line="69" pos:column="55"/></operator><name><name pos:line="69" pos:column="51">con<pos:position pos:line="69" pos:column="54"/></name><index pos:line="69" pos:column="54">[<expr><name pos:line="69" pos:column="55">i<pos:position pos:line="69" pos:column="56"/></name></expr>]<pos:position pos:line="69" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="69" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="59"/></expr_stmt></block></then></if>
      <if pos:line="70" pos:column="7">if<condition pos:line="70" pos:column="9">(<expr><call><name pos:line="70" pos:column="10">FD_ISSET<pos:position pos:line="70" pos:column="18"/></name><argument_list pos:line="70" pos:column="18">(<argument><expr><name pos:line="70" pos:column="19">s<pos:position pos:line="70" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="22">&amp;<pos:position pos:line="70" pos:column="27"/></operator><name pos:line="70" pos:column="23">sel_write<pos:position pos:line="70" pos:column="32"/></name></expr></argument>)<pos:position pos:line="70" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="34"/></condition><then pos:line="70" pos:column="34"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="35">write_request<pos:position pos:line="70" pos:column="48"/></name><argument_list pos:line="70" pos:column="48">(<argument><expr><operator pos:line="70" pos:column="49">&amp;<pos:position pos:line="70" pos:column="54"/></operator><name><name pos:line="70" pos:column="50">con<pos:position pos:line="70" pos:column="53"/></name><index pos:line="70" pos:column="53">[<expr><name pos:line="70" pos:column="54">i<pos:position pos:line="70" pos:column="55"/></name></expr>]<pos:position pos:line="70" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="70" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="58"/></expr_stmt></block></then></if>
    }<pos:position pos:line="71" pos:column="6"/></block></for>
    <if pos:line="72" pos:column="5">if<condition pos:line="72" pos:column="7">(<expr><name pos:line="72" pos:column="8">done<pos:position pos:line="72" pos:column="12"/></name><operator pos:line="72" pos:column="12">&gt;=<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="14">requests<pos:position pos:line="72" pos:column="22"/></name></expr>)<pos:position pos:line="72" pos:column="23"/></condition><then pos:line="72" pos:column="23"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="24">output_results<pos:position pos:line="72" pos:column="38"/></name><argument_list pos:line="72" pos:column="38">()<pos:position pos:line="72" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="41"/></expr_stmt></block></then></if>
  }<pos:position pos:line="73" pos:column="4"/></block></while>
  <return pos:line="74" pos:column="3">return <expr><literal type="number" pos:line="74" pos:column="10">0<pos:position pos:line="74" pos:column="11"/></literal></expr>;<pos:position pos:line="74" pos:column="12"/></return>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

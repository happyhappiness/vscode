<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_680_httpd-2.2.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BOOL<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ssl_expr_eval<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">request_rec<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">r<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">ssl_expr<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">node<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <switch pos:line="3" pos:column="5">switch <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">node<pos:position pos:line="3" pos:column="17"/></name><operator pos:line="3" pos:column="17">-&gt;<pos:position pos:line="3" pos:column="22"/></operator><name pos:line="3" pos:column="19">node_op<pos:position pos:line="3" pos:column="26"/></name></name></expr>)<pos:position pos:line="3" pos:column="27"/></condition> <block pos:line="3" pos:column="28">{
        <case pos:line="4" pos:column="9">case <expr><name pos:line="4" pos:column="14">op_True<pos:position pos:line="4" pos:column="21"/></name></expr>:<pos:position pos:line="4" pos:column="22"/></case> <block pos:line="4" pos:column="23">{
            <return pos:line="5" pos:column="13">return <expr><name pos:line="5" pos:column="20">TRUE<pos:position pos:line="5" pos:column="24"/></name></expr>;<pos:position pos:line="5" pos:column="25"/></return>
        }<pos:position pos:line="6" pos:column="10"/></block>
        <case pos:line="7" pos:column="9">case <expr><name pos:line="7" pos:column="14">op_False<pos:position pos:line="7" pos:column="22"/></name></expr>:<pos:position pos:line="7" pos:column="23"/></case> <block pos:line="7" pos:column="24">{
            <return pos:line="8" pos:column="13">return <expr><name pos:line="8" pos:column="20">FALSE<pos:position pos:line="8" pos:column="25"/></name></expr>;<pos:position pos:line="8" pos:column="26"/></return>
        }<pos:position pos:line="9" pos:column="10"/></block>
        <case pos:line="10" pos:column="9">case <expr><name pos:line="10" pos:column="14">op_Not<pos:position pos:line="10" pos:column="20"/></name></expr>:<pos:position pos:line="10" pos:column="21"/></case> <block pos:line="10" pos:column="22">{
            <decl_stmt><decl><type><name pos:line="11" pos:column="13">ssl_expr<pos:position pos:line="11" pos:column="21"/></name> <modifier pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></modifier></type><name pos:line="11" pos:column="23">e<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><operator pos:line="11" pos:column="27">(<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">ssl_expr<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">*<pos:position pos:line="11" pos:column="38"/></operator><operator pos:line="11" pos:column="38">)<pos:position pos:line="11" pos:column="39"/></operator><name><name pos:line="11" pos:column="39">node<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">node_arg1<pos:position pos:line="11" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="55"/></decl_stmt>
            <return pos:line="12" pos:column="13">return <expr><operator pos:line="12" pos:column="20">(<pos:position pos:line="12" pos:column="21"/></operator><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><call><name pos:line="12" pos:column="22">ssl_expr_eval<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><name pos:line="12" pos:column="36">r<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="39">e<pos:position pos:line="12" pos:column="40"/></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call><operator pos:line="12" pos:column="41">)<pos:position pos:line="12" pos:column="42"/></operator></expr>;<pos:position pos:line="12" pos:column="43"/></return>
        }<pos:position pos:line="13" pos:column="10"/></block>
        <case pos:line="14" pos:column="9">case <expr><name pos:line="14" pos:column="14">op_Or<pos:position pos:line="14" pos:column="19"/></name></expr>:<pos:position pos:line="14" pos:column="20"/></case> <block pos:line="14" pos:column="21">{
            <decl_stmt><decl><type><name pos:line="15" pos:column="13">ssl_expr<pos:position pos:line="15" pos:column="21"/></name> <modifier pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></modifier></type><name pos:line="15" pos:column="23">e1<pos:position pos:line="15" pos:column="25"/></name> <init pos:line="15" pos:column="26">= <expr><operator pos:line="15" pos:column="28">(<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">ssl_expr<pos:position pos:line="15" pos:column="37"/></name> <operator pos:line="15" pos:column="38">*<pos:position pos:line="15" pos:column="39"/></operator><operator pos:line="15" pos:column="39">)<pos:position pos:line="15" pos:column="40"/></operator><name><name pos:line="15" pos:column="40">node<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">-&gt;<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="46">node_arg1<pos:position pos:line="15" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="15" pos:column="56"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">ssl_expr<pos:position pos:line="16" pos:column="21"/></name> <modifier pos:line="16" pos:column="22">*<pos:position pos:line="16" pos:column="23"/></modifier></type><name pos:line="16" pos:column="23">e2<pos:position pos:line="16" pos:column="25"/></name> <init pos:line="16" pos:column="26">= <expr><operator pos:line="16" pos:column="28">(<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">ssl_expr<pos:position pos:line="16" pos:column="37"/></name> <operator pos:line="16" pos:column="38">*<pos:position pos:line="16" pos:column="39"/></operator><operator pos:line="16" pos:column="39">)<pos:position pos:line="16" pos:column="40"/></operator><name><name pos:line="16" pos:column="40">node<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">-&gt;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="46">node_arg2<pos:position pos:line="16" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="56"/></decl_stmt>
            <return pos:line="17" pos:column="13">return <expr><operator pos:line="17" pos:column="20">(<pos:position pos:line="17" pos:column="21"/></operator><call><name pos:line="17" pos:column="21">ssl_expr_eval<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">r<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">e1<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call> <operator pos:line="17" pos:column="42">||<pos:position pos:line="17" pos:column="44"/></operator> <call><name pos:line="17" pos:column="45">ssl_expr_eval<pos:position pos:line="17" pos:column="58"/></name><argument_list pos:line="17" pos:column="58">(<argument><expr><name pos:line="17" pos:column="59">r<pos:position pos:line="17" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="62">e2<pos:position pos:line="17" pos:column="64"/></name></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call><operator pos:line="17" pos:column="65">)<pos:position pos:line="17" pos:column="66"/></operator></expr>;<pos:position pos:line="17" pos:column="67"/></return>
        }<pos:position pos:line="18" pos:column="10"/></block>
        <case pos:line="19" pos:column="9">case <expr><name pos:line="19" pos:column="14">op_And<pos:position pos:line="19" pos:column="20"/></name></expr>:<pos:position pos:line="19" pos:column="21"/></case> <block pos:line="19" pos:column="22">{
            <decl_stmt><decl><type><name pos:line="20" pos:column="13">ssl_expr<pos:position pos:line="20" pos:column="21"/></name> <modifier pos:line="20" pos:column="22">*<pos:position pos:line="20" pos:column="23"/></modifier></type><name pos:line="20" pos:column="23">e1<pos:position pos:line="20" pos:column="25"/></name> <init pos:line="20" pos:column="26">= <expr><operator pos:line="20" pos:column="28">(<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="29">ssl_expr<pos:position pos:line="20" pos:column="37"/></name> <operator pos:line="20" pos:column="38">*<pos:position pos:line="20" pos:column="39"/></operator><operator pos:line="20" pos:column="39">)<pos:position pos:line="20" pos:column="40"/></operator><name><name pos:line="20" pos:column="40">node<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">-&gt;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="46">node_arg1<pos:position pos:line="20" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="20" pos:column="56"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="21" pos:column="13">ssl_expr<pos:position pos:line="21" pos:column="21"/></name> <modifier pos:line="21" pos:column="22">*<pos:position pos:line="21" pos:column="23"/></modifier></type><name pos:line="21" pos:column="23">e2<pos:position pos:line="21" pos:column="25"/></name> <init pos:line="21" pos:column="26">= <expr><operator pos:line="21" pos:column="28">(<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="29">ssl_expr<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">*<pos:position pos:line="21" pos:column="39"/></operator><operator pos:line="21" pos:column="39">)<pos:position pos:line="21" pos:column="40"/></operator><name><name pos:line="21" pos:column="40">node<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">-&gt;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="46">node_arg2<pos:position pos:line="21" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="21" pos:column="56"/></decl_stmt>
            <return pos:line="22" pos:column="13">return <expr><operator pos:line="22" pos:column="20">(<pos:position pos:line="22" pos:column="21"/></operator><call><name pos:line="22" pos:column="21">ssl_expr_eval<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">r<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">e1<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call> <operator pos:line="22" pos:column="42">&amp;&amp;<pos:position pos:line="22" pos:column="52"/></operator> <call><name pos:line="22" pos:column="45">ssl_expr_eval<pos:position pos:line="22" pos:column="58"/></name><argument_list pos:line="22" pos:column="58">(<argument><expr><name pos:line="22" pos:column="59">r<pos:position pos:line="22" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="62">e2<pos:position pos:line="22" pos:column="64"/></name></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></call><operator pos:line="22" pos:column="65">)<pos:position pos:line="22" pos:column="66"/></operator></expr>;<pos:position pos:line="22" pos:column="67"/></return>
        }<pos:position pos:line="23" pos:column="10"/></block>
        <case pos:line="24" pos:column="9">case <expr><name pos:line="24" pos:column="14">op_Comp<pos:position pos:line="24" pos:column="21"/></name></expr>:<pos:position pos:line="24" pos:column="22"/></case> <block pos:line="24" pos:column="23">{
            <decl_stmt><decl><type><name pos:line="25" pos:column="13">ssl_expr<pos:position pos:line="25" pos:column="21"/></name> <modifier pos:line="25" pos:column="22">*<pos:position pos:line="25" pos:column="23"/></modifier></type><name pos:line="25" pos:column="23">e<pos:position pos:line="25" pos:column="24"/></name> <init pos:line="25" pos:column="25">= <expr><operator pos:line="25" pos:column="27">(<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">ssl_expr<pos:position pos:line="25" pos:column="36"/></name> <operator pos:line="25" pos:column="37">*<pos:position pos:line="25" pos:column="38"/></operator><operator pos:line="25" pos:column="38">)<pos:position pos:line="25" pos:column="39"/></operator><name><name pos:line="25" pos:column="39">node<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">node_arg1<pos:position pos:line="25" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="25" pos:column="55"/></decl_stmt>
            <return pos:line="26" pos:column="13">return <expr><call><name pos:line="26" pos:column="20">ssl_expr_eval_comp<pos:position pos:line="26" pos:column="38"/></name><argument_list pos:line="26" pos:column="38">(<argument><expr><name pos:line="26" pos:column="39">r<pos:position pos:line="26" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="42">e<pos:position pos:line="26" pos:column="43"/></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></return>
        }<pos:position pos:line="27" pos:column="10"/></block>
        <default pos:line="28" pos:column="9">default:<pos:position pos:line="28" pos:column="17"/></default> <block pos:line="28" pos:column="18">{
            <expr_stmt><expr><name pos:line="29" pos:column="13">ssl_expr_error<pos:position pos:line="29" pos:column="27"/></name> <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <literal type="string" pos:line="29" pos:column="30">"Internal evaluation error: Unknown expression node"<pos:position pos:line="29" pos:column="82"/></literal></expr>;<pos:position pos:line="29" pos:column="83"/></expr_stmt>
            <return pos:line="30" pos:column="13">return <expr><name pos:line="30" pos:column="20">FALSE<pos:position pos:line="30" pos:column="25"/></name></expr>;<pos:position pos:line="30" pos:column="26"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block>
    }<pos:position pos:line="32" pos:column="6"/></block></switch>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_603_httpd-2.0.43.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">EVP_PKEY<pos:position pos:line="1" pos:column="9"/></name> <modifier pos:line="1" pos:column="10">*<pos:position pos:line="1" pos:column="11"/></modifier></type><name pos:line="1" pos:column="11">SSL_read_PrivateKey<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name><modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type> <name pos:line="1" pos:column="37">filename<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">EVP_PKEY<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier><modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">key<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><function_decl><type><name pos:line="1" pos:column="63">int<pos:position pos:line="1" pos:column="66"/></name></type> (<modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier><name pos:line="1" pos:column="69">cb<pos:position pos:line="1" pos:column="71"/></name>)<parameter_list pos:line="1" pos:column="72">(<parameter><decl><type><name pos:line="1" pos:column="73">char<pos:position pos:line="1" pos:column="77"/></name><modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="79">int<pos:position pos:line="1" pos:column="82"/></name></type></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="83">int<pos:position pos:line="1" pos:column="86"/></name></type></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="87">void<pos:position pos:line="1" pos:column="91"/></name><modifier pos:line="1" pos:column="91">*<pos:position pos:line="1" pos:column="92"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="93"/></parameter_list></function_decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="95">void<pos:position pos:line="1" pos:column="99"/></name> <modifier pos:line="1" pos:column="100">*<pos:position pos:line="1" pos:column="101"/></modifier></type><name pos:line="1" pos:column="101">s<pos:position pos:line="1" pos:column="102"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="103"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">EVP_PKEY<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">rc<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">BIO<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">bioS<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">BIO<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">bioF<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* 1. try PEM (= DER+Base64+headers) */</comment>
       <if pos:line="8" pos:column="8">if <condition pos:line="8" pos:column="11">(<expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">bioS<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator><call><name pos:line="8" pos:column="18">BIO_new_file<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">filename<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="41">"r"<pos:position pos:line="8" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call><operator pos:line="8" pos:column="45">)<pos:position pos:line="8" pos:column="46"/></operator> <operator pos:line="8" pos:column="47">==<pos:position pos:line="8" pos:column="49"/></operator> <name pos:line="8" pos:column="50">NULL<pos:position pos:line="8" pos:column="54"/></name></expr>)<pos:position pos:line="8" pos:column="55"/></condition><then pos:line="8" pos:column="55">
               <block type="pseudo"><return pos:line="9" pos:column="16">return <expr><name pos:line="9" pos:column="23">NULL<pos:position pos:line="9" pos:column="27"/></name></expr>;<pos:position pos:line="9" pos:column="28"/></return></block></then></if>
       <expr_stmt><expr><name pos:line="10" pos:column="8">rc<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <call><name pos:line="10" pos:column="13">modssl_PEM_read_bio_PrivateKey<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">(<argument><expr><name pos:line="10" pos:column="44">bioS<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="50">key<pos:position pos:line="10" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="55">cb<pos:position pos:line="10" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="59">s<pos:position pos:line="10" pos:column="60"/></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></expr_stmt>
       <expr_stmt><expr><call><name pos:line="11" pos:column="8">BIO_free<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">bioS<pos:position pos:line="11" pos:column="21"/></name></expr></argument>)<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">rc<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">==<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">NULL<pos:position pos:line="13" pos:column="19"/></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20"> <block pos:line="13" pos:column="21">{
        <comment type="block" pos:line="14" pos:column="9">/* 2. try DER+Base64 */</comment>
               <if pos:line="15" pos:column="16">if <condition pos:line="15" pos:column="19">( <expr><operator pos:line="15" pos:column="21">(<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">bioS<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">=<pos:position pos:line="15" pos:column="28"/></operator> <call><name pos:line="15" pos:column="29">BIO_new_file<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">filename<pos:position pos:line="15" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="52">"r"<pos:position pos:line="15" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call><operator pos:line="15" pos:column="56">)<pos:position pos:line="15" pos:column="57"/></operator> <operator pos:line="15" pos:column="58">==<pos:position pos:line="15" pos:column="60"/></operator> <name pos:line="15" pos:column="61">NULL<pos:position pos:line="15" pos:column="65"/></name></expr> )<pos:position pos:line="15" pos:column="67"/></condition><then pos:line="15" pos:column="67">
                       <block type="pseudo"><return pos:line="16" pos:column="24">return <expr><name pos:line="16" pos:column="31">NULL<pos:position pos:line="16" pos:column="35"/></name></expr>;<pos:position pos:line="16" pos:column="36"/></return></block></then></if>

               <if pos:line="18" pos:column="16">if <condition pos:line="18" pos:column="19">(<expr><operator pos:line="18" pos:column="20">(<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">bioF<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">=<pos:position pos:line="18" pos:column="27"/></operator> <call><name pos:line="18" pos:column="28">BIO_new<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><call><name pos:line="18" pos:column="36">BIO_f_base64<pos:position pos:line="18" pos:column="48"/></name><argument_list pos:line="18" pos:column="48">()<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call><operator pos:line="18" pos:column="51">)<pos:position pos:line="18" pos:column="52"/></operator> <operator pos:line="18" pos:column="53">==<pos:position pos:line="18" pos:column="55"/></operator> <name pos:line="18" pos:column="56">NULL<pos:position pos:line="18" pos:column="60"/></name></expr>)<pos:position pos:line="18" pos:column="61"/></condition><then pos:line="18" pos:column="61"> <block pos:line="18" pos:column="62">{
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">BIO_free<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">bioS<pos:position pos:line="19" pos:column="26"/></name></expr></argument>)<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
            <return pos:line="20" pos:column="13">return <expr><name pos:line="20" pos:column="20">NULL<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></return>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="22" pos:column="9">bioS<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <call><name pos:line="22" pos:column="16">BIO_push<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">bioF<pos:position pos:line="22" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="31">bioS<pos:position pos:line="22" pos:column="35"/></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="23" pos:column="9">rc<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">d2i_PrivateKey_bio<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">bioS<pos:position pos:line="23" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="39">NULL<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">BIO_free_all<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><name pos:line="24" pos:column="22">bioS<pos:position pos:line="24" pos:column="26"/></name></expr></argument>)<pos:position pos:line="24" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">rc<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">==<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">NULL<pos:position pos:line="25" pos:column="23"/></name></expr>)<pos:position pos:line="25" pos:column="24"/></condition><then pos:line="25" pos:column="24"> <block pos:line="25" pos:column="25">{
            <comment type="block" pos:line="26" pos:column="13">/* 3. try plain DER */</comment>
                       <if pos:line="27" pos:column="24">if <condition pos:line="27" pos:column="27">( <expr><operator pos:line="27" pos:column="29">(<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">bioS<pos:position pos:line="27" pos:column="34"/></name> <operator pos:line="27" pos:column="35">=<pos:position pos:line="27" pos:column="36"/></operator> <call><name pos:line="27" pos:column="37">BIO_new_file<pos:position pos:line="27" pos:column="49"/></name><argument_list pos:line="27" pos:column="49">(<argument><expr><name pos:line="27" pos:column="50">filename<pos:position pos:line="27" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="60">"r"<pos:position pos:line="27" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call><operator pos:line="27" pos:column="64">)<pos:position pos:line="27" pos:column="65"/></operator> <operator pos:line="27" pos:column="66">==<pos:position pos:line="27" pos:column="68"/></operator> <name pos:line="27" pos:column="69">NULL<pos:position pos:line="27" pos:column="73"/></name></expr> )<pos:position pos:line="27" pos:column="75"/></condition><then pos:line="27" pos:column="75">
                               <block type="pseudo"><return pos:line="28" pos:column="32">return <expr><name pos:line="28" pos:column="39">NULL<pos:position pos:line="28" pos:column="43"/></name></expr>;<pos:position pos:line="28" pos:column="44"/></return></block></then></if>
            <expr_stmt><expr><name pos:line="29" pos:column="13">rc<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <call><name pos:line="29" pos:column="18">d2i_PrivateKey_bio<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">bioS<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="43">NULL<pos:position pos:line="29" pos:column="47"/></name></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">BIO_free<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">bioS<pos:position pos:line="30" pos:column="26"/></name></expr></argument>)<pos:position pos:line="30" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">rc<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">!=<pos:position pos:line="33" pos:column="14"/></operator> <name pos:line="33" pos:column="15">NULL<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">&amp;&amp;<pos:position pos:line="33" pos:column="30"/></operator> <name pos:line="33" pos:column="23">key<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">!=<pos:position pos:line="33" pos:column="29"/></operator> <name pos:line="33" pos:column="30">NULL<pos:position pos:line="33" pos:column="34"/></name></expr>)<pos:position pos:line="33" pos:column="35"/></condition><then pos:line="33" pos:column="35"> <block pos:line="33" pos:column="36">{
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">*<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">key<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">!=<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">NULL<pos:position pos:line="34" pos:column="25"/></name></expr>)<pos:position pos:line="34" pos:column="26"/></condition><then pos:line="34" pos:column="26">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="13">EVP_PKEY_free<pos:position pos:line="35" pos:column="26"/></name><argument_list pos:line="35" pos:column="26">(<argument><expr><operator pos:line="35" pos:column="27">*<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="28">key<pos:position pos:line="35" pos:column="31"/></name></expr></argument>)<pos:position pos:line="35" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="33"/></expr_stmt></block></then></if>
        <expr_stmt><expr><operator pos:line="36" pos:column="9">*<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">key<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <name pos:line="36" pos:column="16">rc<pos:position pos:line="36" pos:column="18"/></name></expr>;<pos:position pos:line="36" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">rc<pos:position pos:line="38" pos:column="14"/></name></expr>;<pos:position pos:line="38" pos:column="15"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_992_httpd-2.4.17.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">lua_db_acquire<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">lua_State<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">L<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/*~~~~~~~~~~~~~~~~~~~~~~~~~~~*/</comment>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name>      <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">type<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name>      <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">arguments<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name>      <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">error<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><literal type="number" pos:line="6" pos:column="30">0<pos:position pos:line="6" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">request_rec<pos:position pos:line="7" pos:column="16"/></name>     <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">r<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">lua_db_handle<pos:position pos:line="8" pos:column="18"/></name>   <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type><name pos:line="8" pos:column="22">db<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><literal type="number" pos:line="8" pos:column="27">0<pos:position pos:line="8" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_status_t<pos:position pos:line="9" pos:column="17"/></name></type>     <name pos:line="9" pos:column="22">rc<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><literal type="number" pos:line="9" pos:column="27">0<pos:position pos:line="9" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">ap_dbd_t<pos:position pos:line="10" pos:column="13"/></name>        <modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier></type><name pos:line="10" pos:column="22">dbdhandle<pos:position pos:line="10" pos:column="31"/></name> <init pos:line="10" pos:column="32">= <expr><name pos:line="10" pos:column="34">NULL<pos:position pos:line="10" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_pool_t<pos:position pos:line="11" pos:column="15"/></name>      <modifier pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></modifier></type><name pos:line="11" pos:column="22">pool<pos:position pos:line="11" pos:column="26"/></name> <init pos:line="11" pos:column="27">= <expr><name pos:line="11" pos:column="29">NULL<pos:position pos:line="11" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>
    <comment type="block" pos:line="12" pos:column="5">/*~~~~~~~~~~~~~~~~~~~~~~~~~~~*/</comment>

    <expr_stmt><expr><name pos:line="14" pos:column="5">r<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <call><name pos:line="14" pos:column="9">ap_lua_check_request_rec<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">L<pos:position pos:line="14" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="37">1<pos:position pos:line="14" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">r<pos:position pos:line="15" pos:column="10"/></name></expr>)<pos:position pos:line="15" pos:column="11"/></condition><then pos:line="15" pos:column="11"> <block pos:line="15" pos:column="12">{
        <expr_stmt><expr><name pos:line="16" pos:column="9">type<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">luaL_optstring<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">L<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="34">2<pos:position pos:line="16" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="37">"mod_dbd"<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="48"/></expr_stmt> <comment type="block" pos:line="16" pos:column="49">/* Defaults to mod_dbd */</comment>
        
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><call><name pos:line="18" pos:column="14">strcmp<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">type<pos:position pos:line="18" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="27">"mod_dbd"<pos:position pos:line="18" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="38"/></condition><then pos:line="18" pos:column="38"> <block pos:line="18" pos:column="39">{

            <expr_stmt><expr><call><name pos:line="20" pos:column="13">lua_settop<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">L<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="27">0<pos:position pos:line="20" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="21" pos:column="13">lua_ap_dbd_open<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">=<pos:position pos:line="21" pos:column="30"/></operator> <call><name pos:line="21" pos:column="31">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="21" pos:column="55"/></name><argument_list pos:line="21" pos:column="55">(<argument><expr><name pos:line="21" pos:column="56">ap_dbd_open<pos:position pos:line="21" pos:column="67"/></name></expr></argument>)<pos:position pos:line="21" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="69"/></expr_stmt>
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><name pos:line="22" pos:column="17">lua_ap_dbd_open<pos:position pos:line="22" pos:column="32"/></name></expr>)<pos:position pos:line="22" pos:column="33"/></condition><then pos:line="22" pos:column="33">
                <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="17">dbdhandle<pos:position pos:line="23" pos:column="26"/></name> <operator pos:line="23" pos:column="27">=<pos:position pos:line="23" pos:column="28"/></operator> <operator pos:line="23" pos:column="29">(<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">ap_dbd_t<pos:position pos:line="23" pos:column="38"/></name> <operator pos:line="23" pos:column="39">*<pos:position pos:line="23" pos:column="40"/></operator><operator pos:line="23" pos:column="40">)<pos:position pos:line="23" pos:column="41"/></operator> <call><name pos:line="23" pos:column="42">lua_ap_dbd_open<pos:position pos:line="23" pos:column="57"/></name><argument_list pos:line="23" pos:column="57">(
                        <argument><expr><name><name pos:line="24" pos:column="25">r<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">server<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-&gt;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="36">process<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">-&gt;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="45">pool<pos:position pos:line="24" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="51">r<pos:position pos:line="24" pos:column="52"/></name><operator pos:line="24" pos:column="52">-&gt;<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="54">server<pos:position pos:line="24" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="62"/></expr_stmt></block></then></if>

            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><name pos:line="26" pos:column="17">dbdhandle<pos:position pos:line="26" pos:column="26"/></name></expr>)<pos:position pos:line="26" pos:column="27"/></condition><then pos:line="26" pos:column="27"> <block pos:line="26" pos:column="28">{
                <expr_stmt><expr><name pos:line="27" pos:column="17">db<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <call><name pos:line="27" pos:column="22">lua_push_db_handle<pos:position pos:line="27" pos:column="40"/></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name pos:line="27" pos:column="41">L<pos:position pos:line="27" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="44">r<pos:position pos:line="27" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="47">LUA_DBTYPE_MOD_DBD<pos:position pos:line="27" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="67">dbdhandle<pos:position pos:line="27" pos:column="76"/></name><operator pos:line="27" pos:column="76">-&gt;<pos:position pos:line="27" pos:column="81"/></operator><name pos:line="27" pos:column="78">pool<pos:position pos:line="27" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="84"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="28" pos:column="17">db<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">-&gt;<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="21">driver<pos:position pos:line="28" pos:column="27"/></name></name> <operator pos:line="28" pos:column="28">=<pos:position pos:line="28" pos:column="29"/></operator> <name><name pos:line="28" pos:column="30">dbdhandle<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">driver<pos:position pos:line="28" pos:column="47"/></name></name></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="29" pos:column="17">db<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">-&gt;<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="21">handle<pos:position pos:line="29" pos:column="27"/></name></name> <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <name><name pos:line="29" pos:column="30">dbdhandle<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">-&gt;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="41">handle<pos:position pos:line="29" pos:column="47"/></name></name></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="30" pos:column="17">db<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">dbdhandle<pos:position pos:line="30" pos:column="30"/></name></name> <operator pos:line="30" pos:column="31">=<pos:position pos:line="30" pos:column="32"/></operator> <name pos:line="30" pos:column="33">dbdhandle<pos:position pos:line="30" pos:column="42"/></name></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
                <return pos:line="31" pos:column="17">return <expr><literal type="number" pos:line="31" pos:column="24">1<pos:position pos:line="31" pos:column="25"/></literal></expr>;<pos:position pos:line="31" pos:column="26"/></return>
            }<pos:position pos:line="32" pos:column="14"/></block></then>
            <else pos:line="33" pos:column="13">else <block pos:line="33" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="34" pos:column="17">lua_pushnil<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><name pos:line="34" pos:column="29">L<pos:position pos:line="34" pos:column="30"/></name></expr></argument>)<pos:position pos:line="34" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
                <if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">( <expr><name pos:line="35" pos:column="22">lua_ap_dbd_open<pos:position pos:line="35" pos:column="37"/></name> <operator pos:line="35" pos:column="38">==<pos:position pos:line="35" pos:column="40"/></operator> <name pos:line="35" pos:column="41">NULL<pos:position pos:line="35" pos:column="45"/></name></expr> )<pos:position pos:line="35" pos:column="47"/></condition><then pos:line="35" pos:column="47">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="21">lua_pushliteral<pos:position pos:line="36" pos:column="36"/></name><argument_list pos:line="36" pos:column="36">(<argument><expr><name pos:line="36" pos:column="37">L<pos:position pos:line="36" pos:column="38"/></name></expr></argument>,
                                    <argument><expr><literal type="string" pos:line="37" pos:column="37">"mod_dbd doesn't seem to have been loaded."<pos:position pos:line="37" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="82"/></expr_stmt></block></then>
                <else pos:line="38" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="21">lua_pushliteral<pos:position pos:line="39" pos:column="36"/></name><argument_list pos:line="39" pos:column="36">(
                        <argument><expr><name pos:line="40" pos:column="25">L<pos:position pos:line="40" pos:column="26"/></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="41" pos:column="25">"Could not acquire connection from mod_dbd. If your database is running, this may indicate a permission problem."<pos:position pos:line="41" pos:column="138"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="139"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="140"/></expr_stmt></block></else></if>
                <return pos:line="42" pos:column="17">return <expr><literal type="number" pos:line="42" pos:column="24">2<pos:position pos:line="42" pos:column="25"/></literal></expr>;<pos:position pos:line="42" pos:column="26"/></return>
            }<pos:position pos:line="43" pos:column="14"/></block></else></if>
        }<pos:position pos:line="44" pos:column="10"/></block></then>
        <else pos:line="45" pos:column="9">else <block pos:line="45" pos:column="14">{
            <expr_stmt><expr><name pos:line="46" pos:column="13">rc<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <call><name pos:line="46" pos:column="18">apr_pool_create<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><operator pos:line="46" pos:column="34">&amp;<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="35">pool<pos:position pos:line="46" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="41">NULL<pos:position pos:line="46" pos:column="45"/></name></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="47"/></expr_stmt>
            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><name pos:line="47" pos:column="17">rc<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">!=<pos:position pos:line="47" pos:column="22"/></operator> <name pos:line="47" pos:column="23">APR_SUCCESS<pos:position pos:line="47" pos:column="34"/></name></expr>)<pos:position pos:line="47" pos:column="35"/></condition><then pos:line="47" pos:column="35"> <block pos:line="47" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="48" pos:column="17">lua_pushnil<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><name pos:line="48" pos:column="29">L<pos:position pos:line="48" pos:column="30"/></name></expr></argument>)<pos:position pos:line="48" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="49" pos:column="17">lua_pushliteral<pos:position pos:line="49" pos:column="32"/></name><argument_list pos:line="49" pos:column="32">(<argument><expr><name pos:line="49" pos:column="33">L<pos:position pos:line="49" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="36">"Could not allocate memory for database!"<pos:position pos:line="49" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="79"/></expr_stmt>
                <return pos:line="50" pos:column="17">return <expr><literal type="number" pos:line="50" pos:column="24">2<pos:position pos:line="50" pos:column="25"/></literal></expr>;<pos:position pos:line="50" pos:column="26"/></return>
            }<pos:position pos:line="51" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">apr_pool_tag<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><name pos:line="52" pos:column="26">pool<pos:position pos:line="52" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="32">"lua_dbd_pool"<pos:position pos:line="52" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">apr_dbd_init<pos:position pos:line="53" pos:column="25"/></name><argument_list pos:line="53" pos:column="25">(<argument><expr><name pos:line="53" pos:column="26">pool<pos:position pos:line="53" pos:column="30"/></name></expr></argument>)<pos:position pos:line="53" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><name pos:line="54" pos:column="13">dbdhandle<pos:position pos:line="54" pos:column="22"/></name> <operator pos:line="54" pos:column="23">=<pos:position pos:line="54" pos:column="24"/></operator> <call><name pos:line="54" pos:column="25">apr_pcalloc<pos:position pos:line="54" pos:column="36"/></name><argument_list pos:line="54" pos:column="36">(<argument><expr><name pos:line="54" pos:column="37">pool<pos:position pos:line="54" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="43">sizeof<argument_list pos:line="54" pos:column="49">(<argument><expr><name pos:line="54" pos:column="50">ap_dbd_t<pos:position pos:line="54" pos:column="58"/></name></expr></argument>)<pos:position pos:line="54" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="54" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><name pos:line="55" pos:column="13">rc<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">=<pos:position pos:line="55" pos:column="17"/></operator> <call><name pos:line="55" pos:column="18">apr_dbd_get_driver<pos:position pos:line="55" pos:column="36"/></name><argument_list pos:line="55" pos:column="36">(<argument><expr><name pos:line="55" pos:column="37">pool<pos:position pos:line="55" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="43">type<pos:position pos:line="55" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="49">&amp;<pos:position pos:line="55" pos:column="54"/></operator><name><name pos:line="55" pos:column="50">dbdhandle<pos:position pos:line="55" pos:column="59"/></name><operator pos:line="55" pos:column="59">-&gt;<pos:position pos:line="55" pos:column="64"/></operator><name pos:line="55" pos:column="61">driver<pos:position pos:line="55" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="69"/></expr_stmt>
            <if pos:line="56" pos:column="13">if <condition pos:line="56" pos:column="16">(<expr><name pos:line="56" pos:column="17">rc<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">==<pos:position pos:line="56" pos:column="22"/></operator> <name pos:line="56" pos:column="23">APR_SUCCESS<pos:position pos:line="56" pos:column="34"/></name></expr>)<pos:position pos:line="56" pos:column="35"/></condition><then pos:line="56" pos:column="35"> <block pos:line="56" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="57" pos:column="17">luaL_checktype<pos:position pos:line="57" pos:column="31"/></name><argument_list pos:line="57" pos:column="31">(<argument><expr><name pos:line="57" pos:column="32">L<pos:position pos:line="57" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="35">3<pos:position pos:line="57" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="38">LUA_TSTRING<pos:position pos:line="57" pos:column="49"/></name></expr></argument>)<pos:position pos:line="57" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><name pos:line="58" pos:column="17">arguments<pos:position pos:line="58" pos:column="26"/></name> <operator pos:line="58" pos:column="27">=<pos:position pos:line="58" pos:column="28"/></operator> <call><name pos:line="58" pos:column="29">lua_tostring<pos:position pos:line="58" pos:column="41"/></name><argument_list pos:line="58" pos:column="41">(<argument><expr><name pos:line="58" pos:column="42">L<pos:position pos:line="58" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="45">3<pos:position pos:line="58" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="59" pos:column="17">lua_settop<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><name pos:line="59" pos:column="28">L<pos:position pos:line="59" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="31">0<pos:position pos:line="59" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="34"/></expr_stmt>
                
                <if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><call><name pos:line="61" pos:column="21">strlen<pos:position pos:line="61" pos:column="27"/></name><argument_list pos:line="61" pos:column="27">(<argument><expr><name pos:line="61" pos:column="28">arguments<pos:position pos:line="61" pos:column="37"/></name></expr></argument>)<pos:position pos:line="61" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="39"/></condition><then pos:line="61" pos:column="39"> <block pos:line="61" pos:column="40">{
                    <expr_stmt><expr><name pos:line="62" pos:column="21">rc<pos:position pos:line="62" pos:column="23"/></name> <operator pos:line="62" pos:column="24">=<pos:position pos:line="62" pos:column="25"/></operator> <call><name pos:line="62" pos:column="26">apr_dbd_open_ex<pos:position pos:line="62" pos:column="41"/></name><argument_list pos:line="62" pos:column="41">(<argument><expr><name><name pos:line="62" pos:column="42">dbdhandle<pos:position pos:line="62" pos:column="51"/></name><operator pos:line="62" pos:column="51">-&gt;<pos:position pos:line="62" pos:column="56"/></operator><name pos:line="62" pos:column="53">driver<pos:position pos:line="62" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="61">pool<pos:position pos:line="62" pos:column="65"/></name></expr></argument>, 
                            <argument><expr><name pos:line="63" pos:column="29">arguments<pos:position pos:line="63" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="40">&amp;<pos:position pos:line="63" pos:column="45"/></operator><name><name pos:line="63" pos:column="41">dbdhandle<pos:position pos:line="63" pos:column="50"/></name><operator pos:line="63" pos:column="50">-&gt;<pos:position pos:line="63" pos:column="55"/></operator><name pos:line="63" pos:column="52">handle<pos:position pos:line="63" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="60">&amp;<pos:position pos:line="63" pos:column="65"/></operator><name pos:line="63" pos:column="61">error<pos:position pos:line="63" pos:column="66"/></name></expr></argument>)<pos:position pos:line="63" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="68"/></expr_stmt>
                    <if pos:line="64" pos:column="21">if <condition pos:line="64" pos:column="24">(<expr><name pos:line="64" pos:column="25">rc<pos:position pos:line="64" pos:column="27"/></name> <operator pos:line="64" pos:column="28">==<pos:position pos:line="64" pos:column="30"/></operator> <name pos:line="64" pos:column="31">APR_SUCCESS<pos:position pos:line="64" pos:column="42"/></name></expr>)<pos:position pos:line="64" pos:column="43"/></condition><then pos:line="64" pos:column="43"> <block pos:line="64" pos:column="44">{
                        <expr_stmt><expr><name pos:line="65" pos:column="25">db<pos:position pos:line="65" pos:column="27"/></name> <operator pos:line="65" pos:column="28">=<pos:position pos:line="65" pos:column="29"/></operator> <call><name pos:line="65" pos:column="30">lua_push_db_handle<pos:position pos:line="65" pos:column="48"/></name><argument_list pos:line="65" pos:column="48">(<argument><expr><name pos:line="65" pos:column="49">L<pos:position pos:line="65" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="52">r<pos:position pos:line="65" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="55">LUA_DBTYPE_APR_DBD<pos:position pos:line="65" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="75">pool<pos:position pos:line="65" pos:column="79"/></name></expr></argument>)<pos:position pos:line="65" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="81"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="66" pos:column="25">db<pos:position pos:line="66" pos:column="27"/></name><operator pos:line="66" pos:column="27">-&gt;<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="29">driver<pos:position pos:line="66" pos:column="35"/></name></name> <operator pos:line="66" pos:column="36">=<pos:position pos:line="66" pos:column="37"/></operator> <name><name pos:line="66" pos:column="38">dbdhandle<pos:position pos:line="66" pos:column="47"/></name><operator pos:line="66" pos:column="47">-&gt;<pos:position pos:line="66" pos:column="52"/></operator><name pos:line="66" pos:column="49">driver<pos:position pos:line="66" pos:column="55"/></name></name></expr>;<pos:position pos:line="66" pos:column="56"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="67" pos:column="25">db<pos:position pos:line="67" pos:column="27"/></name><operator pos:line="67" pos:column="27">-&gt;<pos:position pos:line="67" pos:column="32"/></operator><name pos:line="67" pos:column="29">handle<pos:position pos:line="67" pos:column="35"/></name></name> <operator pos:line="67" pos:column="36">=<pos:position pos:line="67" pos:column="37"/></operator> <name><name pos:line="67" pos:column="38">dbdhandle<pos:position pos:line="67" pos:column="47"/></name><operator pos:line="67" pos:column="47">-&gt;<pos:position pos:line="67" pos:column="52"/></operator><name pos:line="67" pos:column="49">handle<pos:position pos:line="67" pos:column="55"/></name></name></expr>;<pos:position pos:line="67" pos:column="56"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="68" pos:column="25">db<pos:position pos:line="68" pos:column="27"/></name><operator pos:line="68" pos:column="27">-&gt;<pos:position pos:line="68" pos:column="32"/></operator><name pos:line="68" pos:column="29">dbdhandle<pos:position pos:line="68" pos:column="38"/></name></name> <operator pos:line="68" pos:column="39">=<pos:position pos:line="68" pos:column="40"/></operator> <name pos:line="68" pos:column="41">dbdhandle<pos:position pos:line="68" pos:column="50"/></name></expr>;<pos:position pos:line="68" pos:column="51"/></expr_stmt>
                        <return pos:line="69" pos:column="25">return <expr><literal type="number" pos:line="69" pos:column="32">1<pos:position pos:line="69" pos:column="33"/></literal></expr>;<pos:position pos:line="69" pos:column="34"/></return>
                    }<pos:position pos:line="70" pos:column="22"/></block></then>
                    <else pos:line="71" pos:column="21">else <block pos:line="71" pos:column="26">{
                        <expr_stmt><expr><call><name pos:line="72" pos:column="25">lua_pushnil<pos:position pos:line="72" pos:column="36"/></name><argument_list pos:line="72" pos:column="36">(<argument><expr><name pos:line="72" pos:column="37">L<pos:position pos:line="72" pos:column="38"/></name></expr></argument>)<pos:position pos:line="72" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="40"/></expr_stmt>
                        <if pos:line="73" pos:column="25">if <condition pos:line="73" pos:column="28">(<expr><name pos:line="73" pos:column="29">error<pos:position pos:line="73" pos:column="34"/></name></expr>)<pos:position pos:line="73" pos:column="35"/></condition><then pos:line="73" pos:column="35"> <block pos:line="73" pos:column="36">{
                            <expr_stmt><expr><call><name pos:line="74" pos:column="29">lua_pushstring<pos:position pos:line="74" pos:column="43"/></name><argument_list pos:line="74" pos:column="43">(<argument><expr><name pos:line="74" pos:column="44">L<pos:position pos:line="74" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="47">error<pos:position pos:line="74" pos:column="52"/></name></expr></argument>)<pos:position pos:line="74" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="54"/></expr_stmt>
                            <return pos:line="75" pos:column="29">return <expr><literal type="number" pos:line="75" pos:column="36">2<pos:position pos:line="75" pos:column="37"/></literal></expr>;<pos:position pos:line="75" pos:column="38"/></return>
                        }<pos:position pos:line="76" pos:column="26"/></block></then></if>

                        <return pos:line="78" pos:column="25">return <expr><literal type="number" pos:line="78" pos:column="32">1<pos:position pos:line="78" pos:column="33"/></literal></expr>;<pos:position pos:line="78" pos:column="34"/></return>
                    }<pos:position pos:line="79" pos:column="22"/></block></else></if>
                }<pos:position pos:line="80" pos:column="18"/></block></then></if>

                <expr_stmt><expr><call><name pos:line="82" pos:column="17">lua_pushnil<pos:position pos:line="82" pos:column="28"/></name><argument_list pos:line="82" pos:column="28">(<argument><expr><name pos:line="82" pos:column="29">L<pos:position pos:line="82" pos:column="30"/></name></expr></argument>)<pos:position pos:line="82" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="83" pos:column="17">lua_pushliteral<pos:position pos:line="83" pos:column="32"/></name><argument_list pos:line="83" pos:column="32">(<argument><expr><name pos:line="83" pos:column="33">L<pos:position pos:line="83" pos:column="34"/></name></expr></argument>,
                                <argument><expr><literal type="string" pos:line="84" pos:column="33">"No database connection string was specified."<pos:position pos:line="84" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="81"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="85" pos:column="17">apr_pool_destroy<pos:position pos:line="85" pos:column="33"/></name><argument_list pos:line="85" pos:column="33">(<argument><expr><name pos:line="85" pos:column="34">pool<pos:position pos:line="85" pos:column="38"/></name></expr></argument>)<pos:position pos:line="85" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="40"/></expr_stmt>
                <return pos:line="86" pos:column="17">return <expr><operator pos:line="86" pos:column="24">(<pos:position pos:line="86" pos:column="25"/></operator><literal type="number" pos:line="86" pos:column="25">2<pos:position pos:line="86" pos:column="26"/></literal><operator pos:line="86" pos:column="26">)<pos:position pos:line="86" pos:column="27"/></operator></expr>;<pos:position pos:line="86" pos:column="28"/></return>
            }<pos:position pos:line="87" pos:column="14"/></block></then>
            <else pos:line="88" pos:column="13">else <block pos:line="88" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="89" pos:column="17">lua_pushnil<pos:position pos:line="89" pos:column="28"/></name><argument_list pos:line="89" pos:column="28">(<argument><expr><name pos:line="89" pos:column="29">L<pos:position pos:line="89" pos:column="30"/></name></expr></argument>)<pos:position pos:line="89" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="32"/></expr_stmt>
                <if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><call><name pos:line="90" pos:column="21">APR_STATUS_IS_ENOTIMPL<pos:position pos:line="90" pos:column="43"/></name><argument_list pos:line="90" pos:column="43">(<argument><expr><name pos:line="90" pos:column="44">rc<pos:position pos:line="90" pos:column="46"/></name></expr></argument>)<pos:position pos:line="90" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="48"/></condition><then pos:line="90" pos:column="48"> <block pos:line="90" pos:column="49">{
                    <expr_stmt><expr><call><name pos:line="91" pos:column="21">lua_pushfstring<pos:position pos:line="91" pos:column="36"/></name><argument_list pos:line="91" pos:column="36">(<argument><expr><name pos:line="91" pos:column="37">L<pos:position pos:line="91" pos:column="38"/></name></expr></argument>, 
                         <argument><expr><literal type="string" pos:line="92" pos:column="26">"driver for %s not available"<pos:position pos:line="92" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="57">type<pos:position pos:line="92" pos:column="61"/></name></expr></argument>)<pos:position pos:line="92" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="63"/></expr_stmt>
                }<pos:position pos:line="93" pos:column="18"/></block></then>
                <elseif pos:line="94" pos:column="17">else <if pos:line="94" pos:column="22">if <condition pos:line="94" pos:column="25">(<expr><call><name pos:line="94" pos:column="26">APR_STATUS_IS_EDSOOPEN<pos:position pos:line="94" pos:column="48"/></name><argument_list pos:line="94" pos:column="48">(<argument><expr><name pos:line="94" pos:column="49">rc<pos:position pos:line="94" pos:column="51"/></name></expr></argument>)<pos:position pos:line="94" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="53"/></condition><then pos:line="94" pos:column="53"> <block pos:line="94" pos:column="54">{
                    <expr_stmt><expr><call><name pos:line="95" pos:column="21">lua_pushfstring<pos:position pos:line="95" pos:column="36"/></name><argument_list pos:line="95" pos:column="36">(<argument><expr><name pos:line="95" pos:column="37">L<pos:position pos:line="95" pos:column="38"/></name></expr></argument>, 
                                <argument><expr><literal type="string" pos:line="96" pos:column="33">"can't find driver for %s"<pos:position pos:line="96" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="61">type<pos:position pos:line="96" pos:column="65"/></name></expr></argument>)<pos:position pos:line="96" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="67"/></expr_stmt>
                }<pos:position pos:line="97" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="98" pos:column="17">else <if pos:line="98" pos:column="22">if <condition pos:line="98" pos:column="25">(<expr><call><name pos:line="98" pos:column="26">APR_STATUS_IS_ESYMNOTFOUND<pos:position pos:line="98" pos:column="52"/></name><argument_list pos:line="98" pos:column="52">(<argument><expr><name pos:line="98" pos:column="53">rc<pos:position pos:line="98" pos:column="55"/></name></expr></argument>)<pos:position pos:line="98" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="57"/></condition><then pos:line="98" pos:column="57"> <block pos:line="98" pos:column="58">{
                    <expr_stmt><expr><call><name pos:line="99" pos:column="21">lua_pushfstring<pos:position pos:line="99" pos:column="36"/></name><argument_list pos:line="99" pos:column="36">(<argument><expr><name pos:line="99" pos:column="37">L<pos:position pos:line="99" pos:column="38"/></name></expr></argument>, 
                                <argument><expr><literal type="string" pos:line="100" pos:column="33">"driver for %s is invalid or corrupted"<pos:position pos:line="100" pos:column="72"/></literal></expr></argument>,
                                <argument><expr><name pos:line="101" pos:column="33">type<pos:position pos:line="101" pos:column="37"/></name></expr></argument>)<pos:position pos:line="101" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="39"/></expr_stmt>
                }<pos:position pos:line="102" pos:column="18"/></block></then></if></elseif>
                <else pos:line="103" pos:column="17">else <block pos:line="103" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="104" pos:column="21">lua_pushliteral<pos:position pos:line="104" pos:column="36"/></name><argument_list pos:line="104" pos:column="36">(<argument><expr><name pos:line="104" pos:column="37">L<pos:position pos:line="104" pos:column="38"/></name></expr></argument>, 
                                <argument><expr><literal type="string" pos:line="105" pos:column="33">"mod_lua not compatible with APR in get_driver"<pos:position pos:line="105" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="82"/></expr_stmt>
                }<pos:position pos:line="106" pos:column="18"/></block></else></if>
                <macro><name pos:line="107" pos:column="17">lua_pushinteger<pos:position pos:line="107" pos:column="32"/></name><argument_list pos:line="107" pos:column="32">(<argument pos:line="107" pos:column="33">L<pos:position pos:line="107" pos:column="34"/></argument>, <argument pos:line="107" pos:column="36">r<pos:position pos:line="107" pos:column="37"/></argument></argument_list></macro></block></else></if></block></else></if></block></then></if></block></function></unit>

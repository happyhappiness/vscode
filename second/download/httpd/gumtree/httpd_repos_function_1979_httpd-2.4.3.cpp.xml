<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1979_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">pcharacters<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">ctxt<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">xmlChar<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">uchars<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">int<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">length<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">chars<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><operator pos:line="3" pos:column="25">(<pos:position pos:line="3" pos:column="26"/></operator><specifier pos:line="3" pos:column="26">const<pos:position pos:line="3" pos:column="31"/></specifier> <name pos:line="3" pos:column="32">char<pos:position pos:line="3" pos:column="36"/></name><operator pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></operator><operator pos:line="3" pos:column="37">)<pos:position pos:line="3" pos:column="38"/></operator> <name pos:line="3" pos:column="39">uchars<pos:position pos:line="3" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">saxctxt<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">ctx<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><operator pos:line="4" pos:column="20">(<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">saxctxt<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></operator><operator pos:line="4" pos:column="29">)<pos:position pos:line="4" pos:column="30"/></operator> <name pos:line="4" pos:column="31">ctxt<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">begin<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><expr><name pos:line="7" pos:column="10">begin<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">i<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator><literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">&lt;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="23">length<pos:position pos:line="7" pos:column="29"/></name></expr>;<pos:position pos:line="7" pos:column="30"/></condition> <incr><expr><name pos:line="7" pos:column="31">i<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">++<pos:position pos:line="7" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="35"/></control> <block pos:line="7" pos:column="36">{
        <switch pos:line="8" pos:column="9">switch <condition pos:line="8" pos:column="16">(<expr><name><name pos:line="8" pos:column="17">chars<pos:position pos:line="8" pos:column="22"/></name><index pos:line="8" pos:column="22">[<expr><name pos:line="8" pos:column="23">i<pos:position pos:line="8" pos:column="24"/></name></expr>]<pos:position pos:line="8" pos:column="25"/></index></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition> <block pos:line="8" pos:column="27">{
        <case pos:line="9" pos:column="9">case <expr><literal type="char" pos:line="9" pos:column="14">'&amp;'<pos:position pos:line="9" pos:column="21"/></literal></expr> :<pos:position pos:line="9" pos:column="19"/></case> <expr_stmt><expr><name pos:line="9" pos:column="20">FLUSH<pos:position pos:line="9" pos:column="25"/></name></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt> <expr_stmt><expr><call><name pos:line="9" pos:column="27">ap_fputs<pos:position pos:line="9" pos:column="35"/></name><argument_list pos:line="9" pos:column="35">(<argument><expr><name><name pos:line="9" pos:column="36">ctx<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">f<pos:position pos:line="9" pos:column="42"/></name><operator pos:line="9" pos:column="42">-&gt;<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="44">next<pos:position pos:line="9" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="50">ctx<pos:position pos:line="9" pos:column="53"/></name><operator pos:line="9" pos:column="53">-&gt;<pos:position pos:line="9" pos:column="58"/></operator><name pos:line="9" pos:column="55">bb<pos:position pos:line="9" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="59">"&amp;amp;"<pos:position pos:line="9" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt> <break pos:line="9" pos:column="69">break;<pos:position pos:line="9" pos:column="75"/></break>
        <case pos:line="10" pos:column="9">case <expr><literal type="char" pos:line="10" pos:column="14">'&lt;'<pos:position pos:line="10" pos:column="20"/></literal></expr> :<pos:position pos:line="10" pos:column="19"/></case> <expr_stmt><expr><name pos:line="10" pos:column="20">FLUSH<pos:position pos:line="10" pos:column="25"/></name></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt> <expr_stmt><expr><call><name pos:line="10" pos:column="27">ap_fputs<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name><name pos:line="10" pos:column="36">ctx<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="41">f<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">-&gt;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="44">next<pos:position pos:line="10" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="50">ctx<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">-&gt;<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="55">bb<pos:position pos:line="10" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="59">"&amp;lt;"<pos:position pos:line="10" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="67"/></expr_stmt> <break pos:line="10" pos:column="68">break;<pos:position pos:line="10" pos:column="74"/></break>
        <case pos:line="11" pos:column="9">case <expr><literal type="char" pos:line="11" pos:column="14">'&gt;'<pos:position pos:line="11" pos:column="20"/></literal></expr> :<pos:position pos:line="11" pos:column="19"/></case> <expr_stmt><expr><name pos:line="11" pos:column="20">FLUSH<pos:position pos:line="11" pos:column="25"/></name></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt> <expr_stmt><expr><call><name pos:line="11" pos:column="27">ap_fputs<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name><name pos:line="11" pos:column="36">ctx<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">-&gt;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="41">f<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">-&gt;<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="44">next<pos:position pos:line="11" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="50">ctx<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">-&gt;<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="55">bb<pos:position pos:line="11" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="59">"&amp;gt;"<pos:position pos:line="11" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="67"/></expr_stmt> <break pos:line="11" pos:column="68">break;<pos:position pos:line="11" pos:column="74"/></break>
        <case pos:line="12" pos:column="9">case <expr><literal type="char" pos:line="12" pos:column="14">'"'<pos:position pos:line="12" pos:column="17"/></literal></expr> :<pos:position pos:line="12" pos:column="19"/></case> <expr_stmt><expr><name pos:line="12" pos:column="20">FLUSH<pos:position pos:line="12" pos:column="25"/></name></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt> <expr_stmt><expr><call><name pos:line="12" pos:column="27">ap_fputs<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><name><name pos:line="12" pos:column="36">ctx<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">f<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">next<pos:position pos:line="12" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="50">ctx<pos:position pos:line="12" pos:column="53"/></name><operator pos:line="12" pos:column="53">-&gt;<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="55">bb<pos:position pos:line="12" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="59">"&amp;quot;"<pos:position pos:line="12" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="69"/></expr_stmt> <break pos:line="12" pos:column="70">break;<pos:position pos:line="12" pos:column="76"/></break>
        <default pos:line="13" pos:column="9">default :<pos:position pos:line="13" pos:column="18"/></default> <break pos:line="13" pos:column="19">break;<pos:position pos:line="13" pos:column="25"/></break>
        }<pos:position pos:line="14" pos:column="10"/></block></switch>
    }<pos:position pos:line="15" pos:column="6"/></block></for>
    <expr_stmt><expr><name pos:line="16" pos:column="5">FLUSH<pos:position pos:line="16" pos:column="10"/></name></expr>;<pos:position pos:line="16" pos:column="11"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3138_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">set_errorlog_format<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">cmd_parms<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">cmd<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">void<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">dummy<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                                       <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">arg1<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="58">const<pos:position pos:line="2" pos:column="63"/></specifier> <name pos:line="2" pos:column="64">char<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type><name pos:line="2" pos:column="70">arg2<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">err_string<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name pos:line="4" pos:column="30">NULL<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">core_server_config<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">conf<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">=
        <expr><call><name pos:line="6" pos:column="9">ap_get_core_module_config<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><name><name pos:line="6" pos:column="35">cmd<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">-&gt;<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="40">server<pos:position pos:line="6" pos:column="46"/></name><operator pos:line="6" pos:column="46">-&gt;<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="48">module_config<pos:position pos:line="6" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="63"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">arg2<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition><then pos:line="8" pos:column="15"> <block pos:line="8" pos:column="16">{
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">conf<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">error_log_format<pos:position pos:line="9" pos:column="31"/></name></name> <operator pos:line="9" pos:column="32">=<pos:position pos:line="9" pos:column="33"/></operator> <call><name pos:line="9" pos:column="34">parse_errorlog_string<pos:position pos:line="9" pos:column="55"/></name><argument_list pos:line="9" pos:column="55">(<argument><expr><name><name pos:line="9" pos:column="56">cmd<pos:position pos:line="9" pos:column="59"/></name><operator pos:line="9" pos:column="59">-&gt;<pos:position pos:line="9" pos:column="64"/></operator><name pos:line="9" pos:column="61">pool<pos:position pos:line="9" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="67">arg1<pos:position pos:line="9" pos:column="71"/></name></expr></argument>,
                                                       <argument><expr><operator pos:line="10" pos:column="56">&amp;<pos:position pos:line="10" pos:column="61"/></operator><name pos:line="10" pos:column="57">err_string<pos:position pos:line="10" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="69">1<pos:position pos:line="10" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then>
    <elseif pos:line="12" pos:column="5">else <if pos:line="12" pos:column="10">if <condition pos:line="12" pos:column="13">(<expr><operator pos:line="12" pos:column="14">!<pos:position pos:line="12" pos:column="15"/></operator><call><name pos:line="12" pos:column="15">strcasecmp<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">arg1<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="32">"connection"<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="46"/></condition><then pos:line="12" pos:column="46"> <block pos:line="12" pos:column="47">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name><name pos:line="13" pos:column="14">conf<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">error_log_conn<pos:position pos:line="13" pos:column="34"/></name></name></expr>)<pos:position pos:line="13" pos:column="35"/></condition><then pos:line="13" pos:column="35"> <block pos:line="13" pos:column="36">{
            <expr_stmt><expr><name><name pos:line="14" pos:column="13">conf<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">-&gt;<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="19">error_log_conn<pos:position pos:line="14" pos:column="33"/></name></name> <operator pos:line="14" pos:column="34">=<pos:position pos:line="14" pos:column="35"/></operator> <call><name pos:line="14" pos:column="36">apr_array_make<pos:position pos:line="14" pos:column="50"/></name><argument_list pos:line="14" pos:column="50">(<argument><expr><name><name pos:line="14" pos:column="51">cmd<pos:position pos:line="14" pos:column="54"/></name><operator pos:line="14" pos:column="54">-&gt;<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="56">pool<pos:position pos:line="14" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="62">5<pos:position pos:line="14" pos:column="63"/></literal></expr></argument>,
                                                  <argument><expr><sizeof pos:line="15" pos:column="51">sizeof<argument_list pos:line="15" pos:column="57">(<argument><expr><name pos:line="15" pos:column="58">apr_array_header_t<pos:position pos:line="15" pos:column="76"/></name> <operator pos:line="15" pos:column="77">*<pos:position pos:line="15" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="81"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">*<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">arg2<pos:position pos:line="18" pos:column="18"/></name></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19"> <block pos:line="18" pos:column="20">{
            <decl_stmt><decl><type><name pos:line="19" pos:column="13">apr_array_header_t<pos:position pos:line="19" pos:column="31"/></name> <modifier pos:line="19" pos:column="32">*<pos:position pos:line="19" pos:column="33"/></modifier><modifier pos:line="19" pos:column="33">*<pos:position pos:line="19" pos:column="34"/></modifier></type><name pos:line="19" pos:column="34">e<pos:position pos:line="19" pos:column="35"/></name></decl>;<pos:position pos:line="19" pos:column="36"/></decl_stmt>
            <expr_stmt><expr><name pos:line="20" pos:column="13">e<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <operator pos:line="20" pos:column="17">(<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">apr_array_header_t<pos:position pos:line="20" pos:column="36"/></name> <operator pos:line="20" pos:column="37">*<pos:position pos:line="20" pos:column="38"/></operator><operator pos:line="20" pos:column="38">*<pos:position pos:line="20" pos:column="39"/></operator><operator pos:line="20" pos:column="39">)<pos:position pos:line="20" pos:column="40"/></operator> <call><name pos:line="20" pos:column="41">apr_array_push<pos:position pos:line="20" pos:column="55"/></name><argument_list pos:line="20" pos:column="55">(<argument><expr><name><name pos:line="20" pos:column="56">conf<pos:position pos:line="20" pos:column="60"/></name><operator pos:line="20" pos:column="60">-&gt;<pos:position pos:line="20" pos:column="65"/></operator><name pos:line="20" pos:column="62">error_log_conn<pos:position pos:line="20" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="78"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="21" pos:column="13">*<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">e<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">parse_errorlog_string<pos:position pos:line="21" pos:column="39"/></name><argument_list pos:line="21" pos:column="39">(<argument><expr><name><name pos:line="21" pos:column="40">cmd<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">-&gt;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="45">pool<pos:position pos:line="21" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="51">arg2<pos:position pos:line="21" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="57">&amp;<pos:position pos:line="21" pos:column="62"/></operator><name pos:line="21" pos:column="58">err_string<pos:position pos:line="21" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="70">0<pos:position pos:line="21" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="73"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="24" pos:column="5">else <if pos:line="24" pos:column="10">if <condition pos:line="24" pos:column="13">(<expr><operator pos:line="24" pos:column="14">!<pos:position pos:line="24" pos:column="15"/></operator><call><name pos:line="24" pos:column="15">strcasecmp<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">arg1<pos:position pos:line="24" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="32">"request"<pos:position pos:line="24" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="43"/></condition><then pos:line="24" pos:column="43"> <block pos:line="24" pos:column="44">{
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><name><name pos:line="25" pos:column="14">conf<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">error_log_req<pos:position pos:line="25" pos:column="33"/></name></name></expr>)<pos:position pos:line="25" pos:column="34"/></condition><then pos:line="25" pos:column="34"> <block pos:line="25" pos:column="35">{
            <expr_stmt><expr><name><name pos:line="26" pos:column="13">conf<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">error_log_req<pos:position pos:line="26" pos:column="32"/></name></name> <operator pos:line="26" pos:column="33">=<pos:position pos:line="26" pos:column="34"/></operator> <call><name pos:line="26" pos:column="35">apr_array_make<pos:position pos:line="26" pos:column="49"/></name><argument_list pos:line="26" pos:column="49">(<argument><expr><name><name pos:line="26" pos:column="50">cmd<pos:position pos:line="26" pos:column="53"/></name><operator pos:line="26" pos:column="53">-&gt;<pos:position pos:line="26" pos:column="58"/></operator><name pos:line="26" pos:column="55">pool<pos:position pos:line="26" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="61">5<pos:position pos:line="26" pos:column="62"/></literal></expr></argument>,
                                                 <argument><expr><sizeof pos:line="27" pos:column="50">sizeof<argument_list pos:line="27" pos:column="56">(<argument><expr><name pos:line="27" pos:column="57">apr_array_header_t<pos:position pos:line="27" pos:column="75"/></name> <operator pos:line="27" pos:column="76">*<pos:position pos:line="27" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="80"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">*<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">arg2<pos:position pos:line="30" pos:column="18"/></name></expr>)<pos:position pos:line="30" pos:column="19"/></condition><then pos:line="30" pos:column="19"> <block pos:line="30" pos:column="20">{
            <decl_stmt><decl><type><name pos:line="31" pos:column="13">apr_array_header_t<pos:position pos:line="31" pos:column="31"/></name> <modifier pos:line="31" pos:column="32">*<pos:position pos:line="31" pos:column="33"/></modifier><modifier pos:line="31" pos:column="33">*<pos:position pos:line="31" pos:column="34"/></modifier></type><name pos:line="31" pos:column="34">e<pos:position pos:line="31" pos:column="35"/></name></decl>;<pos:position pos:line="31" pos:column="36"/></decl_stmt>
            <expr_stmt><expr><name pos:line="32" pos:column="13">e<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <operator pos:line="32" pos:column="17">(<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">apr_array_header_t<pos:position pos:line="32" pos:column="36"/></name> <operator pos:line="32" pos:column="37">*<pos:position pos:line="32" pos:column="38"/></operator><operator pos:line="32" pos:column="38">*<pos:position pos:line="32" pos:column="39"/></operator><operator pos:line="32" pos:column="39">)<pos:position pos:line="32" pos:column="40"/></operator> <call><name pos:line="32" pos:column="41">apr_array_push<pos:position pos:line="32" pos:column="55"/></name><argument_list pos:line="32" pos:column="55">(<argument><expr><name><name pos:line="32" pos:column="56">conf<pos:position pos:line="32" pos:column="60"/></name><operator pos:line="32" pos:column="60">-&gt;<pos:position pos:line="32" pos:column="65"/></operator><name pos:line="32" pos:column="62">error_log_req<pos:position pos:line="32" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="33" pos:column="13">*<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">e<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <call><name pos:line="33" pos:column="18">parse_errorlog_string<pos:position pos:line="33" pos:column="39"/></name><argument_list pos:line="33" pos:column="39">(<argument><expr><name><name pos:line="33" pos:column="40">cmd<pos:position pos:line="33" pos:column="43"/></name><operator pos:line="33" pos:column="43">-&gt;<pos:position pos:line="33" pos:column="48"/></operator><name pos:line="33" pos:column="45">pool<pos:position pos:line="33" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="51">arg2<pos:position pos:line="33" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="57">&amp;<pos:position pos:line="33" pos:column="62"/></operator><name pos:line="33" pos:column="58">err_string<pos:position pos:line="33" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="70">0<pos:position pos:line="33" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="73"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if></elseif>
    <else pos:line="36" pos:column="5">else <block pos:line="36" pos:column="10">{
        <expr_stmt><expr><name pos:line="37" pos:column="9">err_string<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <literal type="string" pos:line="37" pos:column="22">"ErrorLogFormat type must be one of request, connection"<pos:position pos:line="37" pos:column="78"/></literal></expr>;<pos:position pos:line="37" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></else></if>

    <return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">err_string<pos:position pos:line="40" pos:column="22"/></name></expr>;<pos:position pos:line="40" pos:column="23"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

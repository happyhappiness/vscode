<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4338.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">add_member<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">cmd_parms<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">cmd<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">void<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">dummy<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">arg<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">server_rec<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">s<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name><name pos:line="3" pos:column="21">cmd<pos:position pos:line="3" pos:column="24"/></name><operator pos:line="3" pos:column="24">-&gt;<pos:position pos:line="3" pos:column="29"/></operator><name pos:line="3" pos:column="26">server<pos:position pos:line="3" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">proxy_server_conf<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">conf<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">=
    <expr><call><name pos:line="5" pos:column="5">ap_get_module_config<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name><name pos:line="5" pos:column="26">s<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">module_config<pos:position pos:line="5" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="44">&amp;<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="45">proxy_module<pos:position pos:line="5" pos:column="57"/></name></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">proxy_balancer<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">balancer<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">proxy_worker<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">worker<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">path<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><name><name pos:line="8" pos:column="18">cmd<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="23">path<pos:position pos:line="8" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">name<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><name pos:line="9" pos:column="18">NULL<pos:position pos:line="9" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">word<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_table_t<pos:position pos:line="11" pos:column="16"/></name> <modifier pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></modifier></type><name pos:line="11" pos:column="18">params<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><call><name pos:line="11" pos:column="27">apr_table_make<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name><name pos:line="11" pos:column="42">cmd<pos:position pos:line="11" pos:column="45"/></name><operator pos:line="11" pos:column="45">-&gt;<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="47">pool<pos:position pos:line="11" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="53">5<pos:position pos:line="11" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">apr_array_header_t<pos:position pos:line="12" pos:column="29"/></name> <modifier pos:line="12" pos:column="30">*<pos:position pos:line="12" pos:column="31"/></modifier></type><name pos:line="12" pos:column="31">arr<pos:position pos:line="12" pos:column="34"/></name></decl>;<pos:position pos:line="12" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">apr_table_entry_t<pos:position pos:line="13" pos:column="28"/></name> <modifier pos:line="13" pos:column="29">*<pos:position pos:line="13" pos:column="30"/></modifier></type><name pos:line="13" pos:column="30">elts<pos:position pos:line="13" pos:column="34"/></name></decl>;<pos:position pos:line="13" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">reuse<pos:position pos:line="14" pos:column="14"/></name> <init pos:line="14" pos:column="15">= <expr><literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">i<pos:position pos:line="15" pos:column="10"/></name></decl>;<pos:position pos:line="15" pos:column="11"/></decl_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">cmd<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">path<pos:position pos:line="17" pos:column="18"/></name></name></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="9">path<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <call><name pos:line="18" pos:column="16">apr_pstrdup<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name><name pos:line="18" pos:column="28">cmd<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">pool<pos:position pos:line="18" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="39">cmd<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">-&gt;<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="44">path<pos:position pos:line="18" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="50"/></expr_stmt></block></then></if>

    <while pos:line="20" pos:column="5">while <condition pos:line="20" pos:column="11">(<expr><operator pos:line="20" pos:column="12">*<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">arg<pos:position pos:line="20" pos:column="16"/></name></expr>)<pos:position pos:line="20" pos:column="17"/></condition> <block pos:line="20" pos:column="18">{
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">char<pos:position pos:line="21" pos:column="13"/></name> <modifier pos:line="21" pos:column="14">*<pos:position pos:line="21" pos:column="15"/></modifier></type><name pos:line="21" pos:column="15">val<pos:position pos:line="21" pos:column="18"/></name></decl>;<pos:position pos:line="21" pos:column="19"/></decl_stmt>
        <expr_stmt><expr><name pos:line="22" pos:column="9">word<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <call><name pos:line="22" pos:column="16">ap_getword_conf<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name><name pos:line="22" pos:column="32">cmd<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">-&gt;<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="37">pool<pos:position pos:line="22" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="43">&amp;<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="44">arg<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name pos:line="23" pos:column="9">val<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">strchr<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">word<pos:position pos:line="23" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="28">'='<pos:position pos:line="23" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>

        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">val<pos:position pos:line="25" pos:column="17"/></name></expr>)<pos:position pos:line="25" pos:column="18"/></condition><then pos:line="25" pos:column="18"> <block pos:line="25" pos:column="19">{
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><operator pos:line="26" pos:column="17">!<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">path<pos:position pos:line="26" pos:column="22"/></name></expr>)<pos:position pos:line="26" pos:column="23"/></condition><then pos:line="26" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="17">path<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="24">word<pos:position pos:line="27" pos:column="28"/></name></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt></block></then>
            <elseif pos:line="28" pos:column="13">else <if pos:line="28" pos:column="18">if <condition pos:line="28" pos:column="21">(<expr><operator pos:line="28" pos:column="22">!<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">name<pos:position pos:line="28" pos:column="27"/></name></expr>)<pos:position pos:line="28" pos:column="28"/></condition><then pos:line="28" pos:column="28">
                <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="17">name<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">word<pos:position pos:line="29" pos:column="28"/></name></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt></block></then></if></elseif>
            <else pos:line="30" pos:column="13">else <block pos:line="30" pos:column="18">{
                <if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name><name pos:line="31" pos:column="21">cmd<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">path<pos:position pos:line="31" pos:column="30"/></name></name></expr>)<pos:position pos:line="31" pos:column="31"/></condition><then pos:line="31" pos:column="31">
                    <block type="pseudo"><return pos:line="32" pos:column="21">return <expr><literal type="string" pos:line="32" pos:column="28">"BalancerMember can not have a balancer name when defined in a location"<pos:position pos:line="32" pos:column="100"/></literal></expr>;<pos:position pos:line="32" pos:column="101"/></return></block></then>
                <else pos:line="33" pos:column="17">else
                    <block type="pseudo"><return pos:line="34" pos:column="21">return <expr><literal type="string" pos:line="34" pos:column="28">"Invalid BalancerMember parameter. Parameter must "<pos:position pos:line="34" pos:column="79"/></literal>
                           <literal type="string" pos:line="35" pos:column="28">"be in the form 'key=value'"<pos:position pos:line="35" pos:column="56"/></literal></expr>;<pos:position pos:line="35" pos:column="57"/></return></block></else></if>
            }<pos:position pos:line="36" pos:column="14"/></block></else></if>
        }<pos:position pos:line="37" pos:column="10"/></block></then> <else pos:line="37" pos:column="11">else <block pos:line="37" pos:column="16">{
            <expr_stmt><expr><operator pos:line="38" pos:column="13">*<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">val<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">++<pos:position pos:line="38" pos:column="19"/></operator> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <literal type="char" pos:line="38" pos:column="22">'\0'<pos:position pos:line="38" pos:column="26"/></literal></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">apr_table_setn<pos:position pos:line="39" pos:column="27"/></name><argument_list pos:line="39" pos:column="27">(<argument><expr><name pos:line="39" pos:column="28">params<pos:position pos:line="39" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="36">word<pos:position pos:line="39" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="42">val<pos:position pos:line="39" pos:column="45"/></name></expr></argument>)<pos:position pos:line="39" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></else></if>
    }<pos:position pos:line="41" pos:column="6"/></block></while>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><operator pos:line="42" pos:column="9">!<pos:position pos:line="42" pos:column="10"/></operator><name pos:line="42" pos:column="10">path<pos:position pos:line="42" pos:column="14"/></name></expr>)<pos:position pos:line="42" pos:column="15"/></condition><then pos:line="42" pos:column="15">
        <block type="pseudo"><return pos:line="43" pos:column="9">return <expr><literal type="string" pos:line="43" pos:column="16">"BalancerMember must define balancer name when outside &lt;Proxy &gt; section"<pos:position pos:line="43" pos:column="94"/></literal></expr>;<pos:position pos:line="43" pos:column="89"/></return></block></then></if>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">!<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">name<pos:position pos:line="44" pos:column="14"/></name></expr>)<pos:position pos:line="44" pos:column="15"/></condition><then pos:line="44" pos:column="15">
        <block type="pseudo"><return pos:line="45" pos:column="9">return <expr><literal type="string" pos:line="45" pos:column="16">"BalancerMember must define remote proxy server"<pos:position pos:line="45" pos:column="64"/></literal></expr>;<pos:position pos:line="45" pos:column="65"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="47" pos:column="5">ap_str_tolower<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><name pos:line="47" pos:column="20">path<pos:position pos:line="47" pos:column="24"/></name></expr></argument>)<pos:position pos:line="47" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt>   <comment type="block" pos:line="47" pos:column="29">/* lowercase scheme://hostname */</comment>

    <comment type="block" pos:line="49" pos:column="5">/* Try to find existing worker */</comment>
    <expr_stmt><expr><name pos:line="50" pos:column="5">worker<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <call><name pos:line="50" pos:column="14">ap_proxy_get_worker<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">(<argument><expr><name><name pos:line="50" pos:column="34">cmd<pos:position pos:line="50" pos:column="37"/></name><operator pos:line="50" pos:column="37">-&gt;<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="39">temp_pool<pos:position pos:line="50" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="50">conf<pos:position pos:line="50" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="56">name<pos:position pos:line="50" pos:column="60"/></name></expr></argument>)<pos:position pos:line="50" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="62"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><operator pos:line="51" pos:column="9">!<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">worker<pos:position pos:line="51" pos:column="16"/></name></expr>)<pos:position pos:line="51" pos:column="17"/></condition><then pos:line="51" pos:column="17"> <block pos:line="51" pos:column="18">{
        <decl_stmt><decl><type><specifier pos:line="52" pos:column="9">const<pos:position pos:line="52" pos:column="14"/></specifier> <name pos:line="52" pos:column="15">char<pos:position pos:line="52" pos:column="19"/></name> <modifier pos:line="52" pos:column="20">*<pos:position pos:line="52" pos:column="21"/></modifier></type><name pos:line="52" pos:column="21">err<pos:position pos:line="52" pos:column="24"/></name></decl>;<pos:position pos:line="52" pos:column="25"/></decl_stmt>
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><operator pos:line="53" pos:column="13">(<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="14">err<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">=<pos:position pos:line="53" pos:column="19"/></operator> <call><name pos:line="53" pos:column="20">ap_proxy_add_worker<pos:position pos:line="53" pos:column="39"/></name><argument_list pos:line="53" pos:column="39">(<argument><expr><operator pos:line="53" pos:column="40">&amp;<pos:position pos:line="53" pos:column="45"/></operator><name pos:line="53" pos:column="41">worker<pos:position pos:line="53" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="49">cmd<pos:position pos:line="53" pos:column="52"/></name><operator pos:line="53" pos:column="52">-&gt;<pos:position pos:line="53" pos:column="57"/></operator><name pos:line="53" pos:column="54">pool<pos:position pos:line="53" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="60">conf<pos:position pos:line="53" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="66">name<pos:position pos:line="53" pos:column="70"/></name></expr></argument>)<pos:position pos:line="53" pos:column="71"/></argument_list></call><operator pos:line="53" pos:column="71">)<pos:position pos:line="53" pos:column="72"/></operator> <operator pos:line="53" pos:column="73">!=<pos:position pos:line="53" pos:column="75"/></operator> <name pos:line="53" pos:column="76">NULL<pos:position pos:line="53" pos:column="80"/></name></expr>)<pos:position pos:line="53" pos:column="81"/></condition><then pos:line="53" pos:column="81">
            <block type="pseudo"><return pos:line="54" pos:column="13">return <expr><call><name pos:line="54" pos:column="20">apr_pstrcat<pos:position pos:line="54" pos:column="31"/></name><argument_list pos:line="54" pos:column="31">(<argument><expr><name><name pos:line="54" pos:column="32">cmd<pos:position pos:line="54" pos:column="35"/></name><operator pos:line="54" pos:column="35">-&gt;<pos:position pos:line="54" pos:column="40"/></operator><name pos:line="54" pos:column="37">temp_pool<pos:position pos:line="54" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="48">"BalancerMember "<pos:position pos:line="54" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="67">err<pos:position pos:line="54" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="72">NULL<pos:position pos:line="54" pos:column="76"/></name></expr></argument>)<pos:position pos:line="54" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="78"/></return></block></then></if>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">PROXY_COPY_CONF_PARAMS<pos:position pos:line="55" pos:column="31"/></name><argument_list pos:line="55" pos:column="31">(<argument><expr><name pos:line="55" pos:column="32">worker<pos:position pos:line="55" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="40">conf<pos:position pos:line="55" pos:column="44"/></name></expr></argument>)<pos:position pos:line="55" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then> <else pos:line="56" pos:column="7">else <block pos:line="56" pos:column="12">{
        <expr_stmt><expr><name pos:line="57" pos:column="9">reuse<pos:position pos:line="57" pos:column="14"/></name> <operator pos:line="57" pos:column="15">=<pos:position pos:line="57" pos:column="16"/></operator> <literal type="number" pos:line="57" pos:column="17">1<pos:position pos:line="57" pos:column="18"/></literal></expr>;<pos:position pos:line="57" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">ap_log_error<pos:position pos:line="58" pos:column="21"/></name><argument_list pos:line="58" pos:column="21">(<argument><expr><name pos:line="58" pos:column="22">APLOG_MARK<pos:position pos:line="58" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="34">APLOG_INFO<pos:position pos:line="58" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="46">0<pos:position pos:line="58" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="49">cmd<pos:position pos:line="58" pos:column="52"/></name><operator pos:line="58" pos:column="52">-&gt;<pos:position pos:line="58" pos:column="57"/></operator><name pos:line="58" pos:column="54">server<pos:position pos:line="58" pos:column="60"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="59" pos:column="22">"Sharing worker '%s' instead of creating new worker '%s'"<pos:position pos:line="59" pos:column="79"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="60" pos:column="22">worker<pos:position pos:line="60" pos:column="28"/></name><operator pos:line="60" pos:column="28">-&gt;<pos:position pos:line="60" pos:column="33"/></operator><name pos:line="60" pos:column="30">name<pos:position pos:line="60" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="36">name<pos:position pos:line="60" pos:column="40"/></name></expr></argument>)<pos:position pos:line="60" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="63" pos:column="5">arr<pos:position pos:line="63" pos:column="8"/></name> <operator pos:line="63" pos:column="9">=<pos:position pos:line="63" pos:column="10"/></operator> <call><name pos:line="63" pos:column="11">apr_table_elts<pos:position pos:line="63" pos:column="25"/></name><argument_list pos:line="63" pos:column="25">(<argument><expr><name pos:line="63" pos:column="26">params<pos:position pos:line="63" pos:column="32"/></name></expr></argument>)<pos:position pos:line="63" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="64" pos:column="5">elts<pos:position pos:line="64" pos:column="9"/></name> <operator pos:line="64" pos:column="10">=<pos:position pos:line="64" pos:column="11"/></operator> <operator pos:line="64" pos:column="12">(<pos:position pos:line="64" pos:column="13"/></operator><specifier pos:line="64" pos:column="13">const<pos:position pos:line="64" pos:column="18"/></specifier> <name pos:line="64" pos:column="19">apr_table_entry_t<pos:position pos:line="64" pos:column="36"/></name> <operator pos:line="64" pos:column="37">*<pos:position pos:line="64" pos:column="38"/></operator><operator pos:line="64" pos:column="38">)<pos:position pos:line="64" pos:column="39"/></operator><name><name pos:line="64" pos:column="39">arr<pos:position pos:line="64" pos:column="42"/></name><operator pos:line="64" pos:column="42">-&gt;<pos:position pos:line="64" pos:column="47"/></operator><name pos:line="64" pos:column="44">elts<pos:position pos:line="64" pos:column="48"/></name></name></expr>;<pos:position pos:line="64" pos:column="49"/></expr_stmt>
    <for pos:line="65" pos:column="5">for <control pos:line="65" pos:column="9">(<init><expr><name pos:line="65" pos:column="10">i<pos:position pos:line="65" pos:column="11"/></name> <operator pos:line="65" pos:column="12">=<pos:position pos:line="65" pos:column="13"/></operator> <literal type="number" pos:line="65" pos:column="14">0<pos:position pos:line="65" pos:column="15"/></literal></expr>;<pos:position pos:line="65" pos:column="16"/></init> <condition><expr><name pos:line="65" pos:column="17">i<pos:position pos:line="65" pos:column="18"/></name> <operator pos:line="65" pos:column="19">&lt;<pos:position pos:line="65" pos:column="23"/></operator> <name><name pos:line="65" pos:column="21">arr<pos:position pos:line="65" pos:column="24"/></name><operator pos:line="65" pos:column="24">-&gt;<pos:position pos:line="65" pos:column="29"/></operator><name pos:line="65" pos:column="26">nelts<pos:position pos:line="65" pos:column="31"/></name></name></expr>;<pos:position pos:line="65" pos:column="32"/></condition> <incr><expr><name pos:line="65" pos:column="33">i<pos:position pos:line="65" pos:column="34"/></name><operator pos:line="65" pos:column="34">++<pos:position pos:line="65" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="65" pos:column="37"/></control> <block pos:line="65" pos:column="38">{
        <if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name pos:line="66" pos:column="13">reuse<pos:position pos:line="66" pos:column="18"/></name></expr>)<pos:position pos:line="66" pos:column="19"/></condition><then pos:line="66" pos:column="19"> <block pos:line="66" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="67" pos:column="13">ap_log_error<pos:position pos:line="67" pos:column="25"/></name><argument_list pos:line="67" pos:column="25">(<argument><expr><name pos:line="67" pos:column="26">APLOG_MARK<pos:position pos:line="67" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="38">APLOG_WARNING<pos:position pos:line="67" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="53">0<pos:position pos:line="67" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="56">cmd<pos:position pos:line="67" pos:column="59"/></name><operator pos:line="67" pos:column="59">-&gt;<pos:position pos:line="67" pos:column="64"/></operator><name pos:line="67" pos:column="61">server<pos:position pos:line="67" pos:column="67"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="68" pos:column="26">"Ignoring parameter '%s=%s' for worker '%s' because of worker sharing"<pos:position pos:line="68" pos:column="96"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="69" pos:column="26">elts<pos:position pos:line="69" pos:column="30"/></name><index pos:line="69" pos:column="30">[<expr><name pos:line="69" pos:column="31">i<pos:position pos:line="69" pos:column="32"/></name></expr>]<pos:position pos:line="69" pos:column="33"/></index></name><operator pos:line="69" pos:column="33">.<pos:position pos:line="69" pos:column="34"/></operator><name pos:line="69" pos:column="34">key<pos:position pos:line="69" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="39">elts<pos:position pos:line="69" pos:column="43"/></name><index pos:line="69" pos:column="43">[<expr><name pos:line="69" pos:column="44">i<pos:position pos:line="69" pos:column="45"/></name></expr>]<pos:position pos:line="69" pos:column="46"/></index></name><operator pos:line="69" pos:column="46">.<pos:position pos:line="69" pos:column="47"/></operator><name pos:line="69" pos:column="47">val<pos:position pos:line="69" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="52">worker<pos:position pos:line="69" pos:column="58"/></name><operator pos:line="69" pos:column="58">-&gt;<pos:position pos:line="69" pos:column="63"/></operator><name pos:line="69" pos:column="60">name<pos:position pos:line="69" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="70" pos:column="10"/></block></then> <else pos:line="70" pos:column="11">else <block pos:line="70" pos:column="16">{
            <decl_stmt><decl><type><specifier pos:line="71" pos:column="13">const<pos:position pos:line="71" pos:column="18"/></specifier> <name pos:line="71" pos:column="19">char<pos:position pos:line="71" pos:column="23"/></name> <modifier pos:line="71" pos:column="24">*<pos:position pos:line="71" pos:column="25"/></modifier></type><name pos:line="71" pos:column="25">err<pos:position pos:line="71" pos:column="28"/></name> <init pos:line="71" pos:column="29">= <expr><call><name pos:line="71" pos:column="31">set_worker_param<pos:position pos:line="71" pos:column="47"/></name><argument_list pos:line="71" pos:column="47">(<argument><expr><name><name pos:line="71" pos:column="48">cmd<pos:position pos:line="71" pos:column="51"/></name><operator pos:line="71" pos:column="51">-&gt;<pos:position pos:line="71" pos:column="56"/></operator><name pos:line="71" pos:column="53">pool<pos:position pos:line="71" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="59">worker<pos:position pos:line="71" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="67">elts<pos:position pos:line="71" pos:column="71"/></name><index pos:line="71" pos:column="71">[<expr><name pos:line="71" pos:column="72">i<pos:position pos:line="71" pos:column="73"/></name></expr>]<pos:position pos:line="71" pos:column="74"/></index></name><operator pos:line="71" pos:column="74">.<pos:position pos:line="71" pos:column="75"/></operator><name pos:line="71" pos:column="75">key<pos:position pos:line="71" pos:column="78"/></name></expr></argument>,
                                               <argument><expr><name><name pos:line="72" pos:column="48">elts<pos:position pos:line="72" pos:column="52"/></name><index pos:line="72" pos:column="52">[<expr><name pos:line="72" pos:column="53">i<pos:position pos:line="72" pos:column="54"/></name></expr>]<pos:position pos:line="72" pos:column="55"/></index></name><operator pos:line="72" pos:column="55">.<pos:position pos:line="72" pos:column="56"/></operator><name pos:line="72" pos:column="56">val<pos:position pos:line="72" pos:column="59"/></name></expr></argument>)<pos:position pos:line="72" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="72" pos:column="61"/></decl_stmt>
            <if pos:line="73" pos:column="13">if <condition pos:line="73" pos:column="16">(<expr><name pos:line="73" pos:column="17">err<pos:position pos:line="73" pos:column="20"/></name></expr>)<pos:position pos:line="73" pos:column="21"/></condition><then pos:line="73" pos:column="21">
                <block type="pseudo"><return pos:line="74" pos:column="17">return <expr><call><name pos:line="74" pos:column="24">apr_pstrcat<pos:position pos:line="74" pos:column="35"/></name><argument_list pos:line="74" pos:column="35">(<argument><expr><name><name pos:line="74" pos:column="36">cmd<pos:position pos:line="74" pos:column="39"/></name><operator pos:line="74" pos:column="39">-&gt;<pos:position pos:line="74" pos:column="44"/></operator><name pos:line="74" pos:column="41">temp_pool<pos:position pos:line="74" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="52">"BalancerMember "<pos:position pos:line="74" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="71">err<pos:position pos:line="74" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="76">NULL<pos:position pos:line="74" pos:column="80"/></name></expr></argument>)<pos:position pos:line="74" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="82"/></return></block></then></if>
        }<pos:position pos:line="75" pos:column="10"/></block></else></if>
    }<pos:position pos:line="76" pos:column="6"/></block></for>
    <comment type="block" pos:line="77" pos:column="5">/* Try to find the balancer */</comment>
    <expr_stmt><expr><name pos:line="78" pos:column="5">balancer<pos:position pos:line="78" pos:column="13"/></name> <operator pos:line="78" pos:column="14">=<pos:position pos:line="78" pos:column="15"/></operator> <call><name pos:line="78" pos:column="16">ap_proxy_get_balancer<pos:position pos:line="78" pos:column="37"/></name><argument_list pos:line="78" pos:column="37">(<argument><expr><name><name pos:line="78" pos:column="38">cmd<pos:position pos:line="78" pos:column="41"/></name><operator pos:line="78" pos:column="41">-&gt;<pos:position pos:line="78" pos:column="46"/></operator><name pos:line="78" pos:column="43">temp_pool<pos:position pos:line="78" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="54">conf<pos:position pos:line="78" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="60">path<pos:position pos:line="78" pos:column="64"/></name></expr></argument>)<pos:position pos:line="78" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="66"/></expr_stmt>
    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><operator pos:line="79" pos:column="9">!<pos:position pos:line="79" pos:column="10"/></operator><name pos:line="79" pos:column="10">balancer<pos:position pos:line="79" pos:column="18"/></name></expr>)<pos:position pos:line="79" pos:column="19"/></condition><then pos:line="79" pos:column="19"> <block pos:line="79" pos:column="20">{
        <decl_stmt><decl><type><specifier pos:line="80" pos:column="9">const<pos:position pos:line="80" pos:column="14"/></specifier> <name pos:line="80" pos:column="15">char<pos:position pos:line="80" pos:column="19"/></name> <modifier pos:line="80" pos:column="20">*<pos:position pos:line="80" pos:column="21"/></modifier></type><name pos:line="80" pos:column="21">err<pos:position pos:line="80" pos:column="24"/></name> <init pos:line="80" pos:column="25">= <expr><call><name pos:line="80" pos:column="27">ap_proxy_add_balancer<pos:position pos:line="80" pos:column="48"/></name><argument_list pos:line="80" pos:column="48">(<argument><expr><operator pos:line="80" pos:column="49">&amp;<pos:position pos:line="80" pos:column="54"/></operator><name pos:line="80" pos:column="50">balancer<pos:position pos:line="80" pos:column="58"/></name></expr></argument>,
                                                <argument><expr><name><name pos:line="81" pos:column="49">cmd<pos:position pos:line="81" pos:column="52"/></name><operator pos:line="81" pos:column="52">-&gt;<pos:position pos:line="81" pos:column="57"/></operator><name pos:line="81" pos:column="54">pool<pos:position pos:line="81" pos:column="58"/></name></name></expr></argument>,
                                                <argument><expr><name pos:line="82" pos:column="49">conf<pos:position pos:line="82" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="55">path<pos:position pos:line="82" pos:column="59"/></name></expr></argument>)<pos:position pos:line="82" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="82" pos:column="61"/></decl_stmt>
        <if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name pos:line="83" pos:column="13">err<pos:position pos:line="83" pos:column="16"/></name></expr>)<pos:position pos:line="83" pos:column="17"/></condition><then pos:line="83" pos:column="17">
            <block type="pseudo"><return pos:line="84" pos:column="13">return <expr><call><name pos:line="84" pos:column="20">apr_pstrcat<pos:position pos:line="84" pos:column="31"/></name><argument_list pos:line="84" pos:column="31">(<argument><expr><name><name pos:line="84" pos:column="32">cmd<pos:position pos:line="84" pos:column="35"/></name><operator pos:line="84" pos:column="35">-&gt;<pos:position pos:line="84" pos:column="40"/></operator><name pos:line="84" pos:column="37">temp_pool<pos:position pos:line="84" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="48">"BalancerMember "<pos:position pos:line="84" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="67">err<pos:position pos:line="84" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="72">NULL<pos:position pos:line="84" pos:column="76"/></name></expr></argument>)<pos:position pos:line="84" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="78"/></return></block></then></if>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="86" pos:column="5">/* Add the worker to the load balancer */</comment>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">ap_proxy_add_worker_to_balancer<pos:position pos:line="87" pos:column="36"/></name><argument_list pos:line="87" pos:column="36">(<argument><expr><name><name pos:line="87" pos:column="37">cmd<pos:position pos:line="87" pos:column="40"/></name><operator pos:line="87" pos:column="40">-&gt;<pos:position pos:line="87" pos:column="45"/></operator><name pos:line="87" pos:column="42">pool<pos:position pos:line="87" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="48">balancer<pos:position pos:line="87" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="58">worker<pos:position pos:line="87" pos:column="64"/></name></expr></argument>)<pos:position pos:line="87" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="66"/></expr_stmt>
    <return pos:line="88" pos:column="5">return <expr><name pos:line="88" pos:column="12">NULL<pos:position pos:line="88" pos:column="16"/></name></expr>;<pos:position pos:line="88" pos:column="17"/></return>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

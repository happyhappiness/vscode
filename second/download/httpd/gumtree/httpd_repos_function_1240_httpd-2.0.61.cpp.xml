<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1240_httpd-2.0.61.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">find_ct<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">request_rec<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">r<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">mime_dir_config<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">conf<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_array_header_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">exception_list<pos:position pos:line="4" pos:column="39"/></name></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">ext<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">fn<pos:position pos:line="6" pos:column="19"/></name></decl>, <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="22">type<pos:position pos:line="6" pos:column="26"/></name></decl>, <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="29">charset<pos:position pos:line="6" pos:column="36"/></name> <init pos:line="6" pos:column="37">= <expr><name pos:line="6" pos:column="39">NULL<pos:position pos:line="6" pos:column="43"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="45">*<pos:position pos:line="6" pos:column="46"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="46">resource_name<pos:position pos:line="6" pos:column="59"/></name></decl>;<pos:position pos:line="6" pos:column="60"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">found_metadata<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">r<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">finfo<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">.<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">filetype<pos:position pos:line="9" pos:column="26"/></name></name> <operator pos:line="9" pos:column="27">==<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="30">APR_DIR<pos:position pos:line="9" pos:column="37"/></name></expr>)<pos:position pos:line="9" pos:column="38"/></condition><then pos:line="9" pos:column="38"> <block pos:line="9" pos:column="39">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">ap_set_content_type<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">r<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="32">DIR_MAGIC_TYPE<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">OK<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name><name pos:line="14" pos:column="10">r<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">filename<pos:position pos:line="14" pos:column="21"/></name></name></expr>)<pos:position pos:line="14" pos:column="22"/></condition><then pos:line="14" pos:column="22"> <block pos:line="14" pos:column="23">{
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">DECLINED<pos:position pos:line="15" pos:column="24"/></name></expr>;<pos:position pos:line="15" pos:column="25"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">conf<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">mime_dir_config<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">*<pos:position pos:line="18" pos:column="30"/></operator><operator pos:line="18" pos:column="30">)<pos:position pos:line="18" pos:column="31"/></operator><call><name pos:line="18" pos:column="31">ap_get_module_config<pos:position pos:line="18" pos:column="51"/></name><argument_list pos:line="18" pos:column="51">(<argument><expr><name><name pos:line="18" pos:column="52">r<pos:position pos:line="18" pos:column="53"/></name><operator pos:line="18" pos:column="53">-&gt;<pos:position pos:line="18" pos:column="58"/></operator><name pos:line="18" pos:column="55">per_dir_config<pos:position pos:line="18" pos:column="69"/></name></name></expr></argument>,
                                                   <argument><expr><operator pos:line="19" pos:column="52">&amp;<pos:position pos:line="19" pos:column="57"/></operator><name pos:line="19" pos:column="53">mime_module<pos:position pos:line="19" pos:column="64"/></name></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">exception_list<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <call><name pos:line="20" pos:column="22">apr_array_make<pos:position pos:line="20" pos:column="36"/></name><argument_list pos:line="20" pos:column="36">(<argument><expr><name><name pos:line="20" pos:column="37">r<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">-&gt;<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="40">pool<pos:position pos:line="20" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="46">2<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="49">sizeof<argument_list pos:line="20" pos:column="55">(<argument><expr><name pos:line="20" pos:column="56">char<pos:position pos:line="20" pos:column="60"/></name> <operator pos:line="20" pos:column="61">*<pos:position pos:line="20" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* If use_path_info is explicitly set to on (value &amp; 1 == 1), append. */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">conf<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">-&gt;<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="15">use_path_info<pos:position pos:line="23" pos:column="28"/></name></name> <operator pos:line="23" pos:column="29">&amp;<pos:position pos:line="23" pos:column="34"/></operator> <literal type="number" pos:line="23" pos:column="31">1<pos:position pos:line="23" pos:column="32"/></literal></expr>)<pos:position pos:line="23" pos:column="33"/></condition><then pos:line="23" pos:column="33"> <block pos:line="23" pos:column="34">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">resource_name<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <call><name pos:line="24" pos:column="25">apr_pstrcat<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument><expr><name><name pos:line="24" pos:column="37">r<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">-&gt;<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="40">pool<pos:position pos:line="24" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="46">r<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">-&gt;<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="49">filename<pos:position pos:line="24" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="59">r<pos:position pos:line="24" pos:column="60"/></name><operator pos:line="24" pos:column="60">-&gt;<pos:position pos:line="24" pos:column="65"/></operator><name pos:line="24" pos:column="62">path_info<pos:position pos:line="24" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="73">NULL<pos:position pos:line="24" pos:column="77"/></name></expr></argument>)<pos:position pos:line="24" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then>
    <else pos:line="26" pos:column="5">else <block pos:line="26" pos:column="10">{
        <expr_stmt><expr><name pos:line="27" pos:column="9">resource_name<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <name><name pos:line="27" pos:column="25">r<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">-&gt;<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="28">filename<pos:position pos:line="27" pos:column="36"/></name></name></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="30" pos:column="5">/* Always drop the path leading up to the file name.
     */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><operator pos:line="32" pos:column="9">(<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">fn<pos:position pos:line="32" pos:column="12"/></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <call><name pos:line="32" pos:column="15">ap_strrchr_c<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">resource_name<pos:position pos:line="32" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="32" pos:column="43">'/'<pos:position pos:line="32" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call><operator pos:line="32" pos:column="47">)<pos:position pos:line="32" pos:column="48"/></operator> <operator pos:line="32" pos:column="49">==<pos:position pos:line="32" pos:column="51"/></operator> <name pos:line="32" pos:column="52">NULL<pos:position pos:line="32" pos:column="56"/></name></expr>)<pos:position pos:line="32" pos:column="57"/></condition><then pos:line="32" pos:column="57"> <block pos:line="32" pos:column="58">{
        <expr_stmt><expr><name pos:line="33" pos:column="9">fn<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <name pos:line="33" pos:column="14">resource_name<pos:position pos:line="33" pos:column="27"/></name></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then>
    <else pos:line="35" pos:column="5">else <block pos:line="35" pos:column="10">{
        <expr_stmt><expr><operator pos:line="36" pos:column="9">++<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">fn<pos:position pos:line="36" pos:column="13"/></name></expr>;<pos:position pos:line="36" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="39" pos:column="5">/* The exception list keeps track of those filename components that
     * are not associated with extensions indicating metadata.
     * The base name is always the first exception (i.e., "txt.html" has
     * a basename of "txt" even though it might look like an extension).
     */</comment>
    <expr_stmt><expr><name pos:line="44" pos:column="5">ext<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">=<pos:position pos:line="44" pos:column="10"/></operator> <call><name pos:line="44" pos:column="11">ap_getword<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name><name pos:line="44" pos:column="22">r<pos:position pos:line="44" pos:column="23"/></name><operator pos:line="44" pos:column="23">-&gt;<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="25">pool<pos:position pos:line="44" pos:column="29"/></name></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="31">&amp;<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="32">fn<pos:position pos:line="44" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="44" pos:column="36">'.'<pos:position pos:line="44" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="45" pos:column="5">*<pos:position pos:line="45" pos:column="6"/></operator><operator pos:line="45" pos:column="6">(<pos:position pos:line="45" pos:column="7"/></operator><operator pos:line="45" pos:column="7">(<pos:position pos:line="45" pos:column="8"/></operator><specifier pos:line="45" pos:column="8">const<pos:position pos:line="45" pos:column="13"/></specifier> <name pos:line="45" pos:column="14">char<pos:position pos:line="45" pos:column="18"/></name> <operator pos:line="45" pos:column="19">*<pos:position pos:line="45" pos:column="20"/></operator><operator pos:line="45" pos:column="20">*<pos:position pos:line="45" pos:column="21"/></operator><operator pos:line="45" pos:column="21">)<pos:position pos:line="45" pos:column="22"/></operator><call><name pos:line="45" pos:column="22">apr_array_push<pos:position pos:line="45" pos:column="36"/></name><argument_list pos:line="45" pos:column="36">(<argument><expr><name pos:line="45" pos:column="37">exception_list<pos:position pos:line="45" pos:column="51"/></name></expr></argument>)<pos:position pos:line="45" pos:column="52"/></argument_list></call><operator pos:line="45" pos:column="52">)<pos:position pos:line="45" pos:column="53"/></operator> <operator pos:line="45" pos:column="54">=<pos:position pos:line="45" pos:column="55"/></operator> <name pos:line="45" pos:column="56">ext<pos:position pos:line="45" pos:column="59"/></name></expr>;<pos:position pos:line="45" pos:column="60"/></expr_stmt>

    <comment type="block" pos:line="47" pos:column="5">/* Parse filename extensions which can be in any order 
     */</comment>
    <while pos:line="49" pos:column="5">while <condition pos:line="49" pos:column="11">(<expr><operator pos:line="49" pos:column="12">*<pos:position pos:line="49" pos:column="13"/></operator><name pos:line="49" pos:column="13">fn<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">&amp;&amp;<pos:position pos:line="49" pos:column="26"/></operator> <operator pos:line="49" pos:column="19">(<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="20">ext<pos:position pos:line="49" pos:column="23"/></name> <operator pos:line="49" pos:column="24">=<pos:position pos:line="49" pos:column="25"/></operator> <call><name pos:line="49" pos:column="26">ap_getword<pos:position pos:line="49" pos:column="36"/></name><argument_list pos:line="49" pos:column="36">(<argument><expr><name><name pos:line="49" pos:column="37">r<pos:position pos:line="49" pos:column="38"/></name><operator pos:line="49" pos:column="38">-&gt;<pos:position pos:line="49" pos:column="43"/></operator><name pos:line="49" pos:column="40">pool<pos:position pos:line="49" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="46">&amp;<pos:position pos:line="49" pos:column="51"/></operator><name pos:line="49" pos:column="47">fn<pos:position pos:line="49" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="49" pos:column="51">'.'<pos:position pos:line="49" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call><operator pos:line="49" pos:column="55">)<pos:position pos:line="49" pos:column="56"/></operator></expr>)<pos:position pos:line="49" pos:column="57"/></condition> <block pos:line="49" pos:column="58">{
        <decl_stmt><decl><type><specifier pos:line="50" pos:column="9">const<pos:position pos:line="50" pos:column="14"/></specifier> <name pos:line="50" pos:column="15">extension_info<pos:position pos:line="50" pos:column="29"/></name> <modifier pos:line="50" pos:column="30">*<pos:position pos:line="50" pos:column="31"/></modifier></type><name pos:line="50" pos:column="31">exinfo<pos:position pos:line="50" pos:column="37"/></name> <init pos:line="50" pos:column="38">= <expr><name pos:line="50" pos:column="40">NULL<pos:position pos:line="50" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="50" pos:column="45"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="51" pos:column="9">int<pos:position pos:line="51" pos:column="12"/></name></type> <name pos:line="51" pos:column="13">found<pos:position pos:line="51" pos:column="18"/></name></decl>;<pos:position pos:line="51" pos:column="19"/></decl_stmt>

        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><operator pos:line="53" pos:column="13">*<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="14">ext<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">==<pos:position pos:line="53" pos:column="20"/></operator> <literal type="char" pos:line="53" pos:column="21">'\0'<pos:position pos:line="53" pos:column="25"/></literal></expr>)<pos:position pos:line="53" pos:column="26"/></condition><then pos:line="53" pos:column="26"> <block pos:line="53" pos:column="27">{  <comment type="block" pos:line="53" pos:column="30">/* ignore empty extensions "bad..html" */</comment>
            <continue pos:line="54" pos:column="13">continue;<pos:position pos:line="54" pos:column="22"/></continue>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="57" pos:column="9">found<pos:position pos:line="57" pos:column="14"/></name> <operator pos:line="57" pos:column="15">=<pos:position pos:line="57" pos:column="16"/></operator> <literal type="number" pos:line="57" pos:column="17">0<pos:position pos:line="57" pos:column="18"/></literal></expr>;<pos:position pos:line="57" pos:column="19"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="59" pos:column="9">ap_str_tolower<pos:position pos:line="59" pos:column="23"/></name><argument_list pos:line="59" pos:column="23">(<argument><expr><name pos:line="59" pos:column="24">ext<pos:position pos:line="59" pos:column="27"/></name></expr></argument>)<pos:position pos:line="59" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="29"/></expr_stmt>

        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name><name pos:line="61" pos:column="13">conf<pos:position pos:line="61" pos:column="17"/></name><operator pos:line="61" pos:column="17">-&gt;<pos:position pos:line="61" pos:column="22"/></operator><name pos:line="61" pos:column="19">extension_mappings<pos:position pos:line="61" pos:column="37"/></name></name> <operator pos:line="61" pos:column="38">!=<pos:position pos:line="61" pos:column="40"/></operator> <name pos:line="61" pos:column="41">NULL<pos:position pos:line="61" pos:column="45"/></name></expr>)<pos:position pos:line="61" pos:column="46"/></condition><then pos:line="61" pos:column="46"> <block pos:line="61" pos:column="47">{
            <expr_stmt><expr><name pos:line="62" pos:column="13">exinfo<pos:position pos:line="62" pos:column="19"/></name> <operator pos:line="62" pos:column="20">=<pos:position pos:line="62" pos:column="21"/></operator> <operator pos:line="62" pos:column="22">(<pos:position pos:line="62" pos:column="23"/></operator><name pos:line="62" pos:column="23">extension_info<pos:position pos:line="62" pos:column="37"/></name><operator pos:line="62" pos:column="37">*<pos:position pos:line="62" pos:column="38"/></operator><operator pos:line="62" pos:column="38">)<pos:position pos:line="62" pos:column="39"/></operator><call><name pos:line="62" pos:column="39">apr_hash_get<pos:position pos:line="62" pos:column="51"/></name><argument_list pos:line="62" pos:column="51">(<argument><expr><name><name pos:line="62" pos:column="52">conf<pos:position pos:line="62" pos:column="56"/></name><operator pos:line="62" pos:column="56">-&gt;<pos:position pos:line="62" pos:column="61"/></operator><name pos:line="62" pos:column="58">extension_mappings<pos:position pos:line="62" pos:column="76"/></name></name></expr></argument>,
                                                   <argument><expr><name pos:line="63" pos:column="52">ext<pos:position pos:line="63" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="57">APR_HASH_KEY_STRING<pos:position pos:line="63" pos:column="76"/></name></expr></argument>)<pos:position pos:line="63" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="78"/></expr_stmt>
        }<pos:position pos:line="64" pos:column="10"/></block></then></if>

        <if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name pos:line="66" pos:column="13">exinfo<pos:position pos:line="66" pos:column="19"/></name> <operator pos:line="66" pos:column="20">==<pos:position pos:line="66" pos:column="22"/></operator> <name pos:line="66" pos:column="23">NULL<pos:position pos:line="66" pos:column="27"/></name> <operator pos:line="66" pos:column="28">||<pos:position pos:line="66" pos:column="30"/></operator> <operator pos:line="66" pos:column="31">!<pos:position pos:line="66" pos:column="32"/></operator><name><name pos:line="66" pos:column="32">exinfo<pos:position pos:line="66" pos:column="38"/></name><operator pos:line="66" pos:column="38">-&gt;<pos:position pos:line="66" pos:column="43"/></operator><name pos:line="66" pos:column="40">forced_type<pos:position pos:line="66" pos:column="51"/></name></name></expr>)<pos:position pos:line="66" pos:column="52"/></condition><then pos:line="66" pos:column="52"> <block pos:line="66" pos:column="53">{
            <if pos:line="67" pos:column="13">if <condition pos:line="67" pos:column="16">(<expr><operator pos:line="67" pos:column="17">(<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="18">type<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">=<pos:position pos:line="67" pos:column="24"/></operator> <call><name pos:line="67" pos:column="25">apr_hash_get<pos:position pos:line="67" pos:column="37"/></name><argument_list pos:line="67" pos:column="37">(<argument><expr><name pos:line="67" pos:column="38">mime_type_extensions<pos:position pos:line="67" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="60">ext<pos:position pos:line="67" pos:column="63"/></name></expr></argument>,
                                     <argument><expr><name pos:line="68" pos:column="38">APR_HASH_KEY_STRING<pos:position pos:line="68" pos:column="57"/></name></expr></argument>)<pos:position pos:line="68" pos:column="58"/></argument_list></call><operator pos:line="68" pos:column="58">)<pos:position pos:line="68" pos:column="59"/></operator> <operator pos:line="68" pos:column="60">!=<pos:position pos:line="68" pos:column="62"/></operator> <name pos:line="68" pos:column="63">NULL<pos:position pos:line="68" pos:column="67"/></name></expr>)<pos:position pos:line="68" pos:column="68"/></condition><then pos:line="68" pos:column="68"> <block pos:line="68" pos:column="69">{
                <expr_stmt><expr><call><name pos:line="69" pos:column="17">ap_set_content_type<pos:position pos:line="69" pos:column="36"/></name><argument_list pos:line="69" pos:column="36">(<argument><expr><name pos:line="69" pos:column="37">r<pos:position pos:line="69" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="40">(<pos:position pos:line="69" pos:column="41"/></operator><name pos:line="69" pos:column="41">char<pos:position pos:line="69" pos:column="45"/></name><operator pos:line="69" pos:column="45">*<pos:position pos:line="69" pos:column="46"/></operator><operator pos:line="69" pos:column="46">)<pos:position pos:line="69" pos:column="47"/></operator> <name pos:line="69" pos:column="48">type<pos:position pos:line="69" pos:column="52"/></name></expr></argument>)<pos:position pos:line="69" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><name pos:line="70" pos:column="17">found<pos:position pos:line="70" pos:column="22"/></name> <operator pos:line="70" pos:column="23">=<pos:position pos:line="70" pos:column="24"/></operator> <literal type="number" pos:line="70" pos:column="25">1<pos:position pos:line="70" pos:column="26"/></literal></expr>;<pos:position pos:line="70" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="71" pos:column="14"/></block></then></if>
        }<pos:position pos:line="72" pos:column="10"/></block></then></if>

        <if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name pos:line="74" pos:column="13">exinfo<pos:position pos:line="74" pos:column="19"/></name> <operator pos:line="74" pos:column="20">!=<pos:position pos:line="74" pos:column="22"/></operator> <name pos:line="74" pos:column="23">NULL<pos:position pos:line="74" pos:column="27"/></name></expr>)<pos:position pos:line="74" pos:column="28"/></condition><then pos:line="74" pos:column="28"> <block pos:line="74" pos:column="29">{

            <if pos:line="76" pos:column="13">if <condition pos:line="76" pos:column="16">(<expr><name><name pos:line="76" pos:column="17">exinfo<pos:position pos:line="76" pos:column="23"/></name><operator pos:line="76" pos:column="23">-&gt;<pos:position pos:line="76" pos:column="28"/></operator><name pos:line="76" pos:column="25">forced_type<pos:position pos:line="76" pos:column="36"/></name></name></expr>)<pos:position pos:line="76" pos:column="37"/></condition><then pos:line="76" pos:column="37"> <block pos:line="76" pos:column="38">{
                <expr_stmt><expr><call><name pos:line="77" pos:column="17">ap_set_content_type<pos:position pos:line="77" pos:column="36"/></name><argument_list pos:line="77" pos:column="36">(<argument><expr><name pos:line="77" pos:column="37">r<pos:position pos:line="77" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="40">exinfo<pos:position pos:line="77" pos:column="46"/></name><operator pos:line="77" pos:column="46">-&gt;<pos:position pos:line="77" pos:column="51"/></operator><name pos:line="77" pos:column="48">forced_type<pos:position pos:line="77" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><name pos:line="78" pos:column="17">found<pos:position pos:line="78" pos:column="22"/></name> <operator pos:line="78" pos:column="23">=<pos:position pos:line="78" pos:column="24"/></operator> <literal type="number" pos:line="78" pos:column="25">1<pos:position pos:line="78" pos:column="26"/></literal></expr>;<pos:position pos:line="78" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="79" pos:column="14"/></block></then></if>

            <if pos:line="81" pos:column="13">if <condition pos:line="81" pos:column="16">(<expr><name><name pos:line="81" pos:column="17">exinfo<pos:position pos:line="81" pos:column="23"/></name><operator pos:line="81" pos:column="23">-&gt;<pos:position pos:line="81" pos:column="28"/></operator><name pos:line="81" pos:column="25">charset_type<pos:position pos:line="81" pos:column="37"/></name></name></expr>)<pos:position pos:line="81" pos:column="38"/></condition><then pos:line="81" pos:column="38"> <block pos:line="81" pos:column="39">{
                <expr_stmt><expr><name pos:line="82" pos:column="17">charset<pos:position pos:line="82" pos:column="24"/></name> <operator pos:line="82" pos:column="25">=<pos:position pos:line="82" pos:column="26"/></operator> <name><name pos:line="82" pos:column="27">exinfo<pos:position pos:line="82" pos:column="33"/></name><operator pos:line="82" pos:column="33">-&gt;<pos:position pos:line="82" pos:column="38"/></operator><name pos:line="82" pos:column="35">charset_type<pos:position pos:line="82" pos:column="47"/></name></name></expr>;<pos:position pos:line="82" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name pos:line="83" pos:column="17">found<pos:position pos:line="83" pos:column="22"/></name> <operator pos:line="83" pos:column="23">=<pos:position pos:line="83" pos:column="24"/></operator> <literal type="number" pos:line="83" pos:column="25">1<pos:position pos:line="83" pos:column="26"/></literal></expr>;<pos:position pos:line="83" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="84" pos:column="14"/></block></then></if>
            <if pos:line="85" pos:column="13">if <condition pos:line="85" pos:column="16">(<expr><name><name pos:line="85" pos:column="17">exinfo<pos:position pos:line="85" pos:column="23"/></name><operator pos:line="85" pos:column="23">-&gt;<pos:position pos:line="85" pos:column="28"/></operator><name pos:line="85" pos:column="25">language_type<pos:position pos:line="85" pos:column="38"/></name></name></expr>)<pos:position pos:line="85" pos:column="39"/></condition><then pos:line="85" pos:column="39"> <block pos:line="85" pos:column="40">{
                <if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><operator pos:line="86" pos:column="21">!<pos:position pos:line="86" pos:column="22"/></operator><name><name pos:line="86" pos:column="22">r<pos:position pos:line="86" pos:column="23"/></name><operator pos:line="86" pos:column="23">-&gt;<pos:position pos:line="86" pos:column="28"/></operator><name pos:line="86" pos:column="25">content_languages<pos:position pos:line="86" pos:column="42"/></name></name></expr>)<pos:position pos:line="86" pos:column="43"/></condition><then pos:line="86" pos:column="43"> <block pos:line="86" pos:column="44">{
                    <expr_stmt><expr><name><name pos:line="87" pos:column="21">r<pos:position pos:line="87" pos:column="22"/></name><operator pos:line="87" pos:column="22">-&gt;<pos:position pos:line="87" pos:column="27"/></operator><name pos:line="87" pos:column="24">content_languages<pos:position pos:line="87" pos:column="41"/></name></name> <operator pos:line="87" pos:column="42">=<pos:position pos:line="87" pos:column="43"/></operator> <call><name pos:line="87" pos:column="44">apr_array_make<pos:position pos:line="87" pos:column="58"/></name><argument_list pos:line="87" pos:column="58">(<argument><expr><name><name pos:line="87" pos:column="59">r<pos:position pos:line="87" pos:column="60"/></name><operator pos:line="87" pos:column="60">-&gt;<pos:position pos:line="87" pos:column="65"/></operator><name pos:line="87" pos:column="62">pool<pos:position pos:line="87" pos:column="66"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="68">2<pos:position pos:line="87" pos:column="69"/></literal></expr></argument>,
                                                          <argument><expr><sizeof pos:line="88" pos:column="59">sizeof<argument_list pos:line="88" pos:column="65">(<argument><expr><name pos:line="88" pos:column="66">char<pos:position pos:line="88" pos:column="70"/></name> <operator pos:line="88" pos:column="71">*<pos:position pos:line="88" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="88" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="88" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="75"/></expr_stmt>
                }<pos:position pos:line="89" pos:column="18"/></block></then></if>
                <expr_stmt><expr><operator pos:line="90" pos:column="17">*<pos:position pos:line="90" pos:column="18"/></operator><operator pos:line="90" pos:column="18">(<pos:position pos:line="90" pos:column="19"/></operator><operator pos:line="90" pos:column="19">(<pos:position pos:line="90" pos:column="20"/></operator><specifier pos:line="90" pos:column="20">const<pos:position pos:line="90" pos:column="25"/></specifier> <name pos:line="90" pos:column="26">char<pos:position pos:line="90" pos:column="30"/></name> <operator pos:line="90" pos:column="31">*<pos:position pos:line="90" pos:column="32"/></operator><operator pos:line="90" pos:column="32">*<pos:position pos:line="90" pos:column="33"/></operator><operator pos:line="90" pos:column="33">)<pos:position pos:line="90" pos:column="34"/></operator><call><name pos:line="90" pos:column="34">apr_array_push<pos:position pos:line="90" pos:column="48"/></name><argument_list pos:line="90" pos:column="48">(<argument><expr><name><name pos:line="90" pos:column="49">r<pos:position pos:line="90" pos:column="50"/></name><operator pos:line="90" pos:column="50">-&gt;<pos:position pos:line="90" pos:column="55"/></operator><name pos:line="90" pos:column="52">content_languages<pos:position pos:line="90" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="70"/></argument_list></call><operator pos:line="90" pos:column="70">)<pos:position pos:line="90" pos:column="71"/></operator>
                    <operator pos:line="91" pos:column="21">=<pos:position pos:line="91" pos:column="22"/></operator> <name><name pos:line="91" pos:column="23">exinfo<pos:position pos:line="91" pos:column="29"/></name><operator pos:line="91" pos:column="29">-&gt;<pos:position pos:line="91" pos:column="34"/></operator><name pos:line="91" pos:column="31">language_type<pos:position pos:line="91" pos:column="44"/></name></name></expr>;<pos:position pos:line="91" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><name pos:line="92" pos:column="17">found<pos:position pos:line="92" pos:column="22"/></name> <operator pos:line="92" pos:column="23">=<pos:position pos:line="92" pos:column="24"/></operator> <literal type="number" pos:line="92" pos:column="25">1<pos:position pos:line="92" pos:column="26"/></literal></expr>;<pos:position pos:line="92" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="93" pos:column="14"/></block></then></if>
            <if pos:line="94" pos:column="13">if <condition pos:line="94" pos:column="16">(<expr><name><name pos:line="94" pos:column="17">exinfo<pos:position pos:line="94" pos:column="23"/></name><operator pos:line="94" pos:column="23">-&gt;<pos:position pos:line="94" pos:column="28"/></operator><name pos:line="94" pos:column="25">encoding_type<pos:position pos:line="94" pos:column="38"/></name></name></expr>)<pos:position pos:line="94" pos:column="39"/></condition><then pos:line="94" pos:column="39"> <block pos:line="94" pos:column="40">{
                <if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><operator pos:line="95" pos:column="21">!<pos:position pos:line="95" pos:column="22"/></operator><name><name pos:line="95" pos:column="22">r<pos:position pos:line="95" pos:column="23"/></name><operator pos:line="95" pos:column="23">-&gt;<pos:position pos:line="95" pos:column="28"/></operator><name pos:line="95" pos:column="25">content_encoding<pos:position pos:line="95" pos:column="41"/></name></name></expr>)<pos:position pos:line="95" pos:column="42"/></condition><then pos:line="95" pos:column="42"> <block pos:line="95" pos:column="43">{
                    <expr_stmt><expr><name><name pos:line="96" pos:column="21">r<pos:position pos:line="96" pos:column="22"/></name><operator pos:line="96" pos:column="22">-&gt;<pos:position pos:line="96" pos:column="27"/></operator><name pos:line="96" pos:column="24">content_encoding<pos:position pos:line="96" pos:column="40"/></name></name> <operator pos:line="96" pos:column="41">=<pos:position pos:line="96" pos:column="42"/></operator> <name><name pos:line="96" pos:column="43">exinfo<pos:position pos:line="96" pos:column="49"/></name><operator pos:line="96" pos:column="49">-&gt;<pos:position pos:line="96" pos:column="54"/></operator><name pos:line="96" pos:column="51">encoding_type<pos:position pos:line="96" pos:column="64"/></name></name></expr>;<pos:position pos:line="96" pos:column="65"/></expr_stmt>
                }<pos:position pos:line="97" pos:column="18"/></block></then>
                <else pos:line="98" pos:column="17">else <block pos:line="98" pos:column="22">{
                    <comment type="block" pos:line="99" pos:column="21">/* XXX should eliminate duplicate entities */</comment>
                    <expr_stmt><expr><name><name pos:line="100" pos:column="21">r<pos:position pos:line="100" pos:column="22"/></name><operator pos:line="100" pos:column="22">-&gt;<pos:position pos:line="100" pos:column="27"/></operator><name pos:line="100" pos:column="24">content_encoding<pos:position pos:line="100" pos:column="40"/></name></name> <operator pos:line="100" pos:column="41">=<pos:position pos:line="100" pos:column="42"/></operator> <call><name pos:line="100" pos:column="43">apr_pstrcat<pos:position pos:line="100" pos:column="54"/></name><argument_list pos:line="100" pos:column="54">(<argument><expr><name><name pos:line="100" pos:column="55">r<pos:position pos:line="100" pos:column="56"/></name><operator pos:line="100" pos:column="56">-&gt;<pos:position pos:line="100" pos:column="61"/></operator><name pos:line="100" pos:column="58">pool<pos:position pos:line="100" pos:column="62"/></name></name></expr></argument>,
                                                      <argument><expr><name><name pos:line="101" pos:column="55">r<pos:position pos:line="101" pos:column="56"/></name><operator pos:line="101" pos:column="56">-&gt;<pos:position pos:line="101" pos:column="61"/></operator><name pos:line="101" pos:column="58">content_encoding<pos:position pos:line="101" pos:column="74"/></name></name></expr></argument>,
                                                      <argument><expr><literal type="string" pos:line="102" pos:column="55">", "<pos:position pos:line="102" pos:column="59"/></literal></expr></argument>,
                                                      <argument><expr><name><name pos:line="103" pos:column="55">exinfo<pos:position pos:line="103" pos:column="61"/></name><operator pos:line="103" pos:column="61">-&gt;<pos:position pos:line="103" pos:column="66"/></operator><name pos:line="103" pos:column="63">encoding_type<pos:position pos:line="103" pos:column="76"/></name></name></expr></argument>,
                                                      <argument><expr><name pos:line="104" pos:column="55">NULL<pos:position pos:line="104" pos:column="59"/></name></expr></argument>)<pos:position pos:line="104" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="61"/></expr_stmt>
                }<pos:position pos:line="105" pos:column="18"/></block></else></if>
                <expr_stmt><expr><name pos:line="106" pos:column="17">found<pos:position pos:line="106" pos:column="22"/></name> <operator pos:line="106" pos:column="23">=<pos:position pos:line="106" pos:column="24"/></operator> <literal type="number" pos:line="106" pos:column="25">1<pos:position pos:line="106" pos:column="26"/></literal></expr>;<pos:position pos:line="106" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="107" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="108" pos:column="13">/* The following extensions are not 'Found'.  That is, they don't
             * make any contribution to metadata negotation, so they must have
             * been explicitly requested by name. 
             */</comment>
            <if pos:line="112" pos:column="13">if <condition pos:line="112" pos:column="16">(<expr><name><name pos:line="112" pos:column="17">exinfo<pos:position pos:line="112" pos:column="23"/></name><operator pos:line="112" pos:column="23">-&gt;<pos:position pos:line="112" pos:column="28"/></operator><name pos:line="112" pos:column="25">handler<pos:position pos:line="112" pos:column="32"/></name></name> <operator pos:line="112" pos:column="33">&amp;&amp;<pos:position pos:line="112" pos:column="43"/></operator> <name><name pos:line="112" pos:column="36">r<pos:position pos:line="112" pos:column="37"/></name><operator pos:line="112" pos:column="37">-&gt;<pos:position pos:line="112" pos:column="42"/></operator><name pos:line="112" pos:column="39">proxyreq<pos:position pos:line="112" pos:column="47"/></name></name> <operator pos:line="112" pos:column="48">==<pos:position pos:line="112" pos:column="50"/></operator> <name pos:line="112" pos:column="51">PROXYREQ_NONE<pos:position pos:line="112" pos:column="64"/></name></expr>)<pos:position pos:line="112" pos:column="65"/></condition><then pos:line="112" pos:column="65"> <block pos:line="112" pos:column="66">{
                <expr_stmt><expr><name><name pos:line="113" pos:column="17">r<pos:position pos:line="113" pos:column="18"/></name><operator pos:line="113" pos:column="18">-&gt;<pos:position pos:line="113" pos:column="23"/></operator><name pos:line="113" pos:column="20">handler<pos:position pos:line="113" pos:column="27"/></name></name> <operator pos:line="113" pos:column="28">=<pos:position pos:line="113" pos:column="29"/></operator> <name><name pos:line="113" pos:column="30">exinfo<pos:position pos:line="113" pos:column="36"/></name><operator pos:line="113" pos:column="36">-&gt;<pos:position pos:line="113" pos:column="41"/></operator><name pos:line="113" pos:column="38">handler<pos:position pos:line="113" pos:column="45"/></name></name></expr>;<pos:position pos:line="113" pos:column="46"/></expr_stmt>
                <if pos:line="114" pos:column="17">if <condition pos:line="114" pos:column="20">(<expr><name><name pos:line="114" pos:column="21">conf<pos:position pos:line="114" pos:column="25"/></name><operator pos:line="114" pos:column="25">-&gt;<pos:position pos:line="114" pos:column="30"/></operator><name pos:line="114" pos:column="27">multimatch<pos:position pos:line="114" pos:column="37"/></name></name> <operator pos:line="114" pos:column="38">&amp;<pos:position pos:line="114" pos:column="43"/></operator> <name pos:line="114" pos:column="40">MULTIMATCH_HANDLERS<pos:position pos:line="114" pos:column="59"/></name></expr>)<pos:position pos:line="114" pos:column="60"/></condition><then pos:line="114" pos:column="60"> <block pos:line="114" pos:column="61">{
                    <expr_stmt><expr><name pos:line="115" pos:column="21">found<pos:position pos:line="115" pos:column="26"/></name> <operator pos:line="115" pos:column="27">=<pos:position pos:line="115" pos:column="28"/></operator> <literal type="number" pos:line="115" pos:column="29">1<pos:position pos:line="115" pos:column="30"/></literal></expr>;<pos:position pos:line="115" pos:column="31"/></expr_stmt>
                }<pos:position pos:line="116" pos:column="18"/></block></then></if>
            }<pos:position pos:line="117" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="118" pos:column="13">/* XXX Two significant problems; 1, we don't check to see if we are
             * setting redundant filters.    2, we insert these in the types config
             * hook, which may be too early (dunno.)
             */</comment>
            <if pos:line="122" pos:column="13">if <condition pos:line="122" pos:column="16">(<expr><name><name pos:line="122" pos:column="17">exinfo<pos:position pos:line="122" pos:column="23"/></name><operator pos:line="122" pos:column="23">-&gt;<pos:position pos:line="122" pos:column="28"/></operator><name pos:line="122" pos:column="25">input_filters<pos:position pos:line="122" pos:column="38"/></name></name> <operator pos:line="122" pos:column="39">&amp;&amp;<pos:position pos:line="122" pos:column="49"/></operator> <name><name pos:line="122" pos:column="42">r<pos:position pos:line="122" pos:column="43"/></name><operator pos:line="122" pos:column="43">-&gt;<pos:position pos:line="122" pos:column="48"/></operator><name pos:line="122" pos:column="45">proxyreq<pos:position pos:line="122" pos:column="53"/></name></name> <operator pos:line="122" pos:column="54">==<pos:position pos:line="122" pos:column="56"/></operator> <name pos:line="122" pos:column="57">PROXYREQ_NONE<pos:position pos:line="122" pos:column="70"/></name></expr>)<pos:position pos:line="122" pos:column="71"/></condition><then pos:line="122" pos:column="71"> <block pos:line="122" pos:column="72">{
                <decl_stmt><decl><type><specifier pos:line="123" pos:column="17">const<pos:position pos:line="123" pos:column="22"/></specifier> <name pos:line="123" pos:column="23">char<pos:position pos:line="123" pos:column="27"/></name> <modifier pos:line="123" pos:column="28">*<pos:position pos:line="123" pos:column="29"/></modifier></type><name pos:line="123" pos:column="29">filter<pos:position pos:line="123" pos:column="35"/></name></decl>, <modifier pos:line="123" pos:column="37">*<pos:position pos:line="123" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="123" pos:column="38">filters<pos:position pos:line="123" pos:column="45"/></name> <init pos:line="123" pos:column="46">= <expr><name><name pos:line="123" pos:column="48">exinfo<pos:position pos:line="123" pos:column="54"/></name><operator pos:line="123" pos:column="54">-&gt;<pos:position pos:line="123" pos:column="59"/></operator><name pos:line="123" pos:column="56">input_filters<pos:position pos:line="123" pos:column="69"/></name></name></expr></init></decl>;<pos:position pos:line="123" pos:column="70"/></decl_stmt>
                <while pos:line="124" pos:column="17">while <condition pos:line="124" pos:column="23">(<expr><operator pos:line="124" pos:column="24">*<pos:position pos:line="124" pos:column="25"/></operator><name pos:line="124" pos:column="25">filters<pos:position pos:line="124" pos:column="32"/></name> 
                    <operator pos:line="125" pos:column="21">&amp;&amp;<pos:position pos:line="125" pos:column="31"/></operator> <operator pos:line="125" pos:column="24">(<pos:position pos:line="125" pos:column="25"/></operator><name pos:line="125" pos:column="25">filter<pos:position pos:line="125" pos:column="31"/></name> <operator pos:line="125" pos:column="32">=<pos:position pos:line="125" pos:column="33"/></operator> <call><name pos:line="125" pos:column="34">ap_getword<pos:position pos:line="125" pos:column="44"/></name><argument_list pos:line="125" pos:column="44">(<argument><expr><name><name pos:line="125" pos:column="45">r<pos:position pos:line="125" pos:column="46"/></name><operator pos:line="125" pos:column="46">-&gt;<pos:position pos:line="125" pos:column="51"/></operator><name pos:line="125" pos:column="48">pool<pos:position pos:line="125" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="54">&amp;<pos:position pos:line="125" pos:column="59"/></operator><name pos:line="125" pos:column="55">filters<pos:position pos:line="125" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="125" pos:column="64">';'<pos:position pos:line="125" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="68"/></argument_list></call><operator pos:line="125" pos:column="68">)<pos:position pos:line="125" pos:column="69"/></operator></expr>)<pos:position pos:line="125" pos:column="70"/></condition> <block pos:line="125" pos:column="71">{
                    <expr_stmt><expr><call><name pos:line="126" pos:column="21">ap_add_input_filter<pos:position pos:line="126" pos:column="40"/></name><argument_list pos:line="126" pos:column="40">(<argument><expr><name pos:line="126" pos:column="41">filter<pos:position pos:line="126" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="49">NULL<pos:position pos:line="126" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="55">r<pos:position pos:line="126" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="126" pos:column="58">r<pos:position pos:line="126" pos:column="59"/></name><operator pos:line="126" pos:column="59">-&gt;<pos:position pos:line="126" pos:column="64"/></operator><name pos:line="126" pos:column="61">connection<pos:position pos:line="126" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="73"/></expr_stmt>
                }<pos:position pos:line="127" pos:column="18"/></block></while>
                <if pos:line="128" pos:column="17">if <condition pos:line="128" pos:column="20">(<expr><name><name pos:line="128" pos:column="21">conf<pos:position pos:line="128" pos:column="25"/></name><operator pos:line="128" pos:column="25">-&gt;<pos:position pos:line="128" pos:column="30"/></operator><name pos:line="128" pos:column="27">multimatch<pos:position pos:line="128" pos:column="37"/></name></name> <operator pos:line="128" pos:column="38">&amp;<pos:position pos:line="128" pos:column="43"/></operator> <name pos:line="128" pos:column="40">MULTIMATCH_FILTERS<pos:position pos:line="128" pos:column="58"/></name></expr>)<pos:position pos:line="128" pos:column="59"/></condition><then pos:line="128" pos:column="59"> <block pos:line="128" pos:column="60">{
                    <expr_stmt><expr><name pos:line="129" pos:column="21">found<pos:position pos:line="129" pos:column="26"/></name> <operator pos:line="129" pos:column="27">=<pos:position pos:line="129" pos:column="28"/></operator> <literal type="number" pos:line="129" pos:column="29">1<pos:position pos:line="129" pos:column="30"/></literal></expr>;<pos:position pos:line="129" pos:column="31"/></expr_stmt>
                }<pos:position pos:line="130" pos:column="18"/></block></then></if>
            }<pos:position pos:line="131" pos:column="14"/></block></then></if>
            <if pos:line="132" pos:column="13">if <condition pos:line="132" pos:column="16">(<expr><name><name pos:line="132" pos:column="17">exinfo<pos:position pos:line="132" pos:column="23"/></name><operator pos:line="132" pos:column="23">-&gt;<pos:position pos:line="132" pos:column="28"/></operator><name pos:line="132" pos:column="25">output_filters<pos:position pos:line="132" pos:column="39"/></name></name> <operator pos:line="132" pos:column="40">&amp;&amp;<pos:position pos:line="132" pos:column="50"/></operator> <name><name pos:line="132" pos:column="43">r<pos:position pos:line="132" pos:column="44"/></name><operator pos:line="132" pos:column="44">-&gt;<pos:position pos:line="132" pos:column="49"/></operator><name pos:line="132" pos:column="46">proxyreq<pos:position pos:line="132" pos:column="54"/></name></name> <operator pos:line="132" pos:column="55">==<pos:position pos:line="132" pos:column="57"/></operator> <name pos:line="132" pos:column="58">PROXYREQ_NONE<pos:position pos:line="132" pos:column="71"/></name></expr>)<pos:position pos:line="132" pos:column="72"/></condition><then pos:line="132" pos:column="72"> <block pos:line="132" pos:column="73">{
                <decl_stmt><decl><type><specifier pos:line="133" pos:column="17">const<pos:position pos:line="133" pos:column="22"/></specifier> <name pos:line="133" pos:column="23">char<pos:position pos:line="133" pos:column="27"/></name> <modifier pos:line="133" pos:column="28">*<pos:position pos:line="133" pos:column="29"/></modifier></type><name pos:line="133" pos:column="29">filter<pos:position pos:line="133" pos:column="35"/></name></decl>, <modifier pos:line="133" pos:column="37">*<pos:position pos:line="133" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="133" pos:column="38">filters<pos:position pos:line="133" pos:column="45"/></name> <init pos:line="133" pos:column="46">= <expr><name><name pos:line="133" pos:column="48">exinfo<pos:position pos:line="133" pos:column="54"/></name><operator pos:line="133" pos:column="54">-&gt;<pos:position pos:line="133" pos:column="59"/></operator><name pos:line="133" pos:column="56">output_filters<pos:position pos:line="133" pos:column="70"/></name></name></expr></init></decl>;<pos:position pos:line="133" pos:column="71"/></decl_stmt>
                <while pos:line="134" pos:column="17">while <condition pos:line="134" pos:column="23">(<expr><operator pos:line="134" pos:column="24">*<pos:position pos:line="134" pos:column="25"/></operator><name pos:line="134" pos:column="25">filters<pos:position pos:line="134" pos:column="32"/></name> 
                    <operator pos:line="135" pos:column="21">&amp;&amp;<pos:position pos:line="135" pos:column="31"/></operator> <operator pos:line="135" pos:column="24">(<pos:position pos:line="135" pos:column="25"/></operator><name pos:line="135" pos:column="25">filter<pos:position pos:line="135" pos:column="31"/></name> <operator pos:line="135" pos:column="32">=<pos:position pos:line="135" pos:column="33"/></operator> <call><name pos:line="135" pos:column="34">ap_getword<pos:position pos:line="135" pos:column="44"/></name><argument_list pos:line="135" pos:column="44">(<argument><expr><name><name pos:line="135" pos:column="45">r<pos:position pos:line="135" pos:column="46"/></name><operator pos:line="135" pos:column="46">-&gt;<pos:position pos:line="135" pos:column="51"/></operator><name pos:line="135" pos:column="48">pool<pos:position pos:line="135" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="135" pos:column="54">&amp;<pos:position pos:line="135" pos:column="59"/></operator><name pos:line="135" pos:column="55">filters<pos:position pos:line="135" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="135" pos:column="64">';'<pos:position pos:line="135" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="68"/></argument_list></call><operator pos:line="135" pos:column="68">)<pos:position pos:line="135" pos:column="69"/></operator></expr>)<pos:position pos:line="135" pos:column="70"/></condition> <block pos:line="135" pos:column="71">{
                    <expr_stmt><expr><call><name pos:line="136" pos:column="21">ap_add_output_filter<pos:position pos:line="136" pos:column="41"/></name><argument_list pos:line="136" pos:column="41">(<argument><expr><name pos:line="136" pos:column="42">filter<pos:position pos:line="136" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="50">NULL<pos:position pos:line="136" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="56">r<pos:position pos:line="136" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="59">r<pos:position pos:line="136" pos:column="60"/></name><operator pos:line="136" pos:column="60">-&gt;<pos:position pos:line="136" pos:column="65"/></operator><name pos:line="136" pos:column="62">connection<pos:position pos:line="136" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="74"/></expr_stmt>
                }<pos:position pos:line="137" pos:column="18"/></block></while>
                <if pos:line="138" pos:column="17">if <condition pos:line="138" pos:column="20">(<expr><name><name pos:line="138" pos:column="21">conf<pos:position pos:line="138" pos:column="25"/></name><operator pos:line="138" pos:column="25">-&gt;<pos:position pos:line="138" pos:column="30"/></operator><name pos:line="138" pos:column="27">multimatch<pos:position pos:line="138" pos:column="37"/></name></name> <operator pos:line="138" pos:column="38">&amp;<pos:position pos:line="138" pos:column="43"/></operator> <name pos:line="138" pos:column="40">MULTIMATCH_FILTERS<pos:position pos:line="138" pos:column="58"/></name></expr>)<pos:position pos:line="138" pos:column="59"/></condition><then pos:line="138" pos:column="59"> <block pos:line="138" pos:column="60">{
                    <expr_stmt><expr><name pos:line="139" pos:column="21">found<pos:position pos:line="139" pos:column="26"/></name> <operator pos:line="139" pos:column="27">=<pos:position pos:line="139" pos:column="28"/></operator> <literal type="number" pos:line="139" pos:column="29">1<pos:position pos:line="139" pos:column="30"/></literal></expr>;<pos:position pos:line="139" pos:column="31"/></expr_stmt>
                }<pos:position pos:line="140" pos:column="18"/></block></then></if>
            }<pos:position pos:line="141" pos:column="14"/></block></then></if>
        }<pos:position pos:line="142" pos:column="10"/></block></then></if>

        <if pos:line="144" pos:column="9">if <condition pos:line="144" pos:column="12">(<expr><name pos:line="144" pos:column="13">found<pos:position pos:line="144" pos:column="18"/></name> <operator pos:line="144" pos:column="19">||<pos:position pos:line="144" pos:column="21"/></operator> <operator pos:line="144" pos:column="22">(<pos:position pos:line="144" pos:column="23"/></operator><name><name pos:line="144" pos:column="23">conf<pos:position pos:line="144" pos:column="27"/></name><operator pos:line="144" pos:column="27">-&gt;<pos:position pos:line="144" pos:column="32"/></operator><name pos:line="144" pos:column="29">multimatch<pos:position pos:line="144" pos:column="39"/></name></name> <operator pos:line="144" pos:column="40">&amp;<pos:position pos:line="144" pos:column="45"/></operator> <name pos:line="144" pos:column="42">MULTIMATCH_ANY<pos:position pos:line="144" pos:column="56"/></name><operator pos:line="144" pos:column="56">)<pos:position pos:line="144" pos:column="57"/></operator></expr>)<pos:position pos:line="144" pos:column="58"/></condition><then pos:line="144" pos:column="58"> <block pos:line="144" pos:column="59">{
            <expr_stmt><expr><name pos:line="145" pos:column="13">found_metadata<pos:position pos:line="145" pos:column="27"/></name> <operator pos:line="145" pos:column="28">=<pos:position pos:line="145" pos:column="29"/></operator> <literal type="number" pos:line="145" pos:column="30">1<pos:position pos:line="145" pos:column="31"/></literal></expr>;<pos:position pos:line="145" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="146" pos:column="10"/></block></then>
        <else pos:line="147" pos:column="9">else <block pos:line="147" pos:column="14">{
            <expr_stmt><expr><operator pos:line="148" pos:column="13">*<pos:position pos:line="148" pos:column="14"/></operator><operator pos:line="148" pos:column="14">(<pos:position pos:line="148" pos:column="15"/></operator><operator pos:line="148" pos:column="15">(<pos:position pos:line="148" pos:column="16"/></operator><specifier pos:line="148" pos:column="16">const<pos:position pos:line="148" pos:column="21"/></specifier> <name pos:line="148" pos:column="22">char<pos:position pos:line="148" pos:column="26"/></name> <operator pos:line="148" pos:column="27">*<pos:position pos:line="148" pos:column="28"/></operator><operator pos:line="148" pos:column="28">*<pos:position pos:line="148" pos:column="29"/></operator><operator pos:line="148" pos:column="29">)<pos:position pos:line="148" pos:column="30"/></operator> <call><name pos:line="148" pos:column="31">apr_array_push<pos:position pos:line="148" pos:column="45"/></name><argument_list pos:line="148" pos:column="45">(<argument><expr><name pos:line="148" pos:column="46">exception_list<pos:position pos:line="148" pos:column="60"/></name></expr></argument>)<pos:position pos:line="148" pos:column="61"/></argument_list></call><operator pos:line="148" pos:column="61">)<pos:position pos:line="148" pos:column="62"/></operator> <operator pos:line="148" pos:column="63">=<pos:position pos:line="148" pos:column="64"/></operator> <name pos:line="148" pos:column="65">ext<pos:position pos:line="148" pos:column="68"/></name></expr>;<pos:position pos:line="148" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="149" pos:column="10"/></block></else></if>
    }<pos:position pos:line="150" pos:column="6"/></block></while>

    <comment type="block" pos:line="152" pos:column="5">/*
     * Need to set a notes entry on r for unrecognized elements.
     * Somebody better claim them!  If we did absolutely nothing,
     * skip the notes to alert mod_negotiation we are clueless.
     */</comment>
    <if pos:line="157" pos:column="5">if <condition pos:line="157" pos:column="8">(<expr><name pos:line="157" pos:column="9">found_metadata<pos:position pos:line="157" pos:column="23"/></name></expr>)<pos:position pos:line="157" pos:column="24"/></condition><then pos:line="157" pos:column="24"> <block pos:line="157" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="158" pos:column="9">apr_table_setn<pos:position pos:line="158" pos:column="23"/></name><argument_list pos:line="158" pos:column="23">(<argument><expr><name><name pos:line="158" pos:column="24">r<pos:position pos:line="158" pos:column="25"/></name><operator pos:line="158" pos:column="25">-&gt;<pos:position pos:line="158" pos:column="30"/></operator><name pos:line="158" pos:column="27">notes<pos:position pos:line="158" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="158" pos:column="34">"ap-mime-exceptions-list"<pos:position pos:line="158" pos:column="59"/></literal></expr></argument>, 
                       <argument><expr><operator pos:line="159" pos:column="24">(<pos:position pos:line="159" pos:column="25"/></operator><name pos:line="159" pos:column="25">void<pos:position pos:line="159" pos:column="29"/></name> <operator pos:line="159" pos:column="30">*<pos:position pos:line="159" pos:column="31"/></operator><operator pos:line="159" pos:column="31">)<pos:position pos:line="159" pos:column="32"/></operator><name pos:line="159" pos:column="32">exception_list<pos:position pos:line="159" pos:column="46"/></name></expr></argument>)<pos:position pos:line="159" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="160" pos:column="6"/></block></then></if>

    <if pos:line="162" pos:column="5">if <condition pos:line="162" pos:column="8">(<expr><name><name pos:line="162" pos:column="9">r<pos:position pos:line="162" pos:column="10"/></name><operator pos:line="162" pos:column="10">-&gt;<pos:position pos:line="162" pos:column="15"/></operator><name pos:line="162" pos:column="12">content_type<pos:position pos:line="162" pos:column="24"/></name></name></expr>)<pos:position pos:line="162" pos:column="25"/></condition><then pos:line="162" pos:column="25"> <block pos:line="162" pos:column="26">{
        <decl_stmt><decl><type><name pos:line="163" pos:column="9">content_type<pos:position pos:line="163" pos:column="21"/></name> <modifier pos:line="163" pos:column="22">*<pos:position pos:line="163" pos:column="23"/></modifier></type><name pos:line="163" pos:column="23">ctp<pos:position pos:line="163" pos:column="26"/></name></decl>;<pos:position pos:line="163" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="164" pos:column="9">int<pos:position pos:line="164" pos:column="12"/></name></type> <name pos:line="164" pos:column="13">override<pos:position pos:line="164" pos:column="21"/></name> <init pos:line="164" pos:column="22">= <expr><literal type="number" pos:line="164" pos:column="24">0<pos:position pos:line="164" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="164" pos:column="26"/></decl_stmt>

        <if pos:line="166" pos:column="9">if <condition pos:line="166" pos:column="12">(<expr><operator pos:line="166" pos:column="13">(<pos:position pos:line="166" pos:column="14"/></operator><name pos:line="166" pos:column="14">ctp<pos:position pos:line="166" pos:column="17"/></name> <operator pos:line="166" pos:column="18">=<pos:position pos:line="166" pos:column="19"/></operator> <call><name pos:line="166" pos:column="20">analyze_ct<pos:position pos:line="166" pos:column="30"/></name><argument_list pos:line="166" pos:column="30">(<argument><expr><name pos:line="166" pos:column="31">r<pos:position pos:line="166" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="166" pos:column="34">r<pos:position pos:line="166" pos:column="35"/></name><operator pos:line="166" pos:column="35">-&gt;<pos:position pos:line="166" pos:column="40"/></operator><name pos:line="166" pos:column="37">content_type<pos:position pos:line="166" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="166" pos:column="50"/></argument_list></call><operator pos:line="166" pos:column="50">)<pos:position pos:line="166" pos:column="51"/></operator></expr>)<pos:position pos:line="166" pos:column="52"/></condition><then pos:line="166" pos:column="52"> <block pos:line="166" pos:column="53">{
            <decl_stmt><decl><type><name pos:line="167" pos:column="13">param<pos:position pos:line="167" pos:column="18"/></name> <modifier pos:line="167" pos:column="19">*<pos:position pos:line="167" pos:column="20"/></modifier></type><name pos:line="167" pos:column="20">pp<pos:position pos:line="167" pos:column="22"/></name> <init pos:line="167" pos:column="23">= <expr><name><name pos:line="167" pos:column="25">ctp<pos:position pos:line="167" pos:column="28"/></name><operator pos:line="167" pos:column="28">-&gt;<pos:position pos:line="167" pos:column="33"/></operator><name pos:line="167" pos:column="30">param<pos:position pos:line="167" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="167" pos:column="36"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="168" pos:column="13">char<pos:position pos:line="168" pos:column="17"/></name> <modifier pos:line="168" pos:column="18">*<pos:position pos:line="168" pos:column="19"/></modifier></type><name pos:line="168" pos:column="19">base_content_type<pos:position pos:line="168" pos:column="36"/></name> <init pos:line="168" pos:column="37">= <expr><call><name pos:line="168" pos:column="39">apr_palloc<pos:position pos:line="168" pos:column="49"/></name><argument_list pos:line="168" pos:column="49">(<argument><expr><name><name pos:line="168" pos:column="50">r<pos:position pos:line="168" pos:column="51"/></name><operator pos:line="168" pos:column="51">-&gt;<pos:position pos:line="168" pos:column="56"/></operator><name pos:line="168" pos:column="53">pool<pos:position pos:line="168" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="168" pos:column="59">ctp<pos:position pos:line="168" pos:column="62"/></name><operator pos:line="168" pos:column="62">-&gt;<pos:position pos:line="168" pos:column="67"/></operator><name pos:line="168" pos:column="64">type_len<pos:position pos:line="168" pos:column="72"/></name></name> <operator pos:line="168" pos:column="73">+<pos:position pos:line="168" pos:column="74"/></operator>
                                                 <name><name pos:line="169" pos:column="50">ctp<pos:position pos:line="169" pos:column="53"/></name><operator pos:line="169" pos:column="53">-&gt;<pos:position pos:line="169" pos:column="58"/></operator><name pos:line="169" pos:column="55">subtype_len<pos:position pos:line="169" pos:column="66"/></name></name> <operator pos:line="169" pos:column="67">+<pos:position pos:line="169" pos:column="68"/></operator>
                                                 <sizeof pos:line="170" pos:column="50">sizeof<argument_list pos:line="170" pos:column="56">(<argument><expr><literal type="string" pos:line="170" pos:column="57">"/"<pos:position pos:line="170" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="170" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="170" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="170" pos:column="63"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="171" pos:column="13">char<pos:position pos:line="171" pos:column="17"/></name> <modifier pos:line="171" pos:column="18">*<pos:position pos:line="171" pos:column="19"/></modifier></type><name pos:line="171" pos:column="19">tmp<pos:position pos:line="171" pos:column="22"/></name> <init pos:line="171" pos:column="23">= <expr><name pos:line="171" pos:column="25">base_content_type<pos:position pos:line="171" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="171" pos:column="43"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="172" pos:column="13">memcpy<pos:position pos:line="172" pos:column="19"/></name><argument_list pos:line="172" pos:column="19">(<argument><expr><name pos:line="172" pos:column="20">tmp<pos:position pos:line="172" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="172" pos:column="25">ctp<pos:position pos:line="172" pos:column="28"/></name><operator pos:line="172" pos:column="28">-&gt;<pos:position pos:line="172" pos:column="33"/></operator><name pos:line="172" pos:column="30">type<pos:position pos:line="172" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="172" pos:column="36">ctp<pos:position pos:line="172" pos:column="39"/></name><operator pos:line="172" pos:column="39">-&gt;<pos:position pos:line="172" pos:column="44"/></operator><name pos:line="172" pos:column="41">type_len<pos:position pos:line="172" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="172" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name pos:line="173" pos:column="13">tmp<pos:position pos:line="173" pos:column="16"/></name> <operator pos:line="173" pos:column="17">+=<pos:position pos:line="173" pos:column="19"/></operator> <name><name pos:line="173" pos:column="20">ctp<pos:position pos:line="173" pos:column="23"/></name><operator pos:line="173" pos:column="23">-&gt;<pos:position pos:line="173" pos:column="28"/></operator><name pos:line="173" pos:column="25">type_len<pos:position pos:line="173" pos:column="33"/></name></name></expr>;<pos:position pos:line="173" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="174" pos:column="13">*<pos:position pos:line="174" pos:column="14"/></operator><name pos:line="174" pos:column="14">tmp<pos:position pos:line="174" pos:column="17"/></name><operator pos:line="174" pos:column="17">++<pos:position pos:line="174" pos:column="19"/></operator> <operator pos:line="174" pos:column="20">=<pos:position pos:line="174" pos:column="21"/></operator> <literal type="char" pos:line="174" pos:column="22">'/'<pos:position pos:line="174" pos:column="25"/></literal></expr>;<pos:position pos:line="174" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="175" pos:column="13">memcpy<pos:position pos:line="175" pos:column="19"/></name><argument_list pos:line="175" pos:column="19">(<argument><expr><name pos:line="175" pos:column="20">tmp<pos:position pos:line="175" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="175" pos:column="25">ctp<pos:position pos:line="175" pos:column="28"/></name><operator pos:line="175" pos:column="28">-&gt;<pos:position pos:line="175" pos:column="33"/></operator><name pos:line="175" pos:column="30">subtype<pos:position pos:line="175" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="175" pos:column="39">ctp<pos:position pos:line="175" pos:column="42"/></name><operator pos:line="175" pos:column="42">-&gt;<pos:position pos:line="175" pos:column="47"/></operator><name pos:line="175" pos:column="44">subtype_len<pos:position pos:line="175" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="175" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><name pos:line="176" pos:column="13">tmp<pos:position pos:line="176" pos:column="16"/></name> <operator pos:line="176" pos:column="17">+=<pos:position pos:line="176" pos:column="19"/></operator> <name><name pos:line="176" pos:column="20">ctp<pos:position pos:line="176" pos:column="23"/></name><operator pos:line="176" pos:column="23">-&gt;<pos:position pos:line="176" pos:column="28"/></operator><name pos:line="176" pos:column="25">subtype_len<pos:position pos:line="176" pos:column="36"/></name></name></expr>;<pos:position pos:line="176" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="177" pos:column="13">*<pos:position pos:line="177" pos:column="14"/></operator><name pos:line="177" pos:column="14">tmp<pos:position pos:line="177" pos:column="17"/></name> <operator pos:line="177" pos:column="18">=<pos:position pos:line="177" pos:column="19"/></operator> <literal type="number" pos:line="177" pos:column="20">0<pos:position pos:line="177" pos:column="21"/></literal></expr>;<pos:position pos:line="177" pos:column="22"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="178" pos:column="13">ap_set_content_type<pos:position pos:line="178" pos:column="32"/></name><argument_list pos:line="178" pos:column="32">(<argument><expr><name pos:line="178" pos:column="33">r<pos:position pos:line="178" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="36">base_content_type<pos:position pos:line="178" pos:column="53"/></name></expr></argument>)<pos:position pos:line="178" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="55"/></expr_stmt>
            <while pos:line="179" pos:column="13">while <condition pos:line="179" pos:column="19">(<expr><name pos:line="179" pos:column="20">pp<pos:position pos:line="179" pos:column="22"/></name> <operator pos:line="179" pos:column="23">!=<pos:position pos:line="179" pos:column="25"/></operator> <name pos:line="179" pos:column="26">NULL<pos:position pos:line="179" pos:column="30"/></name></expr>)<pos:position pos:line="179" pos:column="31"/></condition> <block pos:line="179" pos:column="32">{
                <if pos:line="180" pos:column="17">if <condition pos:line="180" pos:column="20">(<expr><name pos:line="180" pos:column="21">charset<pos:position pos:line="180" pos:column="28"/></name> <operator pos:line="180" pos:column="29">&amp;&amp;<pos:position pos:line="180" pos:column="39"/></operator> <operator pos:line="180" pos:column="32">!<pos:position pos:line="180" pos:column="33"/></operator><call><name pos:line="180" pos:column="33">strcmp<pos:position pos:line="180" pos:column="39"/></name><argument_list pos:line="180" pos:column="39">(<argument><expr><name><name pos:line="180" pos:column="40">pp<pos:position pos:line="180" pos:column="42"/></name><operator pos:line="180" pos:column="42">-&gt;<pos:position pos:line="180" pos:column="47"/></operator><name pos:line="180" pos:column="44">attr<pos:position pos:line="180" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="180" pos:column="50">"charset"<pos:position pos:line="180" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="180" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="180" pos:column="61"/></condition><then pos:line="180" pos:column="61"> <block pos:line="180" pos:column="62">{
                    <if pos:line="181" pos:column="21">if <condition pos:line="181" pos:column="24">(<expr><operator pos:line="181" pos:column="25">!<pos:position pos:line="181" pos:column="26"/></operator><name pos:line="181" pos:column="26">override<pos:position pos:line="181" pos:column="34"/></name></expr>)<pos:position pos:line="181" pos:column="35"/></condition><then pos:line="181" pos:column="35"> <block pos:line="181" pos:column="36">{
                        <expr_stmt><expr><call><name pos:line="182" pos:column="25">ap_set_content_type<pos:position pos:line="182" pos:column="44"/></name><argument_list pos:line="182" pos:column="44">(<argument><expr><name pos:line="182" pos:column="45">r<pos:position pos:line="182" pos:column="46"/></name></expr></argument>,
                                            <argument><expr><call><name pos:line="183" pos:column="45">apr_pstrcat<pos:position pos:line="183" pos:column="56"/></name><argument_list pos:line="183" pos:column="56">(<argument><expr><name><name pos:line="183" pos:column="57">r<pos:position pos:line="183" pos:column="58"/></name><operator pos:line="183" pos:column="58">-&gt;<pos:position pos:line="183" pos:column="63"/></operator><name pos:line="183" pos:column="60">pool<pos:position pos:line="183" pos:column="64"/></name></name></expr></argument>,
                                                        <argument><expr><name><name pos:line="184" pos:column="57">r<pos:position pos:line="184" pos:column="58"/></name><operator pos:line="184" pos:column="58">-&gt;<pos:position pos:line="184" pos:column="63"/></operator><name pos:line="184" pos:column="60">content_type<pos:position pos:line="184" pos:column="72"/></name></name></expr></argument>,
                                                        <argument><expr><literal type="string" pos:line="185" pos:column="57">"; charset="<pos:position pos:line="185" pos:column="69"/></literal></expr></argument>,
                                                        <argument><expr><name pos:line="186" pos:column="57">charset<pos:position pos:line="186" pos:column="64"/></name></expr></argument>,
                                                        <argument><expr><name pos:line="187" pos:column="57">NULL<pos:position pos:line="187" pos:column="61"/></name></expr></argument>)<pos:position pos:line="187" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="187" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="64"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="188" pos:column="25">override<pos:position pos:line="188" pos:column="33"/></name> <operator pos:line="188" pos:column="34">=<pos:position pos:line="188" pos:column="35"/></operator> <literal type="number" pos:line="188" pos:column="36">1<pos:position pos:line="188" pos:column="37"/></literal></expr>;<pos:position pos:line="188" pos:column="38"/></expr_stmt>
                    }<pos:position pos:line="189" pos:column="22"/></block></then></if>
                }<pos:position pos:line="190" pos:column="18"/></block></then>
                <else pos:line="191" pos:column="17">else <block pos:line="191" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="192" pos:column="21">ap_set_content_type<pos:position pos:line="192" pos:column="40"/></name><argument_list pos:line="192" pos:column="40">(<argument><expr><name pos:line="192" pos:column="41">r<pos:position pos:line="192" pos:column="42"/></name></expr></argument>,
                                        <argument><expr><call><name pos:line="193" pos:column="41">apr_pstrcat<pos:position pos:line="193" pos:column="52"/></name><argument_list pos:line="193" pos:column="52">(<argument><expr><name><name pos:line="193" pos:column="53">r<pos:position pos:line="193" pos:column="54"/></name><operator pos:line="193" pos:column="54">-&gt;<pos:position pos:line="193" pos:column="59"/></operator><name pos:line="193" pos:column="56">pool<pos:position pos:line="193" pos:column="60"/></name></name></expr></argument>,
                                                    <argument><expr><name><name pos:line="194" pos:column="53">r<pos:position pos:line="194" pos:column="54"/></name><operator pos:line="194" pos:column="54">-&gt;<pos:position pos:line="194" pos:column="59"/></operator><name pos:line="194" pos:column="56">content_type<pos:position pos:line="194" pos:column="68"/></name></name></expr></argument>,
                                                    <argument><expr><literal type="string" pos:line="195" pos:column="53">"; "<pos:position pos:line="195" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="195" pos:column="59">pp<pos:position pos:line="195" pos:column="61"/></name><operator pos:line="195" pos:column="61">-&gt;<pos:position pos:line="195" pos:column="66"/></operator><name pos:line="195" pos:column="63">attr<pos:position pos:line="195" pos:column="67"/></name></name></expr></argument>,
                                                    <argument><expr><literal type="string" pos:line="196" pos:column="53">"="<pos:position pos:line="196" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="196" pos:column="58">pp<pos:position pos:line="196" pos:column="60"/></name><operator pos:line="196" pos:column="60">-&gt;<pos:position pos:line="196" pos:column="65"/></operator><name pos:line="196" pos:column="62">val<pos:position pos:line="196" pos:column="65"/></name></name></expr></argument>,
                                                    <argument><expr><name pos:line="197" pos:column="53">NULL<pos:position pos:line="197" pos:column="57"/></name></expr></argument>)<pos:position pos:line="197" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="197" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="60"/></expr_stmt>
                }<pos:position pos:line="198" pos:column="18"/></block></else></if>
                <expr_stmt><expr><name pos:line="199" pos:column="17">pp<pos:position pos:line="199" pos:column="19"/></name> <operator pos:line="199" pos:column="20">=<pos:position pos:line="199" pos:column="21"/></operator> <name><name pos:line="199" pos:column="22">pp<pos:position pos:line="199" pos:column="24"/></name><operator pos:line="199" pos:column="24">-&gt;<pos:position pos:line="199" pos:column="29"/></operator><name pos:line="199" pos:column="26">next<pos:position pos:line="199" pos:column="30"/></name></name></expr>;<pos:position pos:line="199" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="200" pos:column="14"/></block></while>
            <if pos:line="201" pos:column="13">if <condition pos:line="201" pos:column="16">(<expr><name pos:line="201" pos:column="17">charset<pos:position pos:line="201" pos:column="24"/></name> <operator pos:line="201" pos:column="25">&amp;&amp;<pos:position pos:line="201" pos:column="35"/></operator> <operator pos:line="201" pos:column="28">!<pos:position pos:line="201" pos:column="29"/></operator><name pos:line="201" pos:column="29">override<pos:position pos:line="201" pos:column="37"/></name></expr>)<pos:position pos:line="201" pos:column="38"/></condition><then pos:line="201" pos:column="38"> <block pos:line="201" pos:column="39">{
                <expr_stmt><expr><call><name pos:line="202" pos:column="17">ap_set_content_type<pos:position pos:line="202" pos:column="36"/></name><argument_list pos:line="202" pos:column="36">(<argument><expr><name pos:line="202" pos:column="37">r<pos:position pos:line="202" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="202" pos:column="40">apr_pstrcat<pos:position pos:line="202" pos:column="51"/></name><argument_list pos:line="202" pos:column="51">(<argument><expr><name><name pos:line="202" pos:column="52">r<pos:position pos:line="202" pos:column="53"/></name><operator pos:line="202" pos:column="53">-&gt;<pos:position pos:line="202" pos:column="58"/></operator><name pos:line="202" pos:column="55">pool<pos:position pos:line="202" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="202" pos:column="61">r<pos:position pos:line="202" pos:column="62"/></name><operator pos:line="202" pos:column="62">-&gt;<pos:position pos:line="202" pos:column="67"/></operator><name pos:line="202" pos:column="64">content_type<pos:position pos:line="202" pos:column="76"/></name></name></expr></argument>,
                                                   <argument><expr><literal type="string" pos:line="203" pos:column="52">"; charset="<pos:position pos:line="203" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="203" pos:column="66">charset<pos:position pos:line="203" pos:column="73"/></name></expr></argument>,
                                                   <argument><expr><name pos:line="204" pos:column="52">NULL<pos:position pos:line="204" pos:column="56"/></name></expr></argument>)<pos:position pos:line="204" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="204" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="205" pos:column="14"/></block></then></if>
        }<pos:position pos:line="206" pos:column="10"/></block></then></if>
    }<pos:position pos:line="207" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="209" pos:column="5">/* Set default language, if none was specified by the extensions
     * and we have a DefaultLanguage setting in force
     */</comment>

    <if pos:line="213" pos:column="5">if <condition pos:line="213" pos:column="8">(<expr><operator pos:line="213" pos:column="9">!<pos:position pos:line="213" pos:column="10"/></operator><name><name pos:line="213" pos:column="10">r<pos:position pos:line="213" pos:column="11"/></name><operator pos:line="213" pos:column="11">-&gt;<pos:position pos:line="213" pos:column="16"/></operator><name pos:line="213" pos:column="13">content_languages<pos:position pos:line="213" pos:column="30"/></name></name> <operator pos:line="213" pos:column="31">&amp;&amp;<pos:position pos:line="213" pos:column="41"/></operator> <name><name pos:line="213" pos:column="34">conf<pos:position pos:line="213" pos:column="38"/></name><operator pos:line="213" pos:column="38">-&gt;<pos:position pos:line="213" pos:column="43"/></operator><name pos:line="213" pos:column="40">default_language<pos:position pos:line="213" pos:column="56"/></name></name></expr>)<pos:position pos:line="213" pos:column="57"/></condition><then pos:line="213" pos:column="57"> <block pos:line="213" pos:column="58">{
        <expr_stmt><expr><specifier pos:line="214" pos:column="9">const<pos:position pos:line="214" pos:column="14"/></specifier> <name pos:line="214" pos:column="15">char<pos:position pos:line="214" pos:column="19"/></name> <operator pos:line="214" pos:column="20">*<pos:position pos:line="214" pos:column="21"/></operator><operator pos:line="214" pos:column="21">*<pos:position pos:line="214" pos:column="22"/></operator><operator pos:line="214" pos:column="22">new<pos:position pos:line="214" pos:column="25"/></operator></expr>;<pos:position pos:line="214" pos:column="26"/></expr_stmt>

        <if pos:line="216" pos:column="9">if <condition pos:line="216" pos:column="12">(<expr><operator pos:line="216" pos:column="13">!<pos:position pos:line="216" pos:column="14"/></operator><name><name pos:line="216" pos:column="14">r<pos:position pos:line="216" pos:column="15"/></name><operator pos:line="216" pos:column="15">-&gt;<pos:position pos:line="216" pos:column="20"/></operator><name pos:line="216" pos:column="17">content_languages<pos:position pos:line="216" pos:column="34"/></name></name></expr>)<pos:position pos:line="216" pos:column="35"/></condition><then pos:line="216" pos:column="35"> <block pos:line="216" pos:column="36">{
            <expr_stmt><expr><name><name pos:line="217" pos:column="13">r<pos:position pos:line="217" pos:column="14"/></name><operator pos:line="217" pos:column="14">-&gt;<pos:position pos:line="217" pos:column="19"/></operator><name pos:line="217" pos:column="16">content_languages<pos:position pos:line="217" pos:column="33"/></name></name> <operator pos:line="217" pos:column="34">=<pos:position pos:line="217" pos:column="35"/></operator> <call><name pos:line="217" pos:column="36">apr_array_make<pos:position pos:line="217" pos:column="50"/></name><argument_list pos:line="217" pos:column="50">(<argument><expr><name><name pos:line="217" pos:column="51">r<pos:position pos:line="217" pos:column="52"/></name><operator pos:line="217" pos:column="52">-&gt;<pos:position pos:line="217" pos:column="57"/></operator><name pos:line="217" pos:column="54">pool<pos:position pos:line="217" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="217" pos:column="60">2<pos:position pos:line="217" pos:column="61"/></literal></expr></argument>, <argument><expr><sizeof pos:line="217" pos:column="63">sizeof<argument_list pos:line="217" pos:column="69">(<argument><expr><name pos:line="217" pos:column="70">char<pos:position pos:line="217" pos:column="74"/></name> <operator pos:line="217" pos:column="75">*<pos:position pos:line="217" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="217" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="217" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="218" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="219" pos:column="9">new<pos:position pos:line="219" pos:column="12"/></operator> <operator pos:line="219" pos:column="13">=<pos:position pos:line="219" pos:column="14"/></operator> <operator pos:line="219" pos:column="15">(<pos:position pos:line="219" pos:column="16"/></operator><specifier pos:line="219" pos:column="16">const<pos:position pos:line="219" pos:column="21"/></specifier> <name pos:line="219" pos:column="22">char<pos:position pos:line="219" pos:column="26"/></name> <operator pos:line="219" pos:column="27">*<pos:position pos:line="219" pos:column="28"/></operator><operator pos:line="219" pos:column="28">*<pos:position pos:line="219" pos:column="29"/></operator><operator pos:line="219" pos:column="29">)<pos:position pos:line="219" pos:column="30"/></operator><call><name pos:line="219" pos:column="30">apr_array_push<pos:position pos:line="219" pos:column="44"/></name><argument_list pos:line="219" pos:column="44">(<argument><expr><name><name pos:line="219" pos:column="45">r<pos:position pos:line="219" pos:column="46"/></name><operator pos:line="219" pos:column="46">-&gt;<pos:position pos:line="219" pos:column="51"/></operator><name pos:line="219" pos:column="48">content_languages<pos:position pos:line="219" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="219" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="220" pos:column="9">*<pos:position pos:line="220" pos:column="10"/></operator><operator pos:line="220" pos:column="10">new<pos:position pos:line="220" pos:column="13"/></operator> <operator pos:line="220" pos:column="14">=<pos:position pos:line="220" pos:column="15"/></operator> <name><name pos:line="220" pos:column="16">conf<pos:position pos:line="220" pos:column="20"/></name><operator pos:line="220" pos:column="20">-&gt;<pos:position pos:line="220" pos:column="25"/></operator><name pos:line="220" pos:column="22">default_language<pos:position pos:line="220" pos:column="38"/></name></name></expr>;<pos:position pos:line="220" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="221" pos:column="6"/></block></then></if>

    <if pos:line="223" pos:column="5">if <condition pos:line="223" pos:column="8">(<expr><operator pos:line="223" pos:column="9">!<pos:position pos:line="223" pos:column="10"/></operator><name><name pos:line="223" pos:column="10">r<pos:position pos:line="223" pos:column="11"/></name><operator pos:line="223" pos:column="11">-&gt;<pos:position pos:line="223" pos:column="16"/></operator><name pos:line="223" pos:column="13">content_type<pos:position pos:line="223" pos:column="25"/></name></name></expr>)<pos:position pos:line="223" pos:column="26"/></condition><then pos:line="223" pos:column="26"> <block pos:line="223" pos:column="27">{
        <return pos:line="224" pos:column="9">return <expr><name pos:line="224" pos:column="16">DECLINED<pos:position pos:line="224" pos:column="24"/></name></expr>;<pos:position pos:line="224" pos:column="25"/></return>
    }<pos:position pos:line="225" pos:column="6"/></block></then></if>

    <return pos:line="227" pos:column="5">return <expr><name pos:line="227" pos:column="12">OK<pos:position pos:line="227" pos:column="14"/></name></expr>;<pos:position pos:line="227" pos:column="15"/></return>
}<pos:position pos:line="228" pos:column="2"/></block></function></unit>

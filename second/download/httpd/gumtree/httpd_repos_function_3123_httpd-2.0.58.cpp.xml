<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3123_httpd-2.0.58.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_socket_recvfrom<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">apr_sockaddr_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">from<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">apr_socket_t<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">sock<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">apr_int32_t<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">flags<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">buf<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, 
                                 <parameter><decl><type><name pos:line="3" pos:column="34">apr_size_t<pos:position pos:line="3" pos:column="44"/></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">len<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="50"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_ssize_t<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">rv<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

    <do pos:line="7" pos:column="5">do <block pos:line="7" pos:column="8">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">rv<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">recvfrom<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name><name pos:line="8" pos:column="23">sock<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">socketdes<pos:position pos:line="8" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="40">buf<pos:position pos:line="8" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="45">(<pos:position pos:line="8" pos:column="46"/></operator><operator pos:line="8" pos:column="46">*<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="47">len<pos:position pos:line="8" pos:column="50"/></name><operator pos:line="8" pos:column="50">)<pos:position pos:line="8" pos:column="51"/></operator></expr></argument>, <argument><expr><name pos:line="8" pos:column="53">flags<pos:position pos:line="8" pos:column="58"/></name></expr></argument>, 
                      <argument><expr><operator pos:line="9" pos:column="23">(<pos:position pos:line="9" pos:column="24"/></operator>struct <name pos:line="9" pos:column="31">sockaddr<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">*<pos:position pos:line="9" pos:column="40"/></operator><operator pos:line="9" pos:column="40">)<pos:position pos:line="9" pos:column="41"/></operator><operator pos:line="9" pos:column="41">&amp;<pos:position pos:line="9" pos:column="46"/></operator><name><name pos:line="9" pos:column="42">from<pos:position pos:line="9" pos:column="46"/></name><operator pos:line="9" pos:column="46">-&gt;<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="48">sa<pos:position pos:line="9" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="52">&amp;<pos:position pos:line="9" pos:column="57"/></operator><name><name pos:line="9" pos:column="53">from<pos:position pos:line="9" pos:column="57"/></name><operator pos:line="9" pos:column="57">-&gt;<pos:position pos:line="9" pos:column="62"/></operator><name pos:line="9" pos:column="59">salen<pos:position pos:line="9" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block> while <condition pos:line="10" pos:column="13">(<expr><name pos:line="10" pos:column="14">rv<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">==<pos:position pos:line="10" pos:column="19"/></operator> <operator pos:line="10" pos:column="20">-<pos:position pos:line="10" pos:column="21"/></operator><literal type="number" pos:line="10" pos:column="21">1<pos:position pos:line="10" pos:column="22"/></literal> <operator pos:line="10" pos:column="23">&amp;&amp;<pos:position pos:line="10" pos:column="33"/></operator> <name pos:line="10" pos:column="26">errno<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">==<pos:position pos:line="10" pos:column="34"/></operator> <name pos:line="10" pos:column="35">EINTR<pos:position pos:line="10" pos:column="40"/></name></expr>)<pos:position pos:line="10" pos:column="41"/></condition>;<pos:position pos:line="10" pos:column="42"/></do>

    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><name pos:line="12" pos:column="12">rv<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">==<pos:position pos:line="12" pos:column="17"/></operator> <operator pos:line="12" pos:column="18">-<pos:position pos:line="12" pos:column="19"/></operator><literal type="number" pos:line="12" pos:column="19">1<pos:position pos:line="12" pos:column="20"/></literal> <operator pos:line="12" pos:column="21">&amp;&amp;<pos:position pos:line="12" pos:column="31"/></operator> <operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">errno<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">==<pos:position pos:line="12" pos:column="33"/></operator> <name pos:line="12" pos:column="34">EAGAIN<pos:position pos:line="12" pos:column="40"/></name> <operator pos:line="12" pos:column="41">||<pos:position pos:line="12" pos:column="43"/></operator> <name pos:line="12" pos:column="44">errno<pos:position pos:line="12" pos:column="49"/></name> <operator pos:line="12" pos:column="50">==<pos:position pos:line="12" pos:column="52"/></operator> <name pos:line="12" pos:column="53">EWOULDBLOCK<pos:position pos:line="12" pos:column="64"/></name><operator pos:line="12" pos:column="64">)<pos:position pos:line="12" pos:column="65"/></operator> <operator pos:line="12" pos:column="66">&amp;&amp;<pos:position pos:line="12" pos:column="76"/></operator>
        <call><name pos:line="13" pos:column="9">apr_is_option_set<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name><name pos:line="13" pos:column="27">sock<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">netmask<pos:position pos:line="13" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="42">APR_SO_TIMEOUT<pos:position pos:line="13" pos:column="56"/></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="58"/></condition> <block pos:line="13" pos:column="59">{
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">apr_status_t<pos:position pos:line="14" pos:column="21"/></name></type> <name pos:line="14" pos:column="22">arv<pos:position pos:line="14" pos:column="25"/></name> <init pos:line="14" pos:column="26">= <expr><call><name pos:line="14" pos:column="28">apr_wait_for_io_or_timeout<pos:position pos:line="14" pos:column="54"/></name><argument_list pos:line="14" pos:column="54">(<argument><expr><name pos:line="14" pos:column="55">NULL<pos:position pos:line="14" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="61">sock<pos:position pos:line="14" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="67">1<pos:position pos:line="14" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="70"/></decl_stmt>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">arv<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">!=<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">APR_SUCCESS<pos:position pos:line="15" pos:column="31"/></name></expr>)<pos:position pos:line="15" pos:column="32"/></condition><then pos:line="15" pos:column="32"> <block pos:line="15" pos:column="33">{
            <expr_stmt><expr><operator pos:line="16" pos:column="13">*<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">len<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <literal type="number" pos:line="16" pos:column="20">0<pos:position pos:line="16" pos:column="21"/></literal></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
            <return pos:line="17" pos:column="13">return <expr><name pos:line="17" pos:column="20">arv<pos:position pos:line="17" pos:column="23"/></name></expr>;<pos:position pos:line="17" pos:column="24"/></return>
        }<pos:position pos:line="18" pos:column="10"/></block></then> <else pos:line="18" pos:column="11">else <block pos:line="18" pos:column="16">{
            <do pos:line="19" pos:column="13">do <block pos:line="19" pos:column="16">{
                <expr_stmt><expr><name pos:line="20" pos:column="17">rv<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <call><name pos:line="20" pos:column="22">recvfrom<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name><name pos:line="20" pos:column="31">sock<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">-&gt;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="37">socketdes<pos:position pos:line="20" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="48">buf<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="53">(<pos:position pos:line="20" pos:column="54"/></operator><operator pos:line="20" pos:column="54">*<pos:position pos:line="20" pos:column="55"/></operator><name pos:line="20" pos:column="55">len<pos:position pos:line="20" pos:column="58"/></name><operator pos:line="20" pos:column="58">)<pos:position pos:line="20" pos:column="59"/></operator></expr></argument>, <argument><expr><name pos:line="20" pos:column="61">flags<pos:position pos:line="20" pos:column="66"/></name></expr></argument>,
                              <argument><expr><operator pos:line="21" pos:column="31">(<pos:position pos:line="21" pos:column="32"/></operator>struct <name pos:line="21" pos:column="39">sockaddr<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">*<pos:position pos:line="21" pos:column="48"/></operator><operator pos:line="21" pos:column="48">)<pos:position pos:line="21" pos:column="49"/></operator><operator pos:line="21" pos:column="49">&amp;<pos:position pos:line="21" pos:column="54"/></operator><name><name pos:line="21" pos:column="50">from<pos:position pos:line="21" pos:column="54"/></name><operator pos:line="21" pos:column="54">-&gt;<pos:position pos:line="21" pos:column="59"/></operator><name pos:line="21" pos:column="56">sa<pos:position pos:line="21" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="60">&amp;<pos:position pos:line="21" pos:column="65"/></operator><name><name pos:line="21" pos:column="61">from<pos:position pos:line="21" pos:column="65"/></name><operator pos:line="21" pos:column="65">-&gt;<pos:position pos:line="21" pos:column="70"/></operator><name pos:line="21" pos:column="67">salen<pos:position pos:line="21" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="74"/></expr_stmt>
            }<pos:position pos:line="22" pos:column="14"/></block> while <condition pos:line="22" pos:column="21">(<expr><name pos:line="22" pos:column="22">rv<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">==<pos:position pos:line="22" pos:column="27"/></operator> <operator pos:line="22" pos:column="28">-<pos:position pos:line="22" pos:column="29"/></operator><literal type="number" pos:line="22" pos:column="29">1<pos:position pos:line="22" pos:column="30"/></literal> <operator pos:line="22" pos:column="31">&amp;&amp;<pos:position pos:line="22" pos:column="41"/></operator> <name pos:line="22" pos:column="34">errno<pos:position pos:line="22" pos:column="39"/></name> <operator pos:line="22" pos:column="40">==<pos:position pos:line="22" pos:column="42"/></operator> <name pos:line="22" pos:column="43">EINTR<pos:position pos:line="22" pos:column="48"/></name></expr>)<pos:position pos:line="22" pos:column="49"/></condition>;<pos:position pos:line="22" pos:column="50"/></do>
        }<pos:position pos:line="23" pos:column="10"/></block></else></if>
    }<pos:position pos:line="24" pos:column="6"/></block></while>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">rv<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">==<pos:position pos:line="25" pos:column="14"/></operator> <operator pos:line="25" pos:column="15">-<pos:position pos:line="25" pos:column="16"/></operator><literal type="number" pos:line="25" pos:column="16">1<pos:position pos:line="25" pos:column="17"/></literal></expr>)<pos:position pos:line="25" pos:column="18"/></condition><then pos:line="25" pos:column="18"> <block pos:line="25" pos:column="19">{
        <expr_stmt><expr><operator pos:line="26" pos:column="9">(<pos:position pos:line="26" pos:column="10"/></operator><operator pos:line="26" pos:column="10">*<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">len<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">)<pos:position pos:line="26" pos:column="15"/></operator> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <literal type="number" pos:line="26" pos:column="18">0<pos:position pos:line="26" pos:column="19"/></literal></expr>;<pos:position pos:line="26" pos:column="20"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">errno<pos:position pos:line="27" pos:column="21"/></name></expr>;<pos:position pos:line="27" pos:column="22"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="30" pos:column="5">(<pos:position pos:line="30" pos:column="6"/></operator><operator pos:line="30" pos:column="6">*<pos:position pos:line="30" pos:column="7"/></operator><name pos:line="30" pos:column="7">len<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">)<pos:position pos:line="30" pos:column="11"/></operator> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <name pos:line="30" pos:column="14">rv<pos:position pos:line="30" pos:column="16"/></name></expr>;<pos:position pos:line="30" pos:column="17"/></expr_stmt>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">rv<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">==<pos:position pos:line="31" pos:column="14"/></operator> <literal type="number" pos:line="31" pos:column="15">0<pos:position pos:line="31" pos:column="16"/></literal> <operator pos:line="31" pos:column="17">&amp;&amp;<pos:position pos:line="31" pos:column="27"/></operator> <name><name pos:line="31" pos:column="20">sock<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">type<pos:position pos:line="31" pos:column="30"/></name></name> <operator pos:line="31" pos:column="31">==<pos:position pos:line="31" pos:column="33"/></operator> <name pos:line="31" pos:column="34">SOCK_STREAM<pos:position pos:line="31" pos:column="45"/></name></expr>)<pos:position pos:line="31" pos:column="46"/></condition><then pos:line="31" pos:column="46"> <block pos:line="31" pos:column="47">{
        <return pos:line="32" pos:column="9">return <expr><name pos:line="32" pos:column="16">APR_EOF<pos:position pos:line="32" pos:column="23"/></name></expr>;<pos:position pos:line="32" pos:column="24"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <return pos:line="35" pos:column="5">return <expr><name pos:line="35" pos:column="12">APR_SUCCESS<pos:position pos:line="35" pos:column="23"/></name></expr>;<pos:position pos:line="35" pos:column="24"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

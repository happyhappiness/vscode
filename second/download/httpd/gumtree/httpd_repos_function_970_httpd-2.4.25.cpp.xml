<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_970_httpd-2.4.25.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">ssl_var_lookup_ssl_compress_meth<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name pos:line="1" pos:column="47">SSL<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">ssl<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">result<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><literal type="string" pos:line="3" pos:column="20">"NULL"<pos:position pos:line="3" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
<cpp:ifndef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifndef<pos:position pos:line="4" pos:column="8"/></cpp:directive> <name pos:line="4" pos:column="9">OPENSSL_NO_COMP<pos:position pos:line="4" pos:column="24"/></name></cpp:ifndef>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SSL_SESSION<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">pSession<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><call><name pos:line="5" pos:column="29">SSL_get_session<pos:position pos:line="5" pos:column="44"/></name><argument_list pos:line="5" pos:column="44">(<argument><expr><name pos:line="5" pos:column="45">ssl<pos:position pos:line="5" pos:column="48"/></name></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="50"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">pSession<pos:position pos:line="7" pos:column="17"/></name></expr>)<pos:position pos:line="7" pos:column="18"/></condition><then pos:line="7" pos:column="18"> <block pos:line="7" pos:column="19">{
<cpp:ifdef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifdef<pos:position pos:line="8" pos:column="7"/></cpp:directive> <name pos:line="8" pos:column="8">OPENSSL_NO_SSL_INTERN<pos:position pos:line="8" pos:column="29"/></name></cpp:ifdef>
        <switch pos:line="9" pos:column="9">switch <condition pos:line="9" pos:column="16">(<expr><call><name pos:line="9" pos:column="17">SSL_SESSION_get_compress_id<pos:position pos:line="9" pos:column="44"/></name><argument_list pos:line="9" pos:column="44">(<argument><expr><name pos:line="9" pos:column="45">pSession<pos:position pos:line="9" pos:column="53"/></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="55"/></condition> <block pos:line="9" pos:column="56">{
<cpp:else pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">else<pos:position pos:line="10" pos:column="6"/></cpp:directive></cpp:else>
        <switch pos:line="11" pos:column="9">switch <condition pos:line="11" pos:column="16">(<expr><name><name pos:line="11" pos:column="17">pSession<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">compress_meth<pos:position pos:line="11" pos:column="40"/></name></name></expr>)<pos:position pos:line="11" pos:column="41"/></condition> <block pos:line="11" pos:column="42">{
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
        <case pos:line="13" pos:column="9">case <expr><literal type="number" pos:line="13" pos:column="14">0<pos:position pos:line="13" pos:column="15"/></literal></expr>:<pos:position pos:line="13" pos:column="16"/></case>
            <comment type="block" pos:line="14" pos:column="13">/* default "NULL" already set */</comment>
            <break pos:line="15" pos:column="13">break;<pos:position pos:line="15" pos:column="19"/></break>

            <comment type="block" pos:line="17" pos:column="13">/* Defined by RFC 3749, deflate is coded by "1" */</comment>
        <case pos:line="18" pos:column="9">case <expr><literal type="number" pos:line="18" pos:column="14">1<pos:position pos:line="18" pos:column="15"/></literal></expr>:<pos:position pos:line="18" pos:column="16"/></case>
            <expr_stmt><expr><name pos:line="19" pos:column="13">result<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <literal type="string" pos:line="19" pos:column="22">"DEFLATE"<pos:position pos:line="19" pos:column="31"/></literal></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>
            <break pos:line="20" pos:column="13">break;<pos:position pos:line="20" pos:column="19"/></break>

            <comment type="block" pos:line="22" pos:column="13">/* IANA assigned compression number for LZS */</comment>
        <case pos:line="23" pos:column="9">case <expr><literal type="number" pos:line="23" pos:column="14">0x40<pos:position pos:line="23" pos:column="18"/></literal></expr>:<pos:position pos:line="23" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="24" pos:column="13">result<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <literal type="string" pos:line="24" pos:column="22">"LZS"<pos:position pos:line="24" pos:column="27"/></literal></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
            <break pos:line="25" pos:column="13">break;<pos:position pos:line="25" pos:column="19"/></break>

        <default pos:line="27" pos:column="9">default:<pos:position pos:line="27" pos:column="17"/></default>
            <expr_stmt><expr><name pos:line="28" pos:column="13">result<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <literal type="string" pos:line="28" pos:column="22">"UNKNOWN"<pos:position pos:line="28" pos:column="31"/></literal></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt>
            <break pos:line="29" pos:column="13">break;<pos:position pos:line="29" pos:column="19"/></break>
        }<pos:position pos:line="30" pos:column="10"/></block></switch>
    }<pos:position pos:line="31" pos:column="6"/></block></switch>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="33" pos:column="5">return <expr><name pos:line="33" pos:column="12">result<pos:position pos:line="33" pos:column="18"/></name></expr>;<pos:position pos:line="33" pos:column="19"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></then></if>

<comment type="block" pos:line="36" pos:column="1">/*  _________________________________________________________________
**
**  SSL Extension to mod_log_config
**  _________________________________________________________________
*/</comment>

<cpp:include pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">include<pos:position pos:line="42" pos:column="9"/></cpp:directive> <cpp:file pos:line="42" pos:column="10">"../../modules/loggers/mod_log_config.h"<pos:position pos:line="42" pos:column="50"/></cpp:file></cpp:include>

<decl_stmt><decl><specifier pos:line="44" pos:column="1">static<pos:position pos:line="44" pos:column="7"/></specifier> <type><specifier pos:line="44" pos:column="8">const<pos:position pos:line="44" pos:column="13"/></specifier> <name pos:line="44" pos:column="14">char<pos:position pos:line="44" pos:column="18"/></name> <modifier pos:line="44" pos:column="19">*<pos:position pos:line="44" pos:column="20"/></modifier></type><name pos:line="44" pos:column="20">ssl_var_log_handler_c<pos:position pos:line="44" pos:column="41"/></name><argument_list pos:line="44" pos:column="41">(<argument><expr><name pos:line="44" pos:column="42">request_rec<pos:position pos:line="44" pos:column="53"/></name> <operator pos:line="44" pos:column="54">*<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="55">r<pos:position pos:line="44" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="58">char<pos:position pos:line="44" pos:column="62"/></name> <operator pos:line="44" pos:column="63">*<pos:position pos:line="44" pos:column="64"/></operator><name pos:line="44" pos:column="64">a<pos:position pos:line="44" pos:column="65"/></name></expr></argument>)<pos:position pos:line="44" pos:column="66"/></argument_list></decl>;<pos:position pos:line="44" pos:column="67"/></decl_stmt>
<decl_stmt><decl><specifier pos:line="45" pos:column="1">static<pos:position pos:line="45" pos:column="7"/></specifier> <type><specifier pos:line="45" pos:column="8">const<pos:position pos:line="45" pos:column="13"/></specifier> <name pos:line="45" pos:column="14">char<pos:position pos:line="45" pos:column="18"/></name> <modifier pos:line="45" pos:column="19">*<pos:position pos:line="45" pos:column="20"/></modifier></type><name pos:line="45" pos:column="20">ssl_var_log_handler_x<pos:position pos:line="45" pos:column="41"/></name><argument_list pos:line="45" pos:column="41">(<argument><expr><name pos:line="45" pos:column="42">request_rec<pos:position pos:line="45" pos:column="53"/></name> <operator pos:line="45" pos:column="54">*<pos:position pos:line="45" pos:column="55"/></operator><name pos:line="45" pos:column="55">r<pos:position pos:line="45" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="58">char<pos:position pos:line="45" pos:column="62"/></name> <operator pos:line="45" pos:column="63">*<pos:position pos:line="45" pos:column="64"/></operator><name pos:line="45" pos:column="64">a<pos:position pos:line="45" pos:column="65"/></name></expr></argument>)<pos:position pos:line="45" pos:column="66"/></argument_list></decl>;<pos:position pos:line="45" pos:column="67"/></decl_stmt>

<comment type="block" pos:line="47" pos:column="1">/*
 * register us for the mod_log_config function registering phase
 * to establish %{...}c and to be able to expand %{...}x variables.
 */</comment>
<function><type><name pos:line="51" pos:column="1">void<pos:position pos:line="51" pos:column="5"/></name></type> <name pos:line="51" pos:column="6">ssl_var_log_config_register<pos:position pos:line="51" pos:column="33"/></name><parameter_list pos:line="51" pos:column="33">(<parameter><decl><type><name pos:line="51" pos:column="34">apr_pool_t<pos:position pos:line="51" pos:column="44"/></name> <modifier pos:line="51" pos:column="45">*<pos:position pos:line="51" pos:column="46"/></modifier></type><name pos:line="51" pos:column="46">p<pos:position pos:line="51" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="51" pos:column="48"/></parameter_list>
<block pos:line="52" pos:column="1">{
    <expr_stmt><expr><specifier pos:line="53" pos:column="5">static<pos:position pos:line="53" pos:column="11"/></specifier> <call><name pos:line="53" pos:column="12">APR_OPTIONAL_FN_TYPE<pos:position pos:line="53" pos:column="32"/></name><argument_list pos:line="53" pos:column="32">(<argument><expr><name pos:line="53" pos:column="33">ap_register_log_handler<pos:position pos:line="53" pos:column="56"/></name></expr></argument>)<pos:position pos:line="53" pos:column="57"/></argument_list></call> <operator pos:line="53" pos:column="58">*<pos:position pos:line="53" pos:column="59"/></operator><name pos:line="53" pos:column="59">log_pfn_register<pos:position pos:line="53" pos:column="75"/></name></expr>;<pos:position pos:line="53" pos:column="76"/></expr_stmt>

    <expr_stmt><expr><name pos:line="55" pos:column="5">log_pfn_register<pos:position pos:line="55" pos:column="21"/></name> <operator pos:line="55" pos:column="22">=<pos:position pos:line="55" pos:column="23"/></operator> <call><name pos:line="55" pos:column="24">APR_RETRIEVE_OPTIONAL_FN<pos:position pos:line="55" pos:column="48"/></name><argument_list pos:line="55" pos:column="48">(<argument><expr><name pos:line="55" pos:column="49">ap_register_log_handler<pos:position pos:line="55" pos:column="72"/></name></expr></argument>)<pos:position pos:line="55" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="74"/></expr_stmt>

    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name pos:line="57" pos:column="9">log_pfn_register<pos:position pos:line="57" pos:column="25"/></name></expr>)<pos:position pos:line="57" pos:column="26"/></condition><then pos:line="57" pos:column="26"> <block pos:line="57" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">log_pfn_register<pos:position pos:line="58" pos:column="25"/></name><argument_list pos:line="58" pos:column="25">(<argument><expr><name pos:line="58" pos:column="26">p<pos:position pos:line="58" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="29">"c"<pos:position pos:line="58" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="34">ssl_var_log_handler_c<pos:position pos:line="58" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="57">0<pos:position pos:line="58" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">log_pfn_register<pos:position pos:line="59" pos:column="25"/></name><argument_list pos:line="59" pos:column="25">(<argument><expr><name pos:line="59" pos:column="26">p<pos:position pos:line="59" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="29">"x"<pos:position pos:line="59" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="34">ssl_var_log_handler_x<pos:position pos:line="59" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="57">0<pos:position pos:line="59" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>
    <return pos:line="61" pos:column="5">return;<pos:position pos:line="61" pos:column="12"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function>

<comment type="block" pos:line="64" pos:column="1">/*
 * implement the %{..}c log function
 * (we are the only function)
 */</comment>
<function><specifier pos:line="68" pos:column="1">static<pos:position pos:line="68" pos:column="7"/></specifier> <type><specifier pos:line="68" pos:column="8">const<pos:position pos:line="68" pos:column="13"/></specifier> <name pos:line="68" pos:column="14">char<pos:position pos:line="68" pos:column="18"/></name> <modifier pos:line="68" pos:column="19">*<pos:position pos:line="68" pos:column="20"/></modifier></type><name pos:line="68" pos:column="20">ssl_var_log_handler_c<pos:position pos:line="68" pos:column="41"/></name><parameter_list pos:line="68" pos:column="41">(<parameter><decl><type><name pos:line="68" pos:column="42">request_rec<pos:position pos:line="68" pos:column="53"/></name> <modifier pos:line="68" pos:column="54">*<pos:position pos:line="68" pos:column="55"/></modifier></type><name pos:line="68" pos:column="55">r<pos:position pos:line="68" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="68" pos:column="58">char<pos:position pos:line="68" pos:column="62"/></name> <modifier pos:line="68" pos:column="63">*<pos:position pos:line="68" pos:column="64"/></modifier></type><name pos:line="68" pos:column="64">a<pos:position pos:line="68" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="68" pos:column="66"/></parameter_list>
<block pos:line="69" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="70" pos:column="5">SSLConnRec<pos:position pos:line="70" pos:column="15"/></name> <modifier pos:line="70" pos:column="16">*<pos:position pos:line="70" pos:column="17"/></modifier></type><name pos:line="70" pos:column="17">sslconn<pos:position pos:line="70" pos:column="24"/></name> <init pos:line="70" pos:column="25">= <expr><call><name pos:line="70" pos:column="27">ssl_get_effective_config<pos:position pos:line="70" pos:column="51"/></name><argument_list pos:line="70" pos:column="51">(<argument><expr><name><name pos:line="70" pos:column="52">r<pos:position pos:line="70" pos:column="53"/></name><operator pos:line="70" pos:column="53">-&gt;<pos:position pos:line="70" pos:column="58"/></operator><name pos:line="70" pos:column="55">connection<pos:position pos:line="70" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="70" pos:column="67"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="71" pos:column="5">char<pos:position pos:line="71" pos:column="9"/></name> <modifier pos:line="71" pos:column="10">*<pos:position pos:line="71" pos:column="11"/></modifier></type><name pos:line="71" pos:column="11">result<pos:position pos:line="71" pos:column="17"/></name></decl>;<pos:position pos:line="71" pos:column="18"/></decl_stmt>

    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><name pos:line="73" pos:column="9">sslconn<pos:position pos:line="73" pos:column="16"/></name> <operator pos:line="73" pos:column="17">==<pos:position pos:line="73" pos:column="19"/></operator> <name pos:line="73" pos:column="20">NULL<pos:position pos:line="73" pos:column="24"/></name> <operator pos:line="73" pos:column="25">||<pos:position pos:line="73" pos:column="27"/></operator> <name><name pos:line="73" pos:column="28">sslconn<pos:position pos:line="73" pos:column="35"/></name><operator pos:line="73" pos:column="35">-&gt;<pos:position pos:line="73" pos:column="40"/></operator><name pos:line="73" pos:column="37">ssl<pos:position pos:line="73" pos:column="40"/></name></name> <operator pos:line="73" pos:column="41">==<pos:position pos:line="73" pos:column="43"/></operator> <name pos:line="73" pos:column="44">NULL<pos:position pos:line="73" pos:column="48"/></name></expr>)<pos:position pos:line="73" pos:column="49"/></condition><then pos:line="73" pos:column="49">
        <block type="pseudo"><return pos:line="74" pos:column="9">return <expr><name pos:line="74" pos:column="16">NULL<pos:position pos:line="74" pos:column="20"/></name></expr>;<pos:position pos:line="74" pos:column="21"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="75" pos:column="5">result<pos:position pos:line="75" pos:column="11"/></name> <operator pos:line="75" pos:column="12">=<pos:position pos:line="75" pos:column="13"/></operator> <name pos:line="75" pos:column="14">NULL<pos:position pos:line="75" pos:column="18"/></name></expr>;<pos:position pos:line="75" pos:column="19"/></expr_stmt>
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><call><name pos:line="76" pos:column="9">strEQ<pos:position pos:line="76" pos:column="14"/></name><argument_list pos:line="76" pos:column="14">(<argument><expr><name pos:line="76" pos:column="15">a<pos:position pos:line="76" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="18">"version"<pos:position pos:line="76" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="29"/></condition><then pos:line="76" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="9">result<pos:position pos:line="77" pos:column="15"/></name> <operator pos:line="77" pos:column="16">=<pos:position pos:line="77" pos:column="17"/></operator> <call><name pos:line="77" pos:column="18">ssl_var_lookup<pos:position pos:line="77" pos:column="32"/></name><argument_list pos:line="77" pos:column="32">(<argument><expr><name><name pos:line="77" pos:column="33">r<pos:position pos:line="77" pos:column="34"/></name><operator pos:line="77" pos:column="34">-&gt;<pos:position pos:line="77" pos:column="39"/></operator><name pos:line="77" pos:column="36">pool<pos:position pos:line="77" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="42">r<pos:position pos:line="77" pos:column="43"/></name><operator pos:line="77" pos:column="43">-&gt;<pos:position pos:line="77" pos:column="48"/></operator><name pos:line="77" pos:column="45">server<pos:position pos:line="77" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="53">r<pos:position pos:line="77" pos:column="54"/></name><operator pos:line="77" pos:column="54">-&gt;<pos:position pos:line="77" pos:column="59"/></operator><name pos:line="77" pos:column="56">connection<pos:position pos:line="77" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="68">r<pos:position pos:line="77" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="71">"SSL_PROTOCOL"<pos:position pos:line="77" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="87"/></expr_stmt></block></then>
    <elseif pos:line="78" pos:column="5">else <if pos:line="78" pos:column="10">if <condition pos:line="78" pos:column="13">(<expr><call><name pos:line="78" pos:column="14">strEQ<pos:position pos:line="78" pos:column="19"/></name><argument_list pos:line="78" pos:column="19">(<argument><expr><name pos:line="78" pos:column="20">a<pos:position pos:line="78" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="23">"cipher"<pos:position pos:line="78" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="33"/></condition><then pos:line="78" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><name pos:line="79" pos:column="9">result<pos:position pos:line="79" pos:column="15"/></name> <operator pos:line="79" pos:column="16">=<pos:position pos:line="79" pos:column="17"/></operator> <call><name pos:line="79" pos:column="18">ssl_var_lookup<pos:position pos:line="79" pos:column="32"/></name><argument_list pos:line="79" pos:column="32">(<argument><expr><name><name pos:line="79" pos:column="33">r<pos:position pos:line="79" pos:column="34"/></name><operator pos:line="79" pos:column="34">-&gt;<pos:position pos:line="79" pos:column="39"/></operator><name pos:line="79" pos:column="36">pool<pos:position pos:line="79" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="42">r<pos:position pos:line="79" pos:column="43"/></name><operator pos:line="79" pos:column="43">-&gt;<pos:position pos:line="79" pos:column="48"/></operator><name pos:line="79" pos:column="45">server<pos:position pos:line="79" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="53">r<pos:position pos:line="79" pos:column="54"/></name><operator pos:line="79" pos:column="54">-&gt;<pos:position pos:line="79" pos:column="59"/></operator><name pos:line="79" pos:column="56">connection<pos:position pos:line="79" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="68">r<pos:position pos:line="79" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="71">"SSL_CIPHER"<pos:position pos:line="79" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="85"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="80" pos:column="5">else <if pos:line="80" pos:column="10">if <condition pos:line="80" pos:column="13">(<expr><call><name pos:line="80" pos:column="14">strEQ<pos:position pos:line="80" pos:column="19"/></name><argument_list pos:line="80" pos:column="19">(<argument><expr><name pos:line="80" pos:column="20">a<pos:position pos:line="80" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="23">"subjectdn"<pos:position pos:line="80" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="35"/></argument_list></call> <operator pos:line="80" pos:column="36">||<pos:position pos:line="80" pos:column="38"/></operator> <call><name pos:line="80" pos:column="39">strEQ<pos:position pos:line="80" pos:column="44"/></name><argument_list pos:line="80" pos:column="44">(<argument><expr><name pos:line="80" pos:column="45">a<pos:position pos:line="80" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="48">"clientcert"<pos:position pos:line="80" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="62"/></condition><then pos:line="80" pos:column="62">
        <block type="pseudo"><expr_stmt><expr><name pos:line="81" pos:column="9">result<pos:position pos:line="81" pos:column="15"/></name> <operator pos:line="81" pos:column="16">=<pos:position pos:line="81" pos:column="17"/></operator> <call><name pos:line="81" pos:column="18">ssl_var_lookup<pos:position pos:line="81" pos:column="32"/></name><argument_list pos:line="81" pos:column="32">(<argument><expr><name><name pos:line="81" pos:column="33">r<pos:position pos:line="81" pos:column="34"/></name><operator pos:line="81" pos:column="34">-&gt;<pos:position pos:line="81" pos:column="39"/></operator><name pos:line="81" pos:column="36">pool<pos:position pos:line="81" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="42">r<pos:position pos:line="81" pos:column="43"/></name><operator pos:line="81" pos:column="43">-&gt;<pos:position pos:line="81" pos:column="48"/></operator><name pos:line="81" pos:column="45">server<pos:position pos:line="81" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="53">r<pos:position pos:line="81" pos:column="54"/></name><operator pos:line="81" pos:column="54">-&gt;<pos:position pos:line="81" pos:column="59"/></operator><name pos:line="81" pos:column="56">connection<pos:position pos:line="81" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="68">r<pos:position pos:line="81" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="71">"SSL_CLIENT_S_DN"<pos:position pos:line="81" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="90"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="82" pos:column="5">else <if pos:line="82" pos:column="10">if <condition pos:line="82" pos:column="13">(<expr><call><name pos:line="82" pos:column="14">strEQ<pos:position pos:line="82" pos:column="19"/></name><argument_list pos:line="82" pos:column="19">(<argument><expr><name pos:line="82" pos:column="20">a<pos:position pos:line="82" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="23">"issuerdn"<pos:position pos:line="82" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="34"/></argument_list></call> <operator pos:line="82" pos:column="35">||<pos:position pos:line="82" pos:column="37"/></operator> <call><name pos:line="82" pos:column="38">strEQ<pos:position pos:line="82" pos:column="43"/></name><argument_list pos:line="82" pos:column="43">(<argument><expr><name pos:line="82" pos:column="44">a<pos:position pos:line="82" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="47">"cacert"<pos:position pos:line="82" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="57"/></condition><then pos:line="82" pos:column="57">
        <block type="pseudo"><expr_stmt><expr><name pos:line="83" pos:column="9">result<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">=<pos:position pos:line="83" pos:column="17"/></operator> <call><name pos:line="83" pos:column="18">ssl_var_lookup<pos:position pos:line="83" pos:column="32"/></name><argument_list pos:line="83" pos:column="32">(<argument><expr><name><name pos:line="83" pos:column="33">r<pos:position pos:line="83" pos:column="34"/></name><operator pos:line="83" pos:column="34">-&gt;<pos:position pos:line="83" pos:column="39"/></operator><name pos:line="83" pos:column="36">pool<pos:position pos:line="83" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="42">r<pos:position pos:line="83" pos:column="43"/></name><operator pos:line="83" pos:column="43">-&gt;<pos:position pos:line="83" pos:column="48"/></operator><name pos:line="83" pos:column="45">server<pos:position pos:line="83" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="53">r<pos:position pos:line="83" pos:column="54"/></name><operator pos:line="83" pos:column="54">-&gt;<pos:position pos:line="83" pos:column="59"/></operator><name pos:line="83" pos:column="56">connection<pos:position pos:line="83" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="68">r<pos:position pos:line="83" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="71">"SSL_CLIENT_I_DN"<pos:position pos:line="83" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="90"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="84" pos:column="5">else <if pos:line="84" pos:column="10">if <condition pos:line="84" pos:column="13">(<expr><call><name pos:line="84" pos:column="14">strEQ<pos:position pos:line="84" pos:column="19"/></name><argument_list pos:line="84" pos:column="19">(<argument><expr><name pos:line="84" pos:column="20">a<pos:position pos:line="84" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="23">"errcode"<pos:position pos:line="84" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="34"/></condition><then pos:line="84" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><name pos:line="85" pos:column="9">result<pos:position pos:line="85" pos:column="15"/></name> <operator pos:line="85" pos:column="16">=<pos:position pos:line="85" pos:column="17"/></operator> <literal type="string" pos:line="85" pos:column="18">"-"<pos:position pos:line="85" pos:column="21"/></literal></expr>;<pos:position pos:line="85" pos:column="22"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="86" pos:column="5">else <if pos:line="86" pos:column="10">if <condition pos:line="86" pos:column="13">(<expr><call><name pos:line="86" pos:column="14">strEQ<pos:position pos:line="86" pos:column="19"/></name><argument_list pos:line="86" pos:column="19">(<argument><expr><name pos:line="86" pos:column="20">a<pos:position pos:line="86" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="23">"errstr"<pos:position pos:line="86" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="33"/></condition><then pos:line="86" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><name pos:line="87" pos:column="9">result<pos:position pos:line="87" pos:column="15"/></name> <operator pos:line="87" pos:column="16">=<pos:position pos:line="87" pos:column="17"/></operator> <operator pos:line="87" pos:column="18">(<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="19">char<pos:position pos:line="87" pos:column="23"/></name> <operator pos:line="87" pos:column="24">*<pos:position pos:line="87" pos:column="25"/></operator><operator pos:line="87" pos:column="25">)<pos:position pos:line="87" pos:column="26"/></operator><name><name pos:line="87" pos:column="26">sslconn<pos:position pos:line="87" pos:column="33"/></name><operator pos:line="87" pos:column="33">-&gt;<pos:position pos:line="87" pos:column="38"/></operator><name pos:line="87" pos:column="35">verify_error<pos:position pos:line="87" pos:column="47"/></name></name></expr>;<pos:position pos:line="87" pos:column="48"/></expr_stmt></block></then></if></elseif></if>
    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><name pos:line="88" pos:column="9">result<pos:position pos:line="88" pos:column="15"/></name> <operator pos:line="88" pos:column="16">!=<pos:position pos:line="88" pos:column="18"/></operator> <name pos:line="88" pos:column="19">NULL<pos:position pos:line="88" pos:column="23"/></name> <operator pos:line="88" pos:column="24">&amp;&amp;<pos:position pos:line="88" pos:column="34"/></operator> <name><name pos:line="88" pos:column="27">result<pos:position pos:line="88" pos:column="33"/></name><index pos:line="88" pos:column="33">[<expr><literal type="number" pos:line="88" pos:column="34">0<pos:position pos:line="88" pos:column="35"/></literal></expr>]<pos:position pos:line="88" pos:column="36"/></index></name> <operator pos:line="88" pos:column="37">==<pos:position pos:line="88" pos:column="39"/></operator> <name pos:line="88" pos:column="40">NUL<pos:position pos:line="88" pos:column="43"/></name></expr>)<pos:position pos:line="88" pos:column="44"/></condition><then pos:line="88" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><name pos:line="89" pos:column="9">result<pos:position pos:line="89" pos:column="15"/></name> <operator pos:line="89" pos:column="16">=<pos:position pos:line="89" pos:column="17"/></operator> <name pos:line="89" pos:column="18">NULL<pos:position pos:line="89" pos:column="22"/></name></expr>;<pos:position pos:line="89" pos:column="23"/></expr_stmt></block></then></if>
    <return pos:line="90" pos:column="5">return <expr><name pos:line="90" pos:column="12">result<pos:position pos:line="90" pos:column="18"/></name></expr>;<pos:position pos:line="90" pos:column="19"/></return>
}<pos:position pos:line="91" pos:column="2"/></block></function>

<comment type="block" pos:line="93" pos:column="1">/*
 * extend the implementation of the %{..}x log function
 * (there can be more functions)
 */</comment>
<function><specifier pos:line="97" pos:column="1">static<pos:position pos:line="97" pos:column="7"/></specifier> <type><specifier pos:line="97" pos:column="8">const<pos:position pos:line="97" pos:column="13"/></specifier> <name pos:line="97" pos:column="14">char<pos:position pos:line="97" pos:column="18"/></name> <modifier pos:line="97" pos:column="19">*<pos:position pos:line="97" pos:column="20"/></modifier></type><name pos:line="97" pos:column="20">ssl_var_log_handler_x<pos:position pos:line="97" pos:column="41"/></name><parameter_list pos:line="97" pos:column="41">(<parameter><decl><type><name pos:line="97" pos:column="42">request_rec<pos:position pos:line="97" pos:column="53"/></name> <modifier pos:line="97" pos:column="54">*<pos:position pos:line="97" pos:column="55"/></modifier></type><name pos:line="97" pos:column="55">r<pos:position pos:line="97" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="97" pos:column="58">char<pos:position pos:line="97" pos:column="62"/></name> <modifier pos:line="97" pos:column="63">*<pos:position pos:line="97" pos:column="64"/></modifier></type><name pos:line="97" pos:column="64">a<pos:position pos:line="97" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="97" pos:column="66"/></parameter_list>
<block pos:line="98" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="99" pos:column="5">char<pos:position pos:line="99" pos:column="9"/></name> <modifier pos:line="99" pos:column="10">*<pos:position pos:line="99" pos:column="11"/></modifier></type><name pos:line="99" pos:column="11">result<pos:position pos:line="99" pos:column="17"/></name></decl>;<pos:position pos:line="99" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><name pos:line="101" pos:column="5">result<pos:position pos:line="101" pos:column="11"/></name> <operator pos:line="101" pos:column="12">=<pos:position pos:line="101" pos:column="13"/></operator> <call><name pos:line="101" pos:column="14">ssl_var_lookup<pos:position pos:line="101" pos:column="28"/></name><argument_list pos:line="101" pos:column="28">(<argument><expr><name><name pos:line="101" pos:column="29">r<pos:position pos:line="101" pos:column="30"/></name><operator pos:line="101" pos:column="30">-&gt;<pos:position pos:line="101" pos:column="35"/></operator><name pos:line="101" pos:column="32">pool<pos:position pos:line="101" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="38">r<pos:position pos:line="101" pos:column="39"/></name><operator pos:line="101" pos:column="39">-&gt;<pos:position pos:line="101" pos:column="44"/></operator><name pos:line="101" pos:column="41">server<pos:position pos:line="101" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="49">r<pos:position pos:line="101" pos:column="50"/></name><operator pos:line="101" pos:column="50">-&gt;<pos:position pos:line="101" pos:column="55"/></operator><name pos:line="101" pos:column="52">connection<pos:position pos:line="101" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="64">r<pos:position pos:line="101" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="67">a<pos:position pos:line="101" pos:column="68"/></name></expr></argument>)<pos:position pos:line="101" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="70"/></expr_stmt>
    <if pos:line="102" pos:column="5">if <condition pos:line="102" pos:column="8">(<expr><name pos:line="102" pos:column="9">result<pos:position pos:line="102" pos:column="15"/></name> <operator pos:line="102" pos:column="16">!=<pos:position pos:line="102" pos:column="18"/></operator> <name pos:line="102" pos:column="19">NULL<pos:position pos:line="102" pos:column="23"/></name> <operator pos:line="102" pos:column="24">&amp;&amp;<pos:position pos:line="102" pos:column="34"/></operator> <name><name pos:line="102" pos:column="27">result<pos:position pos:line="102" pos:column="33"/></name><index pos:line="102" pos:column="33">[<expr><literal type="number" pos:line="102" pos:column="34">0<pos:position pos:line="102" pos:column="35"/></literal></expr>]<pos:position pos:line="102" pos:column="36"/></index></name> <operator pos:line="102" pos:column="37">==<pos:position pos:line="102" pos:column="39"/></operator> <name pos:line="102" pos:column="40">NUL<pos:position pos:line="102" pos:column="43"/></name></expr>)<pos:position pos:line="102" pos:column="44"/></condition><then pos:line="102" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><name pos:line="103" pos:column="9">result<pos:position pos:line="103" pos:column="15"/></name> <operator pos:line="103" pos:column="16">=<pos:position pos:line="103" pos:column="17"/></operator> <name pos:line="103" pos:column="18">NULL<pos:position pos:line="103" pos:column="22"/></name></expr>;<pos:position pos:line="103" pos:column="23"/></expr_stmt></block></then></if>
    <return pos:line="104" pos:column="5">return <expr><name pos:line="104" pos:column="12">result<pos:position pos:line="104" pos:column="18"/></name></expr>;<pos:position pos:line="104" pos:column="19"/></return>
}<pos:position pos:line="105" pos:column="2"/></block></function></block></function></unit>

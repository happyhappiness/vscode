<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2448_httpd-2.0.44.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">XML_LChar<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">XML_ErrorString<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">code<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><specifier pos:line="3" pos:column="10">const<pos:position pos:line="3" pos:column="15"/></specifier> <name pos:line="3" pos:column="16">XML_LChar<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name><name pos:line="3" pos:column="27">message<pos:position pos:line="3" pos:column="34"/></name><index pos:line="3" pos:column="34">[]<pos:position pos:line="3" pos:column="36"/></index></name> <init pos:line="3" pos:column="37">= <expr><block pos:line="3" pos:column="39">{
    <expr><literal type="number" pos:line="4" pos:column="5">0<pos:position pos:line="4" pos:column="6"/></literal></expr>,
    <expr><call><name pos:line="5" pos:column="5">XML_T<pos:position pos:line="5" pos:column="10"/></name><argument_list pos:line="5" pos:column="10">(<argument><expr><literal type="string" pos:line="5" pos:column="11">"out of memory"<pos:position pos:line="5" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="27"/></argument_list></call></expr>,
    <expr><call><name pos:line="6" pos:column="5">XML_T<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">(<argument><expr><literal type="string" pos:line="6" pos:column="11">"syntax error"<pos:position pos:line="6" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr>,
    <expr><call><name pos:line="7" pos:column="5">XML_T<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><literal type="string" pos:line="7" pos:column="11">"no element found"<pos:position pos:line="7" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr>,
    <expr><call><name pos:line="8" pos:column="5">XML_T<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="string" pos:line="8" pos:column="11">"not well-formed (invalid token)"<pos:position pos:line="8" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>,
    <expr><call><name pos:line="9" pos:column="5">XML_T<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><literal type="string" pos:line="9" pos:column="11">"unclosed token"<pos:position pos:line="9" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>,
    <expr><call><name pos:line="10" pos:column="5">XML_T<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="string" pos:line="10" pos:column="11">"unclosed token"<pos:position pos:line="10" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>,
    <expr><call><name pos:line="11" pos:column="5">XML_T<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><literal type="string" pos:line="11" pos:column="11">"mismatched tag"<pos:position pos:line="11" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>,
    <expr><call><name pos:line="12" pos:column="5">XML_T<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><literal type="string" pos:line="12" pos:column="11">"duplicate attribute"<pos:position pos:line="12" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>,
    <expr><call><name pos:line="13" pos:column="5">XML_T<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><literal type="string" pos:line="13" pos:column="11">"junk after document element"<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>,
    <expr><call><name pos:line="14" pos:column="5">XML_T<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><literal type="string" pos:line="14" pos:column="11">"illegal parameter entity reference"<pos:position pos:line="14" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr>,
    <expr><call><name pos:line="15" pos:column="5">XML_T<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><literal type="string" pos:line="15" pos:column="11">"undefined entity"<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>,
    <expr><call><name pos:line="16" pos:column="5">XML_T<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><literal type="string" pos:line="16" pos:column="11">"recursive entity reference"<pos:position pos:line="16" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></call></expr>,
    <expr><call><name pos:line="17" pos:column="5">XML_T<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><literal type="string" pos:line="17" pos:column="11">"asynchronous entity"<pos:position pos:line="17" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>,
    <expr><call><name pos:line="18" pos:column="5">XML_T<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><literal type="string" pos:line="18" pos:column="11">"reference to invalid character number"<pos:position pos:line="18" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>,
    <expr><call><name pos:line="19" pos:column="5">XML_T<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><literal type="string" pos:line="19" pos:column="11">"reference to binary entity"<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>,
    <expr><call><name pos:line="20" pos:column="5">XML_T<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><literal type="string" pos:line="20" pos:column="11">"reference to external entity in attribute"<pos:position pos:line="20" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr>,
    <expr><call><name pos:line="21" pos:column="5">XML_T<pos:position pos:line="21" pos:column="10"/></name><argument_list pos:line="21" pos:column="10">(<argument><expr><literal type="string" pos:line="21" pos:column="11">"xml processing instruction not at start of external entity"<pos:position pos:line="21" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="72"/></argument_list></call></expr>,
    <expr><call><name pos:line="22" pos:column="5">XML_T<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><literal type="string" pos:line="22" pos:column="11">"unknown encoding"<pos:position pos:line="22" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr>,
    <expr><call><name pos:line="23" pos:column="5">XML_T<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><literal type="string" pos:line="23" pos:column="11">"encoding specified in XML declaration is incorrect"<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>,
    <expr><call><name pos:line="24" pos:column="5">XML_T<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><literal type="string" pos:line="24" pos:column="11">"unclosed CDATA section"<pos:position pos:line="24" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></call></expr>,
    <expr><call><name pos:line="25" pos:column="5">XML_T<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><literal type="string" pos:line="25" pos:column="11">"error in processing external entity reference"<pos:position pos:line="25" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr>,
    <expr><call><name pos:line="26" pos:column="5">XML_T<pos:position pos:line="26" pos:column="10"/></name><argument_list pos:line="26" pos:column="10">(<argument><expr><literal type="string" pos:line="26" pos:column="11">"document is not standalone"<pos:position pos:line="26" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>,
    <macro><name pos:line="27" pos:column="5">XML_T<pos:position pos:line="27" pos:column="10"/></name><argument_list pos:line="27" pos:column="10">(<argument><literal type="string" pos:line="27" pos:column="11">"unexpected parser state - please send a bug report"<pos:position pos:line="27" pos:column="63"/></literal></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></macro>
  }<pos:position pos:line="28" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="28" pos:column="5"/></decl_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name pos:line="29" pos:column="7">code<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">&gt;<pos:position pos:line="29" pos:column="16"/></operator> <literal type="number" pos:line="29" pos:column="14">0<pos:position pos:line="29" pos:column="15"/></literal> <operator pos:line="29" pos:column="16">&amp;&amp;<pos:position pos:line="29" pos:column="26"/></operator> <name pos:line="29" pos:column="19">code<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">&lt;<pos:position pos:line="29" pos:column="28"/></operator> <sizeof pos:line="29" pos:column="26">sizeof<argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">message<pos:position pos:line="29" pos:column="40"/></name></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></sizeof><operator pos:line="29" pos:column="41">/<pos:position pos:line="29" pos:column="42"/></operator><sizeof pos:line="29" pos:column="42">sizeof<argument_list pos:line="29" pos:column="48">(<argument><expr><name><name pos:line="29" pos:column="49">message<pos:position pos:line="29" pos:column="56"/></name><index pos:line="29" pos:column="56">[<expr><literal type="number" pos:line="29" pos:column="57">0<pos:position pos:line="29" pos:column="58"/></literal></expr>]<pos:position pos:line="29" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></sizeof></expr>)<pos:position pos:line="29" pos:column="61"/></condition><then pos:line="29" pos:column="61">
    <block type="pseudo"><return pos:line="30" pos:column="5">return <expr><name><name pos:line="30" pos:column="12">message<pos:position pos:line="30" pos:column="19"/></name><index pos:line="30" pos:column="19">[<expr><name pos:line="30" pos:column="20">code<pos:position pos:line="30" pos:column="24"/></name></expr>]<pos:position pos:line="30" pos:column="25"/></index></name></expr>;<pos:position pos:line="30" pos:column="26"/></return></block></then></if>
  <return pos:line="31" pos:column="3">return <expr><literal type="number" pos:line="31" pos:column="10">0<pos:position pos:line="31" pos:column="11"/></literal></expr>;<pos:position pos:line="31" pos:column="12"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

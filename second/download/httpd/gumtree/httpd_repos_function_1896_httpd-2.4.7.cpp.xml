<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1896_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name></type> <name pos:line="2" pos:column="5">ap_proxy_http_request<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">apr_pool_t<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">p<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">request_rec<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">r<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="3" pos:column="36">proxy_conn_rec<pos:position pos:line="3" pos:column="50"/></name> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier></type><name pos:line="3" pos:column="52">p_conn<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="60">proxy_worker<pos:position pos:line="3" pos:column="72"/></name> <modifier pos:line="3" pos:column="73">*<pos:position pos:line="3" pos:column="74"/></modifier></type><name pos:line="3" pos:column="74">worker<pos:position pos:line="3" pos:column="80"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="4" pos:column="36">proxy_server_conf<pos:position pos:line="4" pos:column="53"/></name> <modifier pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></modifier></type><name pos:line="4" pos:column="55">conf<pos:position pos:line="4" pos:column="59"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="5" pos:column="36">apr_uri_t<pos:position pos:line="5" pos:column="45"/></name> <modifier pos:line="5" pos:column="46">*<pos:position pos:line="5" pos:column="47"/></modifier></type><name pos:line="5" pos:column="47">uri<pos:position pos:line="5" pos:column="50"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="6" pos:column="36">char<pos:position pos:line="6" pos:column="40"/></name> <modifier pos:line="6" pos:column="41">*<pos:position pos:line="6" pos:column="42"/></modifier></type><name pos:line="6" pos:column="42">url<pos:position pos:line="6" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="6" pos:column="47">char<pos:position pos:line="6" pos:column="51"/></name> <modifier pos:line="6" pos:column="52">*<pos:position pos:line="6" pos:column="53"/></modifier></type><name pos:line="6" pos:column="53">server_portstr<pos:position pos:line="6" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="68"/></parameter_list>
<block pos:line="7" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">conn_rec<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">c<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><name><name pos:line="8" pos:column="19">r<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">-&gt;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="22">connection<pos:position pos:line="8" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_bucket_alloc_t<pos:position pos:line="9" pos:column="23"/></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">bucket_alloc<pos:position pos:line="9" pos:column="37"/></name> <init pos:line="9" pos:column="38">= <expr><name><name pos:line="9" pos:column="40">c<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">bucket_alloc<pos:position pos:line="9" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_bucket_brigade<pos:position pos:line="10" pos:column="23"/></name> <modifier pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></modifier></type><name pos:line="10" pos:column="25">header_brigade<pos:position pos:line="10" pos:column="39"/></name></decl>;<pos:position pos:line="10" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_bucket_brigade<pos:position pos:line="11" pos:column="23"/></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">input_brigade<pos:position pos:line="11" pos:column="38"/></name></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_bucket_brigade<pos:position pos:line="12" pos:column="23"/></name> <modifier pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></modifier></type><name pos:line="12" pos:column="25">temp_brigade<pos:position pos:line="12" pos:column="37"/></name></decl>;<pos:position pos:line="12" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_bucket<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">e<pos:position pos:line="13" pos:column="18"/></name></decl>;<pos:position pos:line="13" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">buf<pos:position pos:line="14" pos:column="14"/></name></decl>;<pos:position pos:line="14" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">apr_status_t<pos:position pos:line="15" pos:column="17"/></name></type> <name pos:line="15" pos:column="18">status<pos:position pos:line="15" pos:column="24"/></name></decl>;<pos:position pos:line="15" pos:column="25"/></decl_stmt>
    <enum pos:line="16" pos:column="5">enum <name pos:line="16" pos:column="10">rb_methods<pos:position pos:line="16" pos:column="20"/></name> <block pos:line="16" pos:column="21">{<decl><name pos:line="16" pos:column="22">RB_INIT<pos:position pos:line="16" pos:column="29"/></name></decl>, <decl><name pos:line="16" pos:column="31">RB_STREAM_CL<pos:position pos:line="16" pos:column="43"/></name></decl>, <decl><name pos:line="16" pos:column="45">RB_STREAM_CHUNKED<pos:position pos:line="16" pos:column="62"/></name></decl>, <decl><name pos:line="16" pos:column="64">RB_SPOOL_CL<pos:position pos:line="16" pos:column="75"/></name></decl>}<pos:position pos:line="16" pos:column="76"/></block>;<pos:position pos:line="16" pos:column="77"/></enum>
    <decl_stmt><decl><type><name><name pos:line="17" pos:column="5">enum<pos:position pos:line="17" pos:column="9"/></name> <name pos:line="17" pos:column="10">rb_methods<pos:position pos:line="17" pos:column="20"/></name></name></type> <name pos:line="17" pos:column="21">rb_method<pos:position pos:line="17" pos:column="30"/></name> <init pos:line="17" pos:column="31">= <expr><name pos:line="17" pos:column="33">RB_INIT<pos:position pos:line="17" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">char<pos:position pos:line="18" pos:column="9"/></name> <modifier pos:line="18" pos:column="10">*<pos:position pos:line="18" pos:column="11"/></modifier></type><name pos:line="18" pos:column="11">old_cl_val<pos:position pos:line="18" pos:column="21"/></name> <init pos:line="18" pos:column="22">= <expr><name pos:line="18" pos:column="24">NULL<pos:position pos:line="18" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name> <modifier pos:line="19" pos:column="10">*<pos:position pos:line="19" pos:column="11"/></modifier></type><name pos:line="19" pos:column="11">old_te_val<pos:position pos:line="19" pos:column="21"/></name> <init pos:line="19" pos:column="22">= <expr><name pos:line="19" pos:column="24">NULL<pos:position pos:line="19" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">apr_off_t<pos:position pos:line="20" pos:column="14"/></name></type> <name pos:line="20" pos:column="15">bytes_read<pos:position pos:line="20" pos:column="25"/></name> <init pos:line="20" pos:column="26">= <expr><literal type="number" pos:line="20" pos:column="28">0<pos:position pos:line="20" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">apr_off_t<pos:position pos:line="21" pos:column="14"/></name></type> <name pos:line="21" pos:column="15">bytes<pos:position pos:line="21" pos:column="20"/></name></decl>;<pos:position pos:line="21" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">int<pos:position pos:line="22" pos:column="8"/></name></type> <name pos:line="22" pos:column="9">force10<pos:position pos:line="22" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="22" pos:column="18">rv<pos:position pos:line="22" pos:column="20"/></name></decl>;<pos:position pos:line="22" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">conn_rec<pos:position pos:line="23" pos:column="13"/></name> <modifier pos:line="23" pos:column="14">*<pos:position pos:line="23" pos:column="15"/></modifier></type><name pos:line="23" pos:column="15">origin<pos:position pos:line="23" pos:column="21"/></name> <init pos:line="23" pos:column="22">= <expr><name><name pos:line="23" pos:column="24">p_conn<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">-&gt;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="32">connection<pos:position pos:line="23" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="23" pos:column="43"/></decl_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><call><name pos:line="25" pos:column="9">apr_table_get<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name><name pos:line="25" pos:column="23">r<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">-&gt;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="26">subprocess_env<pos:position pos:line="25" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="42">"force-proxy-request-1.0"<pos:position pos:line="25" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="69"/></condition><then pos:line="25" pos:column="69"> <block pos:line="25" pos:column="70">{
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">r<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">expecting_100<pos:position pos:line="26" pos:column="29"/></name></name></expr>)<pos:position pos:line="26" pos:column="30"/></condition><then pos:line="26" pos:column="30"> <block pos:line="26" pos:column="31">{
            <return pos:line="27" pos:column="13">return <expr><name pos:line="27" pos:column="20">HTTP_EXPECTATION_FAILED<pos:position pos:line="27" pos:column="43"/></name></expr>;<pos:position pos:line="27" pos:column="44"/></return>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="29" pos:column="9">force10<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <literal type="number" pos:line="29" pos:column="19">1<pos:position pos:line="29" pos:column="20"/></literal></expr>;<pos:position pos:line="29" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then> <else pos:line="30" pos:column="7">else <block pos:line="30" pos:column="12">{
        <expr_stmt><expr><name pos:line="31" pos:column="9">force10<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <literal type="number" pos:line="31" pos:column="19">0<pos:position pos:line="31" pos:column="20"/></literal></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="34" pos:column="5">header_brigade<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <call><name pos:line="34" pos:column="22">apr_brigade_create<pos:position pos:line="34" pos:column="40"/></name><argument_list pos:line="34" pos:column="40">(<argument><expr><name pos:line="34" pos:column="41">p<pos:position pos:line="34" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="44">origin<pos:position pos:line="34" pos:column="50"/></name><operator pos:line="34" pos:column="50">-&gt;<pos:position pos:line="34" pos:column="55"/></operator><name pos:line="34" pos:column="52">bucket_alloc<pos:position pos:line="34" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">rv<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <call><name pos:line="35" pos:column="10">ap_proxy_create_hdrbrgd<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">p<pos:position pos:line="35" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="37">header_brigade<pos:position pos:line="35" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="53">r<pos:position pos:line="35" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="56">p_conn<pos:position pos:line="35" pos:column="62"/></name></expr></argument>,
                                 <argument><expr><name pos:line="36" pos:column="34">worker<pos:position pos:line="36" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="42">conf<pos:position pos:line="36" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="48">uri<pos:position pos:line="36" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="53">url<pos:position pos:line="36" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="58">server_portstr<pos:position pos:line="36" pos:column="72"/></name></expr></argument>,
                                 <argument><expr><operator pos:line="37" pos:column="34">&amp;<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="35">old_cl_val<pos:position pos:line="37" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="47">&amp;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="48">old_te_val<pos:position pos:line="37" pos:column="58"/></name></expr></argument>)<pos:position pos:line="37" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="60"/></expr_stmt>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">rv<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">!=<pos:position pos:line="38" pos:column="14"/></operator> <name pos:line="38" pos:column="15">OK<pos:position pos:line="38" pos:column="17"/></name></expr>)<pos:position pos:line="38" pos:column="18"/></condition><then pos:line="38" pos:column="18"> <block pos:line="38" pos:column="19">{
        <return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">rv<pos:position pos:line="39" pos:column="18"/></name></expr>;<pos:position pos:line="39" pos:column="19"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="42" pos:column="5">/* We have headers, let's figure out our request body... */</comment>
    <expr_stmt><expr><name pos:line="43" pos:column="5">input_brigade<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <call><name pos:line="43" pos:column="21">apr_brigade_create<pos:position pos:line="43" pos:column="39"/></name><argument_list pos:line="43" pos:column="39">(<argument><expr><name pos:line="43" pos:column="40">p<pos:position pos:line="43" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="43">bucket_alloc<pos:position pos:line="43" pos:column="55"/></name></expr></argument>)<pos:position pos:line="43" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="45" pos:column="5">/* sub-requests never use keepalives, and mustn't pass request bodies.
     * Because the new logic looks at input_brigade, we will self-terminate
     * input_brigade and jump past all of the request body logic...
     * Reading anything with ap_get_brigade is likely to consume the
     * main request's body or read beyond EOS - which would be unplesant.
     *
     * An exception: when a kept_body is present, then subrequest CAN use
     * pass request bodies, and we DONT skip the body.
     */</comment>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><operator pos:line="54" pos:column="9">!<pos:position pos:line="54" pos:column="10"/></operator><name><name pos:line="54" pos:column="10">r<pos:position pos:line="54" pos:column="11"/></name><operator pos:line="54" pos:column="11">-&gt;<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="13">kept_body<pos:position pos:line="54" pos:column="22"/></name></name> <operator pos:line="54" pos:column="23">&amp;&amp;<pos:position pos:line="54" pos:column="33"/></operator> <name><name pos:line="54" pos:column="26">r<pos:position pos:line="54" pos:column="27"/></name><operator pos:line="54" pos:column="27">-&gt;<pos:position pos:line="54" pos:column="32"/></operator><name pos:line="54" pos:column="29">main<pos:position pos:line="54" pos:column="33"/></name></name></expr>)<pos:position pos:line="54" pos:column="34"/></condition><then pos:line="54" pos:column="34"> <block pos:line="54" pos:column="35">{
        <comment type="block" pos:line="55" pos:column="9">/* XXX: Why DON'T sub-requests use keepalives? */</comment>
        <expr_stmt><expr><name><name pos:line="56" pos:column="9">p_conn<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">-&gt;<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="17">close<pos:position pos:line="56" pos:column="22"/></name></name> <operator pos:line="56" pos:column="23">=<pos:position pos:line="56" pos:column="24"/></operator> <literal type="number" pos:line="56" pos:column="25">1<pos:position pos:line="56" pos:column="26"/></literal></expr>;<pos:position pos:line="56" pos:column="27"/></expr_stmt>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">old_cl_val<pos:position pos:line="57" pos:column="23"/></name></expr>)<pos:position pos:line="57" pos:column="24"/></condition><then pos:line="57" pos:column="24"> <block pos:line="57" pos:column="25">{
            <expr_stmt><expr><name pos:line="58" pos:column="13">old_cl_val<pos:position pos:line="58" pos:column="23"/></name> <operator pos:line="58" pos:column="24">=<pos:position pos:line="58" pos:column="25"/></operator> <name pos:line="58" pos:column="26">NULL<pos:position pos:line="58" pos:column="30"/></name></expr>;<pos:position pos:line="58" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">apr_table_unset<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><name><name pos:line="59" pos:column="29">r<pos:position pos:line="59" pos:column="30"/></name><operator pos:line="59" pos:column="30">-&gt;<pos:position pos:line="59" pos:column="35"/></operator><name pos:line="59" pos:column="32">headers_in<pos:position pos:line="59" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="44">"Content-Length"<pos:position pos:line="59" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">old_te_val<pos:position pos:line="61" pos:column="23"/></name></expr>)<pos:position pos:line="61" pos:column="24"/></condition><then pos:line="61" pos:column="24"> <block pos:line="61" pos:column="25">{
            <expr_stmt><expr><name pos:line="62" pos:column="13">old_te_val<pos:position pos:line="62" pos:column="23"/></name> <operator pos:line="62" pos:column="24">=<pos:position pos:line="62" pos:column="25"/></operator> <name pos:line="62" pos:column="26">NULL<pos:position pos:line="62" pos:column="30"/></name></expr>;<pos:position pos:line="62" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">apr_table_unset<pos:position pos:line="63" pos:column="28"/></name><argument_list pos:line="63" pos:column="28">(<argument><expr><name><name pos:line="63" pos:column="29">r<pos:position pos:line="63" pos:column="30"/></name><operator pos:line="63" pos:column="30">-&gt;<pos:position pos:line="63" pos:column="35"/></operator><name pos:line="63" pos:column="32">headers_in<pos:position pos:line="63" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="44">"Transfer-Encoding"<pos:position pos:line="63" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="64" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="65" pos:column="9">rb_method<pos:position pos:line="65" pos:column="18"/></name> <operator pos:line="65" pos:column="19">=<pos:position pos:line="65" pos:column="20"/></operator> <name pos:line="65" pos:column="21">RB_STREAM_CL<pos:position pos:line="65" pos:column="33"/></name></expr>;<pos:position pos:line="65" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="66" pos:column="9">e<pos:position pos:line="66" pos:column="10"/></name> <operator pos:line="66" pos:column="11">=<pos:position pos:line="66" pos:column="12"/></operator> <call><name pos:line="66" pos:column="13">apr_bucket_eos_create<pos:position pos:line="66" pos:column="34"/></name><argument_list pos:line="66" pos:column="34">(<argument><expr><name><name pos:line="66" pos:column="35">input_brigade<pos:position pos:line="66" pos:column="48"/></name><operator pos:line="66" pos:column="48">-&gt;<pos:position pos:line="66" pos:column="53"/></operator><name pos:line="66" pos:column="50">bucket_alloc<pos:position pos:line="66" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="67" pos:column="32"/></name><argument_list pos:line="67" pos:column="32">(<argument><expr><name pos:line="67" pos:column="33">input_brigade<pos:position pos:line="67" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="48">e<pos:position pos:line="67" pos:column="49"/></name></expr></argument>)<pos:position pos:line="67" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="51"/></expr_stmt>
        <goto pos:line="68" pos:column="9">goto <name pos:line="68" pos:column="14">skip_body<pos:position pos:line="68" pos:column="23"/></name>;<pos:position pos:line="68" pos:column="24"/></goto>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="71" pos:column="5">/* WE only understand chunked.  Other modules might inject
     * (and therefore, decode) other flavors but we don't know
     * that the can and have done so unless they they remove
     * their decoding from the headers_in T-E list.
     * XXX: Make this extensible, but in doing so, presume the
     * encoding has been done by the extensions' handler, and
     * do not modify add_te_chunked's logic
     */</comment>
    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><name pos:line="79" pos:column="9">old_te_val<pos:position pos:line="79" pos:column="19"/></name> <operator pos:line="79" pos:column="20">&amp;&amp;<pos:position pos:line="79" pos:column="30"/></operator> <call><name pos:line="79" pos:column="23">strcasecmp<pos:position pos:line="79" pos:column="33"/></name><argument_list pos:line="79" pos:column="33">(<argument><expr><name pos:line="79" pos:column="34">old_te_val<pos:position pos:line="79" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="46">"chunked"<pos:position pos:line="79" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="56"/></argument_list></call> <operator pos:line="79" pos:column="57">!=<pos:position pos:line="79" pos:column="59"/></operator> <literal type="number" pos:line="79" pos:column="60">0<pos:position pos:line="79" pos:column="61"/></literal></expr>)<pos:position pos:line="79" pos:column="62"/></condition><then pos:line="79" pos:column="62"> <block pos:line="79" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">ap_log_rerror<pos:position pos:line="80" pos:column="22"/></name><argument_list pos:line="80" pos:column="22">(<argument><expr><name pos:line="80" pos:column="23">APLOG_MARK<pos:position pos:line="80" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="35">APLOG_ERR<pos:position pos:line="80" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="46">0<pos:position pos:line="80" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="49">r<pos:position pos:line="80" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="80" pos:column="52">APLOGNO<pos:position pos:line="80" pos:column="59"/></name><argument_list pos:line="80" pos:column="59">(<argument><expr><literal type="number" pos:line="80" pos:column="60">01093<pos:position pos:line="80" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="81" pos:column="23">"%s Transfer-Encoding is not supported"<pos:position pos:line="81" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="64">old_te_val<pos:position pos:line="81" pos:column="74"/></name></expr></argument>)<pos:position pos:line="81" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="76"/></expr_stmt>
        <return pos:line="82" pos:column="9">return <expr><name pos:line="82" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="82" pos:column="42"/></name></expr>;<pos:position pos:line="82" pos:column="43"/></return>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if>

    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><name pos:line="85" pos:column="9">old_cl_val<pos:position pos:line="85" pos:column="19"/></name> <operator pos:line="85" pos:column="20">&amp;&amp;<pos:position pos:line="85" pos:column="30"/></operator> <name pos:line="85" pos:column="23">old_te_val<pos:position pos:line="85" pos:column="33"/></name></expr>)<pos:position pos:line="85" pos:column="34"/></condition><then pos:line="85" pos:column="34"> <block pos:line="85" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="86" pos:column="9">ap_log_rerror<pos:position pos:line="86" pos:column="22"/></name><argument_list pos:line="86" pos:column="22">(<argument><expr><name pos:line="86" pos:column="23">APLOG_MARK<pos:position pos:line="86" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="35">APLOG_DEBUG<pos:position pos:line="86" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="48">0<pos:position pos:line="86" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="86" pos:column="51">r<pos:position pos:line="86" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="86" pos:column="54">APLOGNO<pos:position pos:line="86" pos:column="61"/></name><argument_list pos:line="86" pos:column="61">(<argument><expr><literal type="number" pos:line="86" pos:column="62">01094<pos:position pos:line="86" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="68"/></argument_list></call>
                      <literal type="string" pos:line="87" pos:column="23">"client %s (%s) requested Transfer-Encoding "<pos:position pos:line="87" pos:column="68"/></literal>
                      <literal type="string" pos:line="88" pos:column="23">"chunked body with Content-Length (C-L ignored)"<pos:position pos:line="88" pos:column="71"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="89" pos:column="23">c<pos:position pos:line="89" pos:column="24"/></name><operator pos:line="89" pos:column="24">-&gt;<pos:position pos:line="89" pos:column="29"/></operator><name pos:line="89" pos:column="26">client_ip<pos:position pos:line="89" pos:column="35"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="89" pos:column="37">c<pos:position pos:line="89" pos:column="38"/></name><operator pos:line="89" pos:column="38">-&gt;<pos:position pos:line="89" pos:column="43"/></operator><name pos:line="89" pos:column="40">remote_host<pos:position pos:line="89" pos:column="51"/></name></name></expr> ?<pos:position pos:line="89" pos:column="53"/></condition><then pos:line="89" pos:column="53"> <expr><name><name pos:line="89" pos:column="54">c<pos:position pos:line="89" pos:column="55"/></name><operator pos:line="89" pos:column="55">-&gt;<pos:position pos:line="89" pos:column="60"/></operator><name pos:line="89" pos:column="57">remote_host<pos:position pos:line="89" pos:column="68"/></name></name></expr></then><else pos:line="89" pos:column="68">: <expr><literal type="string" pos:line="89" pos:column="70">""<pos:position pos:line="89" pos:column="72"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="89" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">apr_table_unset<pos:position pos:line="90" pos:column="24"/></name><argument_list pos:line="90" pos:column="24">(<argument><expr><name><name pos:line="90" pos:column="25">r<pos:position pos:line="90" pos:column="26"/></name><operator pos:line="90" pos:column="26">-&gt;<pos:position pos:line="90" pos:column="31"/></operator><name pos:line="90" pos:column="28">headers_in<pos:position pos:line="90" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="40">"Content-Length"<pos:position pos:line="90" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="91" pos:column="9">old_cl_val<pos:position pos:line="91" pos:column="19"/></name> <operator pos:line="91" pos:column="20">=<pos:position pos:line="91" pos:column="21"/></operator> <name pos:line="91" pos:column="22">NULL<pos:position pos:line="91" pos:column="26"/></name></expr>;<pos:position pos:line="91" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="92" pos:column="9">origin<pos:position pos:line="92" pos:column="15"/></name><operator pos:line="92" pos:column="15">-&gt;<pos:position pos:line="92" pos:column="20"/></operator><name pos:line="92" pos:column="17">keepalive<pos:position pos:line="92" pos:column="26"/></name></name> <operator pos:line="92" pos:column="27">=<pos:position pos:line="92" pos:column="28"/></operator> <name pos:line="92" pos:column="29">AP_CONN_CLOSE<pos:position pos:line="92" pos:column="42"/></name></expr>;<pos:position pos:line="92" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="93" pos:column="9">p_conn<pos:position pos:line="93" pos:column="15"/></name><operator pos:line="93" pos:column="15">-&gt;<pos:position pos:line="93" pos:column="20"/></operator><name pos:line="93" pos:column="17">close<pos:position pos:line="93" pos:column="22"/></name></name> <operator pos:line="93" pos:column="23">=<pos:position pos:line="93" pos:column="24"/></operator> <literal type="number" pos:line="93" pos:column="25">1<pos:position pos:line="93" pos:column="26"/></literal></expr>;<pos:position pos:line="93" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="96" pos:column="5">/* Prefetch MAX_MEM_SPOOL bytes
     *
     * This helps us avoid any election of C-L v.s. T-E
     * request bodies, since we are willing to keep in
     * memory this much data, in any case.  This gives
     * us an instant C-L election if the body is of some
     * reasonable size.
     */</comment>
    <expr_stmt><expr><name pos:line="104" pos:column="5">temp_brigade<pos:position pos:line="104" pos:column="17"/></name> <operator pos:line="104" pos:column="18">=<pos:position pos:line="104" pos:column="19"/></operator> <call><name pos:line="104" pos:column="20">apr_brigade_create<pos:position pos:line="104" pos:column="38"/></name><argument_list pos:line="104" pos:column="38">(<argument><expr><name pos:line="104" pos:column="39">p<pos:position pos:line="104" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="42">bucket_alloc<pos:position pos:line="104" pos:column="54"/></name></expr></argument>)<pos:position pos:line="104" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="56"/></expr_stmt>
    <do pos:line="105" pos:column="5">do <block pos:line="105" pos:column="8">{
        <expr_stmt><expr><name pos:line="106" pos:column="9">status<pos:position pos:line="106" pos:column="15"/></name> <operator pos:line="106" pos:column="16">=<pos:position pos:line="106" pos:column="17"/></operator> <call><name pos:line="106" pos:column="18">ap_get_brigade<pos:position pos:line="106" pos:column="32"/></name><argument_list pos:line="106" pos:column="32">(<argument><expr><name><name pos:line="106" pos:column="33">r<pos:position pos:line="106" pos:column="34"/></name><operator pos:line="106" pos:column="34">-&gt;<pos:position pos:line="106" pos:column="39"/></operator><name pos:line="106" pos:column="36">input_filters<pos:position pos:line="106" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="51">temp_brigade<pos:position pos:line="106" pos:column="63"/></name></expr></argument>,
                                <argument><expr><name pos:line="107" pos:column="33">AP_MODE_READBYTES<pos:position pos:line="107" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="52">APR_BLOCK_READ<pos:position pos:line="107" pos:column="66"/></name></expr></argument>,
                                <argument><expr><name pos:line="108" pos:column="33">MAX_MEM_SPOOL<pos:position pos:line="108" pos:column="46"/></name> <operator pos:line="108" pos:column="47">-<pos:position pos:line="108" pos:column="48"/></operator> <name pos:line="108" pos:column="49">bytes_read<pos:position pos:line="108" pos:column="59"/></name></expr></argument>)<pos:position pos:line="108" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="61"/></expr_stmt>
        <if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><name pos:line="109" pos:column="13">status<pos:position pos:line="109" pos:column="19"/></name> <operator pos:line="109" pos:column="20">!=<pos:position pos:line="109" pos:column="22"/></operator> <name pos:line="109" pos:column="23">APR_SUCCESS<pos:position pos:line="109" pos:column="34"/></name></expr>)<pos:position pos:line="109" pos:column="35"/></condition><then pos:line="109" pos:column="35"> <block pos:line="109" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="110" pos:column="13">ap_log_rerror<pos:position pos:line="110" pos:column="26"/></name><argument_list pos:line="110" pos:column="26">(<argument><expr><name pos:line="110" pos:column="27">APLOG_MARK<pos:position pos:line="110" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="39">APLOG_ERR<pos:position pos:line="110" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="50">status<pos:position pos:line="110" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="58">r<pos:position pos:line="110" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="110" pos:column="61">APLOGNO<pos:position pos:line="110" pos:column="68"/></name><argument_list pos:line="110" pos:column="68">(<argument><expr><literal type="number" pos:line="110" pos:column="69">01095<pos:position pos:line="110" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="75"/></argument_list></call>
                          <literal type="string" pos:line="111" pos:column="27">"prefetch request body failed to %pI (%s)"<pos:position pos:line="111" pos:column="69"/></literal>
                          <literal type="string" pos:line="112" pos:column="27">" from %s (%s)"<pos:position pos:line="112" pos:column="42"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="113" pos:column="27">p_conn<pos:position pos:line="113" pos:column="33"/></name><operator pos:line="113" pos:column="33">-&gt;<pos:position pos:line="113" pos:column="38"/></operator><name pos:line="113" pos:column="35">addr<pos:position pos:line="113" pos:column="39"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="113" pos:column="41">p_conn<pos:position pos:line="113" pos:column="47"/></name><operator pos:line="113" pos:column="47">-&gt;<pos:position pos:line="113" pos:column="52"/></operator><name pos:line="113" pos:column="49">hostname<pos:position pos:line="113" pos:column="57"/></name></name></expr> ?<pos:position pos:line="113" pos:column="59"/></condition><then pos:line="113" pos:column="59"> <expr><name><name pos:line="113" pos:column="60">p_conn<pos:position pos:line="113" pos:column="66"/></name><operator pos:line="113" pos:column="66">-&gt;<pos:position pos:line="113" pos:column="71"/></operator><name pos:line="113" pos:column="68">hostname<pos:position pos:line="113" pos:column="76"/></name></name></expr></then><else pos:line="113" pos:column="76">: <expr><literal type="string" pos:line="113" pos:column="78">""<pos:position pos:line="113" pos:column="80"/></literal></expr></else></ternary></expr></argument>,
                          <argument><expr><name><name pos:line="114" pos:column="27">c<pos:position pos:line="114" pos:column="28"/></name><operator pos:line="114" pos:column="28">-&gt;<pos:position pos:line="114" pos:column="33"/></operator><name pos:line="114" pos:column="30">client_ip<pos:position pos:line="114" pos:column="39"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="114" pos:column="41">c<pos:position pos:line="114" pos:column="42"/></name><operator pos:line="114" pos:column="42">-&gt;<pos:position pos:line="114" pos:column="47"/></operator><name pos:line="114" pos:column="44">remote_host<pos:position pos:line="114" pos:column="55"/></name></name></expr> ?<pos:position pos:line="114" pos:column="57"/></condition><then pos:line="114" pos:column="57"> <expr><name><name pos:line="114" pos:column="58">c<pos:position pos:line="114" pos:column="59"/></name><operator pos:line="114" pos:column="59">-&gt;<pos:position pos:line="114" pos:column="64"/></operator><name pos:line="114" pos:column="61">remote_host<pos:position pos:line="114" pos:column="72"/></name></name></expr></then><else pos:line="114" pos:column="72">: <expr><literal type="string" pos:line="114" pos:column="74">""<pos:position pos:line="114" pos:column="76"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="114" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="78"/></expr_stmt>
            <return pos:line="115" pos:column="13">return <expr><name pos:line="115" pos:column="20">HTTP_BAD_REQUEST<pos:position pos:line="115" pos:column="36"/></name></expr>;<pos:position pos:line="115" pos:column="37"/></return>
        }<pos:position pos:line="116" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="118" pos:column="9">apr_brigade_length<pos:position pos:line="118" pos:column="27"/></name><argument_list pos:line="118" pos:column="27">(<argument><expr><name pos:line="118" pos:column="28">temp_brigade<pos:position pos:line="118" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="118" pos:column="42">1<pos:position pos:line="118" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="118" pos:column="45">&amp;<pos:position pos:line="118" pos:column="50"/></operator><name pos:line="118" pos:column="46">bytes<pos:position pos:line="118" pos:column="51"/></name></expr></argument>)<pos:position pos:line="118" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name pos:line="119" pos:column="9">bytes_read<pos:position pos:line="119" pos:column="19"/></name> <operator pos:line="119" pos:column="20">+=<pos:position pos:line="119" pos:column="22"/></operator> <name pos:line="119" pos:column="23">bytes<pos:position pos:line="119" pos:column="28"/></name></expr>;<pos:position pos:line="119" pos:column="29"/></expr_stmt>

        <comment type="block" pos:line="121" pos:column="9">/*
         * Save temp_brigade in input_brigade. (At least) in the SSL case
         * temp_brigade contains transient buckets whose data would get
         * overwritten during the next call of ap_get_brigade in the loop.
         * ap_save_brigade ensures these buckets to be set aside.
         * Calling ap_save_brigade with NULL as filter is OK, because
         * input_brigade already has been created and does not need to get
         * created by ap_save_brigade.
         */</comment>
        <expr_stmt><expr><name pos:line="130" pos:column="9">status<pos:position pos:line="130" pos:column="15"/></name> <operator pos:line="130" pos:column="16">=<pos:position pos:line="130" pos:column="17"/></operator> <call><name pos:line="130" pos:column="18">ap_save_brigade<pos:position pos:line="130" pos:column="33"/></name><argument_list pos:line="130" pos:column="33">(<argument><expr><name pos:line="130" pos:column="34">NULL<pos:position pos:line="130" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="130" pos:column="40">&amp;<pos:position pos:line="130" pos:column="45"/></operator><name pos:line="130" pos:column="41">input_brigade<pos:position pos:line="130" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="130" pos:column="56">&amp;<pos:position pos:line="130" pos:column="61"/></operator><name pos:line="130" pos:column="57">temp_brigade<pos:position pos:line="130" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="71">p<pos:position pos:line="130" pos:column="72"/></name></expr></argument>)<pos:position pos:line="130" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="74"/></expr_stmt>
        <if pos:line="131" pos:column="9">if <condition pos:line="131" pos:column="12">(<expr><name pos:line="131" pos:column="13">status<pos:position pos:line="131" pos:column="19"/></name> <operator pos:line="131" pos:column="20">!=<pos:position pos:line="131" pos:column="22"/></operator> <name pos:line="131" pos:column="23">APR_SUCCESS<pos:position pos:line="131" pos:column="34"/></name></expr>)<pos:position pos:line="131" pos:column="35"/></condition><then pos:line="131" pos:column="35"> <block pos:line="131" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="132" pos:column="13">ap_log_rerror<pos:position pos:line="132" pos:column="26"/></name><argument_list pos:line="132" pos:column="26">(<argument><expr><name pos:line="132" pos:column="27">APLOG_MARK<pos:position pos:line="132" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="39">APLOG_ERR<pos:position pos:line="132" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="50">status<pos:position pos:line="132" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="58">r<pos:position pos:line="132" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="132" pos:column="61">APLOGNO<pos:position pos:line="132" pos:column="68"/></name><argument_list pos:line="132" pos:column="68">(<argument><expr><literal type="number" pos:line="132" pos:column="69">01096<pos:position pos:line="132" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="75"/></argument_list></call>
                          <literal type="string" pos:line="133" pos:column="27">"processing prefetched request body failed"<pos:position pos:line="133" pos:column="70"/></literal>
                          <literal type="string" pos:line="134" pos:column="27">" to %pI (%s) from %s (%s)"<pos:position pos:line="134" pos:column="54"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="135" pos:column="27">p_conn<pos:position pos:line="135" pos:column="33"/></name><operator pos:line="135" pos:column="33">-&gt;<pos:position pos:line="135" pos:column="38"/></operator><name pos:line="135" pos:column="35">addr<pos:position pos:line="135" pos:column="39"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="135" pos:column="41">p_conn<pos:position pos:line="135" pos:column="47"/></name><operator pos:line="135" pos:column="47">-&gt;<pos:position pos:line="135" pos:column="52"/></operator><name pos:line="135" pos:column="49">hostname<pos:position pos:line="135" pos:column="57"/></name></name></expr> ?<pos:position pos:line="135" pos:column="59"/></condition><then pos:line="135" pos:column="59"> <expr><name><name pos:line="135" pos:column="60">p_conn<pos:position pos:line="135" pos:column="66"/></name><operator pos:line="135" pos:column="66">-&gt;<pos:position pos:line="135" pos:column="71"/></operator><name pos:line="135" pos:column="68">hostname<pos:position pos:line="135" pos:column="76"/></name></name></expr></then><else pos:line="135" pos:column="76">: <expr><literal type="string" pos:line="135" pos:column="78">""<pos:position pos:line="135" pos:column="80"/></literal></expr></else></ternary></expr></argument>,
                          <argument><expr><name><name pos:line="136" pos:column="27">c<pos:position pos:line="136" pos:column="28"/></name><operator pos:line="136" pos:column="28">-&gt;<pos:position pos:line="136" pos:column="33"/></operator><name pos:line="136" pos:column="30">client_ip<pos:position pos:line="136" pos:column="39"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="136" pos:column="41">c<pos:position pos:line="136" pos:column="42"/></name><operator pos:line="136" pos:column="42">-&gt;<pos:position pos:line="136" pos:column="47"/></operator><name pos:line="136" pos:column="44">remote_host<pos:position pos:line="136" pos:column="55"/></name></name></expr> ?<pos:position pos:line="136" pos:column="57"/></condition><then pos:line="136" pos:column="57"> <expr><name><name pos:line="136" pos:column="58">c<pos:position pos:line="136" pos:column="59"/></name><operator pos:line="136" pos:column="59">-&gt;<pos:position pos:line="136" pos:column="64"/></operator><name pos:line="136" pos:column="61">remote_host<pos:position pos:line="136" pos:column="72"/></name></name></expr></then><else pos:line="136" pos:column="72">: <expr><literal type="string" pos:line="136" pos:column="74">""<pos:position pos:line="136" pos:column="76"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="136" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="78"/></expr_stmt>
            <return pos:line="137" pos:column="13">return <expr><name pos:line="137" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="137" pos:column="46"/></name></expr>;<pos:position pos:line="137" pos:column="47"/></return>
        }<pos:position pos:line="138" pos:column="10"/></block></then></if>

    <comment type="block" pos:line="140" pos:column="5">/* Ensure we don't hit a wall where we have a buffer too small
     * for ap_get_brigade's filters to fetch us another bucket,
     * surrender once we hit 80 bytes less than MAX_MEM_SPOOL
     * (an arbitrary value.)
     */</comment>
    }<pos:position pos:line="145" pos:column="6"/></block> while <condition pos:line="145" pos:column="13">(<expr><operator pos:line="145" pos:column="14">(<pos:position pos:line="145" pos:column="15"/></operator><name pos:line="145" pos:column="15">bytes_read<pos:position pos:line="145" pos:column="25"/></name> <operator pos:line="145" pos:column="26">&lt;<pos:position pos:line="145" pos:column="30"/></operator> <name pos:line="145" pos:column="28">MAX_MEM_SPOOL<pos:position pos:line="145" pos:column="41"/></name> <operator pos:line="145" pos:column="42">-<pos:position pos:line="145" pos:column="43"/></operator> <literal type="number" pos:line="145" pos:column="44">80<pos:position pos:line="145" pos:column="46"/></literal><operator pos:line="145" pos:column="46">)<pos:position pos:line="145" pos:column="47"/></operator>
              <operator pos:line="146" pos:column="15">&amp;&amp;<pos:position pos:line="146" pos:column="25"/></operator> <operator pos:line="146" pos:column="18">!<pos:position pos:line="146" pos:column="19"/></operator><call><name pos:line="146" pos:column="19">APR_BUCKET_IS_EOS<pos:position pos:line="146" pos:column="36"/></name><argument_list pos:line="146" pos:column="36">(<argument><expr><call><name pos:line="146" pos:column="37">APR_BRIGADE_LAST<pos:position pos:line="146" pos:column="53"/></name><argument_list pos:line="146" pos:column="53">(<argument><expr><name pos:line="146" pos:column="54">input_brigade<pos:position pos:line="146" pos:column="67"/></name></expr></argument>)<pos:position pos:line="146" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="146" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="146" pos:column="70"/></condition>;<pos:position pos:line="146" pos:column="71"/></do>

    <comment type="block" pos:line="148" pos:column="5">/* Use chunked request body encoding or send a content-length body?
     *
     * Prefer C-L when:
     *
     *   We have no request body (handled by RB_STREAM_CL)
     *
     *   We have a request body length &lt;= MAX_MEM_SPOOL
     *
     *   The administrator has setenv force-proxy-request-1.0
     *
     *   The client sent a C-L body, and the administrator has
     *   not setenv proxy-sendchunked or has set setenv proxy-sendcl
     *
     *   The client sent a T-E body, and the administrator has
     *   setenv proxy-sendcl, and not setenv proxy-sendchunked
     *
     * If both proxy-sendcl and proxy-sendchunked are set, the
     * behavior is the same as if neither were set, large bodies
     * that can't be read will be forwarded in their original
     * form of C-L, or T-E.
     *
     * To ensure maximum compatibility, setenv proxy-sendcl
     * To reduce server resource use,   setenv proxy-sendchunked
     *
     * Then address specific servers with conditional setenv
     * options to restore the default behavior where desireable.
     *
     * We have to compute content length by reading the entire request
     * body; if request body is not small, we'll spool the remaining
     * input to a temporary file.  Chunked is always preferable.
     *
     * We can only trust the client-provided C-L if the T-E header
     * is absent, and the filters are unchanged (the body won't
     * be resized by another content filter).
     */</comment>
    <if pos:line="183" pos:column="5">if <condition pos:line="183" pos:column="8">(<expr><call><name pos:line="183" pos:column="9">APR_BUCKET_IS_EOS<pos:position pos:line="183" pos:column="26"/></name><argument_list pos:line="183" pos:column="26">(<argument><expr><call><name pos:line="183" pos:column="27">APR_BRIGADE_LAST<pos:position pos:line="183" pos:column="43"/></name><argument_list pos:line="183" pos:column="43">(<argument><expr><name pos:line="183" pos:column="44">input_brigade<pos:position pos:line="183" pos:column="57"/></name></expr></argument>)<pos:position pos:line="183" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="183" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="183" pos:column="60"/></condition><then pos:line="183" pos:column="60"> <block pos:line="183" pos:column="61">{
        <comment type="block" pos:line="184" pos:column="9">/* The whole thing fit, so our decision is trivial, use
         * the filtered bytes read from the client for the request
         * body Content-Length.
         *
         * If we expected no body, and read no body, do not set
         * the Content-Length.
         */</comment>
        <if pos:line="191" pos:column="9">if <condition pos:line="191" pos:column="12">(<expr><name pos:line="191" pos:column="13">old_cl_val<pos:position pos:line="191" pos:column="23"/></name> <operator pos:line="191" pos:column="24">||<pos:position pos:line="191" pos:column="26"/></operator> <name pos:line="191" pos:column="27">old_te_val<pos:position pos:line="191" pos:column="37"/></name> <operator pos:line="191" pos:column="38">||<pos:position pos:line="191" pos:column="40"/></operator> <name pos:line="191" pos:column="41">bytes_read<pos:position pos:line="191" pos:column="51"/></name></expr>)<pos:position pos:line="191" pos:column="52"/></condition><then pos:line="191" pos:column="52"> <block pos:line="191" pos:column="53">{
            <expr_stmt><expr><name pos:line="192" pos:column="13">old_cl_val<pos:position pos:line="192" pos:column="23"/></name> <operator pos:line="192" pos:column="24">=<pos:position pos:line="192" pos:column="25"/></operator> <call><name pos:line="192" pos:column="26">apr_off_t_toa<pos:position pos:line="192" pos:column="39"/></name><argument_list pos:line="192" pos:column="39">(<argument><expr><name><name pos:line="192" pos:column="40">r<pos:position pos:line="192" pos:column="41"/></name><operator pos:line="192" pos:column="41">-&gt;<pos:position pos:line="192" pos:column="46"/></operator><name pos:line="192" pos:column="43">pool<pos:position pos:line="192" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="49">bytes_read<pos:position pos:line="192" pos:column="59"/></name></expr></argument>)<pos:position pos:line="192" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="193" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="194" pos:column="9">rb_method<pos:position pos:line="194" pos:column="18"/></name> <operator pos:line="194" pos:column="19">=<pos:position pos:line="194" pos:column="20"/></operator> <name pos:line="194" pos:column="21">RB_STREAM_CL<pos:position pos:line="194" pos:column="33"/></name></expr>;<pos:position pos:line="194" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="195" pos:column="6"/></block></then>
    <elseif pos:line="196" pos:column="5">else <if pos:line="196" pos:column="10">if <condition pos:line="196" pos:column="13">(<expr><name pos:line="196" pos:column="14">old_te_val<pos:position pos:line="196" pos:column="24"/></name></expr>)<pos:position pos:line="196" pos:column="25"/></condition><then pos:line="196" pos:column="25"> <block pos:line="196" pos:column="26">{
        <if pos:line="197" pos:column="9">if <condition pos:line="197" pos:column="12">(<expr><name pos:line="197" pos:column="13">force10<pos:position pos:line="197" pos:column="20"/></name>
             <operator pos:line="198" pos:column="14">||<pos:position pos:line="198" pos:column="16"/></operator> <operator pos:line="198" pos:column="17">(<pos:position pos:line="198" pos:column="18"/></operator><call><name pos:line="198" pos:column="18">apr_table_get<pos:position pos:line="198" pos:column="31"/></name><argument_list pos:line="198" pos:column="31">(<argument><expr><name><name pos:line="198" pos:column="32">r<pos:position pos:line="198" pos:column="33"/></name><operator pos:line="198" pos:column="33">-&gt;<pos:position pos:line="198" pos:column="38"/></operator><name pos:line="198" pos:column="35">subprocess_env<pos:position pos:line="198" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="198" pos:column="51">"proxy-sendcl"<pos:position pos:line="198" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="66"/></argument_list></call>
                  <operator pos:line="199" pos:column="19">&amp;&amp;<pos:position pos:line="199" pos:column="29"/></operator> <operator pos:line="199" pos:column="22">!<pos:position pos:line="199" pos:column="23"/></operator><call><name pos:line="199" pos:column="23">apr_table_get<pos:position pos:line="199" pos:column="36"/></name><argument_list pos:line="199" pos:column="36">(<argument><expr><name><name pos:line="199" pos:column="37">r<pos:position pos:line="199" pos:column="38"/></name><operator pos:line="199" pos:column="38">-&gt;<pos:position pos:line="199" pos:column="43"/></operator><name pos:line="199" pos:column="40">subprocess_env<pos:position pos:line="199" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="199" pos:column="56">"proxy-sendchunks"<pos:position pos:line="199" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="75"/></argument_list></call>
                  <operator pos:line="200" pos:column="19">&amp;&amp;<pos:position pos:line="200" pos:column="29"/></operator> <operator pos:line="200" pos:column="22">!<pos:position pos:line="200" pos:column="23"/></operator><call><name pos:line="200" pos:column="23">apr_table_get<pos:position pos:line="200" pos:column="36"/></name><argument_list pos:line="200" pos:column="36">(<argument><expr><name><name pos:line="200" pos:column="37">r<pos:position pos:line="200" pos:column="38"/></name><operator pos:line="200" pos:column="38">-&gt;<pos:position pos:line="200" pos:column="43"/></operator><name pos:line="200" pos:column="40">subprocess_env<pos:position pos:line="200" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="200" pos:column="56">"proxy-sendchunked"<pos:position pos:line="200" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="200" pos:column="76"/></argument_list></call><operator pos:line="200" pos:column="76">)<pos:position pos:line="200" pos:column="77"/></operator></expr>)<pos:position pos:line="200" pos:column="78"/></condition><then pos:line="200" pos:column="78"> <block pos:line="200" pos:column="79">{
            <expr_stmt><expr><name pos:line="201" pos:column="13">rb_method<pos:position pos:line="201" pos:column="22"/></name> <operator pos:line="201" pos:column="23">=<pos:position pos:line="201" pos:column="24"/></operator> <name pos:line="201" pos:column="25">RB_SPOOL_CL<pos:position pos:line="201" pos:column="36"/></name></expr>;<pos:position pos:line="201" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="202" pos:column="10"/></block></then>
        <else pos:line="203" pos:column="9">else <block pos:line="203" pos:column="14">{
            <expr_stmt><expr><name pos:line="204" pos:column="13">rb_method<pos:position pos:line="204" pos:column="22"/></name> <operator pos:line="204" pos:column="23">=<pos:position pos:line="204" pos:column="24"/></operator> <name pos:line="204" pos:column="25">RB_STREAM_CHUNKED<pos:position pos:line="204" pos:column="42"/></name></expr>;<pos:position pos:line="204" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="205" pos:column="10"/></block></else></if>
    }<pos:position pos:line="206" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="207" pos:column="5">else <if pos:line="207" pos:column="10">if <condition pos:line="207" pos:column="13">(<expr><name pos:line="207" pos:column="14">old_cl_val<pos:position pos:line="207" pos:column="24"/></name></expr>)<pos:position pos:line="207" pos:column="25"/></condition><then pos:line="207" pos:column="25"> <block pos:line="207" pos:column="26">{
        <if pos:line="208" pos:column="9">if <condition pos:line="208" pos:column="12">(<expr><name><name pos:line="208" pos:column="13">r<pos:position pos:line="208" pos:column="14"/></name><operator pos:line="208" pos:column="14">-&gt;<pos:position pos:line="208" pos:column="19"/></operator><name pos:line="208" pos:column="16">input_filters<pos:position pos:line="208" pos:column="29"/></name></name> <operator pos:line="208" pos:column="30">==<pos:position pos:line="208" pos:column="32"/></operator> <name><name pos:line="208" pos:column="33">r<pos:position pos:line="208" pos:column="34"/></name><operator pos:line="208" pos:column="34">-&gt;<pos:position pos:line="208" pos:column="39"/></operator><name pos:line="208" pos:column="36">proto_input_filters<pos:position pos:line="208" pos:column="55"/></name></name></expr>)<pos:position pos:line="208" pos:column="56"/></condition><then pos:line="208" pos:column="56"> <block pos:line="208" pos:column="57">{
            <expr_stmt><expr><name pos:line="209" pos:column="13">rb_method<pos:position pos:line="209" pos:column="22"/></name> <operator pos:line="209" pos:column="23">=<pos:position pos:line="209" pos:column="24"/></operator> <name pos:line="209" pos:column="25">RB_STREAM_CL<pos:position pos:line="209" pos:column="37"/></name></expr>;<pos:position pos:line="209" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="210" pos:column="10"/></block></then>
        <elseif pos:line="211" pos:column="9">else <if pos:line="211" pos:column="14">if <condition pos:line="211" pos:column="17">(<expr><operator pos:line="211" pos:column="18">!<pos:position pos:line="211" pos:column="19"/></operator><name pos:line="211" pos:column="19">force10<pos:position pos:line="211" pos:column="26"/></name>
                  <operator pos:line="212" pos:column="19">&amp;&amp;<pos:position pos:line="212" pos:column="29"/></operator> <operator pos:line="212" pos:column="22">(<pos:position pos:line="212" pos:column="23"/></operator><call><name pos:line="212" pos:column="23">apr_table_get<pos:position pos:line="212" pos:column="36"/></name><argument_list pos:line="212" pos:column="36">(<argument><expr><name><name pos:line="212" pos:column="37">r<pos:position pos:line="212" pos:column="38"/></name><operator pos:line="212" pos:column="38">-&gt;<pos:position pos:line="212" pos:column="43"/></operator><name pos:line="212" pos:column="40">subprocess_env<pos:position pos:line="212" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="212" pos:column="56">"proxy-sendchunks"<pos:position pos:line="212" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="212" pos:column="75"/></argument_list></call>
                      <operator pos:line="213" pos:column="23">||<pos:position pos:line="213" pos:column="25"/></operator> <call><name pos:line="213" pos:column="26">apr_table_get<pos:position pos:line="213" pos:column="39"/></name><argument_list pos:line="213" pos:column="39">(<argument><expr><name><name pos:line="213" pos:column="40">r<pos:position pos:line="213" pos:column="41"/></name><operator pos:line="213" pos:column="41">-&gt;<pos:position pos:line="213" pos:column="46"/></operator><name pos:line="213" pos:column="43">subprocess_env<pos:position pos:line="213" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="213" pos:column="59">"proxy-sendchunked"<pos:position pos:line="213" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="213" pos:column="79"/></argument_list></call><operator pos:line="213" pos:column="79">)<pos:position pos:line="213" pos:column="80"/></operator>
                  <operator pos:line="214" pos:column="19">&amp;&amp;<pos:position pos:line="214" pos:column="29"/></operator> <operator pos:line="214" pos:column="22">!<pos:position pos:line="214" pos:column="23"/></operator><call><name pos:line="214" pos:column="23">apr_table_get<pos:position pos:line="214" pos:column="36"/></name><argument_list pos:line="214" pos:column="36">(<argument><expr><name><name pos:line="214" pos:column="37">r<pos:position pos:line="214" pos:column="38"/></name><operator pos:line="214" pos:column="38">-&gt;<pos:position pos:line="214" pos:column="43"/></operator><name pos:line="214" pos:column="40">subprocess_env<pos:position pos:line="214" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="214" pos:column="56">"proxy-sendcl"<pos:position pos:line="214" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="214" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="214" pos:column="72"/></condition><then pos:line="214" pos:column="72"> <block pos:line="214" pos:column="73">{
            <expr_stmt><expr><name pos:line="215" pos:column="13">rb_method<pos:position pos:line="215" pos:column="22"/></name> <operator pos:line="215" pos:column="23">=<pos:position pos:line="215" pos:column="24"/></operator> <name pos:line="215" pos:column="25">RB_STREAM_CHUNKED<pos:position pos:line="215" pos:column="42"/></name></expr>;<pos:position pos:line="215" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="216" pos:column="10"/></block></then></if></elseif>
        <else pos:line="217" pos:column="9">else <block pos:line="217" pos:column="14">{
            <expr_stmt><expr><name pos:line="218" pos:column="13">rb_method<pos:position pos:line="218" pos:column="22"/></name> <operator pos:line="218" pos:column="23">=<pos:position pos:line="218" pos:column="24"/></operator> <name pos:line="218" pos:column="25">RB_SPOOL_CL<pos:position pos:line="218" pos:column="36"/></name></expr>;<pos:position pos:line="218" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="219" pos:column="10"/></block></else></if>
    }<pos:position pos:line="220" pos:column="6"/></block></then></if></elseif>
    <else pos:line="221" pos:column="5">else <block pos:line="221" pos:column="10">{
        <comment type="block" pos:line="222" pos:column="9">/* This is an appropriate default; very efficient for no-body
         * requests, and has the behavior that it will not add any C-L
         * when the old_cl_val is NULL.
         */</comment>
        <expr_stmt><expr><name pos:line="226" pos:column="9">rb_method<pos:position pos:line="226" pos:column="18"/></name> <operator pos:line="226" pos:column="19">=<pos:position pos:line="226" pos:column="20"/></operator> <name pos:line="226" pos:column="21">RB_SPOOL_CL<pos:position pos:line="226" pos:column="32"/></name></expr>;<pos:position pos:line="226" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="227" pos:column="6"/></block></else></if>

<comment type="block" pos:line="229" pos:column="1">/* Yes I hate gotos.  This is the subrequest shortcut */</comment>
<label><name pos:line="230" pos:column="1">skip_body<pos:position pos:line="230" pos:column="10"/></name>:<pos:position pos:line="230" pos:column="11"/></label>
    <comment type="block" pos:line="231" pos:column="5">/*
     * Handle Connection: header if we do HTTP/1.1 request:
     * If we plan to close the backend connection sent Connection: close
     * otherwise sent Connection: Keep-Alive.
     */</comment>
    <if pos:line="236" pos:column="5">if <condition pos:line="236" pos:column="8">(<expr><operator pos:line="236" pos:column="9">!<pos:position pos:line="236" pos:column="10"/></operator><name pos:line="236" pos:column="10">force10<pos:position pos:line="236" pos:column="17"/></name></expr>)<pos:position pos:line="236" pos:column="18"/></condition><then pos:line="236" pos:column="18"> <block pos:line="236" pos:column="19">{
        <if pos:line="237" pos:column="9">if <condition pos:line="237" pos:column="12">(<expr><name><name pos:line="237" pos:column="13">p_conn<pos:position pos:line="237" pos:column="19"/></name><operator pos:line="237" pos:column="19">-&gt;<pos:position pos:line="237" pos:column="24"/></operator><name pos:line="237" pos:column="21">close<pos:position pos:line="237" pos:column="26"/></name></name></expr>)<pos:position pos:line="237" pos:column="27"/></condition><then pos:line="237" pos:column="27"> <block pos:line="237" pos:column="28">{
            <expr_stmt><expr><name pos:line="238" pos:column="13">buf<pos:position pos:line="238" pos:column="16"/></name> <operator pos:line="238" pos:column="17">=<pos:position pos:line="238" pos:column="18"/></operator> <call><name pos:line="238" pos:column="19">apr_pstrdup<pos:position pos:line="238" pos:column="30"/></name><argument_list pos:line="238" pos:column="30">(<argument><expr><name pos:line="238" pos:column="31">p<pos:position pos:line="238" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="238" pos:column="34">"Connection: close"<pos:position pos:line="238" pos:column="53"/></literal> <name pos:line="238" pos:column="54">CRLF<pos:position pos:line="238" pos:column="58"/></name></expr></argument>)<pos:position pos:line="238" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="239" pos:column="10"/></block></then>
        <else pos:line="240" pos:column="9">else <block pos:line="240" pos:column="14">{
            <expr_stmt><expr><name pos:line="241" pos:column="13">buf<pos:position pos:line="241" pos:column="16"/></name> <operator pos:line="241" pos:column="17">=<pos:position pos:line="241" pos:column="18"/></operator> <call><name pos:line="241" pos:column="19">apr_pstrdup<pos:position pos:line="241" pos:column="30"/></name><argument_list pos:line="241" pos:column="30">(<argument><expr><name pos:line="241" pos:column="31">p<pos:position pos:line="241" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="241" pos:column="34">"Connection: Keep-Alive"<pos:position pos:line="241" pos:column="58"/></literal> <name pos:line="241" pos:column="59">CRLF<pos:position pos:line="241" pos:column="63"/></name></expr></argument>)<pos:position pos:line="241" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="242" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="243" pos:column="9">ap_xlate_proto_to_ascii<pos:position pos:line="243" pos:column="32"/></name><argument_list pos:line="243" pos:column="32">(<argument><expr><name pos:line="243" pos:column="33">buf<pos:position pos:line="243" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="243" pos:column="38">strlen<pos:position pos:line="243" pos:column="44"/></name><argument_list pos:line="243" pos:column="44">(<argument><expr><name pos:line="243" pos:column="45">buf<pos:position pos:line="243" pos:column="48"/></name></expr></argument>)<pos:position pos:line="243" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="243" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="244" pos:column="9">e<pos:position pos:line="244" pos:column="10"/></name> <operator pos:line="244" pos:column="11">=<pos:position pos:line="244" pos:column="12"/></operator> <call><name pos:line="244" pos:column="13">apr_bucket_pool_create<pos:position pos:line="244" pos:column="35"/></name><argument_list pos:line="244" pos:column="35">(<argument><expr><name pos:line="244" pos:column="36">buf<pos:position pos:line="244" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="244" pos:column="41">strlen<pos:position pos:line="244" pos:column="47"/></name><argument_list pos:line="244" pos:column="47">(<argument><expr><name pos:line="244" pos:column="48">buf<pos:position pos:line="244" pos:column="51"/></name></expr></argument>)<pos:position pos:line="244" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="244" pos:column="54">p<pos:position pos:line="244" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="244" pos:column="57">c<pos:position pos:line="244" pos:column="58"/></name><operator pos:line="244" pos:column="58">-&gt;<pos:position pos:line="244" pos:column="63"/></operator><name pos:line="244" pos:column="60">bucket_alloc<pos:position pos:line="244" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="244" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="245" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="245" pos:column="32"/></name><argument_list pos:line="245" pos:column="32">(<argument><expr><name pos:line="245" pos:column="33">header_brigade<pos:position pos:line="245" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="245" pos:column="49">e<pos:position pos:line="245" pos:column="50"/></name></expr></argument>)<pos:position pos:line="245" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="246" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="248" pos:column="5">/* send the request body, if any. */</comment>
    <switch pos:line="249" pos:column="5">switch<condition pos:line="249" pos:column="11">(<expr><name pos:line="249" pos:column="12">rb_method<pos:position pos:line="249" pos:column="21"/></name></expr>)<pos:position pos:line="249" pos:column="22"/></condition> <block pos:line="249" pos:column="23">{
    <case pos:line="250" pos:column="5">case <expr><name pos:line="250" pos:column="10">RB_STREAM_CHUNKED<pos:position pos:line="250" pos:column="27"/></name></expr>:<pos:position pos:line="250" pos:column="28"/></case>
        <expr_stmt><expr><name pos:line="251" pos:column="9">rv<pos:position pos:line="251" pos:column="11"/></name> <operator pos:line="251" pos:column="12">=<pos:position pos:line="251" pos:column="13"/></operator> <call><name pos:line="251" pos:column="14">stream_reqbody_chunked<pos:position pos:line="251" pos:column="36"/></name><argument_list pos:line="251" pos:column="36">(<argument><expr><name pos:line="251" pos:column="37">p<pos:position pos:line="251" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="251" pos:column="40">r<pos:position pos:line="251" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="251" pos:column="43">p_conn<pos:position pos:line="251" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="251" pos:column="51">origin<pos:position pos:line="251" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="251" pos:column="59">header_brigade<pos:position pos:line="251" pos:column="73"/></name></expr></argument>,
                                        <argument><expr><name pos:line="252" pos:column="41">input_brigade<pos:position pos:line="252" pos:column="54"/></name></expr></argument>)<pos:position pos:line="252" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="56"/></expr_stmt>
        <break pos:line="253" pos:column="9">break;<pos:position pos:line="253" pos:column="15"/></break>
    <case pos:line="254" pos:column="5">case <expr><name pos:line="254" pos:column="10">RB_STREAM_CL<pos:position pos:line="254" pos:column="22"/></name></expr>:<pos:position pos:line="254" pos:column="23"/></case>
        <expr_stmt><expr><name pos:line="255" pos:column="9">rv<pos:position pos:line="255" pos:column="11"/></name> <operator pos:line="255" pos:column="12">=<pos:position pos:line="255" pos:column="13"/></operator> <call><name pos:line="255" pos:column="14">stream_reqbody_cl<pos:position pos:line="255" pos:column="31"/></name><argument_list pos:line="255" pos:column="31">(<argument><expr><name pos:line="255" pos:column="32">p<pos:position pos:line="255" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="35">r<pos:position pos:line="255" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="38">p_conn<pos:position pos:line="255" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="46">origin<pos:position pos:line="255" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="54">header_brigade<pos:position pos:line="255" pos:column="68"/></name></expr></argument>,
                                   <argument><expr><name pos:line="256" pos:column="36">input_brigade<pos:position pos:line="256" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="256" pos:column="51">old_cl_val<pos:position pos:line="256" pos:column="61"/></name></expr></argument>)<pos:position pos:line="256" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="63"/></expr_stmt>
        <break pos:line="257" pos:column="9">break;<pos:position pos:line="257" pos:column="15"/></break>
    <case pos:line="258" pos:column="5">case <expr><name pos:line="258" pos:column="10">RB_SPOOL_CL<pos:position pos:line="258" pos:column="21"/></name></expr>:<pos:position pos:line="258" pos:column="22"/></case>
        <expr_stmt><expr><name pos:line="259" pos:column="9">rv<pos:position pos:line="259" pos:column="11"/></name> <operator pos:line="259" pos:column="12">=<pos:position pos:line="259" pos:column="13"/></operator> <call><name pos:line="259" pos:column="14">spool_reqbody_cl<pos:position pos:line="259" pos:column="30"/></name><argument_list pos:line="259" pos:column="30">(<argument><expr><name pos:line="259" pos:column="31">p<pos:position pos:line="259" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="259" pos:column="34">r<pos:position pos:line="259" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="259" pos:column="37">p_conn<pos:position pos:line="259" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="259" pos:column="45">origin<pos:position pos:line="259" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="259" pos:column="53">header_brigade<pos:position pos:line="259" pos:column="67"/></name></expr></argument>,
                                  <argument><expr><name pos:line="260" pos:column="35">input_brigade<pos:position pos:line="260" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="260" pos:column="50">(<pos:position pos:line="260" pos:column="51"/></operator><name pos:line="260" pos:column="51">old_cl_val<pos:position pos:line="260" pos:column="61"/></name> <operator pos:line="260" pos:column="62">!=<pos:position pos:line="260" pos:column="64"/></operator> <name pos:line="260" pos:column="65">NULL<pos:position pos:line="260" pos:column="69"/></name><operator pos:line="260" pos:column="69">)<pos:position pos:line="260" pos:column="70"/></operator>
                                              <operator pos:line="261" pos:column="47">||<pos:position pos:line="261" pos:column="49"/></operator> <operator pos:line="261" pos:column="50">(<pos:position pos:line="261" pos:column="51"/></operator><name pos:line="261" pos:column="51">old_te_val<pos:position pos:line="261" pos:column="61"/></name> <operator pos:line="261" pos:column="62">!=<pos:position pos:line="261" pos:column="64"/></operator> <name pos:line="261" pos:column="65">NULL<pos:position pos:line="261" pos:column="69"/></name><operator pos:line="261" pos:column="69">)<pos:position pos:line="261" pos:column="70"/></operator>
                                              <operator pos:line="262" pos:column="47">||<pos:position pos:line="262" pos:column="49"/></operator> <operator pos:line="262" pos:column="50">(<pos:position pos:line="262" pos:column="51"/></operator><name pos:line="262" pos:column="51">bytes_read<pos:position pos:line="262" pos:column="61"/></name> <operator pos:line="262" pos:column="62">&gt;<pos:position pos:line="262" pos:column="66"/></operator> <literal type="number" pos:line="262" pos:column="64">0<pos:position pos:line="262" pos:column="65"/></literal><operator pos:line="262" pos:column="65">)<pos:position pos:line="262" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="262" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="68"/></expr_stmt>
        <break pos:line="263" pos:column="9">break;<pos:position pos:line="263" pos:column="15"/></break>
    <default pos:line="264" pos:column="5">default:<pos:position pos:line="264" pos:column="13"/></default>
        <comment type="block" pos:line="265" pos:column="9">/* shouldn't be possible */</comment>
        <expr_stmt><expr><name pos:line="266" pos:column="9">rv<pos:position pos:line="266" pos:column="11"/></name> <operator pos:line="266" pos:column="12">=<pos:position pos:line="266" pos:column="13"/></operator> <name pos:line="266" pos:column="14">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="266" pos:column="40"/></name></expr> ;<pos:position pos:line="266" pos:column="42"/></expr_stmt>
        <break pos:line="267" pos:column="9">break;<pos:position pos:line="267" pos:column="15"/></break>
    }<pos:position pos:line="268" pos:column="6"/></block></switch>

    <if pos:line="270" pos:column="5">if <condition pos:line="270" pos:column="8">(<expr><name pos:line="270" pos:column="9">rv<pos:position pos:line="270" pos:column="11"/></name> <operator pos:line="270" pos:column="12">!=<pos:position pos:line="270" pos:column="14"/></operator> <name pos:line="270" pos:column="15">OK<pos:position pos:line="270" pos:column="17"/></name></expr>)<pos:position pos:line="270" pos:column="18"/></condition><then pos:line="270" pos:column="18"> <block pos:line="270" pos:column="19">{
        <comment type="block" pos:line="271" pos:column="9">/* apr_status_t value has been logged in lower level method */</comment>
        <expr_stmt><expr><call><name pos:line="272" pos:column="9">ap_log_rerror<pos:position pos:line="272" pos:column="22"/></name><argument_list pos:line="272" pos:column="22">(<argument><expr><name pos:line="272" pos:column="23">APLOG_MARK<pos:position pos:line="272" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="272" pos:column="35">APLOG_ERR<pos:position pos:line="272" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="272" pos:column="46">0<pos:position pos:line="272" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="272" pos:column="49">r<pos:position pos:line="272" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="272" pos:column="52">APLOGNO<pos:position pos:line="272" pos:column="59"/></name><argument_list pos:line="272" pos:column="59">(<argument><expr><literal type="number" pos:line="272" pos:column="60">01097<pos:position pos:line="272" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="272" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="273" pos:column="23">"pass request body failed to %pI (%s) from %s (%s)"<pos:position pos:line="273" pos:column="74"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="274" pos:column="23">p_conn<pos:position pos:line="274" pos:column="29"/></name><operator pos:line="274" pos:column="29">-&gt;<pos:position pos:line="274" pos:column="34"/></operator><name pos:line="274" pos:column="31">addr<pos:position pos:line="274" pos:column="35"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="274" pos:column="37">p_conn<pos:position pos:line="274" pos:column="43"/></name><operator pos:line="274" pos:column="43">-&gt;<pos:position pos:line="274" pos:column="48"/></operator><name pos:line="274" pos:column="45">hostname<pos:position pos:line="274" pos:column="53"/></name></name></expr> ?<pos:position pos:line="274" pos:column="55"/></condition><then pos:line="274" pos:column="55"> <expr><name><name pos:line="274" pos:column="56">p_conn<pos:position pos:line="274" pos:column="62"/></name><operator pos:line="274" pos:column="62">-&gt;<pos:position pos:line="274" pos:column="67"/></operator><name pos:line="274" pos:column="64">hostname<pos:position pos:line="274" pos:column="72"/></name></name></expr></then><else pos:line="274" pos:column="72">: <expr><literal type="string" pos:line="274" pos:column="74">""<pos:position pos:line="274" pos:column="76"/></literal></expr></else></ternary></expr></argument>,
                      <argument><expr><name><name pos:line="275" pos:column="23">c<pos:position pos:line="275" pos:column="24"/></name><operator pos:line="275" pos:column="24">-&gt;<pos:position pos:line="275" pos:column="29"/></operator><name pos:line="275" pos:column="26">client_ip<pos:position pos:line="275" pos:column="35"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="275" pos:column="37">c<pos:position pos:line="275" pos:column="38"/></name><operator pos:line="275" pos:column="38">-&gt;<pos:position pos:line="275" pos:column="43"/></operator><name pos:line="275" pos:column="40">remote_host<pos:position pos:line="275" pos:column="51"/></name></name></expr> ?<pos:position pos:line="275" pos:column="53"/></condition><then pos:line="275" pos:column="53"> <expr><name><name pos:line="275" pos:column="54">c<pos:position pos:line="275" pos:column="55"/></name><operator pos:line="275" pos:column="55">-&gt;<pos:position pos:line="275" pos:column="60"/></operator><name pos:line="275" pos:column="57">remote_host<pos:position pos:line="275" pos:column="68"/></name></name></expr></then><else pos:line="275" pos:column="68">: <expr><literal type="string" pos:line="275" pos:column="70">""<pos:position pos:line="275" pos:column="72"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="275" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="74"/></expr_stmt>
        <return pos:line="276" pos:column="9">return <expr><name pos:line="276" pos:column="16">rv<pos:position pos:line="276" pos:column="18"/></name></expr>;<pos:position pos:line="276" pos:column="19"/></return>
    }<pos:position pos:line="277" pos:column="6"/></block></then></if>

    <return pos:line="279" pos:column="5">return <expr><name pos:line="279" pos:column="12">OK<pos:position pos:line="279" pos:column="14"/></name></expr>;<pos:position pos:line="279" pos:column="15"/></return>
}<pos:position pos:line="280" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4031.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">do_headers_fixup<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">request_rec<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">r<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">apr_table_t<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">headers<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">apr_array_header_t<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">fixup<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">int<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">early<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">echo_do<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">v<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">val<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>;<pos:position pos:line="8" pos:column="16"/></init> <condition><expr><name pos:line="8" pos:column="17">i<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&lt;<pos:position pos:line="8" pos:column="23"/></operator> <name><name pos:line="8" pos:column="21">fixup<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">nelts<pos:position pos:line="8" pos:column="33"/></name></name></expr>;<pos:position pos:line="8" pos:column="34"/></condition> <incr><expr><operator pos:line="8" pos:column="35">++<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="37">i<pos:position pos:line="8" pos:column="38"/></name></expr></incr>)<pos:position pos:line="8" pos:column="39"/></control> <block pos:line="8" pos:column="40">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">header_entry<pos:position pos:line="9" pos:column="21"/></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">hdr<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><operator pos:line="9" pos:column="29">&amp;<pos:position pos:line="9" pos:column="34"/></operator><operator pos:line="9" pos:column="30">(<pos:position pos:line="9" pos:column="31"/></operator><operator pos:line="9" pos:column="31">(<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">header_entry<pos:position pos:line="9" pos:column="44"/></name> <operator pos:line="9" pos:column="45">*<pos:position pos:line="9" pos:column="46"/></operator><operator pos:line="9" pos:column="46">)<pos:position pos:line="9" pos:column="47"/></operator> <operator pos:line="9" pos:column="48">(<pos:position pos:line="9" pos:column="49"/></operator><name><name pos:line="9" pos:column="49">fixup<pos:position pos:line="9" pos:column="54"/></name><operator pos:line="9" pos:column="54">-&gt;<pos:position pos:line="9" pos:column="59"/></operator><name pos:line="9" pos:column="56">elts<pos:position pos:line="9" pos:column="60"/></name></name><operator pos:line="9" pos:column="60">)<pos:position pos:line="9" pos:column="61"/></operator><operator pos:line="9" pos:column="61">)<pos:position pos:line="9" pos:column="62"/></operator><index pos:line="9" pos:column="62">[<expr><name pos:line="9" pos:column="63">i<pos:position pos:line="9" pos:column="64"/></name></expr>]<pos:position pos:line="9" pos:column="65"/></index></expr></init></decl>;<pos:position pos:line="9" pos:column="66"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">envar<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><name><name pos:line="10" pos:column="29">hdr<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">condition_var<pos:position pos:line="10" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="48"/></decl_stmt>

        <comment type="block" pos:line="12" pos:column="9">/* ignore early headers in late calls */</comment>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">early<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">&amp;&amp;<pos:position pos:line="13" pos:column="30"/></operator> <operator pos:line="13" pos:column="23">(<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">envar<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">==<pos:position pos:line="13" pos:column="32"/></operator> <name pos:line="13" pos:column="33">condition_early<pos:position pos:line="13" pos:column="48"/></name><operator pos:line="13" pos:column="48">)<pos:position pos:line="13" pos:column="49"/></operator></expr>)<pos:position pos:line="13" pos:column="50"/></condition><then pos:line="13" pos:column="50"> <block pos:line="13" pos:column="51">{
            <continue pos:line="14" pos:column="13">continue;<pos:position pos:line="14" pos:column="22"/></continue>
        }<pos:position pos:line="15" pos:column="10"/></block></then>
        <comment type="block" pos:line="16" pos:column="9">/* ignore late headers in early calls */</comment>
        <elseif pos:line="17" pos:column="9">else <if pos:line="17" pos:column="14">if <condition pos:line="17" pos:column="17">(<expr><name pos:line="17" pos:column="18">early<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">&amp;&amp;<pos:position pos:line="17" pos:column="34"/></operator> <operator pos:line="17" pos:column="27">(<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="28">envar<pos:position pos:line="17" pos:column="33"/></name> <operator pos:line="17" pos:column="34">!=<pos:position pos:line="17" pos:column="36"/></operator> <name pos:line="17" pos:column="37">condition_early<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">)<pos:position pos:line="17" pos:column="53"/></operator></expr>)<pos:position pos:line="17" pos:column="54"/></condition><then pos:line="17" pos:column="54"> <block pos:line="17" pos:column="55">{
            <continue pos:line="18" pos:column="13">continue;<pos:position pos:line="18" pos:column="22"/></continue>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if></elseif>
        <comment type="block" pos:line="20" pos:column="9">/* Do we have an expression to evaluate? */</comment>
        <elseif pos:line="21" pos:column="9">else <if pos:line="21" pos:column="14">if <condition pos:line="21" pos:column="17">(<expr><name><name pos:line="21" pos:column="18">hdr<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">expr<pos:position pos:line="21" pos:column="27"/></name></name> <operator pos:line="21" pos:column="28">!=<pos:position pos:line="21" pos:column="30"/></operator> <name pos:line="21" pos:column="31">NULL<pos:position pos:line="21" pos:column="35"/></name></expr>)<pos:position pos:line="21" pos:column="36"/></condition><then pos:line="21" pos:column="36"> <block pos:line="21" pos:column="37">{
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">int<pos:position pos:line="22" pos:column="16"/></name></type> <name pos:line="22" pos:column="17">err<pos:position pos:line="22" pos:column="20"/></name> <init pos:line="22" pos:column="21">= <expr><literal type="number" pos:line="22" pos:column="23">0<pos:position pos:line="22" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="25"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="23" pos:column="13">int<pos:position pos:line="23" pos:column="16"/></name></type> <name pos:line="23" pos:column="17">eval<pos:position pos:line="23" pos:column="21"/></name> <init pos:line="23" pos:column="22">= <expr><call><name pos:line="23" pos:column="24">ap_expr_eval<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name pos:line="23" pos:column="37">r<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="40">hdr<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">expr<pos:position pos:line="23" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="51">&amp;<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="52">err<pos:position pos:line="23" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="57">NULL<pos:position pos:line="23" pos:column="61"/></name></expr></argument>,
                                    <argument><expr><name pos:line="24" pos:column="37">ap_expr_string<pos:position pos:line="24" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="53">NULL<pos:position pos:line="24" pos:column="57"/></name></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="59"/></decl_stmt>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><name pos:line="25" pos:column="17">err<pos:position pos:line="25" pos:column="20"/></name></expr>)<pos:position pos:line="25" pos:column="21"/></condition><then pos:line="25" pos:column="21"> <block pos:line="25" pos:column="22">{
                <expr_stmt><expr><call><name pos:line="26" pos:column="17">ap_log_rerror<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">APLOG_MARK<pos:position pos:line="26" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">APLOG_ERR<pos:position pos:line="26" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="54">0<pos:position pos:line="26" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="57">r<pos:position pos:line="26" pos:column="58"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="27" pos:column="31">"Failed to evaluate expression - ignoring"<pos:position pos:line="27" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="75"/></expr_stmt>
            }<pos:position pos:line="28" pos:column="14"/></block></then>
            <elseif pos:line="29" pos:column="13">else <if pos:line="29" pos:column="18">if <condition pos:line="29" pos:column="21">(<expr><operator pos:line="29" pos:column="22">!<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="23">eval<pos:position pos:line="29" pos:column="27"/></name></expr>)<pos:position pos:line="29" pos:column="28"/></condition><then pos:line="29" pos:column="28"> <block pos:line="29" pos:column="29">{
                <continue pos:line="30" pos:column="17">continue;<pos:position pos:line="30" pos:column="26"/></continue>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if></elseif>
        <comment type="block" pos:line="33" pos:column="9">/* Have any conditional envar-controlled Header processing to do? */</comment>
        <elseif pos:line="34" pos:column="9">else <if pos:line="34" pos:column="14">if <condition pos:line="34" pos:column="17">(<expr><name pos:line="34" pos:column="18">envar<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">&amp;&amp;<pos:position pos:line="34" pos:column="34"/></operator> <operator pos:line="34" pos:column="27">!<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="28">early<pos:position pos:line="34" pos:column="33"/></name></expr>)<pos:position pos:line="34" pos:column="34"/></condition><then pos:line="34" pos:column="34"> <block pos:line="34" pos:column="35">{
            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><operator pos:line="35" pos:column="17">*<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">envar<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">!=<pos:position pos:line="35" pos:column="26"/></operator> <literal type="char" pos:line="35" pos:column="27">'!'<pos:position pos:line="35" pos:column="30"/></literal></expr>)<pos:position pos:line="35" pos:column="31"/></condition><then pos:line="35" pos:column="31"> <block pos:line="35" pos:column="32">{
                <if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><call><name pos:line="36" pos:column="21">apr_table_get<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><name><name pos:line="36" pos:column="35">r<pos:position pos:line="36" pos:column="36"/></name><operator pos:line="36" pos:column="36">-&gt;<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="38">subprocess_env<pos:position pos:line="36" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="54">envar<pos:position pos:line="36" pos:column="59"/></name></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call> <operator pos:line="36" pos:column="61">==<pos:position pos:line="36" pos:column="63"/></operator> <name pos:line="36" pos:column="64">NULL<pos:position pos:line="36" pos:column="68"/></name></expr>)<pos:position pos:line="36" pos:column="69"/></condition><then pos:line="36" pos:column="69">
                    <block type="pseudo"><continue pos:line="37" pos:column="21">continue;<pos:position pos:line="37" pos:column="30"/></continue></block></then></if>
            }<pos:position pos:line="38" pos:column="14"/></block></then>
            <else pos:line="39" pos:column="13">else <block pos:line="39" pos:column="18">{
                <if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><call><name pos:line="40" pos:column="21">apr_table_get<pos:position pos:line="40" pos:column="34"/></name><argument_list pos:line="40" pos:column="34">(<argument><expr><name><name pos:line="40" pos:column="35">r<pos:position pos:line="40" pos:column="36"/></name><operator pos:line="40" pos:column="36">-&gt;<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="38">subprocess_env<pos:position pos:line="40" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="54">&amp;<pos:position pos:line="40" pos:column="59"/></operator><name><name pos:line="40" pos:column="55">envar<pos:position pos:line="40" pos:column="60"/></name><index pos:line="40" pos:column="60">[<expr><literal type="number" pos:line="40" pos:column="61">1<pos:position pos:line="40" pos:column="62"/></literal></expr>]<pos:position pos:line="40" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></call> <operator pos:line="40" pos:column="65">!=<pos:position pos:line="40" pos:column="67"/></operator> <name pos:line="40" pos:column="68">NULL<pos:position pos:line="40" pos:column="72"/></name></expr>)<pos:position pos:line="40" pos:column="73"/></condition><then pos:line="40" pos:column="73">
                    <block type="pseudo"><continue pos:line="41" pos:column="21">continue;<pos:position pos:line="41" pos:column="30"/></continue></block></then></if>
            }<pos:position pos:line="42" pos:column="14"/></block></else></if>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if></elseif></if>

        <switch pos:line="45" pos:column="9">switch <condition pos:line="45" pos:column="16">(<expr><name><name pos:line="45" pos:column="17">hdr<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">-&gt;<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="22">action<pos:position pos:line="45" pos:column="28"/></name></name></expr>)<pos:position pos:line="45" pos:column="29"/></condition> <block pos:line="45" pos:column="30">{
        <case pos:line="46" pos:column="9">case <expr><name pos:line="46" pos:column="14">hdr_add<pos:position pos:line="46" pos:column="21"/></name></expr>:<pos:position pos:line="46" pos:column="22"/></case>
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">apr_table_addn<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><name pos:line="47" pos:column="28">headers<pos:position pos:line="47" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="37">hdr<pos:position pos:line="47" pos:column="40"/></name><operator pos:line="47" pos:column="40">-&gt;<pos:position pos:line="47" pos:column="45"/></operator><name pos:line="47" pos:column="42">header<pos:position pos:line="47" pos:column="48"/></name></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="50">process_tags<pos:position pos:line="47" pos:column="62"/></name><argument_list pos:line="47" pos:column="62">(<argument><expr><name pos:line="47" pos:column="63">hdr<pos:position pos:line="47" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="68">r<pos:position pos:line="47" pos:column="69"/></name></expr></argument>)<pos:position pos:line="47" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="72"/></expr_stmt>
            <break pos:line="48" pos:column="13">break;<pos:position pos:line="48" pos:column="19"/></break>
        <case pos:line="49" pos:column="9">case <expr><name pos:line="49" pos:column="14">hdr_append<pos:position pos:line="49" pos:column="24"/></name></expr>:<pos:position pos:line="49" pos:column="25"/></case>
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">apr_table_mergen<pos:position pos:line="50" pos:column="29"/></name><argument_list pos:line="50" pos:column="29">(<argument><expr><name pos:line="50" pos:column="30">headers<pos:position pos:line="50" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="39">hdr<pos:position pos:line="50" pos:column="42"/></name><operator pos:line="50" pos:column="42">-&gt;<pos:position pos:line="50" pos:column="47"/></operator><name pos:line="50" pos:column="44">header<pos:position pos:line="50" pos:column="50"/></name></name></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="52">process_tags<pos:position pos:line="50" pos:column="64"/></name><argument_list pos:line="50" pos:column="64">(<argument><expr><name pos:line="50" pos:column="65">hdr<pos:position pos:line="50" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="70">r<pos:position pos:line="50" pos:column="71"/></name></expr></argument>)<pos:position pos:line="50" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="74"/></expr_stmt>
            <break pos:line="51" pos:column="13">break;<pos:position pos:line="51" pos:column="19"/></break>
        <case pos:line="52" pos:column="9">case <expr><name pos:line="52" pos:column="14">hdr_merge<pos:position pos:line="52" pos:column="23"/></name></expr>:<pos:position pos:line="52" pos:column="24"/></case>
            <expr_stmt><expr><name pos:line="53" pos:column="13">val<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <call><name pos:line="53" pos:column="19">apr_table_get<pos:position pos:line="53" pos:column="32"/></name><argument_list pos:line="53" pos:column="32">(<argument><expr><name pos:line="53" pos:column="33">headers<pos:position pos:line="53" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="42">hdr<pos:position pos:line="53" pos:column="45"/></name><operator pos:line="53" pos:column="45">-&gt;<pos:position pos:line="53" pos:column="50"/></operator><name pos:line="53" pos:column="47">header<pos:position pos:line="53" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="55"/></expr_stmt>
            <if pos:line="54" pos:column="13">if <condition pos:line="54" pos:column="16">(<expr><name pos:line="54" pos:column="17">val<pos:position pos:line="54" pos:column="20"/></name> <operator pos:line="54" pos:column="21">==<pos:position pos:line="54" pos:column="23"/></operator> <name pos:line="54" pos:column="24">NULL<pos:position pos:line="54" pos:column="28"/></name></expr>)<pos:position pos:line="54" pos:column="29"/></condition><then pos:line="54" pos:column="29"> <block pos:line="54" pos:column="30">{
                <expr_stmt><expr><call><name pos:line="55" pos:column="17">apr_table_addn<pos:position pos:line="55" pos:column="31"/></name><argument_list pos:line="55" pos:column="31">(<argument><expr><name pos:line="55" pos:column="32">headers<pos:position pos:line="55" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="41">hdr<pos:position pos:line="55" pos:column="44"/></name><operator pos:line="55" pos:column="44">-&gt;<pos:position pos:line="55" pos:column="49"/></operator><name pos:line="55" pos:column="46">header<pos:position pos:line="55" pos:column="52"/></name></name></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="54">process_tags<pos:position pos:line="55" pos:column="66"/></name><argument_list pos:line="55" pos:column="66">(<argument><expr><name pos:line="55" pos:column="67">hdr<pos:position pos:line="55" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="72">r<pos:position pos:line="55" pos:column="73"/></name></expr></argument>)<pos:position pos:line="55" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="76"/></expr_stmt>
            }<pos:position pos:line="56" pos:column="14"/></block></then> <else pos:line="56" pos:column="15">else <block pos:line="56" pos:column="20">{
                <decl_stmt><decl><type><name pos:line="57" pos:column="17">char<pos:position pos:line="57" pos:column="21"/></name> <modifier pos:line="57" pos:column="22">*<pos:position pos:line="57" pos:column="23"/></modifier></type><name pos:line="57" pos:column="23">new_val<pos:position pos:line="57" pos:column="30"/></name> <init pos:line="57" pos:column="31">= <expr><call><name pos:line="57" pos:column="33">process_tags<pos:position pos:line="57" pos:column="45"/></name><argument_list pos:line="57" pos:column="45">(<argument><expr><name pos:line="57" pos:column="46">hdr<pos:position pos:line="57" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="51">r<pos:position pos:line="57" pos:column="52"/></name></expr></argument>)<pos:position pos:line="57" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="57" pos:column="54"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="58" pos:column="17">apr_size_t<pos:position pos:line="58" pos:column="27"/></name></type> <name pos:line="58" pos:column="28">new_val_len<pos:position pos:line="58" pos:column="39"/></name> <init pos:line="58" pos:column="40">= <expr><call><name pos:line="58" pos:column="42">strlen<pos:position pos:line="58" pos:column="48"/></name><argument_list pos:line="58" pos:column="48">(<argument><expr><name pos:line="58" pos:column="49">new_val<pos:position pos:line="58" pos:column="56"/></name></expr></argument>)<pos:position pos:line="58" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="58" pos:column="58"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="59" pos:column="17">int<pos:position pos:line="59" pos:column="20"/></name></type> <name pos:line="59" pos:column="21">tok_found<pos:position pos:line="59" pos:column="30"/></name> <init pos:line="59" pos:column="31">= <expr><literal type="number" pos:line="59" pos:column="33">0<pos:position pos:line="59" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="59" pos:column="35"/></decl_stmt>

                <comment type="block" pos:line="61" pos:column="17">/* modified version of logic in ap_get_token() */</comment>
                <while pos:line="62" pos:column="17">while <condition pos:line="62" pos:column="23">(<expr><operator pos:line="62" pos:column="24">*<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="25">val<pos:position pos:line="62" pos:column="28"/></name></expr>)<pos:position pos:line="62" pos:column="29"/></condition> <block pos:line="62" pos:column="30">{
                    <decl_stmt><decl><type><specifier pos:line="63" pos:column="21">const<pos:position pos:line="63" pos:column="26"/></specifier> <name pos:line="63" pos:column="27">char<pos:position pos:line="63" pos:column="31"/></name> <modifier pos:line="63" pos:column="32">*<pos:position pos:line="63" pos:column="33"/></modifier></type><name pos:line="63" pos:column="33">tok_start<pos:position pos:line="63" pos:column="42"/></name></decl>;<pos:position pos:line="63" pos:column="43"/></decl_stmt>

                    <while pos:line="65" pos:column="21">while <condition pos:line="65" pos:column="27">(<expr><operator pos:line="65" pos:column="28">*<pos:position pos:line="65" pos:column="29"/></operator><name pos:line="65" pos:column="29">val<pos:position pos:line="65" pos:column="32"/></name> <operator pos:line="65" pos:column="33">&amp;&amp;<pos:position pos:line="65" pos:column="43"/></operator> <call><name pos:line="65" pos:column="36">apr_isspace<pos:position pos:line="65" pos:column="47"/></name><argument_list pos:line="65" pos:column="47">(<argument><expr><operator pos:line="65" pos:column="48">*<pos:position pos:line="65" pos:column="49"/></operator><name pos:line="65" pos:column="49">val<pos:position pos:line="65" pos:column="52"/></name></expr></argument>)<pos:position pos:line="65" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="54"/></condition>
                        <block type="pseudo"><expr_stmt><expr><operator pos:line="66" pos:column="25">++<pos:position pos:line="66" pos:column="27"/></operator><name pos:line="66" pos:column="27">val<pos:position pos:line="66" pos:column="30"/></name></expr>;<pos:position pos:line="66" pos:column="31"/></expr_stmt></block></while>

                    <expr_stmt><expr><name pos:line="68" pos:column="21">tok_start<pos:position pos:line="68" pos:column="30"/></name> <operator pos:line="68" pos:column="31">=<pos:position pos:line="68" pos:column="32"/></operator> <name pos:line="68" pos:column="33">val<pos:position pos:line="68" pos:column="36"/></name></expr>;<pos:position pos:line="68" pos:column="37"/></expr_stmt>

                    <while pos:line="70" pos:column="21">while <condition pos:line="70" pos:column="27">(<expr><operator pos:line="70" pos:column="28">*<pos:position pos:line="70" pos:column="29"/></operator><name pos:line="70" pos:column="29">val<pos:position pos:line="70" pos:column="32"/></name> <operator pos:line="70" pos:column="33">&amp;&amp;<pos:position pos:line="70" pos:column="43"/></operator> <operator pos:line="70" pos:column="36">*<pos:position pos:line="70" pos:column="37"/></operator><name pos:line="70" pos:column="37">val<pos:position pos:line="70" pos:column="40"/></name> <operator pos:line="70" pos:column="41">!=<pos:position pos:line="70" pos:column="43"/></operator> <literal type="char" pos:line="70" pos:column="44">','<pos:position pos:line="70" pos:column="47"/></literal></expr>)<pos:position pos:line="70" pos:column="48"/></condition> <block pos:line="70" pos:column="49">{
                        <if pos:line="71" pos:column="25">if <condition pos:line="71" pos:column="28">(<expr><operator pos:line="71" pos:column="29">*<pos:position pos:line="71" pos:column="30"/></operator><name pos:line="71" pos:column="30">val<pos:position pos:line="71" pos:column="33"/></name><operator pos:line="71" pos:column="33">++<pos:position pos:line="71" pos:column="35"/></operator> <operator pos:line="71" pos:column="36">==<pos:position pos:line="71" pos:column="38"/></operator> <literal type="char" pos:line="71" pos:column="39">'"'<pos:position pos:line="71" pos:column="42"/></literal></expr>)<pos:position pos:line="71" pos:column="43"/></condition><then pos:line="71" pos:column="43">
                            <block type="pseudo"><while pos:line="72" pos:column="29">while <condition pos:line="72" pos:column="35">(<expr><operator pos:line="72" pos:column="36">*<pos:position pos:line="72" pos:column="37"/></operator><name pos:line="72" pos:column="37">val<pos:position pos:line="72" pos:column="40"/></name></expr>)<pos:position pos:line="72" pos:column="41"/></condition>
                                <block type="pseudo"><if pos:line="73" pos:column="33">if <condition pos:line="73" pos:column="36">(<expr><operator pos:line="73" pos:column="37">*<pos:position pos:line="73" pos:column="38"/></operator><name pos:line="73" pos:column="38">val<pos:position pos:line="73" pos:column="41"/></name><operator pos:line="73" pos:column="41">++<pos:position pos:line="73" pos:column="43"/></operator> <operator pos:line="73" pos:column="44">==<pos:position pos:line="73" pos:column="46"/></operator> <literal type="char" pos:line="73" pos:column="47">'"'<pos:position pos:line="73" pos:column="50"/></literal></expr>)<pos:position pos:line="73" pos:column="51"/></condition><then pos:line="73" pos:column="51">
                                    <block type="pseudo"><break pos:line="74" pos:column="37">break;<pos:position pos:line="74" pos:column="43"/></break></block></then></if></block></while></block></then></if>
                    }<pos:position pos:line="75" pos:column="22"/></block></while>

                    <if pos:line="77" pos:column="21">if <condition pos:line="77" pos:column="24">(<expr><name pos:line="77" pos:column="25">new_val_len<pos:position pos:line="77" pos:column="36"/></name> <operator pos:line="77" pos:column="37">==<pos:position pos:line="77" pos:column="39"/></operator> <call pos:line="77" pos:column="40">(<name pos:line="77" pos:column="41">apr_size_t<pos:position pos:line="77" pos:column="51"/></name>)<argument_list pos:line="77" pos:column="52">(<argument><expr><name pos:line="77" pos:column="53">val<pos:position pos:line="77" pos:column="56"/></name> <operator pos:line="77" pos:column="57">-<pos:position pos:line="77" pos:column="58"/></operator> <name pos:line="77" pos:column="59">tok_start<pos:position pos:line="77" pos:column="68"/></name></expr></argument>)<pos:position pos:line="77" pos:column="69"/></argument_list></call>
                        <operator pos:line="78" pos:column="25">&amp;&amp;<pos:position pos:line="78" pos:column="35"/></operator> <operator pos:line="78" pos:column="28">!<pos:position pos:line="78" pos:column="29"/></operator><call><name pos:line="78" pos:column="29">strncmp<pos:position pos:line="78" pos:column="36"/></name><argument_list pos:line="78" pos:column="36">(<argument><expr><name pos:line="78" pos:column="37">tok_start<pos:position pos:line="78" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="48">new_val<pos:position pos:line="78" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="57">new_val_len<pos:position pos:line="78" pos:column="68"/></name></expr></argument>)<pos:position pos:line="78" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="70"/></condition><then pos:line="78" pos:column="70"> <block pos:line="78" pos:column="71">{
                        <expr_stmt><expr><name pos:line="79" pos:column="25">tok_found<pos:position pos:line="79" pos:column="34"/></name> <operator pos:line="79" pos:column="35">=<pos:position pos:line="79" pos:column="36"/></operator> <literal type="number" pos:line="79" pos:column="37">1<pos:position pos:line="79" pos:column="38"/></literal></expr>;<pos:position pos:line="79" pos:column="39"/></expr_stmt>
                        <break pos:line="80" pos:column="25">break;<pos:position pos:line="80" pos:column="31"/></break>
                    }<pos:position pos:line="81" pos:column="22"/></block></then></if>

                    <if pos:line="83" pos:column="21">if <condition pos:line="83" pos:column="24">(<expr><operator pos:line="83" pos:column="25">*<pos:position pos:line="83" pos:column="26"/></operator><name pos:line="83" pos:column="26">val<pos:position pos:line="83" pos:column="29"/></name></expr>)<pos:position pos:line="83" pos:column="30"/></condition><then pos:line="83" pos:column="30">
                        <block type="pseudo"><expr_stmt><expr><operator pos:line="84" pos:column="25">++<pos:position pos:line="84" pos:column="27"/></operator><name pos:line="84" pos:column="27">val<pos:position pos:line="84" pos:column="30"/></name></expr>;<pos:position pos:line="84" pos:column="31"/></expr_stmt></block></then></if>
                }<pos:position pos:line="85" pos:column="18"/></block></while>

                <if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><operator pos:line="87" pos:column="21">!<pos:position pos:line="87" pos:column="22"/></operator><name pos:line="87" pos:column="22">tok_found<pos:position pos:line="87" pos:column="31"/></name></expr>)<pos:position pos:line="87" pos:column="32"/></condition><then pos:line="87" pos:column="32"> <block pos:line="87" pos:column="33">{
                    <expr_stmt><expr><call><name pos:line="88" pos:column="21">apr_table_mergen<pos:position pos:line="88" pos:column="37"/></name><argument_list pos:line="88" pos:column="37">(<argument><expr><name pos:line="88" pos:column="38">headers<pos:position pos:line="88" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="47">hdr<pos:position pos:line="88" pos:column="50"/></name><operator pos:line="88" pos:column="50">-&gt;<pos:position pos:line="88" pos:column="55"/></operator><name pos:line="88" pos:column="52">header<pos:position pos:line="88" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="60">new_val<pos:position pos:line="88" pos:column="67"/></name></expr></argument>)<pos:position pos:line="88" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="69"/></expr_stmt>
                }<pos:position pos:line="89" pos:column="18"/></block></then></if>
            }<pos:position pos:line="90" pos:column="14"/></block></else></if>
            <break pos:line="91" pos:column="13">break;<pos:position pos:line="91" pos:column="19"/></break>
        <case pos:line="92" pos:column="9">case <expr><name pos:line="92" pos:column="14">hdr_set<pos:position pos:line="92" pos:column="21"/></name></expr>:<pos:position pos:line="92" pos:column="22"/></case>
            <if pos:line="93" pos:column="13">if <condition pos:line="93" pos:column="16">(<expr><operator pos:line="93" pos:column="17">!<pos:position pos:line="93" pos:column="18"/></operator><call><name pos:line="93" pos:column="18">strcasecmp<pos:position pos:line="93" pos:column="28"/></name><argument_list pos:line="93" pos:column="28">(<argument><expr><name><name pos:line="93" pos:column="29">hdr<pos:position pos:line="93" pos:column="32"/></name><operator pos:line="93" pos:column="32">-&gt;<pos:position pos:line="93" pos:column="37"/></operator><name pos:line="93" pos:column="34">header<pos:position pos:line="93" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="42">"Content-Type"<pos:position pos:line="93" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="58"/></condition><then pos:line="93" pos:column="58"> <block pos:line="93" pos:column="59">{
                 <expr_stmt><expr><call><name pos:line="94" pos:column="18">ap_set_content_type<pos:position pos:line="94" pos:column="37"/></name><argument_list pos:line="94" pos:column="37">(<argument><expr><name pos:line="94" pos:column="38">r<pos:position pos:line="94" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="94" pos:column="41">process_tags<pos:position pos:line="94" pos:column="53"/></name><argument_list pos:line="94" pos:column="53">(<argument><expr><name pos:line="94" pos:column="54">hdr<pos:position pos:line="94" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="59">r<pos:position pos:line="94" pos:column="60"/></name></expr></argument>)<pos:position pos:line="94" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="63"/></expr_stmt>
            }<pos:position pos:line="95" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="96" pos:column="13">apr_table_setn<pos:position pos:line="96" pos:column="27"/></name><argument_list pos:line="96" pos:column="27">(<argument><expr><name pos:line="96" pos:column="28">headers<pos:position pos:line="96" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="37">hdr<pos:position pos:line="96" pos:column="40"/></name><operator pos:line="96" pos:column="40">-&gt;<pos:position pos:line="96" pos:column="45"/></operator><name pos:line="96" pos:column="42">header<pos:position pos:line="96" pos:column="48"/></name></name></expr></argument>, <argument><expr><call><name pos:line="96" pos:column="50">process_tags<pos:position pos:line="96" pos:column="62"/></name><argument_list pos:line="96" pos:column="62">(<argument><expr><name pos:line="96" pos:column="63">hdr<pos:position pos:line="96" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="68">r<pos:position pos:line="96" pos:column="69"/></name></expr></argument>)<pos:position pos:line="96" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="96" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="72"/></expr_stmt>
            <break pos:line="97" pos:column="13">break;<pos:position pos:line="97" pos:column="19"/></break>
        <case pos:line="98" pos:column="9">case <expr><name pos:line="98" pos:column="14">hdr_unset<pos:position pos:line="98" pos:column="23"/></name></expr>:<pos:position pos:line="98" pos:column="24"/></case>
            <expr_stmt><expr><call><name pos:line="99" pos:column="13">apr_table_unset<pos:position pos:line="99" pos:column="28"/></name><argument_list pos:line="99" pos:column="28">(<argument><expr><name pos:line="99" pos:column="29">headers<pos:position pos:line="99" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="38">hdr<pos:position pos:line="99" pos:column="41"/></name><operator pos:line="99" pos:column="41">-&gt;<pos:position pos:line="99" pos:column="46"/></operator><name pos:line="99" pos:column="43">header<pos:position pos:line="99" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="51"/></expr_stmt>
            <break pos:line="100" pos:column="13">break;<pos:position pos:line="100" pos:column="19"/></break>
        <case pos:line="101" pos:column="9">case <expr><name pos:line="101" pos:column="14">hdr_echo<pos:position pos:line="101" pos:column="22"/></name></expr>:<pos:position pos:line="101" pos:column="23"/></case>
            <expr_stmt><expr><name><name pos:line="102" pos:column="13">v<pos:position pos:line="102" pos:column="14"/></name><operator pos:line="102" pos:column="14">.<pos:position pos:line="102" pos:column="15"/></operator><name pos:line="102" pos:column="15">r<pos:position pos:line="102" pos:column="16"/></name></name> <operator pos:line="102" pos:column="17">=<pos:position pos:line="102" pos:column="18"/></operator> <name pos:line="102" pos:column="19">r<pos:position pos:line="102" pos:column="20"/></name></expr>;<pos:position pos:line="102" pos:column="21"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="103" pos:column="13">v<pos:position pos:line="103" pos:column="14"/></name><operator pos:line="103" pos:column="14">.<pos:position pos:line="103" pos:column="15"/></operator><name pos:line="103" pos:column="15">hdr<pos:position pos:line="103" pos:column="18"/></name></name> <operator pos:line="103" pos:column="19">=<pos:position pos:line="103" pos:column="20"/></operator> <name pos:line="103" pos:column="21">hdr<pos:position pos:line="103" pos:column="24"/></name></expr>;<pos:position pos:line="103" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="104" pos:column="13">apr_table_do<pos:position pos:line="104" pos:column="25"/></name><argument_list pos:line="104" pos:column="25">(<argument><expr><operator pos:line="104" pos:column="26">(<pos:position pos:line="104" pos:column="27"/></operator><call><call><name pos:line="104" pos:column="27">int<pos:position pos:line="104" pos:column="30"/></name> <argument_list pos:line="104" pos:column="31">(<argument><expr><operator pos:line="104" pos:column="32">*<pos:position pos:line="104" pos:column="33"/></operator></expr></argument>)<pos:position pos:line="104" pos:column="34"/></argument_list></call> <argument_list pos:line="104" pos:column="35">(<argument><expr><name pos:line="104" pos:column="36">void<pos:position pos:line="104" pos:column="40"/></name> <operator pos:line="104" pos:column="41">*<pos:position pos:line="104" pos:column="42"/></operator></expr></argument>, <argument><expr><specifier pos:line="104" pos:column="44">const<pos:position pos:line="104" pos:column="49"/></specifier> <name pos:line="104" pos:column="50">char<pos:position pos:line="104" pos:column="54"/></name> <operator pos:line="104" pos:column="55">*<pos:position pos:line="104" pos:column="56"/></operator></expr></argument>, <argument><expr><specifier pos:line="104" pos:column="58">const<pos:position pos:line="104" pos:column="63"/></specifier> <name pos:line="104" pos:column="64">char<pos:position pos:line="104" pos:column="68"/></name> <operator pos:line="104" pos:column="69">*<pos:position pos:line="104" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="104" pos:column="71"/></argument_list></call><operator pos:line="104" pos:column="71">)<pos:position pos:line="104" pos:column="72"/></operator>
                         <name pos:line="105" pos:column="26">echo_header<pos:position pos:line="105" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="105" pos:column="39">(<pos:position pos:line="105" pos:column="40"/></operator><name pos:line="105" pos:column="40">void<pos:position pos:line="105" pos:column="44"/></name> <operator pos:line="105" pos:column="45">*<pos:position pos:line="105" pos:column="46"/></operator><operator pos:line="105" pos:column="46">)<pos:position pos:line="105" pos:column="47"/></operator> <operator pos:line="105" pos:column="48">&amp;<pos:position pos:line="105" pos:column="53"/></operator><name pos:line="105" pos:column="49">v<pos:position pos:line="105" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="105" pos:column="52">r<pos:position pos:line="105" pos:column="53"/></name><operator pos:line="105" pos:column="53">-&gt;<pos:position pos:line="105" pos:column="58"/></operator><name pos:line="105" pos:column="55">headers_in<pos:position pos:line="105" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="67">NULL<pos:position pos:line="105" pos:column="71"/></name></expr></argument>)<pos:position pos:line="105" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="73"/></expr_stmt>
            <break pos:line="106" pos:column="13">break;<pos:position pos:line="106" pos:column="19"/></break>
        <case pos:line="107" pos:column="9">case <expr><name pos:line="107" pos:column="14">hdr_edit<pos:position pos:line="107" pos:column="22"/></name></expr>:<pos:position pos:line="107" pos:column="23"/></case>
        <case pos:line="108" pos:column="9">case <expr><name pos:line="108" pos:column="14">hdr_edit_r<pos:position pos:line="108" pos:column="24"/></name></expr>:<pos:position pos:line="108" pos:column="25"/></case>
            <if pos:line="109" pos:column="13">if <condition pos:line="109" pos:column="16">(<expr><operator pos:line="109" pos:column="17">!<pos:position pos:line="109" pos:column="18"/></operator><call><name pos:line="109" pos:column="18">strcasecmp<pos:position pos:line="109" pos:column="28"/></name><argument_list pos:line="109" pos:column="28">(<argument><expr><name><name pos:line="109" pos:column="29">hdr<pos:position pos:line="109" pos:column="32"/></name><operator pos:line="109" pos:column="32">-&gt;<pos:position pos:line="109" pos:column="37"/></operator><name pos:line="109" pos:column="34">header<pos:position pos:line="109" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="42">"Content-Type"<pos:position pos:line="109" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="57"/></argument_list></call> <operator pos:line="109" pos:column="58">&amp;&amp;<pos:position pos:line="109" pos:column="68"/></operator> <name><name pos:line="109" pos:column="61">r<pos:position pos:line="109" pos:column="62"/></name><operator pos:line="109" pos:column="62">-&gt;<pos:position pos:line="109" pos:column="67"/></operator><name pos:line="109" pos:column="64">content_type<pos:position pos:line="109" pos:column="76"/></name></name></expr>)<pos:position pos:line="109" pos:column="77"/></condition><then pos:line="109" pos:column="77"> <block pos:line="109" pos:column="78">{
                <expr_stmt><expr><call><name pos:line="110" pos:column="17">ap_set_content_type<pos:position pos:line="110" pos:column="36"/></name><argument_list pos:line="110" pos:column="36">(<argument><expr><name pos:line="110" pos:column="37">r<pos:position pos:line="110" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="110" pos:column="40">process_regexp<pos:position pos:line="110" pos:column="54"/></name><argument_list pos:line="110" pos:column="54">(<argument><expr><name pos:line="110" pos:column="55">hdr<pos:position pos:line="110" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="110" pos:column="60">r<pos:position pos:line="110" pos:column="61"/></name><operator pos:line="110" pos:column="61">-&gt;<pos:position pos:line="110" pos:column="66"/></operator><name pos:line="110" pos:column="63">content_type<pos:position pos:line="110" pos:column="75"/></name></name></expr></argument>,
                                                      <argument><expr><name><name pos:line="111" pos:column="55">r<pos:position pos:line="111" pos:column="56"/></name><operator pos:line="111" pos:column="56">-&gt;<pos:position pos:line="111" pos:column="61"/></operator><name pos:line="111" pos:column="58">pool<pos:position pos:line="111" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="112" pos:column="14"/></block></then></if>
            <if pos:line="113" pos:column="13">if <condition pos:line="113" pos:column="16">(<expr><call><name pos:line="113" pos:column="17">apr_table_get<pos:position pos:line="113" pos:column="30"/></name><argument_list pos:line="113" pos:column="30">(<argument><expr><name pos:line="113" pos:column="31">headers<pos:position pos:line="113" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="40">hdr<pos:position pos:line="113" pos:column="43"/></name><operator pos:line="113" pos:column="43">-&gt;<pos:position pos:line="113" pos:column="48"/></operator><name pos:line="113" pos:column="45">header<pos:position pos:line="113" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="113" pos:column="53"/></condition><then pos:line="113" pos:column="53"> <block pos:line="113" pos:column="54">{
                <decl_stmt><decl><type><name pos:line="114" pos:column="17">edit_do<pos:position pos:line="114" pos:column="24"/></name></type> <name pos:line="114" pos:column="25">ed<pos:position pos:line="114" pos:column="27"/></name></decl>;<pos:position pos:line="114" pos:column="28"/></decl_stmt>

                <expr_stmt><expr><name><name pos:line="116" pos:column="17">ed<pos:position pos:line="116" pos:column="19"/></name><operator pos:line="116" pos:column="19">.<pos:position pos:line="116" pos:column="20"/></operator><name pos:line="116" pos:column="20">p<pos:position pos:line="116" pos:column="21"/></name></name> <operator pos:line="116" pos:column="22">=<pos:position pos:line="116" pos:column="23"/></operator> <name><name pos:line="116" pos:column="24">r<pos:position pos:line="116" pos:column="25"/></name><operator pos:line="116" pos:column="25">-&gt;<pos:position pos:line="116" pos:column="30"/></operator><name pos:line="116" pos:column="27">pool<pos:position pos:line="116" pos:column="31"/></name></name></expr>;<pos:position pos:line="116" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="117" pos:column="17">ed<pos:position pos:line="117" pos:column="19"/></name><operator pos:line="117" pos:column="19">.<pos:position pos:line="117" pos:column="20"/></operator><name pos:line="117" pos:column="20">hdr<pos:position pos:line="117" pos:column="23"/></name></name> <operator pos:line="117" pos:column="24">=<pos:position pos:line="117" pos:column="25"/></operator> <name pos:line="117" pos:column="26">hdr<pos:position pos:line="117" pos:column="29"/></name></expr>;<pos:position pos:line="117" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="118" pos:column="17">ed<pos:position pos:line="118" pos:column="19"/></name><operator pos:line="118" pos:column="19">.<pos:position pos:line="118" pos:column="20"/></operator><name pos:line="118" pos:column="20">t<pos:position pos:line="118" pos:column="21"/></name></name> <operator pos:line="118" pos:column="22">=<pos:position pos:line="118" pos:column="23"/></operator> <call><name pos:line="118" pos:column="24">apr_table_make<pos:position pos:line="118" pos:column="38"/></name><argument_list pos:line="118" pos:column="38">(<argument><expr><name><name pos:line="118" pos:column="39">r<pos:position pos:line="118" pos:column="40"/></name><operator pos:line="118" pos:column="40">-&gt;<pos:position pos:line="118" pos:column="45"/></operator><name pos:line="118" pos:column="42">pool<pos:position pos:line="118" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="118" pos:column="48">5<pos:position pos:line="118" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="119" pos:column="17">apr_table_do<pos:position pos:line="119" pos:column="29"/></name><argument_list pos:line="119" pos:column="29">(<argument><expr><name pos:line="119" pos:column="30">edit_header<pos:position pos:line="119" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="119" pos:column="43">(<pos:position pos:line="119" pos:column="44"/></operator><name pos:line="119" pos:column="44">void<pos:position pos:line="119" pos:column="48"/></name> <operator pos:line="119" pos:column="49">*<pos:position pos:line="119" pos:column="50"/></operator><operator pos:line="119" pos:column="50">)<pos:position pos:line="119" pos:column="51"/></operator> <operator pos:line="119" pos:column="52">&amp;<pos:position pos:line="119" pos:column="57"/></operator><name pos:line="119" pos:column="53">ed<pos:position pos:line="119" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="57">headers<pos:position pos:line="119" pos:column="64"/></name></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="66">hdr<pos:position pos:line="119" pos:column="69"/></name><operator pos:line="119" pos:column="69">-&gt;<pos:position pos:line="119" pos:column="74"/></operator><name pos:line="119" pos:column="71">header<pos:position pos:line="119" pos:column="77"/></name></name></expr></argument>,
                             <argument><expr><name pos:line="120" pos:column="30">NULL<pos:position pos:line="120" pos:column="34"/></name></expr></argument>)<pos:position pos:line="120" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="121" pos:column="17">apr_table_unset<pos:position pos:line="121" pos:column="32"/></name><argument_list pos:line="121" pos:column="32">(<argument><expr><name pos:line="121" pos:column="33">headers<pos:position pos:line="121" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="121" pos:column="42">hdr<pos:position pos:line="121" pos:column="45"/></name><operator pos:line="121" pos:column="45">-&gt;<pos:position pos:line="121" pos:column="50"/></operator><name pos:line="121" pos:column="47">header<pos:position pos:line="121" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="122" pos:column="17">apr_table_do<pos:position pos:line="122" pos:column="29"/></name><argument_list pos:line="122" pos:column="29">(<argument><expr><name pos:line="122" pos:column="30">add_them_all<pos:position pos:line="122" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="44">(<pos:position pos:line="122" pos:column="45"/></operator><name pos:line="122" pos:column="45">void<pos:position pos:line="122" pos:column="49"/></name> <operator pos:line="122" pos:column="50">*<pos:position pos:line="122" pos:column="51"/></operator><operator pos:line="122" pos:column="51">)<pos:position pos:line="122" pos:column="52"/></operator> <name pos:line="122" pos:column="53">headers<pos:position pos:line="122" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="62">ed<pos:position pos:line="122" pos:column="64"/></name><operator pos:line="122" pos:column="64">.<pos:position pos:line="122" pos:column="65"/></operator><name pos:line="122" pos:column="65">t<pos:position pos:line="122" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="68">NULL<pos:position pos:line="122" pos:column="72"/></name></expr></argument>)<pos:position pos:line="122" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="74"/></expr_stmt>
            }<pos:position pos:line="123" pos:column="14"/></block></then></if>
            <break pos:line="124" pos:column="13">break;<pos:position pos:line="124" pos:column="19"/></break>
        }<pos:position pos:line="125" pos:column="10"/></block></switch>
    }<pos:position pos:line="126" pos:column="6"/></block></for>
}<pos:position pos:line="127" pos:column="2"/></block></function></unit>

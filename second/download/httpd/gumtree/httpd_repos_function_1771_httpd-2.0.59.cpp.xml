<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1771_httpd-2.0.59.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">os_init_job_environment<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">server_rec<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">server<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">user_name<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="72">int<pos:position pos:line="1" pos:column="75"/></name></type> <name pos:line="1" pos:column="76">one_process<pos:position pos:line="1" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="88"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">_rini_struct<pos:position pos:line="3" pos:column="17"/></name></type>            <name pos:line="3" pos:column="29">inittask<pos:position pos:line="3" pos:column="37"/></name></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt> 
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type>                    <name><name pos:line="4" pos:column="29">username<pos:position pos:line="4" pos:column="37"/></name><index pos:line="4" pos:column="37">[<expr><name pos:line="4" pos:column="38">USER_LEN<pos:position pos:line="4" pos:column="46"/></name><operator pos:line="4" pos:column="46">+<pos:position pos:line="4" pos:column="47"/></operator><literal type="number" pos:line="4" pos:column="47">1<pos:position pos:line="4" pos:column="48"/></literal></expr>]<pos:position pos:line="4" pos:column="49"/></index></name></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type>                     <name pos:line="5" pos:column="29">save_errno<pos:position pos:line="5" pos:column="39"/></name></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">bs2_ForkType<pos:position pos:line="6" pos:column="17"/></name></type>            <name pos:line="6" pos:column="29">type<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><call><name pos:line="6" pos:column="36">os_forktype<pos:position pos:line="6" pos:column="47"/></name><argument_list pos:line="6" pos:column="47">()<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="50"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* We can be sure that no change to uid==0 is possible because of
     * the checks in http_core.c:set_user()
     */</comment>

    <comment type="block" pos:line="12" pos:column="5">/* The _rini() function works only after a prior _rfork().
     * In the case of one_process, it would fail.
     */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">one_process<pos:position pos:line="15" pos:column="20"/></name></expr>)<pos:position pos:line="15" pos:column="21"/></condition><then pos:line="15" pos:column="21"> <block pos:line="15" pos:column="22">{

	<expr_stmt><expr><name pos:line="17" pos:column="9">type<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <name pos:line="17" pos:column="16">forktype<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">bs2_noFORK<pos:position pos:line="17" pos:column="37"/></name></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">ap_log_error<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">APLOG_MARK<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">APLOG_ERR<pos:position pos:line="19" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="45">0<pos:position pos:line="19" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="48">server<pos:position pos:line="19" pos:column="54"/></name></expr></argument>,
		     <argument><expr><literal type="string" pos:line="20" pos:column="22">"The debug mode of Apache should only "<pos:position pos:line="20" pos:column="61"/></literal>
		     <literal type="string" pos:line="21" pos:column="22">"be started by an unprivileged user!"<pos:position pos:line="21" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt>
	<return pos:line="22" pos:column="9">return <expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr>;<pos:position pos:line="22" pos:column="18"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* If no _rini() is required, then return quickly. */</comment>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">type<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">!=<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="17">bs2_RFORK_RINI<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">&amp;&amp;<pos:position pos:line="26" pos:column="42"/></operator> <name pos:line="26" pos:column="35">type<pos:position pos:line="26" pos:column="39"/></name> <operator pos:line="26" pos:column="40">!=<pos:position pos:line="26" pos:column="42"/></operator> <name pos:line="26" pos:column="43">bs2_FORK_RINI<pos:position pos:line="26" pos:column="56"/></name></expr>)<pos:position pos:line="26" pos:column="57"/></condition><then pos:line="26" pos:column="57">
	<block type="pseudo"><return pos:line="27" pos:column="9">return <expr><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></return></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* An Account is required for _rini() */</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">bs2000_account<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">==<pos:position pos:line="30" pos:column="26"/></operator> <name pos:line="30" pos:column="27">NULL<pos:position pos:line="30" pos:column="31"/></name></expr>)<pos:position pos:line="30" pos:column="32"/></condition><then pos:line="30" pos:column="32">
    <block pos:line="31" pos:column="5">{
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">ap_log_error<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><name pos:line="32" pos:column="22">APLOG_MARK<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="34">APLOG_ALERT<pos:position pos:line="32" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="47">0<pos:position pos:line="32" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="50">server<pos:position pos:line="32" pos:column="56"/></name></expr></argument>,
		     <argument><expr><literal type="string" pos:line="33" pos:column="22">"No BS2000Account configured - cannot switch to User %s"<pos:position pos:line="33" pos:column="78"/></literal></expr></argument>,
		     <argument><expr><name pos:line="34" pos:column="22">user_name<pos:position pos:line="34" pos:column="31"/></name></expr></argument>)<pos:position pos:line="34" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">exit<pos:position pos:line="35" pos:column="13"/></name><argument_list pos:line="35" pos:column="13">(<argument><expr><name pos:line="35" pos:column="14">APEXIT_CHILDFATAL<pos:position pos:line="35" pos:column="31"/></name></expr></argument>)<pos:position pos:line="35" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="38" pos:column="5">apr_cpystrn<pos:position pos:line="38" pos:column="16"/></name><argument_list pos:line="38" pos:column="16">(<argument><expr><name pos:line="38" pos:column="17">username<pos:position pos:line="38" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="27">user_name<pos:position pos:line="38" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="38">sizeof <name pos:line="38" pos:column="45">username<pos:position pos:line="38" pos:column="53"/></name></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt>

    <comment type="block" pos:line="40" pos:column="5">/* Make user name all upper case */</comment>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">ap_str_toupper<pos:position pos:line="41" pos:column="19"/></name><argument_list pos:line="41" pos:column="19">(<argument><expr><name pos:line="41" pos:column="20">username<pos:position pos:line="41" pos:column="28"/></name></expr></argument>)<pos:position pos:line="41" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="43" pos:column="5">/* Pad to length 8 */</comment>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">ap_pad<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">(<argument><expr><name pos:line="44" pos:column="12">username<pos:position pos:line="44" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="22">sizeof <name pos:line="44" pos:column="29">username<pos:position pos:line="44" pos:column="37"/></name></sizeof></expr></argument>, <argument><expr><literal type="char" pos:line="44" pos:column="39">' '<pos:position pos:line="44" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="46" pos:column="5">inittask<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">.<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">username<pos:position pos:line="46" pos:column="22"/></name></name>       <operator pos:line="46" pos:column="29">=<pos:position pos:line="46" pos:column="30"/></operator> <name pos:line="46" pos:column="31">username<pos:position pos:line="46" pos:column="39"/></name></expr>;<pos:position pos:line="46" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">inittask<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">.<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">account<pos:position pos:line="47" pos:column="21"/></name></name>        <operator pos:line="47" pos:column="29">=<pos:position pos:line="47" pos:column="30"/></operator> <name pos:line="47" pos:column="31">bs2000_account<pos:position pos:line="47" pos:column="45"/></name></expr>;<pos:position pos:line="47" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="48" pos:column="5">inittask<pos:position pos:line="48" pos:column="13"/></name><operator pos:line="48" pos:column="13">.<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">processor_name<pos:position pos:line="48" pos:column="28"/></name></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <literal type="string" pos:line="48" pos:column="31">"        "<pos:position pos:line="48" pos:column="41"/></literal></expr>;<pos:position pos:line="48" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="50" pos:column="5">/* Switch to the new logon user (setuid() and setgid() are done later) */</comment>
    <comment type="block" pos:line="51" pos:column="5">/* Only the super user can switch identities. */</comment>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><call><name pos:line="52" pos:column="9">_rini<pos:position pos:line="52" pos:column="14"/></name><argument_list pos:line="52" pos:column="14">(<argument><expr><operator pos:line="52" pos:column="15">&amp;<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="16">inittask<pos:position pos:line="52" pos:column="24"/></name></expr></argument>)<pos:position pos:line="52" pos:column="25"/></argument_list></call> <operator pos:line="52" pos:column="26">!=<pos:position pos:line="52" pos:column="28"/></operator> <literal type="number" pos:line="52" pos:column="29">0<pos:position pos:line="52" pos:column="30"/></literal></expr>)<pos:position pos:line="52" pos:column="31"/></condition><then pos:line="52" pos:column="31"> <block pos:line="52" pos:column="32">{

	<expr_stmt><expr><call><name pos:line="54" pos:column="9">ap_log_error<pos:position pos:line="54" pos:column="21"/></name><argument_list pos:line="54" pos:column="21">(<argument><expr><name pos:line="54" pos:column="22">APLOG_MARK<pos:position pos:line="54" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="34">APLOG_ALERT<pos:position pos:line="54" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="47">errno<pos:position pos:line="54" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="54">server<pos:position pos:line="54" pos:column="60"/></name></expr></argument>,
		     <argument><expr><literal type="string" pos:line="55" pos:column="22">"_rini: BS2000 auth failed for user \"%s\" acct \"%s\""<pos:position pos:line="55" pos:column="77"/></literal></expr></argument>,
		     <argument><expr><name><name pos:line="56" pos:column="22">inittask<pos:position pos:line="56" pos:column="30"/></name><operator pos:line="56" pos:column="30">.<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="31">username<pos:position pos:line="56" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="41">inittask<pos:position pos:line="56" pos:column="49"/></name><operator pos:line="56" pos:column="49">.<pos:position pos:line="56" pos:column="50"/></operator><name pos:line="56" pos:column="50">account<pos:position pos:line="56" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="59"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="58" pos:column="9">exit<pos:position pos:line="58" pos:column="13"/></name><argument_list pos:line="58" pos:column="13">(<argument><expr><name pos:line="58" pos:column="14">APEXIT_CHILDFATAL<pos:position pos:line="58" pos:column="31"/></name></expr></argument>)<pos:position pos:line="58" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>

    <return pos:line="61" pos:column="5">return <expr><literal type="number" pos:line="61" pos:column="12">0<pos:position pos:line="61" pos:column="13"/></literal></expr>;<pos:position pos:line="61" pos:column="14"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3947_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">inet_pton6<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">char<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">src<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">unsigned<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">dst<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><specifier pos:line="4" pos:column="16">const<pos:position pos:line="4" pos:column="21"/></specifier> <name pos:line="4" pos:column="22">char<pos:position pos:line="4" pos:column="26"/></name></type> <name><name pos:line="4" pos:column="27">xdigits_l<pos:position pos:line="4" pos:column="36"/></name><index pos:line="4" pos:column="36">[]<pos:position pos:line="4" pos:column="38"/></index></name> <init pos:line="4" pos:column="39">= <expr><literal type="string" pos:line="4" pos:column="41">"0123456789abcdef"<pos:position pos:line="4" pos:column="59"/></literal></expr></init></decl>,
			  <decl><type ref="prev"/><name><name pos:line="5" pos:column="27">xdigits_u<pos:position pos:line="5" pos:column="36"/></name><index pos:line="5" pos:column="36">[]<pos:position pos:line="5" pos:column="38"/></index></name> <init pos:line="5" pos:column="39">= <expr><literal type="string" pos:line="5" pos:column="41">"0123456789ABCDEF"<pos:position pos:line="5" pos:column="59"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">char<pos:position pos:line="6" pos:column="22"/></name></type> <name><name pos:line="6" pos:column="23">tmp<pos:position pos:line="6" pos:column="26"/></name><index pos:line="6" pos:column="26">[<expr><name pos:line="6" pos:column="27">IN6ADDRSZ<pos:position pos:line="6" pos:column="36"/></name></expr>]<pos:position pos:line="6" pos:column="37"/></index></name></decl>, <modifier pos:line="6" pos:column="39">*<pos:position pos:line="6" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="40">tp<pos:position pos:line="6" pos:column="42"/></name></decl>, <modifier pos:line="6" pos:column="44">*<pos:position pos:line="6" pos:column="45"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="45">endp<pos:position pos:line="6" pos:column="49"/></name></decl>, <modifier pos:line="6" pos:column="51">*<pos:position pos:line="6" pos:column="52"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="52">colonp<pos:position pos:line="6" pos:column="58"/></name></decl>;<pos:position pos:line="6" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">xdigits<pos:position pos:line="7" pos:column="28"/></name></decl>, <modifier pos:line="7" pos:column="30">*<pos:position pos:line="7" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="31">curtok<pos:position pos:line="7" pos:column="37"/></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">ch<pos:position pos:line="8" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="17">saw_xdigit<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">unsigned<pos:position pos:line="9" pos:column="17"/></name> <name pos:line="9" pos:column="18">int<pos:position pos:line="9" pos:column="21"/></name></type> <name pos:line="9" pos:column="22">val<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">memset<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">tp<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">tmp<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">)<pos:position pos:line="11" pos:column="26"/></operator></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="28">'\0'<pos:position pos:line="11" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">IN6ADDRSZ<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">endp<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">tp<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">+<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="21">IN6ADDRSZ<pos:position pos:line="12" pos:column="30"/></name></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">colonp<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">NULL<pos:position pos:line="13" pos:column="22"/></name></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
	<comment type="block" pos:line="14" pos:column="9">/* Leading :: requires some special handling. */</comment>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">*<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">src<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">==<pos:position pos:line="15" pos:column="20"/></operator> <literal type="char" pos:line="15" pos:column="21">':'<pos:position pos:line="15" pos:column="24"/></literal></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25">
		<block type="pseudo"><if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">*<pos:position pos:line="16" pos:column="22"/></operator><operator pos:line="16" pos:column="22">++<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">src<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">!=<pos:position pos:line="16" pos:column="30"/></operator> <literal type="char" pos:line="16" pos:column="31">':'<pos:position pos:line="16" pos:column="34"/></literal></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35">
			<block type="pseudo"><return pos:line="17" pos:column="25">return <expr><operator pos:line="17" pos:column="32">(<pos:position pos:line="17" pos:column="33"/></operator><literal type="number" pos:line="17" pos:column="33">0<pos:position pos:line="17" pos:column="34"/></literal><operator pos:line="17" pos:column="34">)<pos:position pos:line="17" pos:column="35"/></operator></expr>;<pos:position pos:line="17" pos:column="36"/></return></block></then></if></block></then></if>
	<expr_stmt><expr><name pos:line="18" pos:column="9">curtok<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">src<pos:position pos:line="18" pos:column="21"/></name></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name pos:line="19" pos:column="9">saw_xdigit<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <literal type="number" pos:line="19" pos:column="22">0<pos:position pos:line="19" pos:column="23"/></literal></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">val<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <literal type="number" pos:line="20" pos:column="15">0<pos:position pos:line="20" pos:column="16"/></literal></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
	<while pos:line="21" pos:column="9">while <condition pos:line="21" pos:column="15">(<expr><operator pos:line="21" pos:column="16">(<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">ch<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <operator pos:line="21" pos:column="22">*<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="23">src<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">++<pos:position pos:line="21" pos:column="28"/></operator><operator pos:line="21" pos:column="28">)<pos:position pos:line="21" pos:column="29"/></operator> <operator pos:line="21" pos:column="30">!=<pos:position pos:line="21" pos:column="32"/></operator> <literal type="char" pos:line="21" pos:column="33">'\0'<pos:position pos:line="21" pos:column="37"/></literal></expr>)<pos:position pos:line="21" pos:column="38"/></condition> <block pos:line="21" pos:column="39">{
		<decl_stmt><decl><type><specifier pos:line="22" pos:column="17">const<pos:position pos:line="22" pos:column="22"/></specifier> <name pos:line="22" pos:column="23">char<pos:position pos:line="22" pos:column="27"/></name> <modifier pos:line="22" pos:column="28">*<pos:position pos:line="22" pos:column="29"/></modifier></type><name pos:line="22" pos:column="29">pch<pos:position pos:line="22" pos:column="32"/></name></decl>;<pos:position pos:line="22" pos:column="33"/></decl_stmt>

		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">(<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">pch<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">=<pos:position pos:line="24" pos:column="27"/></operator> <call><name pos:line="24" pos:column="28">strchr<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><operator pos:line="24" pos:column="35">(<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="36">xdigits<pos:position pos:line="24" pos:column="43"/></name> <operator pos:line="24" pos:column="44">=<pos:position pos:line="24" pos:column="45"/></operator> <name pos:line="24" pos:column="46">xdigits_l<pos:position pos:line="24" pos:column="55"/></name><operator pos:line="24" pos:column="55">)<pos:position pos:line="24" pos:column="56"/></operator></expr></argument>, <argument><expr><name pos:line="24" pos:column="58">ch<pos:position pos:line="24" pos:column="60"/></name></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call><operator pos:line="24" pos:column="61">)<pos:position pos:line="24" pos:column="62"/></operator> <operator pos:line="24" pos:column="63">==<pos:position pos:line="24" pos:column="65"/></operator> <name pos:line="24" pos:column="66">NULL<pos:position pos:line="24" pos:column="70"/></name></expr>)<pos:position pos:line="24" pos:column="71"/></condition><then pos:line="24" pos:column="71">
			<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="25">pch<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">=<pos:position pos:line="25" pos:column="30"/></operator> <call><name pos:line="25" pos:column="31">strchr<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><operator pos:line="25" pos:column="38">(<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="39">xdigits<pos:position pos:line="25" pos:column="46"/></name> <operator pos:line="25" pos:column="47">=<pos:position pos:line="25" pos:column="48"/></operator> <name pos:line="25" pos:column="49">xdigits_u<pos:position pos:line="25" pos:column="58"/></name><operator pos:line="25" pos:column="58">)<pos:position pos:line="25" pos:column="59"/></operator></expr></argument>, <argument><expr><name pos:line="25" pos:column="61">ch<pos:position pos:line="25" pos:column="63"/></name></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="65"/></expr_stmt></block></then></if>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">pch<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">!=<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="28">NULL<pos:position pos:line="26" pos:column="32"/></name></expr>)<pos:position pos:line="26" pos:column="33"/></condition><then pos:line="26" pos:column="33"> <block pos:line="26" pos:column="34">{
			<expr_stmt><expr><name pos:line="27" pos:column="25">val<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">&lt;&lt;=<pos:position pos:line="27" pos:column="38"/></operator> <literal type="number" pos:line="27" pos:column="33">4<pos:position pos:line="27" pos:column="34"/></literal></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="28" pos:column="25">val<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">|=<pos:position pos:line="28" pos:column="31"/></operator> <operator pos:line="28" pos:column="32">(<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="33">pch<pos:position pos:line="28" pos:column="36"/></name> <operator pos:line="28" pos:column="37">-<pos:position pos:line="28" pos:column="38"/></operator> <name pos:line="28" pos:column="39">xdigits<pos:position pos:line="28" pos:column="46"/></name><operator pos:line="28" pos:column="46">)<pos:position pos:line="28" pos:column="47"/></operator></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><name pos:line="29" pos:column="29">val<pos:position pos:line="29" pos:column="32"/></name> <operator pos:line="29" pos:column="33">&gt;<pos:position pos:line="29" pos:column="37"/></operator> <literal type="number" pos:line="29" pos:column="35">0xffff<pos:position pos:line="29" pos:column="41"/></literal></expr>)<pos:position pos:line="29" pos:column="42"/></condition><then pos:line="29" pos:column="42">
				<block type="pseudo"><return pos:line="30" pos:column="33">return <expr><operator pos:line="30" pos:column="40">(<pos:position pos:line="30" pos:column="41"/></operator><literal type="number" pos:line="30" pos:column="41">0<pos:position pos:line="30" pos:column="42"/></literal><operator pos:line="30" pos:column="42">)<pos:position pos:line="30" pos:column="43"/></operator></expr>;<pos:position pos:line="30" pos:column="44"/></return></block></then></if>
			<expr_stmt><expr><name pos:line="31" pos:column="25">saw_xdigit<pos:position pos:line="31" pos:column="35"/></name> <operator pos:line="31" pos:column="36">=<pos:position pos:line="31" pos:column="37"/></operator> <literal type="number" pos:line="31" pos:column="38">1<pos:position pos:line="31" pos:column="39"/></literal></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
			<continue pos:line="32" pos:column="25">continue;<pos:position pos:line="32" pos:column="34"/></continue>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">ch<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">==<pos:position pos:line="34" pos:column="26"/></operator> <literal type="char" pos:line="34" pos:column="27">':'<pos:position pos:line="34" pos:column="30"/></literal></expr>)<pos:position pos:line="34" pos:column="31"/></condition><then pos:line="34" pos:column="31"> <block pos:line="34" pos:column="32">{
			<expr_stmt><expr><name pos:line="35" pos:column="25">curtok<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">=<pos:position pos:line="35" pos:column="33"/></operator> <name pos:line="35" pos:column="34">src<pos:position pos:line="35" pos:column="37"/></name></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><operator pos:line="36" pos:column="29">!<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="30">saw_xdigit<pos:position pos:line="36" pos:column="40"/></name></expr>)<pos:position pos:line="36" pos:column="41"/></condition><then pos:line="36" pos:column="41"> <block pos:line="36" pos:column="42">{
				<if pos:line="37" pos:column="33">if <condition pos:line="37" pos:column="36">(<expr><name pos:line="37" pos:column="37">colonp<pos:position pos:line="37" pos:column="43"/></name></expr>)<pos:position pos:line="37" pos:column="44"/></condition><then pos:line="37" pos:column="44">
					<block type="pseudo"><return pos:line="38" pos:column="41">return <expr><operator pos:line="38" pos:column="48">(<pos:position pos:line="38" pos:column="49"/></operator><literal type="number" pos:line="38" pos:column="49">0<pos:position pos:line="38" pos:column="50"/></literal><operator pos:line="38" pos:column="50">)<pos:position pos:line="38" pos:column="51"/></operator></expr>;<pos:position pos:line="38" pos:column="52"/></return></block></then></if>
				<expr_stmt><expr><name pos:line="39" pos:column="33">colonp<pos:position pos:line="39" pos:column="39"/></name> <operator pos:line="39" pos:column="40">=<pos:position pos:line="39" pos:column="41"/></operator> <name pos:line="39" pos:column="42">tp<pos:position pos:line="39" pos:column="44"/></name></expr>;<pos:position pos:line="39" pos:column="45"/></expr_stmt>
				<continue pos:line="40" pos:column="33">continue;<pos:position pos:line="40" pos:column="42"/></continue>
			}<pos:position pos:line="41" pos:column="26"/></block></then></if>
			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><name pos:line="42" pos:column="29">tp<pos:position pos:line="42" pos:column="31"/></name> <operator pos:line="42" pos:column="32">+<pos:position pos:line="42" pos:column="33"/></operator> <name pos:line="42" pos:column="34">INT16SZ<pos:position pos:line="42" pos:column="41"/></name> <operator pos:line="42" pos:column="42">&gt;<pos:position pos:line="42" pos:column="46"/></operator> <name pos:line="42" pos:column="44">endp<pos:position pos:line="42" pos:column="48"/></name></expr>)<pos:position pos:line="42" pos:column="49"/></condition><then pos:line="42" pos:column="49">
				<block type="pseudo"><return pos:line="43" pos:column="33">return <expr><operator pos:line="43" pos:column="40">(<pos:position pos:line="43" pos:column="41"/></operator><literal type="number" pos:line="43" pos:column="41">0<pos:position pos:line="43" pos:column="42"/></literal><operator pos:line="43" pos:column="42">)<pos:position pos:line="43" pos:column="43"/></operator></expr>;<pos:position pos:line="43" pos:column="44"/></return></block></then></if>
			<expr_stmt><expr><operator pos:line="44" pos:column="25">*<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="26">tp<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">++<pos:position pos:line="44" pos:column="30"/></operator> <operator pos:line="44" pos:column="31">=<pos:position pos:line="44" pos:column="32"/></operator> <call pos:line="44" pos:column="33">(<name pos:line="44" pos:column="34">unsigned<pos:position pos:line="44" pos:column="42"/></name> <name pos:line="44" pos:column="43">char<pos:position pos:line="44" pos:column="47"/></name>) <argument_list pos:line="44" pos:column="49">(<argument><expr><name pos:line="44" pos:column="50">val<pos:position pos:line="44" pos:column="53"/></name> <operator pos:line="44" pos:column="54">&gt;&gt;<pos:position pos:line="44" pos:column="59"/></operator> <literal type="number" pos:line="44" pos:column="57">8<pos:position pos:line="44" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call> <operator pos:line="44" pos:column="60">&amp;<pos:position pos:line="44" pos:column="65"/></operator> <literal type="number" pos:line="44" pos:column="62">0xff<pos:position pos:line="44" pos:column="66"/></literal></expr>;<pos:position pos:line="44" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="45" pos:column="25">*<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="26">tp<pos:position pos:line="45" pos:column="28"/></name><operator pos:line="45" pos:column="28">++<pos:position pos:line="45" pos:column="30"/></operator> <operator pos:line="45" pos:column="31">=<pos:position pos:line="45" pos:column="32"/></operator> <operator pos:line="45" pos:column="33">(<pos:position pos:line="45" pos:column="34"/></operator><name pos:line="45" pos:column="34">unsigned<pos:position pos:line="45" pos:column="42"/></name> <name pos:line="45" pos:column="43">char<pos:position pos:line="45" pos:column="47"/></name><operator pos:line="45" pos:column="47">)<pos:position pos:line="45" pos:column="48"/></operator> <name pos:line="45" pos:column="49">val<pos:position pos:line="45" pos:column="52"/></name> <operator pos:line="45" pos:column="53">&amp;<pos:position pos:line="45" pos:column="58"/></operator> <literal type="number" pos:line="45" pos:column="55">0xff<pos:position pos:line="45" pos:column="59"/></literal></expr>;<pos:position pos:line="45" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name pos:line="46" pos:column="25">saw_xdigit<pos:position pos:line="46" pos:column="35"/></name> <operator pos:line="46" pos:column="36">=<pos:position pos:line="46" pos:column="37"/></operator> <literal type="number" pos:line="46" pos:column="38">0<pos:position pos:line="46" pos:column="39"/></literal></expr>;<pos:position pos:line="46" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="47" pos:column="25">val<pos:position pos:line="47" pos:column="28"/></name> <operator pos:line="47" pos:column="29">=<pos:position pos:line="47" pos:column="30"/></operator> <literal type="number" pos:line="47" pos:column="31">0<pos:position pos:line="47" pos:column="32"/></literal></expr>;<pos:position pos:line="47" pos:column="33"/></expr_stmt>
			<continue pos:line="48" pos:column="25">continue;<pos:position pos:line="48" pos:column="34"/></continue>
		}<pos:position pos:line="49" pos:column="18"/></block></then></if>
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><name pos:line="50" pos:column="21">ch<pos:position pos:line="50" pos:column="23"/></name> <operator pos:line="50" pos:column="24">==<pos:position pos:line="50" pos:column="26"/></operator> <literal type="char" pos:line="50" pos:column="27">'.'<pos:position pos:line="50" pos:column="30"/></literal> <operator pos:line="50" pos:column="31">&amp;&amp;<pos:position pos:line="50" pos:column="41"/></operator> <operator pos:line="50" pos:column="34">(<pos:position pos:line="50" pos:column="35"/></operator><operator pos:line="50" pos:column="35">(<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="36">tp<pos:position pos:line="50" pos:column="38"/></name> <operator pos:line="50" pos:column="39">+<pos:position pos:line="50" pos:column="40"/></operator> <name pos:line="50" pos:column="41">INADDRSZ<pos:position pos:line="50" pos:column="49"/></name><operator pos:line="50" pos:column="49">)<pos:position pos:line="50" pos:column="50"/></operator> <operator pos:line="50" pos:column="51">&lt;=<pos:position pos:line="50" pos:column="56"/></operator> <name pos:line="50" pos:column="54">endp<pos:position pos:line="50" pos:column="58"/></name><operator pos:line="50" pos:column="58">)<pos:position pos:line="50" pos:column="59"/></operator> <operator pos:line="50" pos:column="60">&amp;&amp;<pos:position pos:line="50" pos:column="70"/></operator>
		    <call><name pos:line="51" pos:column="21">inet_pton4<pos:position pos:line="51" pos:column="31"/></name><argument_list pos:line="51" pos:column="31">(<argument><expr><name pos:line="51" pos:column="32">curtok<pos:position pos:line="51" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="40">tp<pos:position pos:line="51" pos:column="42"/></name></expr></argument>)<pos:position pos:line="51" pos:column="43"/></argument_list></call> <operator pos:line="51" pos:column="44">&gt;<pos:position pos:line="51" pos:column="48"/></operator> <literal type="number" pos:line="51" pos:column="46">0<pos:position pos:line="51" pos:column="47"/></literal></expr>)<pos:position pos:line="51" pos:column="48"/></condition><then pos:line="51" pos:column="48"> <block pos:line="51" pos:column="49">{
			<expr_stmt><expr><name pos:line="52" pos:column="25">tp<pos:position pos:line="52" pos:column="27"/></name> <operator pos:line="52" pos:column="28">+=<pos:position pos:line="52" pos:column="30"/></operator> <name pos:line="52" pos:column="31">INADDRSZ<pos:position pos:line="52" pos:column="39"/></name></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="53" pos:column="25">saw_xdigit<pos:position pos:line="53" pos:column="35"/></name> <operator pos:line="53" pos:column="36">=<pos:position pos:line="53" pos:column="37"/></operator> <literal type="number" pos:line="53" pos:column="38">0<pos:position pos:line="53" pos:column="39"/></literal></expr>;<pos:position pos:line="53" pos:column="40"/></expr_stmt>
			<break pos:line="54" pos:column="25">break;<pos:position pos:line="54" pos:column="31"/></break>	<comment type="block" pos:line="54" pos:column="33">/* '\0' was seen by inet_pton4(). */</comment>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if>
		<return pos:line="56" pos:column="17">return <expr><operator pos:line="56" pos:column="24">(<pos:position pos:line="56" pos:column="25"/></operator><literal type="number" pos:line="56" pos:column="25">0<pos:position pos:line="56" pos:column="26"/></literal><operator pos:line="56" pos:column="26">)<pos:position pos:line="56" pos:column="27"/></operator></expr>;<pos:position pos:line="56" pos:column="28"/></return>
	}<pos:position pos:line="57" pos:column="10"/></block></while>
	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name pos:line="58" pos:column="13">saw_xdigit<pos:position pos:line="58" pos:column="23"/></name></expr>)<pos:position pos:line="58" pos:column="24"/></condition><then pos:line="58" pos:column="24"> <block pos:line="58" pos:column="25">{
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">tp<pos:position pos:line="59" pos:column="23"/></name> <operator pos:line="59" pos:column="24">+<pos:position pos:line="59" pos:column="25"/></operator> <name pos:line="59" pos:column="26">INT16SZ<pos:position pos:line="59" pos:column="33"/></name> <operator pos:line="59" pos:column="34">&gt;<pos:position pos:line="59" pos:column="38"/></operator> <name pos:line="59" pos:column="36">endp<pos:position pos:line="59" pos:column="40"/></name></expr>)<pos:position pos:line="59" pos:column="41"/></condition><then pos:line="59" pos:column="41">
			<block type="pseudo"><return pos:line="60" pos:column="25">return <expr><operator pos:line="60" pos:column="32">(<pos:position pos:line="60" pos:column="33"/></operator><literal type="number" pos:line="60" pos:column="33">0<pos:position pos:line="60" pos:column="34"/></literal><operator pos:line="60" pos:column="34">)<pos:position pos:line="60" pos:column="35"/></operator></expr>;<pos:position pos:line="60" pos:column="36"/></return></block></then></if>
		<expr_stmt><expr><operator pos:line="61" pos:column="17">*<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="18">tp<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">++<pos:position pos:line="61" pos:column="22"/></operator> <operator pos:line="61" pos:column="23">=<pos:position pos:line="61" pos:column="24"/></operator> <call pos:line="61" pos:column="25">(<name pos:line="61" pos:column="26">unsigned<pos:position pos:line="61" pos:column="34"/></name> <name pos:line="61" pos:column="35">char<pos:position pos:line="61" pos:column="39"/></name>) <argument_list pos:line="61" pos:column="41">(<argument><expr><name pos:line="61" pos:column="42">val<pos:position pos:line="61" pos:column="45"/></name> <operator pos:line="61" pos:column="46">&gt;&gt;<pos:position pos:line="61" pos:column="51"/></operator> <literal type="number" pos:line="61" pos:column="49">8<pos:position pos:line="61" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="51"/></argument_list></call> <operator pos:line="61" pos:column="52">&amp;<pos:position pos:line="61" pos:column="57"/></operator> <literal type="number" pos:line="61" pos:column="54">0xff<pos:position pos:line="61" pos:column="58"/></literal></expr>;<pos:position pos:line="61" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="62" pos:column="17">*<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="18">tp<pos:position pos:line="62" pos:column="20"/></name><operator pos:line="62" pos:column="20">++<pos:position pos:line="62" pos:column="22"/></operator> <operator pos:line="62" pos:column="23">=<pos:position pos:line="62" pos:column="24"/></operator> <operator pos:line="62" pos:column="25">(<pos:position pos:line="62" pos:column="26"/></operator><name pos:line="62" pos:column="26">unsigned<pos:position pos:line="62" pos:column="34"/></name> <name pos:line="62" pos:column="35">char<pos:position pos:line="62" pos:column="39"/></name><operator pos:line="62" pos:column="39">)<pos:position pos:line="62" pos:column="40"/></operator> <name pos:line="62" pos:column="41">val<pos:position pos:line="62" pos:column="44"/></name> <operator pos:line="62" pos:column="45">&amp;<pos:position pos:line="62" pos:column="50"/></operator> <literal type="number" pos:line="62" pos:column="47">0xff<pos:position pos:line="62" pos:column="51"/></literal></expr>;<pos:position pos:line="62" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="63" pos:column="10"/></block></then></if>
	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">colonp<pos:position pos:line="64" pos:column="19"/></name> <operator pos:line="64" pos:column="20">!=<pos:position pos:line="64" pos:column="22"/></operator> <name pos:line="64" pos:column="23">NULL<pos:position pos:line="64" pos:column="27"/></name></expr>)<pos:position pos:line="64" pos:column="28"/></condition><then pos:line="64" pos:column="28"> <block pos:line="64" pos:column="29">{
		<comment type="block" pos:line="65" pos:column="17">/*
		 * Since some memmove()'s erroneously fail to handle
		 * overlapping regions, we'll do the shift by hand.
		 */</comment>
		<decl_stmt><decl><type><specifier pos:line="69" pos:column="17">const<pos:position pos:line="69" pos:column="22"/></specifier> <name pos:line="69" pos:column="23">apr_ssize_t<pos:position pos:line="69" pos:column="34"/></name></type> <name pos:line="69" pos:column="35">n<pos:position pos:line="69" pos:column="36"/></name> <init pos:line="69" pos:column="37">= <expr><name pos:line="69" pos:column="39">tp<pos:position pos:line="69" pos:column="41"/></name> <operator pos:line="69" pos:column="42">-<pos:position pos:line="69" pos:column="43"/></operator> <name pos:line="69" pos:column="44">colonp<pos:position pos:line="69" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="69" pos:column="51"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="70" pos:column="17">apr_ssize_t<pos:position pos:line="70" pos:column="28"/></name></type> <name pos:line="70" pos:column="29">i<pos:position pos:line="70" pos:column="30"/></name></decl>;<pos:position pos:line="70" pos:column="31"/></decl_stmt>

		<for pos:line="72" pos:column="17">for <control pos:line="72" pos:column="21">(<init><expr><name pos:line="72" pos:column="22">i<pos:position pos:line="72" pos:column="23"/></name> <operator pos:line="72" pos:column="24">=<pos:position pos:line="72" pos:column="25"/></operator> <literal type="number" pos:line="72" pos:column="26">1<pos:position pos:line="72" pos:column="27"/></literal></expr>;<pos:position pos:line="72" pos:column="28"/></init> <condition><expr><name pos:line="72" pos:column="29">i<pos:position pos:line="72" pos:column="30"/></name> <operator pos:line="72" pos:column="31">&lt;=<pos:position pos:line="72" pos:column="36"/></operator> <name pos:line="72" pos:column="34">n<pos:position pos:line="72" pos:column="35"/></name></expr>;<pos:position pos:line="72" pos:column="36"/></condition> <incr><expr><name pos:line="72" pos:column="37">i<pos:position pos:line="72" pos:column="38"/></name><operator pos:line="72" pos:column="38">++<pos:position pos:line="72" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="72" pos:column="41"/></control> <block pos:line="72" pos:column="42">{
			<expr_stmt><expr><name><name pos:line="73" pos:column="25">endp<pos:position pos:line="73" pos:column="29"/></name><index pos:line="73" pos:column="29">[<expr><operator pos:line="73" pos:column="30">-<pos:position pos:line="73" pos:column="31"/></operator> <name pos:line="73" pos:column="32">i<pos:position pos:line="73" pos:column="33"/></name></expr>]<pos:position pos:line="73" pos:column="34"/></index></name> <operator pos:line="73" pos:column="35">=<pos:position pos:line="73" pos:column="36"/></operator> <name><name pos:line="73" pos:column="37">colonp<pos:position pos:line="73" pos:column="43"/></name><index pos:line="73" pos:column="43">[<expr><name pos:line="73" pos:column="44">n<pos:position pos:line="73" pos:column="45"/></name> <operator pos:line="73" pos:column="46">-<pos:position pos:line="73" pos:column="47"/></operator> <name pos:line="73" pos:column="48">i<pos:position pos:line="73" pos:column="49"/></name></expr>]<pos:position pos:line="73" pos:column="50"/></index></name></expr>;<pos:position pos:line="73" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="74" pos:column="25">colonp<pos:position pos:line="74" pos:column="31"/></name><index pos:line="74" pos:column="31">[<expr><name pos:line="74" pos:column="32">n<pos:position pos:line="74" pos:column="33"/></name> <operator pos:line="74" pos:column="34">-<pos:position pos:line="74" pos:column="35"/></operator> <name pos:line="74" pos:column="36">i<pos:position pos:line="74" pos:column="37"/></name></expr>]<pos:position pos:line="74" pos:column="38"/></index></name> <operator pos:line="74" pos:column="39">=<pos:position pos:line="74" pos:column="40"/></operator> <literal type="number" pos:line="74" pos:column="41">0<pos:position pos:line="74" pos:column="42"/></literal></expr>;<pos:position pos:line="74" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="75" pos:column="18"/></block></for>
		<expr_stmt><expr><name pos:line="76" pos:column="17">tp<pos:position pos:line="76" pos:column="19"/></name> <operator pos:line="76" pos:column="20">=<pos:position pos:line="76" pos:column="21"/></operator> <name pos:line="76" pos:column="22">endp<pos:position pos:line="76" pos:column="26"/></name></expr>;<pos:position pos:line="76" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="77" pos:column="10"/></block></then></if>
	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name pos:line="78" pos:column="13">tp<pos:position pos:line="78" pos:column="15"/></name> <operator pos:line="78" pos:column="16">!=<pos:position pos:line="78" pos:column="18"/></operator> <name pos:line="78" pos:column="19">endp<pos:position pos:line="78" pos:column="23"/></name></expr>)<pos:position pos:line="78" pos:column="24"/></condition><then pos:line="78" pos:column="24">
		<block type="pseudo"><return pos:line="79" pos:column="17">return <expr><operator pos:line="79" pos:column="24">(<pos:position pos:line="79" pos:column="25"/></operator><literal type="number" pos:line="79" pos:column="25">0<pos:position pos:line="79" pos:column="26"/></literal><operator pos:line="79" pos:column="26">)<pos:position pos:line="79" pos:column="27"/></operator></expr>;<pos:position pos:line="79" pos:column="28"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="80" pos:column="9">memcpy<pos:position pos:line="80" pos:column="15"/></name><argument_list pos:line="80" pos:column="15">(<argument><expr><name pos:line="80" pos:column="16">dst<pos:position pos:line="80" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="21">tmp<pos:position pos:line="80" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="26">IN6ADDRSZ<pos:position pos:line="80" pos:column="35"/></name></expr></argument>)<pos:position pos:line="80" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="37"/></expr_stmt>
	<return pos:line="81" pos:column="9">return <expr><operator pos:line="81" pos:column="16">(<pos:position pos:line="81" pos:column="17"/></operator><literal type="number" pos:line="81" pos:column="17">1<pos:position pos:line="81" pos:column="18"/></literal><operator pos:line="81" pos:column="18">)<pos:position pos:line="81" pos:column="19"/></operator></expr>;<pos:position pos:line="81" pos:column="20"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

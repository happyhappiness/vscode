<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2237_httpd-2.0.64.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">receive_from_other_child<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name pos:line="1" pos:column="46">void<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier><modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">csd<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">ap_listen_rec<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">lr<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
                                             <parameter><decl><type><name pos:line="2" pos:column="46">apr_pool_t<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">ptrans<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">msghdr<pos:position pos:line="4" pos:column="18"/></name></name></type> <name pos:line="4" pos:column="19">msg<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">cmsghdr<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">cmsg<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">buffer<pos:position pos:line="6" pos:column="16"/></name><index pos:line="6" pos:column="16">[<expr><name pos:line="6" pos:column="17">HUGE_STRING_LEN<pos:position pos:line="6" pos:column="32"/></name> <operator pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></operator> <literal type="number" pos:line="6" pos:column="35">2<pos:position pos:line="6" pos:column="36"/></literal></expr>]<pos:position pos:line="6" pos:column="37"/></index></name></decl>, <modifier pos:line="6" pos:column="39">*<pos:position pos:line="6" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="40">headers<pos:position pos:line="6" pos:column="47"/></name></decl>, <modifier pos:line="6" pos:column="49">*<pos:position pos:line="6" pos:column="50"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="50">body<pos:position pos:line="6" pos:column="54"/></name></decl>;<pos:position pos:line="6" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">headerslen<pos:position pos:line="7" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="21">bodylen<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">iovec<pos:position pos:line="8" pos:column="17"/></name></name></type> <name pos:line="8" pos:column="18">iov<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">ret<pos:position pos:line="9" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="14">dp<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_os_sock_t<pos:position pos:line="10" pos:column="18"/></name></type> <name pos:line="10" pos:column="19">sd<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_bucket_alloc_t<pos:position pos:line="11" pos:column="23"/></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">alloc<pos:position pos:line="11" pos:column="30"/></name> <init pos:line="11" pos:column="31">= <expr><call><name pos:line="11" pos:column="33">apr_bucket_alloc_create<pos:position pos:line="11" pos:column="56"/></name><argument_list pos:line="11" pos:column="56">(<argument><expr><name pos:line="11" pos:column="57">ptrans<pos:position pos:line="11" pos:column="63"/></name></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="65"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_bucket_brigade<pos:position pos:line="12" pos:column="23"/></name> <modifier pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></modifier></type><name pos:line="12" pos:column="25">bb<pos:position pos:line="12" pos:column="27"/></name> <init pos:line="12" pos:column="28">= <expr><call><name pos:line="12" pos:column="30">apr_brigade_create<pos:position pos:line="12" pos:column="48"/></name><argument_list pos:line="12" pos:column="48">(<argument><expr><name pos:line="12" pos:column="49">ptrans<pos:position pos:line="12" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="57">alloc<pos:position pos:line="12" pos:column="62"/></name></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="64"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_bucket<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">bucket<pos:position pos:line="13" pos:column="23"/></name></decl>;<pos:position pos:line="13" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">apr_os_sock_get<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><operator pos:line="15" pos:column="21">&amp;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="22">sd<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="26">lr<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">-&gt;<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="30">sd<pos:position pos:line="15" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="17" pos:column="5">iov<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">.<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">iov_base<pos:position pos:line="17" pos:column="17"/></name></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="20">buffer<pos:position pos:line="17" pos:column="26"/></name></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">iov<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">.<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">iov_len<pos:position pos:line="18" pos:column="16"/></name></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <sizeof pos:line="18" pos:column="19">sizeof<argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">buffer<pos:position pos:line="18" pos:column="32"/></name></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></sizeof></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="20" pos:column="5">msg<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">.<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="9">msg_name<pos:position pos:line="20" pos:column="17"/></name></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">NULL<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">msg<pos:position pos:line="21" pos:column="8"/></name><operator pos:line="21" pos:column="8">.<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="9">msg_namelen<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <literal type="number" pos:line="21" pos:column="23">0<pos:position pos:line="21" pos:column="24"/></literal></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">msg<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">.<pos:position pos:line="22" pos:column="9"/></operator><name pos:line="22" pos:column="9">msg_iov<pos:position pos:line="22" pos:column="16"/></name></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <operator pos:line="22" pos:column="19">&amp;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="20">iov<pos:position pos:line="22" pos:column="23"/></name></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">msg<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">.<pos:position pos:line="23" pos:column="9"/></operator><name pos:line="23" pos:column="9">msg_iovlen<pos:position pos:line="23" pos:column="19"/></name></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <literal type="number" pos:line="23" pos:column="22">1<pos:position pos:line="23" pos:column="23"/></literal></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name pos:line="25" pos:column="5">cmsg<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <call><name pos:line="25" pos:column="12">apr_palloc<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">ptrans<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="31">sizeof<argument_list pos:line="25" pos:column="37">(<argument><expr><operator pos:line="25" pos:column="38">*<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="39">cmsg<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></sizeof> <operator pos:line="25" pos:column="45">+<pos:position pos:line="25" pos:column="46"/></operator> <sizeof pos:line="25" pos:column="47">sizeof<argument_list pos:line="25" pos:column="53">(<argument><expr><name pos:line="25" pos:column="54">sd<pos:position pos:line="25" pos:column="56"/></name></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">cmsg<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">-&gt;<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="11">cmsg_len<pos:position pos:line="26" pos:column="19"/></name></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <sizeof pos:line="26" pos:column="22">sizeof<argument_list pos:line="26" pos:column="28">(<argument><expr><operator pos:line="26" pos:column="29">*<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">cmsg<pos:position pos:line="26" pos:column="34"/></name></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></sizeof> <operator pos:line="26" pos:column="36">+<pos:position pos:line="26" pos:column="37"/></operator> <sizeof pos:line="26" pos:column="38">sizeof<argument_list pos:line="26" pos:column="44">(<argument><expr><name pos:line="26" pos:column="45">sd<pos:position pos:line="26" pos:column="47"/></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></sizeof></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">msg<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">.<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="9">msg_control<pos:position pos:line="27" pos:column="20"/></name></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="23">cmsg<pos:position pos:line="27" pos:column="27"/></name></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">msg<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">.<pos:position pos:line="28" pos:column="9"/></operator><name pos:line="28" pos:column="9">msg_controllen<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <name><name pos:line="28" pos:column="26">cmsg<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">-&gt;<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="32">cmsg_len<pos:position pos:line="28" pos:column="40"/></name></name></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name pos:line="30" pos:column="5">ret<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator> <call><name pos:line="30" pos:column="11">recvmsg<pos:position pos:line="30" pos:column="18"/></name><argument_list pos:line="30" pos:column="18">(<argument><expr><name pos:line="30" pos:column="19">sd<pos:position pos:line="30" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="23">&amp;<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="24">msg<pos:position pos:line="30" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="29">0<pos:position pos:line="30" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="32" pos:column="5">memcpy<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><operator pos:line="32" pos:column="12">&amp;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="13">dp<pos:position pos:line="32" pos:column="15"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="17">CMSG_DATA<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">cmsg<pos:position pos:line="32" pos:column="31"/></name></expr></argument>)<pos:position pos:line="32" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="34">sizeof<argument_list pos:line="32" pos:column="40">(<argument><expr><name pos:line="32" pos:column="41">dp<pos:position pos:line="32" pos:column="43"/></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="34" pos:column="5">*<pos:position pos:line="34" pos:column="6"/></operator><name pos:line="34" pos:column="6">csd<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <name pos:line="34" pos:column="12">NULL<pos:position pos:line="34" pos:column="16"/></name></expr>;<pos:position pos:line="34" pos:column="17"/></expr_stmt> <comment type="block" pos:line="34" pos:column="18">/* tell apr_os_sock_put() to allocate new apr_socket_t */</comment>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">apr_os_sock_put<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><operator pos:line="35" pos:column="21">(<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">apr_socket_t<pos:position pos:line="35" pos:column="34"/></name> <operator pos:line="35" pos:column="35">*<pos:position pos:line="35" pos:column="36"/></operator><operator pos:line="35" pos:column="36">*<pos:position pos:line="35" pos:column="37"/></operator><operator pos:line="35" pos:column="37">)<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="38">csd<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="43">&amp;<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="44">dp<pos:position pos:line="35" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="48">ptrans<pos:position pos:line="35" pos:column="54"/></name></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><name pos:line="37" pos:column="5">bucket<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <call><name pos:line="37" pos:column="14">apr_bucket_eos_create<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><name pos:line="37" pos:column="36">alloc<pos:position pos:line="37" pos:column="41"/></name></expr></argument>)<pos:position pos:line="37" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">APR_BRIGADE_INSERT_HEAD<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">bb<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="33">bucket<pos:position pos:line="38" pos:column="39"/></name></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">bucket<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <call><name pos:line="39" pos:column="14">apr_bucket_socket_create<pos:position pos:line="39" pos:column="38"/></name><argument_list pos:line="39" pos:column="38">(<argument><expr><operator pos:line="39" pos:column="39">*<pos:position pos:line="39" pos:column="40"/></operator><name pos:line="39" pos:column="40">csd<pos:position pos:line="39" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="45">alloc<pos:position pos:line="39" pos:column="50"/></name></expr></argument>)<pos:position pos:line="39" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">APR_BRIGADE_INSERT_HEAD<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><name pos:line="40" pos:column="29">bb<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="33">bucket<pos:position pos:line="40" pos:column="39"/></name></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name pos:line="42" pos:column="5">body<pos:position pos:line="42" pos:column="9"/></name> <operator pos:line="42" pos:column="10">=<pos:position pos:line="42" pos:column="11"/></operator> <call><name pos:line="42" pos:column="12">strchr<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><name><name pos:line="42" pos:column="19">iov<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">.<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="23">iov_base<pos:position pos:line="42" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="33">0<pos:position pos:line="42" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><operator pos:line="43" pos:column="9">!<pos:position pos:line="43" pos:column="10"/></operator><name pos:line="43" pos:column="10">body<pos:position pos:line="43" pos:column="14"/></name></expr>)<pos:position pos:line="43" pos:column="15"/></condition><then pos:line="43" pos:column="15"> <block pos:line="43" pos:column="16">{
        <return pos:line="44" pos:column="9">return <expr><literal type="number" pos:line="44" pos:column="16">1<pos:position pos:line="44" pos:column="17"/></literal></expr>;<pos:position pos:line="44" pos:column="18"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="47" pos:column="5">body<pos:position pos:line="47" pos:column="9"/></name><operator pos:line="47" pos:column="9">++<pos:position pos:line="47" pos:column="11"/></operator></expr>;<pos:position pos:line="47" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name pos:line="48" pos:column="5">bodylen<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">=<pos:position pos:line="48" pos:column="14"/></operator> <call><name pos:line="48" pos:column="15">strlen<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">body<pos:position pos:line="48" pos:column="26"/></name></expr></argument>)<pos:position pos:line="48" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name pos:line="50" pos:column="5">headers<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">=<pos:position pos:line="50" pos:column="14"/></operator> <name><name pos:line="50" pos:column="15">iov<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">.<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="19">iov_base<pos:position pos:line="50" pos:column="27"/></name></name></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="51" pos:column="5">headerslen<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <name pos:line="51" pos:column="18">body<pos:position pos:line="51" pos:column="22"/></name> <operator pos:line="51" pos:column="23">-<pos:position pos:line="51" pos:column="24"/></operator> <name pos:line="51" pos:column="25">headers<pos:position pos:line="51" pos:column="32"/></name></expr>;<pos:position pos:line="51" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name pos:line="53" pos:column="5">bucket<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <call><name pos:line="53" pos:column="14">apr_bucket_heap_create<pos:position pos:line="53" pos:column="36"/></name><argument_list pos:line="53" pos:column="36">(<argument><expr><name pos:line="53" pos:column="37">body<pos:position pos:line="53" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="43">bodylen<pos:position pos:line="53" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="52">NULL<pos:position pos:line="53" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="58">alloc<pos:position pos:line="53" pos:column="63"/></name></expr></argument>)<pos:position pos:line="53" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">APR_BRIGADE_INSERT_HEAD<pos:position pos:line="54" pos:column="28"/></name><argument_list pos:line="54" pos:column="28">(<argument><expr><name pos:line="54" pos:column="29">bb<pos:position pos:line="54" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="33">bucket<pos:position pos:line="54" pos:column="39"/></name></expr></argument>)<pos:position pos:line="54" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="55" pos:column="5">bucket<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <call><name pos:line="55" pos:column="14">apr_bucket_heap_create<pos:position pos:line="55" pos:column="36"/></name><argument_list pos:line="55" pos:column="36">(<argument><expr><name pos:line="55" pos:column="37">headers<pos:position pos:line="55" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="46">headerslen<pos:position pos:line="55" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="58">NULL<pos:position pos:line="55" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="64">alloc<pos:position pos:line="55" pos:column="69"/></name></expr></argument>)<pos:position pos:line="55" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">APR_BRIGADE_INSERT_HEAD<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">(<argument><expr><name pos:line="56" pos:column="29">bb<pos:position pos:line="56" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="33">bucket<pos:position pos:line="56" pos:column="39"/></name></expr></argument>)<pos:position pos:line="56" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="58" pos:column="5">apr_pool_userdata_set<pos:position pos:line="58" pos:column="26"/></name><argument_list pos:line="58" pos:column="26">(<argument><expr><name pos:line="58" pos:column="27">bb<pos:position pos:line="58" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="31">"PERCHILD_SOCKETS"<pos:position pos:line="58" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="51">NULL<pos:position pos:line="58" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="57">ptrans<pos:position pos:line="58" pos:column="63"/></name></expr></argument>)<pos:position pos:line="58" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="65"/></expr_stmt>

    <return pos:line="60" pos:column="5">return <expr><literal type="number" pos:line="60" pos:column="12">0<pos:position pos:line="60" pos:column="13"/></literal></expr>;<pos:position pos:line="60" pos:column="14"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

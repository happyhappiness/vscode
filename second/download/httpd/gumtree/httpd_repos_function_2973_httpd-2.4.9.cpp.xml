<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2973_httpd-2.4.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">allow_cmd<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">cmd_parms<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">cmd<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">void<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">dv<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">from<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                             <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">where_c<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">access_compat_dir_conf<pos:position pos:line="4" pos:column="27"/></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">d<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><operator pos:line="4" pos:column="33">(<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="34">access_compat_dir_conf<pos:position pos:line="4" pos:column="56"/></name> <operator pos:line="4" pos:column="57">*<pos:position pos:line="4" pos:column="58"/></operator><operator pos:line="4" pos:column="58">)<pos:position pos:line="4" pos:column="59"/></operator> <name pos:line="4" pos:column="60">dv<pos:position pos:line="4" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="63"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">allowdeny<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">a<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">where<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><call><name pos:line="6" pos:column="19">apr_pstrdup<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><name><name pos:line="6" pos:column="31">cmd<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">-&gt;<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="36">pool<pos:position pos:line="6" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="42">where_c<pos:position pos:line="6" pos:column="49"/></name></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">s<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">rv<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">strcasecmp<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">from<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="26">"from"<pos:position pos:line="10" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="34"/></condition><then pos:line="10" pos:column="34">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><literal type="string" pos:line="11" pos:column="16">"allow and deny must be followed by 'from'"<pos:position pos:line="11" pos:column="59"/></literal></expr>;<pos:position pos:line="11" pos:column="60"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="13" pos:column="5">a<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">allowdeny<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></operator><operator pos:line="13" pos:column="21">)<pos:position pos:line="13" pos:column="22"/></operator> <call><name pos:line="13" pos:column="23">apr_array_push<pos:position pos:line="13" pos:column="37"/></name><argument_list pos:line="13" pos:column="37">(<argument><expr><ternary><condition><expr><name><name pos:line="13" pos:column="38">cmd<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">-&gt;<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="43">info<pos:position pos:line="13" pos:column="47"/></name></name></expr> ?<pos:position pos:line="13" pos:column="49"/></condition><then pos:line="13" pos:column="49"> <expr><name><name pos:line="13" pos:column="50">d<pos:position pos:line="13" pos:column="51"/></name><operator pos:line="13" pos:column="51">-&gt;<pos:position pos:line="13" pos:column="56"/></operator><name pos:line="13" pos:column="53">allows<pos:position pos:line="13" pos:column="59"/></name></name></expr> <pos:position pos:line="13" pos:column="60"/></then><else pos:line="13" pos:column="60">: <expr><name><name pos:line="13" pos:column="62">d<pos:position pos:line="13" pos:column="63"/></name><operator pos:line="13" pos:column="63">-&gt;<pos:position pos:line="13" pos:column="68"/></operator><name pos:line="13" pos:column="65">denys<pos:position pos:line="13" pos:column="70"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">a<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">x<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">.<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">from<pos:position pos:line="14" pos:column="14"/></name></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">where<pos:position pos:line="14" pos:column="22"/></name></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">a<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">limited<pos:position pos:line="15" pos:column="15"/></name></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name><name pos:line="15" pos:column="18">cmd<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">limited<pos:position pos:line="15" pos:column="30"/></name></name></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><call><name pos:line="17" pos:column="10">strncasecmp<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">where<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="29">"env=!"<pos:position pos:line="17" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="38">5<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="41"/></condition><then pos:line="17" pos:column="41"> <block pos:line="17" pos:column="42">{
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">a<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">type<pos:position pos:line="18" pos:column="16"/></name></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">T_NENV<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">a<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">x<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">.<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">from<pos:position pos:line="19" pos:column="18"/></name></name> <operator pos:line="19" pos:column="19">+=<pos:position pos:line="19" pos:column="21"/></operator> <literal type="number" pos:line="19" pos:column="22">5<pos:position pos:line="19" pos:column="23"/></literal></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>

    }<pos:position pos:line="21" pos:column="6"/></block></then>
    <elseif pos:line="22" pos:column="5">else <if pos:line="22" pos:column="10">if <condition pos:line="22" pos:column="13">(<expr><operator pos:line="22" pos:column="14">!<pos:position pos:line="22" pos:column="15"/></operator><call><name pos:line="22" pos:column="15">strncasecmp<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">where<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="34">"env="<pos:position pos:line="22" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="42">4<pos:position pos:line="22" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="45"/></condition><then pos:line="22" pos:column="45"> <block pos:line="22" pos:column="46">{
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">a<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">type<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">T_ENV<pos:position pos:line="23" pos:column="24"/></name></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">a<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">x<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">.<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">from<pos:position pos:line="24" pos:column="18"/></name></name> <operator pos:line="24" pos:column="19">+=<pos:position pos:line="24" pos:column="21"/></operator> <literal type="number" pos:line="24" pos:column="22">4<pos:position pos:line="24" pos:column="23"/></literal></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>

    }<pos:position pos:line="26" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="27" pos:column="5">else <if pos:line="27" pos:column="10">if <condition pos:line="27" pos:column="13">(<expr><operator pos:line="27" pos:column="14">!<pos:position pos:line="27" pos:column="15"/></operator><call><name pos:line="27" pos:column="15">strcasecmp<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><name pos:line="27" pos:column="26">where<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="33">"all"<pos:position pos:line="27" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="40"/></condition><then pos:line="27" pos:column="40"> <block pos:line="27" pos:column="41">{
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">a<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">type<pos:position pos:line="28" pos:column="16"/></name></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <name pos:line="28" pos:column="19">T_ALL<pos:position pos:line="28" pos:column="24"/></name></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="30" pos:column="5">else <if pos:line="30" pos:column="10">if <condition pos:line="30" pos:column="13">(<expr><operator pos:line="30" pos:column="14">(<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">s<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <call><name pos:line="30" pos:column="19">ap_strchr<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><name pos:line="30" pos:column="29">where<pos:position pos:line="30" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="30" pos:column="36">'/'<pos:position pos:line="30" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call><operator pos:line="30" pos:column="40">)<pos:position pos:line="30" pos:column="41"/></operator></expr>)<pos:position pos:line="30" pos:column="42"/></condition><then pos:line="30" pos:column="42"> <block pos:line="30" pos:column="43">{
        <expr_stmt><expr><operator pos:line="31" pos:column="9">*<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">s<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">++<pos:position pos:line="31" pos:column="13"/></operator> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <literal type="char" pos:line="31" pos:column="16">'\0'<pos:position pos:line="31" pos:column="20"/></literal></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="32" pos:column="9">rv<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <call><name pos:line="32" pos:column="14">apr_ipsubnet_create<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><operator pos:line="32" pos:column="34">&amp;<pos:position pos:line="32" pos:column="39"/></operator><name><name pos:line="32" pos:column="35">a<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">x<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">.<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="40">ip<pos:position pos:line="32" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="44">where<pos:position pos:line="32" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="51">s<pos:position pos:line="32" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="54">cmd<pos:position pos:line="32" pos:column="57"/></name><operator pos:line="32" pos:column="57">-&gt;<pos:position pos:line="32" pos:column="62"/></operator><name pos:line="32" pos:column="59">pool<pos:position pos:line="32" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="65"/></expr_stmt>
        <if pos:line="33" pos:column="9">if<condition pos:line="33" pos:column="11">(<expr><call><name pos:line="33" pos:column="12">APR_STATUS_IS_EINVAL<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">rv<pos:position pos:line="33" pos:column="35"/></name></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="37"/></condition><then pos:line="33" pos:column="37"> <block pos:line="33" pos:column="38">{
            <comment type="block" pos:line="34" pos:column="13">/* looked nothing like an IP address */</comment>
            <return pos:line="35" pos:column="13">return <expr><literal type="string" pos:line="35" pos:column="20">"An IP address was expected"<pos:position pos:line="35" pos:column="48"/></literal></expr>;<pos:position pos:line="35" pos:column="49"/></return>
        }<pos:position pos:line="36" pos:column="10"/></block></then>
        <elseif pos:line="37" pos:column="9">else <if pos:line="37" pos:column="14">if <condition pos:line="37" pos:column="17">(<expr><name pos:line="37" pos:column="18">rv<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">!=<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="24">APR_SUCCESS<pos:position pos:line="37" pos:column="35"/></name></expr>)<pos:position pos:line="37" pos:column="36"/></condition><then pos:line="37" pos:column="36"> <block pos:line="37" pos:column="37">{
            <return pos:line="38" pos:column="13">return <expr><call><name pos:line="38" pos:column="20">apr_psprintf<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name><name pos:line="38" pos:column="33">cmd<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">-&gt;<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="38">pool<pos:position pos:line="38" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="44">"%pm"<pos:position pos:line="38" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="38" pos:column="51">&amp;<pos:position pos:line="38" pos:column="56"/></operator><name pos:line="38" pos:column="52">rv<pos:position pos:line="38" pos:column="54"/></name></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="56"/></return>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if></elseif></if>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">a<pos:position pos:line="40" pos:column="10"/></name><operator pos:line="40" pos:column="10">-&gt;<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="12">type<pos:position pos:line="40" pos:column="16"/></name></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <name pos:line="40" pos:column="19">T_IP<pos:position pos:line="40" pos:column="23"/></name></expr>;<pos:position pos:line="40" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="42" pos:column="5">else <if pos:line="42" pos:column="10">if <condition pos:line="42" pos:column="13">(<expr><operator pos:line="42" pos:column="14">!<pos:position pos:line="42" pos:column="15"/></operator><call><name pos:line="42" pos:column="15">APR_STATUS_IS_EINVAL<pos:position pos:line="42" pos:column="35"/></name><argument_list pos:line="42" pos:column="35">(<argument><expr><name pos:line="42" pos:column="36">rv<pos:position pos:line="42" pos:column="38"/></name> <operator pos:line="42" pos:column="39">=<pos:position pos:line="42" pos:column="40"/></operator> <call><name pos:line="42" pos:column="41">apr_ipsubnet_create<pos:position pos:line="42" pos:column="60"/></name><argument_list pos:line="42" pos:column="60">(<argument><expr><operator pos:line="42" pos:column="61">&amp;<pos:position pos:line="42" pos:column="66"/></operator><name><name pos:line="42" pos:column="62">a<pos:position pos:line="42" pos:column="63"/></name><operator pos:line="42" pos:column="63">-&gt;<pos:position pos:line="42" pos:column="68"/></operator><name pos:line="42" pos:column="65">x<pos:position pos:line="42" pos:column="66"/></name><operator pos:line="42" pos:column="66">.<pos:position pos:line="42" pos:column="67"/></operator><name pos:line="42" pos:column="67">ip<pos:position pos:line="42" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="71">where<pos:position pos:line="42" pos:column="76"/></name></expr></argument>,
                                                            <argument><expr><name pos:line="43" pos:column="61">NULL<pos:position pos:line="43" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="67">cmd<pos:position pos:line="43" pos:column="70"/></name><operator pos:line="43" pos:column="70">-&gt;<pos:position pos:line="43" pos:column="75"/></operator><name pos:line="43" pos:column="72">pool<pos:position pos:line="43" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="79"/></condition><then pos:line="43" pos:column="79"> <block pos:line="43" pos:column="80">{
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">rv<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">!=<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">APR_SUCCESS<pos:position pos:line="44" pos:column="30"/></name></expr>)<pos:position pos:line="44" pos:column="31"/></condition><then pos:line="44" pos:column="31">
            <block type="pseudo"><return pos:line="45" pos:column="13">return <expr><call><name pos:line="45" pos:column="20">apr_psprintf<pos:position pos:line="45" pos:column="32"/></name><argument_list pos:line="45" pos:column="32">(<argument><expr><name><name pos:line="45" pos:column="33">cmd<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">-&gt;<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="38">pool<pos:position pos:line="45" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="44">"%pm"<pos:position pos:line="45" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="45" pos:column="51">&amp;<pos:position pos:line="45" pos:column="56"/></operator><name pos:line="45" pos:column="52">rv<pos:position pos:line="45" pos:column="54"/></name></expr></argument>)<pos:position pos:line="45" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="56"/></return></block></then></if>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">a<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">-&gt;<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="12">type<pos:position pos:line="46" pos:column="16"/></name></name> <operator pos:line="46" pos:column="17">=<pos:position pos:line="46" pos:column="18"/></operator> <name pos:line="46" pos:column="19">T_IP<pos:position pos:line="46" pos:column="23"/></name></expr>;<pos:position pos:line="46" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if></elseif>
    <else pos:line="48" pos:column="5">else <block pos:line="48" pos:column="10">{ <comment type="block" pos:line="48" pos:column="12">/* no slash, didn't look like an IP address =&gt; must be a host */</comment>
        <expr_stmt><expr><name><name pos:line="49" pos:column="9">a<pos:position pos:line="49" pos:column="10"/></name><operator pos:line="49" pos:column="10">-&gt;<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="12">type<pos:position pos:line="49" pos:column="16"/></name></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <name pos:line="49" pos:column="19">T_HOST<pos:position pos:line="49" pos:column="25"/></name></expr>;<pos:position pos:line="49" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></else></if>

    <return pos:line="52" pos:column="5">return <expr><name pos:line="52" pos:column="12">NULL<pos:position pos:line="52" pos:column="16"/></name></expr>;<pos:position pos:line="52" pos:column="17"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

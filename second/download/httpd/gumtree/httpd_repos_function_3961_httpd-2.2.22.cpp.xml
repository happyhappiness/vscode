<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3961_httpd-2.2.22.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">apr_atomic_sub32<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">volatile<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">apr_uint32_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">mem<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">apr_uint32_t<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">val<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
     <decl_stmt><decl><type><name pos:line="3" pos:column="6">apr_uint32_t<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">old<pos:position pos:line="3" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="24">new_val<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>

     <expr_stmt><expr><name pos:line="5" pos:column="6">old<pos:position pos:line="5" pos:column="9"/></name> <operator pos:line="5" pos:column="10">=<pos:position pos:line="5" pos:column="11"/></operator> <operator pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">mem<pos:position pos:line="5" pos:column="16"/></name></expr>;<pos:position pos:line="5" pos:column="17"/></expr_stmt>   <comment type="block" pos:line="5" pos:column="20">/* old is automatically updated on cs failure */</comment>
     <do pos:line="6" pos:column="6">do <block pos:line="6" pos:column="9">{
         <expr_stmt><expr><name pos:line="7" pos:column="10">new_val<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">old<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">-<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">val<pos:position pos:line="7" pos:column="29"/></name></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
     }<pos:position pos:line="8" pos:column="7"/></block> while <condition pos:line="8" pos:column="14">(<expr><call><name pos:line="8" pos:column="15">__cs<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><operator pos:line="8" pos:column="20">&amp;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="21">old<pos:position pos:line="8" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="26">(<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">cs_t<pos:position pos:line="8" pos:column="31"/></name> <operator pos:line="8" pos:column="32">*<pos:position pos:line="8" pos:column="33"/></operator><operator pos:line="8" pos:column="33">)<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="34">mem<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="39">new_val<pos:position pos:line="8" pos:column="46"/></name></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="48"/></condition>;<pos:position pos:line="8" pos:column="49"/></do>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3433_httpd-2.2.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_socket_recv<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">apr_socket_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">sock<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">buf<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">apr_size_t<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">len<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_ssize_t<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">rv<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">arv<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">sock<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">options<pos:position pos:line="6" pos:column="22"/></name></name> <operator pos:line="6" pos:column="23">&amp;<pos:position pos:line="6" pos:column="28"/></operator> <name pos:line="6" pos:column="25">APR_INCOMPLETE_READ<pos:position pos:line="6" pos:column="44"/></name></expr>)<pos:position pos:line="6" pos:column="45"/></condition><then pos:line="6" pos:column="45"> <block pos:line="6" pos:column="46">{
        <expr_stmt><expr><name><name pos:line="7" pos:column="9">sock<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">options<pos:position pos:line="7" pos:column="22"/></name></name> <operator pos:line="7" pos:column="23">&amp;=<pos:position pos:line="7" pos:column="29"/></operator> <operator pos:line="7" pos:column="26">~<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">APR_INCOMPLETE_READ<pos:position pos:line="7" pos:column="46"/></name></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt>
        <goto pos:line="8" pos:column="9">goto <name pos:line="8" pos:column="14">do_select<pos:position pos:line="8" pos:column="23"/></name>;<pos:position pos:line="8" pos:column="24"/></goto>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <do pos:line="11" pos:column="5">do <block pos:line="11" pos:column="8">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">rv<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">read<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name><name pos:line="12" pos:column="19">sock<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">socketdes<pos:position pos:line="12" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="36">buf<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="41">(<pos:position pos:line="12" pos:column="42"/></operator><operator pos:line="12" pos:column="42">*<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="43">len<pos:position pos:line="12" pos:column="46"/></name><operator pos:line="12" pos:column="46">)<pos:position pos:line="12" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block> while <condition pos:line="13" pos:column="13">(<expr><name pos:line="13" pos:column="14">rv<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">==<pos:position pos:line="13" pos:column="19"/></operator> <operator pos:line="13" pos:column="20">-<pos:position pos:line="13" pos:column="21"/></operator><literal type="number" pos:line="13" pos:column="21">1<pos:position pos:line="13" pos:column="22"/></literal> <operator pos:line="13" pos:column="23">&amp;&amp;<pos:position pos:line="13" pos:column="33"/></operator> <name pos:line="13" pos:column="26">errno<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">==<pos:position pos:line="13" pos:column="34"/></operator> <name pos:line="13" pos:column="35">EINTR<pos:position pos:line="13" pos:column="40"/></name></expr>)<pos:position pos:line="13" pos:column="41"/></condition>;<pos:position pos:line="13" pos:column="42"/></do>

    <while pos:line="15" pos:column="5">while <condition pos:line="15" pos:column="11">(<expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">rv<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator> <operator pos:line="15" pos:column="19">-<pos:position pos:line="15" pos:column="20"/></operator><literal type="number" pos:line="15" pos:column="20">1<pos:position pos:line="15" pos:column="21"/></literal><operator pos:line="15" pos:column="21">)<pos:position pos:line="15" pos:column="22"/></operator> <operator pos:line="15" pos:column="23">&amp;&amp;<pos:position pos:line="15" pos:column="33"/></operator> <operator pos:line="15" pos:column="26">(<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">errno<pos:position pos:line="15" pos:column="32"/></name> <operator pos:line="15" pos:column="33">==<pos:position pos:line="15" pos:column="35"/></operator> <name pos:line="15" pos:column="36">EAGAIN<pos:position pos:line="15" pos:column="42"/></name> <operator pos:line="15" pos:column="43">||<pos:position pos:line="15" pos:column="45"/></operator> <name pos:line="15" pos:column="46">errno<pos:position pos:line="15" pos:column="51"/></name> <operator pos:line="15" pos:column="52">==<pos:position pos:line="15" pos:column="54"/></operator> <name pos:line="15" pos:column="55">EWOULDBLOCK<pos:position pos:line="15" pos:column="66"/></name><operator pos:line="15" pos:column="66">)<pos:position pos:line="15" pos:column="67"/></operator>
                      <operator pos:line="16" pos:column="23">&amp;&amp;<pos:position pos:line="16" pos:column="33"/></operator> <operator pos:line="16" pos:column="26">(<pos:position pos:line="16" pos:column="27"/></operator><name><name pos:line="16" pos:column="27">sock<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">timeout<pos:position pos:line="16" pos:column="40"/></name></name> <operator pos:line="16" pos:column="41">&gt;<pos:position pos:line="16" pos:column="45"/></operator> <literal type="number" pos:line="16" pos:column="43">0<pos:position pos:line="16" pos:column="44"/></literal><operator pos:line="16" pos:column="44">)<pos:position pos:line="16" pos:column="45"/></operator></expr>)<pos:position pos:line="16" pos:column="46"/></condition> <block pos:line="16" pos:column="47">{
<label><name pos:line="17" pos:column="1">do_select<pos:position pos:line="17" pos:column="10"/></name>:<pos:position pos:line="17" pos:column="11"/></label>
        <expr_stmt><expr><name pos:line="18" pos:column="9">arv<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">apr_wait_for_io_or_timeout<pos:position pos:line="18" pos:column="41"/></name><argument_list pos:line="18" pos:column="41">(<argument><expr><name pos:line="18" pos:column="42">NULL<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="48">sock<pos:position pos:line="18" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="54">1<pos:position pos:line="18" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">arv<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">!=<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">APR_SUCCESS<pos:position pos:line="19" pos:column="31"/></name></expr>)<pos:position pos:line="19" pos:column="32"/></condition><then pos:line="19" pos:column="32"> <block pos:line="19" pos:column="33">{
            <expr_stmt><expr><operator pos:line="20" pos:column="13">*<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">len<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <literal type="number" pos:line="20" pos:column="20">0<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
            <return pos:line="21" pos:column="13">return <expr><name pos:line="21" pos:column="20">arv<pos:position pos:line="21" pos:column="23"/></name></expr>;<pos:position pos:line="21" pos:column="24"/></return>
        }<pos:position pos:line="22" pos:column="10"/></block></then>
        <else pos:line="23" pos:column="9">else <block pos:line="23" pos:column="14">{
            <do pos:line="24" pos:column="13">do <block pos:line="24" pos:column="16">{
                <expr_stmt><expr><name pos:line="25" pos:column="17">rv<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <call><name pos:line="25" pos:column="22">read<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name><name pos:line="25" pos:column="27">sock<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">-&gt;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="33">socketdes<pos:position pos:line="25" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="44">buf<pos:position pos:line="25" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="49">(<pos:position pos:line="25" pos:column="50"/></operator><operator pos:line="25" pos:column="50">*<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="51">len<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">)<pos:position pos:line="25" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="57"/></expr_stmt>
            }<pos:position pos:line="26" pos:column="14"/></block> while <condition pos:line="26" pos:column="21">(<expr><name pos:line="26" pos:column="22">rv<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">==<pos:position pos:line="26" pos:column="27"/></operator> <operator pos:line="26" pos:column="28">-<pos:position pos:line="26" pos:column="29"/></operator><literal type="number" pos:line="26" pos:column="29">1<pos:position pos:line="26" pos:column="30"/></literal> <operator pos:line="26" pos:column="31">&amp;&amp;<pos:position pos:line="26" pos:column="41"/></operator> <name pos:line="26" pos:column="34">errno<pos:position pos:line="26" pos:column="39"/></name> <operator pos:line="26" pos:column="40">==<pos:position pos:line="26" pos:column="42"/></operator> <name pos:line="26" pos:column="43">EINTR<pos:position pos:line="26" pos:column="48"/></name></expr>)<pos:position pos:line="26" pos:column="49"/></condition>;<pos:position pos:line="26" pos:column="50"/></do>
        }<pos:position pos:line="27" pos:column="10"/></block></else></if>
    }<pos:position pos:line="28" pos:column="6"/></block></while>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">rv<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">==<pos:position pos:line="29" pos:column="14"/></operator> <operator pos:line="29" pos:column="15">-<pos:position pos:line="29" pos:column="16"/></operator><literal type="number" pos:line="29" pos:column="16">1<pos:position pos:line="29" pos:column="17"/></literal></expr>)<pos:position pos:line="29" pos:column="18"/></condition><then pos:line="29" pos:column="18"> <block pos:line="29" pos:column="19">{
        <expr_stmt><expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><operator pos:line="30" pos:column="10">*<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">len<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">)<pos:position pos:line="30" pos:column="15"/></operator> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></expr_stmt>
        <return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">errno<pos:position pos:line="31" pos:column="21"/></name></expr>;<pos:position pos:line="31" pos:column="22"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">(<pos:position pos:line="33" pos:column="10"/></operator><name><name pos:line="33" pos:column="10">sock<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">timeout<pos:position pos:line="33" pos:column="23"/></name></name> <operator pos:line="33" pos:column="24">&gt;<pos:position pos:line="33" pos:column="28"/></operator> <literal type="number" pos:line="33" pos:column="26">0<pos:position pos:line="33" pos:column="27"/></literal><operator pos:line="33" pos:column="27">)<pos:position pos:line="33" pos:column="28"/></operator> <operator pos:line="33" pos:column="29">&amp;&amp;<pos:position pos:line="33" pos:column="39"/></operator> <operator pos:line="33" pos:column="32">(<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="33">rv<pos:position pos:line="33" pos:column="35"/></name> <operator pos:line="33" pos:column="36">&lt;<pos:position pos:line="33" pos:column="40"/></operator> <operator pos:line="33" pos:column="38">*<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="39">len<pos:position pos:line="33" pos:column="42"/></name><operator pos:line="33" pos:column="42">)<pos:position pos:line="33" pos:column="43"/></operator></expr>)<pos:position pos:line="33" pos:column="44"/></condition><then pos:line="33" pos:column="44"> <block pos:line="33" pos:column="45">{
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">sock<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">-&gt;<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="15">options<pos:position pos:line="34" pos:column="22"/></name></name> <operator pos:line="34" pos:column="23">|=<pos:position pos:line="34" pos:column="25"/></operator> <name pos:line="34" pos:column="26">APR_INCOMPLETE_READ<pos:position pos:line="34" pos:column="45"/></name></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="36" pos:column="5">(<pos:position pos:line="36" pos:column="6"/></operator><operator pos:line="36" pos:column="6">*<pos:position pos:line="36" pos:column="7"/></operator><name pos:line="36" pos:column="7">len<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">)<pos:position pos:line="36" pos:column="11"/></operator> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <name pos:line="36" pos:column="14">rv<pos:position pos:line="36" pos:column="16"/></name></expr>;<pos:position pos:line="36" pos:column="17"/></expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">rv<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">==<pos:position pos:line="37" pos:column="14"/></operator> <literal type="number" pos:line="37" pos:column="15">0<pos:position pos:line="37" pos:column="16"/></literal></expr>)<pos:position pos:line="37" pos:column="17"/></condition><then pos:line="37" pos:column="17"> <block pos:line="37" pos:column="18">{
        <return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">APR_EOF<pos:position pos:line="38" pos:column="23"/></name></expr>;<pos:position pos:line="38" pos:column="24"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    <return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">APR_SUCCESS<pos:position pos:line="40" pos:column="23"/></name></expr>;<pos:position pos:line="40" pos:column="24"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

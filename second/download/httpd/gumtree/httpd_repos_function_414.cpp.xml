<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_414.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_time_t<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">get_request_end_time<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">request_rec<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">r<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">log_request_state<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">state<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><operator pos:line="3" pos:column="32">(<pos:position pos:line="3" pos:column="33"/></operator><name pos:line="3" pos:column="33">log_request_state<pos:position pos:line="3" pos:column="50"/></name> <operator pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></operator><operator pos:line="3" pos:column="52">)<pos:position pos:line="3" pos:column="53"/></operator><call><name pos:line="3" pos:column="53">ap_get_module_config<pos:position pos:line="3" pos:column="73"/></name><argument_list pos:line="3" pos:column="73">(<argument><expr><name><name pos:line="3" pos:column="74">r<pos:position pos:line="3" pos:column="75"/></name><operator pos:line="3" pos:column="75">-&gt;<pos:position pos:line="3" pos:column="80"/></operator><name pos:line="3" pos:column="77">request_config<pos:position pos:line="3" pos:column="91"/></name></name></expr></argument>,
                                                                         <argument><expr><operator pos:line="4" pos:column="74">&amp;<pos:position pos:line="4" pos:column="79"/></operator><name pos:line="4" pos:column="75">log_config_module<pos:position pos:line="4" pos:column="92"/></name></expr></argument>)<pos:position pos:line="4" pos:column="93"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="94"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">state<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">request_end_time<pos:position pos:line="5" pos:column="32"/></name></name> <operator pos:line="5" pos:column="33">==<pos:position pos:line="5" pos:column="35"/></operator> <literal type="number" pos:line="5" pos:column="36">0<pos:position pos:line="5" pos:column="37"/></literal></expr>)<pos:position pos:line="5" pos:column="38"/></condition><then pos:line="5" pos:column="38"> <block pos:line="5" pos:column="39">{
        <expr_stmt><expr><name><name pos:line="6" pos:column="9">state<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">request_end_time<pos:position pos:line="6" pos:column="32"/></name></name> <operator pos:line="6" pos:column="33">=<pos:position pos:line="6" pos:column="34"/></operator> <call><name pos:line="6" pos:column="35">apr_time_now<pos:position pos:line="6" pos:column="47"/></name><argument_list pos:line="6" pos:column="47">()<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>
    <return pos:line="8" pos:column="5">return <expr><name><name pos:line="8" pos:column="12">state<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">request_end_time<pos:position pos:line="8" pos:column="35"/></name></name></expr>;<pos:position pos:line="8" pos:column="36"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

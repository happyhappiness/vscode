<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1905_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">core_pre_connection<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">conn_rec<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">c<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">void<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">csd<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">core_net_rec<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">net<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><call><name pos:line="3" pos:column="25">apr_palloc<pos:position pos:line="3" pos:column="35"/></name><argument_list pos:line="3" pos:column="35">(<argument><expr><name><name pos:line="3" pos:column="36">c<pos:position pos:line="3" pos:column="37"/></name><operator pos:line="3" pos:column="37">-&gt;<pos:position pos:line="3" pos:column="42"/></operator><name pos:line="3" pos:column="39">pool<pos:position pos:line="3" pos:column="43"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="45">sizeof<argument_list pos:line="3" pos:column="51">(<argument><expr><operator pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></operator><name pos:line="3" pos:column="53">net<pos:position pos:line="3" pos:column="56"/></name></expr></argument>)<pos:position pos:line="3" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="59"/></decl_stmt>

<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">AP_MPM_DISABLE_NAGLE_ACCEPTED_SOCK<pos:position pos:line="5" pos:column="42"/></name></cpp:ifdef>
    <comment type="block" pos:line="6" pos:column="5">/* BillS says perhaps this should be moved to the MPMs. Some OSes
     * allow listening socket attributes to be inherited by the
     * accept sockets which means this call only needs to be made
     * once on the listener
     */</comment>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ap_sock_disable_nagle<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">csd<pos:position pos:line="11" pos:column="30"/></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">net<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">-&gt;<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="10">c<pos:position pos:line="13" pos:column="11"/></name></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <name pos:line="13" pos:column="14">c<pos:position pos:line="13" pos:column="15"/></name></expr>;<pos:position pos:line="13" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">net<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">-&gt;<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="10">in_ctx<pos:position pos:line="14" pos:column="16"/></name></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">NULL<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">net<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">-&gt;<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="10">out_ctx<pos:position pos:line="15" pos:column="17"/></name></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">NULL<pos:position pos:line="15" pos:column="24"/></name></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">net<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">client_socket<pos:position pos:line="16" pos:column="23"/></name></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="26">csd<pos:position pos:line="16" pos:column="29"/></name></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ap_set_module_config<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name><name pos:line="18" pos:column="26">net<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">c<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">conn_config<pos:position pos:line="18" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="47">&amp;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="48">core_module<pos:position pos:line="18" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="61">csd<pos:position pos:line="18" pos:column="64"/></name></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ap_add_input_filter_handle<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><name pos:line="19" pos:column="32">ap_core_input_filter_handle<pos:position pos:line="19" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="61">net<pos:position pos:line="19" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="66">NULL<pos:position pos:line="19" pos:column="70"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="72">net<pos:position pos:line="19" pos:column="75"/></name><operator pos:line="19" pos:column="75">-&gt;<pos:position pos:line="19" pos:column="80"/></operator><name pos:line="19" pos:column="77">c<pos:position pos:line="19" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">ap_add_output_filter_handle<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">ap_core_output_filter_handle<pos:position pos:line="20" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="63">net<pos:position pos:line="20" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="68">NULL<pos:position pos:line="20" pos:column="72"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="74">net<pos:position pos:line="20" pos:column="77"/></name><operator pos:line="20" pos:column="77">-&gt;<pos:position pos:line="20" pos:column="82"/></operator><name pos:line="20" pos:column="79">c<pos:position pos:line="20" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="82"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">DONE<pos:position pos:line="21" pos:column="16"/></name></expr>;<pos:position pos:line="21" pos:column="17"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1598_httpd-2.2.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">ajp_msg_append_uint32<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">ajp_msg_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">msg<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">apr_uint32_t<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">value<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">len<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name><name pos:line="3" pos:column="22">msg<pos:position pos:line="3" pos:column="25"/></name><operator pos:line="3" pos:column="25">-&gt;<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="27">len<pos:position pos:line="3" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">len<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">+<pos:position pos:line="5" pos:column="15"/></operator> <literal type="number" pos:line="5" pos:column="16">4<pos:position pos:line="5" pos:column="17"/></literal><operator pos:line="5" pos:column="17">)<pos:position pos:line="5" pos:column="18"/></operator> <operator pos:line="5" pos:column="19">&gt;<pos:position pos:line="5" pos:column="23"/></operator> <name><name pos:line="5" pos:column="21">msg<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">-&gt;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="26">max_size<pos:position pos:line="5" pos:column="34"/></name></name></expr>)<pos:position pos:line="5" pos:column="35"/></condition><then pos:line="5" pos:column="35"> <block pos:line="5" pos:column="36">{
        <return pos:line="6" pos:column="9">return <expr><call><name pos:line="6" pos:column="16">ajp_log_overflow<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">msg<pos:position pos:line="6" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="38">"ajp_msg_append_uint32"<pos:position pos:line="6" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="63"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="9" pos:column="5">msg<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">-&gt;<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="10">buf<pos:position pos:line="9" pos:column="13"/></name><index pos:line="9" pos:column="13">[<expr><name pos:line="9" pos:column="14">len<pos:position pos:line="9" pos:column="17"/></name></expr>]<pos:position pos:line="9" pos:column="18"/></index></name>     <operator pos:line="9" pos:column="23">=<pos:position pos:line="9" pos:column="24"/></operator> <call pos:line="9" pos:column="25">(<name pos:line="9" pos:column="26">apr_byte_t<pos:position pos:line="9" pos:column="36"/></name>)<argument_list pos:line="9" pos:column="37">(<argument><expr><operator pos:line="9" pos:column="38">(<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="39">value<pos:position pos:line="9" pos:column="44"/></name> <operator pos:line="9" pos:column="45">&gt;&gt;<pos:position pos:line="9" pos:column="50"/></operator> <literal type="number" pos:line="9" pos:column="48">24<pos:position pos:line="9" pos:column="50"/></literal><operator pos:line="9" pos:column="50">)<pos:position pos:line="9" pos:column="51"/></operator> <operator pos:line="9" pos:column="52">&amp;<pos:position pos:line="9" pos:column="57"/></operator> <literal type="number" pos:line="9" pos:column="54">0xFF<pos:position pos:line="9" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">msg<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">-&gt;<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="10">buf<pos:position pos:line="10" pos:column="13"/></name><index pos:line="10" pos:column="13">[<expr><name pos:line="10" pos:column="14">len<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">+<pos:position pos:line="10" pos:column="19"/></operator> <literal type="number" pos:line="10" pos:column="20">1<pos:position pos:line="10" pos:column="21"/></literal></expr>]<pos:position pos:line="10" pos:column="22"/></index></name> <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <call pos:line="10" pos:column="25">(<name pos:line="10" pos:column="26">apr_byte_t<pos:position pos:line="10" pos:column="36"/></name>)<argument_list pos:line="10" pos:column="37">(<argument><expr><operator pos:line="10" pos:column="38">(<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="39">value<pos:position pos:line="10" pos:column="44"/></name> <operator pos:line="10" pos:column="45">&gt;&gt;<pos:position pos:line="10" pos:column="50"/></operator> <literal type="number" pos:line="10" pos:column="48">16<pos:position pos:line="10" pos:column="50"/></literal><operator pos:line="10" pos:column="50">)<pos:position pos:line="10" pos:column="51"/></operator> <operator pos:line="10" pos:column="52">&amp;<pos:position pos:line="10" pos:column="57"/></operator> <literal type="number" pos:line="10" pos:column="54">0xFF<pos:position pos:line="10" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">msg<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">-&gt;<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="10">buf<pos:position pos:line="11" pos:column="13"/></name><index pos:line="11" pos:column="13">[<expr><name pos:line="11" pos:column="14">len<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">+<pos:position pos:line="11" pos:column="19"/></operator> <literal type="number" pos:line="11" pos:column="20">2<pos:position pos:line="11" pos:column="21"/></literal></expr>]<pos:position pos:line="11" pos:column="22"/></index></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <call pos:line="11" pos:column="25">(<name pos:line="11" pos:column="26">apr_byte_t<pos:position pos:line="11" pos:column="36"/></name>)<argument_list pos:line="11" pos:column="37">(<argument><expr><operator pos:line="11" pos:column="38">(<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">value<pos:position pos:line="11" pos:column="44"/></name> <operator pos:line="11" pos:column="45">&gt;&gt;<pos:position pos:line="11" pos:column="50"/></operator> <literal type="number" pos:line="11" pos:column="48">8<pos:position pos:line="11" pos:column="49"/></literal><operator pos:line="11" pos:column="49">)<pos:position pos:line="11" pos:column="50"/></operator> <operator pos:line="11" pos:column="51">&amp;<pos:position pos:line="11" pos:column="56"/></operator> <literal type="number" pos:line="11" pos:column="53">0xFF<pos:position pos:line="11" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">msg<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">-&gt;<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="10">buf<pos:position pos:line="12" pos:column="13"/></name><index pos:line="12" pos:column="13">[<expr><name pos:line="12" pos:column="14">len<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">+<pos:position pos:line="12" pos:column="19"/></operator> <literal type="number" pos:line="12" pos:column="20">3<pos:position pos:line="12" pos:column="21"/></literal></expr>]<pos:position pos:line="12" pos:column="22"/></index></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <call pos:line="12" pos:column="25">(<name pos:line="12" pos:column="26">apr_byte_t<pos:position pos:line="12" pos:column="36"/></name>)<argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">value<pos:position pos:line="12" pos:column="43"/></name> <operator pos:line="12" pos:column="44">&amp;<pos:position pos:line="12" pos:column="49"/></operator> <literal type="number" pos:line="12" pos:column="46">0xFF<pos:position pos:line="12" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="14" pos:column="5">msg<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">-&gt;<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="10">len<pos:position pos:line="14" pos:column="13"/></name></name> <operator pos:line="14" pos:column="14">+=<pos:position pos:line="14" pos:column="16"/></operator> <literal type="number" pos:line="14" pos:column="17">4<pos:position pos:line="14" pos:column="18"/></literal></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt>

    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">APR_SUCCESS<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2277_httpd-2.4.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">out_write<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">h2_mplx<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">m<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">h2_io<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">io<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, 
                              <parameter><decl><type><name pos:line="2" pos:column="31">ap_filter_t<pos:position pos:line="2" pos:column="42"/></name><modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type> <name pos:line="2" pos:column="44">f<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">apr_bucket_brigade<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">bb<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
                              <parameter><decl><type><name><name pos:line="3" pos:column="31">struct<pos:position pos:line="3" pos:column="37"/></name> <name pos:line="3" pos:column="38">apr_thread_cond_t<pos:position pos:line="3" pos:column="55"/></name></name> <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier></type><name pos:line="3" pos:column="57">iowait<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="64"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">APR_SUCCESS<pos:position pos:line="5" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* We check the memory footprint queued for this stream_id
     * and block if it exceeds our configured limit.
     * We will not split buckets to enforce the limit to the last
     * byte. After all, the bucket is already in memory.
     */</comment>
    <while pos:line="11" pos:column="5">while <condition pos:line="11" pos:column="11">(<expr><operator pos:line="11" pos:column="12">!<pos:position pos:line="11" pos:column="13"/></operator><call><name pos:line="11" pos:column="13">APR_BRIGADE_EMPTY<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">bb<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call> 
           <operator pos:line="12" pos:column="12">&amp;&amp;<pos:position pos:line="12" pos:column="22"/></operator> <operator pos:line="12" pos:column="15">(<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">status<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">==<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">APR_SUCCESS<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">)<pos:position pos:line="12" pos:column="38"/></operator>
           <operator pos:line="13" pos:column="12">&amp;&amp;<pos:position pos:line="13" pos:column="22"/></operator> <operator pos:line="13" pos:column="15">!<pos:position pos:line="13" pos:column="16"/></operator><call><name pos:line="13" pos:column="16">is_aborted<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">m<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="30">&amp;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="31">status<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="39"/></condition> <block pos:line="13" pos:column="40">{
        
        <expr_stmt><expr><name pos:line="15" pos:column="9">status<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">h2_io_out_write<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><name pos:line="15" pos:column="34">io<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">bb<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="42">m<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">-&gt;<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="45">stream_max_mem<pos:position pos:line="15" pos:column="59"/></name></name></expr></argument>, 
                                 <argument><expr><operator pos:line="16" pos:column="34">&amp;<pos:position pos:line="16" pos:column="39"/></operator><name><name pos:line="16" pos:column="35">m<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">file_handles_allowed<pos:position pos:line="16" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="60"/></expr_stmt>
        
        <comment type="block" pos:line="18" pos:column="9">/* Wait for data to drain until there is room again */</comment>
        <while pos:line="19" pos:column="9">while <condition pos:line="19" pos:column="15">(<expr><operator pos:line="19" pos:column="16">!<pos:position pos:line="19" pos:column="17"/></operator><call><name pos:line="19" pos:column="17">APR_BRIGADE_EMPTY<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">(<argument><expr><name pos:line="19" pos:column="35">bb<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call> 
               <operator pos:line="20" pos:column="16">&amp;&amp;<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="19">iowait<pos:position pos:line="20" pos:column="25"/></name>
               <operator pos:line="21" pos:column="16">&amp;&amp;<pos:position pos:line="21" pos:column="26"/></operator> <name pos:line="21" pos:column="19">status<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">==<pos:position pos:line="21" pos:column="28"/></operator> <name pos:line="21" pos:column="29">APR_SUCCESS<pos:position pos:line="21" pos:column="40"/></name>
               <operator pos:line="22" pos:column="16">&amp;&amp;<pos:position pos:line="22" pos:column="26"/></operator> <operator pos:line="22" pos:column="19">(<pos:position pos:line="22" pos:column="20"/></operator><name><name pos:line="22" pos:column="20">m<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">stream_max_mem<pos:position pos:line="22" pos:column="37"/></name></name> <operator pos:line="22" pos:column="38">&lt;=<pos:position pos:line="22" pos:column="43"/></operator> <call><name pos:line="22" pos:column="41">h2_io_out_length<pos:position pos:line="22" pos:column="57"/></name><argument_list pos:line="22" pos:column="57">(<argument><expr><name pos:line="22" pos:column="58">io<pos:position pos:line="22" pos:column="60"/></name></expr></argument>)<pos:position pos:line="22" pos:column="61"/></argument_list></call><operator pos:line="22" pos:column="61">)<pos:position pos:line="22" pos:column="62"/></operator>
               <operator pos:line="23" pos:column="16">&amp;&amp;<pos:position pos:line="23" pos:column="26"/></operator> <operator pos:line="23" pos:column="19">!<pos:position pos:line="23" pos:column="20"/></operator><call><name pos:line="23" pos:column="20">is_aborted<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">m<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="34">&amp;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="35">status<pos:position pos:line="23" pos:column="41"/></name></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="43"/></condition> <block pos:line="23" pos:column="44">{
            <expr_stmt><expr><name><name pos:line="24" pos:column="13">io<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">output_drained<pos:position pos:line="24" pos:column="31"/></name></name> <operator pos:line="24" pos:column="32">=<pos:position pos:line="24" pos:column="33"/></operator> <name pos:line="24" pos:column="34">iowait<pos:position pos:line="24" pos:column="40"/></name></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><name pos:line="25" pos:column="17">f<pos:position pos:line="25" pos:column="18"/></name></expr>)<pos:position pos:line="25" pos:column="19"/></condition><then pos:line="25" pos:column="19"> <block pos:line="25" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="26" pos:column="17">ap_log_cerror<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">APLOG_MARK<pos:position pos:line="26" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">APLOG_TRACE1<pos:position pos:line="26" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="57">status<pos:position pos:line="26" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="65">f<pos:position pos:line="26" pos:column="66"/></name><operator pos:line="26" pos:column="66">-&gt;<pos:position pos:line="26" pos:column="71"/></operator><name pos:line="26" pos:column="68">c<pos:position pos:line="26" pos:column="69"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="27" pos:column="31">"h2_mplx(%ld-%d): waiting for out drain"<pos:position pos:line="27" pos:column="71"/></literal></expr></argument>, 
                              <argument><expr><name><name pos:line="28" pos:column="31">m<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">id<pos:position pos:line="28" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="38">io<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">-&gt;<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="42">id<pos:position pos:line="28" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="29" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">apr_thread_cond_wait<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name><name pos:line="30" pos:column="34">io<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">-&gt;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="38">output_drained<pos:position pos:line="30" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="54">m<pos:position pos:line="30" pos:column="55"/></name><operator pos:line="30" pos:column="55">-&gt;<pos:position pos:line="30" pos:column="60"/></operator><name pos:line="30" pos:column="57">lock<pos:position pos:line="30" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">io<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">-&gt;<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="17">output_drained<pos:position pos:line="31" pos:column="31"/></name></name> <operator pos:line="31" pos:column="32">=<pos:position pos:line="31" pos:column="33"/></operator> <name pos:line="31" pos:column="34">NULL<pos:position pos:line="31" pos:column="38"/></name></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></while>
    }<pos:position pos:line="33" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">apr_brigade_cleanup<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><name pos:line="34" pos:column="25">bb<pos:position pos:line="34" pos:column="27"/></name></expr></argument>)<pos:position pos:line="34" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><name pos:line="35" pos:column="12">status<pos:position pos:line="35" pos:column="18"/></name></expr>;<pos:position pos:line="35" pos:column="19"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

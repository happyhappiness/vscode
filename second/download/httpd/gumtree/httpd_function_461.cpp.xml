<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_461.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">register_hooks<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">apr_pool_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">p<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/* cache initializer */</comment>
    <comment type="block" pos:line="4" pos:column="5">/* cache handler */</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">ap_hook_quick_handler<pos:position pos:line="5" pos:column="26"/></name><argument_list pos:line="5" pos:column="26">(<argument><expr><name pos:line="5" pos:column="27">cache_url_handler<pos:position pos:line="5" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="46">NULL<pos:position pos:line="5" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="52">NULL<pos:position pos:line="5" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="58">APR_HOOK_FIRST<pos:position pos:line="5" pos:column="72"/></name></expr></argument>)<pos:position pos:line="5" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="74"/></expr_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* cache filters 
     * XXX The cache filters need to run right after the handlers and before
     * any other filters. Consider creating AP_FTYPE_CACHE for this purpose.
     * Make them AP_FTYPE_CONTENT for now.
     * XXX ianhH:they should run AFTER all the other content filters.
     */</comment>
    <expr_stmt><expr><name pos:line="12" pos:column="5">cache_save_filter_handle<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">=<pos:position pos:line="12" pos:column="31"/></operator> 
        <call><name pos:line="13" pos:column="9">ap_register_output_filter<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><literal type="string" pos:line="13" pos:column="35">"CACHE_SAVE"<pos:position pos:line="13" pos:column="47"/></literal></expr></argument>, 
                                  <argument><expr><name pos:line="14" pos:column="35">cache_save_filter<pos:position pos:line="14" pos:column="52"/></name></expr></argument>, 
                                  <argument><expr><name pos:line="15" pos:column="35">NULL<pos:position pos:line="15" pos:column="39"/></name></expr></argument>,
                                  <argument><expr><name pos:line="16" pos:column="35">AP_FTYPE_CONTENT_SET<pos:position pos:line="16" pos:column="55"/></name><operator pos:line="16" pos:column="55">-<pos:position pos:line="16" pos:column="56"/></operator><literal type="number" pos:line="16" pos:column="56">1<pos:position pos:line="16" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>
    <comment type="block" pos:line="17" pos:column="5">/* CACHE_OUT must go into the filter chain before SUBREQ_CORE to
     * handle subrequsts. Decrementing filter type by 1 ensures this 
     * happens.
     */</comment>
    <expr_stmt><expr><name pos:line="21" pos:column="5">cache_out_filter_handle<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">=<pos:position pos:line="21" pos:column="30"/></operator> 
        <call><name pos:line="22" pos:column="9">ap_register_output_filter<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><literal type="string" pos:line="22" pos:column="35">"CACHE_OUT"<pos:position pos:line="22" pos:column="46"/></literal></expr></argument>, 
                                  <argument><expr><name pos:line="23" pos:column="35">cache_out_filter<pos:position pos:line="23" pos:column="51"/></name></expr></argument>, 
                                  <argument><expr><name pos:line="24" pos:column="35">NULL<pos:position pos:line="24" pos:column="39"/></name></expr></argument>,
                                  <argument><expr><name pos:line="25" pos:column="35">AP_FTYPE_CONTENT_SET<pos:position pos:line="25" pos:column="55"/></name><operator pos:line="25" pos:column="55">-<pos:position pos:line="25" pos:column="56"/></operator><literal type="number" pos:line="25" pos:column="56">1<pos:position pos:line="25" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">cache_conditional_filter_handle<pos:position pos:line="26" pos:column="36"/></name> <operator pos:line="26" pos:column="37">=<pos:position pos:line="26" pos:column="38"/></operator>
        <call><name pos:line="27" pos:column="9">ap_register_output_filter<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><literal type="string" pos:line="27" pos:column="35">"CACHE_CONDITIONAL"<pos:position pos:line="27" pos:column="54"/></literal></expr></argument>, 
                                  <argument><expr><name pos:line="28" pos:column="35">cache_conditional_filter<pos:position pos:line="28" pos:column="59"/></name></expr></argument>, 
                                  <argument><expr><name pos:line="29" pos:column="35">NULL<pos:position pos:line="29" pos:column="39"/></name></expr></argument>,
                                  <argument><expr><name pos:line="30" pos:column="35">AP_FTYPE_CONTENT_SET<pos:position pos:line="30" pos:column="55"/></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">ap_hook_post_config<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">cache_post_config<pos:position pos:line="31" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="44">NULL<pos:position pos:line="31" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="50">NULL<pos:position pos:line="31" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="56">APR_HOOK_REALLY_FIRST<pos:position pos:line="31" pos:column="77"/></name></expr></argument>)<pos:position pos:line="31" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="79"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

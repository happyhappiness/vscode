<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2988_httpd-2.0.59.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">conv_os_thread_t<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">apr_os_thread_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">tid<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">buf_end<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">int<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">len<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <union pos:line="3" pos:column="5">union <block pos:line="3" pos:column="11">{<public type="default" pos:line="3" pos:column="12">
        <decl_stmt><decl><type><name pos:line="4" pos:column="9">apr_os_thread_t<pos:position pos:line="4" pos:column="24"/></name></type> <name pos:line="4" pos:column="25">tid<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">apr_uint64_t<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">alignme<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
    <pos:position pos:line="6" pos:column="5"/></public>}<pos:position pos:line="6" pos:column="6"/></block> <decl><name pos:line="6" pos:column="7">u<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></union>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">is_negative<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="9" pos:column="5">u<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">.<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">tid<pos:position pos:line="9" pos:column="10"/></name></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <operator pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">tid<pos:position pos:line="9" pos:column="17"/></name></expr>;<pos:position pos:line="9" pos:column="18"/></expr_stmt>
    <switch pos:line="10" pos:column="5">switch<condition pos:line="10" pos:column="11">(<expr><sizeof pos:line="10" pos:column="12">sizeof<argument_list pos:line="10" pos:column="18">(<argument><expr><name><name pos:line="10" pos:column="19">u<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">.<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="21">tid<pos:position pos:line="10" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="25"/></argument_list></sizeof></expr>)<pos:position pos:line="10" pos:column="26"/></condition> <block pos:line="10" pos:column="27">{
    <case pos:line="11" pos:column="5">case <expr><sizeof pos:line="11" pos:column="10">sizeof<argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">apr_int32_t<pos:position pos:line="11" pos:column="28"/></name></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></sizeof></expr>:<pos:position pos:line="11" pos:column="30"/></case>
        <return pos:line="12" pos:column="9">return <expr><call><name pos:line="12" pos:column="16">conv_10<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><operator pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></operator><operator pos:line="12" pos:column="25">(<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">apr_uint32_t<pos:position pos:line="12" pos:column="38"/></name> <operator pos:line="12" pos:column="39">*<pos:position pos:line="12" pos:column="40"/></operator><operator pos:line="12" pos:column="40">)<pos:position pos:line="12" pos:column="41"/></operator><operator pos:line="12" pos:column="41">&amp;<pos:position pos:line="12" pos:column="46"/></operator><name><name pos:line="12" pos:column="42">u<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">.<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="44">tid<pos:position pos:line="12" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="49">TRUE<pos:position pos:line="12" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="55">&amp;<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="56">is_negative<pos:position pos:line="12" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="69">buf_end<pos:position pos:line="12" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="78">len<pos:position pos:line="12" pos:column="81"/></name></expr></argument>)<pos:position pos:line="12" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="83"/></return>
    <case pos:line="13" pos:column="5">case <expr><sizeof pos:line="13" pos:column="10">sizeof<argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">apr_int64_t<pos:position pos:line="13" pos:column="28"/></name></expr></argument>)<pos:position pos:line="13" pos:column="29"/></argument_list></sizeof></expr>:<pos:position pos:line="13" pos:column="30"/></case>
        <return pos:line="14" pos:column="9">return <expr><call><name pos:line="14" pos:column="16">conv_10_quad<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><operator pos:line="14" pos:column="29">*<pos:position pos:line="14" pos:column="30"/></operator><operator pos:line="14" pos:column="30">(<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="31">apr_uint64_t<pos:position pos:line="14" pos:column="43"/></name> <operator pos:line="14" pos:column="44">*<pos:position pos:line="14" pos:column="45"/></operator><operator pos:line="14" pos:column="45">)<pos:position pos:line="14" pos:column="46"/></operator><operator pos:line="14" pos:column="46">&amp;<pos:position pos:line="14" pos:column="51"/></operator><name><name pos:line="14" pos:column="47">u<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">.<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="49">tid<pos:position pos:line="14" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="54">TRUE<pos:position pos:line="14" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="60">&amp;<pos:position pos:line="14" pos:column="65"/></operator><name pos:line="14" pos:column="61">is_negative<pos:position pos:line="14" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="74">buf_end<pos:position pos:line="14" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="83">len<pos:position pos:line="14" pos:column="86"/></name></expr></argument>)<pos:position pos:line="14" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="88"/></return>
    <default pos:line="15" pos:column="5">default:<pos:position pos:line="15" pos:column="13"/></default>
        <comment type="block" pos:line="16" pos:column="9">/* not implemented; stick 0 in the buffer */</comment>
        <return pos:line="17" pos:column="9">return <expr><call><name pos:line="17" pos:column="16">conv_10<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="27">TRUE<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="33">&amp;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="34">is_negative<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="47">buf_end<pos:position pos:line="17" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="56">len<pos:position pos:line="17" pos:column="59"/></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></switch>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_442_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ap_register_log_handler<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">apr_pool_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">p<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">tag<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">ap_log_handler_fn_t<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">handler<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="67">int<pos:position pos:line="2" pos:column="70"/></name></type> <name pos:line="2" pos:column="71">def<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ap_log_handler<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">log_struct<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><call><name pos:line="4" pos:column="34">apr_palloc<pos:position pos:line="4" pos:column="44"/></name><argument_list pos:line="4" pos:column="44">(<argument><expr><name pos:line="4" pos:column="45">p<pos:position pos:line="4" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="48">sizeof<argument_list pos:line="4" pos:column="54">(<argument><expr><operator pos:line="4" pos:column="55">*<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="56">log_struct<pos:position pos:line="4" pos:column="66"/></name></expr></argument>)<pos:position pos:line="4" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="69"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">log_struct<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">-&gt;<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="17">func<pos:position pos:line="5" pos:column="21"/></name></name> <operator pos:line="5" pos:column="22">=<pos:position pos:line="5" pos:column="23"/></operator> <name pos:line="5" pos:column="24">handler<pos:position pos:line="5" pos:column="31"/></name></expr>;<pos:position pos:line="5" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">log_struct<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">want_orig_default<pos:position pos:line="6" pos:column="34"/></name></name> <operator pos:line="6" pos:column="35">=<pos:position pos:line="6" pos:column="36"/></operator> <name pos:line="6" pos:column="37">def<pos:position pos:line="6" pos:column="40"/></name></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">apr_hash_set<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">log_hash<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="28">tag<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="33">strlen<pos:position pos:line="8" pos:column="39"/></name><argument_list pos:line="8" pos:column="39">(<argument><expr><name pos:line="8" pos:column="40">tag<pos:position pos:line="8" pos:column="43"/></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="8" pos:column="46">(<pos:position pos:line="8" pos:column="47"/></operator><specifier pos:line="8" pos:column="47">const<pos:position pos:line="8" pos:column="52"/></specifier> <name pos:line="8" pos:column="53">void<pos:position pos:line="8" pos:column="57"/></name> <operator pos:line="8" pos:column="58">*<pos:position pos:line="8" pos:column="59"/></operator><operator pos:line="8" pos:column="59">)<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="60">log_struct<pos:position pos:line="8" pos:column="70"/></name></expr></argument>)<pos:position pos:line="8" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="72"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

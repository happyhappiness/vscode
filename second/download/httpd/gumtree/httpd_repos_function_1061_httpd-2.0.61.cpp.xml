<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1061_httpd-2.0.61.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">set_accept_quality<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">negotiation_state<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">neg<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">var_rec<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">variant<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">accept_rec<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">accept_recs<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">float<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">q<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><literal type="number" pos:line="5" pos:column="15">0.0f<pos:position pos:line="5" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">q_definite<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><literal type="number" pos:line="6" pos:column="22">1<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* if no Accept: header, leave quality alone (will
     * remain at the default value of 1)
     *
     * XXX: This if is currently never true because of the effect of
     * maybe_add_default_accepts().
     */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name><name pos:line="14" pos:column="10">neg<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">accepts<pos:position pos:line="14" pos:column="22"/></name></name></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23"> <block pos:line="14" pos:column="24">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">variant<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">mime_type<pos:position pos:line="15" pos:column="31"/></name></name> <operator pos:line="15" pos:column="32">&amp;&amp;<pos:position pos:line="15" pos:column="42"/></operator> <operator pos:line="15" pos:column="35">*<pos:position pos:line="15" pos:column="36"/></operator><name><name pos:line="15" pos:column="36">variant<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">-&gt;<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="45">mime_type<pos:position pos:line="15" pos:column="54"/></name></name></expr>)<pos:position pos:line="15" pos:column="55"/></condition><then pos:line="15" pos:column="55">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="13">variant<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">-&gt;<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="22">definite<pos:position pos:line="16" pos:column="30"/></name></name> <operator pos:line="16" pos:column="31">=<pos:position pos:line="16" pos:column="32"/></operator> <literal type="number" pos:line="16" pos:column="33">0<pos:position pos:line="16" pos:column="34"/></literal></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt></block></then></if>
        <return pos:line="17" pos:column="9">return;<pos:position pos:line="17" pos:column="16"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">accept_recs<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <operator pos:line="20" pos:column="19">(<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">accept_rec<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">*<pos:position pos:line="20" pos:column="32"/></operator><operator pos:line="20" pos:column="32">)<pos:position pos:line="20" pos:column="33"/></operator> <name><name pos:line="20" pos:column="34">neg<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">-&gt;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="39">accepts<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">-&gt;<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="48">elts<pos:position pos:line="20" pos:column="52"/></name></name></expr>;<pos:position pos:line="20" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/*
     * Go through each of the ranges on the Accept: header,
     * looking for the 'best' match with this variant's
     * content-type. We use the best match's quality
     * value (from the Accept: header) for this variant's
     * mime_type_quality field.
     *
     * The best match is determined like this:
     *    type/type is better than type/ * is better than * / *
     *    if match is type/type, use the level mime param if available
     */</comment>
    <for pos:line="33" pos:column="5">for <control pos:line="33" pos:column="9">(<init><expr><name pos:line="33" pos:column="10">i<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <literal type="number" pos:line="33" pos:column="14">0<pos:position pos:line="33" pos:column="15"/></literal></expr>;<pos:position pos:line="33" pos:column="16"/></init> <condition><expr><name pos:line="33" pos:column="17">i<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">&lt;<pos:position pos:line="33" pos:column="23"/></operator> <name><name pos:line="33" pos:column="21">neg<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">-&gt;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="26">accepts<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">-&gt;<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="35">nelts<pos:position pos:line="33" pos:column="40"/></name></name></expr>;<pos:position pos:line="33" pos:column="41"/></condition> <incr><expr><operator pos:line="33" pos:column="42">++<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="44">i<pos:position pos:line="33" pos:column="45"/></name></expr></incr>)<pos:position pos:line="33" pos:column="46"/></control> <block pos:line="33" pos:column="47">{

        <decl_stmt><decl><type><name pos:line="35" pos:column="9">accept_rec<pos:position pos:line="35" pos:column="19"/></name> <modifier pos:line="35" pos:column="20">*<pos:position pos:line="35" pos:column="21"/></modifier></type><name pos:line="35" pos:column="21">type<pos:position pos:line="35" pos:column="25"/></name> <init pos:line="35" pos:column="26">= <expr><operator pos:line="35" pos:column="28">&amp;<pos:position pos:line="35" pos:column="33"/></operator><name><name pos:line="35" pos:column="29">accept_recs<pos:position pos:line="35" pos:column="40"/></name><index pos:line="35" pos:column="40">[<expr><name pos:line="35" pos:column="41">i<pos:position pos:line="35" pos:column="42"/></name></expr>]<pos:position pos:line="35" pos:column="43"/></index></name></expr></init></decl>;<pos:position pos:line="35" pos:column="44"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">int<pos:position pos:line="36" pos:column="12"/></name></type> <name pos:line="36" pos:column="13">prev_mime_stars<pos:position pos:line="36" pos:column="28"/></name></decl>;<pos:position pos:line="36" pos:column="29"/></decl_stmt>

        <expr_stmt><expr><name pos:line="38" pos:column="9">prev_mime_stars<pos:position pos:line="38" pos:column="24"/></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <name><name pos:line="38" pos:column="27">variant<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">-&gt;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="36">mime_stars<pos:position pos:line="38" pos:column="46"/></name></name></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt>

        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator><call><name pos:line="40" pos:column="14">mime_match<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><name pos:line="40" pos:column="25">type<pos:position pos:line="40" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="31">variant<pos:position pos:line="40" pos:column="38"/></name></expr></argument>)<pos:position pos:line="40" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="40"/></condition><then pos:line="40" pos:column="40"> <block pos:line="40" pos:column="41">{
            <continue pos:line="41" pos:column="13">continue;<pos:position pos:line="41" pos:column="22"/></continue>           <comment type="block" pos:line="41" pos:column="33">/* didn't match the content type at all */</comment>
        }<pos:position pos:line="42" pos:column="10"/></block></then>
        <else pos:line="43" pos:column="9">else <block pos:line="43" pos:column="14">{
            <comment type="block" pos:line="44" pos:column="13">/* did match - see if there were less or more stars than
             * in previous match
             */</comment>
            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><name pos:line="47" pos:column="17">prev_mime_stars<pos:position pos:line="47" pos:column="32"/></name> <operator pos:line="47" pos:column="33">==<pos:position pos:line="47" pos:column="35"/></operator> <name><name pos:line="47" pos:column="36">variant<pos:position pos:line="47" pos:column="43"/></name><operator pos:line="47" pos:column="43">-&gt;<pos:position pos:line="47" pos:column="48"/></operator><name pos:line="47" pos:column="45">mime_stars<pos:position pos:line="47" pos:column="55"/></name></name></expr>)<pos:position pos:line="47" pos:column="56"/></condition><then pos:line="47" pos:column="56"> <block pos:line="47" pos:column="57">{
                <continue pos:line="48" pos:column="17">continue;<pos:position pos:line="48" pos:column="26"/></continue>       <comment type="block" pos:line="48" pos:column="33">/* more stars =&gt; not as good a match */</comment>
            }<pos:position pos:line="49" pos:column="14"/></block></then></if>
        }<pos:position pos:line="50" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="52" pos:column="9">/* If we are allowed to mess with the q-values
         * and have no explicit q= parameters in the accept header,
         * make wildcards very low, so we have a low chance
         * of ending up with them if there's something better.
         */</comment>

        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><operator pos:line="58" pos:column="13">!<pos:position pos:line="58" pos:column="14"/></operator><name><name pos:line="58" pos:column="14">neg<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">-&gt;<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="19">dont_fiddle_headers<pos:position pos:line="58" pos:column="38"/></name></name> <operator pos:line="58" pos:column="39">&amp;&amp;<pos:position pos:line="58" pos:column="49"/></operator> <operator pos:line="58" pos:column="42">!<pos:position pos:line="58" pos:column="43"/></operator><name><name pos:line="58" pos:column="43">neg<pos:position pos:line="58" pos:column="46"/></name><operator pos:line="58" pos:column="46">-&gt;<pos:position pos:line="58" pos:column="51"/></operator><name pos:line="58" pos:column="48">accept_q<pos:position pos:line="58" pos:column="56"/></name></name> <operator pos:line="58" pos:column="57">&amp;&amp;<pos:position pos:line="58" pos:column="67"/></operator>
            <name><name pos:line="59" pos:column="13">variant<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">-&gt;<pos:position pos:line="59" pos:column="25"/></operator><name pos:line="59" pos:column="22">mime_stars<pos:position pos:line="59" pos:column="32"/></name></name> <operator pos:line="59" pos:column="33">==<pos:position pos:line="59" pos:column="35"/></operator> <literal type="number" pos:line="59" pos:column="36">1<pos:position pos:line="59" pos:column="37"/></literal></expr>)<pos:position pos:line="59" pos:column="38"/></condition><then pos:line="59" pos:column="38"> <block pos:line="59" pos:column="39">{
            <expr_stmt><expr><name pos:line="60" pos:column="13">q<pos:position pos:line="60" pos:column="14"/></name> <operator pos:line="60" pos:column="15">=<pos:position pos:line="60" pos:column="16"/></operator> <literal type="number" pos:line="60" pos:column="17">0.01f<pos:position pos:line="60" pos:column="22"/></literal></expr>;<pos:position pos:line="60" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></then>
        <elseif pos:line="62" pos:column="9">else <if pos:line="62" pos:column="14">if <condition pos:line="62" pos:column="17">(<expr><operator pos:line="62" pos:column="18">!<pos:position pos:line="62" pos:column="19"/></operator><name><name pos:line="62" pos:column="19">neg<pos:position pos:line="62" pos:column="22"/></name><operator pos:line="62" pos:column="22">-&gt;<pos:position pos:line="62" pos:column="27"/></operator><name pos:line="62" pos:column="24">dont_fiddle_headers<pos:position pos:line="62" pos:column="43"/></name></name> <operator pos:line="62" pos:column="44">&amp;&amp;<pos:position pos:line="62" pos:column="54"/></operator> <operator pos:line="62" pos:column="47">!<pos:position pos:line="62" pos:column="48"/></operator><name><name pos:line="62" pos:column="48">neg<pos:position pos:line="62" pos:column="51"/></name><operator pos:line="62" pos:column="51">-&gt;<pos:position pos:line="62" pos:column="56"/></operator><name pos:line="62" pos:column="53">accept_q<pos:position pos:line="62" pos:column="61"/></name></name> <operator pos:line="62" pos:column="62">&amp;&amp;<pos:position pos:line="62" pos:column="72"/></operator>
                 <name><name pos:line="63" pos:column="18">variant<pos:position pos:line="63" pos:column="25"/></name><operator pos:line="63" pos:column="25">-&gt;<pos:position pos:line="63" pos:column="30"/></operator><name pos:line="63" pos:column="27">mime_stars<pos:position pos:line="63" pos:column="37"/></name></name> <operator pos:line="63" pos:column="38">==<pos:position pos:line="63" pos:column="40"/></operator> <literal type="number" pos:line="63" pos:column="41">2<pos:position pos:line="63" pos:column="42"/></literal></expr>)<pos:position pos:line="63" pos:column="43"/></condition><then pos:line="63" pos:column="43"> <block pos:line="63" pos:column="44">{
            <expr_stmt><expr><name pos:line="64" pos:column="13">q<pos:position pos:line="64" pos:column="14"/></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <literal type="number" pos:line="64" pos:column="17">0.02f<pos:position pos:line="64" pos:column="22"/></literal></expr>;<pos:position pos:line="64" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if></elseif>
        <else pos:line="66" pos:column="9">else <block pos:line="66" pos:column="14">{
            <expr_stmt><expr><name pos:line="67" pos:column="13">q<pos:position pos:line="67" pos:column="14"/></name> <operator pos:line="67" pos:column="15">=<pos:position pos:line="67" pos:column="16"/></operator> <name><name pos:line="67" pos:column="17">type<pos:position pos:line="67" pos:column="21"/></name><operator pos:line="67" pos:column="21">-&gt;<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="23">quality<pos:position pos:line="67" pos:column="30"/></name></name></expr>;<pos:position pos:line="67" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="68" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="70" pos:column="9">q_definite<pos:position pos:line="70" pos:column="19"/></name> <operator pos:line="70" pos:column="20">=<pos:position pos:line="70" pos:column="21"/></operator> <operator pos:line="70" pos:column="22">(<pos:position pos:line="70" pos:column="23"/></operator><name><name pos:line="70" pos:column="23">variant<pos:position pos:line="70" pos:column="30"/></name><operator pos:line="70" pos:column="30">-&gt;<pos:position pos:line="70" pos:column="35"/></operator><name pos:line="70" pos:column="32">mime_stars<pos:position pos:line="70" pos:column="42"/></name></name> <operator pos:line="70" pos:column="43">==<pos:position pos:line="70" pos:column="45"/></operator> <literal type="number" pos:line="70" pos:column="46">3<pos:position pos:line="70" pos:column="47"/></literal><operator pos:line="70" pos:column="47">)<pos:position pos:line="70" pos:column="48"/></operator></expr>;<pos:position pos:line="70" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></for>
    <expr_stmt><expr><name><name pos:line="72" pos:column="5">variant<pos:position pos:line="72" pos:column="12"/></name><operator pos:line="72" pos:column="12">-&gt;<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="14">mime_type_quality<pos:position pos:line="72" pos:column="31"/></name></name> <operator pos:line="72" pos:column="32">=<pos:position pos:line="72" pos:column="33"/></operator> <name pos:line="72" pos:column="34">q<pos:position pos:line="72" pos:column="35"/></name></expr>;<pos:position pos:line="72" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="73" pos:column="5">variant<pos:position pos:line="73" pos:column="12"/></name><operator pos:line="73" pos:column="12">-&gt;<pos:position pos:line="73" pos:column="17"/></operator><name pos:line="73" pos:column="14">definite<pos:position pos:line="73" pos:column="22"/></name></name> <operator pos:line="73" pos:column="23">=<pos:position pos:line="73" pos:column="24"/></operator> <name><name pos:line="73" pos:column="25">variant<pos:position pos:line="73" pos:column="32"/></name><operator pos:line="73" pos:column="32">-&gt;<pos:position pos:line="73" pos:column="37"/></operator><name pos:line="73" pos:column="34">definite<pos:position pos:line="73" pos:column="42"/></name></name> <operator pos:line="73" pos:column="43">&amp;&amp;<pos:position pos:line="73" pos:column="53"/></operator> <name pos:line="73" pos:column="46">q_definite<pos:position pos:line="73" pos:column="56"/></name></expr>;<pos:position pos:line="73" pos:column="57"/></expr_stmt>

}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_71_httpd-2.4.25.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier> <specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier></type> <name><name pos:line="1" pos:column="39">argv<pos:position pos:line="1" pos:column="43"/></name><index pos:line="1" pos:column="43">[]<pos:position pos:line="1" pos:column="45"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_off_t<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">max<pos:position pos:line="3" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="20">inodes<pos:position pos:line="3" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="28">round<pos:position pos:line="3" pos:column="33"/></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_time_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">current<pos:position pos:line="4" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="25">repeat<pos:position pos:line="4" pos:column="31"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="33">delay<pos:position pos:line="4" pos:column="38"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="40">previous<pos:position pos:line="4" pos:column="48"/></name></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_pool_t<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">pool<pos:position pos:line="6" pos:column="21"/></name></decl>, <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="24">instance<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_getopt_t<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">o<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_finfo_t<pos:position pos:line="8" pos:column="16"/></name></type> <name pos:line="8" pos:column="17">info<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_file_t<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">pidfile<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">retries<pos:position pos:line="10" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="18">isdaemon<pos:position pos:line="10" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="28">limit_found<pos:position pos:line="10" pos:column="39"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="41">inodes_found<pos:position pos:line="10" pos:column="53"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="55">intelligent<pos:position pos:line="10" pos:column="66"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="68">dowork<pos:position pos:line="10" pos:column="74"/></name></decl>;<pos:position pos:line="10" pos:column="75"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">opt<pos:position pos:line="11" pos:column="13"/></name></decl>;<pos:position pos:line="11" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">char<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">arg<pos:position pos:line="12" pos:column="20"/></name></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">proxypath<pos:position pos:line="13" pos:column="20"/></name></decl>, <modifier pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="23">path<pos:position pos:line="13" pos:column="27"/></name></decl>, <modifier pos:line="13" pos:column="29">*<pos:position pos:line="13" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="30">pidfilename<pos:position pos:line="13" pos:column="41"/></name></decl>;<pos:position pos:line="13" pos:column="42"/></decl_stmt>

    <expr_stmt><expr><name pos:line="15" pos:column="5">interrupted<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">repeat<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <literal type="number" pos:line="16" pos:column="14">0<pos:position pos:line="16" pos:column="15"/></literal></expr>;<pos:position pos:line="16" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">isdaemon<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">dryrun<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <literal type="number" pos:line="18" pos:column="14">0<pos:position pos:line="18" pos:column="15"/></literal></expr>;<pos:position pos:line="18" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">limit_found<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <literal type="number" pos:line="19" pos:column="19">0<pos:position pos:line="19" pos:column="20"/></literal></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">inodes_found<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <literal type="number" pos:line="20" pos:column="20">0<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">max<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <literal type="number" pos:line="21" pos:column="11">0<pos:position pos:line="21" pos:column="12"/></literal></expr>;<pos:position pos:line="21" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">inodes<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <literal type="number" pos:line="22" pos:column="14">0<pos:position pos:line="22" pos:column="15"/></literal></expr>;<pos:position pos:line="22" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">round<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <literal type="number" pos:line="23" pos:column="13">0<pos:position pos:line="23" pos:column="14"/></literal></expr>;<pos:position pos:line="23" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">verbose<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <literal type="number" pos:line="24" pos:column="15">0<pos:position pos:line="24" pos:column="16"/></literal></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">realclean<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <literal type="number" pos:line="25" pos:column="17">0<pos:position pos:line="25" pos:column="18"/></literal></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">benice<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <literal type="number" pos:line="26" pos:column="14">0<pos:position pos:line="26" pos:column="15"/></literal></expr>;<pos:position pos:line="26" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">deldirs<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <literal type="number" pos:line="27" pos:column="15">0<pos:position pos:line="27" pos:column="16"/></literal></expr>;<pos:position pos:line="27" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">intelligent<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <literal type="number" pos:line="28" pos:column="19">0<pos:position pos:line="28" pos:column="20"/></literal></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">previous<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <literal type="number" pos:line="29" pos:column="16">0<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></expr_stmt> <comment type="block" pos:line="29" pos:column="19">/* avoid compiler warning */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">proxypath<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <name pos:line="30" pos:column="17">NULL<pos:position pos:line="30" pos:column="21"/></name></expr>;<pos:position pos:line="30" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">pidfilename<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">NULL<pos:position pos:line="31" pos:column="23"/></name></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><call><name pos:line="33" pos:column="9">apr_app_initialize<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><operator pos:line="33" pos:column="28">&amp;<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="29">argc<pos:position pos:line="33" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="35">&amp;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="36">argv<pos:position pos:line="33" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="42">NULL<pos:position pos:line="33" pos:column="46"/></name></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call> <operator pos:line="33" pos:column="48">!=<pos:position pos:line="33" pos:column="50"/></operator> <name pos:line="33" pos:column="51">APR_SUCCESS<pos:position pos:line="33" pos:column="62"/></name></expr>)<pos:position pos:line="33" pos:column="63"/></condition><then pos:line="33" pos:column="63"> <block pos:line="33" pos:column="64">{
        <return pos:line="34" pos:column="9">return <expr><literal type="number" pos:line="34" pos:column="16">1<pos:position pos:line="34" pos:column="17"/></literal></expr>;<pos:position pos:line="34" pos:column="18"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">atexit<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><name pos:line="36" pos:column="12">apr_terminate<pos:position pos:line="36" pos:column="25"/></name></expr></argument>)<pos:position pos:line="36" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">argc<pos:position pos:line="38" pos:column="13"/></name></expr>)<pos:position pos:line="38" pos:column="14"/></condition><then pos:line="38" pos:column="14"> <block pos:line="38" pos:column="15">{
        <expr_stmt><expr><name pos:line="39" pos:column="9">shortname<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <call><name pos:line="39" pos:column="21">apr_filepath_name_get<pos:position pos:line="39" pos:column="42"/></name><argument_list pos:line="39" pos:column="42">(<argument><expr><name><name pos:line="39" pos:column="43">argv<pos:position pos:line="39" pos:column="47"/></name><index pos:line="39" pos:column="47">[<expr><literal type="number" pos:line="39" pos:column="48">0<pos:position pos:line="39" pos:column="49"/></literal></expr>]<pos:position pos:line="39" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="39" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><call><name pos:line="42" pos:column="9">apr_pool_create<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><operator pos:line="42" pos:column="25">&amp;<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="26">pool<pos:position pos:line="42" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="32">NULL<pos:position pos:line="42" pos:column="36"/></name></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call> <operator pos:line="42" pos:column="38">!=<pos:position pos:line="42" pos:column="40"/></operator> <name pos:line="42" pos:column="41">APR_SUCCESS<pos:position pos:line="42" pos:column="52"/></name></expr>)<pos:position pos:line="42" pos:column="53"/></condition><then pos:line="42" pos:column="53"> <block pos:line="42" pos:column="54">{
        <return pos:line="43" pos:column="9">return <expr><literal type="number" pos:line="43" pos:column="16">1<pos:position pos:line="43" pos:column="17"/></literal></expr>;<pos:position pos:line="43" pos:column="18"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">apr_pool_abort_set<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><name pos:line="45" pos:column="24">oom<pos:position pos:line="45" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="29">pool<pos:position pos:line="45" pos:column="33"/></name></expr></argument>)<pos:position pos:line="45" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">apr_file_open_stderr<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><operator pos:line="46" pos:column="26">&amp;<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="27">errfile<pos:position pos:line="46" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="36">pool<pos:position pos:line="46" pos:column="40"/></name></expr></argument>)<pos:position pos:line="46" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">apr_file_open_stdout<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><operator pos:line="47" pos:column="26">&amp;<pos:position pos:line="47" pos:column="31"/></operator><name pos:line="47" pos:column="27">outfile<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="36">pool<pos:position pos:line="47" pos:column="40"/></name></expr></argument>)<pos:position pos:line="47" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">apr_signal<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><name pos:line="48" pos:column="16">SIGINT<pos:position pos:line="48" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="24">setterm<pos:position pos:line="48" pos:column="31"/></name></expr></argument>)<pos:position pos:line="48" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">apr_signal<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><name pos:line="49" pos:column="16">SIGTERM<pos:position pos:line="49" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="25">setterm<pos:position pos:line="49" pos:column="32"/></name></expr></argument>)<pos:position pos:line="49" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="51" pos:column="5">apr_getopt_init<pos:position pos:line="51" pos:column="20"/></name><argument_list pos:line="51" pos:column="20">(<argument><expr><operator pos:line="51" pos:column="21">&amp;<pos:position pos:line="51" pos:column="26"/></operator><name pos:line="51" pos:column="22">o<pos:position pos:line="51" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="25">pool<pos:position pos:line="51" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="31">argc<pos:position pos:line="51" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="37">argv<pos:position pos:line="51" pos:column="41"/></name></expr></argument>)<pos:position pos:line="51" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="43"/></expr_stmt>

    <while pos:line="53" pos:column="5">while <condition pos:line="53" pos:column="11">(<expr><literal type="number" pos:line="53" pos:column="12">1<pos:position pos:line="53" pos:column="13"/></literal></expr>)<pos:position pos:line="53" pos:column="14"/></condition> <block pos:line="53" pos:column="15">{
        <expr_stmt><expr><name pos:line="54" pos:column="9">status<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <call><name pos:line="54" pos:column="18">apr_getopt<pos:position pos:line="54" pos:column="28"/></name><argument_list pos:line="54" pos:column="28">(<argument><expr><name pos:line="54" pos:column="29">o<pos:position pos:line="54" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="32">"iDnvrtd:l:L:p:P:R:aA"<pos:position pos:line="54" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="54" pos:column="56">&amp;<pos:position pos:line="54" pos:column="61"/></operator><name pos:line="54" pos:column="57">opt<pos:position pos:line="54" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="62">&amp;<pos:position pos:line="54" pos:column="67"/></operator><name pos:line="54" pos:column="63">arg<pos:position pos:line="54" pos:column="66"/></name></expr></argument>)<pos:position pos:line="54" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="68"/></expr_stmt>
        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name pos:line="55" pos:column="13">status<pos:position pos:line="55" pos:column="19"/></name> <operator pos:line="55" pos:column="20">==<pos:position pos:line="55" pos:column="22"/></operator> <name pos:line="55" pos:column="23">APR_EOF<pos:position pos:line="55" pos:column="30"/></name></expr>)<pos:position pos:line="55" pos:column="31"/></condition><then pos:line="55" pos:column="31"> <block pos:line="55" pos:column="32">{
            <break pos:line="56" pos:column="13">break;<pos:position pos:line="56" pos:column="19"/></break>
        }<pos:position pos:line="57" pos:column="10"/></block></then>
        <elseif pos:line="58" pos:column="9">else <if pos:line="58" pos:column="14">if <condition pos:line="58" pos:column="17">(<expr><name pos:line="58" pos:column="18">status<pos:position pos:line="58" pos:column="24"/></name> <operator pos:line="58" pos:column="25">!=<pos:position pos:line="58" pos:column="27"/></operator> <name pos:line="58" pos:column="28">APR_SUCCESS<pos:position pos:line="58" pos:column="39"/></name></expr>)<pos:position pos:line="58" pos:column="40"/></condition><then pos:line="58" pos:column="40"> <block pos:line="58" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">usage<pos:position pos:line="59" pos:column="18"/></name><argument_list pos:line="59" pos:column="18">(<argument><expr><name pos:line="59" pos:column="19">NULL<pos:position pos:line="59" pos:column="23"/></name></expr></argument>)<pos:position pos:line="59" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if></elseif>
        <else pos:line="61" pos:column="9">else <block pos:line="61" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="62" pos:column="13">char<pos:position pos:line="62" pos:column="17"/></name> <modifier pos:line="62" pos:column="18">*<pos:position pos:line="62" pos:column="19"/></modifier></type><name pos:line="62" pos:column="19">end<pos:position pos:line="62" pos:column="22"/></name></decl>;<pos:position pos:line="62" pos:column="23"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="63" pos:column="13">apr_status_t<pos:position pos:line="63" pos:column="25"/></name></type> <name pos:line="63" pos:column="26">rv<pos:position pos:line="63" pos:column="28"/></name></decl>;<pos:position pos:line="63" pos:column="29"/></decl_stmt>
            <switch pos:line="64" pos:column="13">switch <condition pos:line="64" pos:column="20">(<expr><name pos:line="64" pos:column="21">opt<pos:position pos:line="64" pos:column="24"/></name></expr>)<pos:position pos:line="64" pos:column="25"/></condition> <block pos:line="64" pos:column="26">{
            <case pos:line="65" pos:column="13">case <expr><literal type="char" pos:line="65" pos:column="18">'i'<pos:position pos:line="65" pos:column="21"/></literal></expr>:<pos:position pos:line="65" pos:column="22"/></case>
                <if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><name pos:line="66" pos:column="21">intelligent<pos:position pos:line="66" pos:column="32"/></name></expr>)<pos:position pos:line="66" pos:column="33"/></condition><then pos:line="66" pos:column="33"> <block pos:line="66" pos:column="34">{
                    <expr_stmt><expr><call><name pos:line="67" pos:column="21">usage_repeated_arg<pos:position pos:line="67" pos:column="39"/></name><argument_list pos:line="67" pos:column="39">(<argument><expr><name pos:line="67" pos:column="40">pool<pos:position pos:line="67" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="46">opt<pos:position pos:line="67" pos:column="49"/></name></expr></argument>)<pos:position pos:line="67" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="68" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="69" pos:column="17">intelligent<pos:position pos:line="69" pos:column="28"/></name> <operator pos:line="69" pos:column="29">=<pos:position pos:line="69" pos:column="30"/></operator> <literal type="number" pos:line="69" pos:column="31">1<pos:position pos:line="69" pos:column="32"/></literal></expr>;<pos:position pos:line="69" pos:column="33"/></expr_stmt>
                <break pos:line="70" pos:column="17">break;<pos:position pos:line="70" pos:column="23"/></break>

            <case pos:line="72" pos:column="13">case <expr><literal type="char" pos:line="72" pos:column="18">'D'<pos:position pos:line="72" pos:column="21"/></literal></expr>:<pos:position pos:line="72" pos:column="22"/></case>
                <if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><name pos:line="73" pos:column="21">dryrun<pos:position pos:line="73" pos:column="27"/></name></expr>)<pos:position pos:line="73" pos:column="28"/></condition><then pos:line="73" pos:column="28"> <block pos:line="73" pos:column="29">{
                    <expr_stmt><expr><call><name pos:line="74" pos:column="21">usage_repeated_arg<pos:position pos:line="74" pos:column="39"/></name><argument_list pos:line="74" pos:column="39">(<argument><expr><name pos:line="74" pos:column="40">pool<pos:position pos:line="74" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="46">opt<pos:position pos:line="74" pos:column="49"/></name></expr></argument>)<pos:position pos:line="74" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="75" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="76" pos:column="17">dryrun<pos:position pos:line="76" pos:column="23"/></name> <operator pos:line="76" pos:column="24">=<pos:position pos:line="76" pos:column="25"/></operator> <literal type="number" pos:line="76" pos:column="26">1<pos:position pos:line="76" pos:column="27"/></literal></expr>;<pos:position pos:line="76" pos:column="28"/></expr_stmt>
                <break pos:line="77" pos:column="17">break;<pos:position pos:line="77" pos:column="23"/></break>

            <case pos:line="79" pos:column="13">case <expr><literal type="char" pos:line="79" pos:column="18">'n'<pos:position pos:line="79" pos:column="21"/></literal></expr>:<pos:position pos:line="79" pos:column="22"/></case>
                <if pos:line="80" pos:column="17">if <condition pos:line="80" pos:column="20">(<expr><name pos:line="80" pos:column="21">benice<pos:position pos:line="80" pos:column="27"/></name></expr>)<pos:position pos:line="80" pos:column="28"/></condition><then pos:line="80" pos:column="28"> <block pos:line="80" pos:column="29">{
                    <expr_stmt><expr><call><name pos:line="81" pos:column="21">usage_repeated_arg<pos:position pos:line="81" pos:column="39"/></name><argument_list pos:line="81" pos:column="39">(<argument><expr><name pos:line="81" pos:column="40">pool<pos:position pos:line="81" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="46">opt<pos:position pos:line="81" pos:column="49"/></name></expr></argument>)<pos:position pos:line="81" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="82" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="83" pos:column="17">benice<pos:position pos:line="83" pos:column="23"/></name> <operator pos:line="83" pos:column="24">=<pos:position pos:line="83" pos:column="25"/></operator> <literal type="number" pos:line="83" pos:column="26">1<pos:position pos:line="83" pos:column="27"/></literal></expr>;<pos:position pos:line="83" pos:column="28"/></expr_stmt>
                <break pos:line="84" pos:column="17">break;<pos:position pos:line="84" pos:column="23"/></break>

            <case pos:line="86" pos:column="13">case <expr><literal type="char" pos:line="86" pos:column="18">'t'<pos:position pos:line="86" pos:column="21"/></literal></expr>:<pos:position pos:line="86" pos:column="22"/></case>
                <if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><name pos:line="87" pos:column="21">deldirs<pos:position pos:line="87" pos:column="28"/></name></expr>)<pos:position pos:line="87" pos:column="29"/></condition><then pos:line="87" pos:column="29"> <block pos:line="87" pos:column="30">{
                    <expr_stmt><expr><call><name pos:line="88" pos:column="21">usage_repeated_arg<pos:position pos:line="88" pos:column="39"/></name><argument_list pos:line="88" pos:column="39">(<argument><expr><name pos:line="88" pos:column="40">pool<pos:position pos:line="88" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="46">opt<pos:position pos:line="88" pos:column="49"/></name></expr></argument>)<pos:position pos:line="88" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="89" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="90" pos:column="17">deldirs<pos:position pos:line="90" pos:column="24"/></name> <operator pos:line="90" pos:column="25">=<pos:position pos:line="90" pos:column="26"/></operator> <literal type="number" pos:line="90" pos:column="27">1<pos:position pos:line="90" pos:column="28"/></literal></expr>;<pos:position pos:line="90" pos:column="29"/></expr_stmt>
                <break pos:line="91" pos:column="17">break;<pos:position pos:line="91" pos:column="23"/></break>

            <case pos:line="93" pos:column="13">case <expr><literal type="char" pos:line="93" pos:column="18">'v'<pos:position pos:line="93" pos:column="21"/></literal></expr>:<pos:position pos:line="93" pos:column="22"/></case>
                <if pos:line="94" pos:column="17">if <condition pos:line="94" pos:column="20">(<expr><name pos:line="94" pos:column="21">verbose<pos:position pos:line="94" pos:column="28"/></name></expr>)<pos:position pos:line="94" pos:column="29"/></condition><then pos:line="94" pos:column="29"> <block pos:line="94" pos:column="30">{
                    <expr_stmt><expr><call><name pos:line="95" pos:column="21">usage_repeated_arg<pos:position pos:line="95" pos:column="39"/></name><argument_list pos:line="95" pos:column="39">(<argument><expr><name pos:line="95" pos:column="40">pool<pos:position pos:line="95" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="46">opt<pos:position pos:line="95" pos:column="49"/></name></expr></argument>)<pos:position pos:line="95" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="96" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="97" pos:column="17">verbose<pos:position pos:line="97" pos:column="24"/></name> <operator pos:line="97" pos:column="25">=<pos:position pos:line="97" pos:column="26"/></operator> <literal type="number" pos:line="97" pos:column="27">1<pos:position pos:line="97" pos:column="28"/></literal></expr>;<pos:position pos:line="97" pos:column="29"/></expr_stmt>
                <break pos:line="98" pos:column="17">break;<pos:position pos:line="98" pos:column="23"/></break>

            <case pos:line="100" pos:column="13">case <expr><literal type="char" pos:line="100" pos:column="18">'r'<pos:position pos:line="100" pos:column="21"/></literal></expr>:<pos:position pos:line="100" pos:column="22"/></case>
                <if pos:line="101" pos:column="17">if <condition pos:line="101" pos:column="20">(<expr><name pos:line="101" pos:column="21">realclean<pos:position pos:line="101" pos:column="30"/></name></expr>)<pos:position pos:line="101" pos:column="31"/></condition><then pos:line="101" pos:column="31"> <block pos:line="101" pos:column="32">{
                    <expr_stmt><expr><call><name pos:line="102" pos:column="21">usage_repeated_arg<pos:position pos:line="102" pos:column="39"/></name><argument_list pos:line="102" pos:column="39">(<argument><expr><name pos:line="102" pos:column="40">pool<pos:position pos:line="102" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="46">opt<pos:position pos:line="102" pos:column="49"/></name></expr></argument>)<pos:position pos:line="102" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="103" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="104" pos:column="17">realclean<pos:position pos:line="104" pos:column="26"/></name> <operator pos:line="104" pos:column="27">=<pos:position pos:line="104" pos:column="28"/></operator> <literal type="number" pos:line="104" pos:column="29">1<pos:position pos:line="104" pos:column="30"/></literal></expr>;<pos:position pos:line="104" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><name pos:line="105" pos:column="17">deldirs<pos:position pos:line="105" pos:column="24"/></name> <operator pos:line="105" pos:column="25">=<pos:position pos:line="105" pos:column="26"/></operator> <literal type="number" pos:line="105" pos:column="27">1<pos:position pos:line="105" pos:column="28"/></literal></expr>;<pos:position pos:line="105" pos:column="29"/></expr_stmt>
                <break pos:line="106" pos:column="17">break;<pos:position pos:line="106" pos:column="23"/></break>

            <case pos:line="108" pos:column="13">case <expr><literal type="char" pos:line="108" pos:column="18">'d'<pos:position pos:line="108" pos:column="21"/></literal></expr>:<pos:position pos:line="108" pos:column="22"/></case>
                <if pos:line="109" pos:column="17">if <condition pos:line="109" pos:column="20">(<expr><name pos:line="109" pos:column="21">isdaemon<pos:position pos:line="109" pos:column="29"/></name></expr>)<pos:position pos:line="109" pos:column="30"/></condition><then pos:line="109" pos:column="30"> <block pos:line="109" pos:column="31">{
                    <expr_stmt><expr><call><name pos:line="110" pos:column="21">usage_repeated_arg<pos:position pos:line="110" pos:column="39"/></name><argument_list pos:line="110" pos:column="39">(<argument><expr><name pos:line="110" pos:column="40">pool<pos:position pos:line="110" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="46">opt<pos:position pos:line="110" pos:column="49"/></name></expr></argument>)<pos:position pos:line="110" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="111" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="112" pos:column="17">isdaemon<pos:position pos:line="112" pos:column="25"/></name> <operator pos:line="112" pos:column="26">=<pos:position pos:line="112" pos:column="27"/></operator> <literal type="number" pos:line="112" pos:column="28">1<pos:position pos:line="112" pos:column="29"/></literal></expr>;<pos:position pos:line="112" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><name pos:line="113" pos:column="17">repeat<pos:position pos:line="113" pos:column="23"/></name> <operator pos:line="113" pos:column="24">=<pos:position pos:line="113" pos:column="25"/></operator> <call><name pos:line="113" pos:column="26">apr_atoi64<pos:position pos:line="113" pos:column="36"/></name><argument_list pos:line="113" pos:column="36">(<argument><expr><name pos:line="113" pos:column="37">arg<pos:position pos:line="113" pos:column="40"/></name></expr></argument>)<pos:position pos:line="113" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><name pos:line="114" pos:column="17">repeat<pos:position pos:line="114" pos:column="23"/></name> <operator pos:line="114" pos:column="24">*=<pos:position pos:line="114" pos:column="26"/></operator> <name pos:line="114" pos:column="27">SECS_PER_MIN<pos:position pos:line="114" pos:column="39"/></name></expr>;<pos:position pos:line="114" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name pos:line="115" pos:column="17">repeat<pos:position pos:line="115" pos:column="23"/></name> <operator pos:line="115" pos:column="24">*=<pos:position pos:line="115" pos:column="26"/></operator> <name pos:line="115" pos:column="27">APR_USEC_PER_SEC<pos:position pos:line="115" pos:column="43"/></name></expr>;<pos:position pos:line="115" pos:column="44"/></expr_stmt>
                <break pos:line="116" pos:column="17">break;<pos:position pos:line="116" pos:column="23"/></break>

            <case pos:line="118" pos:column="13">case <expr><literal type="char" pos:line="118" pos:column="18">'l'<pos:position pos:line="118" pos:column="21"/></literal></expr>:<pos:position pos:line="118" pos:column="22"/></case>
                <if pos:line="119" pos:column="17">if <condition pos:line="119" pos:column="20">(<expr><name pos:line="119" pos:column="21">limit_found<pos:position pos:line="119" pos:column="32"/></name></expr>)<pos:position pos:line="119" pos:column="33"/></condition><then pos:line="119" pos:column="33"> <block pos:line="119" pos:column="34">{
                    <expr_stmt><expr><call><name pos:line="120" pos:column="21">usage_repeated_arg<pos:position pos:line="120" pos:column="39"/></name><argument_list pos:line="120" pos:column="39">(<argument><expr><name pos:line="120" pos:column="40">pool<pos:position pos:line="120" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="46">opt<pos:position pos:line="120" pos:column="49"/></name></expr></argument>)<pos:position pos:line="120" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="121" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="122" pos:column="17">limit_found<pos:position pos:line="122" pos:column="28"/></name> <operator pos:line="122" pos:column="29">=<pos:position pos:line="122" pos:column="30"/></operator> <literal type="number" pos:line="122" pos:column="31">1<pos:position pos:line="122" pos:column="32"/></literal></expr>;<pos:position pos:line="122" pos:column="33"/></expr_stmt>

                <do pos:line="124" pos:column="17">do <block pos:line="124" pos:column="20">{
                    <expr_stmt><expr><name pos:line="125" pos:column="21">rv<pos:position pos:line="125" pos:column="23"/></name> <operator pos:line="125" pos:column="24">=<pos:position pos:line="125" pos:column="25"/></operator> <call><name pos:line="125" pos:column="26">apr_strtoff<pos:position pos:line="125" pos:column="37"/></name><argument_list pos:line="125" pos:column="37">(<argument><expr><operator pos:line="125" pos:column="38">&amp;<pos:position pos:line="125" pos:column="43"/></operator><name pos:line="125" pos:column="39">max<pos:position pos:line="125" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="44">arg<pos:position pos:line="125" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="49">&amp;<pos:position pos:line="125" pos:column="54"/></operator><name pos:line="125" pos:column="50">end<pos:position pos:line="125" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="55">10<pos:position pos:line="125" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="59"/></expr_stmt>
                    <if pos:line="126" pos:column="21">if <condition pos:line="126" pos:column="24">(<expr><name pos:line="126" pos:column="25">rv<pos:position pos:line="126" pos:column="27"/></name> <operator pos:line="126" pos:column="28">==<pos:position pos:line="126" pos:column="30"/></operator> <name pos:line="126" pos:column="31">APR_SUCCESS<pos:position pos:line="126" pos:column="42"/></name></expr>)<pos:position pos:line="126" pos:column="43"/></condition><then pos:line="126" pos:column="43"> <block pos:line="126" pos:column="44">{
                        <if pos:line="127" pos:column="25">if <condition pos:line="127" pos:column="28">(<expr><operator pos:line="127" pos:column="29">(<pos:position pos:line="127" pos:column="30"/></operator><operator pos:line="127" pos:column="30">*<pos:position pos:line="127" pos:column="31"/></operator><name pos:line="127" pos:column="31">end<pos:position pos:line="127" pos:column="34"/></name> <operator pos:line="127" pos:column="35">==<pos:position pos:line="127" pos:column="37"/></operator> <literal type="char" pos:line="127" pos:column="38">'K'<pos:position pos:line="127" pos:column="41"/></literal> <operator pos:line="127" pos:column="42">||<pos:position pos:line="127" pos:column="44"/></operator> <operator pos:line="127" pos:column="45">*<pos:position pos:line="127" pos:column="46"/></operator><name pos:line="127" pos:column="46">end<pos:position pos:line="127" pos:column="49"/></name> <operator pos:line="127" pos:column="50">==<pos:position pos:line="127" pos:column="52"/></operator> <literal type="char" pos:line="127" pos:column="53">'k'<pos:position pos:line="127" pos:column="56"/></literal><operator pos:line="127" pos:column="56">)<pos:position pos:line="127" pos:column="57"/></operator> <operator pos:line="127" pos:column="58">&amp;&amp;<pos:position pos:line="127" pos:column="68"/></operator> <operator pos:line="127" pos:column="61">!<pos:position pos:line="127" pos:column="62"/></operator><name><name pos:line="127" pos:column="62">end<pos:position pos:line="127" pos:column="65"/></name><index pos:line="127" pos:column="65">[<expr><literal type="number" pos:line="127" pos:column="66">1<pos:position pos:line="127" pos:column="67"/></literal></expr>]<pos:position pos:line="127" pos:column="68"/></index></name></expr>)<pos:position pos:line="127" pos:column="69"/></condition><then pos:line="127" pos:column="69"> <block pos:line="127" pos:column="70">{
                            <expr_stmt><expr><name pos:line="128" pos:column="29">max<pos:position pos:line="128" pos:column="32"/></name> <operator pos:line="128" pos:column="33">*=<pos:position pos:line="128" pos:column="35"/></operator> <name pos:line="128" pos:column="36">KBYTE<pos:position pos:line="128" pos:column="41"/></name></expr>;<pos:position pos:line="128" pos:column="42"/></expr_stmt>
                        }<pos:position pos:line="129" pos:column="26"/></block></then>
                        <elseif pos:line="130" pos:column="25">else <if pos:line="130" pos:column="30">if <condition pos:line="130" pos:column="33">(<expr><operator pos:line="130" pos:column="34">(<pos:position pos:line="130" pos:column="35"/></operator><operator pos:line="130" pos:column="35">*<pos:position pos:line="130" pos:column="36"/></operator><name pos:line="130" pos:column="36">end<pos:position pos:line="130" pos:column="39"/></name> <operator pos:line="130" pos:column="40">==<pos:position pos:line="130" pos:column="42"/></operator> <literal type="char" pos:line="130" pos:column="43">'M'<pos:position pos:line="130" pos:column="46"/></literal> <operator pos:line="130" pos:column="47">||<pos:position pos:line="130" pos:column="49"/></operator> <operator pos:line="130" pos:column="50">*<pos:position pos:line="130" pos:column="51"/></operator><name pos:line="130" pos:column="51">end<pos:position pos:line="130" pos:column="54"/></name> <operator pos:line="130" pos:column="55">==<pos:position pos:line="130" pos:column="57"/></operator> <literal type="char" pos:line="130" pos:column="58">'m'<pos:position pos:line="130" pos:column="61"/></literal><operator pos:line="130" pos:column="61">)<pos:position pos:line="130" pos:column="62"/></operator> <operator pos:line="130" pos:column="63">&amp;&amp;<pos:position pos:line="130" pos:column="73"/></operator> <operator pos:line="130" pos:column="66">!<pos:position pos:line="130" pos:column="67"/></operator><name><name pos:line="130" pos:column="67">end<pos:position pos:line="130" pos:column="70"/></name><index pos:line="130" pos:column="70">[<expr><literal type="number" pos:line="130" pos:column="71">1<pos:position pos:line="130" pos:column="72"/></literal></expr>]<pos:position pos:line="130" pos:column="73"/></index></name></expr>)<pos:position pos:line="130" pos:column="74"/></condition><then pos:line="130" pos:column="74"> <block pos:line="130" pos:column="75">{
                            <expr_stmt><expr><name pos:line="131" pos:column="29">max<pos:position pos:line="131" pos:column="32"/></name> <operator pos:line="131" pos:column="33">*=<pos:position pos:line="131" pos:column="35"/></operator> <name pos:line="131" pos:column="36">MBYTE<pos:position pos:line="131" pos:column="41"/></name></expr>;<pos:position pos:line="131" pos:column="42"/></expr_stmt>
                        }<pos:position pos:line="132" pos:column="26"/></block></then></if></elseif>
                        <elseif pos:line="133" pos:column="25">else <if pos:line="133" pos:column="30">if <condition pos:line="133" pos:column="33">(<expr><operator pos:line="133" pos:column="34">(<pos:position pos:line="133" pos:column="35"/></operator><operator pos:line="133" pos:column="35">*<pos:position pos:line="133" pos:column="36"/></operator><name pos:line="133" pos:column="36">end<pos:position pos:line="133" pos:column="39"/></name> <operator pos:line="133" pos:column="40">==<pos:position pos:line="133" pos:column="42"/></operator> <literal type="char" pos:line="133" pos:column="43">'G'<pos:position pos:line="133" pos:column="46"/></literal> <operator pos:line="133" pos:column="47">||<pos:position pos:line="133" pos:column="49"/></operator> <operator pos:line="133" pos:column="50">*<pos:position pos:line="133" pos:column="51"/></operator><name pos:line="133" pos:column="51">end<pos:position pos:line="133" pos:column="54"/></name> <operator pos:line="133" pos:column="55">==<pos:position pos:line="133" pos:column="57"/></operator> <literal type="char" pos:line="133" pos:column="58">'g'<pos:position pos:line="133" pos:column="61"/></literal><operator pos:line="133" pos:column="61">)<pos:position pos:line="133" pos:column="62"/></operator> <operator pos:line="133" pos:column="63">&amp;&amp;<pos:position pos:line="133" pos:column="73"/></operator> <operator pos:line="133" pos:column="66">!<pos:position pos:line="133" pos:column="67"/></operator><name><name pos:line="133" pos:column="67">end<pos:position pos:line="133" pos:column="70"/></name><index pos:line="133" pos:column="70">[<expr><literal type="number" pos:line="133" pos:column="71">1<pos:position pos:line="133" pos:column="72"/></literal></expr>]<pos:position pos:line="133" pos:column="73"/></index></name></expr>)<pos:position pos:line="133" pos:column="74"/></condition><then pos:line="133" pos:column="74"> <block pos:line="133" pos:column="75">{
                            <expr_stmt><expr><name pos:line="134" pos:column="29">max<pos:position pos:line="134" pos:column="32"/></name> <operator pos:line="134" pos:column="33">*=<pos:position pos:line="134" pos:column="35"/></operator> <name pos:line="134" pos:column="36">GBYTE<pos:position pos:line="134" pos:column="41"/></name></expr>;<pos:position pos:line="134" pos:column="42"/></expr_stmt>
                        }<pos:position pos:line="135" pos:column="26"/></block></then></if></elseif>
                        <elseif pos:line="136" pos:column="25">else <if pos:line="136" pos:column="30">if <condition pos:line="136" pos:column="33">(<expr><operator pos:line="136" pos:column="34">*<pos:position pos:line="136" pos:column="35"/></operator><name pos:line="136" pos:column="35">end<pos:position pos:line="136" pos:column="38"/></name> <operator pos:line="136" pos:column="39">&amp;&amp;<pos:position pos:line="136" pos:column="49"/></operator>        <comment type="block" pos:line="136" pos:column="49">/* neither empty nor [Bb] */</comment>
                                 <operator pos:line="137" pos:column="34">(<pos:position pos:line="137" pos:column="35"/></operator><operator pos:line="137" pos:column="35">(<pos:position pos:line="137" pos:column="36"/></operator><operator pos:line="137" pos:column="36">*<pos:position pos:line="137" pos:column="37"/></operator><name pos:line="137" pos:column="37">end<pos:position pos:line="137" pos:column="40"/></name> <operator pos:line="137" pos:column="41">!=<pos:position pos:line="137" pos:column="43"/></operator> <literal type="char" pos:line="137" pos:column="44">'B'<pos:position pos:line="137" pos:column="47"/></literal> <operator pos:line="137" pos:column="48">&amp;&amp;<pos:position pos:line="137" pos:column="58"/></operator> <operator pos:line="137" pos:column="51">*<pos:position pos:line="137" pos:column="52"/></operator><name pos:line="137" pos:column="52">end<pos:position pos:line="137" pos:column="55"/></name> <operator pos:line="137" pos:column="56">!=<pos:position pos:line="137" pos:column="58"/></operator> <literal type="char" pos:line="137" pos:column="59">'b'<pos:position pos:line="137" pos:column="62"/></literal><operator pos:line="137" pos:column="62">)<pos:position pos:line="137" pos:column="63"/></operator> <operator pos:line="137" pos:column="64">||<pos:position pos:line="137" pos:column="66"/></operator> <name><name pos:line="137" pos:column="67">end<pos:position pos:line="137" pos:column="70"/></name><index pos:line="137" pos:column="70">[<expr><literal type="number" pos:line="137" pos:column="71">1<pos:position pos:line="137" pos:column="72"/></literal></expr>]<pos:position pos:line="137" pos:column="73"/></index></name><operator pos:line="137" pos:column="73">)<pos:position pos:line="137" pos:column="74"/></operator></expr>)<pos:position pos:line="137" pos:column="75"/></condition><then pos:line="137" pos:column="75"> <block pos:line="137" pos:column="76">{
                            <expr_stmt><expr><name pos:line="138" pos:column="29">rv<pos:position pos:line="138" pos:column="31"/></name> <operator pos:line="138" pos:column="32">=<pos:position pos:line="138" pos:column="33"/></operator> <name pos:line="138" pos:column="34">APR_EGENERAL<pos:position pos:line="138" pos:column="46"/></name></expr>;<pos:position pos:line="138" pos:column="47"/></expr_stmt>
                        }<pos:position pos:line="139" pos:column="26"/></block></then></if></elseif></if>
                    }<pos:position pos:line="140" pos:column="22"/></block></then></if>
                    <if pos:line="141" pos:column="21">if <condition pos:line="141" pos:column="24">(<expr><name pos:line="141" pos:column="25">rv<pos:position pos:line="141" pos:column="27"/></name> <operator pos:line="141" pos:column="28">!=<pos:position pos:line="141" pos:column="30"/></operator> <name pos:line="141" pos:column="31">APR_SUCCESS<pos:position pos:line="141" pos:column="42"/></name></expr>)<pos:position pos:line="141" pos:column="43"/></condition><then pos:line="141" pos:column="43"> <block pos:line="141" pos:column="44">{
                        <expr_stmt><expr><call><name pos:line="142" pos:column="25">usage<pos:position pos:line="142" pos:column="30"/></name><argument_list pos:line="142" pos:column="30">(<argument><expr><macro><name pos:line="142" pos:column="31">apr_psprintf<pos:position pos:line="142" pos:column="43"/></name><argument_list pos:line="142" pos:column="43">(<argument pos:line="142" pos:column="44">pool<pos:position pos:line="142" pos:column="48"/></argument>, <argument><literal type="string" pos:line="142" pos:column="50">"Invalid limit: %s"<pos:position pos:line="142" pos:column="69"/></literal>
                                                 APR_EOL_STR APR_EOL_STR<pos:position pos:line="143" pos:column="73"/></argument>, <argument pos:line="143" pos:column="75">arg<pos:position pos:line="143" pos:column="78"/></argument>)<pos:position pos:line="143" pos:column="79"/></argument_list></macro></expr></argument>)<pos:position pos:line="143" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="81"/></expr_stmt>
                    }<pos:position pos:line="144" pos:column="22"/></block></then></if>
                }<pos:position pos:line="145" pos:column="18"/></block> while<condition pos:line="145" pos:column="24">(<expr><literal type="number" pos:line="145" pos:column="25">0<pos:position pos:line="145" pos:column="26"/></literal></expr>)<pos:position pos:line="145" pos:column="27"/></condition>;<pos:position pos:line="145" pos:column="28"/></do>
                <break pos:line="146" pos:column="17">break;<pos:position pos:line="146" pos:column="23"/></break>

            <case pos:line="148" pos:column="13">case <expr><literal type="char" pos:line="148" pos:column="18">'L'<pos:position pos:line="148" pos:column="21"/></literal></expr>:<pos:position pos:line="148" pos:column="22"/></case>
                <if pos:line="149" pos:column="17">if <condition pos:line="149" pos:column="20">(<expr><name pos:line="149" pos:column="21">inodes_found<pos:position pos:line="149" pos:column="33"/></name></expr>)<pos:position pos:line="149" pos:column="34"/></condition><then pos:line="149" pos:column="34"> <block pos:line="149" pos:column="35">{
                    <expr_stmt><expr><call><name pos:line="150" pos:column="21">usage_repeated_arg<pos:position pos:line="150" pos:column="39"/></name><argument_list pos:line="150" pos:column="39">(<argument><expr><name pos:line="150" pos:column="40">pool<pos:position pos:line="150" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="46">opt<pos:position pos:line="150" pos:column="49"/></name></expr></argument>)<pos:position pos:line="150" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="151" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="152" pos:column="17">inodes_found<pos:position pos:line="152" pos:column="29"/></name> <operator pos:line="152" pos:column="30">=<pos:position pos:line="152" pos:column="31"/></operator> <literal type="number" pos:line="152" pos:column="32">1<pos:position pos:line="152" pos:column="33"/></literal></expr>;<pos:position pos:line="152" pos:column="34"/></expr_stmt>

                <do pos:line="154" pos:column="17">do <block pos:line="154" pos:column="20">{
                    <expr_stmt><expr><name pos:line="155" pos:column="21">rv<pos:position pos:line="155" pos:column="23"/></name> <operator pos:line="155" pos:column="24">=<pos:position pos:line="155" pos:column="25"/></operator> <call><name pos:line="155" pos:column="26">apr_strtoff<pos:position pos:line="155" pos:column="37"/></name><argument_list pos:line="155" pos:column="37">(<argument><expr><operator pos:line="155" pos:column="38">&amp;<pos:position pos:line="155" pos:column="43"/></operator><name pos:line="155" pos:column="39">inodes<pos:position pos:line="155" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="47">arg<pos:position pos:line="155" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="155" pos:column="52">&amp;<pos:position pos:line="155" pos:column="57"/></operator><name pos:line="155" pos:column="53">end<pos:position pos:line="155" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="155" pos:column="58">10<pos:position pos:line="155" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="62"/></expr_stmt>
                    <if pos:line="156" pos:column="21">if <condition pos:line="156" pos:column="24">(<expr><name pos:line="156" pos:column="25">rv<pos:position pos:line="156" pos:column="27"/></name> <operator pos:line="156" pos:column="28">==<pos:position pos:line="156" pos:column="30"/></operator> <name pos:line="156" pos:column="31">APR_SUCCESS<pos:position pos:line="156" pos:column="42"/></name></expr>)<pos:position pos:line="156" pos:column="43"/></condition><then pos:line="156" pos:column="43"> <block pos:line="156" pos:column="44">{
                        <if pos:line="157" pos:column="25">if <condition pos:line="157" pos:column="28">(<expr><operator pos:line="157" pos:column="29">(<pos:position pos:line="157" pos:column="30"/></operator><operator pos:line="157" pos:column="30">*<pos:position pos:line="157" pos:column="31"/></operator><name pos:line="157" pos:column="31">end<pos:position pos:line="157" pos:column="34"/></name> <operator pos:line="157" pos:column="35">==<pos:position pos:line="157" pos:column="37"/></operator> <literal type="char" pos:line="157" pos:column="38">'K'<pos:position pos:line="157" pos:column="41"/></literal> <operator pos:line="157" pos:column="42">||<pos:position pos:line="157" pos:column="44"/></operator> <operator pos:line="157" pos:column="45">*<pos:position pos:line="157" pos:column="46"/></operator><name pos:line="157" pos:column="46">end<pos:position pos:line="157" pos:column="49"/></name> <operator pos:line="157" pos:column="50">==<pos:position pos:line="157" pos:column="52"/></operator> <literal type="char" pos:line="157" pos:column="53">'k'<pos:position pos:line="157" pos:column="56"/></literal><operator pos:line="157" pos:column="56">)<pos:position pos:line="157" pos:column="57"/></operator> <operator pos:line="157" pos:column="58">&amp;&amp;<pos:position pos:line="157" pos:column="68"/></operator> <operator pos:line="157" pos:column="61">!<pos:position pos:line="157" pos:column="62"/></operator><name><name pos:line="157" pos:column="62">end<pos:position pos:line="157" pos:column="65"/></name><index pos:line="157" pos:column="65">[<expr><literal type="number" pos:line="157" pos:column="66">1<pos:position pos:line="157" pos:column="67"/></literal></expr>]<pos:position pos:line="157" pos:column="68"/></index></name></expr>)<pos:position pos:line="157" pos:column="69"/></condition><then pos:line="157" pos:column="69"> <block pos:line="157" pos:column="70">{
                            <expr_stmt><expr><name pos:line="158" pos:column="29">inodes<pos:position pos:line="158" pos:column="35"/></name> <operator pos:line="158" pos:column="36">*=<pos:position pos:line="158" pos:column="38"/></operator> <name pos:line="158" pos:column="39">KBYTE<pos:position pos:line="158" pos:column="44"/></name></expr>;<pos:position pos:line="158" pos:column="45"/></expr_stmt>
                        }<pos:position pos:line="159" pos:column="26"/></block></then>
                        <elseif pos:line="160" pos:column="25">else <if pos:line="160" pos:column="30">if <condition pos:line="160" pos:column="33">(<expr><operator pos:line="160" pos:column="34">(<pos:position pos:line="160" pos:column="35"/></operator><operator pos:line="160" pos:column="35">*<pos:position pos:line="160" pos:column="36"/></operator><name pos:line="160" pos:column="36">end<pos:position pos:line="160" pos:column="39"/></name> <operator pos:line="160" pos:column="40">==<pos:position pos:line="160" pos:column="42"/></operator> <literal type="char" pos:line="160" pos:column="43">'M'<pos:position pos:line="160" pos:column="46"/></literal> <operator pos:line="160" pos:column="47">||<pos:position pos:line="160" pos:column="49"/></operator> <operator pos:line="160" pos:column="50">*<pos:position pos:line="160" pos:column="51"/></operator><name pos:line="160" pos:column="51">end<pos:position pos:line="160" pos:column="54"/></name> <operator pos:line="160" pos:column="55">==<pos:position pos:line="160" pos:column="57"/></operator> <literal type="char" pos:line="160" pos:column="58">'m'<pos:position pos:line="160" pos:column="61"/></literal><operator pos:line="160" pos:column="61">)<pos:position pos:line="160" pos:column="62"/></operator> <operator pos:line="160" pos:column="63">&amp;&amp;<pos:position pos:line="160" pos:column="73"/></operator> <operator pos:line="160" pos:column="66">!<pos:position pos:line="160" pos:column="67"/></operator><name><name pos:line="160" pos:column="67">end<pos:position pos:line="160" pos:column="70"/></name><index pos:line="160" pos:column="70">[<expr><literal type="number" pos:line="160" pos:column="71">1<pos:position pos:line="160" pos:column="72"/></literal></expr>]<pos:position pos:line="160" pos:column="73"/></index></name></expr>)<pos:position pos:line="160" pos:column="74"/></condition><then pos:line="160" pos:column="74"> <block pos:line="160" pos:column="75">{
                            <expr_stmt><expr><name pos:line="161" pos:column="29">inodes<pos:position pos:line="161" pos:column="35"/></name> <operator pos:line="161" pos:column="36">*=<pos:position pos:line="161" pos:column="38"/></operator> <name pos:line="161" pos:column="39">MBYTE<pos:position pos:line="161" pos:column="44"/></name></expr>;<pos:position pos:line="161" pos:column="45"/></expr_stmt>
                        }<pos:position pos:line="162" pos:column="26"/></block></then></if></elseif>
                        <elseif pos:line="163" pos:column="25">else <if pos:line="163" pos:column="30">if <condition pos:line="163" pos:column="33">(<expr><operator pos:line="163" pos:column="34">(<pos:position pos:line="163" pos:column="35"/></operator><operator pos:line="163" pos:column="35">*<pos:position pos:line="163" pos:column="36"/></operator><name pos:line="163" pos:column="36">end<pos:position pos:line="163" pos:column="39"/></name> <operator pos:line="163" pos:column="40">==<pos:position pos:line="163" pos:column="42"/></operator> <literal type="char" pos:line="163" pos:column="43">'G'<pos:position pos:line="163" pos:column="46"/></literal> <operator pos:line="163" pos:column="47">||<pos:position pos:line="163" pos:column="49"/></operator> <operator pos:line="163" pos:column="50">*<pos:position pos:line="163" pos:column="51"/></operator><name pos:line="163" pos:column="51">end<pos:position pos:line="163" pos:column="54"/></name> <operator pos:line="163" pos:column="55">==<pos:position pos:line="163" pos:column="57"/></operator> <literal type="char" pos:line="163" pos:column="58">'g'<pos:position pos:line="163" pos:column="61"/></literal><operator pos:line="163" pos:column="61">)<pos:position pos:line="163" pos:column="62"/></operator> <operator pos:line="163" pos:column="63">&amp;&amp;<pos:position pos:line="163" pos:column="73"/></operator> <operator pos:line="163" pos:column="66">!<pos:position pos:line="163" pos:column="67"/></operator><name><name pos:line="163" pos:column="67">end<pos:position pos:line="163" pos:column="70"/></name><index pos:line="163" pos:column="70">[<expr><literal type="number" pos:line="163" pos:column="71">1<pos:position pos:line="163" pos:column="72"/></literal></expr>]<pos:position pos:line="163" pos:column="73"/></index></name></expr>)<pos:position pos:line="163" pos:column="74"/></condition><then pos:line="163" pos:column="74"> <block pos:line="163" pos:column="75">{
                            <expr_stmt><expr><name pos:line="164" pos:column="29">inodes<pos:position pos:line="164" pos:column="35"/></name> <operator pos:line="164" pos:column="36">*=<pos:position pos:line="164" pos:column="38"/></operator> <name pos:line="164" pos:column="39">GBYTE<pos:position pos:line="164" pos:column="44"/></name></expr>;<pos:position pos:line="164" pos:column="45"/></expr_stmt>
                        }<pos:position pos:line="165" pos:column="26"/></block></then></if></elseif>
                        <elseif pos:line="166" pos:column="25">else <if pos:line="166" pos:column="30">if <condition pos:line="166" pos:column="33">(<expr><operator pos:line="166" pos:column="34">*<pos:position pos:line="166" pos:column="35"/></operator><name pos:line="166" pos:column="35">end<pos:position pos:line="166" pos:column="38"/></name> <operator pos:line="166" pos:column="39">&amp;&amp;<pos:position pos:line="166" pos:column="49"/></operator>        <comment type="block" pos:line="166" pos:column="49">/* neither empty nor [Bb] */</comment>
                                 <operator pos:line="167" pos:column="34">(<pos:position pos:line="167" pos:column="35"/></operator><operator pos:line="167" pos:column="35">(<pos:position pos:line="167" pos:column="36"/></operator><operator pos:line="167" pos:column="36">*<pos:position pos:line="167" pos:column="37"/></operator><name pos:line="167" pos:column="37">end<pos:position pos:line="167" pos:column="40"/></name> <operator pos:line="167" pos:column="41">!=<pos:position pos:line="167" pos:column="43"/></operator> <literal type="char" pos:line="167" pos:column="44">'B'<pos:position pos:line="167" pos:column="47"/></literal> <operator pos:line="167" pos:column="48">&amp;&amp;<pos:position pos:line="167" pos:column="58"/></operator> <operator pos:line="167" pos:column="51">*<pos:position pos:line="167" pos:column="52"/></operator><name pos:line="167" pos:column="52">end<pos:position pos:line="167" pos:column="55"/></name> <operator pos:line="167" pos:column="56">!=<pos:position pos:line="167" pos:column="58"/></operator> <literal type="char" pos:line="167" pos:column="59">'b'<pos:position pos:line="167" pos:column="62"/></literal><operator pos:line="167" pos:column="62">)<pos:position pos:line="167" pos:column="63"/></operator> <operator pos:line="167" pos:column="64">||<pos:position pos:line="167" pos:column="66"/></operator> <name><name pos:line="167" pos:column="67">end<pos:position pos:line="167" pos:column="70"/></name><index pos:line="167" pos:column="70">[<expr><literal type="number" pos:line="167" pos:column="71">1<pos:position pos:line="167" pos:column="72"/></literal></expr>]<pos:position pos:line="167" pos:column="73"/></index></name><operator pos:line="167" pos:column="73">)<pos:position pos:line="167" pos:column="74"/></operator></expr>)<pos:position pos:line="167" pos:column="75"/></condition><then pos:line="167" pos:column="75"> <block pos:line="167" pos:column="76">{
                            <expr_stmt><expr><name pos:line="168" pos:column="29">rv<pos:position pos:line="168" pos:column="31"/></name> <operator pos:line="168" pos:column="32">=<pos:position pos:line="168" pos:column="33"/></operator> <name pos:line="168" pos:column="34">APR_EGENERAL<pos:position pos:line="168" pos:column="46"/></name></expr>;<pos:position pos:line="168" pos:column="47"/></expr_stmt>
                        }<pos:position pos:line="169" pos:column="26"/></block></then></if></elseif></if>
                    }<pos:position pos:line="170" pos:column="22"/></block></then></if>
                    <if pos:line="171" pos:column="21">if <condition pos:line="171" pos:column="24">(<expr><name pos:line="171" pos:column="25">rv<pos:position pos:line="171" pos:column="27"/></name> <operator pos:line="171" pos:column="28">!=<pos:position pos:line="171" pos:column="30"/></operator> <name pos:line="171" pos:column="31">APR_SUCCESS<pos:position pos:line="171" pos:column="42"/></name></expr>)<pos:position pos:line="171" pos:column="43"/></condition><then pos:line="171" pos:column="43"> <block pos:line="171" pos:column="44">{
                        <expr_stmt><expr><call><name pos:line="172" pos:column="25">usage<pos:position pos:line="172" pos:column="30"/></name><argument_list pos:line="172" pos:column="30">(<argument><expr><macro><name pos:line="172" pos:column="31">apr_psprintf<pos:position pos:line="172" pos:column="43"/></name><argument_list pos:line="172" pos:column="43">(<argument pos:line="172" pos:column="44">pool<pos:position pos:line="172" pos:column="48"/></argument>, <argument><literal type="string" pos:line="172" pos:column="50">"Invalid limit: %s"<pos:position pos:line="172" pos:column="69"/></literal>
                                                 APR_EOL_STR APR_EOL_STR<pos:position pos:line="173" pos:column="73"/></argument>, <argument pos:line="173" pos:column="75">arg<pos:position pos:line="173" pos:column="78"/></argument>)<pos:position pos:line="173" pos:column="79"/></argument_list></macro></expr></argument>)<pos:position pos:line="173" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="81"/></expr_stmt>
                    }<pos:position pos:line="174" pos:column="22"/></block></then></if>
                }<pos:position pos:line="175" pos:column="18"/></block> while<condition pos:line="175" pos:column="24">(<expr><literal type="number" pos:line="175" pos:column="25">0<pos:position pos:line="175" pos:column="26"/></literal></expr>)<pos:position pos:line="175" pos:column="27"/></condition>;<pos:position pos:line="175" pos:column="28"/></do>
                <break pos:line="176" pos:column="17">break;<pos:position pos:line="176" pos:column="23"/></break>

            <case pos:line="178" pos:column="13">case <expr><literal type="char" pos:line="178" pos:column="18">'a'<pos:position pos:line="178" pos:column="21"/></literal></expr>:<pos:position pos:line="178" pos:column="22"/></case>
                <if pos:line="179" pos:column="17">if <condition pos:line="179" pos:column="20">(<expr><name pos:line="179" pos:column="21">listurls<pos:position pos:line="179" pos:column="29"/></name></expr>)<pos:position pos:line="179" pos:column="30"/></condition><then pos:line="179" pos:column="30"> <block pos:line="179" pos:column="31">{
                    <expr_stmt><expr><call><name pos:line="180" pos:column="21">usage_repeated_arg<pos:position pos:line="180" pos:column="39"/></name><argument_list pos:line="180" pos:column="39">(<argument><expr><name pos:line="180" pos:column="40">pool<pos:position pos:line="180" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="46">opt<pos:position pos:line="180" pos:column="49"/></name></expr></argument>)<pos:position pos:line="180" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="181" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="182" pos:column="17">listurls<pos:position pos:line="182" pos:column="25"/></name> <operator pos:line="182" pos:column="26">=<pos:position pos:line="182" pos:column="27"/></operator> <literal type="number" pos:line="182" pos:column="28">1<pos:position pos:line="182" pos:column="29"/></literal></expr>;<pos:position pos:line="182" pos:column="30"/></expr_stmt>
                <break pos:line="183" pos:column="17">break;<pos:position pos:line="183" pos:column="23"/></break>

            <case pos:line="185" pos:column="13">case <expr><literal type="char" pos:line="185" pos:column="18">'A'<pos:position pos:line="185" pos:column="21"/></literal></expr>:<pos:position pos:line="185" pos:column="22"/></case>
                <if pos:line="186" pos:column="17">if <condition pos:line="186" pos:column="20">(<expr><name pos:line="186" pos:column="21">listurls<pos:position pos:line="186" pos:column="29"/></name></expr>)<pos:position pos:line="186" pos:column="30"/></condition><then pos:line="186" pos:column="30"> <block pos:line="186" pos:column="31">{
                    <expr_stmt><expr><call><name pos:line="187" pos:column="21">usage_repeated_arg<pos:position pos:line="187" pos:column="39"/></name><argument_list pos:line="187" pos:column="39">(<argument><expr><name pos:line="187" pos:column="40">pool<pos:position pos:line="187" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="46">opt<pos:position pos:line="187" pos:column="49"/></name></expr></argument>)<pos:position pos:line="187" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="188" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="189" pos:column="17">listurls<pos:position pos:line="189" pos:column="25"/></name> <operator pos:line="189" pos:column="26">=<pos:position pos:line="189" pos:column="27"/></operator> <literal type="number" pos:line="189" pos:column="28">1<pos:position pos:line="189" pos:column="29"/></literal></expr>;<pos:position pos:line="189" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><name pos:line="190" pos:column="17">listextended<pos:position pos:line="190" pos:column="29"/></name> <operator pos:line="190" pos:column="30">=<pos:position pos:line="190" pos:column="31"/></operator> <literal type="number" pos:line="190" pos:column="32">1<pos:position pos:line="190" pos:column="33"/></literal></expr>;<pos:position pos:line="190" pos:column="34"/></expr_stmt>
                <break pos:line="191" pos:column="17">break;<pos:position pos:line="191" pos:column="23"/></break>

            <case pos:line="193" pos:column="13">case <expr><literal type="char" pos:line="193" pos:column="18">'p'<pos:position pos:line="193" pos:column="21"/></literal></expr>:<pos:position pos:line="193" pos:column="22"/></case>
                <if pos:line="194" pos:column="17">if <condition pos:line="194" pos:column="20">(<expr><name pos:line="194" pos:column="21">proxypath<pos:position pos:line="194" pos:column="30"/></name></expr>)<pos:position pos:line="194" pos:column="31"/></condition><then pos:line="194" pos:column="31"> <block pos:line="194" pos:column="32">{
                    <expr_stmt><expr><call><name pos:line="195" pos:column="21">usage_repeated_arg<pos:position pos:line="195" pos:column="39"/></name><argument_list pos:line="195" pos:column="39">(<argument><expr><name pos:line="195" pos:column="40">pool<pos:position pos:line="195" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="46">opt<pos:position pos:line="195" pos:column="49"/></name></expr></argument>)<pos:position pos:line="195" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="196" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="197" pos:column="17">proxypath<pos:position pos:line="197" pos:column="26"/></name> <operator pos:line="197" pos:column="27">=<pos:position pos:line="197" pos:column="28"/></operator> <call><name pos:line="197" pos:column="29">apr_pstrdup<pos:position pos:line="197" pos:column="40"/></name><argument_list pos:line="197" pos:column="40">(<argument><expr><name pos:line="197" pos:column="41">pool<pos:position pos:line="197" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="47">arg<pos:position pos:line="197" pos:column="50"/></name></expr></argument>)<pos:position pos:line="197" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="52"/></expr_stmt>
                <if pos:line="198" pos:column="17">if <condition pos:line="198" pos:column="20">(<expr><operator pos:line="198" pos:column="21">(<pos:position pos:line="198" pos:column="22"/></operator><name pos:line="198" pos:column="22">status<pos:position pos:line="198" pos:column="28"/></name> <operator pos:line="198" pos:column="29">=<pos:position pos:line="198" pos:column="30"/></operator> <call><name pos:line="198" pos:column="31">apr_filepath_set<pos:position pos:line="198" pos:column="47"/></name><argument_list pos:line="198" pos:column="47">(<argument><expr><name pos:line="198" pos:column="48">proxypath<pos:position pos:line="198" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="198" pos:column="59">pool<pos:position pos:line="198" pos:column="63"/></name></expr></argument>)<pos:position pos:line="198" pos:column="64"/></argument_list></call><operator pos:line="198" pos:column="64">)<pos:position pos:line="198" pos:column="65"/></operator> <operator pos:line="198" pos:column="66">!=<pos:position pos:line="198" pos:column="68"/></operator> <name pos:line="198" pos:column="69">APR_SUCCESS<pos:position pos:line="198" pos:column="80"/></name></expr>)<pos:position pos:line="198" pos:column="81"/></condition><then pos:line="198" pos:column="81"> <block pos:line="198" pos:column="82">{
                    <expr_stmt><expr><call><name pos:line="199" pos:column="21">usage<pos:position pos:line="199" pos:column="26"/></name><argument_list pos:line="199" pos:column="26">(<argument><expr><call><name pos:line="199" pos:column="27">apr_psprintf<pos:position pos:line="199" pos:column="39"/></name><argument_list pos:line="199" pos:column="39">(<argument><expr><name pos:line="199" pos:column="40">pool<pos:position pos:line="199" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="199" pos:column="46">"Could not set filepath to '%s': %pm"<pos:position pos:line="199" pos:column="83"/></literal></expr></argument>,
                                       <argument><expr><name pos:line="200" pos:column="40">proxypath<pos:position pos:line="200" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="200" pos:column="51">&amp;<pos:position pos:line="200" pos:column="56"/></operator><name pos:line="200" pos:column="52">status<pos:position pos:line="200" pos:column="58"/></name></expr></argument>)<pos:position pos:line="200" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="200" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="61"/></expr_stmt>
                }<pos:position pos:line="201" pos:column="18"/></block></then></if>
                <break pos:line="202" pos:column="17">break;<pos:position pos:line="202" pos:column="23"/></break>

            <case pos:line="204" pos:column="13">case <expr><literal type="char" pos:line="204" pos:column="18">'P'<pos:position pos:line="204" pos:column="21"/></literal></expr>:<pos:position pos:line="204" pos:column="22"/></case>
                <if pos:line="205" pos:column="17">if <condition pos:line="205" pos:column="20">(<expr><name pos:line="205" pos:column="21">pidfilename<pos:position pos:line="205" pos:column="32"/></name></expr>)<pos:position pos:line="205" pos:column="33"/></condition><then pos:line="205" pos:column="33"> <block pos:line="205" pos:column="34">{
                    <expr_stmt><expr><call><name pos:line="206" pos:column="21">usage_repeated_arg<pos:position pos:line="206" pos:column="39"/></name><argument_list pos:line="206" pos:column="39">(<argument><expr><name pos:line="206" pos:column="40">pool<pos:position pos:line="206" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="46">opt<pos:position pos:line="206" pos:column="49"/></name></expr></argument>)<pos:position pos:line="206" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="207" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="208" pos:column="17">pidfilename<pos:position pos:line="208" pos:column="28"/></name> <operator pos:line="208" pos:column="29">=<pos:position pos:line="208" pos:column="30"/></operator> <call><name pos:line="208" pos:column="31">apr_pstrdup<pos:position pos:line="208" pos:column="42"/></name><argument_list pos:line="208" pos:column="42">(<argument><expr><name pos:line="208" pos:column="43">pool<pos:position pos:line="208" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="49">arg<pos:position pos:line="208" pos:column="52"/></name></expr></argument>)<pos:position pos:line="208" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="54"/></expr_stmt>
                <break pos:line="209" pos:column="17">break;<pos:position pos:line="209" pos:column="23"/></break>

            <case pos:line="211" pos:column="13">case <expr><literal type="char" pos:line="211" pos:column="18">'R'<pos:position pos:line="211" pos:column="21"/></literal></expr>:<pos:position pos:line="211" pos:column="22"/></case>
                <if pos:line="212" pos:column="17">if <condition pos:line="212" pos:column="20">(<expr><name pos:line="212" pos:column="21">round<pos:position pos:line="212" pos:column="26"/></name></expr>)<pos:position pos:line="212" pos:column="27"/></condition><then pos:line="212" pos:column="27"> <block pos:line="212" pos:column="28">{
                    <expr_stmt><expr><call><name pos:line="213" pos:column="21">usage_repeated_arg<pos:position pos:line="213" pos:column="39"/></name><argument_list pos:line="213" pos:column="39">(<argument><expr><name pos:line="213" pos:column="40">pool<pos:position pos:line="213" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="46">opt<pos:position pos:line="213" pos:column="49"/></name></expr></argument>)<pos:position pos:line="213" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="214" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="215" pos:column="17">rv<pos:position pos:line="215" pos:column="19"/></name> <operator pos:line="215" pos:column="20">=<pos:position pos:line="215" pos:column="21"/></operator> <call><name pos:line="215" pos:column="22">apr_strtoff<pos:position pos:line="215" pos:column="33"/></name><argument_list pos:line="215" pos:column="33">(<argument><expr><operator pos:line="215" pos:column="34">&amp;<pos:position pos:line="215" pos:column="39"/></operator><name pos:line="215" pos:column="35">round<pos:position pos:line="215" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="42">arg<pos:position pos:line="215" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="215" pos:column="47">&amp;<pos:position pos:line="215" pos:column="52"/></operator><name pos:line="215" pos:column="48">end<pos:position pos:line="215" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="215" pos:column="53">10<pos:position pos:line="215" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="57"/></expr_stmt>
                <if pos:line="216" pos:column="17">if <condition pos:line="216" pos:column="20">(<expr><name pos:line="216" pos:column="21">rv<pos:position pos:line="216" pos:column="23"/></name> <operator pos:line="216" pos:column="24">==<pos:position pos:line="216" pos:column="26"/></operator> <name pos:line="216" pos:column="27">APR_SUCCESS<pos:position pos:line="216" pos:column="38"/></name></expr>)<pos:position pos:line="216" pos:column="39"/></condition><then pos:line="216" pos:column="39"> <block pos:line="216" pos:column="40">{
                    <if pos:line="217" pos:column="21">if <condition pos:line="217" pos:column="24">(<expr><operator pos:line="217" pos:column="25">*<pos:position pos:line="217" pos:column="26"/></operator><name pos:line="217" pos:column="26">end<pos:position pos:line="217" pos:column="29"/></name></expr>)<pos:position pos:line="217" pos:column="30"/></condition><then pos:line="217" pos:column="30"> <block pos:line="217" pos:column="31">{
                        <expr_stmt><expr><call><name pos:line="218" pos:column="25">usage<pos:position pos:line="218" pos:column="30"/></name><argument_list pos:line="218" pos:column="30">(<argument><expr><macro><name pos:line="218" pos:column="31">apr_psprintf<pos:position pos:line="218" pos:column="43"/></name><argument_list pos:line="218" pos:column="43">(<argument pos:line="218" pos:column="44">pool<pos:position pos:line="218" pos:column="48"/></argument>, <argument><literal type="string" pos:line="218" pos:column="50">"Invalid round value: %s"<pos:position pos:line="218" pos:column="75"/></literal>
                                                 APR_EOL_STR APR_EOL_STR<pos:position pos:line="219" pos:column="73"/></argument>, <argument pos:line="219" pos:column="75">arg<pos:position pos:line="219" pos:column="78"/></argument>)<pos:position pos:line="219" pos:column="79"/></argument_list></macro></expr></argument>)<pos:position pos:line="219" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="81"/></expr_stmt>
                    }<pos:position pos:line="220" pos:column="22"/></block></then>
                    <elseif pos:line="221" pos:column="21">else <if pos:line="221" pos:column="26">if <condition pos:line="221" pos:column="29">(<expr><name pos:line="221" pos:column="30">round<pos:position pos:line="221" pos:column="35"/></name> <operator pos:line="221" pos:column="36">&lt;<pos:position pos:line="221" pos:column="40"/></operator> <literal type="number" pos:line="221" pos:column="38">0<pos:position pos:line="221" pos:column="39"/></literal></expr>)<pos:position pos:line="221" pos:column="40"/></condition><then pos:line="221" pos:column="40"> <block pos:line="221" pos:column="41">{
                        <expr_stmt><expr><call><name pos:line="222" pos:column="25">usage<pos:position pos:line="222" pos:column="30"/></name><argument_list pos:line="222" pos:column="30">(<argument><expr><macro><name pos:line="222" pos:column="31">apr_psprintf<pos:position pos:line="222" pos:column="43"/></name><argument_list pos:line="222" pos:column="43">(<argument pos:line="222" pos:column="44">pool<pos:position pos:line="222" pos:column="48"/></argument>, <argument><literal type="string" pos:line="222" pos:column="50">"Round value must be positive: %s"<pos:position pos:line="222" pos:column="84"/></literal>
                                                 APR_EOL_STR APR_EOL_STR<pos:position pos:line="223" pos:column="73"/></argument>, <argument pos:line="223" pos:column="75">arg<pos:position pos:line="223" pos:column="78"/></argument>)<pos:position pos:line="223" pos:column="79"/></argument_list></macro></expr></argument>)<pos:position pos:line="223" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="81"/></expr_stmt>
                    }<pos:position pos:line="224" pos:column="22"/></block></then></if></elseif></if>
                }<pos:position pos:line="225" pos:column="18"/></block></then></if>
                <if pos:line="226" pos:column="17">if <condition pos:line="226" pos:column="20">(<expr><name pos:line="226" pos:column="21">rv<pos:position pos:line="226" pos:column="23"/></name> <operator pos:line="226" pos:column="24">!=<pos:position pos:line="226" pos:column="26"/></operator> <name pos:line="226" pos:column="27">APR_SUCCESS<pos:position pos:line="226" pos:column="38"/></name></expr>)<pos:position pos:line="226" pos:column="39"/></condition><then pos:line="226" pos:column="39"> <block pos:line="226" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="227" pos:column="21">usage<pos:position pos:line="227" pos:column="26"/></name><argument_list pos:line="227" pos:column="26">(<argument><expr><macro><name pos:line="227" pos:column="27">apr_psprintf<pos:position pos:line="227" pos:column="39"/></name><argument_list pos:line="227" pos:column="39">(<argument pos:line="227" pos:column="40">pool<pos:position pos:line="227" pos:column="44"/></argument>, <argument><literal type="string" pos:line="227" pos:column="46">"Invalid round value: %s"<pos:position pos:line="227" pos:column="71"/></literal>
                                             APR_EOL_STR APR_EOL_STR<pos:position pos:line="228" pos:column="69"/></argument>, <argument pos:line="228" pos:column="71">arg<pos:position pos:line="228" pos:column="74"/></argument>)<pos:position pos:line="228" pos:column="75"/></argument_list></macro></expr></argument>)<pos:position pos:line="228" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="77"/></expr_stmt>
                }<pos:position pos:line="229" pos:column="18"/></block></then></if>
                <break pos:line="230" pos:column="17">break;<pos:position pos:line="230" pos:column="23"/></break>

            }<pos:position pos:line="232" pos:column="14"/></block></switch> <comment type="block" pos:line="232" pos:column="15">/* switch */</comment>
        }<pos:position pos:line="233" pos:column="10"/></block></else></if> <comment type="block" pos:line="233" pos:column="11">/* else */</comment>
    }<pos:position pos:line="234" pos:column="6"/></block></while> <comment type="block" pos:line="234" pos:column="7">/* while */</comment>

    <if pos:line="236" pos:column="5">if <condition pos:line="236" pos:column="8">(<expr><name pos:line="236" pos:column="9">argc<pos:position pos:line="236" pos:column="13"/></name> <operator pos:line="236" pos:column="14">&lt;=<pos:position pos:line="236" pos:column="19"/></operator> <literal type="number" pos:line="236" pos:column="17">1<pos:position pos:line="236" pos:column="18"/></literal></expr>)<pos:position pos:line="236" pos:column="19"/></condition><then pos:line="236" pos:column="19"> <block pos:line="236" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="237" pos:column="9">usage<pos:position pos:line="237" pos:column="14"/></name><argument_list pos:line="237" pos:column="14">(<argument><expr><name pos:line="237" pos:column="15">NULL<pos:position pos:line="237" pos:column="19"/></name></expr></argument>)<pos:position pos:line="237" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="238" pos:column="6"/></block></then></if>

    <if pos:line="240" pos:column="5">if <condition pos:line="240" pos:column="8">(<expr><operator pos:line="240" pos:column="9">!<pos:position pos:line="240" pos:column="10"/></operator><name pos:line="240" pos:column="10">proxypath<pos:position pos:line="240" pos:column="19"/></name></expr>)<pos:position pos:line="240" pos:column="20"/></condition><then pos:line="240" pos:column="20"> <block pos:line="240" pos:column="21">{
         <expr_stmt><expr><call><name pos:line="241" pos:column="10">usage<pos:position pos:line="241" pos:column="15"/></name><argument_list pos:line="241" pos:column="15">(<argument><expr><literal type="string" pos:line="241" pos:column="16">"Option -p must be specified"<pos:position pos:line="241" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="241" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="242" pos:column="6"/></block></then></if>

    <if pos:line="244" pos:column="5">if <condition pos:line="244" pos:column="8">(<expr><name><name pos:line="244" pos:column="9">o<pos:position pos:line="244" pos:column="10"/></name><operator pos:line="244" pos:column="10">-&gt;<pos:position pos:line="244" pos:column="15"/></operator><name pos:line="244" pos:column="12">ind<pos:position pos:line="244" pos:column="15"/></name></name> <operator pos:line="244" pos:column="16">&lt;<pos:position pos:line="244" pos:column="20"/></operator> <name pos:line="244" pos:column="18">argc<pos:position pos:line="244" pos:column="22"/></name></expr>)<pos:position pos:line="244" pos:column="23"/></condition><then pos:line="244" pos:column="23"> <block pos:line="244" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="245" pos:column="9">int<pos:position pos:line="245" pos:column="12"/></name></type> <name pos:line="245" pos:column="13">deleted<pos:position pos:line="245" pos:column="20"/></name> <init pos:line="245" pos:column="21">= <expr><literal type="number" pos:line="245" pos:column="23">0<pos:position pos:line="245" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="245" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="246" pos:column="9">int<pos:position pos:line="246" pos:column="12"/></name></type> <name pos:line="246" pos:column="13">error<pos:position pos:line="246" pos:column="18"/></name> <init pos:line="246" pos:column="19">= <expr><literal type="number" pos:line="246" pos:column="21">0<pos:position pos:line="246" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="246" pos:column="23"/></decl_stmt>
        <if pos:line="247" pos:column="9">if <condition pos:line="247" pos:column="12">(<expr><name pos:line="247" pos:column="13">isdaemon<pos:position pos:line="247" pos:column="21"/></name></expr>)<pos:position pos:line="247" pos:column="22"/></condition><then pos:line="247" pos:column="22"> <block pos:line="247" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="248" pos:column="13">usage<pos:position pos:line="248" pos:column="18"/></name><argument_list pos:line="248" pos:column="18">(<argument><expr><literal type="string" pos:line="248" pos:column="19">"Option -d cannot be used with URL arguments, aborting"<pos:position pos:line="248" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="248" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="249" pos:column="10"/></block></then></if>
        <if pos:line="250" pos:column="9">if <condition pos:line="250" pos:column="12">(<expr><name pos:line="250" pos:column="13">intelligent<pos:position pos:line="250" pos:column="24"/></name></expr>)<pos:position pos:line="250" pos:column="25"/></condition><then pos:line="250" pos:column="25"> <block pos:line="250" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="251" pos:column="13">usage<pos:position pos:line="251" pos:column="18"/></name><argument_list pos:line="251" pos:column="18">(<argument><expr><literal type="string" pos:line="251" pos:column="19">"Option -i cannot be used with URL arguments, aborting"<pos:position pos:line="251" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="251" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="252" pos:column="10"/></block></then></if>
        <if pos:line="253" pos:column="9">if <condition pos:line="253" pos:column="12">(<expr><name pos:line="253" pos:column="13">limit_found<pos:position pos:line="253" pos:column="24"/></name></expr>)<pos:position pos:line="253" pos:column="25"/></condition><then pos:line="253" pos:column="25"> <block pos:line="253" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="254" pos:column="13">usage<pos:position pos:line="254" pos:column="18"/></name><argument_list pos:line="254" pos:column="18">(<argument><expr><literal type="string" pos:line="254" pos:column="19">"Option -l cannot be used with URL arguments, aborting"<pos:position pos:line="254" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="254" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="255" pos:column="10"/></block></then></if>
        <while pos:line="256" pos:column="9">while <condition pos:line="256" pos:column="15">(<expr><name><name pos:line="256" pos:column="16">o<pos:position pos:line="256" pos:column="17"/></name><operator pos:line="256" pos:column="17">-&gt;<pos:position pos:line="256" pos:column="22"/></operator><name pos:line="256" pos:column="19">ind<pos:position pos:line="256" pos:column="22"/></name></name> <operator pos:line="256" pos:column="23">&lt;<pos:position pos:line="256" pos:column="27"/></operator> <name pos:line="256" pos:column="25">argc<pos:position pos:line="256" pos:column="29"/></name></expr>)<pos:position pos:line="256" pos:column="30"/></condition> <block pos:line="256" pos:column="31">{
            <expr_stmt><expr><name pos:line="257" pos:column="13">status<pos:position pos:line="257" pos:column="19"/></name> <operator pos:line="257" pos:column="20">=<pos:position pos:line="257" pos:column="21"/></operator> <call><name pos:line="257" pos:column="22">delete_url<pos:position pos:line="257" pos:column="32"/></name><argument_list pos:line="257" pos:column="32">(<argument><expr><name pos:line="257" pos:column="33">pool<pos:position pos:line="257" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="39">proxypath<pos:position pos:line="257" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="257" pos:column="50">argv<pos:position pos:line="257" pos:column="54"/></name><index pos:line="257" pos:column="54">[<expr><name><name pos:line="257" pos:column="55">o<pos:position pos:line="257" pos:column="56"/></name><operator pos:line="257" pos:column="56">-&gt;<pos:position pos:line="257" pos:column="61"/></operator><name pos:line="257" pos:column="58">ind<pos:position pos:line="257" pos:column="61"/></name></name></expr>]<pos:position pos:line="257" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="257" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="64"/></expr_stmt>
            <if pos:line="258" pos:column="13">if <condition pos:line="258" pos:column="16">(<expr><name pos:line="258" pos:column="17">APR_SUCCESS<pos:position pos:line="258" pos:column="28"/></name> <operator pos:line="258" pos:column="29">==<pos:position pos:line="258" pos:column="31"/></operator> <name pos:line="258" pos:column="32">status<pos:position pos:line="258" pos:column="38"/></name></expr>)<pos:position pos:line="258" pos:column="39"/></condition><then pos:line="258" pos:column="39"> <block pos:line="258" pos:column="40">{
                <if pos:line="259" pos:column="17">if <condition pos:line="259" pos:column="20">(<expr><name pos:line="259" pos:column="21">verbose<pos:position pos:line="259" pos:column="28"/></name></expr>)<pos:position pos:line="259" pos:column="29"/></condition><then pos:line="259" pos:column="29"> <block pos:line="259" pos:column="30">{
                    <expr_stmt><expr><call><name pos:line="260" pos:column="21">apr_file_printf<pos:position pos:line="260" pos:column="36"/></name><argument_list pos:line="260" pos:column="36">(<argument><expr><name pos:line="260" pos:column="37">errfile<pos:position pos:line="260" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="260" pos:column="46">"Removed: %s"<pos:position pos:line="260" pos:column="59"/></literal> <name pos:line="260" pos:column="60">APR_EOL_STR<pos:position pos:line="260" pos:column="71"/></name></expr></argument>,
                            <argument><expr><name><name pos:line="261" pos:column="29">argv<pos:position pos:line="261" pos:column="33"/></name><index pos:line="261" pos:column="33">[<expr><name><name pos:line="261" pos:column="34">o<pos:position pos:line="261" pos:column="35"/></name><operator pos:line="261" pos:column="35">-&gt;<pos:position pos:line="261" pos:column="40"/></operator><name pos:line="261" pos:column="37">ind<pos:position pos:line="261" pos:column="40"/></name></name></expr>]<pos:position pos:line="261" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="261" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="43"/></expr_stmt>
                }<pos:position pos:line="262" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="263" pos:column="17">deleted<pos:position pos:line="263" pos:column="24"/></name> <operator pos:line="263" pos:column="25">=<pos:position pos:line="263" pos:column="26"/></operator> <literal type="number" pos:line="263" pos:column="27">1<pos:position pos:line="263" pos:column="28"/></literal></expr>;<pos:position pos:line="263" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="264" pos:column="14"/></block></then>
            <elseif pos:line="265" pos:column="13">else <if pos:line="265" pos:column="18">if <condition pos:line="265" pos:column="21">(<expr><name pos:line="265" pos:column="22">APR_ENOENT<pos:position pos:line="265" pos:column="32"/></name> <operator pos:line="265" pos:column="33">==<pos:position pos:line="265" pos:column="35"/></operator> <name pos:line="265" pos:column="36">status<pos:position pos:line="265" pos:column="42"/></name></expr>)<pos:position pos:line="265" pos:column="43"/></condition><then pos:line="265" pos:column="43"> <block pos:line="265" pos:column="44">{
                <if pos:line="266" pos:column="17">if <condition pos:line="266" pos:column="20">(<expr><name pos:line="266" pos:column="21">verbose<pos:position pos:line="266" pos:column="28"/></name></expr>)<pos:position pos:line="266" pos:column="29"/></condition><then pos:line="266" pos:column="29"> <block pos:line="266" pos:column="30">{
                    <expr_stmt><expr><call><name pos:line="267" pos:column="21">apr_file_printf<pos:position pos:line="267" pos:column="36"/></name><argument_list pos:line="267" pos:column="36">(<argument><expr><name pos:line="267" pos:column="37">errfile<pos:position pos:line="267" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="267" pos:column="46">"Not cached: %s"<pos:position pos:line="267" pos:column="62"/></literal> <name pos:line="267" pos:column="63">APR_EOL_STR<pos:position pos:line="267" pos:column="74"/></name></expr></argument>,
                            <argument><expr><name><name pos:line="268" pos:column="29">argv<pos:position pos:line="268" pos:column="33"/></name><index pos:line="268" pos:column="33">[<expr><name><name pos:line="268" pos:column="34">o<pos:position pos:line="268" pos:column="35"/></name><operator pos:line="268" pos:column="35">-&gt;<pos:position pos:line="268" pos:column="40"/></operator><name pos:line="268" pos:column="37">ind<pos:position pos:line="268" pos:column="40"/></name></name></expr>]<pos:position pos:line="268" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="268" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="43"/></expr_stmt>
                }<pos:position pos:line="269" pos:column="18"/></block></then></if>
            }<pos:position pos:line="270" pos:column="14"/></block></then></if></elseif>
            <else pos:line="271" pos:column="13">else <block pos:line="271" pos:column="18">{
                <if pos:line="272" pos:column="17">if <condition pos:line="272" pos:column="20">(<expr><name pos:line="272" pos:column="21">verbose<pos:position pos:line="272" pos:column="28"/></name></expr>)<pos:position pos:line="272" pos:column="29"/></condition><then pos:line="272" pos:column="29"> <block pos:line="272" pos:column="30">{
                    <expr_stmt><expr><call><name pos:line="273" pos:column="21">apr_file_printf<pos:position pos:line="273" pos:column="36"/></name><argument_list pos:line="273" pos:column="36">(<argument><expr><name pos:line="273" pos:column="37">errfile<pos:position pos:line="273" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="273" pos:column="46">"Error while removed: %s"<pos:position pos:line="273" pos:column="71"/></literal> <name pos:line="273" pos:column="72">APR_EOL_STR<pos:position pos:line="273" pos:column="83"/></name></expr></argument>,
                            <argument><expr><name><name pos:line="274" pos:column="29">argv<pos:position pos:line="274" pos:column="33"/></name><index pos:line="274" pos:column="33">[<expr><name><name pos:line="274" pos:column="34">o<pos:position pos:line="274" pos:column="35"/></name><operator pos:line="274" pos:column="35">-&gt;<pos:position pos:line="274" pos:column="40"/></operator><name pos:line="274" pos:column="37">ind<pos:position pos:line="274" pos:column="40"/></name></name></expr>]<pos:position pos:line="274" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="274" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="43"/></expr_stmt>
                }<pos:position pos:line="275" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="276" pos:column="17">error<pos:position pos:line="276" pos:column="22"/></name> <operator pos:line="276" pos:column="23">=<pos:position pos:line="276" pos:column="24"/></operator> <literal type="number" pos:line="276" pos:column="25">1<pos:position pos:line="276" pos:column="26"/></literal></expr>;<pos:position pos:line="276" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="277" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name><name pos:line="278" pos:column="13">o<pos:position pos:line="278" pos:column="14"/></name><operator pos:line="278" pos:column="14">-&gt;<pos:position pos:line="278" pos:column="19"/></operator><name pos:line="278" pos:column="16">ind<pos:position pos:line="278" pos:column="19"/></name></name><operator pos:line="278" pos:column="19">++<pos:position pos:line="278" pos:column="21"/></operator></expr>;<pos:position pos:line="278" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="279" pos:column="10"/></block></while>
        <return pos:line="280" pos:column="9">return <expr><ternary><condition><expr><name pos:line="280" pos:column="16">error<pos:position pos:line="280" pos:column="21"/></name></expr> ?<pos:position pos:line="280" pos:column="23"/></condition><then pos:line="280" pos:column="23"> <expr><literal type="number" pos:line="280" pos:column="24">1<pos:position pos:line="280" pos:column="25"/></literal></expr> <pos:position pos:line="280" pos:column="26"/></then><else pos:line="280" pos:column="26">: <expr><ternary><condition><expr><name pos:line="280" pos:column="28">deleted<pos:position pos:line="280" pos:column="35"/></name></expr> ?<pos:position pos:line="280" pos:column="37"/></condition><then pos:line="280" pos:column="37"> <expr><literal type="number" pos:line="280" pos:column="38">0<pos:position pos:line="280" pos:column="39"/></literal></expr> <pos:position pos:line="280" pos:column="40"/></then><else pos:line="280" pos:column="40">: <expr><literal type="number" pos:line="280" pos:column="42">2<pos:position pos:line="280" pos:column="43"/></literal></expr></else></ternary></expr></else></ternary></expr>;<pos:position pos:line="280" pos:column="44"/></return>
    }<pos:position pos:line="281" pos:column="6"/></block></then></if>

    <if pos:line="283" pos:column="5">if <condition pos:line="283" pos:column="8">(<expr><name pos:line="283" pos:column="9">isdaemon<pos:position pos:line="283" pos:column="17"/></name> <operator pos:line="283" pos:column="18">&amp;&amp;<pos:position pos:line="283" pos:column="28"/></operator> <name pos:line="283" pos:column="21">repeat<pos:position pos:line="283" pos:column="27"/></name> <operator pos:line="283" pos:column="28">&lt;=<pos:position pos:line="283" pos:column="33"/></operator> <literal type="number" pos:line="283" pos:column="31">0<pos:position pos:line="283" pos:column="32"/></literal></expr>)<pos:position pos:line="283" pos:column="33"/></condition><then pos:line="283" pos:column="33"> <block pos:line="283" pos:column="34">{
         <expr_stmt><expr><call><name pos:line="284" pos:column="10">usage<pos:position pos:line="284" pos:column="15"/></name><argument_list pos:line="284" pos:column="15">(<argument><expr><literal type="string" pos:line="284" pos:column="16">"Option -d must be greater than zero"<pos:position pos:line="284" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="284" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="285" pos:column="6"/></block></then></if>

    <if pos:line="287" pos:column="5">if <condition pos:line="287" pos:column="8">(<expr><name pos:line="287" pos:column="9">isdaemon<pos:position pos:line="287" pos:column="17"/></name> <operator pos:line="287" pos:column="18">&amp;&amp;<pos:position pos:line="287" pos:column="28"/></operator> <operator pos:line="287" pos:column="21">(<pos:position pos:line="287" pos:column="22"/></operator><name pos:line="287" pos:column="22">verbose<pos:position pos:line="287" pos:column="29"/></name> <operator pos:line="287" pos:column="30">||<pos:position pos:line="287" pos:column="32"/></operator> <name pos:line="287" pos:column="33">realclean<pos:position pos:line="287" pos:column="42"/></name> <operator pos:line="287" pos:column="43">||<pos:position pos:line="287" pos:column="45"/></operator> <name pos:line="287" pos:column="46">dryrun<pos:position pos:line="287" pos:column="52"/></name> <operator pos:line="287" pos:column="53">||<pos:position pos:line="287" pos:column="55"/></operator> <name pos:line="287" pos:column="56">listurls<pos:position pos:line="287" pos:column="64"/></name><operator pos:line="287" pos:column="64">)<pos:position pos:line="287" pos:column="65"/></operator></expr>)<pos:position pos:line="287" pos:column="66"/></condition><then pos:line="287" pos:column="66"> <block pos:line="287" pos:column="67">{
         <expr_stmt><expr><call><name pos:line="288" pos:column="10">usage<pos:position pos:line="288" pos:column="15"/></name><argument_list pos:line="288" pos:column="15">(<argument><expr><literal type="string" pos:line="288" pos:column="16">"Option -d cannot be used with -v, -r, -L or -D"<pos:position pos:line="288" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="288" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="289" pos:column="6"/></block></then></if>

    <if pos:line="291" pos:column="5">if <condition pos:line="291" pos:column="8">(<expr><operator pos:line="291" pos:column="9">!<pos:position pos:line="291" pos:column="10"/></operator><name pos:line="291" pos:column="10">isdaemon<pos:position pos:line="291" pos:column="18"/></name> <operator pos:line="291" pos:column="19">&amp;&amp;<pos:position pos:line="291" pos:column="29"/></operator> <name pos:line="291" pos:column="22">intelligent<pos:position pos:line="291" pos:column="33"/></name></expr>)<pos:position pos:line="291" pos:column="34"/></condition><then pos:line="291" pos:column="34"> <block pos:line="291" pos:column="35">{
         <expr_stmt><expr><call><name pos:line="292" pos:column="10">usage<pos:position pos:line="292" pos:column="15"/></name><argument_list pos:line="292" pos:column="15">(<argument><expr><literal type="string" pos:line="292" pos:column="16">"Option -i cannot be used without -d"<pos:position pos:line="292" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="292" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="293" pos:column="6"/></block></then></if>

    <if pos:line="295" pos:column="5">if <condition pos:line="295" pos:column="8">(<expr><operator pos:line="295" pos:column="9">!<pos:position pos:line="295" pos:column="10"/></operator><name pos:line="295" pos:column="10">listurls<pos:position pos:line="295" pos:column="18"/></name> <operator pos:line="295" pos:column="19">&amp;&amp;<pos:position pos:line="295" pos:column="29"/></operator> <name pos:line="295" pos:column="22">max<pos:position pos:line="295" pos:column="25"/></name> <operator pos:line="295" pos:column="26">&lt;=<pos:position pos:line="295" pos:column="31"/></operator> <literal type="number" pos:line="295" pos:column="29">0<pos:position pos:line="295" pos:column="30"/></literal> <operator pos:line="295" pos:column="31">&amp;&amp;<pos:position pos:line="295" pos:column="41"/></operator> <name pos:line="295" pos:column="34">inodes<pos:position pos:line="295" pos:column="40"/></name> <operator pos:line="295" pos:column="41">&lt;=<pos:position pos:line="295" pos:column="46"/></operator> <literal type="number" pos:line="295" pos:column="44">0<pos:position pos:line="295" pos:column="45"/></literal></expr>)<pos:position pos:line="295" pos:column="46"/></condition><then pos:line="295" pos:column="46"> <block pos:line="295" pos:column="47">{
         <expr_stmt><expr><call><name pos:line="296" pos:column="10">usage<pos:position pos:line="296" pos:column="15"/></name><argument_list pos:line="296" pos:column="15">(<argument><expr><literal type="string" pos:line="296" pos:column="16">"At least one of option -l or -L must be greater than zero"<pos:position pos:line="296" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="296" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="296" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="297" pos:column="6"/></block></then></if>

    <if pos:line="299" pos:column="5">if <condition pos:line="299" pos:column="8">(<expr><call><name pos:line="299" pos:column="9">apr_filepath_get<pos:position pos:line="299" pos:column="25"/></name><argument_list pos:line="299" pos:column="25">(<argument><expr><operator pos:line="299" pos:column="26">&amp;<pos:position pos:line="299" pos:column="31"/></operator><name pos:line="299" pos:column="27">path<pos:position pos:line="299" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="299" pos:column="33">0<pos:position pos:line="299" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="299" pos:column="36">pool<pos:position pos:line="299" pos:column="40"/></name></expr></argument>)<pos:position pos:line="299" pos:column="41"/></argument_list></call> <operator pos:line="299" pos:column="42">!=<pos:position pos:line="299" pos:column="44"/></operator> <name pos:line="299" pos:column="45">APR_SUCCESS<pos:position pos:line="299" pos:column="56"/></name></expr>)<pos:position pos:line="299" pos:column="57"/></condition><then pos:line="299" pos:column="57"> <block pos:line="299" pos:column="58">{
        <expr_stmt><expr><call><name pos:line="300" pos:column="9">usage<pos:position pos:line="300" pos:column="14"/></name><argument_list pos:line="300" pos:column="14">(<argument><expr><call><name pos:line="300" pos:column="15">apr_psprintf<pos:position pos:line="300" pos:column="27"/></name><argument_list pos:line="300" pos:column="27">(<argument><expr><name pos:line="300" pos:column="28">pool<pos:position pos:line="300" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="300" pos:column="34">"Could not get the filepath: %pm"<pos:position pos:line="300" pos:column="67"/></literal></expr></argument>, <argument><expr><operator pos:line="300" pos:column="69">&amp;<pos:position pos:line="300" pos:column="74"/></operator><name pos:line="300" pos:column="70">status<pos:position pos:line="300" pos:column="76"/></name></expr></argument>)<pos:position pos:line="300" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="300" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="301" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="302" pos:column="5">baselen<pos:position pos:line="302" pos:column="12"/></name> <operator pos:line="302" pos:column="13">=<pos:position pos:line="302" pos:column="14"/></operator> <call><name pos:line="302" pos:column="15">strlen<pos:position pos:line="302" pos:column="21"/></name><argument_list pos:line="302" pos:column="21">(<argument><expr><name pos:line="302" pos:column="22">path<pos:position pos:line="302" pos:column="26"/></name></expr></argument>)<pos:position pos:line="302" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="28"/></expr_stmt>

    <if pos:line="304" pos:column="5">if <condition pos:line="304" pos:column="8">(<expr><name pos:line="304" pos:column="9">pidfilename<pos:position pos:line="304" pos:column="20"/></name></expr>)<pos:position pos:line="304" pos:column="21"/></condition><then pos:line="304" pos:column="21"> <block pos:line="304" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="305" pos:column="9">log_pid<pos:position pos:line="305" pos:column="16"/></name><argument_list pos:line="305" pos:column="16">(<argument><expr><name pos:line="305" pos:column="17">pool<pos:position pos:line="305" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="305" pos:column="23">pidfilename<pos:position pos:line="305" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="305" pos:column="36">&amp;<pos:position pos:line="305" pos:column="41"/></operator><name pos:line="305" pos:column="37">pidfile<pos:position pos:line="305" pos:column="44"/></name></expr></argument>)<pos:position pos:line="305" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="46"/></expr_stmt> <comment type="block" pos:line="305" pos:column="47">/* before daemonizing, so we
                                               * can report errors
                                               */</comment>
    }<pos:position pos:line="308" pos:column="6"/></block></then></if>

    <if pos:line="310" pos:column="5">if <condition pos:line="310" pos:column="8">(<expr><name pos:line="310" pos:column="9">listurls<pos:position pos:line="310" pos:column="17"/></name></expr>)<pos:position pos:line="310" pos:column="18"/></condition><then pos:line="310" pos:column="18"> <block pos:line="310" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="311" pos:column="9">list_urls<pos:position pos:line="311" pos:column="18"/></name><argument_list pos:line="311" pos:column="18">(<argument><expr><name pos:line="311" pos:column="19">path<pos:position pos:line="311" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="311" pos:column="25">pool<pos:position pos:line="311" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="311" pos:column="31">round<pos:position pos:line="311" pos:column="36"/></name></expr></argument>)<pos:position pos:line="311" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="311" pos:column="38"/></expr_stmt>
        <return pos:line="312" pos:column="9">return <expr><operator pos:line="312" pos:column="16">(<pos:position pos:line="312" pos:column="17"/></operator><name pos:line="312" pos:column="17">interrupted<pos:position pos:line="312" pos:column="28"/></name> <operator pos:line="312" pos:column="29">!=<pos:position pos:line="312" pos:column="31"/></operator> <literal type="number" pos:line="312" pos:column="32">0<pos:position pos:line="312" pos:column="33"/></literal><operator pos:line="312" pos:column="33">)<pos:position pos:line="312" pos:column="34"/></operator></expr>;<pos:position pos:line="312" pos:column="35"/></return>
    }<pos:position pos:line="313" pos:column="6"/></block></then></if>

<cpp:ifndef pos:line="315" pos:column="1">#<cpp:directive pos:line="315" pos:column="2">ifndef<pos:position pos:line="315" pos:column="8"/></cpp:directive> <name pos:line="315" pos:column="9">DEBUG<pos:position pos:line="315" pos:column="14"/></name></cpp:ifndef>
    <if pos:line="316" pos:column="5">if <condition pos:line="316" pos:column="8">(<expr><name pos:line="316" pos:column="9">isdaemon<pos:position pos:line="316" pos:column="17"/></name></expr>)<pos:position pos:line="316" pos:column="18"/></condition><then pos:line="316" pos:column="18"> <block pos:line="316" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="317" pos:column="9">apr_file_close<pos:position pos:line="317" pos:column="23"/></name><argument_list pos:line="317" pos:column="23">(<argument><expr><name pos:line="317" pos:column="24">errfile<pos:position pos:line="317" pos:column="31"/></name></expr></argument>)<pos:position pos:line="317" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="317" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="318" pos:column="9">errfile<pos:position pos:line="318" pos:column="16"/></name> <operator pos:line="318" pos:column="17">=<pos:position pos:line="318" pos:column="18"/></operator> <name pos:line="318" pos:column="19">NULL<pos:position pos:line="318" pos:column="23"/></name></expr>;<pos:position pos:line="318" pos:column="24"/></expr_stmt>
        <if pos:line="319" pos:column="9">if <condition pos:line="319" pos:column="12">(<expr><name pos:line="319" pos:column="13">pidfilename<pos:position pos:line="319" pos:column="24"/></name></expr>)<pos:position pos:line="319" pos:column="25"/></condition><then pos:line="319" pos:column="25"> <block pos:line="319" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="320" pos:column="13">apr_file_close<pos:position pos:line="320" pos:column="27"/></name><argument_list pos:line="320" pos:column="27">(<argument><expr><name pos:line="320" pos:column="28">pidfile<pos:position pos:line="320" pos:column="35"/></name></expr></argument>)<pos:position pos:line="320" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="37"/></expr_stmt> <comment type="block" pos:line="320" pos:column="38">/* delete original pidfile only in parent */</comment>
        }<pos:position pos:line="321" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="322" pos:column="9">apr_proc_detach<pos:position pos:line="322" pos:column="24"/></name><argument_list pos:line="322" pos:column="24">(<argument><expr><name pos:line="322" pos:column="25">APR_PROC_DETACH_DAEMONIZE<pos:position pos:line="322" pos:column="50"/></name></expr></argument>)<pos:position pos:line="322" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="52"/></expr_stmt>
        <if pos:line="323" pos:column="9">if <condition pos:line="323" pos:column="12">(<expr><name pos:line="323" pos:column="13">pidfilename<pos:position pos:line="323" pos:column="24"/></name></expr>)<pos:position pos:line="323" pos:column="25"/></condition><then pos:line="323" pos:column="25"> <block pos:line="323" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="324" pos:column="13">log_pid<pos:position pos:line="324" pos:column="20"/></name><argument_list pos:line="324" pos:column="20">(<argument><expr><name pos:line="324" pos:column="21">pool<pos:position pos:line="324" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="324" pos:column="27">pidfilename<pos:position pos:line="324" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="324" pos:column="40">&amp;<pos:position pos:line="324" pos:column="45"/></operator><name pos:line="324" pos:column="41">pidfile<pos:position pos:line="324" pos:column="48"/></name></expr></argument>)<pos:position pos:line="324" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="324" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="325" pos:column="10"/></block></then></if>
    }<pos:position pos:line="326" pos:column="6"/></block></then></if>
<cpp:endif pos:line="327" pos:column="1">#<cpp:directive pos:line="327" pos:column="2">endif<pos:position pos:line="327" pos:column="7"/></cpp:directive></cpp:endif>

    <do pos:line="329" pos:column="5">do <block pos:line="329" pos:column="8">{
        <expr_stmt><expr><call><name pos:line="330" pos:column="9">apr_pool_create<pos:position pos:line="330" pos:column="24"/></name><argument_list pos:line="330" pos:column="24">(<argument><expr><operator pos:line="330" pos:column="25">&amp;<pos:position pos:line="330" pos:column="30"/></operator><name pos:line="330" pos:column="26">instance<pos:position pos:line="330" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="330" pos:column="36">pool<pos:position pos:line="330" pos:column="40"/></name></expr></argument>)<pos:position pos:line="330" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="42"/></expr_stmt>

        <expr_stmt><expr><name pos:line="332" pos:column="9">now<pos:position pos:line="332" pos:column="12"/></name> <operator pos:line="332" pos:column="13">=<pos:position pos:line="332" pos:column="14"/></operator> <call><name pos:line="332" pos:column="15">apr_time_now<pos:position pos:line="332" pos:column="27"/></name><argument_list pos:line="332" pos:column="27">()<pos:position pos:line="332" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="333" pos:column="9">APR_RING_INIT<pos:position pos:line="333" pos:column="22"/></name><argument_list pos:line="333" pos:column="22">(<argument><expr><operator pos:line="333" pos:column="23">&amp;<pos:position pos:line="333" pos:column="28"/></operator><name pos:line="333" pos:column="24">root<pos:position pos:line="333" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="333" pos:column="30">_entry<pos:position pos:line="333" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="333" pos:column="38">link<pos:position pos:line="333" pos:column="42"/></name></expr></argument>)<pos:position pos:line="333" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name pos:line="334" pos:column="9">delcount<pos:position pos:line="334" pos:column="17"/></name> <operator pos:line="334" pos:column="18">=<pos:position pos:line="334" pos:column="19"/></operator> <literal type="number" pos:line="334" pos:column="20">0<pos:position pos:line="334" pos:column="21"/></literal></expr>;<pos:position pos:line="334" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="335" pos:column="9">unsolicited<pos:position pos:line="335" pos:column="20"/></name> <operator pos:line="335" pos:column="21">=<pos:position pos:line="335" pos:column="22"/></operator> <literal type="number" pos:line="335" pos:column="23">0<pos:position pos:line="335" pos:column="24"/></literal></expr>;<pos:position pos:line="335" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="336" pos:column="9">dowork<pos:position pos:line="336" pos:column="15"/></name> <operator pos:line="336" pos:column="16">=<pos:position pos:line="336" pos:column="17"/></operator> <literal type="number" pos:line="336" pos:column="18">0<pos:position pos:line="336" pos:column="19"/></literal></expr>;<pos:position pos:line="336" pos:column="20"/></expr_stmt>

        <switch pos:line="338" pos:column="9">switch <condition pos:line="338" pos:column="16">(<expr><name pos:line="338" pos:column="17">intelligent<pos:position pos:line="338" pos:column="28"/></name></expr>)<pos:position pos:line="338" pos:column="29"/></condition> <block pos:line="338" pos:column="30">{
        <case pos:line="339" pos:column="9">case <expr><literal type="number" pos:line="339" pos:column="14">0<pos:position pos:line="339" pos:column="15"/></literal></expr>:<pos:position pos:line="339" pos:column="16"/></case>
            <expr_stmt><expr><name pos:line="340" pos:column="13">dowork<pos:position pos:line="340" pos:column="19"/></name> <operator pos:line="340" pos:column="20">=<pos:position pos:line="340" pos:column="21"/></operator> <literal type="number" pos:line="340" pos:column="22">1<pos:position pos:line="340" pos:column="23"/></literal></expr>;<pos:position pos:line="340" pos:column="24"/></expr_stmt>
            <break pos:line="341" pos:column="13">break;<pos:position pos:line="341" pos:column="19"/></break>

        <case pos:line="343" pos:column="9">case <expr><literal type="number" pos:line="343" pos:column="14">1<pos:position pos:line="343" pos:column="15"/></literal></expr>:<pos:position pos:line="343" pos:column="16"/></case>
            <expr_stmt><expr><name pos:line="344" pos:column="13">retries<pos:position pos:line="344" pos:column="20"/></name> <operator pos:line="344" pos:column="21">=<pos:position pos:line="344" pos:column="22"/></operator> <name pos:line="344" pos:column="23">STAT_ATTEMPTS<pos:position pos:line="344" pos:column="36"/></name></expr>;<pos:position pos:line="344" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name pos:line="345" pos:column="13">status<pos:position pos:line="345" pos:column="19"/></name> <operator pos:line="345" pos:column="20">=<pos:position pos:line="345" pos:column="21"/></operator> <name pos:line="345" pos:column="22">APR_SUCCESS<pos:position pos:line="345" pos:column="33"/></name></expr>;<pos:position pos:line="345" pos:column="34"/></expr_stmt>

            <do pos:line="347" pos:column="13">do <block pos:line="347" pos:column="16">{
                <if pos:line="348" pos:column="17">if <condition pos:line="348" pos:column="20">(<expr><name pos:line="348" pos:column="21">status<pos:position pos:line="348" pos:column="27"/></name> <operator pos:line="348" pos:column="28">!=<pos:position pos:line="348" pos:column="30"/></operator> <name pos:line="348" pos:column="31">APR_SUCCESS<pos:position pos:line="348" pos:column="42"/></name></expr>)<pos:position pos:line="348" pos:column="43"/></condition><then pos:line="348" pos:column="43"> <block pos:line="348" pos:column="44">{
                    <expr_stmt><expr><call><name pos:line="349" pos:column="21">apr_sleep<pos:position pos:line="349" pos:column="30"/></name><argument_list pos:line="349" pos:column="30">(<argument><expr><name pos:line="349" pos:column="31">STAT_DELAY<pos:position pos:line="349" pos:column="41"/></name></expr></argument>)<pos:position pos:line="349" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="43"/></expr_stmt>
                }<pos:position pos:line="350" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="351" pos:column="17">status<pos:position pos:line="351" pos:column="23"/></name> <operator pos:line="351" pos:column="24">=<pos:position pos:line="351" pos:column="25"/></operator> <call><name pos:line="351" pos:column="26">apr_stat<pos:position pos:line="351" pos:column="34"/></name><argument_list pos:line="351" pos:column="34">(<argument><expr><operator pos:line="351" pos:column="35">&amp;<pos:position pos:line="351" pos:column="40"/></operator><name pos:line="351" pos:column="36">info<pos:position pos:line="351" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="351" pos:column="42">path<pos:position pos:line="351" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="351" pos:column="48">APR_FINFO_MTIME<pos:position pos:line="351" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="351" pos:column="65">instance<pos:position pos:line="351" pos:column="73"/></name></expr></argument>)<pos:position pos:line="351" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="75"/></expr_stmt>
            }<pos:position pos:line="352" pos:column="14"/></block> while <condition pos:line="352" pos:column="21">(<expr><name pos:line="352" pos:column="22">status<pos:position pos:line="352" pos:column="28"/></name> <operator pos:line="352" pos:column="29">!=<pos:position pos:line="352" pos:column="31"/></operator> <name pos:line="352" pos:column="32">APR_SUCCESS<pos:position pos:line="352" pos:column="43"/></name> <operator pos:line="352" pos:column="44">&amp;&amp;<pos:position pos:line="352" pos:column="54"/></operator> <operator pos:line="352" pos:column="47">!<pos:position pos:line="352" pos:column="48"/></operator><name pos:line="352" pos:column="48">interrupted<pos:position pos:line="352" pos:column="59"/></name> <operator pos:line="352" pos:column="60">&amp;&amp;<pos:position pos:line="352" pos:column="70"/></operator> <operator pos:line="352" pos:column="63">--<pos:position pos:line="352" pos:column="65"/></operator><name pos:line="352" pos:column="65">retries<pos:position pos:line="352" pos:column="72"/></name></expr>)<pos:position pos:line="352" pos:column="73"/></condition>;<pos:position pos:line="352" pos:column="74"/></do>

            <if pos:line="354" pos:column="13">if <condition pos:line="354" pos:column="16">(<expr><name pos:line="354" pos:column="17">status<pos:position pos:line="354" pos:column="23"/></name> <operator pos:line="354" pos:column="24">==<pos:position pos:line="354" pos:column="26"/></operator> <name pos:line="354" pos:column="27">APR_SUCCESS<pos:position pos:line="354" pos:column="38"/></name></expr>)<pos:position pos:line="354" pos:column="39"/></condition><then pos:line="354" pos:column="39"> <block pos:line="354" pos:column="40">{
                <expr_stmt><expr><name pos:line="355" pos:column="17">previous<pos:position pos:line="355" pos:column="25"/></name> <operator pos:line="355" pos:column="26">=<pos:position pos:line="355" pos:column="27"/></operator> <name><name pos:line="355" pos:column="28">info<pos:position pos:line="355" pos:column="32"/></name><operator pos:line="355" pos:column="32">.<pos:position pos:line="355" pos:column="33"/></operator><name pos:line="355" pos:column="33">mtime<pos:position pos:line="355" pos:column="38"/></name></name></expr>;<pos:position pos:line="355" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name pos:line="356" pos:column="17">intelligent<pos:position pos:line="356" pos:column="28"/></name> <operator pos:line="356" pos:column="29">=<pos:position pos:line="356" pos:column="30"/></operator> <literal type="number" pos:line="356" pos:column="31">2<pos:position pos:line="356" pos:column="32"/></literal></expr>;<pos:position pos:line="356" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="357" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="358" pos:column="13">dowork<pos:position pos:line="358" pos:column="19"/></name> <operator pos:line="358" pos:column="20">=<pos:position pos:line="358" pos:column="21"/></operator> <literal type="number" pos:line="358" pos:column="22">1<pos:position pos:line="358" pos:column="23"/></literal></expr>;<pos:position pos:line="358" pos:column="24"/></expr_stmt>
            <break pos:line="359" pos:column="13">break;<pos:position pos:line="359" pos:column="19"/></break>

        <case pos:line="361" pos:column="9">case <expr><literal type="number" pos:line="361" pos:column="14">2<pos:position pos:line="361" pos:column="15"/></literal></expr>:<pos:position pos:line="361" pos:column="16"/></case>
            <expr_stmt><expr><name pos:line="362" pos:column="13">retries<pos:position pos:line="362" pos:column="20"/></name> <operator pos:line="362" pos:column="21">=<pos:position pos:line="362" pos:column="22"/></operator> <name pos:line="362" pos:column="23">STAT_ATTEMPTS<pos:position pos:line="362" pos:column="36"/></name></expr>;<pos:position pos:line="362" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name pos:line="363" pos:column="13">status<pos:position pos:line="363" pos:column="19"/></name> <operator pos:line="363" pos:column="20">=<pos:position pos:line="363" pos:column="21"/></operator> <name pos:line="363" pos:column="22">APR_SUCCESS<pos:position pos:line="363" pos:column="33"/></name></expr>;<pos:position pos:line="363" pos:column="34"/></expr_stmt>

            <do pos:line="365" pos:column="13">do <block pos:line="365" pos:column="16">{
                <if pos:line="366" pos:column="17">if <condition pos:line="366" pos:column="20">(<expr><name pos:line="366" pos:column="21">status<pos:position pos:line="366" pos:column="27"/></name> <operator pos:line="366" pos:column="28">!=<pos:position pos:line="366" pos:column="30"/></operator> <name pos:line="366" pos:column="31">APR_SUCCESS<pos:position pos:line="366" pos:column="42"/></name></expr>)<pos:position pos:line="366" pos:column="43"/></condition><then pos:line="366" pos:column="43"> <block pos:line="366" pos:column="44">{
                    <expr_stmt><expr><call><name pos:line="367" pos:column="21">apr_sleep<pos:position pos:line="367" pos:column="30"/></name><argument_list pos:line="367" pos:column="30">(<argument><expr><name pos:line="367" pos:column="31">STAT_DELAY<pos:position pos:line="367" pos:column="41"/></name></expr></argument>)<pos:position pos:line="367" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="367" pos:column="43"/></expr_stmt>
                }<pos:position pos:line="368" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="369" pos:column="17">status<pos:position pos:line="369" pos:column="23"/></name> <operator pos:line="369" pos:column="24">=<pos:position pos:line="369" pos:column="25"/></operator> <call><name pos:line="369" pos:column="26">apr_stat<pos:position pos:line="369" pos:column="34"/></name><argument_list pos:line="369" pos:column="34">(<argument><expr><operator pos:line="369" pos:column="35">&amp;<pos:position pos:line="369" pos:column="40"/></operator><name pos:line="369" pos:column="36">info<pos:position pos:line="369" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="369" pos:column="42">path<pos:position pos:line="369" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="369" pos:column="48">APR_FINFO_MTIME<pos:position pos:line="369" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="369" pos:column="65">instance<pos:position pos:line="369" pos:column="73"/></name></expr></argument>)<pos:position pos:line="369" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="369" pos:column="75"/></expr_stmt>
            }<pos:position pos:line="370" pos:column="14"/></block> while <condition pos:line="370" pos:column="21">(<expr><name pos:line="370" pos:column="22">status<pos:position pos:line="370" pos:column="28"/></name> <operator pos:line="370" pos:column="29">!=<pos:position pos:line="370" pos:column="31"/></operator> <name pos:line="370" pos:column="32">APR_SUCCESS<pos:position pos:line="370" pos:column="43"/></name> <operator pos:line="370" pos:column="44">&amp;&amp;<pos:position pos:line="370" pos:column="54"/></operator> <operator pos:line="370" pos:column="47">!<pos:position pos:line="370" pos:column="48"/></operator><name pos:line="370" pos:column="48">interrupted<pos:position pos:line="370" pos:column="59"/></name> <operator pos:line="370" pos:column="60">&amp;&amp;<pos:position pos:line="370" pos:column="70"/></operator> <operator pos:line="370" pos:column="63">--<pos:position pos:line="370" pos:column="65"/></operator><name pos:line="370" pos:column="65">retries<pos:position pos:line="370" pos:column="72"/></name></expr>)<pos:position pos:line="370" pos:column="73"/></condition>;<pos:position pos:line="370" pos:column="74"/></do>

            <if pos:line="372" pos:column="13">if <condition pos:line="372" pos:column="16">(<expr><name pos:line="372" pos:column="17">status<pos:position pos:line="372" pos:column="23"/></name> <operator pos:line="372" pos:column="24">==<pos:position pos:line="372" pos:column="26"/></operator> <name pos:line="372" pos:column="27">APR_SUCCESS<pos:position pos:line="372" pos:column="38"/></name></expr>)<pos:position pos:line="372" pos:column="39"/></condition><then pos:line="372" pos:column="39"> <block pos:line="372" pos:column="40">{
                <if pos:line="373" pos:column="17">if <condition pos:line="373" pos:column="20">(<expr><name pos:line="373" pos:column="21">previous<pos:position pos:line="373" pos:column="29"/></name> <operator pos:line="373" pos:column="30">!=<pos:position pos:line="373" pos:column="32"/></operator> <name><name pos:line="373" pos:column="33">info<pos:position pos:line="373" pos:column="37"/></name><operator pos:line="373" pos:column="37">.<pos:position pos:line="373" pos:column="38"/></operator><name pos:line="373" pos:column="38">mtime<pos:position pos:line="373" pos:column="43"/></name></name></expr>)<pos:position pos:line="373" pos:column="44"/></condition><then pos:line="373" pos:column="44"> <block pos:line="373" pos:column="45">{
                    <expr_stmt><expr><name pos:line="374" pos:column="21">dowork<pos:position pos:line="374" pos:column="27"/></name> <operator pos:line="374" pos:column="28">=<pos:position pos:line="374" pos:column="29"/></operator> <literal type="number" pos:line="374" pos:column="30">1<pos:position pos:line="374" pos:column="31"/></literal></expr>;<pos:position pos:line="374" pos:column="32"/></expr_stmt>
                }<pos:position pos:line="375" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="376" pos:column="17">previous<pos:position pos:line="376" pos:column="25"/></name> <operator pos:line="376" pos:column="26">=<pos:position pos:line="376" pos:column="27"/></operator> <name><name pos:line="376" pos:column="28">info<pos:position pos:line="376" pos:column="32"/></name><operator pos:line="376" pos:column="32">.<pos:position pos:line="376" pos:column="33"/></operator><name pos:line="376" pos:column="33">mtime<pos:position pos:line="376" pos:column="38"/></name></name></expr>;<pos:position pos:line="376" pos:column="39"/></expr_stmt>
                <break pos:line="377" pos:column="17">break;<pos:position pos:line="377" pos:column="23"/></break>
            }<pos:position pos:line="378" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="379" pos:column="13">intelligent<pos:position pos:line="379" pos:column="24"/></name> <operator pos:line="379" pos:column="25">=<pos:position pos:line="379" pos:column="26"/></operator> <literal type="number" pos:line="379" pos:column="27">1<pos:position pos:line="379" pos:column="28"/></literal></expr>;<pos:position pos:line="379" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name pos:line="380" pos:column="13">dowork<pos:position pos:line="380" pos:column="19"/></name> <operator pos:line="380" pos:column="20">=<pos:position pos:line="380" pos:column="21"/></operator> <literal type="number" pos:line="380" pos:column="22">1<pos:position pos:line="380" pos:column="23"/></literal></expr>;<pos:position pos:line="380" pos:column="24"/></expr_stmt>
            <break pos:line="381" pos:column="13">break;<pos:position pos:line="381" pos:column="19"/></break>
        }<pos:position pos:line="382" pos:column="10"/></block></switch>

        <if pos:line="384" pos:column="9">if <condition pos:line="384" pos:column="12">(<expr><name pos:line="384" pos:column="13">dowork<pos:position pos:line="384" pos:column="19"/></name> <operator pos:line="384" pos:column="20">&amp;&amp;<pos:position pos:line="384" pos:column="30"/></operator> <operator pos:line="384" pos:column="23">!<pos:position pos:line="384" pos:column="24"/></operator><name pos:line="384" pos:column="24">interrupted<pos:position pos:line="384" pos:column="35"/></name></expr>)<pos:position pos:line="384" pos:column="36"/></condition><then pos:line="384" pos:column="36"> <block pos:line="384" pos:column="37">{
            <decl_stmt><decl><type><name pos:line="385" pos:column="13">apr_off_t<pos:position pos:line="385" pos:column="22"/></name></type> <name pos:line="385" pos:column="23">nodes<pos:position pos:line="385" pos:column="28"/></name> <init pos:line="385" pos:column="29">= <expr><literal type="number" pos:line="385" pos:column="31">0<pos:position pos:line="385" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="385" pos:column="33"/></decl_stmt>
            <if pos:line="386" pos:column="13">if <condition pos:line="386" pos:column="16">(<expr><operator pos:line="386" pos:column="17">!<pos:position pos:line="386" pos:column="18"/></operator><call><name pos:line="386" pos:column="18">process_dir<pos:position pos:line="386" pos:column="29"/></name><argument_list pos:line="386" pos:column="29">(<argument><expr><name pos:line="386" pos:column="30">path<pos:position pos:line="386" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="386" pos:column="36">instance<pos:position pos:line="386" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="386" pos:column="46">&amp;<pos:position pos:line="386" pos:column="51"/></operator><name pos:line="386" pos:column="47">nodes<pos:position pos:line="386" pos:column="52"/></name></expr></argument>)<pos:position pos:line="386" pos:column="53"/></argument_list></call> <operator pos:line="386" pos:column="54">&amp;&amp;<pos:position pos:line="386" pos:column="64"/></operator> <operator pos:line="386" pos:column="57">!<pos:position pos:line="386" pos:column="58"/></operator><name pos:line="386" pos:column="58">interrupted<pos:position pos:line="386" pos:column="69"/></name></expr>)<pos:position pos:line="386" pos:column="70"/></condition><then pos:line="386" pos:column="70"> <block pos:line="386" pos:column="71">{
                <expr_stmt><expr><call><name pos:line="387" pos:column="17">purge<pos:position pos:line="387" pos:column="22"/></name><argument_list pos:line="387" pos:column="22">(<argument><expr><name pos:line="387" pos:column="23">path<pos:position pos:line="387" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="387" pos:column="29">instance<pos:position pos:line="387" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="387" pos:column="39">max<pos:position pos:line="387" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="387" pos:column="44">inodes<pos:position pos:line="387" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="387" pos:column="52">nodes<pos:position pos:line="387" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="387" pos:column="59">round<pos:position pos:line="387" pos:column="64"/></name></expr></argument>)<pos:position pos:line="387" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="387" pos:column="66"/></expr_stmt>
            }<pos:position pos:line="388" pos:column="14"/></block></then>
            <elseif pos:line="389" pos:column="13">else <if pos:line="389" pos:column="18">if <condition pos:line="389" pos:column="21">(<expr><operator pos:line="389" pos:column="22">!<pos:position pos:line="389" pos:column="23"/></operator><name pos:line="389" pos:column="23">isdaemon<pos:position pos:line="389" pos:column="31"/></name> <operator pos:line="389" pos:column="32">&amp;&amp;<pos:position pos:line="389" pos:column="42"/></operator> <operator pos:line="389" pos:column="35">!<pos:position pos:line="389" pos:column="36"/></operator><name pos:line="389" pos:column="36">interrupted<pos:position pos:line="389" pos:column="47"/></name></expr>)<pos:position pos:line="389" pos:column="48"/></condition><then pos:line="389" pos:column="48"> <block pos:line="389" pos:column="49">{
                <expr_stmt><expr><call><name pos:line="390" pos:column="17">apr_file_printf<pos:position pos:line="390" pos:column="32"/></name><argument_list pos:line="390" pos:column="32">(<argument><expr><name pos:line="390" pos:column="33">errfile<pos:position pos:line="390" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="390" pos:column="42">"An error occurred, cache cleaning "<pos:position pos:line="390" pos:column="78"/></literal>
                                         <literal type="string" pos:line="391" pos:column="42">"aborted."<pos:position pos:line="391" pos:column="52"/></literal> <name pos:line="391" pos:column="53">APR_EOL_STR<pos:position pos:line="391" pos:column="64"/></name></expr></argument>)<pos:position pos:line="391" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="391" pos:column="66"/></expr_stmt>
                <return pos:line="392" pos:column="17">return <expr><literal type="number" pos:line="392" pos:column="24">1<pos:position pos:line="392" pos:column="25"/></literal></expr>;<pos:position pos:line="392" pos:column="26"/></return>
            }<pos:position pos:line="393" pos:column="14"/></block></then></if></elseif></if>

            <if pos:line="395" pos:column="13">if <condition pos:line="395" pos:column="16">(<expr><name pos:line="395" pos:column="17">intelligent<pos:position pos:line="395" pos:column="28"/></name> <operator pos:line="395" pos:column="29">&amp;&amp;<pos:position pos:line="395" pos:column="39"/></operator> <operator pos:line="395" pos:column="32">!<pos:position pos:line="395" pos:column="33"/></operator><name pos:line="395" pos:column="33">interrupted<pos:position pos:line="395" pos:column="44"/></name></expr>)<pos:position pos:line="395" pos:column="45"/></condition><then pos:line="395" pos:column="45"> <block pos:line="395" pos:column="46">{
                <expr_stmt><expr><name pos:line="396" pos:column="17">retries<pos:position pos:line="396" pos:column="24"/></name> <operator pos:line="396" pos:column="25">=<pos:position pos:line="396" pos:column="26"/></operator> <name pos:line="396" pos:column="27">STAT_ATTEMPTS<pos:position pos:line="396" pos:column="40"/></name></expr>;<pos:position pos:line="396" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name pos:line="397" pos:column="17">status<pos:position pos:line="397" pos:column="23"/></name> <operator pos:line="397" pos:column="24">=<pos:position pos:line="397" pos:column="25"/></operator> <name pos:line="397" pos:column="26">APR_SUCCESS<pos:position pos:line="397" pos:column="37"/></name></expr>;<pos:position pos:line="397" pos:column="38"/></expr_stmt>
                <do pos:line="398" pos:column="17">do <block pos:line="398" pos:column="20">{<pos:position pos:line="398" pos:column="21"/></block></do></block></then></if></block></then></if></block></do></block></function>
              </unit>

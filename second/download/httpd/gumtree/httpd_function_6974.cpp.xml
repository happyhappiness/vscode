<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6974.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">hc_read_body<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">sctx_t<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">ctx<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">request_rec<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">r<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">APR_SUCCESS<pos:position pos:line="3" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_bucket_brigade<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">bb<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">seen_eos<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><literal type="number" pos:line="5" pos:column="20">0<pos:position pos:line="5" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">bb<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <call><name pos:line="7" pos:column="10">apr_brigade_create<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name><name pos:line="7" pos:column="29">r<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">pool<pos:position pos:line="7" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="38">r<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">-&gt;<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="41">connection<pos:position pos:line="7" pos:column="51"/></name><operator pos:line="7" pos:column="51">-&gt;<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="53">bucket_alloc<pos:position pos:line="7" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="67"/></expr_stmt>
    <do pos:line="8" pos:column="5">do <block pos:line="8" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">apr_bucket<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">bucket<pos:position pos:line="9" pos:column="27"/></name></decl>, <modifier pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="30">cpy<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">apr_size_t<pos:position pos:line="10" pos:column="19"/></name></type> <name pos:line="10" pos:column="20">len<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><name pos:line="10" pos:column="26">HUGE_STRING_LEN<pos:position pos:line="10" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>

        <expr_stmt><expr><name pos:line="12" pos:column="9">rv<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">ap_get_brigade<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name><name pos:line="12" pos:column="29">r<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">proto_input_filters<pos:position pos:line="12" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="53">bb<pos:position pos:line="12" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="57">AP_MODE_READBYTES<pos:position pos:line="12" pos:column="74"/></name></expr></argument>,
                            <argument><expr><name pos:line="13" pos:column="29">APR_BLOCK_READ<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="45">len<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>

        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">rv<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">!=<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">APR_SUCCESS<pos:position pos:line="15" pos:column="30"/></name></expr>)<pos:position pos:line="15" pos:column="31"/></condition><then pos:line="15" pos:column="31"> <block pos:line="15" pos:column="32">{
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><call><name pos:line="16" pos:column="17">APR_STATUS_IS_TIMEUP<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><name pos:line="16" pos:column="38">rv<pos:position pos:line="16" pos:column="40"/></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call> <operator pos:line="16" pos:column="42">||<pos:position pos:line="16" pos:column="44"/></operator> <call><name pos:line="16" pos:column="45">APR_STATUS_IS_EOF<pos:position pos:line="16" pos:column="62"/></name><argument_list pos:line="16" pos:column="62">(<argument><expr><name pos:line="16" pos:column="63">rv<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="67"/></condition><then pos:line="16" pos:column="67"> <block pos:line="16" pos:column="68">{
                <expr_stmt><expr><name pos:line="17" pos:column="17">rv<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">APR_SUCCESS<pos:position pos:line="17" pos:column="33"/></name></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>
                <break pos:line="18" pos:column="17">break;<pos:position pos:line="18" pos:column="23"/></break>
            }<pos:position pos:line="19" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">ap_log_error<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">APLOG_MARK<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="38">APLOG_DEBUG<pos:position pos:line="20" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="51">rv<pos:position pos:line="20" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="55">ctx<pos:position pos:line="20" pos:column="58"/></name><operator pos:line="20" pos:column="58">-&gt;<pos:position pos:line="20" pos:column="63"/></operator><name pos:line="20" pos:column="60">s<pos:position pos:line="20" pos:column="61"/></name></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="63">APLOGNO<pos:position pos:line="20" pos:column="70"/></name><argument_list pos:line="20" pos:column="70">(<argument><expr><literal type="number" pos:line="20" pos:column="71">03300<pos:position pos:line="20" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call>
                          <literal type="string" pos:line="21" pos:column="27">"Error reading response body"<pos:position pos:line="21" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="58"/></expr_stmt>
            <break pos:line="22" pos:column="13">break;<pos:position pos:line="22" pos:column="19"/></break>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>

        <for pos:line="25" pos:column="9">for <control pos:line="25" pos:column="13">(<init><expr><name pos:line="25" pos:column="14">bucket<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <call><name pos:line="25" pos:column="23">APR_BRIGADE_FIRST<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name pos:line="25" pos:column="41">bb<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></init>
             <condition><expr><name pos:line="26" pos:column="14">bucket<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">!=<pos:position pos:line="26" pos:column="23"/></operator> <call><name pos:line="26" pos:column="24">APR_BRIGADE_SENTINEL<pos:position pos:line="26" pos:column="44"/></name><argument_list pos:line="26" pos:column="44">(<argument><expr><name pos:line="26" pos:column="45">bb<pos:position pos:line="26" pos:column="47"/></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="49"/></condition>
             <incr><expr><name pos:line="27" pos:column="14">bucket<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <call><name pos:line="27" pos:column="23">APR_BUCKET_NEXT<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><name pos:line="27" pos:column="39">bucket<pos:position pos:line="27" pos:column="45"/></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr></incr>)<pos:position pos:line="27" pos:column="47"/></control>
        <block pos:line="28" pos:column="9">{
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><call><name pos:line="29" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="29" pos:column="34"/></name><argument_list pos:line="29" pos:column="34">(<argument><expr><name pos:line="29" pos:column="35">bucket<pos:position pos:line="29" pos:column="41"/></name></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="43"/></condition><then pos:line="29" pos:column="43"> <block pos:line="29" pos:column="44">{
                <expr_stmt><expr><name pos:line="30" pos:column="17">seen_eos<pos:position pos:line="30" pos:column="25"/></name> <operator pos:line="30" pos:column="26">=<pos:position pos:line="30" pos:column="27"/></operator> <literal type="number" pos:line="30" pos:column="28">1<pos:position pos:line="30" pos:column="29"/></literal></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
                <break pos:line="31" pos:column="17">break;<pos:position pos:line="31" pos:column="23"/></break>
            }<pos:position pos:line="32" pos:column="14"/></block></then></if>
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><call><name pos:line="33" pos:column="17">APR_BUCKET_IS_FLUSH<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><name pos:line="33" pos:column="37">bucket<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="45"/></condition><then pos:line="33" pos:column="45"> <block pos:line="33" pos:column="46">{
                <continue pos:line="34" pos:column="17">continue;<pos:position pos:line="34" pos:column="26"/></continue>
            }<pos:position pos:line="35" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="36" pos:column="13">rv<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator>  <call><name pos:line="36" pos:column="19">apr_bucket_copy<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><name pos:line="36" pos:column="35">bucket<pos:position pos:line="36" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="43">&amp;<pos:position pos:line="36" pos:column="48"/></operator><name pos:line="36" pos:column="44">cpy<pos:position pos:line="36" pos:column="47"/></name></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="49"/></expr_stmt>
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><name pos:line="37" pos:column="17">rv<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">!=<pos:position pos:line="37" pos:column="22"/></operator> <name pos:line="37" pos:column="23">APR_SUCCESS<pos:position pos:line="37" pos:column="34"/></name></expr>)<pos:position pos:line="37" pos:column="35"/></condition><then pos:line="37" pos:column="35"> <block pos:line="37" pos:column="36">{
                <break pos:line="38" pos:column="17">break;<pos:position pos:line="38" pos:column="23"/></break>
            }<pos:position pos:line="39" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="40" pos:column="36"/></name><argument_list pos:line="40" pos:column="36">(<argument><expr><name><name pos:line="40" pos:column="37">r<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">-&gt;<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="40">kept_body<pos:position pos:line="40" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="51">cpy<pos:position pos:line="40" pos:column="54"/></name></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></for>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">apr_brigade_cleanup<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">bb<pos:position pos:line="42" pos:column="31"/></name></expr></argument>)<pos:position pos:line="42" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block>
    while <condition pos:line="44" pos:column="11">(<expr><operator pos:line="44" pos:column="12">!<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="13">seen_eos<pos:position pos:line="44" pos:column="21"/></name></expr>)<pos:position pos:line="44" pos:column="22"/></condition>;<pos:position pos:line="44" pos:column="23"/></do>
    <return pos:line="45" pos:column="5">return <expr><operator pos:line="45" pos:column="12">(<pos:position pos:line="45" pos:column="13"/></operator><ternary><condition><expr><name pos:line="45" pos:column="13">rv<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">==<pos:position pos:line="45" pos:column="18"/></operator> <name pos:line="45" pos:column="19">APR_SUCCESS<pos:position pos:line="45" pos:column="30"/></name></expr> ?<pos:position pos:line="45" pos:column="32"/></condition><then pos:line="45" pos:column="32"> <expr><name pos:line="45" pos:column="33">OK<pos:position pos:line="45" pos:column="35"/></name></expr> <pos:position pos:line="45" pos:column="36"/></then><else pos:line="45" pos:column="36">: <expr><operator pos:line="45" pos:column="38">!<pos:position pos:line="45" pos:column="39"/></operator><name pos:line="45" pos:column="39">OK<pos:position pos:line="45" pos:column="41"/></name></expr></else></ternary><operator pos:line="45" pos:column="41">)<pos:position pos:line="45" pos:column="42"/></operator></expr>;<pos:position pos:line="45" pos:column="43"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

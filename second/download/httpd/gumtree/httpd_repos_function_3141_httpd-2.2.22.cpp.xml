<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3141_httpd-2.2.22.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier> <name pos:line="1" pos:column="14">XMLCALL<pos:position pos:line="1" pos:column="21"/></name></type>
<name pos:line="2" pos:column="1">XML_GetInputContext<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">XML_Parser<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">parser<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">offset<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">int<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">size<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">XML_CONTEXT_BYTES<pos:position pos:line="4" pos:column="25"/></name></cpp:ifdef>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">eventPtr<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">&amp;&amp;<pos:position pos:line="5" pos:column="26"/></operator> <name pos:line="5" pos:column="19">buffer<pos:position pos:line="5" pos:column="25"/></name></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26"> <block pos:line="5" pos:column="27">{
    <expr_stmt><expr><operator pos:line="6" pos:column="5">*<pos:position pos:line="6" pos:column="6"/></operator><name pos:line="6" pos:column="6">offset<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <name pos:line="6" pos:column="15">eventPtr<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">-<pos:position pos:line="6" pos:column="25"/></operator> <name pos:line="6" pos:column="26">buffer<pos:position pos:line="6" pos:column="32"/></name></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="7" pos:column="5">*<pos:position pos:line="7" pos:column="6"/></operator><name pos:line="7" pos:column="6">size<pos:position pos:line="7" pos:column="10"/></name>   <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">bufferEnd<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">-<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="27">buffer<pos:position pos:line="7" pos:column="33"/></name></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">buffer<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></return>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="10" pos:column="8">/* defined XML_CONTEXT_BYTES */</comment>
  <return pos:line="11" pos:column="3">return <expr><operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></operator><operator pos:line="11" pos:column="17">)<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr>;<pos:position pos:line="11" pos:column="21"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

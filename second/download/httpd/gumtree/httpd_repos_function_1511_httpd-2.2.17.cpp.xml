<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1511_httpd-2.2.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
    <name pos:line="2" pos:column="5">set_proxy_exclude<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">cmd_parms<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">parms<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">void<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">dummy<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="54">const<pos:position pos:line="2" pos:column="59"/></specifier> <name pos:line="2" pos:column="60">char<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">arg<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">server_rec<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">s<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name><name pos:line="4" pos:column="21">parms<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">-&gt;<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="28">server<pos:position pos:line="4" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">proxy_server_conf<pos:position pos:line="5" pos:column="22"/></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">conf<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">=
    <expr><call><name pos:line="6" pos:column="5">ap_get_module_config<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><name><name pos:line="6" pos:column="26">s<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">module_config<pos:position pos:line="6" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="44">&amp;<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="45">proxy_module<pos:position pos:line="6" pos:column="57"/></name></expr></argument>)<pos:position pos:line="6" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="59"/></decl_stmt>
    struct <expr_stmt><expr><name pos:line="7" pos:column="12">noproxy_entry<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></operator><operator pos:line="7" pos:column="27">new<pos:position pos:line="7" pos:column="30"/></operator></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">noproxy_entry<pos:position pos:line="8" pos:column="25"/></name></name> <modifier pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></modifier></type><name pos:line="8" pos:column="27">list<pos:position pos:line="8" pos:column="31"/></name> <init pos:line="8" pos:column="32">= <expr><operator pos:line="8" pos:column="34">(<pos:position pos:line="8" pos:column="35"/></operator>struct <name pos:line="8" pos:column="42">noproxy_entry<pos:position pos:line="8" pos:column="55"/></name> <operator pos:line="8" pos:column="56">*<pos:position pos:line="8" pos:column="57"/></operator><operator pos:line="8" pos:column="57">)<pos:position pos:line="8" pos:column="58"/></operator> <name><name pos:line="8" pos:column="59">conf<pos:position pos:line="8" pos:column="63"/></name><operator pos:line="8" pos:column="63">-&gt;<pos:position pos:line="8" pos:column="68"/></operator><name pos:line="8" pos:column="65">noproxies<pos:position pos:line="8" pos:column="74"/></name><operator pos:line="8" pos:column="74">-&gt;<pos:position pos:line="8" pos:column="79"/></operator><name pos:line="8" pos:column="76">elts<pos:position pos:line="8" pos:column="80"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="81"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">struct<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">apr_sockaddr_t<pos:position pos:line="9" pos:column="26"/></name></name> <modifier pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></modifier></type><name pos:line="9" pos:column="28">addr<pos:position pos:line="9" pos:column="32"/></name></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">found<pos:position pos:line="10" pos:column="14"/></name> <init pos:line="10" pos:column="15">= <expr><literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">i<pos:position pos:line="11" pos:column="10"/></name></decl>;<pos:position pos:line="11" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* Don't duplicate entries */</comment>
    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><expr><name pos:line="14" pos:column="10">i<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>;<pos:position pos:line="14" pos:column="16"/></init> <condition><expr><name pos:line="14" pos:column="17">i<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">&lt;<pos:position pos:line="14" pos:column="23"/></operator> <name><name pos:line="14" pos:column="21">conf<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">-&gt;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="27">noproxies<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">-&gt;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="38">nelts<pos:position pos:line="14" pos:column="43"/></name></name></expr>;<pos:position pos:line="14" pos:column="44"/></condition> <incr><expr><name pos:line="14" pos:column="45">i<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">++<pos:position pos:line="14" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="49"/></control> <block pos:line="14" pos:column="50">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">strcasecmp<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">arg<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="29">list<pos:position pos:line="15" pos:column="33"/></name><index pos:line="15" pos:column="33">[<expr><name pos:line="15" pos:column="34">i<pos:position pos:line="15" pos:column="35"/></name></expr>]<pos:position pos:line="15" pos:column="36"/></index></name><operator pos:line="15" pos:column="36">.<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="37">name<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call> <operator pos:line="15" pos:column="43">==<pos:position pos:line="15" pos:column="45"/></operator> <literal type="number" pos:line="15" pos:column="46">0<pos:position pos:line="15" pos:column="47"/></literal></expr>)<pos:position pos:line="15" pos:column="48"/></condition><then pos:line="15" pos:column="48"> <block pos:line="15" pos:column="49">{ <comment type="block" pos:line="15" pos:column="51">/* ignore case for host names */</comment>
            <expr_stmt><expr><name pos:line="16" pos:column="13">found<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <literal type="number" pos:line="16" pos:column="21">1<pos:position pos:line="16" pos:column="22"/></literal></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></for>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">found<pos:position pos:line="20" pos:column="15"/></name></expr>)<pos:position pos:line="20" pos:column="16"/></condition><then pos:line="20" pos:column="16"> <block pos:line="20" pos:column="17">{
        <expr_stmt><expr><operator pos:line="21" pos:column="9">new<pos:position pos:line="21" pos:column="12"/></operator> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">apr_array_push<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name><name pos:line="21" pos:column="30">conf<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">-&gt;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="36">noproxies<pos:position pos:line="21" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="22" pos:column="9">new<pos:position pos:line="22" pos:column="12"/></operator><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">name<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">arg<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">APR_SUCCESS<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">==<pos:position pos:line="23" pos:column="27"/></operator> <call><name pos:line="23" pos:column="28">apr_sockaddr_info_get<pos:position pos:line="23" pos:column="49"/></name><argument_list pos:line="23" pos:column="49">(<argument><expr><operator pos:line="23" pos:column="50">&amp;<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="51">addr<pos:position pos:line="23" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="57">new<pos:position pos:line="23" pos:column="60"/></operator><operator pos:line="23" pos:column="60">-&gt;<pos:position pos:line="23" pos:column="65"/></operator><name pos:line="23" pos:column="62">name<pos:position pos:line="23" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="68">APR_UNSPEC<pos:position pos:line="23" pos:column="78"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="80">0<pos:position pos:line="23" pos:column="81"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="83">0<pos:position pos:line="23" pos:column="84"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="86">parms<pos:position pos:line="23" pos:column="91"/></name><operator pos:line="23" pos:column="91">-&gt;<pos:position pos:line="23" pos:column="96"/></operator><name pos:line="23" pos:column="93">pool<pos:position pos:line="23" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="98"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="99"/></condition><then pos:line="23" pos:column="99"> <block pos:line="23" pos:column="100">{
            <expr_stmt><expr><operator pos:line="24" pos:column="13">new<pos:position pos:line="24" pos:column="16"/></operator><operator pos:line="24" pos:column="16">-&gt;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="18">addr<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <name pos:line="24" pos:column="25">addr<pos:position pos:line="24" pos:column="29"/></name></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then>
        <else pos:line="26" pos:column="9">else <block pos:line="26" pos:column="14">{
            <expr_stmt><expr><operator pos:line="27" pos:column="13">new<pos:position pos:line="27" pos:column="16"/></operator><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">addr<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <name pos:line="27" pos:column="25">NULL<pos:position pos:line="27" pos:column="29"/></name></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></else></if>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    <return pos:line="30" pos:column="5">return <expr><name pos:line="30" pos:column="12">NULL<pos:position pos:line="30" pos:column="16"/></name></expr>;<pos:position pos:line="30" pos:column="17"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2754_httpd-2.4.18.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">reqtimeout_filter<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">ap_filter_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">f<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="2" pos:column="39">apr_bucket_brigade<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">bb<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="3" pos:column="39">ap_input_mode_t<pos:position pos:line="3" pos:column="54"/></name></type> <name pos:line="3" pos:column="55">mode<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="4" pos:column="39">apr_read_type_e<pos:position pos:line="4" pos:column="54"/></name></type> <name pos:line="4" pos:column="55">block<pos:position pos:line="4" pos:column="60"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="5" pos:column="39">apr_off_t<pos:position pos:line="5" pos:column="48"/></name></type> <name pos:line="5" pos:column="49">readbytes<pos:position pos:line="5" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="59"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_time_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">time_left<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_time_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">now<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_status_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">rv<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_interval_time_t<pos:position pos:line="10" pos:column="24"/></name></type> <name pos:line="10" pos:column="25">saved_sock_timeout<pos:position pos:line="10" pos:column="43"/></name> <init pos:line="10" pos:column="44">= <expr><name pos:line="10" pos:column="46">UNSET<pos:position pos:line="10" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">reqtimeout_con_cfg<pos:position pos:line="11" pos:column="23"/></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">ccfg<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><name><name pos:line="11" pos:column="32">f<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">-&gt;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="35">ctx<pos:position pos:line="11" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">block<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">==<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">APR_NONBLOCK_READ<pos:position pos:line="13" pos:column="35"/></name> <operator pos:line="13" pos:column="36">&amp;&amp;<pos:position pos:line="13" pos:column="46"/></operator> <name pos:line="13" pos:column="39">mode<pos:position pos:line="13" pos:column="43"/></name> <operator pos:line="13" pos:column="44">==<pos:position pos:line="13" pos:column="46"/></operator> <name pos:line="13" pos:column="47">AP_MODE_SPECULATIVE<pos:position pos:line="13" pos:column="66"/></name></expr>)<pos:position pos:line="13" pos:column="67"/></condition><then pos:line="13" pos:column="67"> <block pos:line="13" pos:column="68">{ 
        <comment type="block" pos:line="14" pos:column="9">/*  The source of these above us in the core is check_pipeline(), which
         *  is between requests but before this filter knows to reset timeouts 
         *  during pre_read_request().  If they appear elsewhere, just don't 
         *  check or extend the time since they won't block and we'll see the
         *  bytes again later
         */</comment>
        <return pos:line="20" pos:column="9">return <expr><call><name pos:line="20" pos:column="16">ap_get_brigade<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name><name pos:line="20" pos:column="31">f<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">next<pos:position pos:line="20" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="40">bb<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="44">mode<pos:position pos:line="20" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="50">block<pos:position pos:line="20" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="57">readbytes<pos:position pos:line="20" pos:column="66"/></name></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="68"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">ccfg<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">-&gt;<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="15">in_keep_alive<pos:position pos:line="23" pos:column="28"/></name></name></expr>)<pos:position pos:line="23" pos:column="29"/></condition><then pos:line="23" pos:column="29"> <block pos:line="23" pos:column="30">{
        <comment type="block" pos:line="24" pos:column="9">/* For this read[_request line()], wait for the first byte using the
         * normal keep-alive timeout (hence don't take this expected idle time
         * into account to setup the connection expiry below).
         */</comment>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">ccfg<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">in_keep_alive<pos:position pos:line="28" pos:column="28"/></name></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <literal type="number" pos:line="28" pos:column="31">0<pos:position pos:line="28" pos:column="32"/></literal></expr>;<pos:position pos:line="28" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">rv<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <call><name pos:line="29" pos:column="14">ap_get_brigade<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><name><name pos:line="29" pos:column="29">f<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">-&gt;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="32">next<pos:position pos:line="29" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">bb<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">AP_MODE_SPECULATIVE<pos:position pos:line="29" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="63">block<pos:position pos:line="29" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="70">1<pos:position pos:line="29" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="73"/></expr_stmt>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">rv<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">!=<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">APR_SUCCESS<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">||<pos:position pos:line="30" pos:column="33"/></operator> <call><name pos:line="30" pos:column="34">APR_BRIGADE_EMPTY<pos:position pos:line="30" pos:column="51"/></name><argument_list pos:line="30" pos:column="51">(<argument><expr><name pos:line="30" pos:column="52">bb<pos:position pos:line="30" pos:column="54"/></name></expr></argument>)<pos:position pos:line="30" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="56"/></condition><then pos:line="30" pos:column="56"> <block pos:line="30" pos:column="57">{
            <return pos:line="31" pos:column="13">return <expr><name pos:line="31" pos:column="20">rv<pos:position pos:line="31" pos:column="22"/></name></expr>;<pos:position pos:line="31" pos:column="23"/></return>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">apr_brigade_cleanup<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><name pos:line="33" pos:column="29">bb<pos:position pos:line="33" pos:column="31"/></name></expr></argument>)<pos:position pos:line="33" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">ccfg<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">new_timeout<pos:position pos:line="36" pos:column="26"/></name></name> <operator pos:line="36" pos:column="27">&gt;<pos:position pos:line="36" pos:column="31"/></operator> <literal type="number" pos:line="36" pos:column="29">0<pos:position pos:line="36" pos:column="30"/></literal></expr>)<pos:position pos:line="36" pos:column="31"/></condition><then pos:line="36" pos:column="31"> <block pos:line="36" pos:column="32">{
        <comment type="block" pos:line="37" pos:column="9">/* set new timeout */</comment>
        <expr_stmt><expr><name pos:line="38" pos:column="9">now<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <call><name pos:line="38" pos:column="15">apr_time_now<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">()<pos:position pos:line="38" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">ccfg<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">-&gt;<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="15">timeout_at<pos:position pos:line="39" pos:column="25"/></name></name> <operator pos:line="39" pos:column="26">=<pos:position pos:line="39" pos:column="27"/></operator> <name pos:line="39" pos:column="28">now<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">+<pos:position pos:line="39" pos:column="33"/></operator> <call><name pos:line="39" pos:column="34">apr_time_from_sec<pos:position pos:line="39" pos:column="51"/></name><argument_list pos:line="39" pos:column="51">(<argument><expr><name><name pos:line="39" pos:column="52">ccfg<pos:position pos:line="39" pos:column="56"/></name><operator pos:line="39" pos:column="56">-&gt;<pos:position pos:line="39" pos:column="61"/></operator><name pos:line="39" pos:column="58">new_timeout<pos:position pos:line="39" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">ccfg<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">new_timeout<pos:position pos:line="40" pos:column="26"/></name></name> <operator pos:line="40" pos:column="27">=<pos:position pos:line="40" pos:column="28"/></operator> <literal type="number" pos:line="40" pos:column="29">0<pos:position pos:line="40" pos:column="30"/></literal></expr>;<pos:position pos:line="40" pos:column="31"/></expr_stmt>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name><name pos:line="41" pos:column="13">ccfg<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">-&gt;<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="19">new_max_timeout<pos:position pos:line="41" pos:column="34"/></name></name> <operator pos:line="41" pos:column="35">&gt;<pos:position pos:line="41" pos:column="39"/></operator> <literal type="number" pos:line="41" pos:column="37">0<pos:position pos:line="41" pos:column="38"/></literal></expr>)<pos:position pos:line="41" pos:column="39"/></condition><then pos:line="41" pos:column="39"> <block pos:line="41" pos:column="40">{
            <expr_stmt><expr><name><name pos:line="42" pos:column="13">ccfg<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">-&gt;<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="19">max_timeout_at<pos:position pos:line="42" pos:column="33"/></name></name> <operator pos:line="42" pos:column="34">=<pos:position pos:line="42" pos:column="35"/></operator> <name pos:line="42" pos:column="36">now<pos:position pos:line="42" pos:column="39"/></name> <operator pos:line="42" pos:column="40">+<pos:position pos:line="42" pos:column="41"/></operator> <call><name pos:line="42" pos:column="42">apr_time_from_sec<pos:position pos:line="42" pos:column="59"/></name><argument_list pos:line="42" pos:column="59">(<argument><expr><name><name pos:line="42" pos:column="60">ccfg<pos:position pos:line="42" pos:column="64"/></name><operator pos:line="42" pos:column="64">-&gt;<pos:position pos:line="42" pos:column="69"/></operator><name pos:line="42" pos:column="66">new_max_timeout<pos:position pos:line="42" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="43" pos:column="13">ccfg<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">-&gt;<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="19">new_max_timeout<pos:position pos:line="43" pos:column="34"/></name></name> <operator pos:line="43" pos:column="35">=<pos:position pos:line="43" pos:column="36"/></operator> <literal type="number" pos:line="43" pos:column="37">0<pos:position pos:line="43" pos:column="38"/></literal></expr>;<pos:position pos:line="43" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>
    }<pos:position pos:line="45" pos:column="6"/></block></then>
    <elseif pos:line="46" pos:column="5">else <if pos:line="46" pos:column="10">if <condition pos:line="46" pos:column="13">(<expr><name><name pos:line="46" pos:column="14">ccfg<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">-&gt;<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="20">timeout_at<pos:position pos:line="46" pos:column="30"/></name></name> <operator pos:line="46" pos:column="31">==<pos:position pos:line="46" pos:column="33"/></operator> <literal type="number" pos:line="46" pos:column="34">0<pos:position pos:line="46" pos:column="35"/></literal></expr>)<pos:position pos:line="46" pos:column="36"/></condition><then pos:line="46" pos:column="36"> <block pos:line="46" pos:column="37">{
        <comment type="block" pos:line="47" pos:column="9">/* no timeout set */</comment>
        <return pos:line="48" pos:column="9">return <expr><call><name pos:line="48" pos:column="16">ap_get_brigade<pos:position pos:line="48" pos:column="30"/></name><argument_list pos:line="48" pos:column="30">(<argument><expr><name><name pos:line="48" pos:column="31">f<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">-&gt;<pos:position pos:line="48" pos:column="37"/></operator><name pos:line="48" pos:column="34">next<pos:position pos:line="48" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="40">bb<pos:position pos:line="48" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="44">mode<pos:position pos:line="48" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="50">block<pos:position pos:line="48" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="57">readbytes<pos:position pos:line="48" pos:column="66"/></name></expr></argument>)<pos:position pos:line="48" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="68"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><operator pos:line="51" pos:column="9">!<pos:position pos:line="51" pos:column="10"/></operator><name><name pos:line="51" pos:column="10">ccfg<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">-&gt;<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="16">socket<pos:position pos:line="51" pos:column="22"/></name></name></expr>)<pos:position pos:line="51" pos:column="23"/></condition><then pos:line="51" pos:column="23"> <block pos:line="51" pos:column="24">{
        <expr_stmt><expr><name><name pos:line="52" pos:column="9">ccfg<pos:position pos:line="52" pos:column="13"/></name><operator pos:line="52" pos:column="13">-&gt;<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="15">socket<pos:position pos:line="52" pos:column="21"/></name></name> <operator pos:line="52" pos:column="22">=<pos:position pos:line="52" pos:column="23"/></operator> <call><name pos:line="52" pos:column="24">ap_get_conn_socket<pos:position pos:line="52" pos:column="42"/></name><argument_list pos:line="52" pos:column="42">(<argument><expr><name><name pos:line="52" pos:column="43">f<pos:position pos:line="52" pos:column="44"/></name><operator pos:line="52" pos:column="44">-&gt;<pos:position pos:line="52" pos:column="49"/></operator><name pos:line="52" pos:column="46">c<pos:position pos:line="52" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="55" pos:column="5">rv<pos:position pos:line="55" pos:column="7"/></name> <operator pos:line="55" pos:column="8">=<pos:position pos:line="55" pos:column="9"/></operator> <call><name pos:line="55" pos:column="10">check_time_left<pos:position pos:line="55" pos:column="25"/></name><argument_list pos:line="55" pos:column="25">(<argument><expr><name pos:line="55" pos:column="26">ccfg<pos:position pos:line="55" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="32">&amp;<pos:position pos:line="55" pos:column="37"/></operator><name pos:line="55" pos:column="33">time_left<pos:position pos:line="55" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="44">now<pos:position pos:line="55" pos:column="47"/></name></expr></argument>)<pos:position pos:line="55" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="49"/></expr_stmt>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">rv<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">!=<pos:position pos:line="56" pos:column="14"/></operator> <name pos:line="56" pos:column="15">APR_SUCCESS<pos:position pos:line="56" pos:column="26"/></name></expr>)<pos:position pos:line="56" pos:column="27"/></condition><then pos:line="56" pos:column="27">
        <block type="pseudo"><goto pos:line="57" pos:column="9">goto <name pos:line="57" pos:column="14">out<pos:position pos:line="57" pos:column="17"/></name>;<pos:position pos:line="57" pos:column="18"/></goto></block></then></if>

    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name pos:line="59" pos:column="9">block<pos:position pos:line="59" pos:column="14"/></name> <operator pos:line="59" pos:column="15">==<pos:position pos:line="59" pos:column="17"/></operator> <name pos:line="59" pos:column="18">APR_NONBLOCK_READ<pos:position pos:line="59" pos:column="35"/></name> <operator pos:line="59" pos:column="36">||<pos:position pos:line="59" pos:column="38"/></operator> <name pos:line="59" pos:column="39">mode<pos:position pos:line="59" pos:column="43"/></name> <operator pos:line="59" pos:column="44">==<pos:position pos:line="59" pos:column="46"/></operator> <name pos:line="59" pos:column="47">AP_MODE_INIT<pos:position pos:line="59" pos:column="59"/></name>
        <operator pos:line="60" pos:column="9">||<pos:position pos:line="60" pos:column="11"/></operator> <name pos:line="60" pos:column="12">mode<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">==<pos:position pos:line="60" pos:column="19"/></operator> <name pos:line="60" pos:column="20">AP_MODE_EATCRLF<pos:position pos:line="60" pos:column="35"/></name></expr>)<pos:position pos:line="60" pos:column="36"/></condition><then pos:line="60" pos:column="36"> <block pos:line="60" pos:column="37">{
        <expr_stmt><expr><name pos:line="61" pos:column="9">rv<pos:position pos:line="61" pos:column="11"/></name> <operator pos:line="61" pos:column="12">=<pos:position pos:line="61" pos:column="13"/></operator> <call><name pos:line="61" pos:column="14">ap_get_brigade<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><name><name pos:line="61" pos:column="29">f<pos:position pos:line="61" pos:column="30"/></name><operator pos:line="61" pos:column="30">-&gt;<pos:position pos:line="61" pos:column="35"/></operator><name pos:line="61" pos:column="32">next<pos:position pos:line="61" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="38">bb<pos:position pos:line="61" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="42">mode<pos:position pos:line="61" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="48">block<pos:position pos:line="61" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="55">readbytes<pos:position pos:line="61" pos:column="64"/></name></expr></argument>)<pos:position pos:line="61" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="66"/></expr_stmt>
        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name><name pos:line="62" pos:column="13">ccfg<pos:position pos:line="62" pos:column="17"/></name><operator pos:line="62" pos:column="17">-&gt;<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="19">min_rate<pos:position pos:line="62" pos:column="27"/></name></name> <operator pos:line="62" pos:column="28">&gt;<pos:position pos:line="62" pos:column="32"/></operator> <literal type="number" pos:line="62" pos:column="30">0<pos:position pos:line="62" pos:column="31"/></literal> <operator pos:line="62" pos:column="32">&amp;&amp;<pos:position pos:line="62" pos:column="42"/></operator> <name pos:line="62" pos:column="35">rv<pos:position pos:line="62" pos:column="37"/></name> <operator pos:line="62" pos:column="38">==<pos:position pos:line="62" pos:column="40"/></operator> <name pos:line="62" pos:column="41">APR_SUCCESS<pos:position pos:line="62" pos:column="52"/></name></expr>)<pos:position pos:line="62" pos:column="53"/></condition><then pos:line="62" pos:column="53"> <block pos:line="62" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">extend_timeout<pos:position pos:line="63" pos:column="27"/></name><argument_list pos:line="63" pos:column="27">(<argument><expr><name pos:line="63" pos:column="28">ccfg<pos:position pos:line="63" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="34">bb<pos:position pos:line="63" pos:column="36"/></name></expr></argument>)<pos:position pos:line="63" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="64" pos:column="10"/></block></then></if>
        <return pos:line="65" pos:column="9">return <expr><name pos:line="65" pos:column="16">rv<pos:position pos:line="65" pos:column="18"/></name></expr>;<pos:position pos:line="65" pos:column="19"/></return>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="68" pos:column="5">rv<pos:position pos:line="68" pos:column="7"/></name> <operator pos:line="68" pos:column="8">=<pos:position pos:line="68" pos:column="9"/></operator> <call><name pos:line="68" pos:column="10">apr_socket_timeout_get<pos:position pos:line="68" pos:column="32"/></name><argument_list pos:line="68" pos:column="32">(<argument><expr><name><name pos:line="68" pos:column="33">ccfg<pos:position pos:line="68" pos:column="37"/></name><operator pos:line="68" pos:column="37">-&gt;<pos:position pos:line="68" pos:column="42"/></operator><name pos:line="68" pos:column="39">socket<pos:position pos:line="68" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="47">&amp;<pos:position pos:line="68" pos:column="52"/></operator><name pos:line="68" pos:column="48">saved_sock_timeout<pos:position pos:line="68" pos:column="66"/></name></expr></argument>)<pos:position pos:line="68" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="69" pos:column="20"/></name><argument_list pos:line="69" pos:column="20">(<argument><expr><name pos:line="69" pos:column="21">rv<pos:position pos:line="69" pos:column="23"/></name> <operator pos:line="69" pos:column="24">==<pos:position pos:line="69" pos:column="26"/></operator> <name pos:line="69" pos:column="27">APR_SUCCESS<pos:position pos:line="69" pos:column="38"/></name></expr></argument>)<pos:position pos:line="69" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><name pos:line="71" pos:column="5">rv<pos:position pos:line="71" pos:column="7"/></name> <operator pos:line="71" pos:column="8">=<pos:position pos:line="71" pos:column="9"/></operator> <call><name pos:line="71" pos:column="10">apr_socket_timeout_set<pos:position pos:line="71" pos:column="32"/></name><argument_list pos:line="71" pos:column="32">(<argument><expr><name><name pos:line="71" pos:column="33">ccfg<pos:position pos:line="71" pos:column="37"/></name><operator pos:line="71" pos:column="37">-&gt;<pos:position pos:line="71" pos:column="42"/></operator><name pos:line="71" pos:column="39">socket<pos:position pos:line="71" pos:column="45"/></name></name></expr></argument>, <argument><expr><call><name pos:line="71" pos:column="47">MIN<pos:position pos:line="71" pos:column="50"/></name><argument_list pos:line="71" pos:column="50">(<argument><expr><name pos:line="71" pos:column="51">time_left<pos:position pos:line="71" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="62">saved_sock_timeout<pos:position pos:line="71" pos:column="80"/></name></expr></argument>)<pos:position pos:line="71" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="83"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="72" pos:column="20"/></name><argument_list pos:line="72" pos:column="20">(<argument><expr><name pos:line="72" pos:column="21">rv<pos:position pos:line="72" pos:column="23"/></name> <operator pos:line="72" pos:column="24">==<pos:position pos:line="72" pos:column="26"/></operator> <name pos:line="72" pos:column="27">APR_SUCCESS<pos:position pos:line="72" pos:column="38"/></name></expr></argument>)<pos:position pos:line="72" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="40"/></expr_stmt>

    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name pos:line="74" pos:column="9">mode<pos:position pos:line="74" pos:column="13"/></name> <operator pos:line="74" pos:column="14">==<pos:position pos:line="74" pos:column="16"/></operator> <name pos:line="74" pos:column="17">AP_MODE_GETLINE<pos:position pos:line="74" pos:column="32"/></name></expr>)<pos:position pos:line="74" pos:column="33"/></condition><then pos:line="74" pos:column="33"> <block pos:line="74" pos:column="34">{
        <comment type="block" pos:line="75" pos:column="9">/*
         * For a blocking AP_MODE_GETLINE read, apr_brigade_split_line()
         * would loop until a whole line has been read. As this would make it
         * impossible to enforce a total timeout, we only do non-blocking
         * reads.
         */</comment>
        <decl_stmt><decl><type><name pos:line="81" pos:column="9">apr_off_t<pos:position pos:line="81" pos:column="18"/></name></type> <name pos:line="81" pos:column="19">remaining<pos:position pos:line="81" pos:column="28"/></name> <init pos:line="81" pos:column="29">= <expr><name pos:line="81" pos:column="31">HUGE_STRING_LEN<pos:position pos:line="81" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="81" pos:column="47"/></decl_stmt>
        <do pos:line="82" pos:column="9">do <block pos:line="82" pos:column="12">{
            <decl_stmt><decl><type><name pos:line="83" pos:column="13">apr_off_t<pos:position pos:line="83" pos:column="22"/></name></type> <name pos:line="83" pos:column="23">bblen<pos:position pos:line="83" pos:column="28"/></name></decl>;<pos:position pos:line="83" pos:column="29"/></decl_stmt>
<cpp:if pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">if<pos:position pos:line="84" pos:column="4"/></cpp:directive> <expr><name pos:line="84" pos:column="5">APR_MAJOR_VERSION<pos:position pos:line="84" pos:column="22"/></name> <operator pos:line="84" pos:column="23">&lt;<pos:position pos:line="84" pos:column="27"/></operator> <literal type="number" pos:line="84" pos:column="25">2<pos:position pos:line="84" pos:column="26"/></literal></expr></cpp:if>
            <decl_stmt><decl><type><name pos:line="85" pos:column="13">apr_int32_t<pos:position pos:line="85" pos:column="24"/></name></type> <name pos:line="85" pos:column="25">nsds<pos:position pos:line="85" pos:column="29"/></name></decl>;<pos:position pos:line="85" pos:column="30"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="86" pos:column="13">apr_interval_time_t<pos:position pos:line="86" pos:column="32"/></name></type> <name pos:line="86" pos:column="33">poll_timeout<pos:position pos:line="86" pos:column="45"/></name></decl>;<pos:position pos:line="86" pos:column="46"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="87" pos:column="13">apr_pollfd_t<pos:position pos:line="87" pos:column="25"/></name></type> <name pos:line="87" pos:column="26">pollset<pos:position pos:line="87" pos:column="33"/></name></decl>;<pos:position pos:line="87" pos:column="34"/></decl_stmt>
<cpp:endif pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">endif<pos:position pos:line="88" pos:column="7"/></cpp:directive></cpp:endif>

            <expr_stmt><expr><name pos:line="90" pos:column="13">rv<pos:position pos:line="90" pos:column="15"/></name> <operator pos:line="90" pos:column="16">=<pos:position pos:line="90" pos:column="17"/></operator> <call><name pos:line="90" pos:column="18">ap_get_brigade<pos:position pos:line="90" pos:column="32"/></name><argument_list pos:line="90" pos:column="32">(<argument><expr><name><name pos:line="90" pos:column="33">f<pos:position pos:line="90" pos:column="34"/></name><operator pos:line="90" pos:column="34">-&gt;<pos:position pos:line="90" pos:column="39"/></operator><name pos:line="90" pos:column="36">next<pos:position pos:line="90" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="42">bb<pos:position pos:line="90" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="46">AP_MODE_GETLINE<pos:position pos:line="90" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="63">APR_NONBLOCK_READ<pos:position pos:line="90" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="82">remaining<pos:position pos:line="90" pos:column="91"/></name></expr></argument>)<pos:position pos:line="90" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="93"/></expr_stmt>
            <if pos:line="91" pos:column="13">if <condition pos:line="91" pos:column="16">(<expr><name pos:line="91" pos:column="17">rv<pos:position pos:line="91" pos:column="19"/></name> <operator pos:line="91" pos:column="20">!=<pos:position pos:line="91" pos:column="22"/></operator> <name pos:line="91" pos:column="23">APR_SUCCESS<pos:position pos:line="91" pos:column="34"/></name> <operator pos:line="91" pos:column="35">&amp;&amp;<pos:position pos:line="91" pos:column="45"/></operator> <operator pos:line="91" pos:column="38">!<pos:position pos:line="91" pos:column="39"/></operator><call><name pos:line="91" pos:column="39">APR_STATUS_IS_EAGAIN<pos:position pos:line="91" pos:column="59"/></name><argument_list pos:line="91" pos:column="59">(<argument><expr><name pos:line="91" pos:column="60">rv<pos:position pos:line="91" pos:column="62"/></name></expr></argument>)<pos:position pos:line="91" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="64"/></condition><then pos:line="91" pos:column="64"> <block pos:line="91" pos:column="65">{
                <break pos:line="92" pos:column="17">break;<pos:position pos:line="92" pos:column="23"/></break>
            }<pos:position pos:line="93" pos:column="14"/></block></then></if>

            <if pos:line="95" pos:column="13">if <condition pos:line="95" pos:column="16">(<expr><operator pos:line="95" pos:column="17">!<pos:position pos:line="95" pos:column="18"/></operator><call><name pos:line="95" pos:column="18">APR_BRIGADE_EMPTY<pos:position pos:line="95" pos:column="35"/></name><argument_list pos:line="95" pos:column="35">(<argument><expr><name pos:line="95" pos:column="36">bb<pos:position pos:line="95" pos:column="38"/></name></expr></argument>)<pos:position pos:line="95" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="40"/></condition><then pos:line="95" pos:column="40"> <block pos:line="95" pos:column="41">{
                <if pos:line="96" pos:column="17">if <condition pos:line="96" pos:column="20">(<expr><name><name pos:line="96" pos:column="21">ccfg<pos:position pos:line="96" pos:column="25"/></name><operator pos:line="96" pos:column="25">-&gt;<pos:position pos:line="96" pos:column="30"/></operator><name pos:line="96" pos:column="27">min_rate<pos:position pos:line="96" pos:column="35"/></name></name> <operator pos:line="96" pos:column="36">&gt;<pos:position pos:line="96" pos:column="40"/></operator> <literal type="number" pos:line="96" pos:column="38">0<pos:position pos:line="96" pos:column="39"/></literal></expr>)<pos:position pos:line="96" pos:column="40"/></condition><then pos:line="96" pos:column="40"> <block pos:line="96" pos:column="41">{
                    <expr_stmt><expr><call><name pos:line="97" pos:column="21">extend_timeout<pos:position pos:line="97" pos:column="35"/></name><argument_list pos:line="97" pos:column="35">(<argument><expr><name pos:line="97" pos:column="36">ccfg<pos:position pos:line="97" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="42">bb<pos:position pos:line="97" pos:column="44"/></name></expr></argument>)<pos:position pos:line="97" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="46"/></expr_stmt>
                }<pos:position pos:line="98" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="100" pos:column="17">rv<pos:position pos:line="100" pos:column="19"/></name> <operator pos:line="100" pos:column="20">=<pos:position pos:line="100" pos:column="21"/></operator> <call><name pos:line="100" pos:column="22">have_lf_or_eos<pos:position pos:line="100" pos:column="36"/></name><argument_list pos:line="100" pos:column="36">(<argument><expr><name pos:line="100" pos:column="37">bb<pos:position pos:line="100" pos:column="39"/></name></expr></argument>)<pos:position pos:line="100" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="41"/></expr_stmt>
                <if pos:line="101" pos:column="17">if <condition pos:line="101" pos:column="20">(<expr><name pos:line="101" pos:column="21">rv<pos:position pos:line="101" pos:column="23"/></name> <operator pos:line="101" pos:column="24">!=<pos:position pos:line="101" pos:column="26"/></operator> <name pos:line="101" pos:column="27">APR_INCOMPLETE<pos:position pos:line="101" pos:column="41"/></name></expr>)<pos:position pos:line="101" pos:column="42"/></condition><then pos:line="101" pos:column="42"> <block pos:line="101" pos:column="43">{
                    <break pos:line="102" pos:column="21">break;<pos:position pos:line="102" pos:column="27"/></break>
                }<pos:position pos:line="103" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="105" pos:column="17">rv<pos:position pos:line="105" pos:column="19"/></name> <operator pos:line="105" pos:column="20">=<pos:position pos:line="105" pos:column="21"/></operator> <call><name pos:line="105" pos:column="22">apr_brigade_length<pos:position pos:line="105" pos:column="40"/></name><argument_list pos:line="105" pos:column="40">(<argument><expr><name pos:line="105" pos:column="41">bb<pos:position pos:line="105" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="105" pos:column="45">1<pos:position pos:line="105" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="105" pos:column="48">&amp;<pos:position pos:line="105" pos:column="53"/></operator><name pos:line="105" pos:column="49">bblen<pos:position pos:line="105" pos:column="54"/></name></expr></argument>)<pos:position pos:line="105" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="56"/></expr_stmt>
                <if pos:line="106" pos:column="17">if <condition pos:line="106" pos:column="20">(<expr><name pos:line="106" pos:column="21">rv<pos:position pos:line="106" pos:column="23"/></name> <operator pos:line="106" pos:column="24">!=<pos:position pos:line="106" pos:column="26"/></operator> <name pos:line="106" pos:column="27">APR_SUCCESS<pos:position pos:line="106" pos:column="38"/></name></expr>)<pos:position pos:line="106" pos:column="39"/></condition><then pos:line="106" pos:column="39"> <block pos:line="106" pos:column="40">{
                    <break pos:line="107" pos:column="21">break;<pos:position pos:line="107" pos:column="27"/></break>
                }<pos:position pos:line="108" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="109" pos:column="17">remaining<pos:position pos:line="109" pos:column="26"/></name> <operator pos:line="109" pos:column="27">-=<pos:position pos:line="109" pos:column="29"/></operator> <name pos:line="109" pos:column="30">bblen<pos:position pos:line="109" pos:column="35"/></name></expr>;<pos:position pos:line="109" pos:column="36"/></expr_stmt>
                <if pos:line="110" pos:column="17">if <condition pos:line="110" pos:column="20">(<expr><name pos:line="110" pos:column="21">remaining<pos:position pos:line="110" pos:column="30"/></name> <operator pos:line="110" pos:column="31">&lt;=<pos:position pos:line="110" pos:column="36"/></operator> <literal type="number" pos:line="110" pos:column="34">0<pos:position pos:line="110" pos:column="35"/></literal></expr>)<pos:position pos:line="110" pos:column="36"/></condition><then pos:line="110" pos:column="36"> <block pos:line="110" pos:column="37">{
                    <break pos:line="111" pos:column="21">break;<pos:position pos:line="111" pos:column="27"/></break>
                }<pos:position pos:line="112" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="114" pos:column="17">/* Haven't got a whole line yet, save what we have ... */</comment>
                <if pos:line="115" pos:column="17">if <condition pos:line="115" pos:column="20">(<expr><operator pos:line="115" pos:column="21">!<pos:position pos:line="115" pos:column="22"/></operator><name><name pos:line="115" pos:column="22">ccfg<pos:position pos:line="115" pos:column="26"/></name><operator pos:line="115" pos:column="26">-&gt;<pos:position pos:line="115" pos:column="31"/></operator><name pos:line="115" pos:column="28">tmpbb<pos:position pos:line="115" pos:column="33"/></name></name></expr>)<pos:position pos:line="115" pos:column="34"/></condition><then pos:line="115" pos:column="34"> <block pos:line="115" pos:column="35">{
                    <expr_stmt><expr><name><name pos:line="116" pos:column="21">ccfg<pos:position pos:line="116" pos:column="25"/></name><operator pos:line="116" pos:column="25">-&gt;<pos:position pos:line="116" pos:column="30"/></operator><name pos:line="116" pos:column="27">tmpbb<pos:position pos:line="116" pos:column="32"/></name></name> <operator pos:line="116" pos:column="33">=<pos:position pos:line="116" pos:column="34"/></operator> <call><name pos:line="116" pos:column="35">apr_brigade_create<pos:position pos:line="116" pos:column="53"/></name><argument_list pos:line="116" pos:column="53">(<argument><expr><name><name pos:line="116" pos:column="54">f<pos:position pos:line="116" pos:column="55"/></name><operator pos:line="116" pos:column="55">-&gt;<pos:position pos:line="116" pos:column="60"/></operator><name pos:line="116" pos:column="57">c<pos:position pos:line="116" pos:column="58"/></name><operator pos:line="116" pos:column="58">-&gt;<pos:position pos:line="116" pos:column="63"/></operator><name pos:line="116" pos:column="60">pool<pos:position pos:line="116" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="66">f<pos:position pos:line="116" pos:column="67"/></name><operator pos:line="116" pos:column="67">-&gt;<pos:position pos:line="116" pos:column="72"/></operator><name pos:line="116" pos:column="69">c<pos:position pos:line="116" pos:column="70"/></name><operator pos:line="116" pos:column="70">-&gt;<pos:position pos:line="116" pos:column="75"/></operator><name pos:line="116" pos:column="72">bucket_alloc<pos:position pos:line="116" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="86"/></expr_stmt>
                }<pos:position pos:line="117" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="118" pos:column="17">rv<pos:position pos:line="118" pos:column="19"/></name> <operator pos:line="118" pos:column="20">=<pos:position pos:line="118" pos:column="21"/></operator> <call><name pos:line="118" pos:column="22">brigade_append<pos:position pos:line="118" pos:column="36"/></name><argument_list pos:line="118" pos:column="36">(<argument><expr><name><name pos:line="118" pos:column="37">ccfg<pos:position pos:line="118" pos:column="41"/></name><operator pos:line="118" pos:column="41">-&gt;<pos:position pos:line="118" pos:column="46"/></operator><name pos:line="118" pos:column="43">tmpbb<pos:position pos:line="118" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="50">bb<pos:position pos:line="118" pos:column="52"/></name></expr></argument>)<pos:position pos:line="118" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="54"/></expr_stmt>
                <if pos:line="119" pos:column="17">if <condition pos:line="119" pos:column="20">(<expr><name pos:line="119" pos:column="21">rv<pos:position pos:line="119" pos:column="23"/></name> <operator pos:line="119" pos:column="24">!=<pos:position pos:line="119" pos:column="26"/></operator> <name pos:line="119" pos:column="27">APR_SUCCESS<pos:position pos:line="119" pos:column="38"/></name></expr>)<pos:position pos:line="119" pos:column="39"/></condition><then pos:line="119" pos:column="39">
                    <block type="pseudo"><break pos:line="120" pos:column="21">break;<pos:position pos:line="120" pos:column="27"/></break></block></then></if>
            }<pos:position pos:line="121" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="123" pos:column="13">/* ... and wait for more */</comment>
<cpp:if pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">if<pos:position pos:line="124" pos:column="4"/></cpp:directive> <expr><name pos:line="124" pos:column="5">APR_MAJOR_VERSION<pos:position pos:line="124" pos:column="22"/></name> <operator pos:line="124" pos:column="23">&lt;<pos:position pos:line="124" pos:column="27"/></operator> <literal type="number" pos:line="124" pos:column="25">2<pos:position pos:line="124" pos:column="26"/></literal></expr></cpp:if>
            <expr_stmt><expr><name><name pos:line="125" pos:column="13">pollset<pos:position pos:line="125" pos:column="20"/></name><operator pos:line="125" pos:column="20">.<pos:position pos:line="125" pos:column="21"/></operator><name pos:line="125" pos:column="21">p<pos:position pos:line="125" pos:column="22"/></name></name> <operator pos:line="125" pos:column="23">=<pos:position pos:line="125" pos:column="24"/></operator> <name><name pos:line="125" pos:column="25">f<pos:position pos:line="125" pos:column="26"/></name><operator pos:line="125" pos:column="26">-&gt;<pos:position pos:line="125" pos:column="31"/></operator><name pos:line="125" pos:column="28">c<pos:position pos:line="125" pos:column="29"/></name><operator pos:line="125" pos:column="29">-&gt;<pos:position pos:line="125" pos:column="34"/></operator><name pos:line="125" pos:column="31">pool<pos:position pos:line="125" pos:column="35"/></name></name></expr>;<pos:position pos:line="125" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="126" pos:column="13">pollset<pos:position pos:line="126" pos:column="20"/></name><operator pos:line="126" pos:column="20">.<pos:position pos:line="126" pos:column="21"/></operator><name pos:line="126" pos:column="21">desc_type<pos:position pos:line="126" pos:column="30"/></name></name> <operator pos:line="126" pos:column="31">=<pos:position pos:line="126" pos:column="32"/></operator> <name pos:line="126" pos:column="33">APR_POLL_SOCKET<pos:position pos:line="126" pos:column="48"/></name></expr>;<pos:position pos:line="126" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="127" pos:column="13">pollset<pos:position pos:line="127" pos:column="20"/></name><operator pos:line="127" pos:column="20">.<pos:position pos:line="127" pos:column="21"/></operator><name pos:line="127" pos:column="21">reqevents<pos:position pos:line="127" pos:column="30"/></name></name> <operator pos:line="127" pos:column="31">=<pos:position pos:line="127" pos:column="32"/></operator> <name pos:line="127" pos:column="33">APR_POLLIN<pos:position pos:line="127" pos:column="43"/></name><operator pos:line="127" pos:column="43">|<pos:position pos:line="127" pos:column="44"/></operator><name pos:line="127" pos:column="44">APR_POLLHUP<pos:position pos:line="127" pos:column="55"/></name></expr>;<pos:position pos:line="127" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="128" pos:column="13">pollset<pos:position pos:line="128" pos:column="20"/></name><operator pos:line="128" pos:column="20">.<pos:position pos:line="128" pos:column="21"/></operator><name pos:line="128" pos:column="21">desc<pos:position pos:line="128" pos:column="25"/></name><operator pos:line="128" pos:column="25">.<pos:position pos:line="128" pos:column="26"/></operator><name pos:line="128" pos:column="26">s<pos:position pos:line="128" pos:column="27"/></name></name> <operator pos:line="128" pos:column="28">=<pos:position pos:line="128" pos:column="29"/></operator> <name><name pos:line="128" pos:column="30">ccfg<pos:position pos:line="128" pos:column="34"/></name><operator pos:line="128" pos:column="34">-&gt;<pos:position pos:line="128" pos:column="39"/></operator><name pos:line="128" pos:column="36">socket<pos:position pos:line="128" pos:column="42"/></name></name></expr>;<pos:position pos:line="128" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="129" pos:column="13">apr_socket_timeout_get<pos:position pos:line="129" pos:column="35"/></name><argument_list pos:line="129" pos:column="35">(<argument><expr><name><name pos:line="129" pos:column="36">ccfg<pos:position pos:line="129" pos:column="40"/></name><operator pos:line="129" pos:column="40">-&gt;<pos:position pos:line="129" pos:column="45"/></operator><name pos:line="129" pos:column="42">socket<pos:position pos:line="129" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="129" pos:column="50">&amp;<pos:position pos:line="129" pos:column="55"/></operator><name pos:line="129" pos:column="51">poll_timeout<pos:position pos:line="129" pos:column="63"/></name></expr></argument>)<pos:position pos:line="129" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name pos:line="130" pos:column="13">rv<pos:position pos:line="130" pos:column="15"/></name> <operator pos:line="130" pos:column="16">=<pos:position pos:line="130" pos:column="17"/></operator> <call><name pos:line="130" pos:column="18">apr_poll<pos:position pos:line="130" pos:column="26"/></name><argument_list pos:line="130" pos:column="26">(<argument><expr><operator pos:line="130" pos:column="27">&amp;<pos:position pos:line="130" pos:column="32"/></operator><name pos:line="130" pos:column="28">pollset<pos:position pos:line="130" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="130" pos:column="37">1<pos:position pos:line="130" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="130" pos:column="40">&amp;<pos:position pos:line="130" pos:column="45"/></operator><name pos:line="130" pos:column="41">nsds<pos:position pos:line="130" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="47">poll_timeout<pos:position pos:line="130" pos:column="59"/></name></expr></argument>)<pos:position pos:line="130" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="61"/></expr_stmt>
<cpp:else pos:line="131" pos:column="1">#<cpp:directive pos:line="131" pos:column="2">else<pos:position pos:line="131" pos:column="6"/></cpp:directive></cpp:else>
            <expr_stmt><expr><name pos:line="132" pos:column="13">rv<pos:position pos:line="132" pos:column="15"/></name> <operator pos:line="132" pos:column="16">=<pos:position pos:line="132" pos:column="17"/></operator> <call><name pos:line="132" pos:column="18">apr_socket_wait<pos:position pos:line="132" pos:column="33"/></name><argument_list pos:line="132" pos:column="33">(<argument><expr><name><name pos:line="132" pos:column="34">ccfg<pos:position pos:line="132" pos:column="38"/></name><operator pos:line="132" pos:column="38">-&gt;<pos:position pos:line="132" pos:column="43"/></operator><name pos:line="132" pos:column="40">socket<pos:position pos:line="132" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="48">APR_WAIT_READ<pos:position pos:line="132" pos:column="61"/></name></expr></argument>)<pos:position pos:line="132" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="63"/></expr_stmt>
<cpp:endif pos:line="133" pos:column="1">#<cpp:directive pos:line="133" pos:column="2">endif<pos:position pos:line="133" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="134" pos:column="13">if <condition pos:line="134" pos:column="16">(<expr><name pos:line="134" pos:column="17">rv<pos:position pos:line="134" pos:column="19"/></name> <operator pos:line="134" pos:column="20">!=<pos:position pos:line="134" pos:column="22"/></operator> <name pos:line="134" pos:column="23">APR_SUCCESS<pos:position pos:line="134" pos:column="34"/></name></expr>)<pos:position pos:line="134" pos:column="35"/></condition><then pos:line="134" pos:column="35">
                <block type="pseudo"><break pos:line="135" pos:column="17">break;<pos:position pos:line="135" pos:column="23"/></break></block></then></if>

            <expr_stmt><expr><name pos:line="137" pos:column="13">rv<pos:position pos:line="137" pos:column="15"/></name> <operator pos:line="137" pos:column="16">=<pos:position pos:line="137" pos:column="17"/></operator> <call><name pos:line="137" pos:column="18">check_time_left<pos:position pos:line="137" pos:column="33"/></name><argument_list pos:line="137" pos:column="33">(<argument><expr><name pos:line="137" pos:column="34">ccfg<pos:position pos:line="137" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="137" pos:column="40">&amp;<pos:position pos:line="137" pos:column="45"/></operator><name pos:line="137" pos:column="41">time_left<pos:position pos:line="137" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="137" pos:column="52">0<pos:position pos:line="137" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="55"/></expr_stmt>
            <if pos:line="138" pos:column="13">if <condition pos:line="138" pos:column="16">(<expr><name pos:line="138" pos:column="17">rv<pos:position pos:line="138" pos:column="19"/></name> <operator pos:line="138" pos:column="20">!=<pos:position pos:line="138" pos:column="22"/></operator> <name pos:line="138" pos:column="23">APR_SUCCESS<pos:position pos:line="138" pos:column="34"/></name></expr>)<pos:position pos:line="138" pos:column="35"/></condition><then pos:line="138" pos:column="35">
                <block type="pseudo"><break pos:line="139" pos:column="17">break;<pos:position pos:line="139" pos:column="23"/></break></block></then></if>

            <expr_stmt><expr><name pos:line="141" pos:column="13">rv<pos:position pos:line="141" pos:column="15"/></name> <operator pos:line="141" pos:column="16">=<pos:position pos:line="141" pos:column="17"/></operator> <call><name pos:line="141" pos:column="18">apr_socket_timeout_set<pos:position pos:line="141" pos:column="40"/></name><argument_list pos:line="141" pos:column="40">(<argument><expr><name><name pos:line="141" pos:column="41">ccfg<pos:position pos:line="141" pos:column="45"/></name><operator pos:line="141" pos:column="45">-&gt;<pos:position pos:line="141" pos:column="50"/></operator><name pos:line="141" pos:column="47">socket<pos:position pos:line="141" pos:column="53"/></name></name></expr></argument>,
                                   <argument><expr><call><name pos:line="142" pos:column="36">MIN<pos:position pos:line="142" pos:column="39"/></name><argument_list pos:line="142" pos:column="39">(<argument><expr><name pos:line="142" pos:column="40">time_left<pos:position pos:line="142" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="51">saved_sock_timeout<pos:position pos:line="142" pos:column="69"/></name></expr></argument>)<pos:position pos:line="142" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="142" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="143" pos:column="13">AP_DEBUG_ASSERT<pos:position pos:line="143" pos:column="28"/></name><argument_list pos:line="143" pos:column="28">(<argument><expr><name pos:line="143" pos:column="29">rv<pos:position pos:line="143" pos:column="31"/></name> <operator pos:line="143" pos:column="32">==<pos:position pos:line="143" pos:column="34"/></operator> <name pos:line="143" pos:column="35">APR_SUCCESS<pos:position pos:line="143" pos:column="46"/></name></expr></argument>)<pos:position pos:line="143" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="48"/></expr_stmt>

        }<pos:position pos:line="145" pos:column="10"/></block> while <condition pos:line="145" pos:column="17">(<expr><literal type="number" pos:line="145" pos:column="18">1<pos:position pos:line="145" pos:column="19"/></literal></expr>)<pos:position pos:line="145" pos:column="20"/></condition>;<pos:position pos:line="145" pos:column="21"/></do>

        <if pos:line="147" pos:column="9">if <condition pos:line="147" pos:column="12">(<expr><name><name pos:line="147" pos:column="13">ccfg<pos:position pos:line="147" pos:column="17"/></name><operator pos:line="147" pos:column="17">-&gt;<pos:position pos:line="147" pos:column="22"/></operator><name pos:line="147" pos:column="19">tmpbb<pos:position pos:line="147" pos:column="24"/></name></name></expr>)<pos:position pos:line="147" pos:column="25"/></condition><then pos:line="147" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="148" pos:column="13">APR_BRIGADE_PREPEND<pos:position pos:line="148" pos:column="32"/></name><argument_list pos:line="148" pos:column="32">(<argument><expr><name pos:line="148" pos:column="33">bb<pos:position pos:line="148" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="148" pos:column="37">ccfg<pos:position pos:line="148" pos:column="41"/></name><operator pos:line="148" pos:column="41">-&gt;<pos:position pos:line="148" pos:column="46"/></operator><name pos:line="148" pos:column="43">tmpbb<pos:position pos:line="148" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="148" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="50"/></expr_stmt></block></then></if>

    }<pos:position pos:line="150" pos:column="6"/></block></then>
    <else pos:line="151" pos:column="5">else <block pos:line="151" pos:column="10">{
        <comment type="block" pos:line="152" pos:column="9">/* mode != AP_MODE_GETLINE */</comment>
        <expr_stmt><expr><name pos:line="153" pos:column="9">rv<pos:position pos:line="153" pos:column="11"/></name> <operator pos:line="153" pos:column="12">=<pos:position pos:line="153" pos:column="13"/></operator> <call><name pos:line="153" pos:column="14">ap_get_brigade<pos:position pos:line="153" pos:column="28"/></name><argument_list pos:line="153" pos:column="28">(<argument><expr><name><name pos:line="153" pos:column="29">f<pos:position pos:line="153" pos:column="30"/></name><operator pos:line="153" pos:column="30">-&gt;<pos:position pos:line="153" pos:column="35"/></operator><name pos:line="153" pos:column="32">next<pos:position pos:line="153" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="38">bb<pos:position pos:line="153" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="42">mode<pos:position pos:line="153" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="48">block<pos:position pos:line="153" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="55">readbytes<pos:position pos:line="153" pos:column="64"/></name></expr></argument>)<pos:position pos:line="153" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="66"/></expr_stmt>
        <comment type="block" pos:line="154" pos:column="9">/* Don't extend the timeout in speculative mode, wait for
         * the real (relevant) bytes to be asked later, within the
         * currently alloted time.
         */</comment>
        <if pos:line="158" pos:column="9">if <condition pos:line="158" pos:column="12">(<expr><name><name pos:line="158" pos:column="13">ccfg<pos:position pos:line="158" pos:column="17"/></name><operator pos:line="158" pos:column="17">-&gt;<pos:position pos:line="158" pos:column="22"/></operator><name pos:line="158" pos:column="19">min_rate<pos:position pos:line="158" pos:column="27"/></name></name> <operator pos:line="158" pos:column="28">&gt;<pos:position pos:line="158" pos:column="32"/></operator> <literal type="number" pos:line="158" pos:column="30">0<pos:position pos:line="158" pos:column="31"/></literal> <operator pos:line="158" pos:column="32">&amp;&amp;<pos:position pos:line="158" pos:column="42"/></operator> <name pos:line="158" pos:column="35">rv<pos:position pos:line="158" pos:column="37"/></name> <operator pos:line="158" pos:column="38">==<pos:position pos:line="158" pos:column="40"/></operator> <name pos:line="158" pos:column="41">APR_SUCCESS<pos:position pos:line="158" pos:column="52"/></name>
                <operator pos:line="159" pos:column="17">&amp;&amp;<pos:position pos:line="159" pos:column="27"/></operator> <name pos:line="159" pos:column="20">mode<pos:position pos:line="159" pos:column="24"/></name> <operator pos:line="159" pos:column="25">!=<pos:position pos:line="159" pos:column="27"/></operator> <name pos:line="159" pos:column="28">AP_MODE_SPECULATIVE<pos:position pos:line="159" pos:column="47"/></name></expr>)<pos:position pos:line="159" pos:column="48"/></condition><then pos:line="159" pos:column="48"> <block pos:line="159" pos:column="49">{
            <expr_stmt><expr><call><name pos:line="160" pos:column="13">extend_timeout<pos:position pos:line="160" pos:column="27"/></name><argument_list pos:line="160" pos:column="27">(<argument><expr><name pos:line="160" pos:column="28">ccfg<pos:position pos:line="160" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="34">bb<pos:position pos:line="160" pos:column="36"/></name></expr></argument>)<pos:position pos:line="160" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="161" pos:column="10"/></block></then></if>
    }<pos:position pos:line="162" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="164" pos:column="5">apr_socket_timeout_set<pos:position pos:line="164" pos:column="27"/></name><argument_list pos:line="164" pos:column="27">(<argument><expr><name><name pos:line="164" pos:column="28">ccfg<pos:position pos:line="164" pos:column="32"/></name><operator pos:line="164" pos:column="32">-&gt;<pos:position pos:line="164" pos:column="37"/></operator><name pos:line="164" pos:column="34">socket<pos:position pos:line="164" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="42">saved_sock_timeout<pos:position pos:line="164" pos:column="60"/></name></expr></argument>)<pos:position pos:line="164" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="62"/></expr_stmt>

<label><name pos:line="166" pos:column="1">out<pos:position pos:line="166" pos:column="4"/></name>:<pos:position pos:line="166" pos:column="5"/></label>
    <if pos:line="167" pos:column="5">if <condition pos:line="167" pos:column="8">(<expr><call><name pos:line="167" pos:column="9">APR_STATUS_IS_TIMEUP<pos:position pos:line="167" pos:column="29"/></name><argument_list pos:line="167" pos:column="29">(<argument><expr><name pos:line="167" pos:column="30">rv<pos:position pos:line="167" pos:column="32"/></name></expr></argument>)<pos:position pos:line="167" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="167" pos:column="34"/></condition><then pos:line="167" pos:column="34"> <block pos:line="167" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="168" pos:column="9">ap_log_cerror<pos:position pos:line="168" pos:column="22"/></name><argument_list pos:line="168" pos:column="22">(<argument><expr><name pos:line="168" pos:column="23">APLOG_MARK<pos:position pos:line="168" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="35">APLOG_INFO<pos:position pos:line="168" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="168" pos:column="47">0<pos:position pos:line="168" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="168" pos:column="50">f<pos:position pos:line="168" pos:column="51"/></name><operator pos:line="168" pos:column="51">-&gt;<pos:position pos:line="168" pos:column="56"/></operator><name pos:line="168" pos:column="53">c<pos:position pos:line="168" pos:column="54"/></name></name></expr></argument>, <argument><expr><call><name pos:line="168" pos:column="56">APLOGNO<pos:position pos:line="168" pos:column="63"/></name><argument_list pos:line="168" pos:column="63">(<argument><expr><literal type="number" pos:line="168" pos:column="64">01382<pos:position pos:line="168" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="70"/></argument_list></call>
                      <literal type="string" pos:line="169" pos:column="23">"Request %s read timeout"<pos:position pos:line="169" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="169" pos:column="50">ccfg<pos:position pos:line="169" pos:column="54"/></name><operator pos:line="169" pos:column="54">-&gt;<pos:position pos:line="169" pos:column="59"/></operator><name pos:line="169" pos:column="56">type<pos:position pos:line="169" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="169" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="62"/></expr_stmt>
        <comment type="block" pos:line="170" pos:column="9">/*
         * If we allow a normal lingering close, the client may keep this
         * process/thread busy for another 30s (MAX_SECS_TO_LINGER).
         * Therefore we tell ap_lingering_close() to shorten this period to
         * 2s (SECONDS_TO_LINGER).
         */</comment>
        <expr_stmt><expr><call><name pos:line="176" pos:column="9">apr_table_setn<pos:position pos:line="176" pos:column="23"/></name><argument_list pos:line="176" pos:column="23">(<argument><expr><name><name pos:line="176" pos:column="24">f<pos:position pos:line="176" pos:column="25"/></name><operator pos:line="176" pos:column="25">-&gt;<pos:position pos:line="176" pos:column="30"/></operator><name pos:line="176" pos:column="27">c<pos:position pos:line="176" pos:column="28"/></name><operator pos:line="176" pos:column="28">-&gt;<pos:position pos:line="176" pos:column="33"/></operator><name pos:line="176" pos:column="30">notes<pos:position pos:line="176" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="37">"short-lingering-close"<pos:position pos:line="176" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="62">"1"<pos:position pos:line="176" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="67"/></expr_stmt>

        <comment type="block" pos:line="178" pos:column="9">/*
         * Also, we must not allow keep-alive requests, as
         * ap_finalize_protocol() may ignore our error status (if the timeout
         * happened on a request body that is discarded).
         */</comment>
        <expr_stmt><expr><name><name pos:line="183" pos:column="9">f<pos:position pos:line="183" pos:column="10"/></name><operator pos:line="183" pos:column="10">-&gt;<pos:position pos:line="183" pos:column="15"/></operator><name pos:line="183" pos:column="12">c<pos:position pos:line="183" pos:column="13"/></name><operator pos:line="183" pos:column="13">-&gt;<pos:position pos:line="183" pos:column="18"/></operator><name pos:line="183" pos:column="15">keepalive<pos:position pos:line="183" pos:column="24"/></name></name> <operator pos:line="183" pos:column="25">=<pos:position pos:line="183" pos:column="26"/></operator> <name pos:line="183" pos:column="27">AP_CONN_CLOSE<pos:position pos:line="183" pos:column="40"/></name></expr>;<pos:position pos:line="183" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="184" pos:column="6"/></block></then></if>
    <return pos:line="185" pos:column="5">return <expr><name pos:line="185" pos:column="12">rv<pos:position pos:line="185" pos:column="14"/></name></expr>;<pos:position pos:line="185" pos:column="15"/></return>
}<pos:position pos:line="186" pos:column="2"/></block></function></unit>

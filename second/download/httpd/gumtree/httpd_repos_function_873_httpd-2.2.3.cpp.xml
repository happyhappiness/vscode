<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_873_httpd-2.2.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ssl_scache_init<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">server_rec<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">s<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">apr_pool_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">p<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SSLModConfigRec<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">mc<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">myModConfig<pos:position pos:line="3" pos:column="38"/></name><argument_list pos:line="3" pos:column="38">(<argument><expr><name pos:line="3" pos:column="39">s<pos:position pos:line="3" pos:column="40"/></name></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>

    <comment type="block" pos:line="5" pos:column="5">/*
     * Warn the user that he should use the session cache.
     * But we can operate without it, of course.
     */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">mc<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">nSessionCacheMode<pos:position pos:line="9" pos:column="30"/></name></name> <operator pos:line="9" pos:column="31">==<pos:position pos:line="9" pos:column="33"/></operator> <name pos:line="9" pos:column="34">SSL_SCMODE_UNSET<pos:position pos:line="9" pos:column="50"/></name></expr>)<pos:position pos:line="9" pos:column="51"/></condition><then pos:line="9" pos:column="51"> <block pos:line="9" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">ap_log_error<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">APLOG_MARK<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="34">APLOG_WARNING<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="49">0<pos:position pos:line="10" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="52">s<pos:position pos:line="10" pos:column="53"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="11" pos:column="22">"Init: Session Cache is not configured "<pos:position pos:line="11" pos:column="62"/></literal>
                     <literal type="string" pos:line="12" pos:column="22">"[hint: SSLSessionCache]"<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">mc<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">nSessionCacheMode<pos:position pos:line="13" pos:column="30"/></name></name> <operator pos:line="13" pos:column="31">=<pos:position pos:line="13" pos:column="32"/></operator> <name pos:line="13" pos:column="33">SSL_SCMODE_NONE<pos:position pos:line="13" pos:column="48"/></name></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt>
        <return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">mc<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">nSessionCacheMode<pos:position pos:line="17" pos:column="30"/></name></name> <operator pos:line="17" pos:column="31">==<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="34">SSL_SCMODE_DBM<pos:position pos:line="17" pos:column="48"/></name></expr>)<pos:position pos:line="17" pos:column="49"/></condition><then pos:line="17" pos:column="49">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="9">ssl_scache_dbm_init<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">s<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="32">p<pos:position pos:line="18" pos:column="33"/></name></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt></block></then>
<cpp:ifdef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifdef<pos:position pos:line="19" pos:column="7"/></cpp:directive> <name pos:line="19" pos:column="8">HAVE_DISTCACHE<pos:position pos:line="19" pos:column="22"/></name></cpp:ifdef>
    <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><name><name pos:line="20" pos:column="14">mc<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">nSessionCacheMode<pos:position pos:line="20" pos:column="35"/></name></name> <operator pos:line="20" pos:column="36">==<pos:position pos:line="20" pos:column="38"/></operator> <name pos:line="20" pos:column="39">SSL_SCMODE_DC<pos:position pos:line="20" pos:column="52"/></name></expr>)<pos:position pos:line="20" pos:column="53"/></condition><then pos:line="20" pos:column="53">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="9">ssl_scache_dc_init<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">s<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="31">p<pos:position pos:line="21" pos:column="32"/></name></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt></block></then></if></elseif>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
    <elseif pos:line="23" pos:column="5">else <if pos:line="23" pos:column="10">if <condition pos:line="23" pos:column="13">(<expr><name><name pos:line="23" pos:column="14">mc<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">nSessionCacheMode<pos:position pos:line="23" pos:column="35"/></name></name> <operator pos:line="23" pos:column="36">==<pos:position pos:line="23" pos:column="38"/></operator> <name pos:line="23" pos:column="39">SSL_SCMODE_SHMCB<pos:position pos:line="23" pos:column="55"/></name></expr>)<pos:position pos:line="23" pos:column="56"/></condition><then pos:line="23" pos:column="56"> <block pos:line="23" pos:column="57">{
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">void<pos:position pos:line="24" pos:column="13"/></name> <modifier pos:line="24" pos:column="14">*<pos:position pos:line="24" pos:column="15"/></modifier></type><name pos:line="24" pos:column="15">data<pos:position pos:line="24" pos:column="19"/></name></decl>;<pos:position pos:line="24" pos:column="20"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="25" pos:column="9">const<pos:position pos:line="25" pos:column="14"/></specifier> <name pos:line="25" pos:column="15">char<pos:position pos:line="25" pos:column="19"/></name> <modifier pos:line="25" pos:column="20">*<pos:position pos:line="25" pos:column="21"/></modifier></type><name pos:line="25" pos:column="21">userdata_key<pos:position pos:line="25" pos:column="33"/></name> <init pos:line="25" pos:column="34">= <expr><literal type="string" pos:line="25" pos:column="36">"ssl_scache_init"<pos:position pos:line="25" pos:column="53"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="54"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="27" pos:column="9">apr_pool_userdata_get<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><operator pos:line="27" pos:column="31">&amp;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="32">data<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="38">userdata_key<pos:position pos:line="27" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="52">s<pos:position pos:line="27" pos:column="53"/></name><operator pos:line="27" pos:column="53">-&gt;<pos:position pos:line="27" pos:column="58"/></operator><name pos:line="27" pos:column="55">process<pos:position pos:line="27" pos:column="62"/></name><operator pos:line="27" pos:column="62">-&gt;<pos:position pos:line="27" pos:column="67"/></operator><name pos:line="27" pos:column="64">pool<pos:position pos:line="27" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="70"/></expr_stmt>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">data<pos:position pos:line="28" pos:column="18"/></name></expr>)<pos:position pos:line="28" pos:column="19"/></condition><then pos:line="28" pos:column="19"> <block pos:line="28" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">apr_pool_userdata_set<pos:position pos:line="29" pos:column="34"/></name><argument_list pos:line="29" pos:column="34">(<argument><expr><operator pos:line="29" pos:column="35">(<pos:position pos:line="29" pos:column="36"/></operator><specifier pos:line="29" pos:column="36">const<pos:position pos:line="29" pos:column="41"/></specifier> <name pos:line="29" pos:column="42">void<pos:position pos:line="29" pos:column="46"/></name> <operator pos:line="29" pos:column="47">*<pos:position pos:line="29" pos:column="48"/></operator><operator pos:line="29" pos:column="48">)<pos:position pos:line="29" pos:column="49"/></operator><literal type="number" pos:line="29" pos:column="49">1<pos:position pos:line="29" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="52">userdata_key<pos:position pos:line="29" pos:column="64"/></name></expr></argument>,
                                  <argument><expr><name pos:line="30" pos:column="35">apr_pool_cleanup_null<pos:position pos:line="30" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="58">s<pos:position pos:line="30" pos:column="59"/></name><operator pos:line="30" pos:column="59">-&gt;<pos:position pos:line="30" pos:column="64"/></operator><name pos:line="30" pos:column="61">process<pos:position pos:line="30" pos:column="68"/></name><operator pos:line="30" pos:column="68">-&gt;<pos:position pos:line="30" pos:column="73"/></operator><name pos:line="30" pos:column="70">pool<pos:position pos:line="30" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="76"/></expr_stmt>
            <return pos:line="31" pos:column="13">return;<pos:position pos:line="31" pos:column="20"/></return>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">ssl_scache_shmcb_init<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">s<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="34">p<pos:position pos:line="33" pos:column="35"/></name></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if></elseif></if>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_876_httpd-2.4.12.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ssl_callback_SSLVerify<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">ok<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">X509_STORE_CTX<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">ctx<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/* Get Apache context back through OpenSSL context */</comment>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SSL<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">ssl<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><call><name pos:line="4" pos:column="16">X509_STORE_CTX_get_ex_data<pos:position pos:line="4" pos:column="42"/></name><argument_list pos:line="4" pos:column="42">(<argument><expr><name pos:line="4" pos:column="43">ctx<pos:position pos:line="4" pos:column="46"/></name></expr></argument>,
                                          <argument><expr><call><name pos:line="5" pos:column="43">SSL_get_ex_data_X509_STORE_CTX_idx<pos:position pos:line="5" pos:column="77"/></name><argument_list pos:line="5" pos:column="77">()<pos:position pos:line="5" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="81"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">conn_rec<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">conn<pos:position pos:line="6" pos:column="19"/></name>      <init pos:line="6" pos:column="25">= <expr><operator pos:line="6" pos:column="27">(<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">conn_rec<pos:position pos:line="6" pos:column="36"/></name> <operator pos:line="6" pos:column="37">*<pos:position pos:line="6" pos:column="38"/></operator><operator pos:line="6" pos:column="38">)<pos:position pos:line="6" pos:column="39"/></operator><call><name pos:line="6" pos:column="39">SSL_get_app_data<pos:position pos:line="6" pos:column="55"/></name><argument_list pos:line="6" pos:column="55">(<argument><expr><name pos:line="6" pos:column="56">ssl<pos:position pos:line="6" pos:column="59"/></name></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="61"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">request_rec<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">r<pos:position pos:line="7" pos:column="19"/></name>      <init pos:line="7" pos:column="25">= <expr><operator pos:line="7" pos:column="27">(<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="28">request_rec<pos:position pos:line="7" pos:column="39"/></name> <operator pos:line="7" pos:column="40">*<pos:position pos:line="7" pos:column="41"/></operator><operator pos:line="7" pos:column="41">)<pos:position pos:line="7" pos:column="42"/></operator><call><name pos:line="7" pos:column="42">SSL_get_app_data2<pos:position pos:line="7" pos:column="59"/></name><argument_list pos:line="7" pos:column="59">(<argument><expr><name pos:line="7" pos:column="60">ssl<pos:position pos:line="7" pos:column="63"/></name></expr></argument>)<pos:position pos:line="7" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="65"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">server_rec<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">s<pos:position pos:line="8" pos:column="18"/></name>       <init pos:line="8" pos:column="25">= <expr><ternary><condition><expr><name pos:line="8" pos:column="27">r<pos:position pos:line="8" pos:column="28"/></name></expr> ?<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30"> <expr><name><name pos:line="8" pos:column="31">r<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">server<pos:position pos:line="8" pos:column="40"/></name></name></expr> <pos:position pos:line="8" pos:column="41"/></then><else pos:line="8" pos:column="41">: <expr><call><name pos:line="8" pos:column="43">mySrvFromConn<pos:position pos:line="8" pos:column="56"/></name><argument_list pos:line="8" pos:column="56">(<argument><expr><name pos:line="8" pos:column="57">conn<pos:position pos:line="8" pos:column="61"/></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="8" pos:column="63"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">SSLSrvConfigRec<pos:position pos:line="10" pos:column="20"/></name> <modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier></type><name pos:line="10" pos:column="22">sc<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><call><name pos:line="10" pos:column="27">mySrvConfig<pos:position pos:line="10" pos:column="38"/></name><argument_list pos:line="10" pos:column="38">(<argument><expr><name pos:line="10" pos:column="39">s<pos:position pos:line="10" pos:column="40"/></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">SSLDirConfigRec<pos:position pos:line="11" pos:column="20"/></name> <modifier pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></modifier></type><name pos:line="11" pos:column="22">dc<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><ternary><condition><expr><name pos:line="11" pos:column="27">r<pos:position pos:line="11" pos:column="28"/></name></expr> ?<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30"> <expr><call><name pos:line="11" pos:column="31">myDirConfig<pos:position pos:line="11" pos:column="42"/></name><argument_list pos:line="11" pos:column="42">(<argument><expr><name pos:line="11" pos:column="43">r<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr> <pos:position pos:line="11" pos:column="46"/></then><else pos:line="11" pos:column="46">: <expr><name pos:line="11" pos:column="48">NULL<pos:position pos:line="11" pos:column="52"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="11" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">SSLConnRec<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">sslconn<pos:position pos:line="12" pos:column="24"/></name> <init pos:line="12" pos:column="25">= <expr><call><name pos:line="12" pos:column="27">myConnConfig<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">conn<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">modssl_ctx_t<pos:position pos:line="13" pos:column="17"/></name> <modifier pos:line="13" pos:column="18">*<pos:position pos:line="13" pos:column="19"/></modifier></type><name pos:line="13" pos:column="19">mctx<pos:position pos:line="13" pos:column="23"/></name>  <init pos:line="13" pos:column="25">= <expr><call><name pos:line="13" pos:column="27">myCtxConfig<pos:position pos:line="13" pos:column="38"/></name><argument_list pos:line="13" pos:column="38">(<argument><expr><name pos:line="13" pos:column="39">sslconn<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">sc<pos:position pos:line="13" pos:column="50"/></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="52"/></decl_stmt>

    <comment type="block" pos:line="15" pos:column="5">/* Get verify ingredients */</comment>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">errnum<pos:position pos:line="16" pos:column="15"/></name>   <init pos:line="16" pos:column="18">= <expr><call><name pos:line="16" pos:column="20">X509_STORE_CTX_get_error<pos:position pos:line="16" pos:column="44"/></name><argument_list pos:line="16" pos:column="44">(<argument><expr><name pos:line="16" pos:column="45">ctx<pos:position pos:line="16" pos:column="48"/></name></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">errdepth<pos:position pos:line="17" pos:column="17"/></name> <init pos:line="17" pos:column="18">= <expr><call><name pos:line="17" pos:column="20">X509_STORE_CTX_get_error_depth<pos:position pos:line="17" pos:column="50"/></name><argument_list pos:line="17" pos:column="50">(<argument><expr><name pos:line="17" pos:column="51">ctx<pos:position pos:line="17" pos:column="54"/></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">depth<pos:position pos:line="18" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="18" pos:column="16">verify<pos:position pos:line="18" pos:column="22"/></name></decl>;<pos:position pos:line="18" pos:column="23"/></decl_stmt>

    <comment type="block" pos:line="20" pos:column="5">/*
     * Log verification information
     */</comment>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ssl_log_cxerror<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">SSLLOG_MARK<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">APLOG_DEBUG<pos:position pos:line="23" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="47">0<pos:position pos:line="23" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="50">conn<pos:position pos:line="23" pos:column="54"/></name></expr></argument>,
                    <argument><expr><call><name pos:line="24" pos:column="21">X509_STORE_CTX_get_current_cert<pos:position pos:line="24" pos:column="52"/></name><argument_list pos:line="24" pos:column="52">(<argument><expr><name pos:line="24" pos:column="53">ctx<pos:position pos:line="24" pos:column="56"/></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="59">APLOGNO<pos:position pos:line="24" pos:column="66"/></name><argument_list pos:line="24" pos:column="66">(<argument><expr><literal type="number" pos:line="24" pos:column="67">02275<pos:position pos:line="24" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="73"/></argument_list></call>
                    <literal type="string" pos:line="25" pos:column="21">"Certificate Verification, depth %d, "<pos:position pos:line="25" pos:column="59"/></literal>
                    <literal type="string" pos:line="26" pos:column="21">"CRL checking mode: %s"<pos:position pos:line="26" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="46">errdepth<pos:position pos:line="26" pos:column="54"/></name></expr></argument>,
                    <argument><expr><ternary><condition><expr><name><name pos:line="27" pos:column="21">mctx<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">-&gt;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="27">crl_check_mode<pos:position pos:line="27" pos:column="41"/></name></name> <operator pos:line="27" pos:column="42">==<pos:position pos:line="27" pos:column="44"/></operator> <name pos:line="27" pos:column="45">SSL_CRLCHECK_CHAIN<pos:position pos:line="27" pos:column="63"/></name></expr> ?<pos:position pos:line="27" pos:column="65"/></condition><then pos:line="27" pos:column="65">
                    <expr><literal type="string" pos:line="28" pos:column="21">"chain"<pos:position pos:line="28" pos:column="28"/></literal></expr> <pos:position pos:line="28" pos:column="29"/></then><else pos:line="28" pos:column="29">: <expr><operator pos:line="28" pos:column="31">(<pos:position pos:line="28" pos:column="32"/></operator><ternary><condition><expr><name><name pos:line="28" pos:column="32">mctx<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">-&gt;<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="38">crl_check_mode<pos:position pos:line="28" pos:column="52"/></name></name> <operator pos:line="28" pos:column="53">==<pos:position pos:line="28" pos:column="55"/></operator> <name pos:line="28" pos:column="56">SSL_CRLCHECK_LEAF<pos:position pos:line="28" pos:column="73"/></name></expr> ?<pos:position pos:line="28" pos:column="75"/></condition><then pos:line="28" pos:column="75">
                               <expr><literal type="string" pos:line="29" pos:column="32">"leaf"<pos:position pos:line="29" pos:column="38"/></literal></expr> <pos:position pos:line="29" pos:column="39"/></then><else pos:line="29" pos:column="39">: <expr><literal type="string" pos:line="29" pos:column="41">"none"<pos:position pos:line="29" pos:column="47"/></literal></expr></else></ternary><operator pos:line="29" pos:column="47">)<pos:position pos:line="29" pos:column="48"/></operator></expr></else></ternary></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="31" pos:column="5">/*
     * Check for optionally acceptable non-verifiable issuer situation
     */</comment>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">dc<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">&amp;&amp;<pos:position pos:line="34" pos:column="22"/></operator> <operator pos:line="34" pos:column="15">(<pos:position pos:line="34" pos:column="16"/></operator><name><name pos:line="34" pos:column="16">dc<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">-&gt;<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="20">nVerifyClient<pos:position pos:line="34" pos:column="33"/></name></name> <operator pos:line="34" pos:column="34">!=<pos:position pos:line="34" pos:column="36"/></operator> <name pos:line="34" pos:column="37">SSL_CVERIFY_UNSET<pos:position pos:line="34" pos:column="54"/></name><operator pos:line="34" pos:column="54">)<pos:position pos:line="34" pos:column="55"/></operator></expr>)<pos:position pos:line="34" pos:column="56"/></condition><then pos:line="34" pos:column="56"> <block pos:line="34" pos:column="57">{
        <expr_stmt><expr><name pos:line="35" pos:column="9">verify<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <name><name pos:line="35" pos:column="18">dc<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">-&gt;<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="22">nVerifyClient<pos:position pos:line="35" pos:column="35"/></name></name></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then>
    <else pos:line="37" pos:column="5">else <block pos:line="37" pos:column="10">{
        <expr_stmt><expr><name pos:line="38" pos:column="9">verify<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <name><name pos:line="38" pos:column="18">mctx<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-&gt;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="24">auth<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">.<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="29">verify_mode<pos:position pos:line="38" pos:column="40"/></name></name></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></else></if>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">verify<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">==<pos:position pos:line="41" pos:column="18"/></operator> <name pos:line="41" pos:column="19">SSL_CVERIFY_NONE<pos:position pos:line="41" pos:column="35"/></name></expr>)<pos:position pos:line="41" pos:column="36"/></condition><then pos:line="41" pos:column="36"> <block pos:line="41" pos:column="37">{
        <comment type="block" pos:line="42" pos:column="9">/*
         * SSLProxyVerify is either not configured or set to "none".
         * (this callback doesn't happen in the server context if SSLVerify
         *  is not configured or set to "none")
         */</comment>
        <return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">TRUE<pos:position pos:line="47" pos:column="20"/></name></expr>;<pos:position pos:line="47" pos:column="21"/></return>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><call><name pos:line="50" pos:column="9">ssl_verify_error_is_optional<pos:position pos:line="50" pos:column="37"/></name><argument_list pos:line="50" pos:column="37">(<argument><expr><name pos:line="50" pos:column="38">errnum<pos:position pos:line="50" pos:column="44"/></name></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call> <operator pos:line="50" pos:column="46">&amp;&amp;<pos:position pos:line="50" pos:column="56"/></operator>
        <operator pos:line="51" pos:column="9">(<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">verify<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">==<pos:position pos:line="51" pos:column="19"/></operator> <name pos:line="51" pos:column="20">SSL_CVERIFY_OPTIONAL_NO_CA<pos:position pos:line="51" pos:column="46"/></name><operator pos:line="51" pos:column="46">)<pos:position pos:line="51" pos:column="47"/></operator></expr>)<pos:position pos:line="51" pos:column="48"/></condition><then pos:line="51" pos:column="48">
    <block pos:line="52" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">ap_log_cerror<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">APLOG_MARK<pos:position pos:line="53" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="35">APLOG_DEBUG<pos:position pos:line="53" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="48">0<pos:position pos:line="53" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="51">conn<pos:position pos:line="53" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="57">APLOGNO<pos:position pos:line="53" pos:column="64"/></name><argument_list pos:line="53" pos:column="64">(<argument><expr><literal type="number" pos:line="53" pos:column="65">02037<pos:position pos:line="53" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="71"/></argument_list></call>
                      <literal type="string" pos:line="54" pos:column="23">"Certificate Verification: Verifiable Issuer is "<pos:position pos:line="54" pos:column="72"/></literal>
                      <literal type="string" pos:line="55" pos:column="23">"configured as optional, therefore we're accepting "<pos:position pos:line="55" pos:column="75"/></literal>
                      <literal type="string" pos:line="56" pos:column="23">"the certificate"<pos:position pos:line="56" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="42"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="58" pos:column="9">sslconn<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">-&gt;<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="18">verify_info<pos:position pos:line="58" pos:column="29"/></name></name> <operator pos:line="58" pos:column="30">=<pos:position pos:line="58" pos:column="31"/></operator> <literal type="string" pos:line="58" pos:column="32">"GENEROUS"<pos:position pos:line="58" pos:column="42"/></literal></expr>;<pos:position pos:line="58" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name pos:line="59" pos:column="9">ok<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">=<pos:position pos:line="59" pos:column="13"/></operator> <name pos:line="59" pos:column="14">TRUE<pos:position pos:line="59" pos:column="18"/></name></expr>;<pos:position pos:line="59" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="62" pos:column="5">/*
     * Expired certificates vs. "expired" CRLs: by default, OpenSSL
     * turns X509_V_ERR_CRL_HAS_EXPIRED into a "certificate_expired(45)"
     * SSL alert, but that's not really the message we should convey to the
     * peer (at the very least, it's confusing, and in many cases, it's also
     * inaccurate, as the certificate itself may very well not have expired
     * yet). We set the X509_STORE_CTX error to something which OpenSSL's
     * s3_both.c:ssl_verify_alarm_type() maps to SSL_AD_CERTIFICATE_UNKNOWN,
     * i.e. the peer will receive a "certificate_unknown(46)" alert.
     * We do not touch errnum, though, so that later on we will still log
     * the "real" error, as returned by OpenSSL.
     */</comment>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><operator pos:line="74" pos:column="9">!<pos:position pos:line="74" pos:column="10"/></operator><name pos:line="74" pos:column="10">ok<pos:position pos:line="74" pos:column="12"/></name> <operator pos:line="74" pos:column="13">&amp;&amp;<pos:position pos:line="74" pos:column="23"/></operator> <name pos:line="74" pos:column="16">errnum<pos:position pos:line="74" pos:column="22"/></name> <operator pos:line="74" pos:column="23">==<pos:position pos:line="74" pos:column="25"/></operator> <name pos:line="74" pos:column="26">X509_V_ERR_CRL_HAS_EXPIRED<pos:position pos:line="74" pos:column="52"/></name></expr>)<pos:position pos:line="74" pos:column="53"/></condition><then pos:line="74" pos:column="53"> <block pos:line="74" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">X509_STORE_CTX_set_error<pos:position pos:line="75" pos:column="33"/></name><argument_list pos:line="75" pos:column="33">(<argument><expr><name pos:line="75" pos:column="34">ctx<pos:position pos:line="75" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="39">-<pos:position pos:line="75" pos:column="40"/></operator><literal type="number" pos:line="75" pos:column="40">1<pos:position pos:line="75" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>

<cpp:ifndef pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">ifndef<pos:position pos:line="78" pos:column="8"/></cpp:directive> <name pos:line="78" pos:column="9">OPENSSL_NO_OCSP<pos:position pos:line="78" pos:column="24"/></name></cpp:ifndef>
    <comment type="block" pos:line="79" pos:column="5">/*
     * Perform OCSP-based revocation checks
     */</comment>
    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><name pos:line="82" pos:column="9">ok<pos:position pos:line="82" pos:column="11"/></name> <operator pos:line="82" pos:column="12">&amp;&amp;<pos:position pos:line="82" pos:column="22"/></operator> <name><name pos:line="82" pos:column="15">sc<pos:position pos:line="82" pos:column="17"/></name><operator pos:line="82" pos:column="17">-&gt;<pos:position pos:line="82" pos:column="22"/></operator><name pos:line="82" pos:column="19">server<pos:position pos:line="82" pos:column="25"/></name><operator pos:line="82" pos:column="25">-&gt;<pos:position pos:line="82" pos:column="30"/></operator><name pos:line="82" pos:column="27">ocsp_enabled<pos:position pos:line="82" pos:column="39"/></name></name></expr>)<pos:position pos:line="82" pos:column="40"/></condition><then pos:line="82" pos:column="40"> <block pos:line="82" pos:column="41">{
        <comment type="block" pos:line="83" pos:column="9">/* If there was an optional verification error, it's not
         * possible to perform OCSP validation since the issuer may be
         * missing/untrusted.  Fail in that case. */</comment>
        <if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><call><name pos:line="86" pos:column="13">ssl_verify_error_is_optional<pos:position pos:line="86" pos:column="41"/></name><argument_list pos:line="86" pos:column="41">(<argument><expr><name pos:line="86" pos:column="42">errnum<pos:position pos:line="86" pos:column="48"/></name></expr></argument>)<pos:position pos:line="86" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="50"/></condition><then pos:line="86" pos:column="50"> <block pos:line="86" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">X509_STORE_CTX_set_error<pos:position pos:line="87" pos:column="37"/></name><argument_list pos:line="87" pos:column="37">(<argument><expr><name pos:line="87" pos:column="38">ctx<pos:position pos:line="87" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="43">X509_V_ERR_APPLICATION_VERIFICATION<pos:position pos:line="87" pos:column="78"/></name></expr></argument>)<pos:position pos:line="87" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><name pos:line="88" pos:column="13">errnum<pos:position pos:line="88" pos:column="19"/></name> <operator pos:line="88" pos:column="20">=<pos:position pos:line="88" pos:column="21"/></operator> <name pos:line="88" pos:column="22">X509_V_ERR_APPLICATION_VERIFICATION<pos:position pos:line="88" pos:column="57"/></name></expr>;<pos:position pos:line="88" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">ap_log_cerror<pos:position pos:line="89" pos:column="26"/></name><argument_list pos:line="89" pos:column="26">(<argument><expr><name pos:line="89" pos:column="27">APLOG_MARK<pos:position pos:line="89" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="39">APLOG_ERR<pos:position pos:line="89" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="50">0<pos:position pos:line="89" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="53">conn<pos:position pos:line="89" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="89" pos:column="59">APLOGNO<pos:position pos:line="89" pos:column="66"/></name><argument_list pos:line="89" pos:column="66">(<argument><expr><literal type="number" pos:line="89" pos:column="67">02038<pos:position pos:line="89" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="73"/></argument_list></call>
                          <literal type="string" pos:line="90" pos:column="27">"cannot perform OCSP validation for cert "<pos:position pos:line="90" pos:column="69"/></literal>
                          <literal type="string" pos:line="91" pos:column="27">"if issuer has not been verified "<pos:position pos:line="91" pos:column="61"/></literal>
                          <literal type="string" pos:line="92" pos:column="27">"(optional_no_ca configured)"<pos:position pos:line="92" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name pos:line="93" pos:column="13">ok<pos:position pos:line="93" pos:column="15"/></name> <operator pos:line="93" pos:column="16">=<pos:position pos:line="93" pos:column="17"/></operator> <name pos:line="93" pos:column="18">FALSE<pos:position pos:line="93" pos:column="23"/></name></expr>;<pos:position pos:line="93" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="94" pos:column="10"/></block></then> <else pos:line="94" pos:column="11">else <block pos:line="94" pos:column="16">{
            <expr_stmt><expr><name pos:line="95" pos:column="13">ok<pos:position pos:line="95" pos:column="15"/></name> <operator pos:line="95" pos:column="16">=<pos:position pos:line="95" pos:column="17"/></operator> <call><name pos:line="95" pos:column="18">modssl_verify_ocsp<pos:position pos:line="95" pos:column="36"/></name><argument_list pos:line="95" pos:column="36">(<argument><expr><name pos:line="95" pos:column="37">ctx<pos:position pos:line="95" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="42">sc<pos:position pos:line="95" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="46">s<pos:position pos:line="95" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="49">conn<pos:position pos:line="95" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="55">conn<pos:position pos:line="95" pos:column="59"/></name><operator pos:line="95" pos:column="59">-&gt;<pos:position pos:line="95" pos:column="64"/></operator><name pos:line="95" pos:column="61">pool<pos:position pos:line="95" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="67"/></expr_stmt>
            <if pos:line="96" pos:column="13">if <condition pos:line="96" pos:column="16">(<expr><operator pos:line="96" pos:column="17">!<pos:position pos:line="96" pos:column="18"/></operator><name pos:line="96" pos:column="18">ok<pos:position pos:line="96" pos:column="20"/></name></expr>)<pos:position pos:line="96" pos:column="21"/></condition><then pos:line="96" pos:column="21"> <block pos:line="96" pos:column="22">{
                <expr_stmt><expr><name pos:line="97" pos:column="17">errnum<pos:position pos:line="97" pos:column="23"/></name> <operator pos:line="97" pos:column="24">=<pos:position pos:line="97" pos:column="25"/></operator> <call><name pos:line="97" pos:column="26">X509_STORE_CTX_get_error<pos:position pos:line="97" pos:column="50"/></name><argument_list pos:line="97" pos:column="50">(<argument><expr><name pos:line="97" pos:column="51">ctx<pos:position pos:line="97" pos:column="54"/></name></expr></argument>)<pos:position pos:line="97" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="98" pos:column="14"/></block></then></if>
        }<pos:position pos:line="99" pos:column="10"/></block></else></if>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>
<cpp:endif pos:line="101" pos:column="1">#<cpp:directive pos:line="101" pos:column="2">endif<pos:position pos:line="101" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="103" pos:column="5">/*
     * If we already know it's not ok, log the real reason
     */</comment>
    <if pos:line="106" pos:column="5">if <condition pos:line="106" pos:column="8">(<expr><operator pos:line="106" pos:column="9">!<pos:position pos:line="106" pos:column="10"/></operator><name pos:line="106" pos:column="10">ok<pos:position pos:line="106" pos:column="12"/></name></expr>)<pos:position pos:line="106" pos:column="13"/></condition><then pos:line="106" pos:column="13"> <block pos:line="106" pos:column="14">{
        <if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><call><name pos:line="107" pos:column="13">APLOGcinfo<pos:position pos:line="107" pos:column="23"/></name><argument_list pos:line="107" pos:column="23">(<argument><expr><name pos:line="107" pos:column="24">conn<pos:position pos:line="107" pos:column="28"/></name></expr></argument>)<pos:position pos:line="107" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="107" pos:column="30"/></condition><then pos:line="107" pos:column="30"> <block pos:line="107" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="108" pos:column="13">ssl_log_cxerror<pos:position pos:line="108" pos:column="28"/></name><argument_list pos:line="108" pos:column="28">(<argument><expr><name pos:line="108" pos:column="29">SSLLOG_MARK<pos:position pos:line="108" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="42">APLOG_INFO<pos:position pos:line="108" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="54">0<pos:position pos:line="108" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="108" pos:column="57">conn<pos:position pos:line="108" pos:column="61"/></name></expr></argument>,
                            <argument><expr><call><name pos:line="109" pos:column="29">X509_STORE_CTX_get_current_cert<pos:position pos:line="109" pos:column="60"/></name><argument_list pos:line="109" pos:column="60">(<argument><expr><name pos:line="109" pos:column="61">ctx<pos:position pos:line="109" pos:column="64"/></name></expr></argument>)<pos:position pos:line="109" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="109" pos:column="67">APLOGNO<pos:position pos:line="109" pos:column="74"/></name><argument_list pos:line="109" pos:column="74">(<argument><expr><literal type="number" pos:line="109" pos:column="75">02276<pos:position pos:line="109" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="81"/></argument_list></call>
                            <literal type="string" pos:line="110" pos:column="29">"Certificate Verification: Error (%d): %s"<pos:position pos:line="110" pos:column="71"/></literal></expr></argument>,
                            <argument><expr><name pos:line="111" pos:column="29">errnum<pos:position pos:line="111" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="111" pos:column="37">X509_verify_cert_error_string<pos:position pos:line="111" pos:column="66"/></name><argument_list pos:line="111" pos:column="66">(<argument><expr><name pos:line="111" pos:column="67">errnum<pos:position pos:line="111" pos:column="73"/></name></expr></argument>)<pos:position pos:line="111" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="112" pos:column="10"/></block></then> <else pos:line="112" pos:column="11">else <block pos:line="112" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="113" pos:column="13">ap_log_cerror<pos:position pos:line="113" pos:column="26"/></name><argument_list pos:line="113" pos:column="26">(<argument><expr><name pos:line="113" pos:column="27">APLOG_MARK<pos:position pos:line="113" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="39">APLOG_ERR<pos:position pos:line="113" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="113" pos:column="50">0<pos:position pos:line="113" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="113" pos:column="53">conn<pos:position pos:line="113" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="113" pos:column="59">APLOGNO<pos:position pos:line="113" pos:column="66"/></name><argument_list pos:line="113" pos:column="66">(<argument><expr><literal type="number" pos:line="113" pos:column="67">02039<pos:position pos:line="113" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="73"/></argument_list></call>
                          <literal type="string" pos:line="114" pos:column="27">"Certificate Verification: Error (%d): %s"<pos:position pos:line="114" pos:column="69"/></literal></expr></argument>,
                          <argument><expr><name pos:line="115" pos:column="27">errnum<pos:position pos:line="115" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="115" pos:column="35">X509_verify_cert_error_string<pos:position pos:line="115" pos:column="64"/></name><argument_list pos:line="115" pos:column="64">(<argument><expr><name pos:line="115" pos:column="65">errnum<pos:position pos:line="115" pos:column="71"/></name></expr></argument>)<pos:position pos:line="115" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="115" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="116" pos:column="10"/></block></else></if>

        <if pos:line="118" pos:column="9">if <condition pos:line="118" pos:column="12">(<expr><name><name pos:line="118" pos:column="13">sslconn<pos:position pos:line="118" pos:column="20"/></name><operator pos:line="118" pos:column="20">-&gt;<pos:position pos:line="118" pos:column="25"/></operator><name pos:line="118" pos:column="22">client_cert<pos:position pos:line="118" pos:column="33"/></name></name></expr>)<pos:position pos:line="118" pos:column="34"/></condition><then pos:line="118" pos:column="34"> <block pos:line="118" pos:column="35">{
            <expr_stmt><expr><call><name pos:line="119" pos:column="13">X509_free<pos:position pos:line="119" pos:column="22"/></name><argument_list pos:line="119" pos:column="22">(<argument><expr><name><name pos:line="119" pos:column="23">sslconn<pos:position pos:line="119" pos:column="30"/></name><operator pos:line="119" pos:column="30">-&gt;<pos:position pos:line="119" pos:column="35"/></operator><name pos:line="119" pos:column="32">client_cert<pos:position pos:line="119" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="119" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="120" pos:column="13">sslconn<pos:position pos:line="120" pos:column="20"/></name><operator pos:line="120" pos:column="20">-&gt;<pos:position pos:line="120" pos:column="25"/></operator><name pos:line="120" pos:column="22">client_cert<pos:position pos:line="120" pos:column="33"/></name></name> <operator pos:line="120" pos:column="34">=<pos:position pos:line="120" pos:column="35"/></operator> <name pos:line="120" pos:column="36">NULL<pos:position pos:line="120" pos:column="40"/></name></expr>;<pos:position pos:line="120" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="121" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="122" pos:column="9">sslconn<pos:position pos:line="122" pos:column="16"/></name><operator pos:line="122" pos:column="16">-&gt;<pos:position pos:line="122" pos:column="21"/></operator><name pos:line="122" pos:column="18">client_dn<pos:position pos:line="122" pos:column="27"/></name></name> <operator pos:line="122" pos:column="28">=<pos:position pos:line="122" pos:column="29"/></operator> <name pos:line="122" pos:column="30">NULL<pos:position pos:line="122" pos:column="34"/></name></expr>;<pos:position pos:line="122" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="123" pos:column="9">sslconn<pos:position pos:line="123" pos:column="16"/></name><operator pos:line="123" pos:column="16">-&gt;<pos:position pos:line="123" pos:column="21"/></operator><name pos:line="123" pos:column="18">verify_error<pos:position pos:line="123" pos:column="30"/></name></name> <operator pos:line="123" pos:column="31">=<pos:position pos:line="123" pos:column="32"/></operator> <call><name pos:line="123" pos:column="33">X509_verify_cert_error_string<pos:position pos:line="123" pos:column="62"/></name><argument_list pos:line="123" pos:column="62">(<argument><expr><name pos:line="123" pos:column="63">errnum<pos:position pos:line="123" pos:column="69"/></name></expr></argument>)<pos:position pos:line="123" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="124" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="126" pos:column="5">/*
     * Finally check the depth of the certificate verification
     */</comment>
    <if pos:line="129" pos:column="5">if <condition pos:line="129" pos:column="8">(<expr><name pos:line="129" pos:column="9">dc<pos:position pos:line="129" pos:column="11"/></name> <operator pos:line="129" pos:column="12">&amp;&amp;<pos:position pos:line="129" pos:column="22"/></operator> <operator pos:line="129" pos:column="15">(<pos:position pos:line="129" pos:column="16"/></operator><name><name pos:line="129" pos:column="16">dc<pos:position pos:line="129" pos:column="18"/></name><operator pos:line="129" pos:column="18">-&gt;<pos:position pos:line="129" pos:column="23"/></operator><name pos:line="129" pos:column="20">nVerifyDepth<pos:position pos:line="129" pos:column="32"/></name></name> <operator pos:line="129" pos:column="33">!=<pos:position pos:line="129" pos:column="35"/></operator> <name pos:line="129" pos:column="36">UNSET<pos:position pos:line="129" pos:column="41"/></name><operator pos:line="129" pos:column="41">)<pos:position pos:line="129" pos:column="42"/></operator></expr>)<pos:position pos:line="129" pos:column="43"/></condition><then pos:line="129" pos:column="43"> <block pos:line="129" pos:column="44">{
        <expr_stmt><expr><name pos:line="130" pos:column="9">depth<pos:position pos:line="130" pos:column="14"/></name> <operator pos:line="130" pos:column="15">=<pos:position pos:line="130" pos:column="16"/></operator> <name><name pos:line="130" pos:column="17">dc<pos:position pos:line="130" pos:column="19"/></name><operator pos:line="130" pos:column="19">-&gt;<pos:position pos:line="130" pos:column="24"/></operator><name pos:line="130" pos:column="21">nVerifyDepth<pos:position pos:line="130" pos:column="33"/></name></name></expr>;<pos:position pos:line="130" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="131" pos:column="6"/></block></then>
    <else pos:line="132" pos:column="5">else <block pos:line="132" pos:column="10">{
        <expr_stmt><expr><name pos:line="133" pos:column="9">depth<pos:position pos:line="133" pos:column="14"/></name> <operator pos:line="133" pos:column="15">=<pos:position pos:line="133" pos:column="16"/></operator> <name><name pos:line="133" pos:column="17">mctx<pos:position pos:line="133" pos:column="21"/></name><operator pos:line="133" pos:column="21">-&gt;<pos:position pos:line="133" pos:column="26"/></operator><name pos:line="133" pos:column="23">auth<pos:position pos:line="133" pos:column="27"/></name><operator pos:line="133" pos:column="27">.<pos:position pos:line="133" pos:column="28"/></operator><name pos:line="133" pos:column="28">verify_depth<pos:position pos:line="133" pos:column="40"/></name></name></expr>;<pos:position pos:line="133" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="134" pos:column="6"/></block></else></if>

    <if pos:line="136" pos:column="5">if <condition pos:line="136" pos:column="8">(<expr><name pos:line="136" pos:column="9">errdepth<pos:position pos:line="136" pos:column="17"/></name> <operator pos:line="136" pos:column="18">&gt;<pos:position pos:line="136" pos:column="22"/></operator> <name pos:line="136" pos:column="20">depth<pos:position pos:line="136" pos:column="25"/></name></expr>)<pos:position pos:line="136" pos:column="26"/></condition><then pos:line="136" pos:column="26"> <block pos:line="136" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="137" pos:column="9">ap_log_cerror<pos:position pos:line="137" pos:column="22"/></name><argument_list pos:line="137" pos:column="22">(<argument><expr><name pos:line="137" pos:column="23">APLOG_MARK<pos:position pos:line="137" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="35">APLOG_ERR<pos:position pos:line="137" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="137" pos:column="46">0<pos:position pos:line="137" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="137" pos:column="49">conn<pos:position pos:line="137" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="137" pos:column="55">APLOGNO<pos:position pos:line="137" pos:column="62"/></name><argument_list pos:line="137" pos:column="62">(<argument><expr><literal type="number" pos:line="137" pos:column="63">02040<pos:position pos:line="137" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="69"/></argument_list></call>
                      <literal type="string" pos:line="138" pos:column="23">"Certificate Verification: Certificate Chain too long "<pos:position pos:line="138" pos:column="78"/></literal>
                      <literal type="string" pos:line="139" pos:column="23">"(chain has %d certificates, but maximum allowed are "<pos:position pos:line="139" pos:column="77"/></literal>
                      <literal type="string" pos:line="140" pos:column="23">"only %d)"<pos:position pos:line="140" pos:column="33"/></literal></expr></argument>,
                      <argument><expr><name pos:line="141" pos:column="23">errdepth<pos:position pos:line="141" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="33">depth<pos:position pos:line="141" pos:column="38"/></name></expr></argument>)<pos:position pos:line="141" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="40"/></expr_stmt>

        <expr_stmt><expr><name pos:line="143" pos:column="9">errnum<pos:position pos:line="143" pos:column="15"/></name> <operator pos:line="143" pos:column="16">=<pos:position pos:line="143" pos:column="17"/></operator> <name pos:line="143" pos:column="18">X509_V_ERR_CERT_CHAIN_TOO_LONG<pos:position pos:line="143" pos:column="48"/></name></expr>;<pos:position pos:line="143" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="144" pos:column="9">sslconn<pos:position pos:line="144" pos:column="16"/></name><operator pos:line="144" pos:column="16">-&gt;<pos:position pos:line="144" pos:column="21"/></operator><name pos:line="144" pos:column="18">verify_error<pos:position pos:line="144" pos:column="30"/></name></name> <operator pos:line="144" pos:column="31">=<pos:position pos:line="144" pos:column="32"/></operator> <call><name pos:line="144" pos:column="33">X509_verify_cert_error_string<pos:position pos:line="144" pos:column="62"/></name><argument_list pos:line="144" pos:column="62">(<argument><expr><name pos:line="144" pos:column="63">errnum<pos:position pos:line="144" pos:column="69"/></name></expr></argument>)<pos:position pos:line="144" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="71"/></expr_stmt>

        <expr_stmt><expr><name pos:line="146" pos:column="9">ok<pos:position pos:line="146" pos:column="11"/></name> <operator pos:line="146" pos:column="12">=<pos:position pos:line="146" pos:column="13"/></operator> <name pos:line="146" pos:column="14">FALSE<pos:position pos:line="146" pos:column="19"/></name></expr>;<pos:position pos:line="146" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="147" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="149" pos:column="5">/*
     * And finally signal OpenSSL the (perhaps changed) state
     */</comment>
    <return pos:line="152" pos:column="5">return <expr><name pos:line="152" pos:column="12">ok<pos:position pos:line="152" pos:column="14"/></name></expr>;<pos:position pos:line="152" pos:column="15"/></return>
}<pos:position pos:line="153" pos:column="2"/></block></function></unit>

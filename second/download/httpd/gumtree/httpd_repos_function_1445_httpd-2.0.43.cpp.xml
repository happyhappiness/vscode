<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1445_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">write_headers<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">cache_handle_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">h<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">request_rec<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">r<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">cache_info<pos:position pos:line="1" pos:column="80"/></name> <modifier pos:line="1" pos:column="81">*<pos:position pos:line="1" pos:column="82"/></modifier></type><name pos:line="1" pos:column="82">info<pos:position pos:line="1" pos:column="86"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="87"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">cache_object_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">obj<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name><name pos:line="3" pos:column="27">h<pos:position pos:line="3" pos:column="28"/></name><operator pos:line="3" pos:column="28">-&gt;<pos:position pos:line="3" pos:column="33"/></operator><name pos:line="3" pos:column="30">cache_obj<pos:position pos:line="3" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">mem_cache_object_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">mobj<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><operator pos:line="4" pos:column="32">(<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">mem_cache_object_t<pos:position pos:line="4" pos:column="51"/></name><operator pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></operator><operator pos:line="4" pos:column="52">)<pos:position pos:line="4" pos:column="53"/></operator> <name><name pos:line="4" pos:column="54">obj<pos:position pos:line="4" pos:column="57"/></name><operator pos:line="4" pos:column="57">-&gt;<pos:position pos:line="4" pos:column="62"/></operator><name pos:line="4" pos:column="59">vobj<pos:position pos:line="4" pos:column="63"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="64"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">rc<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
 
    <comment type="block" pos:line="7" pos:column="5">/*
     * The cache needs to keep track of the following information: 
     * - Date, LastMod, Version, ReqTime, RespTime, ContentLength 
     * - The original request headers (for Vary) 
     * - The original response headers (for returning with a cached response) 
     * - The body of the message
     */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">rc<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <call><name pos:line="14" pos:column="10">serialize_table<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><operator pos:line="14" pos:column="26">&amp;<pos:position pos:line="14" pos:column="31"/></operator><name><name pos:line="14" pos:column="27">mobj<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">req_hdrs<pos:position pos:line="14" pos:column="41"/></name></name></expr></argument>,
                         <argument><expr><operator pos:line="15" pos:column="26">&amp;<pos:position pos:line="15" pos:column="31"/></operator><name><name pos:line="15" pos:column="27">mobj<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">num_req_hdrs<pos:position pos:line="15" pos:column="45"/></name></name></expr></argument>,
                         <argument><expr><name><name pos:line="16" pos:column="26">r<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">-&gt;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="29">headers_in<pos:position pos:line="16" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">rc<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">!=<pos:position pos:line="17" pos:column="14"/></operator> <name pos:line="17" pos:column="15">APR_SUCCESS<pos:position pos:line="17" pos:column="26"/></name></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27"> <block pos:line="17" pos:column="28">{
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">rc<pos:position pos:line="18" pos:column="18"/></name></expr>;<pos:position pos:line="18" pos:column="19"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="21" pos:column="5">/* Precompute how much storage we need to hold the headers */</comment>
    <expr_stmt><expr><name pos:line="22" pos:column="5">rc<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <call><name pos:line="22" pos:column="10">serialize_table<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><operator pos:line="22" pos:column="26">&amp;<pos:position pos:line="22" pos:column="31"/></operator><name><name pos:line="22" pos:column="27">mobj<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">header_out<pos:position pos:line="22" pos:column="43"/></name></name></expr></argument>, 
                         <argument><expr><operator pos:line="23" pos:column="26">&amp;<pos:position pos:line="23" pos:column="31"/></operator><name><name pos:line="23" pos:column="27">mobj<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">-&gt;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="33">num_header_out<pos:position pos:line="23" pos:column="47"/></name></name></expr></argument>, 
                         <argument><expr><name><name pos:line="24" pos:column="26">r<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">-&gt;<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="29">headers_out<pos:position pos:line="24" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>   
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">rc<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">!=<pos:position pos:line="25" pos:column="14"/></operator> <name pos:line="25" pos:column="15">APR_SUCCESS<pos:position pos:line="25" pos:column="26"/></name></expr>)<pos:position pos:line="25" pos:column="27"/></condition><then pos:line="25" pos:column="27"> <block pos:line="25" pos:column="28">{
        <return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">rc<pos:position pos:line="26" pos:column="18"/></name></expr>;<pos:position pos:line="26" pos:column="19"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="28" pos:column="5">rc<pos:position pos:line="28" pos:column="7"/></name> <operator pos:line="28" pos:column="8">=<pos:position pos:line="28" pos:column="9"/></operator> <call><name pos:line="28" pos:column="10">serialize_table<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><operator pos:line="28" pos:column="26">&amp;<pos:position pos:line="28" pos:column="31"/></operator><name><name pos:line="28" pos:column="27">mobj<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">-&gt;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="33">subprocess_env<pos:position pos:line="28" pos:column="47"/></name></name></expr></argument>,
                         <argument><expr><operator pos:line="29" pos:column="26">&amp;<pos:position pos:line="29" pos:column="31"/></operator><name><name pos:line="29" pos:column="27">mobj<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">-&gt;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="33">num_subprocess_env<pos:position pos:line="29" pos:column="51"/></name></name></expr></argument>, 
                         <argument><expr><name><name pos:line="30" pos:column="26">r<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">-&gt;<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="29">subprocess_env<pos:position pos:line="30" pos:column="43"/></name></name></expr></argument> )<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">rc<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">!=<pos:position pos:line="31" pos:column="14"/></operator> <name pos:line="31" pos:column="15">APR_SUCCESS<pos:position pos:line="31" pos:column="26"/></name></expr>)<pos:position pos:line="31" pos:column="27"/></condition><then pos:line="31" pos:column="27"> <block pos:line="31" pos:column="28">{
        <return pos:line="32" pos:column="9">return <expr><name pos:line="32" pos:column="16">rc<pos:position pos:line="32" pos:column="18"/></name></expr>;<pos:position pos:line="32" pos:column="19"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="35" pos:column="5">rc<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <call><name pos:line="35" pos:column="10">serialize_table<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><operator pos:line="35" pos:column="26">&amp;<pos:position pos:line="35" pos:column="31"/></operator><name><name pos:line="35" pos:column="27">mobj<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">-&gt;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="33">notes<pos:position pos:line="35" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="40">&amp;<pos:position pos:line="35" pos:column="45"/></operator><name><name pos:line="35" pos:column="41">mobj<pos:position pos:line="35" pos:column="45"/></name><operator pos:line="35" pos:column="45">-&gt;<pos:position pos:line="35" pos:column="50"/></operator><name pos:line="35" pos:column="47">num_notes<pos:position pos:line="35" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="58">r<pos:position pos:line="35" pos:column="59"/></name><operator pos:line="35" pos:column="59">-&gt;<pos:position pos:line="35" pos:column="64"/></operator><name pos:line="35" pos:column="61">notes<pos:position pos:line="35" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="68"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">rc<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">!=<pos:position pos:line="36" pos:column="14"/></operator> <name pos:line="36" pos:column="15">APR_SUCCESS<pos:position pos:line="36" pos:column="26"/></name></expr>)<pos:position pos:line="36" pos:column="27"/></condition><then pos:line="36" pos:column="27"> <block pos:line="36" pos:column="28">{
        <return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">rc<pos:position pos:line="37" pos:column="18"/></name></expr>;<pos:position pos:line="37" pos:column="19"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
 
    <comment type="block" pos:line="40" pos:column="5">/* Init the info struct */</comment>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name><name pos:line="41" pos:column="9">info<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">-&gt;<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="15">date<pos:position pos:line="41" pos:column="19"/></name></name></expr>)<pos:position pos:line="41" pos:column="20"/></condition><then pos:line="41" pos:column="20"> <block pos:line="41" pos:column="21">{
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">obj<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">-&gt;<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="14">info<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">.<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="19">date<pos:position pos:line="42" pos:column="23"/></name></name> <operator pos:line="42" pos:column="24">=<pos:position pos:line="42" pos:column="25"/></operator> <name><name pos:line="42" pos:column="26">info<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">-&gt;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="32">date<pos:position pos:line="42" pos:column="36"/></name></name></expr>;<pos:position pos:line="42" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name><name pos:line="44" pos:column="9">info<pos:position pos:line="44" pos:column="13"/></name><operator pos:line="44" pos:column="13">-&gt;<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="15">lastmod<pos:position pos:line="44" pos:column="22"/></name></name></expr>)<pos:position pos:line="44" pos:column="23"/></condition><then pos:line="44" pos:column="23"> <block pos:line="44" pos:column="24">{
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">obj<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">-&gt;<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="14">info<pos:position pos:line="45" pos:column="18"/></name><operator pos:line="45" pos:column="18">.<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="19">lastmod<pos:position pos:line="45" pos:column="26"/></name></name> <operator pos:line="45" pos:column="27">=<pos:position pos:line="45" pos:column="28"/></operator> <name><name pos:line="45" pos:column="29">info<pos:position pos:line="45" pos:column="33"/></name><operator pos:line="45" pos:column="33">-&gt;<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="35">lastmod<pos:position pos:line="45" pos:column="42"/></name></name></expr>;<pos:position pos:line="45" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name><name pos:line="47" pos:column="9">info<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">-&gt;<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="15">response_time<pos:position pos:line="47" pos:column="28"/></name></name></expr>)<pos:position pos:line="47" pos:column="29"/></condition><then pos:line="47" pos:column="29"> <block pos:line="47" pos:column="30">{
        <expr_stmt><expr><name><name pos:line="48" pos:column="9">obj<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">-&gt;<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="14">info<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">.<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="19">response_time<pos:position pos:line="48" pos:column="32"/></name></name> <operator pos:line="48" pos:column="33">=<pos:position pos:line="48" pos:column="34"/></operator> <name><name pos:line="48" pos:column="35">info<pos:position pos:line="48" pos:column="39"/></name><operator pos:line="48" pos:column="39">-&gt;<pos:position pos:line="48" pos:column="44"/></operator><name pos:line="48" pos:column="41">response_time<pos:position pos:line="48" pos:column="54"/></name></name></expr>;<pos:position pos:line="48" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name><name pos:line="50" pos:column="9">info<pos:position pos:line="50" pos:column="13"/></name><operator pos:line="50" pos:column="13">-&gt;<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="15">request_time<pos:position pos:line="50" pos:column="27"/></name></name></expr>)<pos:position pos:line="50" pos:column="28"/></condition><then pos:line="50" pos:column="28"> <block pos:line="50" pos:column="29">{
        <expr_stmt><expr><name><name pos:line="51" pos:column="9">obj<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">-&gt;<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="14">info<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">.<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="19">request_time<pos:position pos:line="51" pos:column="31"/></name></name> <operator pos:line="51" pos:column="32">=<pos:position pos:line="51" pos:column="33"/></operator> <name><name pos:line="51" pos:column="34">info<pos:position pos:line="51" pos:column="38"/></name><operator pos:line="51" pos:column="38">-&gt;<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="40">request_time<pos:position pos:line="51" pos:column="52"/></name></name></expr>;<pos:position pos:line="51" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name><name pos:line="53" pos:column="9">info<pos:position pos:line="53" pos:column="13"/></name><operator pos:line="53" pos:column="13">-&gt;<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="15">expire<pos:position pos:line="53" pos:column="21"/></name></name></expr>)<pos:position pos:line="53" pos:column="22"/></condition><then pos:line="53" pos:column="22"> <block pos:line="53" pos:column="23">{
        <expr_stmt><expr><name><name pos:line="54" pos:column="9">obj<pos:position pos:line="54" pos:column="12"/></name><operator pos:line="54" pos:column="12">-&gt;<pos:position pos:line="54" pos:column="17"/></operator><name pos:line="54" pos:column="14">info<pos:position pos:line="54" pos:column="18"/></name><operator pos:line="54" pos:column="18">.<pos:position pos:line="54" pos:column="19"/></operator><name pos:line="54" pos:column="19">expire<pos:position pos:line="54" pos:column="25"/></name></name> <operator pos:line="54" pos:column="26">=<pos:position pos:line="54" pos:column="27"/></operator> <name><name pos:line="54" pos:column="28">info<pos:position pos:line="54" pos:column="32"/></name><operator pos:line="54" pos:column="32">-&gt;<pos:position pos:line="54" pos:column="37"/></operator><name pos:line="54" pos:column="34">expire<pos:position pos:line="54" pos:column="40"/></name></name></expr>;<pos:position pos:line="54" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name><name pos:line="56" pos:column="9">info<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">-&gt;<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="15">content_type<pos:position pos:line="56" pos:column="27"/></name></name></expr>)<pos:position pos:line="56" pos:column="28"/></condition><then pos:line="56" pos:column="28"> <block pos:line="56" pos:column="29">{
        <decl_stmt><decl><type><name pos:line="57" pos:column="9">apr_size_t<pos:position pos:line="57" pos:column="19"/></name></type> <name pos:line="57" pos:column="20">len<pos:position pos:line="57" pos:column="23"/></name> <init pos:line="57" pos:column="24">= <expr><call><name pos:line="57" pos:column="26">strlen<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name><name pos:line="57" pos:column="33">info<pos:position pos:line="57" pos:column="37"/></name><operator pos:line="57" pos:column="37">-&gt;<pos:position pos:line="57" pos:column="42"/></operator><name pos:line="57" pos:column="39">content_type<pos:position pos:line="57" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="52"/></argument_list></call> <operator pos:line="57" pos:column="53">+<pos:position pos:line="57" pos:column="54"/></operator> <literal type="number" pos:line="57" pos:column="55">1<pos:position pos:line="57" pos:column="56"/></literal></expr></init></decl>;<pos:position pos:line="57" pos:column="57"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="58" pos:column="9">obj<pos:position pos:line="58" pos:column="12"/></name><operator pos:line="58" pos:column="12">-&gt;<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="14">info<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">.<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="19">content_type<pos:position pos:line="58" pos:column="31"/></name></name> <operator pos:line="58" pos:column="32">=<pos:position pos:line="58" pos:column="33"/></operator> <operator pos:line="58" pos:column="34">(<pos:position pos:line="58" pos:column="35"/></operator><name pos:line="58" pos:column="35">char<pos:position pos:line="58" pos:column="39"/></name><operator pos:line="58" pos:column="39">*<pos:position pos:line="58" pos:column="40"/></operator><operator pos:line="58" pos:column="40">)<pos:position pos:line="58" pos:column="41"/></operator> <call><name pos:line="58" pos:column="42">malloc<pos:position pos:line="58" pos:column="48"/></name><argument_list pos:line="58" pos:column="48">(<argument><expr><name pos:line="58" pos:column="49">len<pos:position pos:line="58" pos:column="52"/></name></expr></argument>)<pos:position pos:line="58" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="54"/></expr_stmt>
        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><operator pos:line="59" pos:column="13">!<pos:position pos:line="59" pos:column="14"/></operator><name><name pos:line="59" pos:column="14">obj<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">-&gt;<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="19">info<pos:position pos:line="59" pos:column="23"/></name><operator pos:line="59" pos:column="23">.<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="24">content_type<pos:position pos:line="59" pos:column="36"/></name></name></expr>)<pos:position pos:line="59" pos:column="37"/></condition><then pos:line="59" pos:column="37"> <block pos:line="59" pos:column="38">{
            <return pos:line="60" pos:column="13">return <expr><name pos:line="60" pos:column="20">APR_ENOMEM<pos:position pos:line="60" pos:column="30"/></name></expr>;<pos:position pos:line="60" pos:column="31"/></return>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">memcpy<pos:position pos:line="62" pos:column="15"/></name><argument_list pos:line="62" pos:column="15">(<argument><expr><name><name pos:line="62" pos:column="16">obj<pos:position pos:line="62" pos:column="19"/></name><operator pos:line="62" pos:column="19">-&gt;<pos:position pos:line="62" pos:column="24"/></operator><name pos:line="62" pos:column="21">info<pos:position pos:line="62" pos:column="25"/></name><operator pos:line="62" pos:column="25">.<pos:position pos:line="62" pos:column="26"/></operator><name pos:line="62" pos:column="26">content_type<pos:position pos:line="62" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="40">info<pos:position pos:line="62" pos:column="44"/></name><operator pos:line="62" pos:column="44">-&gt;<pos:position pos:line="62" pos:column="49"/></operator><name pos:line="62" pos:column="46">content_type<pos:position pos:line="62" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="60">len<pos:position pos:line="62" pos:column="63"/></name></expr></argument>)<pos:position pos:line="62" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">( <expr><name><name pos:line="64" pos:column="10">info<pos:position pos:line="64" pos:column="14"/></name><operator pos:line="64" pos:column="14">-&gt;<pos:position pos:line="64" pos:column="19"/></operator><name pos:line="64" pos:column="16">filename<pos:position pos:line="64" pos:column="24"/></name></name></expr>)<pos:position pos:line="64" pos:column="25"/></condition><then pos:line="64" pos:column="25"> <block pos:line="64" pos:column="26">{
        <decl_stmt><decl><type><name pos:line="65" pos:column="9">apr_size_t<pos:position pos:line="65" pos:column="19"/></name></type> <name pos:line="65" pos:column="20">len<pos:position pos:line="65" pos:column="23"/></name> <init pos:line="65" pos:column="24">= <expr><call><name pos:line="65" pos:column="26">strlen<pos:position pos:line="65" pos:column="32"/></name><argument_list pos:line="65" pos:column="32">(<argument><expr><name><name pos:line="65" pos:column="33">info<pos:position pos:line="65" pos:column="37"/></name><operator pos:line="65" pos:column="37">-&gt;<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="39">filename<pos:position pos:line="65" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="48"/></argument_list></call> <operator pos:line="65" pos:column="49">+<pos:position pos:line="65" pos:column="50"/></operator> <literal type="number" pos:line="65" pos:column="51">1<pos:position pos:line="65" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="65" pos:column="53"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="66" pos:column="9">obj<pos:position pos:line="66" pos:column="12"/></name><operator pos:line="66" pos:column="12">-&gt;<pos:position pos:line="66" pos:column="17"/></operator><name pos:line="66" pos:column="14">info<pos:position pos:line="66" pos:column="18"/></name><operator pos:line="66" pos:column="18">.<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="19">filename<pos:position pos:line="66" pos:column="27"/></name></name> <operator pos:line="66" pos:column="28">=<pos:position pos:line="66" pos:column="29"/></operator> <operator pos:line="66" pos:column="30">(<pos:position pos:line="66" pos:column="31"/></operator><name pos:line="66" pos:column="31">char<pos:position pos:line="66" pos:column="35"/></name><operator pos:line="66" pos:column="35">*<pos:position pos:line="66" pos:column="36"/></operator><operator pos:line="66" pos:column="36">)<pos:position pos:line="66" pos:column="37"/></operator> <call><name pos:line="66" pos:column="38">malloc<pos:position pos:line="66" pos:column="44"/></name><argument_list pos:line="66" pos:column="44">(<argument><expr><name pos:line="66" pos:column="45">len<pos:position pos:line="66" pos:column="48"/></name></expr></argument>)<pos:position pos:line="66" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="50"/></expr_stmt>
        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><operator pos:line="67" pos:column="13">!<pos:position pos:line="67" pos:column="14"/></operator><name><name pos:line="67" pos:column="14">obj<pos:position pos:line="67" pos:column="17"/></name><operator pos:line="67" pos:column="17">-&gt;<pos:position pos:line="67" pos:column="22"/></operator><name pos:line="67" pos:column="19">info<pos:position pos:line="67" pos:column="23"/></name><operator pos:line="67" pos:column="23">.<pos:position pos:line="67" pos:column="24"/></operator><name pos:line="67" pos:column="24">filename<pos:position pos:line="67" pos:column="32"/></name></name></expr> )<pos:position pos:line="67" pos:column="34"/></condition><then pos:line="67" pos:column="34"> <block pos:line="67" pos:column="35">{
            <return pos:line="68" pos:column="13">return <expr><name pos:line="68" pos:column="20">APR_ENOMEM<pos:position pos:line="68" pos:column="30"/></name></expr>;<pos:position pos:line="68" pos:column="31"/></return>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">memcpy<pos:position pos:line="70" pos:column="15"/></name><argument_list pos:line="70" pos:column="15">(<argument><expr><name><name pos:line="70" pos:column="16">obj<pos:position pos:line="70" pos:column="19"/></name><operator pos:line="70" pos:column="19">-&gt;<pos:position pos:line="70" pos:column="24"/></operator><name pos:line="70" pos:column="21">info<pos:position pos:line="70" pos:column="25"/></name><operator pos:line="70" pos:column="25">.<pos:position pos:line="70" pos:column="26"/></operator><name pos:line="70" pos:column="26">filename<pos:position pos:line="70" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="36">info<pos:position pos:line="70" pos:column="40"/></name><operator pos:line="70" pos:column="40">-&gt;<pos:position pos:line="70" pos:column="45"/></operator><name pos:line="70" pos:column="42">filename<pos:position pos:line="70" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="52">len<pos:position pos:line="70" pos:column="55"/></name></expr></argument>)<pos:position pos:line="70" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>

    <return pos:line="73" pos:column="5">return <expr><name pos:line="73" pos:column="12">APR_SUCCESS<pos:position pos:line="73" pos:column="23"/></name></expr>;<pos:position pos:line="73" pos:column="24"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

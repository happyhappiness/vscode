<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_7294.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">lua_setup_filter_ctx<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">ap_filter_t<pos:position pos:line="1" pos:column="53"/></name><modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type> <name pos:line="1" pos:column="55">f<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">request_rec<pos:position pos:line="1" pos:column="69"/></name><modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type> <name pos:line="1" pos:column="71">r<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="74">lua_filter_ctx<pos:position pos:line="1" pos:column="88"/></name><modifier pos:line="1" pos:column="88">*<pos:position pos:line="1" pos:column="89"/></modifier><modifier pos:line="1" pos:column="89">*<pos:position pos:line="1" pos:column="90"/></modifier></type> <name pos:line="1" pos:column="91">c<pos:position pos:line="1" pos:column="92"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="93"/></parameter_list> <block pos:line="1" pos:column="94">{
    <decl_stmt><decl><type><name pos:line="2" pos:column="5">apr_pool_t<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">pool<pos:position pos:line="2" pos:column="21"/></name></decl>;<pos:position pos:line="2" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ap_lua_vm_spec<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">spec<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">n<pos:position pos:line="4" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="12">rc<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">lua_State<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">L<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">lua_filter_ctx<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">ctx<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>    
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ap_lua_server_cfg<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">server_cfg<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><call><name pos:line="7" pos:column="37">ap_get_module_config<pos:position pos:line="7" pos:column="57"/></name><argument_list pos:line="7" pos:column="57">(<argument><expr><name><name pos:line="7" pos:column="58">r<pos:position pos:line="7" pos:column="59"/></name><operator pos:line="7" pos:column="59">-&gt;<pos:position pos:line="7" pos:column="64"/></operator><name pos:line="7" pos:column="61">server<pos:position pos:line="7" pos:column="67"/></name><operator pos:line="7" pos:column="67">-&gt;<pos:position pos:line="7" pos:column="72"/></operator><name pos:line="7" pos:column="69">module_config<pos:position pos:line="7" pos:column="82"/></name></name></expr></argument>,
                                                        <argument><expr><operator pos:line="8" pos:column="57">&amp;<pos:position pos:line="8" pos:column="62"/></operator><name pos:line="8" pos:column="58">lua_module<pos:position pos:line="8" pos:column="68"/></name></expr></argument>)<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="70"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">ap_lua_dir_cfg<pos:position pos:line="9" pos:column="25"/></name> <modifier pos:line="9" pos:column="26">*<pos:position pos:line="9" pos:column="27"/></modifier></type><name pos:line="9" pos:column="27">cfg<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><call><name pos:line="9" pos:column="33">ap_get_module_config<pos:position pos:line="9" pos:column="53"/></name><argument_list pos:line="9" pos:column="53">(<argument><expr><name><name pos:line="9" pos:column="54">r<pos:position pos:line="9" pos:column="55"/></name><operator pos:line="9" pos:column="55">-&gt;<pos:position pos:line="9" pos:column="60"/></operator><name pos:line="9" pos:column="57">per_dir_config<pos:position pos:line="9" pos:column="71"/></name></name></expr></argument>,
                                                    <argument><expr><operator pos:line="10" pos:column="53">&amp;<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="54">lua_module<pos:position pos:line="10" pos:column="64"/></name></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="66"/></decl_stmt>
    
    <expr_stmt><expr><name pos:line="12" pos:column="5">ctx<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <call><name pos:line="12" pos:column="11">apr_pcalloc<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name><name pos:line="12" pos:column="23">r<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">pool<pos:position pos:line="12" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="32">sizeof<argument_list pos:line="12" pos:column="38">(<argument><expr><name pos:line="12" pos:column="39">lua_filter_ctx<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">ctx<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">-&gt;<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="10">broken<pos:position pos:line="13" pos:column="16"/></name></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <literal type="number" pos:line="13" pos:column="19">0<pos:position pos:line="13" pos:column="20"/></literal></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="14" pos:column="5">*<pos:position pos:line="14" pos:column="6"/></operator><name pos:line="14" pos:column="6">c<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <name pos:line="14" pos:column="10">ctx<pos:position pos:line="14" pos:column="13"/></name></expr>;<pos:position pos:line="14" pos:column="14"/></expr_stmt>
    <comment type="block" pos:line="15" pos:column="5">/* Find the filter that was called */</comment>
    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">n<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <literal type="number" pos:line="16" pos:column="14">0<pos:position pos:line="16" pos:column="15"/></literal></expr>;<pos:position pos:line="16" pos:column="16"/></init> <condition><expr><name pos:line="16" pos:column="17">n<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">&lt;<pos:position pos:line="16" pos:column="23"/></operator> <name><name pos:line="16" pos:column="21">cfg<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">mapped_filters<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">-&gt;<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="42">nelts<pos:position pos:line="16" pos:column="47"/></name></name></expr>;<pos:position pos:line="16" pos:column="48"/></condition> <incr><expr><name pos:line="16" pos:column="49">n<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">++<pos:position pos:line="16" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="53"/></control> <block pos:line="16" pos:column="54">{
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">ap_lua_filter_handler_spec<pos:position pos:line="17" pos:column="35"/></name> <modifier pos:line="17" pos:column="36">*<pos:position pos:line="17" pos:column="37"/></modifier></type><name pos:line="17" pos:column="37">hook_spec<pos:position pos:line="17" pos:column="46"/></name> <init pos:line="17" pos:column="47">=
            <expr><operator pos:line="18" pos:column="13">(<pos:position pos:line="18" pos:column="14"/></operator><operator pos:line="18" pos:column="14">(<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">ap_lua_filter_handler_spec<pos:position pos:line="18" pos:column="41"/></name> <operator pos:line="18" pos:column="42">*<pos:position pos:line="18" pos:column="43"/></operator><operator pos:line="18" pos:column="43">*<pos:position pos:line="18" pos:column="44"/></operator><operator pos:line="18" pos:column="44">)<pos:position pos:line="18" pos:column="45"/></operator> <name><name pos:line="18" pos:column="46">cfg<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">-&gt;<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="51">mapped_filters<pos:position pos:line="18" pos:column="65"/></name><operator pos:line="18" pos:column="65">-&gt;<pos:position pos:line="18" pos:column="70"/></operator><name pos:line="18" pos:column="67">elts<pos:position pos:line="18" pos:column="71"/></name></name><operator pos:line="18" pos:column="71">)<pos:position pos:line="18" pos:column="72"/></operator><index pos:line="18" pos:column="72">[<expr><name pos:line="18" pos:column="73">n<pos:position pos:line="18" pos:column="74"/></name></expr>]<pos:position pos:line="18" pos:column="75"/></index></expr></init></decl>;<pos:position pos:line="18" pos:column="76"/></decl_stmt>

        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">hook_spec<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">==<pos:position pos:line="20" pos:column="25"/></operator> <name pos:line="20" pos:column="26">NULL<pos:position pos:line="20" pos:column="30"/></name></expr>)<pos:position pos:line="20" pos:column="31"/></condition><then pos:line="20" pos:column="31"> <block pos:line="20" pos:column="32">{
            <continue pos:line="21" pos:column="13">continue;<pos:position pos:line="21" pos:column="22"/></continue>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><call><name pos:line="23" pos:column="14">strcasecmp<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name><name pos:line="23" pos:column="25">hook_spec<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">filter_name<pos:position pos:line="23" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="49">f<pos:position pos:line="23" pos:column="50"/></name><operator pos:line="23" pos:column="50">-&gt;<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="52">frec<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">-&gt;<pos:position pos:line="23" pos:column="61"/></operator><name pos:line="23" pos:column="58">name<pos:position pos:line="23" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="64"/></condition><then pos:line="23" pos:column="64"> <block pos:line="23" pos:column="65">{
            <expr_stmt><expr><name pos:line="24" pos:column="13">spec<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <call><name pos:line="24" pos:column="20">create_vm_spec<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><operator pos:line="24" pos:column="35">&amp;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="36">pool<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="42">r<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="45">cfg<pos:position pos:line="24" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="50">server_cfg<pos:position pos:line="24" pos:column="60"/></name></expr></argument>,
                                    <argument><expr><name><name pos:line="25" pos:column="37">hook_spec<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">-&gt;<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="48">file_name<pos:position pos:line="25" pos:column="57"/></name></name></expr></argument>,
                                    <argument><expr><name pos:line="26" pos:column="37">NULL<pos:position pos:line="26" pos:column="41"/></name></expr></argument>,
                                    <argument><expr><literal type="number" pos:line="27" pos:column="37">0<pos:position pos:line="27" pos:column="38"/></literal></expr></argument>,
                                    <argument><expr><name><name pos:line="28" pos:column="37">hook_spec<pos:position pos:line="28" pos:column="46"/></name><operator pos:line="28" pos:column="46">-&gt;<pos:position pos:line="28" pos:column="51"/></operator><name pos:line="28" pos:column="48">function_name<pos:position pos:line="28" pos:column="61"/></name></name></expr></argument>,
                                    <argument><expr><literal type="string" pos:line="29" pos:column="37">"filter"<pos:position pos:line="29" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name pos:line="30" pos:column="13">L<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <call><name pos:line="30" pos:column="17">ap_lua_get_lua_state<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><name pos:line="30" pos:column="38">pool<pos:position pos:line="30" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="44">spec<pos:position pos:line="30" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="50">r<pos:position pos:line="30" pos:column="51"/></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
            <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><name pos:line="31" pos:column="17">L<pos:position pos:line="31" pos:column="18"/></name></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19"> <block pos:line="31" pos:column="20">{
                <expr_stmt><expr><name pos:line="32" pos:column="17">L<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator> <call><name pos:line="32" pos:column="21">lua_newthread<pos:position pos:line="32" pos:column="34"/></name><argument_list pos:line="32" pos:column="34">(<argument><expr><name pos:line="32" pos:column="35">L<pos:position pos:line="32" pos:column="36"/></name></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="33" pos:column="14"/></block></then></if>

            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><operator pos:line="35" pos:column="17">!<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">L<pos:position pos:line="35" pos:column="19"/></name></expr>)<pos:position pos:line="35" pos:column="20"/></condition><then pos:line="35" pos:column="20"> <block pos:line="35" pos:column="21">{
                <expr_stmt><expr><call><name pos:line="36" pos:column="17">ap_log_rerror<pos:position pos:line="36" pos:column="30"/></name><argument_list pos:line="36" pos:column="30">(<argument><expr><name pos:line="36" pos:column="31">APLOG_MARK<pos:position pos:line="36" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="43">APLOG_CRIT<pos:position pos:line="36" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="55">0<pos:position pos:line="36" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="58">r<pos:position pos:line="36" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="61">APLOGNO<pos:position pos:line="36" pos:column="68"/></name><argument_list pos:line="36" pos:column="68">(<argument><expr><literal type="number" pos:line="36" pos:column="69">02328<pos:position pos:line="36" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="75"/></argument_list></call>
                                <literal type="string" pos:line="37" pos:column="33">"lua: Failed to obtain lua interpreter for %s %s"<pos:position pos:line="37" pos:column="82"/></literal></expr></argument>,
                                <argument><expr><name><name pos:line="38" pos:column="33">hook_spec<pos:position pos:line="38" pos:column="42"/></name><operator pos:line="38" pos:column="42">-&gt;<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="44">function_name<pos:position pos:line="38" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="59">hook_spec<pos:position pos:line="38" pos:column="68"/></name><operator pos:line="38" pos:column="68">-&gt;<pos:position pos:line="38" pos:column="73"/></operator><name pos:line="38" pos:column="70">file_name<pos:position pos:line="38" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="81"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="39" pos:column="17">ap_lua_release_state<pos:position pos:line="39" pos:column="37"/></name><argument_list pos:line="39" pos:column="37">(<argument><expr><name pos:line="39" pos:column="38">L<pos:position pos:line="39" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="41">spec<pos:position pos:line="39" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="47">r<pos:position pos:line="39" pos:column="48"/></name></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="50"/></expr_stmt>
                <return pos:line="40" pos:column="17">return <expr><name pos:line="40" pos:column="24">APR_EGENERAL<pos:position pos:line="40" pos:column="36"/></name></expr>;<pos:position pos:line="40" pos:column="37"/></return>
            }<pos:position pos:line="41" pos:column="14"/></block></then></if>
            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><name><name pos:line="42" pos:column="17">hook_spec<pos:position pos:line="42" pos:column="26"/></name><operator pos:line="42" pos:column="26">-&gt;<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="28">function_name<pos:position pos:line="42" pos:column="41"/></name></name> <operator pos:line="42" pos:column="42">!=<pos:position pos:line="42" pos:column="44"/></operator> <name pos:line="42" pos:column="45">NULL<pos:position pos:line="42" pos:column="49"/></name></expr>)<pos:position pos:line="42" pos:column="50"/></condition><then pos:line="42" pos:column="50"> <block pos:line="42" pos:column="51">{
                <expr_stmt><expr><call><name pos:line="43" pos:column="17">lua_getglobal<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">L<pos:position pos:line="43" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="34">hook_spec<pos:position pos:line="43" pos:column="43"/></name><operator pos:line="43" pos:column="43">-&gt;<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="45">function_name<pos:position pos:line="43" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="60"/></expr_stmt>
                <if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><operator pos:line="44" pos:column="21">!<pos:position pos:line="44" pos:column="22"/></operator><call><name pos:line="44" pos:column="22">lua_isfunction<pos:position pos:line="44" pos:column="36"/></name><argument_list pos:line="44" pos:column="36">(<argument><expr><name pos:line="44" pos:column="37">L<pos:position pos:line="44" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="40">-<pos:position pos:line="44" pos:column="41"/></operator><literal type="number" pos:line="44" pos:column="41">1<pos:position pos:line="44" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="44"/></condition><then pos:line="44" pos:column="44"> <block pos:line="44" pos:column="45">{
                    <expr_stmt><expr><call><name pos:line="45" pos:column="21">ap_log_rerror<pos:position pos:line="45" pos:column="34"/></name><argument_list pos:line="45" pos:column="34">(<argument><expr><name pos:line="45" pos:column="35">APLOG_MARK<pos:position pos:line="45" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="47">APLOG_CRIT<pos:position pos:line="45" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="59">0<pos:position pos:line="45" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="62">r<pos:position pos:line="45" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="65">APLOGNO<pos:position pos:line="45" pos:column="72"/></name><argument_list pos:line="45" pos:column="72">(<argument><expr><literal type="number" pos:line="45" pos:column="73">02329<pos:position pos:line="45" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="79"/></argument_list></call>
                                    <literal type="string" pos:line="46" pos:column="37">"lua: Unable to find function %s in %s"<pos:position pos:line="46" pos:column="76"/></literal></expr></argument>,
                                    <argument><expr><name><name pos:line="47" pos:column="37">hook_spec<pos:position pos:line="47" pos:column="46"/></name><operator pos:line="47" pos:column="46">-&gt;<pos:position pos:line="47" pos:column="51"/></operator><name pos:line="47" pos:column="48">function_name<pos:position pos:line="47" pos:column="61"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="48" pos:column="37">hook_spec<pos:position pos:line="48" pos:column="46"/></name><operator pos:line="48" pos:column="46">-&gt;<pos:position pos:line="48" pos:column="51"/></operator><name pos:line="48" pos:column="48">file_name<pos:position pos:line="48" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="59"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="49" pos:column="21">ap_lua_release_state<pos:position pos:line="49" pos:column="41"/></name><argument_list pos:line="49" pos:column="41">(<argument><expr><name pos:line="49" pos:column="42">L<pos:position pos:line="49" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="45">spec<pos:position pos:line="49" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="51">r<pos:position pos:line="49" pos:column="52"/></name></expr></argument>)<pos:position pos:line="49" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="54"/></expr_stmt>
                    <return pos:line="50" pos:column="21">return <expr><name pos:line="50" pos:column="28">APR_EGENERAL<pos:position pos:line="50" pos:column="40"/></name></expr>;<pos:position pos:line="50" pos:column="41"/></return>
                }<pos:position pos:line="51" pos:column="18"/></block></then></if>

                <expr_stmt><expr><call><name pos:line="53" pos:column="17">ap_lua_run_lua_request<pos:position pos:line="53" pos:column="39"/></name><argument_list pos:line="53" pos:column="39">(<argument><expr><name pos:line="53" pos:column="40">L<pos:position pos:line="53" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="43">r<pos:position pos:line="53" pos:column="44"/></name></expr></argument>)<pos:position pos:line="53" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="54" pos:column="14"/></block></then>
            <else pos:line="55" pos:column="13">else <block pos:line="55" pos:column="18">{
                <decl_stmt><decl><type><name pos:line="56" pos:column="17">int<pos:position pos:line="56" pos:column="20"/></name></type> <name pos:line="56" pos:column="21">t<pos:position pos:line="56" pos:column="22"/></name></decl>;<pos:position pos:line="56" pos:column="23"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="57" pos:column="17">ap_lua_run_lua_request<pos:position pos:line="57" pos:column="39"/></name><argument_list pos:line="57" pos:column="39">(<argument><expr><name pos:line="57" pos:column="40">L<pos:position pos:line="57" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="43">r<pos:position pos:line="57" pos:column="44"/></name></expr></argument>)<pos:position pos:line="57" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="46"/></expr_stmt>

                <expr_stmt><expr><name pos:line="59" pos:column="17">t<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <call><name pos:line="59" pos:column="21">lua_gettop<pos:position pos:line="59" pos:column="31"/></name><argument_list pos:line="59" pos:column="31">(<argument><expr><name pos:line="59" pos:column="32">L<pos:position pos:line="59" pos:column="33"/></name></expr></argument>)<pos:position pos:line="59" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="60" pos:column="17">lua_setglobal<pos:position pos:line="60" pos:column="30"/></name><argument_list pos:line="60" pos:column="30">(<argument><expr><name pos:line="60" pos:column="31">L<pos:position pos:line="60" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="34">"r"<pos:position pos:line="60" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="61" pos:column="17">lua_settop<pos:position pos:line="61" pos:column="27"/></name><argument_list pos:line="61" pos:column="27">(<argument><expr><name pos:line="61" pos:column="28">L<pos:position pos:line="61" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="31">t<pos:position pos:line="61" pos:column="32"/></name></expr></argument>)<pos:position pos:line="61" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="62" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name><name pos:line="63" pos:column="13">ctx<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">-&gt;<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="18">L<pos:position pos:line="63" pos:column="19"/></name></name> <operator pos:line="63" pos:column="20">=<pos:position pos:line="63" pos:column="21"/></operator> <name pos:line="63" pos:column="22">L<pos:position pos:line="63" pos:column="23"/></name></expr>;<pos:position pos:line="63" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="64" pos:column="13">ctx<pos:position pos:line="64" pos:column="16"/></name><operator pos:line="64" pos:column="16">-&gt;<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="18">spec<pos:position pos:line="64" pos:column="22"/></name></name> <operator pos:line="64" pos:column="23">=<pos:position pos:line="64" pos:column="24"/></operator> <name pos:line="64" pos:column="25">spec<pos:position pos:line="64" pos:column="29"/></name></expr>;<pos:position pos:line="64" pos:column="30"/></expr_stmt>
            
            <comment type="block" pos:line="66" pos:column="13">/* If a Lua filter is interested in filtering a request, it must first do a yield, 
             * otherwise we'll assume that it's not interested and pretend we didn't find it.
             */</comment>
            <expr_stmt><expr><name pos:line="69" pos:column="13">rc<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">=<pos:position pos:line="69" pos:column="17"/></operator> <call><name pos:line="69" pos:column="18">lua_resume<pos:position pos:line="69" pos:column="28"/></name><argument_list pos:line="69" pos:column="28">(<argument><expr><name pos:line="69" pos:column="29">L<pos:position pos:line="69" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="32">1<pos:position pos:line="69" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="35"/></expr_stmt>
            <if pos:line="70" pos:column="13">if <condition pos:line="70" pos:column="16">(<expr><name pos:line="70" pos:column="17">rc<pos:position pos:line="70" pos:column="19"/></name> <operator pos:line="70" pos:column="20">==<pos:position pos:line="70" pos:column="22"/></operator> <name pos:line="70" pos:column="23">LUA_YIELD<pos:position pos:line="70" pos:column="32"/></name></expr>)<pos:position pos:line="70" pos:column="33"/></condition><then pos:line="70" pos:column="33"> <block pos:line="70" pos:column="34">{
                <return pos:line="71" pos:column="17">return <expr><name pos:line="71" pos:column="24">OK<pos:position pos:line="71" pos:column="26"/></name></expr>;<pos:position pos:line="71" pos:column="27"/></return>
            }<pos:position pos:line="72" pos:column="14"/></block></then>
            <else pos:line="73" pos:column="13">else <block pos:line="73" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="74" pos:column="17">ap_lua_release_state<pos:position pos:line="74" pos:column="37"/></name><argument_list pos:line="74" pos:column="37">(<argument><expr><name pos:line="74" pos:column="38">L<pos:position pos:line="74" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="41">spec<pos:position pos:line="74" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="47">r<pos:position pos:line="74" pos:column="48"/></name></expr></argument>)<pos:position pos:line="74" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="50"/></expr_stmt>
                <return pos:line="75" pos:column="17">return <expr><name pos:line="75" pos:column="24">APR_ENOENT<pos:position pos:line="75" pos:column="34"/></name></expr>;<pos:position pos:line="75" pos:column="35"/></return>
            }<pos:position pos:line="76" pos:column="14"/></block></else></if>
        }<pos:position pos:line="77" pos:column="10"/></block></then></if>
    }<pos:position pos:line="78" pos:column="6"/></block></for>
    <return pos:line="79" pos:column="5">return <expr><name pos:line="79" pos:column="12">APR_ENOENT<pos:position pos:line="79" pos:column="22"/></name></expr>;<pos:position pos:line="79" pos:column="23"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

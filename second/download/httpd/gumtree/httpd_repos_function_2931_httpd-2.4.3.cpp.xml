<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2931_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">op_T<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">ap_expr_eval_ctx_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">ctx<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">void<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">data<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">arg<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <switch pos:line="3" pos:column="5">switch <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">arg<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><literal type="number" pos:line="3" pos:column="17">0<pos:position pos:line="3" pos:column="18"/></literal></expr>]<pos:position pos:line="3" pos:column="19"/></index></name></expr>)<pos:position pos:line="3" pos:column="20"/></condition> <block pos:line="3" pos:column="21">{
    <case pos:line="4" pos:column="5">case <expr><literal type="char" pos:line="4" pos:column="10">'\0'<pos:position pos:line="4" pos:column="14"/></literal></expr>:<pos:position pos:line="4" pos:column="15"/></case>
        <return pos:line="5" pos:column="9">return <expr><name pos:line="5" pos:column="16">FALSE<pos:position pos:line="5" pos:column="21"/></name></expr>;<pos:position pos:line="5" pos:column="22"/></return>
    <case pos:line="6" pos:column="5">case <expr><literal type="char" pos:line="6" pos:column="10">'o'<pos:position pos:line="6" pos:column="13"/></literal></expr>:<pos:position pos:line="6" pos:column="14"/></case>
    <case pos:line="7" pos:column="5">case <expr><literal type="char" pos:line="7" pos:column="10">'O'<pos:position pos:line="7" pos:column="13"/></literal></expr>:<pos:position pos:line="7" pos:column="14"/></case>
        <return pos:line="8" pos:column="9">return <expr><ternary><condition><expr><call><name pos:line="8" pos:column="16">strcasecmp<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">arg<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="32">"off"<pos:position pos:line="8" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call> <operator pos:line="8" pos:column="39">==<pos:position pos:line="8" pos:column="41"/></operator> <literal type="number" pos:line="8" pos:column="42">0<pos:position pos:line="8" pos:column="43"/></literal></expr> ?<pos:position pos:line="8" pos:column="45"/></condition><then pos:line="8" pos:column="45"> <expr><name pos:line="8" pos:column="46">FALSE<pos:position pos:line="8" pos:column="51"/></name></expr> <pos:position pos:line="8" pos:column="52"/></then><else pos:line="8" pos:column="52">: <expr><name pos:line="8" pos:column="54">TRUE<pos:position pos:line="8" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="59"/></return>
    <case pos:line="9" pos:column="5">case <expr><literal type="char" pos:line="9" pos:column="10">'n'<pos:position pos:line="9" pos:column="13"/></literal></expr>:<pos:position pos:line="9" pos:column="14"/></case>
    <case pos:line="10" pos:column="5">case <expr><literal type="char" pos:line="10" pos:column="10">'N'<pos:position pos:line="10" pos:column="13"/></literal></expr>:<pos:position pos:line="10" pos:column="14"/></case>
        <return pos:line="11" pos:column="9">return <expr><ternary><condition><expr><call><name pos:line="11" pos:column="16">strcasecmp<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">arg<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="32">"no"<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call> <operator pos:line="11" pos:column="38">==<pos:position pos:line="11" pos:column="40"/></operator> <literal type="number" pos:line="11" pos:column="41">0<pos:position pos:line="11" pos:column="42"/></literal></expr> ?<pos:position pos:line="11" pos:column="44"/></condition><then pos:line="11" pos:column="44"> <expr><name pos:line="11" pos:column="45">FALSE<pos:position pos:line="11" pos:column="50"/></name></expr> <pos:position pos:line="11" pos:column="51"/></then><else pos:line="11" pos:column="51">: <expr><name pos:line="11" pos:column="53">TRUE<pos:position pos:line="11" pos:column="57"/></name></expr></else></ternary></expr>;<pos:position pos:line="11" pos:column="58"/></return>
    <case pos:line="12" pos:column="5">case <expr><literal type="char" pos:line="12" pos:column="10">'f'<pos:position pos:line="12" pos:column="13"/></literal></expr>:<pos:position pos:line="12" pos:column="14"/></case>
    <case pos:line="13" pos:column="5">case <expr><literal type="char" pos:line="13" pos:column="10">'F'<pos:position pos:line="13" pos:column="13"/></literal></expr>:<pos:position pos:line="13" pos:column="14"/></case>
        <return pos:line="14" pos:column="9">return <expr><ternary><condition><expr><call><name pos:line="14" pos:column="16">strcasecmp<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">arg<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="32">"false"<pos:position pos:line="14" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call> <operator pos:line="14" pos:column="41">==<pos:position pos:line="14" pos:column="43"/></operator> <literal type="number" pos:line="14" pos:column="44">0<pos:position pos:line="14" pos:column="45"/></literal></expr> ?<pos:position pos:line="14" pos:column="47"/></condition><then pos:line="14" pos:column="47"> <expr><name pos:line="14" pos:column="48">FALSE<pos:position pos:line="14" pos:column="53"/></name></expr> <pos:position pos:line="14" pos:column="54"/></then><else pos:line="14" pos:column="54">: <expr><name pos:line="14" pos:column="56">TRUE<pos:position pos:line="14" pos:column="60"/></name></expr></else></ternary></expr>;<pos:position pos:line="14" pos:column="61"/></return>
    <case pos:line="15" pos:column="5">case <expr><literal type="char" pos:line="15" pos:column="10">'0'<pos:position pos:line="15" pos:column="13"/></literal></expr>:<pos:position pos:line="15" pos:column="14"/></case>
        <return pos:line="16" pos:column="9">return <expr><ternary><condition><expr><name><name pos:line="16" pos:column="16">arg<pos:position pos:line="16" pos:column="19"/></name><index pos:line="16" pos:column="19">[<expr><literal type="number" pos:line="16" pos:column="20">1<pos:position pos:line="16" pos:column="21"/></literal></expr>]<pos:position pos:line="16" pos:column="22"/></index></name> <operator pos:line="16" pos:column="23">==<pos:position pos:line="16" pos:column="25"/></operator> <literal type="char" pos:line="16" pos:column="26">'\0'<pos:position pos:line="16" pos:column="30"/></literal></expr> ?<pos:position pos:line="16" pos:column="32"/></condition><then pos:line="16" pos:column="32"> <expr><name pos:line="16" pos:column="33">FALSE<pos:position pos:line="16" pos:column="38"/></name></expr> <pos:position pos:line="16" pos:column="39"/></then><else pos:line="16" pos:column="39">: <expr><name pos:line="16" pos:column="41">TRUE<pos:position pos:line="16" pos:column="45"/></name></expr></else></ternary></expr>;<pos:position pos:line="16" pos:column="46"/></return>
    <default pos:line="17" pos:column="5">default:<pos:position pos:line="17" pos:column="13"/></default>
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">TRUE<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></switch>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

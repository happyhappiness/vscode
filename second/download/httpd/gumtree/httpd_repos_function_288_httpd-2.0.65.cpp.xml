<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_288_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dav_send_one_response<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">dav_response<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">response<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">apr_bucket_brigade<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">bb<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">ap_filter_t<pos:position pos:line="3" pos:column="46"/></name> <modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier></type><name pos:line="3" pos:column="48">output<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="4" pos:column="35">apr_pool_t<pos:position pos:line="4" pos:column="45"/></name> <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier></type><name pos:line="4" pos:column="47">pool<pos:position pos:line="4" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="52"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_text<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">t<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><name pos:line="6" pos:column="19">NULL<pos:position pos:line="6" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">response<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">propresult<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">.<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">xmlns<pos:position pos:line="8" pos:column="35"/></name></name> <operator pos:line="8" pos:column="36">==<pos:position pos:line="8" pos:column="38"/></operator> <name pos:line="8" pos:column="39">NULL<pos:position pos:line="8" pos:column="43"/></name></expr>)<pos:position pos:line="8" pos:column="44"/></condition><then pos:line="8" pos:column="44"> <block pos:line="8" pos:column="45">{
      <expr_stmt><expr><call><name pos:line="9" pos:column="7">ap_fputs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">output<pos:position pos:line="9" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="24">bb<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="28">"&lt;D:response&gt;"<pos:position pos:line="9" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then>
    <else pos:line="11" pos:column="5">else <block pos:line="11" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">ap_fputs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">output<pos:position pos:line="12" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="24">bb<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="28">"&lt;D:response"<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
      <for pos:line="13" pos:column="7">for <control pos:line="13" pos:column="11">(<init><expr><name pos:line="13" pos:column="12">t<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name><name pos:line="13" pos:column="16">response<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">-&gt;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="26">propresult<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">.<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="37">xmlns<pos:position pos:line="13" pos:column="42"/></name></name></expr>;<pos:position pos:line="13" pos:column="43"/></init> <condition><expr><name pos:line="13" pos:column="44">t<pos:position pos:line="13" pos:column="45"/></name></expr>;<pos:position pos:line="13" pos:column="46"/></condition> <incr><expr><name pos:line="13" pos:column="47">t<pos:position pos:line="13" pos:column="48"/></name> <operator pos:line="13" pos:column="49">=<pos:position pos:line="13" pos:column="50"/></operator> <name><name pos:line="13" pos:column="51">t<pos:position pos:line="13" pos:column="52"/></name><operator pos:line="13" pos:column="52">-&gt;<pos:position pos:line="13" pos:column="57"/></operator><name pos:line="13" pos:column="54">next<pos:position pos:line="13" pos:column="58"/></name></name></expr></incr>)<pos:position pos:line="13" pos:column="59"/></control> <block pos:line="13" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">ap_fputs<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">output<pos:position pos:line="14" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="26">bb<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="30">t<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">text<pos:position pos:line="14" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
      }<pos:position pos:line="15" pos:column="8"/></block></for>
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">ap_fputc<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">output<pos:position pos:line="16" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="24">bb<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="16" pos:column="28">'&gt;'<pos:position pos:line="16" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></else></if>
    
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ap_fputstrs<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">output<pos:position pos:line="19" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="25">bb<pos:position pos:line="19" pos:column="27"/></name></expr></argument>,
                <argument><expr><name pos:line="20" pos:column="17">DEBUG_CR<pos:position pos:line="20" pos:column="25"/></name> <literal type="string" pos:line="20" pos:column="26">"&lt;D:href&gt;"<pos:position pos:line="20" pos:column="42"/></literal></expr></argument>,
                <argument><expr><call><name pos:line="21" pos:column="17">dav_xml_escape_uri<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><name pos:line="21" pos:column="36">pool<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="42">response<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">-&gt;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="52">href<pos:position pos:line="21" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr></argument>,
                <argument><expr><literal type="string" pos:line="22" pos:column="17">"&lt;/D:href&gt;"<pos:position pos:line="22" pos:column="34"/></literal> <name pos:line="22" pos:column="29">DEBUG_CR<pos:position pos:line="22" pos:column="37"/></name></expr></argument>,
                <argument><expr><name pos:line="23" pos:column="17">NULL<pos:position pos:line="23" pos:column="21"/></name></expr></argument>)<pos:position pos:line="23" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
    
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name><name pos:line="25" pos:column="9">response<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">propresult<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">.<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">propstats<pos:position pos:line="25" pos:column="39"/></name></name> <operator pos:line="25" pos:column="40">==<pos:position pos:line="25" pos:column="42"/></operator> <name pos:line="25" pos:column="43">NULL<pos:position pos:line="25" pos:column="47"/></name></expr>)<pos:position pos:line="25" pos:column="48"/></condition><then pos:line="25" pos:column="48"> <block pos:line="25" pos:column="49">{
      <comment type="block" pos:line="26" pos:column="7">/* use the Status-Line text from Apache.  Note, this will
       * default to 500 Internal Server Error if first-&gt;status
       * is not a known (or valid) status code.
       */</comment>
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">ap_fputstrs<pos:position pos:line="30" pos:column="18"/></name><argument_list pos:line="30" pos:column="18">(<argument><expr><name pos:line="30" pos:column="19">output<pos:position pos:line="30" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="27">bb<pos:position pos:line="30" pos:column="29"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="31" pos:column="19">"&lt;D:status&gt;HTTP/1.1 "<pos:position pos:line="31" pos:column="46"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="32" pos:column="19">ap_get_status_line<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><name><name pos:line="32" pos:column="38">response<pos:position pos:line="32" pos:column="46"/></name><operator pos:line="32" pos:column="46">-&gt;<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="48">status<pos:position pos:line="32" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></call></expr></argument>,
                  <argument><expr><literal type="string" pos:line="33" pos:column="19">"&lt;/D:status&gt;"<pos:position pos:line="33" pos:column="38"/></literal> <name pos:line="33" pos:column="33">DEBUG_CR<pos:position pos:line="33" pos:column="41"/></name></expr></argument>,
                  <argument><expr><name pos:line="34" pos:column="19">NULL<pos:position pos:line="34" pos:column="23"/></name></expr></argument>)<pos:position pos:line="34" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then>
    <else pos:line="36" pos:column="5">else <block pos:line="36" pos:column="10">{
      <comment type="block" pos:line="37" pos:column="7">/* assume this includes &lt;propstat&gt; and is quoted properly */</comment>
      <for pos:line="38" pos:column="7">for <control pos:line="38" pos:column="11">(<init><expr><name pos:line="38" pos:column="12">t<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <name><name pos:line="38" pos:column="16">response<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">-&gt;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="26">propresult<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">.<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="37">propstats<pos:position pos:line="38" pos:column="46"/></name></name></expr>;<pos:position pos:line="38" pos:column="47"/></init> <condition><expr><name pos:line="38" pos:column="48">t<pos:position pos:line="38" pos:column="49"/></name></expr>;<pos:position pos:line="38" pos:column="50"/></condition> <incr><expr><name pos:line="38" pos:column="51">t<pos:position pos:line="38" pos:column="52"/></name> <operator pos:line="38" pos:column="53">=<pos:position pos:line="38" pos:column="54"/></operator> <name><name pos:line="38" pos:column="55">t<pos:position pos:line="38" pos:column="56"/></name><operator pos:line="38" pos:column="56">-&gt;<pos:position pos:line="38" pos:column="61"/></operator><name pos:line="38" pos:column="58">next<pos:position pos:line="38" pos:column="62"/></name></name></expr></incr>)<pos:position pos:line="38" pos:column="63"/></control> <block pos:line="38" pos:column="64">{
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">ap_fputs<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><name pos:line="39" pos:column="18">output<pos:position pos:line="39" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="26">bb<pos:position pos:line="39" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="30">t<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">-&gt;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="33">text<pos:position pos:line="39" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="39"/></expr_stmt>
      }<pos:position pos:line="40" pos:column="8"/></block></for>
    }<pos:position pos:line="41" pos:column="6"/></block></else></if>
    
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name><name pos:line="43" pos:column="9">response<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">-&gt;<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="19">desc<pos:position pos:line="43" pos:column="23"/></name></name> <operator pos:line="43" pos:column="24">!=<pos:position pos:line="43" pos:column="26"/></operator> <name pos:line="43" pos:column="27">NULL<pos:position pos:line="43" pos:column="31"/></name></expr>)<pos:position pos:line="43" pos:column="32"/></condition><then pos:line="43" pos:column="32"> <block pos:line="43" pos:column="33">{
      <comment type="block" pos:line="44" pos:column="7">/*
       * We supply the description, so we know it doesn't have to
       * have any escaping/encoding applied to it.
       */</comment>
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">ap_fputstrs<pos:position pos:line="48" pos:column="18"/></name><argument_list pos:line="48" pos:column="18">(<argument><expr><name pos:line="48" pos:column="19">output<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="27">bb<pos:position pos:line="48" pos:column="29"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="49" pos:column="19">"&lt;D:responsedescription&gt;"<pos:position pos:line="49" pos:column="50"/></literal></expr></argument>,
                  <argument><expr><name><name pos:line="50" pos:column="19">response<pos:position pos:line="50" pos:column="27"/></name><operator pos:line="50" pos:column="27">-&gt;<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="29">desc<pos:position pos:line="50" pos:column="33"/></name></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="51" pos:column="19">"&lt;/D:responsedescription&gt;"<pos:position pos:line="51" pos:column="51"/></literal> <name pos:line="51" pos:column="46">DEBUG_CR<pos:position pos:line="51" pos:column="54"/></name></expr></argument>,
                  <argument><expr><name pos:line="52" pos:column="19">NULL<pos:position pos:line="52" pos:column="23"/></name></expr></argument>)<pos:position pos:line="52" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">ap_fputs<pos:position pos:line="55" pos:column="13"/></name><argument_list pos:line="55" pos:column="13">(<argument><expr><name pos:line="55" pos:column="14">output<pos:position pos:line="55" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="22">bb<pos:position pos:line="55" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="26">"&lt;/D:response&gt;"<pos:position pos:line="55" pos:column="47"/></literal> <name pos:line="55" pos:column="42">DEBUG_CR<pos:position pos:line="55" pos:column="50"/></name></expr></argument>)<pos:position pos:line="55" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="52"/></expr_stmt>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

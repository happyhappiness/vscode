<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1554_httpd-2.2.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ef_input_filter<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">ap_filter_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">f<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">apr_bucket_brigade<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">bb<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="2" pos:column="28">ap_input_mode_t<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">mode<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">apr_read_type_e<pos:position pos:line="2" pos:column="65"/></name></type> <name pos:line="2" pos:column="66">block<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
                           <parameter><decl><type><name pos:line="3" pos:column="28">apr_off_t<pos:position pos:line="3" pos:column="37"/></name></type> <name pos:line="3" pos:column="38">readbytes<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="48"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ef_ctx_t<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">ctx<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name><name pos:line="5" pos:column="21">f<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">ctx<pos:position pos:line="5" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">ctx<pos:position pos:line="8" pos:column="13"/></name></expr>)<pos:position pos:line="8" pos:column="14"/></condition><then pos:line="8" pos:column="14"> <block pos:line="8" pos:column="15">{
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">(<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">rv<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <call><name pos:line="9" pos:column="19">init_filter_instance<pos:position pos:line="9" pos:column="39"/></name><argument_list pos:line="9" pos:column="39">(<argument><expr><name pos:line="9" pos:column="40">f<pos:position pos:line="9" pos:column="41"/></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call><operator pos:line="9" pos:column="42">)<pos:position pos:line="9" pos:column="43"/></operator> <operator pos:line="9" pos:column="44">!=<pos:position pos:line="9" pos:column="46"/></operator> <name pos:line="9" pos:column="47">APR_SUCCESS<pos:position pos:line="9" pos:column="58"/></name></expr>)<pos:position pos:line="9" pos:column="59"/></condition><then pos:line="9" pos:column="59"> <block pos:line="9" pos:column="60">{
            <return pos:line="10" pos:column="13">return <expr><name pos:line="10" pos:column="20">rv<pos:position pos:line="10" pos:column="22"/></name></expr>;<pos:position pos:line="10" pos:column="23"/></return>
        }<pos:position pos:line="11" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="12" pos:column="9">ctx<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <name><name pos:line="12" pos:column="15">f<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">ctx<pos:position pos:line="12" pos:column="21"/></name></name></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">ctx<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">noop<pos:position pos:line="15" pos:column="18"/></name></name></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19"> <block pos:line="15" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">ap_remove_input_filter<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">f<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><call><name pos:line="17" pos:column="16">ap_get_brigade<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name><name pos:line="17" pos:column="31">f<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">next<pos:position pos:line="17" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="40">bb<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">mode<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">block<pos:position pos:line="17" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="57">readbytes<pos:position pos:line="17" pos:column="66"/></name></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="68"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">rv<pos:position pos:line="20" pos:column="7"/></name> <operator pos:line="20" pos:column="8">=<pos:position pos:line="20" pos:column="9"/></operator> <call><name pos:line="20" pos:column="10">ap_get_brigade<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name><name pos:line="20" pos:column="25">f<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">-&gt;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="28">next<pos:position pos:line="20" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">bb<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="38">mode<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="44">block<pos:position pos:line="20" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="51">readbytes<pos:position pos:line="20" pos:column="60"/></name></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="62"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">rv<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">!=<pos:position pos:line="21" pos:column="14"/></operator> <name pos:line="21" pos:column="15">APR_SUCCESS<pos:position pos:line="21" pos:column="26"/></name></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27"> <block pos:line="21" pos:column="28">{
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">rv<pos:position pos:line="22" pos:column="18"/></name></expr>;<pos:position pos:line="22" pos:column="19"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="25" pos:column="5">rv<pos:position pos:line="25" pos:column="7"/></name> <operator pos:line="25" pos:column="8">=<pos:position pos:line="25" pos:column="9"/></operator> <call><name pos:line="25" pos:column="10">ef_unified_filter<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">f<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="31">bb<pos:position pos:line="25" pos:column="33"/></name></expr></argument>)<pos:position pos:line="25" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
    <return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">rv<pos:position pos:line="26" pos:column="14"/></name></expr>;<pos:position pos:line="26" pos:column="15"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

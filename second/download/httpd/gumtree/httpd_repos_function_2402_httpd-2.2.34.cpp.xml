<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2402_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name> <name pos:line="1" pos:column="21">__stdcall<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">worker_main<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">void<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">thread_num_val<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="3" pos:column="5">static<pos:position pos:line="3" pos:column="11"/></specifier> <type><name pos:line="3" pos:column="12">int<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">requests_this_child<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><literal type="number" pos:line="3" pos:column="38">0<pos:position pos:line="3" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">PCOMP_CONTEXT<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">context<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">NULL<pos:position pos:line="4" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">thread_num<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><operator pos:line="5" pos:column="22">(<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="23">int<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">)<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="27">thread_num_val<pos:position pos:line="5" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">ap_sb_handle_t<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">sbh<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>

    <while pos:line="8" pos:column="5">while <condition pos:line="8" pos:column="11">(<expr><literal type="number" pos:line="8" pos:column="12">1<pos:position pos:line="8" pos:column="13"/></literal></expr>)<pos:position pos:line="8" pos:column="14"/></condition> <block pos:line="8" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">conn_rec<pos:position pos:line="9" pos:column="17"/></name> <modifier pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></modifier></type><name pos:line="9" pos:column="19">c<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">apr_int32_t<pos:position pos:line="10" pos:column="20"/></name></type> <name pos:line="10" pos:column="21">disconnected<pos:position pos:line="10" pos:column="33"/></name></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="12" pos:column="9">ap_update_child_status_from_indexes<pos:position pos:line="12" pos:column="44"/></name><argument_list pos:line="12" pos:column="44">(<argument><expr><literal type="number" pos:line="12" pos:column="45">0<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">thread_num<pos:position pos:line="12" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="60">SERVER_READY<pos:position pos:line="12" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="74">NULL<pos:position pos:line="12" pos:column="78"/></name></expr></argument>)<pos:position pos:line="12" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="80"/></expr_stmt>

        <comment type="block" pos:line="14" pos:column="9">/* Grab a connection off the network */</comment>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">use_acceptex<pos:position pos:line="15" pos:column="25"/></name></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26"> <block pos:line="15" pos:column="27">{
            <expr_stmt><expr><name pos:line="16" pos:column="13">context<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <call><name pos:line="16" pos:column="23">winnt_get_connection<pos:position pos:line="16" pos:column="43"/></name><argument_list pos:line="16" pos:column="43">(<argument><expr><name pos:line="16" pos:column="44">context<pos:position pos:line="16" pos:column="51"/></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></then>
        <else pos:line="18" pos:column="9">else <block pos:line="18" pos:column="14">{
            <expr_stmt><expr><name pos:line="19" pos:column="13">context<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <call><name pos:line="19" pos:column="23">win9x_get_connection<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">(<argument><expr><name pos:line="19" pos:column="44">context<pos:position pos:line="19" pos:column="51"/></name></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></else></if>

        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">context<pos:position pos:line="22" pos:column="21"/></name></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22"> <block pos:line="22" pos:column="23">{
            <comment type="block" pos:line="23" pos:column="13">/* Time for the thread to exit */</comment>
            <break pos:line="24" pos:column="13">break;<pos:position pos:line="24" pos:column="19"/></break>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="27" pos:column="9">/* Have we hit MaxRequestPerChild connections? */</comment>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">ap_max_requests_per_child<pos:position pos:line="28" pos:column="38"/></name></expr>)<pos:position pos:line="28" pos:column="39"/></condition><then pos:line="28" pos:column="39"> <block pos:line="28" pos:column="40">{
            <expr_stmt><expr><name pos:line="29" pos:column="13">requests_this_child<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">++<pos:position pos:line="29" pos:column="34"/></operator></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><name pos:line="30" pos:column="17">requests_this_child<pos:position pos:line="30" pos:column="36"/></name> <operator pos:line="30" pos:column="37">&gt;<pos:position pos:line="30" pos:column="41"/></operator> <name pos:line="30" pos:column="39">ap_max_requests_per_child<pos:position pos:line="30" pos:column="64"/></name></expr>)<pos:position pos:line="30" pos:column="65"/></condition><then pos:line="30" pos:column="65"> <block pos:line="30" pos:column="66">{
                <expr_stmt><expr><call><name pos:line="31" pos:column="17">SetEvent<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">max_requests_per_child_event<pos:position pos:line="31" pos:column="54"/></name></expr></argument>)<pos:position pos:line="31" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="32" pos:column="14"/></block></then></if>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="35" pos:column="9">ap_create_sb_handle<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><operator pos:line="35" pos:column="29">&amp;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="30">sbh<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="35">context<pos:position pos:line="35" pos:column="42"/></name><operator pos:line="35" pos:column="42">-&gt;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="44">ptrans<pos:position pos:line="35" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="52">0<pos:position pos:line="35" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="55">thread_num<pos:position pos:line="35" pos:column="65"/></name></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="36" pos:column="9">c<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <call><name pos:line="36" pos:column="13">ap_run_create_connection<pos:position pos:line="36" pos:column="37"/></name><argument_list pos:line="36" pos:column="37">(<argument><expr><name><name pos:line="36" pos:column="38">context<pos:position pos:line="36" pos:column="45"/></name><operator pos:line="36" pos:column="45">-&gt;<pos:position pos:line="36" pos:column="50"/></operator><name pos:line="36" pos:column="47">ptrans<pos:position pos:line="36" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="55">ap_server_conf<pos:position pos:line="36" pos:column="69"/></name></expr></argument>,
                                     <argument><expr><name><name pos:line="37" pos:column="38">context<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">-&gt;<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="47">sock<pos:position pos:line="37" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="53">thread_num<pos:position pos:line="37" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="65">sbh<pos:position pos:line="37" pos:column="68"/></name></expr></argument>,
                                     <argument><expr><name><name pos:line="38" pos:column="38">context<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">-&gt;<pos:position pos:line="38" pos:column="50"/></operator><name pos:line="38" pos:column="47">ba<pos:position pos:line="38" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="51"/></expr_stmt>

        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">c<pos:position pos:line="40" pos:column="14"/></name></expr>)<pos:position pos:line="40" pos:column="15"/></condition><then pos:line="40" pos:column="15"> <block pos:line="40" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">ap_process_connection<pos:position pos:line="41" pos:column="34"/></name><argument_list pos:line="41" pos:column="34">(<argument><expr><name pos:line="41" pos:column="35">c<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="38">context<pos:position pos:line="41" pos:column="45"/></name><operator pos:line="41" pos:column="45">-&gt;<pos:position pos:line="41" pos:column="50"/></operator><name pos:line="41" pos:column="47">sock<pos:position pos:line="41" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">apr_socket_opt_get<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><name><name pos:line="42" pos:column="32">context<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">-&gt;<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="41">sock<pos:position pos:line="42" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="47">APR_SO_DISCONNECTED<pos:position pos:line="42" pos:column="66"/></name></expr></argument>,
                               <argument><expr><operator pos:line="43" pos:column="32">&amp;<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="33">disconnected<pos:position pos:line="43" pos:column="45"/></name></expr></argument>)<pos:position pos:line="43" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="47"/></expr_stmt>
            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><operator pos:line="44" pos:column="17">!<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="18">disconnected<pos:position pos:line="44" pos:column="30"/></name></expr>)<pos:position pos:line="44" pos:column="31"/></condition><then pos:line="44" pos:column="31"> <block pos:line="44" pos:column="32">{
                <expr_stmt><expr><name><name pos:line="45" pos:column="17">context<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">-&gt;<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="26">accept_socket<pos:position pos:line="45" pos:column="39"/></name></name> <operator pos:line="45" pos:column="40">=<pos:position pos:line="45" pos:column="41"/></operator> <name pos:line="45" pos:column="42">INVALID_SOCKET<pos:position pos:line="45" pos:column="56"/></name></expr>;<pos:position pos:line="45" pos:column="57"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="46" pos:column="17">ap_lingering_close<pos:position pos:line="46" pos:column="35"/></name><argument_list pos:line="46" pos:column="35">(<argument><expr><name pos:line="46" pos:column="36">c<pos:position pos:line="46" pos:column="37"/></name></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="47" pos:column="14"/></block></then>
            <elseif pos:line="48" pos:column="13">else <if pos:line="48" pos:column="18">if <condition pos:line="48" pos:column="21">(<expr><operator pos:line="48" pos:column="22">!<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="23">use_acceptex<pos:position pos:line="48" pos:column="35"/></name></expr>)<pos:position pos:line="48" pos:column="36"/></condition><then pos:line="48" pos:column="36"> <block pos:line="48" pos:column="37">{
                <comment type="block" pos:line="49" pos:column="17">/* If the socket is disconnected but we are not using acceptex,
                 * we cannot reuse the socket. Disconnected sockets are removed
                 * from the apr_socket_t struct by apr_sendfile() to prevent the
                 * socket descriptor from being inadvertently closed by a call
                 * to apr_socket_close(), so close it directly.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="55" pos:column="17">closesocket<pos:position pos:line="55" pos:column="28"/></name><argument_list pos:line="55" pos:column="28">(<argument><expr><name><name pos:line="55" pos:column="29">context<pos:position pos:line="55" pos:column="36"/></name><operator pos:line="55" pos:column="36">-&gt;<pos:position pos:line="55" pos:column="41"/></operator><name pos:line="55" pos:column="38">accept_socket<pos:position pos:line="55" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="56" pos:column="17">context<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">-&gt;<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="26">accept_socket<pos:position pos:line="56" pos:column="39"/></name></name> <operator pos:line="56" pos:column="40">=<pos:position pos:line="56" pos:column="41"/></operator> <name pos:line="56" pos:column="42">INVALID_SOCKET<pos:position pos:line="56" pos:column="56"/></name></expr>;<pos:position pos:line="56" pos:column="57"/></expr_stmt>
            }<pos:position pos:line="57" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="58" pos:column="10"/></block></then>
        <else pos:line="59" pos:column="9">else <block pos:line="59" pos:column="14">{
            <comment type="block" pos:line="60" pos:column="13">/* ap_run_create_connection closes the socket on failure */</comment>
            <expr_stmt><expr><name><name pos:line="61" pos:column="13">context<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">-&gt;<pos:position pos:line="61" pos:column="25"/></operator><name pos:line="61" pos:column="22">accept_socket<pos:position pos:line="61" pos:column="35"/></name></name> <operator pos:line="61" pos:column="36">=<pos:position pos:line="61" pos:column="37"/></operator> <name pos:line="61" pos:column="38">INVALID_SOCKET<pos:position pos:line="61" pos:column="52"/></name></expr>;<pos:position pos:line="61" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="62" pos:column="10"/></block></else></if>
    }<pos:position pos:line="63" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="65" pos:column="5">ap_update_child_status_from_indexes<pos:position pos:line="65" pos:column="40"/></name><argument_list pos:line="65" pos:column="40">(<argument><expr><literal type="number" pos:line="65" pos:column="41">0<pos:position pos:line="65" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="44">thread_num<pos:position pos:line="65" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="56">SERVER_DEAD<pos:position pos:line="65" pos:column="67"/></name></expr></argument>,
                                        <argument><expr><operator pos:line="66" pos:column="41">(<pos:position pos:line="66" pos:column="42"/></operator><name pos:line="66" pos:column="42">request_rec<pos:position pos:line="66" pos:column="53"/></name> <operator pos:line="66" pos:column="54">*<pos:position pos:line="66" pos:column="55"/></operator><operator pos:line="66" pos:column="55">)<pos:position pos:line="66" pos:column="56"/></operator> <name pos:line="66" pos:column="57">NULL<pos:position pos:line="66" pos:column="61"/></name></expr></argument>)<pos:position pos:line="66" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="63"/></expr_stmt>

    <return pos:line="68" pos:column="5">return <expr><literal type="number" pos:line="68" pos:column="12">0<pos:position pos:line="68" pos:column="13"/></literal></expr>;<pos:position pos:line="68" pos:column="14"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

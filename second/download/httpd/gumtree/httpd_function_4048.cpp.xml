<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4048.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">magic_process<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">request_rec<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">r<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_file_t<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">fd<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name pos:line="3" pos:column="22">NULL<pos:position pos:line="3" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">char<pos:position pos:line="4" pos:column="18"/></name></type> <name><name pos:line="4" pos:column="19">buf<pos:position pos:line="4" pos:column="22"/></name><index pos:line="4" pos:column="22">[<expr><name pos:line="4" pos:column="23">HOWMANY<pos:position pos:line="4" pos:column="30"/></name> <operator pos:line="4" pos:column="31">+<pos:position pos:line="4" pos:column="32"/></operator> <literal type="number" pos:line="4" pos:column="33">1<pos:position pos:line="4" pos:column="34"/></literal></expr>]<pos:position pos:line="4" pos:column="35"/></index></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>  <comment type="block" pos:line="4" pos:column="38">/* one extra for terminating '\0' */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">nbytes<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><literal type="number" pos:line="5" pos:column="25">0<pos:position pos:line="5" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>           <comment type="block" pos:line="5" pos:column="38">/* number of bytes read from a datafile */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">result<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/*
     * first try judging the file based on its filesystem status
     */</comment>
    <switch pos:line="11" pos:column="5">switch <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">result<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <call><name pos:line="11" pos:column="23">fsmagic<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">r<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="34">r<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">filename<pos:position pos:line="11" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call><operator pos:line="11" pos:column="46">)<pos:position pos:line="11" pos:column="47"/></operator></expr>)<pos:position pos:line="11" pos:column="48"/></condition> <block pos:line="11" pos:column="49">{
    <case pos:line="12" pos:column="5">case <expr><name pos:line="12" pos:column="10">DONE<pos:position pos:line="12" pos:column="14"/></name></expr>:<pos:position pos:line="12" pos:column="15"/></case>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">magic_rsl_putchar<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">r<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="30">'\n'<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">OK<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></return>
    <case pos:line="15" pos:column="5">case <expr><name pos:line="15" pos:column="10">OK<pos:position pos:line="15" pos:column="12"/></name></expr>:<pos:position pos:line="15" pos:column="13"/></case>
        <break pos:line="16" pos:column="9">break;<pos:position pos:line="16" pos:column="15"/></break>
    <default pos:line="17" pos:column="5">default:<pos:position pos:line="17" pos:column="13"/></default>
        <comment type="block" pos:line="18" pos:column="9">/* fatal error, bail out */</comment>
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">result<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></switch>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">apr_file_open<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><operator pos:line="22" pos:column="23">&amp;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="24">fd<pos:position pos:line="22" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="28">r<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">-&gt;<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="31">filename<pos:position pos:line="22" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="41">APR_READ<pos:position pos:line="22" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="51">APR_OS_DEFAULT<pos:position pos:line="22" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="67">r<pos:position pos:line="22" pos:column="68"/></name><operator pos:line="22" pos:column="68">-&gt;<pos:position pos:line="22" pos:column="73"/></operator><name pos:line="22" pos:column="70">pool<pos:position pos:line="22" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="75"/></argument_list></call> <operator pos:line="22" pos:column="76">!=<pos:position pos:line="22" pos:column="78"/></operator> <name pos:line="22" pos:column="79">APR_SUCCESS<pos:position pos:line="22" pos:column="90"/></name></expr>)<pos:position pos:line="22" pos:column="91"/></condition><then pos:line="22" pos:column="91"> <block pos:line="22" pos:column="92">{
        <comment type="block" pos:line="23" pos:column="9">/* We can't open it, but we were able to stat it. */</comment>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">ap_log_rerror<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">APLOG_MARK<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="35">APLOG_ERR<pos:position pos:line="24" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="46">0<pos:position pos:line="24" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="49">r<pos:position pos:line="24" pos:column="50"/></name></expr></argument>,
                    <argument><expr><name pos:line="25" pos:column="21">MODNAME<pos:position pos:line="25" pos:column="28"/></name> <literal type="string" pos:line="25" pos:column="29">": can't read `%s'"<pos:position pos:line="25" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="50">r<pos:position pos:line="25" pos:column="51"/></name><operator pos:line="25" pos:column="51">-&gt;<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="53">filename<pos:position pos:line="25" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="63"/></expr_stmt>
        <comment type="block" pos:line="26" pos:column="9">/* let some other handler decide what the problem is */</comment>
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">DECLINED<pos:position pos:line="27" pos:column="24"/></name></expr>;<pos:position pos:line="27" pos:column="25"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="30" pos:column="5">/*
     * try looking at the first HOWMANY bytes
     */</comment>
    <expr_stmt><expr><name pos:line="33" pos:column="5">nbytes<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <sizeof pos:line="33" pos:column="14">sizeof<argument_list pos:line="33" pos:column="20">(<argument><expr><name pos:line="33" pos:column="21">buf<pos:position pos:line="33" pos:column="24"/></name></expr></argument>)<pos:position pos:line="33" pos:column="25"/></argument_list></sizeof> <operator pos:line="33" pos:column="26">-<pos:position pos:line="33" pos:column="27"/></operator> <literal type="number" pos:line="33" pos:column="28">1<pos:position pos:line="33" pos:column="29"/></literal></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">(<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">result<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <call><name pos:line="34" pos:column="19">apr_file_read<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">fd<pos:position pos:line="34" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="37">(<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="38">char<pos:position pos:line="34" pos:column="42"/></name> <operator pos:line="34" pos:column="43">*<pos:position pos:line="34" pos:column="44"/></operator><operator pos:line="34" pos:column="44">)<pos:position pos:line="34" pos:column="45"/></operator> <name pos:line="34" pos:column="46">buf<pos:position pos:line="34" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="51">&amp;<pos:position pos:line="34" pos:column="56"/></operator><name pos:line="34" pos:column="52">nbytes<pos:position pos:line="34" pos:column="58"/></name></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call><operator pos:line="34" pos:column="59">)<pos:position pos:line="34" pos:column="60"/></operator> <operator pos:line="34" pos:column="61">!=<pos:position pos:line="34" pos:column="63"/></operator> <name pos:line="34" pos:column="64">APR_SUCCESS<pos:position pos:line="34" pos:column="75"/></name></expr>)<pos:position pos:line="34" pos:column="76"/></condition><then pos:line="34" pos:column="76"> <block pos:line="34" pos:column="77">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">ap_log_rerror<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">APLOG_MARK<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="35">APLOG_ERR<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="46">result<pos:position pos:line="35" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="54">r<pos:position pos:line="35" pos:column="55"/></name></expr></argument>,
                    <argument><expr><name pos:line="36" pos:column="21">MODNAME<pos:position pos:line="36" pos:column="28"/></name> <literal type="string" pos:line="36" pos:column="29">": read failed: %s"<pos:position pos:line="36" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="50">r<pos:position pos:line="36" pos:column="51"/></name><operator pos:line="36" pos:column="51">-&gt;<pos:position pos:line="36" pos:column="56"/></operator><name pos:line="36" pos:column="53">filename<pos:position pos:line="36" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="63"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="37" pos:column="42"/></name></expr>;<pos:position pos:line="37" pos:column="43"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">nbytes<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">==<pos:position pos:line="40" pos:column="18"/></operator> <literal type="number" pos:line="40" pos:column="19">0<pos:position pos:line="40" pos:column="20"/></literal></expr>)<pos:position pos:line="40" pos:column="21"/></condition><then pos:line="40" pos:column="21"> <block pos:line="40" pos:column="22">{
        <return pos:line="41" pos:column="9">return <expr><name pos:line="41" pos:column="16">DECLINED<pos:position pos:line="41" pos:column="24"/></name></expr>;<pos:position pos:line="41" pos:column="25"/></return>
    }<pos:position pos:line="42" pos:column="6"/></block></then>
    <else pos:line="43" pos:column="5">else <block pos:line="43" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="44" pos:column="9">buf<pos:position pos:line="44" pos:column="12"/></name><index pos:line="44" pos:column="12">[<expr><name pos:line="44" pos:column="13">nbytes<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">++<pos:position pos:line="44" pos:column="21"/></operator></expr>]<pos:position pos:line="44" pos:column="22"/></index></name> <operator pos:line="44" pos:column="23">=<pos:position pos:line="44" pos:column="24"/></operator> <literal type="char" pos:line="44" pos:column="25">'\0'<pos:position pos:line="44" pos:column="29"/></literal></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>  <comment type="block" pos:line="44" pos:column="32">/* null-terminate it */</comment>
        <expr_stmt><expr><name pos:line="45" pos:column="9">result<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">=<pos:position pos:line="45" pos:column="17"/></operator> <call><name pos:line="45" pos:column="18">tryit<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><name pos:line="45" pos:column="24">r<pos:position pos:line="45" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="27">buf<pos:position pos:line="45" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="32">nbytes<pos:position pos:line="45" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="40">1<pos:position pos:line="45" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="43"/></expr_stmt>
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">result<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">!=<pos:position pos:line="46" pos:column="22"/></operator> <name pos:line="46" pos:column="23">OK<pos:position pos:line="46" pos:column="25"/></name></expr>)<pos:position pos:line="46" pos:column="26"/></condition><then pos:line="46" pos:column="26"> <block pos:line="46" pos:column="27">{
            <return pos:line="47" pos:column="13">return <expr><name pos:line="47" pos:column="20">result<pos:position pos:line="47" pos:column="26"/></name></expr>;<pos:position pos:line="47" pos:column="27"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>
    }<pos:position pos:line="49" pos:column="6"/></block></else></if>

    <expr_stmt><expr><operator pos:line="51" pos:column="5">(<pos:position pos:line="51" pos:column="6"/></operator><name pos:line="51" pos:column="6">void<pos:position pos:line="51" pos:column="10"/></name><operator pos:line="51" pos:column="10">)<pos:position pos:line="51" pos:column="11"/></operator> <call><name pos:line="51" pos:column="12">apr_file_close<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">fd<pos:position pos:line="51" pos:column="29"/></name></expr></argument>)<pos:position pos:line="51" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="52" pos:column="5">(<pos:position pos:line="52" pos:column="6"/></operator><name pos:line="52" pos:column="6">void<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">)<pos:position pos:line="52" pos:column="11"/></operator> <call><name pos:line="52" pos:column="12">magic_rsl_putchar<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><name pos:line="52" pos:column="30">r<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="52" pos:column="33">'\n'<pos:position pos:line="52" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="39"/></expr_stmt>

    <return pos:line="54" pos:column="5">return <expr><name pos:line="54" pos:column="12">OK<pos:position pos:line="54" pos:column="14"/></name></expr>;<pos:position pos:line="54" pos:column="15"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_134.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">ssl_hook_CloseConnection<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">SSLFilterRec<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">filter<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SSL<pos:position pos:line="3" pos:column="8"/></name> <modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">ssl<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name><name pos:line="3" pos:column="16">filter<pos:position pos:line="3" pos:column="22"/></name><operator pos:line="3" pos:column="22">-&gt;<pos:position pos:line="3" pos:column="27"/></operator><name pos:line="3" pos:column="24">pssl<pos:position pos:line="3" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">type<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><literal type="string" pos:line="4" pos:column="24">""<pos:position pos:line="4" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">conn_rec<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">conn<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SSLConnRec<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">sslconn<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">ssl<pos:position pos:line="8" pos:column="13"/></name></expr>)<pos:position pos:line="8" pos:column="14"/></condition><then pos:line="8" pos:column="14"> <block pos:line="8" pos:column="15">{
        <return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">APR_SUCCESS<pos:position pos:line="9" pos:column="27"/></name></expr>;<pos:position pos:line="9" pos:column="28"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="12" pos:column="5">conn<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">conn_rec<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></operator><operator pos:line="12" pos:column="23">)<pos:position pos:line="12" pos:column="24"/></operator><call><name pos:line="12" pos:column="24">SSL_get_app_data<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><name pos:line="12" pos:column="41">ssl<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">sslconn<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <call><name pos:line="13" pos:column="15">myConnConfig<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">conn<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="15" pos:column="5">/*
     * Now close the SSL layer of the connection. We've to take
     * the TLSv1 standard into account here:
     *
     * | 7.2.1. Closure alerts
     * |
     * | The client and the server must share knowledge that the connection is
     * | ending in order to avoid a truncation attack. Either party may
     * | initiate the exchange of closing messages.
     * |
     * | close_notify
     * |     This message notifies the recipient that the sender will not send
     * |     any more messages on this connection. The session becomes
     * |     unresumable if any connection is terminated without proper
     * |     close_notify messages with level equal to warning.
     * |
     * | Either party may initiate a close by sending a close_notify alert.
     * | Any data received after a closure alert is ignored.
     * |
     * | Each party is required to send a close_notify alert before closing
     * | the write side of the connection. It is required that the other party
     * | respond with a close_notify alert of its own and close down the
     * | connection immediately, discarding any pending writes. It is not
     * | required for the initiator of the close to wait for the responding
     * | close_notify alert before closing the read side of the connection.
     *
     * This means we've to send a close notify message, but haven't to wait
     * for the close notify of the client. Actually we cannot wait for the
     * close notify of the client because some clients (including Netscape
     * 4.x) don't send one, so we would hang.
     */</comment>

    <comment type="block" pos:line="47" pos:column="5">/*
     * exchange close notify messages, but allow the user
     * to force the type of handshake via SetEnvIf directive
     */</comment>
    <switch pos:line="51" pos:column="5">switch <condition pos:line="51" pos:column="12">(<expr><name><name pos:line="51" pos:column="13">sslconn<pos:position pos:line="51" pos:column="20"/></name><operator pos:line="51" pos:column="20">-&gt;<pos:position pos:line="51" pos:column="25"/></operator><name pos:line="51" pos:column="22">shutdown_type<pos:position pos:line="51" pos:column="35"/></name></name></expr>)<pos:position pos:line="51" pos:column="36"/></condition> <block pos:line="51" pos:column="37">{
      <case pos:line="52" pos:column="7">case <expr><name pos:line="52" pos:column="12">SSL_SHUTDOWN_TYPE_UNSET<pos:position pos:line="52" pos:column="35"/></name></expr>:<pos:position pos:line="52" pos:column="36"/></case>
      <case pos:line="53" pos:column="7">case <expr><name pos:line="53" pos:column="12">SSL_SHUTDOWN_TYPE_STANDARD<pos:position pos:line="53" pos:column="38"/></name></expr>:<pos:position pos:line="53" pos:column="39"/></case>
        <comment type="block" pos:line="54" pos:column="9">/* send close notify, but don't wait for clients close notify
           (standard compliant and safe, so it's the DEFAULT!) */</comment>
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">SSL_set_shutdown<pos:position pos:line="56" pos:column="25"/></name><argument_list pos:line="56" pos:column="25">(<argument><expr><name pos:line="56" pos:column="26">ssl<pos:position pos:line="56" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="31">SSL_RECEIVED_SHUTDOWN<pos:position pos:line="56" pos:column="52"/></name></expr></argument>)<pos:position pos:line="56" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name pos:line="57" pos:column="9">type<pos:position pos:line="57" pos:column="13"/></name> <operator pos:line="57" pos:column="14">=<pos:position pos:line="57" pos:column="15"/></operator> <literal type="string" pos:line="57" pos:column="16">"standard"<pos:position pos:line="57" pos:column="26"/></literal></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>
        <break pos:line="58" pos:column="9">break;<pos:position pos:line="58" pos:column="15"/></break>
      <case pos:line="59" pos:column="7">case <expr><name pos:line="59" pos:column="12">SSL_SHUTDOWN_TYPE_UNCLEAN<pos:position pos:line="59" pos:column="37"/></name></expr>:<pos:position pos:line="59" pos:column="38"/></case>
        <comment type="block" pos:line="60" pos:column="9">/* perform no close notify handshake at all
           (violates the SSL/TLS standard!) */</comment>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">SSL_set_shutdown<pos:position pos:line="62" pos:column="25"/></name><argument_list pos:line="62" pos:column="25">(<argument><expr><name pos:line="62" pos:column="26">ssl<pos:position pos:line="62" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="31">SSL_SENT_SHUTDOWN<pos:position pos:line="62" pos:column="48"/></name><operator pos:line="62" pos:column="48">|<pos:position pos:line="62" pos:column="49"/></operator><name pos:line="62" pos:column="49">SSL_RECEIVED_SHUTDOWN<pos:position pos:line="62" pos:column="70"/></name></expr></argument>)<pos:position pos:line="62" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name pos:line="63" pos:column="9">type<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">=<pos:position pos:line="63" pos:column="15"/></operator> <literal type="string" pos:line="63" pos:column="16">"unclean"<pos:position pos:line="63" pos:column="25"/></literal></expr>;<pos:position pos:line="63" pos:column="26"/></expr_stmt>
        <break pos:line="64" pos:column="9">break;<pos:position pos:line="64" pos:column="15"/></break>
      <case pos:line="65" pos:column="7">case <expr><name pos:line="65" pos:column="12">SSL_SHUTDOWN_TYPE_ACCURATE<pos:position pos:line="65" pos:column="38"/></name></expr>:<pos:position pos:line="65" pos:column="39"/></case>
        <comment type="block" pos:line="66" pos:column="9">/* send close notify and wait for clients close notify
           (standard compliant, but usually causes connection hangs) */</comment>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">SSL_set_shutdown<pos:position pos:line="68" pos:column="25"/></name><argument_list pos:line="68" pos:column="25">(<argument><expr><name pos:line="68" pos:column="26">ssl<pos:position pos:line="68" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="31">0<pos:position pos:line="68" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="69" pos:column="9">type<pos:position pos:line="69" pos:column="13"/></name> <operator pos:line="69" pos:column="14">=<pos:position pos:line="69" pos:column="15"/></operator> <literal type="string" pos:line="69" pos:column="16">"accurate"<pos:position pos:line="69" pos:column="26"/></literal></expr>;<pos:position pos:line="69" pos:column="27"/></expr_stmt>
        <break pos:line="70" pos:column="9">break;<pos:position pos:line="70" pos:column="15"/></break>
    }<pos:position pos:line="71" pos:column="6"/></block></switch>

    <expr_stmt><expr><call><name pos:line="73" pos:column="5">SSL_smart_shutdown<pos:position pos:line="73" pos:column="23"/></name><argument_list pos:line="73" pos:column="23">(<argument><expr><name pos:line="73" pos:column="24">ssl<pos:position pos:line="73" pos:column="27"/></name></expr></argument>)<pos:position pos:line="73" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="75" pos:column="5">/* and finally log the fact that we've closed the connection */</comment>
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name><name pos:line="76" pos:column="9">conn<pos:position pos:line="76" pos:column="13"/></name><operator pos:line="76" pos:column="13">-&gt;<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="15">base_server<pos:position pos:line="76" pos:column="26"/></name><operator pos:line="76" pos:column="26">-&gt;<pos:position pos:line="76" pos:column="31"/></operator><name pos:line="76" pos:column="28">loglevel<pos:position pos:line="76" pos:column="36"/></name></name> <operator pos:line="76" pos:column="37">&gt;=<pos:position pos:line="76" pos:column="42"/></operator> <name pos:line="76" pos:column="40">APLOG_INFO<pos:position pos:line="76" pos:column="50"/></name></expr>)<pos:position pos:line="76" pos:column="51"/></condition><then pos:line="76" pos:column="51"> <block pos:line="76" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">ap_log_error<pos:position pos:line="77" pos:column="21"/></name><argument_list pos:line="77" pos:column="21">(<argument><expr><name pos:line="77" pos:column="22">APLOG_MARK<pos:position pos:line="77" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="34">APLOG_INFO<pos:position pos:line="77" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="46">0<pos:position pos:line="77" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="49">conn<pos:position pos:line="77" pos:column="53"/></name><operator pos:line="77" pos:column="53">-&gt;<pos:position pos:line="77" pos:column="58"/></operator><name pos:line="77" pos:column="55">base_server<pos:position pos:line="77" pos:column="66"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="78" pos:column="22">"Connection to child %ld closed with %s shutdown"<pos:position pos:line="78" pos:column="71"/></literal>
                     <literal type="string" pos:line="79" pos:column="22">"(server %s, client %s)"<pos:position pos:line="79" pos:column="46"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="80" pos:column="22">conn<pos:position pos:line="80" pos:column="26"/></name><operator pos:line="80" pos:column="26">-&gt;<pos:position pos:line="80" pos:column="31"/></operator><name pos:line="80" pos:column="28">id<pos:position pos:line="80" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="32">type<pos:position pos:line="80" pos:column="36"/></name></expr></argument>,
                     <argument><expr><call><name pos:line="81" pos:column="22">ssl_util_vhostid<pos:position pos:line="81" pos:column="38"/></name><argument_list pos:line="81" pos:column="38">(<argument><expr><name><name pos:line="81" pos:column="39">conn<pos:position pos:line="81" pos:column="43"/></name><operator pos:line="81" pos:column="43">-&gt;<pos:position pos:line="81" pos:column="48"/></operator><name pos:line="81" pos:column="45">pool<pos:position pos:line="81" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="51">conn<pos:position pos:line="81" pos:column="55"/></name><operator pos:line="81" pos:column="55">-&gt;<pos:position pos:line="81" pos:column="60"/></operator><name pos:line="81" pos:column="57">base_server<pos:position pos:line="81" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="69"/></argument_list></call></expr></argument>,
                     <argument><expr><ternary><condition><expr><name><name pos:line="82" pos:column="22">conn<pos:position pos:line="82" pos:column="26"/></name><operator pos:line="82" pos:column="26">-&gt;<pos:position pos:line="82" pos:column="31"/></operator><name pos:line="82" pos:column="28">remote_ip<pos:position pos:line="82" pos:column="37"/></name></name></expr> ?<pos:position pos:line="82" pos:column="39"/></condition><then pos:line="82" pos:column="39"> <expr><name><name pos:line="82" pos:column="40">conn<pos:position pos:line="82" pos:column="44"/></name><operator pos:line="82" pos:column="44">-&gt;<pos:position pos:line="82" pos:column="49"/></operator><name pos:line="82" pos:column="46">remote_ip<pos:position pos:line="82" pos:column="55"/></name></name></expr> <pos:position pos:line="82" pos:column="56"/></then><else pos:line="82" pos:column="56">: <expr><literal type="string" pos:line="82" pos:column="58">"unknown"<pos:position pos:line="82" pos:column="67"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="82" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="85" pos:column="5">/* deallocate the SSL connection */</comment>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">SSL_free<pos:position pos:line="86" pos:column="13"/></name><argument_list pos:line="86" pos:column="13">(<argument><expr><name pos:line="86" pos:column="14">ssl<pos:position pos:line="86" pos:column="17"/></name></expr></argument>)<pos:position pos:line="86" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="87" pos:column="5">sslconn<pos:position pos:line="87" pos:column="12"/></name><operator pos:line="87" pos:column="12">-&gt;<pos:position pos:line="87" pos:column="17"/></operator><name pos:line="87" pos:column="14">ssl<pos:position pos:line="87" pos:column="17"/></name></name> <operator pos:line="87" pos:column="18">=<pos:position pos:line="87" pos:column="19"/></operator> <name pos:line="87" pos:column="20">NULL<pos:position pos:line="87" pos:column="24"/></name></expr>;<pos:position pos:line="87" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="88" pos:column="5">filter<pos:position pos:line="88" pos:column="11"/></name><operator pos:line="88" pos:column="11">-&gt;<pos:position pos:line="88" pos:column="16"/></operator><name pos:line="88" pos:column="13">pssl<pos:position pos:line="88" pos:column="17"/></name></name> <operator pos:line="88" pos:column="18">=<pos:position pos:line="88" pos:column="19"/></operator> <name pos:line="88" pos:column="20">NULL<pos:position pos:line="88" pos:column="24"/></name></expr>;<pos:position pos:line="88" pos:column="25"/></expr_stmt> <comment type="block" pos:line="88" pos:column="26">/* so filters know we've been shutdown */</comment>

    <return pos:line="90" pos:column="5">return <expr><name pos:line="90" pos:column="12">APR_SUCCESS<pos:position pos:line="90" pos:column="23"/></name></expr>;<pos:position pos:line="90" pos:column="24"/></return>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

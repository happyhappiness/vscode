<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1886_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">authn_ldap_build_filter<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">filtbuf<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">request_rec<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">r<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>,
                             <parameter><decl><type><specifier pos:line="3" pos:column="30">const<pos:position pos:line="3" pos:column="35"/></specifier> <name pos:line="3" pos:column="36">char<pos:position pos:line="3" pos:column="40"/></name><modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type> <name pos:line="3" pos:column="42">sent_user<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>,
                             <parameter><decl><type><specifier pos:line="4" pos:column="30">const<pos:position pos:line="4" pos:column="35"/></specifier> <name pos:line="4" pos:column="36">char<pos:position pos:line="4" pos:column="40"/></name><modifier pos:line="4" pos:column="40">*<pos:position pos:line="4" pos:column="41"/></modifier></type> <name pos:line="4" pos:column="42">sent_filter<pos:position pos:line="4" pos:column="53"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="5" pos:column="30">authn_ldap_config_t<pos:position pos:line="5" pos:column="49"/></name> <modifier pos:line="5" pos:column="50">*<pos:position pos:line="5" pos:column="51"/></modifier></type><name pos:line="5" pos:column="51">sec<pos:position pos:line="5" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="55"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">p<pos:position pos:line="7" pos:column="12"/></name></decl>, <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="15">q<pos:position pos:line="7" pos:column="16"/></name></decl>, <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="19">filtbuf_end<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">user<pos:position pos:line="8" pos:column="15"/></name></decl>, <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="18">filter<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_xlate_t<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">convset<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><name pos:line="9" pos:column="28">NULL<pos:position pos:line="9" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">inbytes<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_size_t<pos:position pos:line="11" pos:column="15"/></name></type> <name pos:line="11" pos:column="16">outbytes<pos:position pos:line="11" pos:column="24"/></name></decl>;<pos:position pos:line="11" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">outbuf<pos:position pos:line="12" pos:column="17"/></name></decl>;<pos:position pos:line="12" pos:column="18"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">sent_user<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">!=<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">NULL<pos:position pos:line="14" pos:column="26"/></name></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27"> <block pos:line="14" pos:column="28">{
        <expr_stmt><expr><name pos:line="15" pos:column="9">user<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <call><name pos:line="15" pos:column="16">apr_pstrdup<pos:position pos:line="15" pos:column="27"/></name> <argument_list pos:line="15" pos:column="28">(<argument><expr><name><name pos:line="15" pos:column="29">r<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">-&gt;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="32">pool<pos:position pos:line="15" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">sent_user<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then>
    <else pos:line="17" pos:column="5">else
        <block type="pseudo"><return pos:line="18" pos:column="9">return;<pos:position pos:line="18" pos:column="16"/></return></block></else></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">sent_filter<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">!=<pos:position pos:line="20" pos:column="23"/></operator> <name pos:line="20" pos:column="24">NULL<pos:position pos:line="20" pos:column="28"/></name></expr>)<pos:position pos:line="20" pos:column="29"/></condition><then pos:line="20" pos:column="29"> <block pos:line="20" pos:column="30">{
        <expr_stmt><expr><name pos:line="21" pos:column="9">filter<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">apr_pstrdup<pos:position pos:line="21" pos:column="29"/></name> <argument_list pos:line="21" pos:column="30">(<argument><expr><name><name pos:line="21" pos:column="31">r<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">-&gt;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="34">pool<pos:position pos:line="21" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="40">sent_filter<pos:position pos:line="21" pos:column="51"/></name></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then>
    <else pos:line="23" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="9">filter<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <name><name pos:line="24" pos:column="18">sec<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">filter<pos:position pos:line="24" pos:column="29"/></name></name></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt></block></else></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">charset_conversions<pos:position pos:line="26" pos:column="28"/></name></expr>)<pos:position pos:line="26" pos:column="29"/></condition><then pos:line="26" pos:column="29"> <block pos:line="26" pos:column="30">{
        <expr_stmt><expr><name pos:line="27" pos:column="9">convset<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <call><name pos:line="27" pos:column="19">get_conv_set<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">r<pos:position pos:line="27" pos:column="33"/></name></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">convset<pos:position pos:line="30" pos:column="16"/></name></expr>)<pos:position pos:line="30" pos:column="17"/></condition><then pos:line="30" pos:column="17"> <block pos:line="30" pos:column="18">{
        <expr_stmt><expr><name pos:line="31" pos:column="9">inbytes<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <call><name pos:line="31" pos:column="19">strlen<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">user<pos:position pos:line="31" pos:column="30"/></name></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="32" pos:column="9">outbytes<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">=<pos:position pos:line="32" pos:column="19"/></operator> <operator pos:line="32" pos:column="20">(<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">inbytes<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">+<pos:position pos:line="32" pos:column="29"/></operator><literal type="number" pos:line="32" pos:column="29">1<pos:position pos:line="32" pos:column="30"/></literal><operator pos:line="32" pos:column="30">)<pos:position pos:line="32" pos:column="31"/></operator><operator pos:line="32" pos:column="31">*<pos:position pos:line="32" pos:column="32"/></operator><literal type="number" pos:line="32" pos:column="32">3<pos:position pos:line="32" pos:column="33"/></literal></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="33" pos:column="9">outbuf<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <call><name pos:line="33" pos:column="18">apr_pcalloc<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name><name pos:line="33" pos:column="30">r<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">-&gt;<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="33">pool<pos:position pos:line="33" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="39">outbytes<pos:position pos:line="33" pos:column="47"/></name></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt>

        <comment type="block" pos:line="35" pos:column="9">/* Convert the user name to UTF-8.  This is only valid for LDAP v3 */</comment>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><call><name pos:line="36" pos:column="13">apr_xlate_conv_buffer<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><name pos:line="36" pos:column="35">convset<pos:position pos:line="36" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="44">user<pos:position pos:line="36" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="50">&amp;<pos:position pos:line="36" pos:column="55"/></operator><name pos:line="36" pos:column="51">inbytes<pos:position pos:line="36" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="60">outbuf<pos:position pos:line="36" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="68">&amp;<pos:position pos:line="36" pos:column="73"/></operator><name pos:line="36" pos:column="69">outbytes<pos:position pos:line="36" pos:column="77"/></name></expr></argument>)<pos:position pos:line="36" pos:column="78"/></argument_list></call> <operator pos:line="36" pos:column="79">==<pos:position pos:line="36" pos:column="81"/></operator> <name pos:line="36" pos:column="82">APR_SUCCESS<pos:position pos:line="36" pos:column="93"/></name></expr>)<pos:position pos:line="36" pos:column="94"/></condition><then pos:line="36" pos:column="94"> <block pos:line="36" pos:column="95">{
            <expr_stmt><expr><name pos:line="37" pos:column="13">user<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <call><name pos:line="37" pos:column="20">apr_pstrdup<pos:position pos:line="37" pos:column="31"/></name><argument_list pos:line="37" pos:column="31">(<argument><expr><name><name pos:line="37" pos:column="32">r<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">-&gt;<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="35">pool<pos:position pos:line="37" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="41">outbuf<pos:position pos:line="37" pos:column="47"/></name></expr></argument>)<pos:position pos:line="37" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="41" pos:column="5">/*
     * Create the first part of the filter, which consists of the
     * config-supplied portions.
     */</comment>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">apr_snprintf<pos:position pos:line="45" pos:column="17"/></name><argument_list pos:line="45" pos:column="17">(<argument><expr><name pos:line="45" pos:column="18">filtbuf<pos:position pos:line="45" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="27">FILTER_LENGTH<pos:position pos:line="45" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="42">"(&amp;(%s)(%s="<pos:position pos:line="45" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="56">filter<pos:position pos:line="45" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="64">sec<pos:position pos:line="45" pos:column="67"/></name><operator pos:line="45" pos:column="67">-&gt;<pos:position pos:line="45" pos:column="72"/></operator><name pos:line="45" pos:column="69">attribute<pos:position pos:line="45" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="80"/></expr_stmt>

    <comment type="block" pos:line="47" pos:column="5">/*
     * Now add the client-supplied username to the filter, ensuring that any
     * LDAP filter metachars are escaped.
     */</comment>
    <expr_stmt><expr><name pos:line="51" pos:column="5">filtbuf_end<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">=<pos:position pos:line="51" pos:column="18"/></operator> <name pos:line="51" pos:column="19">filtbuf<pos:position pos:line="51" pos:column="26"/></name> <operator pos:line="51" pos:column="27">+<pos:position pos:line="51" pos:column="28"/></operator> <name pos:line="51" pos:column="29">FILTER_LENGTH<pos:position pos:line="51" pos:column="42"/></name> <operator pos:line="51" pos:column="43">-<pos:position pos:line="51" pos:column="44"/></operator> <literal type="number" pos:line="51" pos:column="45">1<pos:position pos:line="51" pos:column="46"/></literal></expr>;<pos:position pos:line="51" pos:column="47"/></expr_stmt>
<cpp:if pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">if<pos:position pos:line="52" pos:column="4"/></cpp:directive> <expr><name pos:line="52" pos:column="5">APR_HAS_MICROSOFT_LDAPSDK<pos:position pos:line="52" pos:column="30"/></name></expr></cpp:if>
    <for pos:line="53" pos:column="5">for <control pos:line="53" pos:column="9">(<init><expr><name pos:line="53" pos:column="10">p<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <name pos:line="53" pos:column="14">user<pos:position pos:line="53" pos:column="18"/></name></expr><operator pos:line="53" pos:column="18">,<pos:position pos:line="53" pos:column="19"/></operator> <expr><name pos:line="53" pos:column="20">q<pos:position pos:line="53" pos:column="21"/></name><operator pos:line="53" pos:column="21">=<pos:position pos:line="53" pos:column="22"/></operator><name pos:line="53" pos:column="22">filtbuf<pos:position pos:line="53" pos:column="29"/></name> <operator pos:line="53" pos:column="30">+<pos:position pos:line="53" pos:column="31"/></operator> <call><name pos:line="53" pos:column="32">strlen<pos:position pos:line="53" pos:column="38"/></name><argument_list pos:line="53" pos:column="38">(<argument><expr><name pos:line="53" pos:column="39">filtbuf<pos:position pos:line="53" pos:column="46"/></name></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="48"/></init>
         <condition><expr><operator pos:line="54" pos:column="10">*<pos:position pos:line="54" pos:column="11"/></operator><name pos:line="54" pos:column="11">p<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">&amp;&amp;<pos:position pos:line="54" pos:column="23"/></operator> <name pos:line="54" pos:column="16">q<pos:position pos:line="54" pos:column="17"/></name> <operator pos:line="54" pos:column="18">&lt;<pos:position pos:line="54" pos:column="22"/></operator> <name pos:line="54" pos:column="20">filtbuf_end<pos:position pos:line="54" pos:column="31"/></name></expr>;<pos:position pos:line="54" pos:column="32"/></condition> <incr/>)<pos:position pos:line="54" pos:column="34"/></control> <block pos:line="54" pos:column="35">{
        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><call><name pos:line="55" pos:column="13">strchr<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">(<argument><expr><literal type="string" pos:line="55" pos:column="20">"*()\\"<pos:position pos:line="55" pos:column="27"/></literal></expr></argument>, <argument><expr><operator pos:line="55" pos:column="29">*<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="30">p<pos:position pos:line="55" pos:column="31"/></name></expr></argument>)<pos:position pos:line="55" pos:column="32"/></argument_list></call> <operator pos:line="55" pos:column="33">!=<pos:position pos:line="55" pos:column="35"/></operator> <name pos:line="55" pos:column="36">NULL<pos:position pos:line="55" pos:column="40"/></name></expr>)<pos:position pos:line="55" pos:column="41"/></condition><then pos:line="55" pos:column="41"> <block pos:line="55" pos:column="42">{
            <if pos:line="56" pos:column="13">if <condition pos:line="56" pos:column="16">( <expr><name pos:line="56" pos:column="18">q<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">+<pos:position pos:line="56" pos:column="21"/></operator> <literal type="number" pos:line="56" pos:column="22">3<pos:position pos:line="56" pos:column="23"/></literal> <operator pos:line="56" pos:column="24">&gt;=<pos:position pos:line="56" pos:column="29"/></operator> <name pos:line="56" pos:column="27">filtbuf_end<pos:position pos:line="56" pos:column="38"/></name></expr>)<pos:position pos:line="56" pos:column="39"/></condition><then pos:line="56" pos:column="39">
              <block type="pseudo"><break pos:line="57" pos:column="15">break;<pos:position pos:line="57" pos:column="21"/></break></block></then></if>  <comment type="block" pos:line="57" pos:column="23">/* Don't write part of escape sequence if we can't write all of it */</comment>
            <expr_stmt><expr><operator pos:line="58" pos:column="13">*<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="14">q<pos:position pos:line="58" pos:column="15"/></name><operator pos:line="58" pos:column="15">++<pos:position pos:line="58" pos:column="17"/></operator> <operator pos:line="58" pos:column="18">=<pos:position pos:line="58" pos:column="19"/></operator> <literal type="char" pos:line="58" pos:column="20">'\\'<pos:position pos:line="58" pos:column="24"/></literal></expr>;<pos:position pos:line="58" pos:column="25"/></expr_stmt>
            <switch pos:line="59" pos:column="13">switch <condition pos:line="59" pos:column="20">( <expr><operator pos:line="59" pos:column="22">*<pos:position pos:line="59" pos:column="23"/></operator><name pos:line="59" pos:column="23">p<pos:position pos:line="59" pos:column="24"/></name><operator pos:line="59" pos:column="24">++<pos:position pos:line="59" pos:column="26"/></operator></expr> )<pos:position pos:line="59" pos:column="28"/></condition>
            <block pos:line="60" pos:column="13">{
              <case pos:line="61" pos:column="15">case <expr><literal type="char" pos:line="61" pos:column="20">'*'<pos:position pos:line="61" pos:column="23"/></literal></expr>:<pos:position pos:line="61" pos:column="24"/></case>
                <expr_stmt><expr><operator pos:line="62" pos:column="17">*<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="18">q<pos:position pos:line="62" pos:column="19"/></name><operator pos:line="62" pos:column="19">++<pos:position pos:line="62" pos:column="21"/></operator> <operator pos:line="62" pos:column="22">=<pos:position pos:line="62" pos:column="23"/></operator> <literal type="char" pos:line="62" pos:column="24">'2'<pos:position pos:line="62" pos:column="27"/></literal></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="63" pos:column="17">*<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="18">q<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">++<pos:position pos:line="63" pos:column="21"/></operator> <operator pos:line="63" pos:column="22">=<pos:position pos:line="63" pos:column="23"/></operator> <literal type="char" pos:line="63" pos:column="24">'a'<pos:position pos:line="63" pos:column="27"/></literal></expr>;<pos:position pos:line="63" pos:column="28"/></expr_stmt>
                <break pos:line="64" pos:column="17">break;<pos:position pos:line="64" pos:column="23"/></break>
              <case pos:line="65" pos:column="15">case <expr><literal type="char" pos:line="65" pos:column="20">'('<pos:position pos:line="65" pos:column="23"/></literal></expr>:<pos:position pos:line="65" pos:column="24"/></case>
                <expr_stmt><expr><operator pos:line="66" pos:column="17">*<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="18">q<pos:position pos:line="66" pos:column="19"/></name><operator pos:line="66" pos:column="19">++<pos:position pos:line="66" pos:column="21"/></operator> <operator pos:line="66" pos:column="22">=<pos:position pos:line="66" pos:column="23"/></operator> <literal type="char" pos:line="66" pos:column="24">'2'<pos:position pos:line="66" pos:column="27"/></literal></expr>;<pos:position pos:line="66" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="67" pos:column="17">*<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="18">q<pos:position pos:line="67" pos:column="19"/></name><operator pos:line="67" pos:column="19">++<pos:position pos:line="67" pos:column="21"/></operator> <operator pos:line="67" pos:column="22">=<pos:position pos:line="67" pos:column="23"/></operator> <literal type="char" pos:line="67" pos:column="24">'8'<pos:position pos:line="67" pos:column="27"/></literal></expr>;<pos:position pos:line="67" pos:column="28"/></expr_stmt>
                <break pos:line="68" pos:column="17">break;<pos:position pos:line="68" pos:column="23"/></break>
              <case pos:line="69" pos:column="15">case <expr><literal type="char" pos:line="69" pos:column="20">')'<pos:position pos:line="69" pos:column="23"/></literal></expr>:<pos:position pos:line="69" pos:column="24"/></case>
                <expr_stmt><expr><operator pos:line="70" pos:column="17">*<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="18">q<pos:position pos:line="70" pos:column="19"/></name><operator pos:line="70" pos:column="19">++<pos:position pos:line="70" pos:column="21"/></operator> <operator pos:line="70" pos:column="22">=<pos:position pos:line="70" pos:column="23"/></operator> <literal type="char" pos:line="70" pos:column="24">'2'<pos:position pos:line="70" pos:column="27"/></literal></expr>;<pos:position pos:line="70" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="71" pos:column="17">*<pos:position pos:line="71" pos:column="18"/></operator><name pos:line="71" pos:column="18">q<pos:position pos:line="71" pos:column="19"/></name><operator pos:line="71" pos:column="19">++<pos:position pos:line="71" pos:column="21"/></operator> <operator pos:line="71" pos:column="22">=<pos:position pos:line="71" pos:column="23"/></operator> <literal type="char" pos:line="71" pos:column="24">'9'<pos:position pos:line="71" pos:column="27"/></literal></expr>;<pos:position pos:line="71" pos:column="28"/></expr_stmt>
                <break pos:line="72" pos:column="17">break;<pos:position pos:line="72" pos:column="23"/></break>
              <case pos:line="73" pos:column="15">case <expr><literal type="char" pos:line="73" pos:column="20">'\\'<pos:position pos:line="73" pos:column="24"/></literal></expr>:<pos:position pos:line="73" pos:column="25"/></case>
                <expr_stmt><expr><operator pos:line="74" pos:column="17">*<pos:position pos:line="74" pos:column="18"/></operator><name pos:line="74" pos:column="18">q<pos:position pos:line="74" pos:column="19"/></name><operator pos:line="74" pos:column="19">++<pos:position pos:line="74" pos:column="21"/></operator> <operator pos:line="74" pos:column="22">=<pos:position pos:line="74" pos:column="23"/></operator> <literal type="char" pos:line="74" pos:column="24">'5'<pos:position pos:line="74" pos:column="27"/></literal></expr>;<pos:position pos:line="74" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="75" pos:column="17">*<pos:position pos:line="75" pos:column="18"/></operator><name pos:line="75" pos:column="18">q<pos:position pos:line="75" pos:column="19"/></name><operator pos:line="75" pos:column="19">++<pos:position pos:line="75" pos:column="21"/></operator> <operator pos:line="75" pos:column="22">=<pos:position pos:line="75" pos:column="23"/></operator> <literal type="char" pos:line="75" pos:column="24">'c'<pos:position pos:line="75" pos:column="27"/></literal></expr>;<pos:position pos:line="75" pos:column="28"/></expr_stmt>
                <break pos:line="76" pos:column="17">break;<pos:position pos:line="76" pos:column="23"/></break>
                        }<pos:position pos:line="77" pos:column="26"/></block></switch>
        }<pos:position pos:line="78" pos:column="10"/></block></then>
        <else pos:line="79" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><operator pos:line="80" pos:column="13">*<pos:position pos:line="80" pos:column="14"/></operator><name pos:line="80" pos:column="14">q<pos:position pos:line="80" pos:column="15"/></name><operator pos:line="80" pos:column="15">++<pos:position pos:line="80" pos:column="17"/></operator> <operator pos:line="80" pos:column="18">=<pos:position pos:line="80" pos:column="19"/></operator> <operator pos:line="80" pos:column="20">*<pos:position pos:line="80" pos:column="21"/></operator><name pos:line="80" pos:column="21">p<pos:position pos:line="80" pos:column="22"/></name><operator pos:line="80" pos:column="22">++<pos:position pos:line="80" pos:column="24"/></operator></expr>;<pos:position pos:line="80" pos:column="25"/></expr_stmt></block></else></if>
    }<pos:position pos:line="81" pos:column="6"/></block></for>
<cpp:else pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">else<pos:position pos:line="82" pos:column="6"/></cpp:directive></cpp:else>
    <for pos:line="83" pos:column="5">for <control pos:line="83" pos:column="9">(<init><expr><name pos:line="83" pos:column="10">p<pos:position pos:line="83" pos:column="11"/></name> <operator pos:line="83" pos:column="12">=<pos:position pos:line="83" pos:column="13"/></operator> <name pos:line="83" pos:column="14">user<pos:position pos:line="83" pos:column="18"/></name></expr><operator pos:line="83" pos:column="18">,<pos:position pos:line="83" pos:column="19"/></operator> <expr><name pos:line="83" pos:column="20">q<pos:position pos:line="83" pos:column="21"/></name><operator pos:line="83" pos:column="21">=<pos:position pos:line="83" pos:column="22"/></operator><name pos:line="83" pos:column="22">filtbuf<pos:position pos:line="83" pos:column="29"/></name> <operator pos:line="83" pos:column="30">+<pos:position pos:line="83" pos:column="31"/></operator> <call><name pos:line="83" pos:column="32">strlen<pos:position pos:line="83" pos:column="38"/></name><argument_list pos:line="83" pos:column="38">(<argument><expr><name pos:line="83" pos:column="39">filtbuf<pos:position pos:line="83" pos:column="46"/></name></expr></argument>)<pos:position pos:line="83" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="48"/></init>
         <condition><expr><operator pos:line="84" pos:column="10">*<pos:position pos:line="84" pos:column="11"/></operator><name pos:line="84" pos:column="11">p<pos:position pos:line="84" pos:column="12"/></name> <operator pos:line="84" pos:column="13">&amp;&amp;<pos:position pos:line="84" pos:column="23"/></operator> <name pos:line="84" pos:column="16">q<pos:position pos:line="84" pos:column="17"/></name> <operator pos:line="84" pos:column="18">&lt;<pos:position pos:line="84" pos:column="22"/></operator> <name pos:line="84" pos:column="20">filtbuf_end<pos:position pos:line="84" pos:column="31"/></name></expr>;<pos:position pos:line="84" pos:column="32"/></condition> <incr><expr><operator pos:line="84" pos:column="33">*<pos:position pos:line="84" pos:column="34"/></operator><name pos:line="84" pos:column="34">q<pos:position pos:line="84" pos:column="35"/></name><operator pos:line="84" pos:column="35">++<pos:position pos:line="84" pos:column="37"/></operator> <operator pos:line="84" pos:column="38">=<pos:position pos:line="84" pos:column="39"/></operator> <operator pos:line="84" pos:column="40">*<pos:position pos:line="84" pos:column="41"/></operator><name pos:line="84" pos:column="41">p<pos:position pos:line="84" pos:column="42"/></name><operator pos:line="84" pos:column="42">++<pos:position pos:line="84" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="84" pos:column="45"/></control> <block pos:line="84" pos:column="46">{
        <if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><call><name pos:line="85" pos:column="13">strchr<pos:position pos:line="85" pos:column="19"/></name><argument_list pos:line="85" pos:column="19">(<argument><expr><literal type="string" pos:line="85" pos:column="20">"*()\\"<pos:position pos:line="85" pos:column="27"/></literal></expr></argument>, <argument><expr><operator pos:line="85" pos:column="29">*<pos:position pos:line="85" pos:column="30"/></operator><name pos:line="85" pos:column="30">p<pos:position pos:line="85" pos:column="31"/></name></expr></argument>)<pos:position pos:line="85" pos:column="32"/></argument_list></call> <operator pos:line="85" pos:column="33">!=<pos:position pos:line="85" pos:column="35"/></operator> <name pos:line="85" pos:column="36">NULL<pos:position pos:line="85" pos:column="40"/></name></expr>)<pos:position pos:line="85" pos:column="41"/></condition><then pos:line="85" pos:column="41"> <block pos:line="85" pos:column="42">{
            <expr_stmt><expr><operator pos:line="86" pos:column="13">*<pos:position pos:line="86" pos:column="14"/></operator><name pos:line="86" pos:column="14">q<pos:position pos:line="86" pos:column="15"/></name><operator pos:line="86" pos:column="15">++<pos:position pos:line="86" pos:column="17"/></operator> <operator pos:line="86" pos:column="18">=<pos:position pos:line="86" pos:column="19"/></operator> <literal type="char" pos:line="86" pos:column="20">'\\'<pos:position pos:line="86" pos:column="24"/></literal></expr>;<pos:position pos:line="86" pos:column="25"/></expr_stmt>
            <if pos:line="87" pos:column="13">if <condition pos:line="87" pos:column="16">(<expr><name pos:line="87" pos:column="17">q<pos:position pos:line="87" pos:column="18"/></name> <operator pos:line="87" pos:column="19">&gt;=<pos:position pos:line="87" pos:column="24"/></operator> <name pos:line="87" pos:column="22">filtbuf_end<pos:position pos:line="87" pos:column="33"/></name></expr>)<pos:position pos:line="87" pos:column="34"/></condition><then pos:line="87" pos:column="34"> <block pos:line="87" pos:column="35">{
              <break pos:line="88" pos:column="15">break;<pos:position pos:line="88" pos:column="21"/></break>
            }<pos:position pos:line="89" pos:column="14"/></block></then></if>
        }<pos:position pos:line="90" pos:column="10"/></block></then></if>
    }<pos:position pos:line="91" pos:column="6"/></block></for>
<cpp:endif pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">endif<pos:position pos:line="92" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><operator pos:line="93" pos:column="5">*<pos:position pos:line="93" pos:column="6"/></operator><name pos:line="93" pos:column="6">q<pos:position pos:line="93" pos:column="7"/></name> <operator pos:line="93" pos:column="8">=<pos:position pos:line="93" pos:column="9"/></operator> <literal type="char" pos:line="93" pos:column="10">'\0'<pos:position pos:line="93" pos:column="14"/></literal></expr>;<pos:position pos:line="93" pos:column="15"/></expr_stmt>

    <comment type="block" pos:line="95" pos:column="5">/*
     * Append the closing parens of the filter, unless doing so would
     * overrun the buffer.
     */</comment>
    <if pos:line="99" pos:column="5">if <condition pos:line="99" pos:column="8">(<expr><name pos:line="99" pos:column="9">q<pos:position pos:line="99" pos:column="10"/></name> <operator pos:line="99" pos:column="11">+<pos:position pos:line="99" pos:column="12"/></operator> <literal type="number" pos:line="99" pos:column="13">2<pos:position pos:line="99" pos:column="14"/></literal> <operator pos:line="99" pos:column="15">&lt;=<pos:position pos:line="99" pos:column="20"/></operator> <name pos:line="99" pos:column="18">filtbuf_end<pos:position pos:line="99" pos:column="29"/></name></expr>)<pos:position pos:line="99" pos:column="30"/></condition><then pos:line="99" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="100" pos:column="9">strcat<pos:position pos:line="100" pos:column="15"/></name><argument_list pos:line="100" pos:column="15">(<argument><expr><name pos:line="100" pos:column="16">filtbuf<pos:position pos:line="100" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="25">"))"<pos:position pos:line="100" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="31"/></expr_stmt></block></then></if>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3176_httpd-2.2.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">apr_file_transfer_contents<pos:position pos:line="1" pos:column="47"/></name><parameter_list pos:line="1" pos:column="47">(<parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">from_path<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                               <parameter><decl><type><specifier pos:line="2" pos:column="48">const<pos:position pos:line="2" pos:column="53"/></specifier> <name pos:line="2" pos:column="54">char<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">to_path<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                                               <parameter><decl><type><name pos:line="3" pos:column="48">apr_int32_t<pos:position pos:line="3" pos:column="59"/></name></type> <name pos:line="3" pos:column="60">flags<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>,
                                               <parameter><decl><type><name pos:line="4" pos:column="48">apr_fileperms_t<pos:position pos:line="4" pos:column="63"/></name></type> <name pos:line="4" pos:column="64">to_perms<pos:position pos:line="4" pos:column="72"/></name></decl></parameter>,
                                               <parameter><decl><type><name pos:line="5" pos:column="48">apr_pool_t<pos:position pos:line="5" pos:column="58"/></name> <modifier pos:line="5" pos:column="59">*<pos:position pos:line="5" pos:column="60"/></modifier></type><name pos:line="5" pos:column="60">pool<pos:position pos:line="5" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="65"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_file_t<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">s<pos:position pos:line="7" pos:column="18"/></name></decl>, <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="21">d<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">status<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_finfo_t<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">finfo<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_fileperms_t<pos:position pos:line="10" pos:column="20"/></name></type> <name pos:line="10" pos:column="21">perms<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* Open source file. */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">status<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">apr_file_open<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><operator pos:line="13" pos:column="28">&amp;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="29">s<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="32">from_path<pos:position pos:line="13" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="43">APR_READ<pos:position pos:line="13" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="53">APR_OS_DEFAULT<pos:position pos:line="13" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="69">pool<pos:position pos:line="13" pos:column="73"/></name></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="75"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">status<pos:position pos:line="14" pos:column="15"/></name></expr>)<pos:position pos:line="14" pos:column="16"/></condition><then pos:line="14" pos:column="16">
        <block type="pseudo"><return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">status<pos:position pos:line="15" pos:column="22"/></name></expr>;<pos:position pos:line="15" pos:column="23"/></return></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/* Maybe get its permissions. */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">to_perms<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">==<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">APR_FILE_SOURCE_PERMS<pos:position pos:line="18" pos:column="42"/></name></expr>)<pos:position pos:line="18" pos:column="43"/></condition><then pos:line="18" pos:column="43"> <block pos:line="18" pos:column="44">{
        <expr_stmt><expr><name pos:line="19" pos:column="9">status<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">apr_file_info_get<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><operator pos:line="19" pos:column="36">&amp;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="37">finfo<pos:position pos:line="19" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="44">APR_FINFO_PROT<pos:position pos:line="19" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="60">s<pos:position pos:line="19" pos:column="61"/></name></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">status<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">!=<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">APR_SUCCESS<pos:position pos:line="20" pos:column="34"/></name> <operator pos:line="20" pos:column="35">&amp;&amp;<pos:position pos:line="20" pos:column="45"/></operator> <name pos:line="20" pos:column="38">status<pos:position pos:line="20" pos:column="44"/></name> <operator pos:line="20" pos:column="45">!=<pos:position pos:line="20" pos:column="47"/></operator> <name pos:line="20" pos:column="48">APR_INCOMPLETE<pos:position pos:line="20" pos:column="62"/></name></expr>)<pos:position pos:line="20" pos:column="63"/></condition><then pos:line="20" pos:column="63"> <block pos:line="20" pos:column="64">{
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">apr_file_close<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">s<pos:position pos:line="21" pos:column="29"/></name></expr></argument>)<pos:position pos:line="21" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>  <comment type="block" pos:line="21" pos:column="33">/* toss any error */</comment>
            <return pos:line="22" pos:column="13">return <expr><name pos:line="22" pos:column="20">status<pos:position pos:line="22" pos:column="26"/></name></expr>;<pos:position pos:line="22" pos:column="27"/></return>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="24" pos:column="9">perms<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <name><name pos:line="24" pos:column="17">finfo<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">.<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="23">protection<pos:position pos:line="24" pos:column="33"/></name></name></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then>
    <else pos:line="26" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="9">perms<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">to_perms<pos:position pos:line="27" pos:column="25"/></name></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="29" pos:column="5">/* Open dest file. */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">status<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <call><name pos:line="30" pos:column="14">apr_file_open<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><operator pos:line="30" pos:column="28">&amp;<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="29">d<pos:position pos:line="30" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="32">to_path<pos:position pos:line="30" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="41">flags<pos:position pos:line="30" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="48">perms<pos:position pos:line="30" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="55">pool<pos:position pos:line="30" pos:column="59"/></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">status<pos:position pos:line="31" pos:column="15"/></name></expr>)<pos:position pos:line="31" pos:column="16"/></condition><then pos:line="31" pos:column="16"> <block pos:line="31" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">apr_file_close<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><name pos:line="32" pos:column="24">s<pos:position pos:line="32" pos:column="25"/></name></expr></argument>)<pos:position pos:line="32" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt>  <comment type="block" pos:line="32" pos:column="29">/* toss any error */</comment>
        <return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">status<pos:position pos:line="33" pos:column="22"/></name></expr>;<pos:position pos:line="33" pos:column="23"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="36" pos:column="5">/* Copy bytes till the cows come home. */</comment>
    <while pos:line="37" pos:column="5">while <condition pos:line="37" pos:column="11">(<expr><literal type="number" pos:line="37" pos:column="12">1<pos:position pos:line="37" pos:column="13"/></literal></expr>)<pos:position pos:line="37" pos:column="14"/></condition> <block pos:line="37" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="38" pos:column="9">char<pos:position pos:line="38" pos:column="13"/></name></type> <name><name pos:line="38" pos:column="14">buf<pos:position pos:line="38" pos:column="17"/></name><index pos:line="38" pos:column="17">[<expr><name pos:line="38" pos:column="18">BUFSIZ<pos:position pos:line="38" pos:column="24"/></name></expr>]<pos:position pos:line="38" pos:column="25"/></index></name></decl>;<pos:position pos:line="38" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="39" pos:column="9">apr_size_t<pos:position pos:line="39" pos:column="19"/></name></type> <name pos:line="39" pos:column="20">bytes_this_time<pos:position pos:line="39" pos:column="35"/></name> <init pos:line="39" pos:column="36">= <expr><sizeof pos:line="39" pos:column="38">sizeof<argument_list pos:line="39" pos:column="44">(<argument><expr><name pos:line="39" pos:column="45">buf<pos:position pos:line="39" pos:column="48"/></name></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="39" pos:column="50"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="40" pos:column="9">apr_status_t<pos:position pos:line="40" pos:column="21"/></name></type> <name pos:line="40" pos:column="22">read_err<pos:position pos:line="40" pos:column="30"/></name></decl>;<pos:position pos:line="40" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="41" pos:column="9">apr_status_t<pos:position pos:line="41" pos:column="21"/></name></type> <name pos:line="41" pos:column="22">write_err<pos:position pos:line="41" pos:column="31"/></name></decl>;<pos:position pos:line="41" pos:column="32"/></decl_stmt>

        <comment type="block" pos:line="43" pos:column="9">/* Read 'em. */</comment>
        <expr_stmt><expr><name pos:line="44" pos:column="9">read_err<pos:position pos:line="44" pos:column="17"/></name> <operator pos:line="44" pos:column="18">=<pos:position pos:line="44" pos:column="19"/></operator> <call><name pos:line="44" pos:column="20">apr_file_read<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><name pos:line="44" pos:column="34">s<pos:position pos:line="44" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="37">buf<pos:position pos:line="44" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="42">&amp;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="43">bytes_this_time<pos:position pos:line="44" pos:column="58"/></name></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="60"/></expr_stmt>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">read_err<pos:position pos:line="45" pos:column="21"/></name> <operator pos:line="45" pos:column="22">&amp;&amp;<pos:position pos:line="45" pos:column="32"/></operator> <operator pos:line="45" pos:column="25">!<pos:position pos:line="45" pos:column="26"/></operator><call><name pos:line="45" pos:column="26">APR_STATUS_IS_EOF<pos:position pos:line="45" pos:column="43"/></name><argument_list pos:line="45" pos:column="43">(<argument><expr><name pos:line="45" pos:column="44">read_err<pos:position pos:line="45" pos:column="52"/></name></expr></argument>)<pos:position pos:line="45" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="54"/></condition><then pos:line="45" pos:column="54"> <block pos:line="45" pos:column="55">{
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">apr_file_close<pos:position pos:line="46" pos:column="27"/></name><argument_list pos:line="46" pos:column="27">(<argument><expr><name pos:line="46" pos:column="28">s<pos:position pos:line="46" pos:column="29"/></name></expr></argument>)<pos:position pos:line="46" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="31"/></expr_stmt>  <comment type="block" pos:line="46" pos:column="33">/* toss any error */</comment>
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">apr_file_close<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><name pos:line="47" pos:column="28">d<pos:position pos:line="47" pos:column="29"/></name></expr></argument>)<pos:position pos:line="47" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="31"/></expr_stmt>  <comment type="block" pos:line="47" pos:column="33">/* toss any error */</comment>
            <return pos:line="48" pos:column="13">return <expr><name pos:line="48" pos:column="20">read_err<pos:position pos:line="48" pos:column="28"/></name></expr>;<pos:position pos:line="48" pos:column="29"/></return>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="51" pos:column="9">/* Write 'em. */</comment>
        <expr_stmt><expr><name pos:line="52" pos:column="9">write_err<pos:position pos:line="52" pos:column="18"/></name> <operator pos:line="52" pos:column="19">=<pos:position pos:line="52" pos:column="20"/></operator> <call><name pos:line="52" pos:column="21">apr_file_write_full<pos:position pos:line="52" pos:column="40"/></name><argument_list pos:line="52" pos:column="40">(<argument><expr><name pos:line="52" pos:column="41">d<pos:position pos:line="52" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="44">buf<pos:position pos:line="52" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="49">bytes_this_time<pos:position pos:line="52" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="66">NULL<pos:position pos:line="52" pos:column="70"/></name></expr></argument>)<pos:position pos:line="52" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="72"/></expr_stmt>
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">write_err<pos:position pos:line="53" pos:column="22"/></name></expr>)<pos:position pos:line="53" pos:column="23"/></condition><then pos:line="53" pos:column="23"> <block pos:line="53" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">apr_file_close<pos:position pos:line="54" pos:column="27"/></name><argument_list pos:line="54" pos:column="27">(<argument><expr><name pos:line="54" pos:column="28">s<pos:position pos:line="54" pos:column="29"/></name></expr></argument>)<pos:position pos:line="54" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="31"/></expr_stmt>  <comment type="block" pos:line="54" pos:column="33">/* toss any error */</comment>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">apr_file_close<pos:position pos:line="55" pos:column="27"/></name><argument_list pos:line="55" pos:column="27">(<argument><expr><name pos:line="55" pos:column="28">d<pos:position pos:line="55" pos:column="29"/></name></expr></argument>)<pos:position pos:line="55" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="31"/></expr_stmt>  <comment type="block" pos:line="55" pos:column="33">/* toss any error */</comment>
            <return pos:line="56" pos:column="13">return <expr><name pos:line="56" pos:column="20">write_err<pos:position pos:line="56" pos:column="29"/></name></expr>;<pos:position pos:line="56" pos:column="30"/></return>
        }<pos:position pos:line="57" pos:column="10"/></block></then></if>

        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">read_err<pos:position pos:line="59" pos:column="21"/></name> <operator pos:line="59" pos:column="22">&amp;&amp;<pos:position pos:line="59" pos:column="32"/></operator> <call><name pos:line="59" pos:column="25">APR_STATUS_IS_EOF<pos:position pos:line="59" pos:column="42"/></name><argument_list pos:line="59" pos:column="42">(<argument><expr><name pos:line="59" pos:column="43">read_err<pos:position pos:line="59" pos:column="51"/></name></expr></argument>)<pos:position pos:line="59" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="53"/></condition><then pos:line="59" pos:column="53"> <block pos:line="59" pos:column="54">{
            <expr_stmt><expr><name pos:line="60" pos:column="13">status<pos:position pos:line="60" pos:column="19"/></name> <operator pos:line="60" pos:column="20">=<pos:position pos:line="60" pos:column="21"/></operator> <call><name pos:line="60" pos:column="22">apr_file_close<pos:position pos:line="60" pos:column="36"/></name><argument_list pos:line="60" pos:column="36">(<argument><expr><name pos:line="60" pos:column="37">s<pos:position pos:line="60" pos:column="38"/></name></expr></argument>)<pos:position pos:line="60" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="40"/></expr_stmt>
            <if pos:line="61" pos:column="13">if <condition pos:line="61" pos:column="16">(<expr><name pos:line="61" pos:column="17">status<pos:position pos:line="61" pos:column="23"/></name></expr>)<pos:position pos:line="61" pos:column="24"/></condition><then pos:line="61" pos:column="24"> <block pos:line="61" pos:column="25">{
                <expr_stmt><expr><call><name pos:line="62" pos:column="17">apr_file_close<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><name pos:line="62" pos:column="32">d<pos:position pos:line="62" pos:column="33"/></name></expr></argument>)<pos:position pos:line="62" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="35"/></expr_stmt>  <comment type="block" pos:line="62" pos:column="37">/* toss any error */</comment>
                <return pos:line="63" pos:column="17">return <expr><name pos:line="63" pos:column="24">status<pos:position pos:line="63" pos:column="30"/></name></expr>;<pos:position pos:line="63" pos:column="31"/></return>
            }<pos:position pos:line="64" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="66" pos:column="13">/* return the results of this close: an error, or success */</comment>
            <return pos:line="67" pos:column="13">return <expr><call><name pos:line="67" pos:column="20">apr_file_close<pos:position pos:line="67" pos:column="34"/></name><argument_list pos:line="67" pos:column="34">(<argument><expr><name pos:line="67" pos:column="35">d<pos:position pos:line="67" pos:column="36"/></name></expr></argument>)<pos:position pos:line="67" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="38"/></return>
        }<pos:position pos:line="68" pos:column="10"/></block></then></if>
    }<pos:position pos:line="69" pos:column="6"/></block></while>
    <comment type="block" pos:line="70" pos:column="5">/* NOTREACHED */</comment>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

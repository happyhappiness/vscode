<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6384.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_mplx_out_close<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">h2_mplx<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">m<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">stream_id<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">status<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">acquired<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">m<pos:position pos:line="6" pos:column="22"/></name></expr></argument>)<pos:position pos:line="6" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">(<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">status<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <call><name pos:line="7" pos:column="19">enter_mutex<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">m<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="34">&amp;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="35">acquired<pos:position pos:line="7" pos:column="43"/></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call><operator pos:line="7" pos:column="44">)<pos:position pos:line="7" pos:column="45"/></operator> <operator pos:line="7" pos:column="46">==<pos:position pos:line="7" pos:column="48"/></operator> <name pos:line="7" pos:column="49">APR_SUCCESS<pos:position pos:line="7" pos:column="60"/></name></expr>)<pos:position pos:line="7" pos:column="61"/></condition><then pos:line="7" pos:column="61"> <block pos:line="7" pos:column="62">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">h2_io<pos:position pos:line="8" pos:column="14"/></name> <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type><name pos:line="8" pos:column="16">io<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><call><name pos:line="8" pos:column="21">h2_io_set_get<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><name><name pos:line="8" pos:column="35">m<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">stream_ios<pos:position pos:line="8" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="50">stream_id<pos:position pos:line="8" pos:column="59"/></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="61"/></decl_stmt>
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">io<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">&amp;&amp;<pos:position pos:line="9" pos:column="26"/></operator> <operator pos:line="9" pos:column="19">!<pos:position pos:line="9" pos:column="20"/></operator><name><name pos:line="9" pos:column="20">io<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">orphaned<pos:position pos:line="9" pos:column="32"/></name></name></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33"> <block pos:line="9" pos:column="34">{
            <if pos:line="10" pos:column="13">if <condition pos:line="10" pos:column="16">(<expr><operator pos:line="10" pos:column="17">!<pos:position pos:line="10" pos:column="18"/></operator><name><name pos:line="10" pos:column="18">io<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">response<pos:position pos:line="10" pos:column="30"/></name></name> <operator pos:line="10" pos:column="31">&amp;&amp;<pos:position pos:line="10" pos:column="41"/></operator> <operator pos:line="10" pos:column="34">!<pos:position pos:line="10" pos:column="35"/></operator><name><name pos:line="10" pos:column="35">io<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">-&gt;<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="39">rst_error<pos:position pos:line="10" pos:column="48"/></name></name></expr>)<pos:position pos:line="10" pos:column="49"/></condition><then pos:line="10" pos:column="49"> <block pos:line="10" pos:column="50">{
                <comment type="block" pos:line="11" pos:column="17">/* In case a close comes before a response was created,
                 * insert an error one so that our streams can properly
                 * reset.
                 */</comment>
                <decl_stmt><decl><type><name pos:line="15" pos:column="17">h2_response<pos:position pos:line="15" pos:column="28"/></name> <modifier pos:line="15" pos:column="29">*<pos:position pos:line="15" pos:column="30"/></modifier></type><name pos:line="15" pos:column="30">r<pos:position pos:line="15" pos:column="31"/></name> <init pos:line="15" pos:column="32">= <expr><call><name pos:line="15" pos:column="34">h2_response_die<pos:position pos:line="15" pos:column="49"/></name><argument_list pos:line="15" pos:column="49">(<argument><expr><name pos:line="15" pos:column="50">stream_id<pos:position pos:line="15" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="61">APR_EGENERAL<pos:position pos:line="15" pos:column="73"/></name></expr></argument>, 
                                                 <argument><expr><name><name pos:line="16" pos:column="50">io<pos:position pos:line="16" pos:column="52"/></name><operator pos:line="16" pos:column="52">-&gt;<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="54">request<pos:position pos:line="16" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="63">m<pos:position pos:line="16" pos:column="64"/></name><operator pos:line="16" pos:column="64">-&gt;<pos:position pos:line="16" pos:column="69"/></operator><name pos:line="16" pos:column="66">pool<pos:position pos:line="16" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="72"/></decl_stmt>
                <expr_stmt><expr><name pos:line="17" pos:column="17">status<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <call><name pos:line="17" pos:column="26">out_open<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">m<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">stream_id<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="49">r<pos:position pos:line="17" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="52">NULL<pos:position pos:line="17" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="58">NULL<pos:position pos:line="17" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="64">NULL<pos:position pos:line="17" pos:column="68"/></name></expr></argument>)<pos:position pos:line="17" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="70"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="18" pos:column="17">ap_log_cerror<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">APLOG_MARK<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">APLOG_DEBUG<pos:position pos:line="18" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="56">status<pos:position pos:line="18" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="64">m<pos:position pos:line="18" pos:column="65"/></name><operator pos:line="18" pos:column="65">-&gt;<pos:position pos:line="18" pos:column="70"/></operator><name pos:line="18" pos:column="67">c<pos:position pos:line="18" pos:column="68"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="19" pos:column="31">"h2_mplx(%ld-%d): close, no response, no rst"<pos:position pos:line="19" pos:column="76"/></literal></expr></argument>, 
                              <argument><expr><name><name pos:line="20" pos:column="31">m<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">id<pos:position pos:line="20" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="38">io<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">-&gt;<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="42">id<pos:position pos:line="20" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="21" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">ap_log_cerror<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">APLOG_MARK<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="39">APLOG_TRACE2<pos:position pos:line="22" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="53">status<pos:position pos:line="22" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="61">m<pos:position pos:line="22" pos:column="62"/></name><operator pos:line="22" pos:column="62">-&gt;<pos:position pos:line="22" pos:column="67"/></operator><name pos:line="22" pos:column="64">c<pos:position pos:line="22" pos:column="65"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="23" pos:column="27">"h2_mplx(%ld-%d): close with eor=%s"<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>, 
                          <argument><expr><name><name pos:line="24" pos:column="27">m<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">-&gt;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="30">id<pos:position pos:line="24" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="34">io<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">id<pos:position pos:line="24" pos:column="40"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="24" pos:column="42">io<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">-&gt;<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="46">eor<pos:position pos:line="24" pos:column="49"/></name></name></expr>?<pos:position pos:line="24" pos:column="50"/></condition><then pos:line="24" pos:column="50"> <expr><literal type="string" pos:line="24" pos:column="51">"yes"<pos:position pos:line="24" pos:column="56"/></literal></expr> <pos:position pos:line="24" pos:column="57"/></then><else pos:line="24" pos:column="57">: <expr><literal type="string" pos:line="24" pos:column="59">"no"<pos:position pos:line="24" pos:column="63"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name pos:line="25" pos:column="13">status<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <call><name pos:line="25" pos:column="22">h2_io_out_close<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><name pos:line="25" pos:column="38">io<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">H2_MPLX_IO_OUT<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">APLOG_TRACE2<pos:position pos:line="26" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="42">m<pos:position pos:line="26" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="45">io<pos:position pos:line="26" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="49">"h2_mplx_out_close"<pos:position pos:line="26" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">io_out_consumed_signal<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><name pos:line="27" pos:column="36">m<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="39">io<pos:position pos:line="27" pos:column="41"/></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>
            
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">have_out_data_for<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">m<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="34">stream_id<pos:position pos:line="29" pos:column="43"/></name></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then>
        <else pos:line="31" pos:column="9">else <block pos:line="31" pos:column="14">{
            <expr_stmt><expr><name pos:line="32" pos:column="13">status<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="22">APR_ECONNABORTED<pos:position pos:line="32" pos:column="38"/></name></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">leave_mutex<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">m<pos:position pos:line="34" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="24">acquired<pos:position pos:line="34" pos:column="32"/></name></expr></argument>)<pos:position pos:line="34" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">status<pos:position pos:line="36" pos:column="18"/></name></expr>;<pos:position pos:line="36" pos:column="19"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

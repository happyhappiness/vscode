<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_677.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cgid_server<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">data<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list> 
<block pos:line="2" pos:column="1">{ 
    <decl_stmt><decl><type><name><name pos:line="3" pos:column="5">struct<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">sockaddr_un<pos:position pos:line="3" pos:column="23"/></name></name></type> <name pos:line="3" pos:column="24">unix_addr<pos:position pos:line="3" pos:column="33"/></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">sd<pos:position pos:line="4" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="13">sd2<pos:position pos:line="4" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="18">rc<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">mode_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">omask<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_socklen_t<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">len<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_pool_t<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">ptrans<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">server_rec<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">main_server<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><name pos:line="8" pos:column="31">data<pos:position pos:line="8" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">cgid_server_conf<pos:position pos:line="9" pos:column="21"/></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">sconf<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><call><name pos:line="9" pos:column="31">ap_get_module_config<pos:position pos:line="9" pos:column="51"/></name><argument_list pos:line="9" pos:column="51">(<argument><expr><name><name pos:line="9" pos:column="52">main_server<pos:position pos:line="9" pos:column="63"/></name><operator pos:line="9" pos:column="63">-&gt;<pos:position pos:line="9" pos:column="68"/></operator><name pos:line="9" pos:column="65">module_config<pos:position pos:line="9" pos:column="78"/></name></name></expr></argument>,
                                                   <argument><expr><operator pos:line="10" pos:column="52">&amp;<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="53">cgid_module<pos:position pos:line="10" pos:column="64"/></name></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="66"/></decl_stmt> 
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_hash_t<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">script_hash<pos:position pos:line="11" pos:column="28"/></name> <init pos:line="11" pos:column="29">= <expr><call><name pos:line="11" pos:column="31">apr_hash_make<pos:position pos:line="11" pos:column="44"/></name><argument_list pos:line="11" pos:column="44">(<argument><expr><name pos:line="11" pos:column="45">pcgi<pos:position pos:line="11" pos:column="49"/></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="51"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">apr_pool_create<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><operator pos:line="13" pos:column="21">&amp;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="22">ptrans<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="30">pcgi<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt> 

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">apr_signal<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name pos:line="15" pos:column="16">SIGCHLD<pos:position pos:line="15" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="25">SIG_IGN<pos:position pos:line="15" pos:column="32"/></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt> 
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">apr_signal<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">SIGHUP<pos:position pos:line="16" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="24">daemon_signal_handler<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">unlink<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name><name pos:line="18" pos:column="16">sconf<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-&gt;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="23">sockname<pos:position pos:line="18" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></call> <operator pos:line="18" pos:column="33">&lt;<pos:position pos:line="18" pos:column="37"/></operator> <literal type="number" pos:line="18" pos:column="35">0<pos:position pos:line="18" pos:column="36"/></literal> <operator pos:line="18" pos:column="37">&amp;&amp;<pos:position pos:line="18" pos:column="47"/></operator> <name pos:line="18" pos:column="40">errno<pos:position pos:line="18" pos:column="45"/></name> <operator pos:line="18" pos:column="46">!=<pos:position pos:line="18" pos:column="48"/></operator> <name pos:line="18" pos:column="49">ENOENT<pos:position pos:line="18" pos:column="55"/></name></expr>)<pos:position pos:line="18" pos:column="56"/></condition><then pos:line="18" pos:column="56"> <block pos:line="18" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">ap_log_error<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">APLOG_MARK<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">APLOG_ERR<pos:position pos:line="19" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="45">errno<pos:position pos:line="19" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="52">main_server<pos:position pos:line="19" pos:column="63"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="20" pos:column="22">"Couldn't unlink unix domain socket %s"<pos:position pos:line="20" pos:column="61"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="21" pos:column="22">sconf<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">-&gt;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="29">sockname<pos:position pos:line="21" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
        <comment type="block" pos:line="22" pos:column="9">/* just a warning; don't bail out */</comment>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* cgid should use its own suexec doer */</comment>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">ap_hook_get_suexec_identity<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">cgid_suexec_id_doer<pos:position pos:line="26" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="54">NULL<pos:position pos:line="26" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="60">NULL<pos:position pos:line="26" pos:column="64"/></name></expr></argument>,
                                <argument><expr><name pos:line="27" pos:column="33">APR_HOOK_REALLY_FIRST<pos:position pos:line="27" pos:column="54"/></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">apr_hook_sort_all<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">()<pos:position pos:line="28" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">sd<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <call><name pos:line="30" pos:column="15">socket<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">AF_UNIX<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="31">SOCK_STREAM<pos:position pos:line="30" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="44">0<pos:position pos:line="30" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="46"/></argument_list></call><operator pos:line="30" pos:column="46">)<pos:position pos:line="30" pos:column="47"/></operator> <operator pos:line="30" pos:column="48">&lt;<pos:position pos:line="30" pos:column="52"/></operator> <literal type="number" pos:line="30" pos:column="50">0<pos:position pos:line="30" pos:column="51"/></literal></expr>)<pos:position pos:line="30" pos:column="52"/></condition><then pos:line="30" pos:column="52"> <block pos:line="30" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">ap_log_error<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">APLOG_MARK<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">APLOG_ERR<pos:position pos:line="31" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="45">errno<pos:position pos:line="31" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="52">main_server<pos:position pos:line="31" pos:column="63"/></name></expr></argument>, 
                     <argument><expr><literal type="string" pos:line="32" pos:column="22">"Couldn't create unix domain socket"<pos:position pos:line="32" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="60"/></expr_stmt>
        <return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">errno<pos:position pos:line="33" pos:column="21"/></name></expr>;<pos:position pos:line="33" pos:column="22"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if> 

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">memset<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><operator pos:line="36" pos:column="12">&amp;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="13">unix_addr<pos:position pos:line="36" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="24">0<pos:position pos:line="36" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="27">sizeof<argument_list pos:line="36" pos:column="33">(<argument><expr><name pos:line="36" pos:column="34">unix_addr<pos:position pos:line="36" pos:column="43"/></name></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">unix_addr<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">.<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">sun_family<pos:position pos:line="37" pos:column="25"/></name></name> <operator pos:line="37" pos:column="26">=<pos:position pos:line="37" pos:column="27"/></operator> <name pos:line="37" pos:column="28">AF_UNIX<pos:position pos:line="37" pos:column="35"/></name></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">strcpy<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><name><name pos:line="38" pos:column="12">unix_addr<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">.<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">sun_path<pos:position pos:line="38" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="32">sconf<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">-&gt;<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="39">sockname<pos:position pos:line="38" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><name pos:line="40" pos:column="5">omask<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <call><name pos:line="40" pos:column="13">umask<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><literal type="number" pos:line="40" pos:column="19">0077<pos:position pos:line="40" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt> <comment type="block" pos:line="40" pos:column="26">/* so that only Apache can use socket */</comment>
    <expr_stmt><expr><name pos:line="41" pos:column="5">rc<pos:position pos:line="41" pos:column="7"/></name> <operator pos:line="41" pos:column="8">=<pos:position pos:line="41" pos:column="9"/></operator> <call><name pos:line="41" pos:column="10">bind<pos:position pos:line="41" pos:column="14"/></name><argument_list pos:line="41" pos:column="14">(<argument><expr><name pos:line="41" pos:column="15">sd<pos:position pos:line="41" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="19">(<pos:position pos:line="41" pos:column="20"/></operator>struct <name pos:line="41" pos:column="27">sockaddr<pos:position pos:line="41" pos:column="35"/></name> <operator pos:line="41" pos:column="36">*<pos:position pos:line="41" pos:column="37"/></operator><operator pos:line="41" pos:column="37">)<pos:position pos:line="41" pos:column="38"/></operator><operator pos:line="41" pos:column="38">&amp;<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="39">unix_addr<pos:position pos:line="41" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="50">sizeof<argument_list pos:line="41" pos:column="56">(<argument><expr><name pos:line="41" pos:column="57">unix_addr<pos:position pos:line="41" pos:column="66"/></name></expr></argument>)<pos:position pos:line="41" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">umask<pos:position pos:line="42" pos:column="10"/></name><argument_list pos:line="42" pos:column="10">(<argument><expr><name pos:line="42" pos:column="11">omask<pos:position pos:line="42" pos:column="16"/></name></expr></argument>)<pos:position pos:line="42" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="18"/></expr_stmt> <comment type="block" pos:line="42" pos:column="19">/* can't fail, so can't clobber errno */</comment>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">rc<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">&lt;<pos:position pos:line="43" pos:column="16"/></operator> <literal type="number" pos:line="43" pos:column="14">0<pos:position pos:line="43" pos:column="15"/></literal></expr>)<pos:position pos:line="43" pos:column="16"/></condition><then pos:line="43" pos:column="16"> <block pos:line="43" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">ap_log_error<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name pos:line="44" pos:column="22">APLOG_MARK<pos:position pos:line="44" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="34">APLOG_ERR<pos:position pos:line="44" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="45">errno<pos:position pos:line="44" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="52">main_server<pos:position pos:line="44" pos:column="63"/></name></expr></argument>, 
                     <argument><expr><literal type="string" pos:line="45" pos:column="22">"Couldn't bind unix domain socket %s"<pos:position pos:line="45" pos:column="59"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="46" pos:column="22">sconf<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">-&gt;<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="29">sockname<pos:position pos:line="46" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="39"/></expr_stmt> 
        <return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">errno<pos:position pos:line="47" pos:column="21"/></name></expr>;<pos:position pos:line="47" pos:column="22"/></return>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if> 

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><call><name pos:line="50" pos:column="9">listen<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><name pos:line="50" pos:column="16">sd<pos:position pos:line="50" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="20">DEFAULT_CGID_LISTENBACKLOG<pos:position pos:line="50" pos:column="46"/></name></expr></argument>)<pos:position pos:line="50" pos:column="47"/></argument_list></call> <operator pos:line="50" pos:column="48">&lt;<pos:position pos:line="50" pos:column="52"/></operator> <literal type="number" pos:line="50" pos:column="50">0<pos:position pos:line="50" pos:column="51"/></literal></expr>)<pos:position pos:line="50" pos:column="52"/></condition><then pos:line="50" pos:column="52"> <block pos:line="50" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">ap_log_error<pos:position pos:line="51" pos:column="21"/></name><argument_list pos:line="51" pos:column="21">(<argument><expr><name pos:line="51" pos:column="22">APLOG_MARK<pos:position pos:line="51" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="34">APLOG_ERR<pos:position pos:line="51" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="45">errno<pos:position pos:line="51" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="52">main_server<pos:position pos:line="51" pos:column="63"/></name></expr></argument>, 
                     <argument><expr><literal type="string" pos:line="52" pos:column="22">"Couldn't listen on unix domain socket"<pos:position pos:line="52" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="63"/></expr_stmt> 
        <return pos:line="53" pos:column="9">return <expr><name pos:line="53" pos:column="16">errno<pos:position pos:line="53" pos:column="21"/></name></expr>;<pos:position pos:line="53" pos:column="22"/></return>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if> 

    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><operator pos:line="56" pos:column="9">!<pos:position pos:line="56" pos:column="10"/></operator><call><name pos:line="56" pos:column="10">geteuid<pos:position pos:line="56" pos:column="17"/></name><argument_list pos:line="56" pos:column="17">()<pos:position pos:line="56" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="20"/></condition><then pos:line="56" pos:column="20"> <block pos:line="56" pos:column="21">{
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><call><name pos:line="57" pos:column="13">chown<pos:position pos:line="57" pos:column="18"/></name><argument_list pos:line="57" pos:column="18">(<argument><expr><name><name pos:line="57" pos:column="19">sconf<pos:position pos:line="57" pos:column="24"/></name><operator pos:line="57" pos:column="24">-&gt;<pos:position pos:line="57" pos:column="29"/></operator><name pos:line="57" pos:column="26">sockname<pos:position pos:line="57" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="36">unixd_config<pos:position pos:line="57" pos:column="48"/></name><operator pos:line="57" pos:column="48">.<pos:position pos:line="57" pos:column="49"/></operator><name pos:line="57" pos:column="49">user_id<pos:position pos:line="57" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="58">-<pos:position pos:line="57" pos:column="59"/></operator><literal type="number" pos:line="57" pos:column="59">1<pos:position pos:line="57" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="61"/></argument_list></call> <operator pos:line="57" pos:column="62">&lt;<pos:position pos:line="57" pos:column="66"/></operator> <literal type="number" pos:line="57" pos:column="64">0<pos:position pos:line="57" pos:column="65"/></literal></expr>)<pos:position pos:line="57" pos:column="66"/></condition><then pos:line="57" pos:column="66"> <block pos:line="57" pos:column="67">{
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">ap_log_error<pos:position pos:line="58" pos:column="25"/></name><argument_list pos:line="58" pos:column="25">(<argument><expr><name pos:line="58" pos:column="26">APLOG_MARK<pos:position pos:line="58" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="38">APLOG_ERR<pos:position pos:line="58" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="49">errno<pos:position pos:line="58" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="56">main_server<pos:position pos:line="58" pos:column="67"/></name></expr></argument>, 
                         <argument><expr><literal type="string" pos:line="59" pos:column="26">"Couldn't change owner of unix domain socket %s"<pos:position pos:line="59" pos:column="74"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="60" pos:column="26">sconf<pos:position pos:line="60" pos:column="31"/></name><operator pos:line="60" pos:column="31">-&gt;<pos:position pos:line="60" pos:column="36"/></operator><name pos:line="60" pos:column="33">sockname<pos:position pos:line="60" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="43"/></expr_stmt> 
            <return pos:line="61" pos:column="13">return <expr><name pos:line="61" pos:column="20">errno<pos:position pos:line="61" pos:column="25"/></name></expr>;<pos:position pos:line="61" pos:column="26"/></return>
        }<pos:position pos:line="62" pos:column="10"/></block></then></if>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">unixd_setup_child<pos:position pos:line="65" pos:column="22"/></name><argument_list pos:line="65" pos:column="22">()<pos:position pos:line="65" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="25"/></expr_stmt> <comment type="block" pos:line="65" pos:column="26">/* if running as root, switch to configured user/group */</comment>

    <while pos:line="67" pos:column="5">while <condition pos:line="67" pos:column="11">(<expr><operator pos:line="67" pos:column="12">!<pos:position pos:line="67" pos:column="13"/></operator><name pos:line="67" pos:column="13">daemon_should_exit<pos:position pos:line="67" pos:column="31"/></name></expr>)<pos:position pos:line="67" pos:column="32"/></condition> <block pos:line="67" pos:column="33">{
        <decl_stmt><decl><type><name pos:line="68" pos:column="9">int<pos:position pos:line="68" pos:column="12"/></name></type> <name pos:line="68" pos:column="13">errfileno<pos:position pos:line="68" pos:column="22"/></name> <init pos:line="68" pos:column="23">= <expr><name pos:line="68" pos:column="25">STDERR_FILENO<pos:position pos:line="68" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="68" pos:column="39"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="69" pos:column="9">char<pos:position pos:line="69" pos:column="13"/></name> <modifier pos:line="69" pos:column="14">*<pos:position pos:line="69" pos:column="15"/></modifier></type><name pos:line="69" pos:column="15">argv0<pos:position pos:line="69" pos:column="20"/></name></decl>;<pos:position pos:line="69" pos:column="21"/></decl_stmt> 
        <decl_stmt><decl><type><name pos:line="70" pos:column="9">char<pos:position pos:line="70" pos:column="13"/></name> <modifier pos:line="70" pos:column="14">*<pos:position pos:line="70" pos:column="15"/></modifier><modifier pos:line="70" pos:column="15">*<pos:position pos:line="70" pos:column="16"/></modifier></type><name pos:line="70" pos:column="16">env<pos:position pos:line="70" pos:column="19"/></name></decl>;<pos:position pos:line="70" pos:column="20"/></decl_stmt> 
        <decl_stmt><decl><type><specifier pos:line="71" pos:column="9">const<pos:position pos:line="71" pos:column="14"/></specifier> <name pos:line="71" pos:column="15">char<pos:position pos:line="71" pos:column="19"/></name> <modifier pos:line="71" pos:column="20">*<pos:position pos:line="71" pos:column="21"/></modifier> <specifier pos:line="71" pos:column="22">const<pos:position pos:line="71" pos:column="27"/></specifier> <modifier pos:line="71" pos:column="28">*<pos:position pos:line="71" pos:column="29"/></modifier></type><name pos:line="71" pos:column="29">argv<pos:position pos:line="71" pos:column="33"/></name></decl>;<pos:position pos:line="71" pos:column="34"/></decl_stmt> 
        <decl_stmt><decl><type><name pos:line="72" pos:column="9">apr_int32_t<pos:position pos:line="72" pos:column="20"/></name></type> <name pos:line="72" pos:column="21">in_pipe<pos:position pos:line="72" pos:column="28"/></name></decl>;<pos:position pos:line="72" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="73" pos:column="9">apr_int32_t<pos:position pos:line="73" pos:column="20"/></name></type> <name pos:line="73" pos:column="21">out_pipe<pos:position pos:line="73" pos:column="29"/></name></decl>;<pos:position pos:line="73" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="74" pos:column="9">apr_int32_t<pos:position pos:line="74" pos:column="20"/></name></type> <name pos:line="74" pos:column="21">err_pipe<pos:position pos:line="74" pos:column="29"/></name></decl>;<pos:position pos:line="74" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="75" pos:column="9">apr_cmdtype_e<pos:position pos:line="75" pos:column="22"/></name></type> <name pos:line="75" pos:column="23">cmd_type<pos:position pos:line="75" pos:column="31"/></name></decl>;<pos:position pos:line="75" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="76" pos:column="9">request_rec<pos:position pos:line="76" pos:column="20"/></name> <modifier pos:line="76" pos:column="21">*<pos:position pos:line="76" pos:column="22"/></modifier></type><name pos:line="76" pos:column="22">r<pos:position pos:line="76" pos:column="23"/></name></decl>;<pos:position pos:line="76" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="77" pos:column="9">apr_procattr_t<pos:position pos:line="77" pos:column="23"/></name> <modifier pos:line="77" pos:column="24">*<pos:position pos:line="77" pos:column="25"/></modifier></type><name pos:line="77" pos:column="25">procattr<pos:position pos:line="77" pos:column="33"/></name> <init pos:line="77" pos:column="34">= <expr><name pos:line="77" pos:column="36">NULL<pos:position pos:line="77" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="77" pos:column="41"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="78" pos:column="9">apr_proc_t<pos:position pos:line="78" pos:column="19"/></name> <modifier pos:line="78" pos:column="20">*<pos:position pos:line="78" pos:column="21"/></modifier></type><name pos:line="78" pos:column="21">procnew<pos:position pos:line="78" pos:column="28"/></name> <init pos:line="78" pos:column="29">= <expr><name pos:line="78" pos:column="31">NULL<pos:position pos:line="78" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="78" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="79" pos:column="9">apr_file_t<pos:position pos:line="79" pos:column="19"/></name> <modifier pos:line="79" pos:column="20">*<pos:position pos:line="79" pos:column="21"/></modifier></type><name pos:line="79" pos:column="21">inout<pos:position pos:line="79" pos:column="26"/></name></decl>;<pos:position pos:line="79" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="80" pos:column="9">cgid_req_t<pos:position pos:line="80" pos:column="19"/></name></type> <name pos:line="80" pos:column="20">cgid_req<pos:position pos:line="80" pos:column="28"/></name></decl>;<pos:position pos:line="80" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="81" pos:column="9">apr_status_t<pos:position pos:line="81" pos:column="21"/></name></type> <name pos:line="81" pos:column="22">stat<pos:position pos:line="81" pos:column="26"/></name></decl>;<pos:position pos:line="81" pos:column="27"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="83" pos:column="9">apr_pool_clear<pos:position pos:line="83" pos:column="23"/></name><argument_list pos:line="83" pos:column="23">(<argument><expr><name pos:line="83" pos:column="24">ptrans<pos:position pos:line="83" pos:column="30"/></name></expr></argument>)<pos:position pos:line="83" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="32"/></expr_stmt>

        <expr_stmt><expr><name pos:line="85" pos:column="9">len<pos:position pos:line="85" pos:column="12"/></name> <operator pos:line="85" pos:column="13">=<pos:position pos:line="85" pos:column="14"/></operator> <sizeof pos:line="85" pos:column="15">sizeof<argument_list pos:line="85" pos:column="21">(<argument><expr><name pos:line="85" pos:column="22">unix_addr<pos:position pos:line="85" pos:column="31"/></name></expr></argument>)<pos:position pos:line="85" pos:column="32"/></argument_list></sizeof></expr>;<pos:position pos:line="85" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="86" pos:column="9">sd2<pos:position pos:line="86" pos:column="12"/></name> <operator pos:line="86" pos:column="13">=<pos:position pos:line="86" pos:column="14"/></operator> <call><name pos:line="86" pos:column="15">accept<pos:position pos:line="86" pos:column="21"/></name><argument_list pos:line="86" pos:column="21">(<argument><expr><name pos:line="86" pos:column="22">sd<pos:position pos:line="86" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="26">(<pos:position pos:line="86" pos:column="27"/></operator>struct <name pos:line="86" pos:column="34">sockaddr<pos:position pos:line="86" pos:column="42"/></name> <operator pos:line="86" pos:column="43">*<pos:position pos:line="86" pos:column="44"/></operator><operator pos:line="86" pos:column="44">)<pos:position pos:line="86" pos:column="45"/></operator><operator pos:line="86" pos:column="45">&amp;<pos:position pos:line="86" pos:column="50"/></operator><name pos:line="86" pos:column="46">unix_addr<pos:position pos:line="86" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="57">&amp;<pos:position pos:line="86" pos:column="62"/></operator><name pos:line="86" pos:column="58">len<pos:position pos:line="86" pos:column="61"/></name></expr></argument>)<pos:position pos:line="86" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="63"/></expr_stmt>
        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><name pos:line="87" pos:column="13">sd2<pos:position pos:line="87" pos:column="16"/></name> <operator pos:line="87" pos:column="17">&lt;<pos:position pos:line="87" pos:column="21"/></operator> <literal type="number" pos:line="87" pos:column="19">0<pos:position pos:line="87" pos:column="20"/></literal></expr>)<pos:position pos:line="87" pos:column="21"/></condition><then pos:line="87" pos:column="21"> <block pos:line="87" pos:column="22">{
            <if pos:line="88" pos:column="13">if <condition pos:line="88" pos:column="16">(<expr><name pos:line="88" pos:column="17">errno<pos:position pos:line="88" pos:column="22"/></name> <operator pos:line="88" pos:column="23">!=<pos:position pos:line="88" pos:column="25"/></operator> <name pos:line="88" pos:column="26">EINTR<pos:position pos:line="88" pos:column="31"/></name></expr>)<pos:position pos:line="88" pos:column="32"/></condition><then pos:line="88" pos:column="32"> <block pos:line="88" pos:column="33">{
                <expr_stmt><expr><call><name pos:line="89" pos:column="17">ap_log_error<pos:position pos:line="89" pos:column="29"/></name><argument_list pos:line="89" pos:column="29">(<argument><expr><name pos:line="89" pos:column="30">APLOG_MARK<pos:position pos:line="89" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="42">APLOG_ERR<pos:position pos:line="89" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="53">errno<pos:position pos:line="89" pos:column="58"/></name></expr></argument>, 
                             <argument><expr><operator pos:line="90" pos:column="30">(<pos:position pos:line="90" pos:column="31"/></operator><name pos:line="90" pos:column="31">server_rec<pos:position pos:line="90" pos:column="41"/></name> <operator pos:line="90" pos:column="42">*<pos:position pos:line="90" pos:column="43"/></operator><operator pos:line="90" pos:column="43">)<pos:position pos:line="90" pos:column="44"/></operator><name pos:line="90" pos:column="44">data<pos:position pos:line="90" pos:column="48"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="91" pos:column="30">"Error accepting on cgid socket"<pos:position pos:line="91" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="64"/></expr_stmt>
            }<pos:position pos:line="92" pos:column="14"/></block></then></if>
            <continue pos:line="93" pos:column="13">continue;<pos:position pos:line="93" pos:column="22"/></continue>
        }<pos:position pos:line="94" pos:column="10"/></block></then></if>
       
        <expr_stmt><expr><name pos:line="96" pos:column="9">r<pos:position pos:line="96" pos:column="10"/></name> <operator pos:line="96" pos:column="11">=<pos:position pos:line="96" pos:column="12"/></operator> <call><name pos:line="96" pos:column="13">apr_pcalloc<pos:position pos:line="96" pos:column="24"/></name><argument_list pos:line="96" pos:column="24">(<argument><expr><name pos:line="96" pos:column="25">ptrans<pos:position pos:line="96" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="96" pos:column="33">sizeof<argument_list pos:line="96" pos:column="39">(<argument><expr><name pos:line="96" pos:column="40">request_rec<pos:position pos:line="96" pos:column="51"/></name></expr></argument>)<pos:position pos:line="96" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="96" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="54"/></expr_stmt> 
        <expr_stmt><expr><name pos:line="97" pos:column="9">procnew<pos:position pos:line="97" pos:column="16"/></name> <operator pos:line="97" pos:column="17">=<pos:position pos:line="97" pos:column="18"/></operator> <call><name pos:line="97" pos:column="19">apr_pcalloc<pos:position pos:line="97" pos:column="30"/></name><argument_list pos:line="97" pos:column="30">(<argument><expr><name pos:line="97" pos:column="31">ptrans<pos:position pos:line="97" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="97" pos:column="39">sizeof<argument_list pos:line="97" pos:column="45">(<argument><expr><operator pos:line="97" pos:column="46">*<pos:position pos:line="97" pos:column="47"/></operator><name pos:line="97" pos:column="47">procnew<pos:position pos:line="97" pos:column="54"/></name></expr></argument>)<pos:position pos:line="97" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="97" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="98" pos:column="9">r<pos:position pos:line="98" pos:column="10"/></name><operator pos:line="98" pos:column="10">-&gt;<pos:position pos:line="98" pos:column="15"/></operator><name pos:line="98" pos:column="12">pool<pos:position pos:line="98" pos:column="16"/></name></name> <operator pos:line="98" pos:column="17">=<pos:position pos:line="98" pos:column="18"/></operator> <name pos:line="98" pos:column="19">ptrans<pos:position pos:line="98" pos:column="25"/></name></expr>;<pos:position pos:line="98" pos:column="26"/></expr_stmt> 
        <expr_stmt><expr><name pos:line="99" pos:column="9">stat<pos:position pos:line="99" pos:column="13"/></name> <operator pos:line="99" pos:column="14">=<pos:position pos:line="99" pos:column="15"/></operator> <call><name pos:line="99" pos:column="16">get_req<pos:position pos:line="99" pos:column="23"/></name><argument_list pos:line="99" pos:column="23">(<argument><expr><name pos:line="99" pos:column="24">sd2<pos:position pos:line="99" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="29">r<pos:position pos:line="99" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="32">&amp;<pos:position pos:line="99" pos:column="37"/></operator><name pos:line="99" pos:column="33">argv0<pos:position pos:line="99" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="40">&amp;<pos:position pos:line="99" pos:column="45"/></operator><name pos:line="99" pos:column="41">env<pos:position pos:line="99" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="46">&amp;<pos:position pos:line="99" pos:column="51"/></operator><name pos:line="99" pos:column="47">cgid_req<pos:position pos:line="99" pos:column="55"/></name></expr></argument>)<pos:position pos:line="99" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="57"/></expr_stmt> 
        <if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">stat<pos:position pos:line="100" pos:column="17"/></name> <operator pos:line="100" pos:column="18">!=<pos:position pos:line="100" pos:column="20"/></operator> <name pos:line="100" pos:column="21">APR_SUCCESS<pos:position pos:line="100" pos:column="32"/></name></expr>)<pos:position pos:line="100" pos:column="33"/></condition><then pos:line="100" pos:column="33"> <block pos:line="100" pos:column="34">{
            <expr_stmt><expr><call><name pos:line="101" pos:column="13">ap_log_error<pos:position pos:line="101" pos:column="25"/></name><argument_list pos:line="101" pos:column="25">(<argument><expr><name pos:line="101" pos:column="26">APLOG_MARK<pos:position pos:line="101" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="38">APLOG_ERR<pos:position pos:line="101" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="49">stat<pos:position pos:line="101" pos:column="53"/></name></expr></argument>,
                         <argument><expr><name pos:line="102" pos:column="26">main_server<pos:position pos:line="102" pos:column="37"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="103" pos:column="26">"Error reading request on cgid socket"<pos:position pos:line="103" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="104" pos:column="13">close<pos:position pos:line="104" pos:column="18"/></name><argument_list pos:line="104" pos:column="18">(<argument><expr><name pos:line="104" pos:column="19">sd2<pos:position pos:line="104" pos:column="22"/></name></expr></argument>)<pos:position pos:line="104" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="24"/></expr_stmt>
            <continue pos:line="105" pos:column="13">continue;<pos:position pos:line="105" pos:column="22"/></continue>
        }<pos:position pos:line="106" pos:column="10"/></block></then></if>

        <if pos:line="108" pos:column="9">if <condition pos:line="108" pos:column="12">(<expr><name><name pos:line="108" pos:column="13">cgid_req<pos:position pos:line="108" pos:column="21"/></name><operator pos:line="108" pos:column="21">.<pos:position pos:line="108" pos:column="22"/></operator><name pos:line="108" pos:column="22">req_type<pos:position pos:line="108" pos:column="30"/></name></name> <operator pos:line="108" pos:column="31">==<pos:position pos:line="108" pos:column="33"/></operator> <name pos:line="108" pos:column="34">GETPID_REQ<pos:position pos:line="108" pos:column="44"/></name></expr>)<pos:position pos:line="108" pos:column="45"/></condition><then pos:line="108" pos:column="45"> <block pos:line="108" pos:column="46">{
            <decl_stmt><decl><type><name pos:line="109" pos:column="13">pid_t<pos:position pos:line="109" pos:column="18"/></name></type> <name pos:line="109" pos:column="19">pid<pos:position pos:line="109" pos:column="22"/></name></decl>;<pos:position pos:line="109" pos:column="23"/></decl_stmt>

            <expr_stmt><expr><name pos:line="111" pos:column="13">pid<pos:position pos:line="111" pos:column="16"/></name> <operator pos:line="111" pos:column="17">=<pos:position pos:line="111" pos:column="18"/></operator> <operator pos:line="111" pos:column="19">(<pos:position pos:line="111" pos:column="20"/></operator><name pos:line="111" pos:column="20">pid_t<pos:position pos:line="111" pos:column="25"/></name><operator pos:line="111" pos:column="25">)<pos:position pos:line="111" pos:column="26"/></operator><call><name pos:line="111" pos:column="26">apr_hash_get<pos:position pos:line="111" pos:column="38"/></name><argument_list pos:line="111" pos:column="38">(<argument><expr><name pos:line="111" pos:column="39">script_hash<pos:position pos:line="111" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="111" pos:column="52">&amp;<pos:position pos:line="111" pos:column="57"/></operator><name><name pos:line="111" pos:column="53">cgid_req<pos:position pos:line="111" pos:column="61"/></name><operator pos:line="111" pos:column="61">.<pos:position pos:line="111" pos:column="62"/></operator><name pos:line="111" pos:column="62">conn_id<pos:position pos:line="111" pos:column="69"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="111" pos:column="71">sizeof<argument_list pos:line="111" pos:column="77">(<argument><expr><name><name pos:line="111" pos:column="78">cgid_req<pos:position pos:line="111" pos:column="86"/></name><operator pos:line="111" pos:column="86">.<pos:position pos:line="111" pos:column="87"/></operator><name pos:line="111" pos:column="87">conn_id<pos:position pos:line="111" pos:column="94"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="95"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="111" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="97"/></expr_stmt>
            <if pos:line="112" pos:column="13">if <condition pos:line="112" pos:column="16">(<expr><call><name pos:line="112" pos:column="17">write<pos:position pos:line="112" pos:column="22"/></name><argument_list pos:line="112" pos:column="22">(<argument><expr><name pos:line="112" pos:column="23">sd2<pos:position pos:line="112" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="112" pos:column="28">&amp;<pos:position pos:line="112" pos:column="33"/></operator><name pos:line="112" pos:column="29">pid<pos:position pos:line="112" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="112" pos:column="34">sizeof<argument_list pos:line="112" pos:column="40">(<argument><expr><name pos:line="112" pos:column="41">pid<pos:position pos:line="112" pos:column="44"/></name></expr></argument>)<pos:position pos:line="112" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="112" pos:column="46"/></argument_list></call> <operator pos:line="112" pos:column="47">!=<pos:position pos:line="112" pos:column="49"/></operator> <sizeof pos:line="112" pos:column="50">sizeof<argument_list pos:line="112" pos:column="56">(<argument><expr><name pos:line="112" pos:column="57">pid<pos:position pos:line="112" pos:column="60"/></name></expr></argument>)<pos:position pos:line="112" pos:column="61"/></argument_list></sizeof></expr>)<pos:position pos:line="112" pos:column="62"/></condition><then pos:line="112" pos:column="62"> <block pos:line="112" pos:column="63">{
                <expr_stmt><expr><call><name pos:line="113" pos:column="17">ap_log_error<pos:position pos:line="113" pos:column="29"/></name><argument_list pos:line="113" pos:column="29">(<argument><expr><name pos:line="113" pos:column="30">APLOG_MARK<pos:position pos:line="113" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="42">APLOG_ERR<pos:position pos:line="113" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="113" pos:column="53">0<pos:position pos:line="113" pos:column="54"/></literal></expr></argument>,
                             <argument><expr><name pos:line="114" pos:column="30">main_server<pos:position pos:line="114" pos:column="41"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="115" pos:column="30">"Error writing pid %"<pos:position pos:line="115" pos:column="51"/></literal> <name pos:line="115" pos:column="52">APR_PID_T_FMT<pos:position pos:line="115" pos:column="65"/></name> <literal type="string" pos:line="115" pos:column="66">" to handler"<pos:position pos:line="115" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="115" pos:column="81">pid<pos:position pos:line="115" pos:column="84"/></name></expr></argument>)<pos:position pos:line="115" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="86"/></expr_stmt>
            }<pos:position pos:line="116" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="117" pos:column="13">close<pos:position pos:line="117" pos:column="18"/></name><argument_list pos:line="117" pos:column="18">(<argument><expr><name pos:line="117" pos:column="19">sd2<pos:position pos:line="117" pos:column="22"/></name></expr></argument>)<pos:position pos:line="117" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="24"/></expr_stmt>
            <continue pos:line="118" pos:column="13">continue;<pos:position pos:line="118" pos:column="22"/></continue>
        }<pos:position pos:line="119" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="121" pos:column="9">apr_os_file_put<pos:position pos:line="121" pos:column="24"/></name><argument_list pos:line="121" pos:column="24">(<argument><expr><operator pos:line="121" pos:column="25">&amp;<pos:position pos:line="121" pos:column="30"/></operator><name><name pos:line="121" pos:column="26">r<pos:position pos:line="121" pos:column="27"/></name><operator pos:line="121" pos:column="27">-&gt;<pos:position pos:line="121" pos:column="32"/></operator><name pos:line="121" pos:column="29">server<pos:position pos:line="121" pos:column="35"/></name><operator pos:line="121" pos:column="35">-&gt;<pos:position pos:line="121" pos:column="40"/></operator><name pos:line="121" pos:column="37">error_log<pos:position pos:line="121" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="48">&amp;<pos:position pos:line="121" pos:column="53"/></operator><name pos:line="121" pos:column="49">errfileno<pos:position pos:line="121" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="121" pos:column="60">0<pos:position pos:line="121" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="121" pos:column="63">r<pos:position pos:line="121" pos:column="64"/></name><operator pos:line="121" pos:column="64">-&gt;<pos:position pos:line="121" pos:column="69"/></operator><name pos:line="121" pos:column="66">pool<pos:position pos:line="121" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="122" pos:column="9">apr_os_file_put<pos:position pos:line="122" pos:column="24"/></name><argument_list pos:line="122" pos:column="24">(<argument><expr><operator pos:line="122" pos:column="25">&amp;<pos:position pos:line="122" pos:column="30"/></operator><name pos:line="122" pos:column="26">inout<pos:position pos:line="122" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="33">&amp;<pos:position pos:line="122" pos:column="38"/></operator><name pos:line="122" pos:column="34">sd2<pos:position pos:line="122" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="39">0<pos:position pos:line="122" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="42">r<pos:position pos:line="122" pos:column="43"/></name><operator pos:line="122" pos:column="43">-&gt;<pos:position pos:line="122" pos:column="48"/></operator><name pos:line="122" pos:column="45">pool<pos:position pos:line="122" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="51"/></expr_stmt>

        <if pos:line="124" pos:column="9">if <condition pos:line="124" pos:column="12">(<expr><name><name pos:line="124" pos:column="13">cgid_req<pos:position pos:line="124" pos:column="21"/></name><operator pos:line="124" pos:column="21">.<pos:position pos:line="124" pos:column="22"/></operator><name pos:line="124" pos:column="22">req_type<pos:position pos:line="124" pos:column="30"/></name></name> <operator pos:line="124" pos:column="31">==<pos:position pos:line="124" pos:column="33"/></operator> <name pos:line="124" pos:column="34">SSI_REQ<pos:position pos:line="124" pos:column="41"/></name></expr>)<pos:position pos:line="124" pos:column="42"/></condition><then pos:line="124" pos:column="42"> <block pos:line="124" pos:column="43">{
            <expr_stmt><expr><name pos:line="125" pos:column="13">in_pipe<pos:position pos:line="125" pos:column="20"/></name>  <operator pos:line="125" pos:column="22">=<pos:position pos:line="125" pos:column="23"/></operator> <name pos:line="125" pos:column="24">APR_NO_PIPE<pos:position pos:line="125" pos:column="35"/></name></expr>;<pos:position pos:line="125" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><name pos:line="126" pos:column="13">out_pipe<pos:position pos:line="126" pos:column="21"/></name> <operator pos:line="126" pos:column="22">=<pos:position pos:line="126" pos:column="23"/></operator> <name pos:line="126" pos:column="24">APR_FULL_BLOCK<pos:position pos:line="126" pos:column="38"/></name></expr>;<pos:position pos:line="126" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name pos:line="127" pos:column="13">err_pipe<pos:position pos:line="127" pos:column="21"/></name> <operator pos:line="127" pos:column="22">=<pos:position pos:line="127" pos:column="23"/></operator> <name pos:line="127" pos:column="24">APR_NO_PIPE<pos:position pos:line="127" pos:column="35"/></name></expr>;<pos:position pos:line="127" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><name pos:line="128" pos:column="13">cmd_type<pos:position pos:line="128" pos:column="21"/></name> <operator pos:line="128" pos:column="22">=<pos:position pos:line="128" pos:column="23"/></operator> <name pos:line="128" pos:column="24">APR_SHELLCMD<pos:position pos:line="128" pos:column="36"/></name></expr>;<pos:position pos:line="128" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="129" pos:column="10"/></block></then>
        <else pos:line="130" pos:column="9">else <block pos:line="130" pos:column="14">{
            <expr_stmt><expr><name pos:line="131" pos:column="13">in_pipe<pos:position pos:line="131" pos:column="20"/></name>  <operator pos:line="131" pos:column="22">=<pos:position pos:line="131" pos:column="23"/></operator> <name pos:line="131" pos:column="24">APR_CHILD_BLOCK<pos:position pos:line="131" pos:column="39"/></name></expr>;<pos:position pos:line="131" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name pos:line="132" pos:column="13">out_pipe<pos:position pos:line="132" pos:column="21"/></name> <operator pos:line="132" pos:column="22">=<pos:position pos:line="132" pos:column="23"/></operator> <name pos:line="132" pos:column="24">APR_CHILD_BLOCK<pos:position pos:line="132" pos:column="39"/></name></expr>;<pos:position pos:line="132" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name pos:line="133" pos:column="13">err_pipe<pos:position pos:line="133" pos:column="21"/></name> <operator pos:line="133" pos:column="22">=<pos:position pos:line="133" pos:column="23"/></operator> <name pos:line="133" pos:column="24">APR_CHILD_BLOCK<pos:position pos:line="133" pos:column="39"/></name></expr>;<pos:position pos:line="133" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name pos:line="134" pos:column="13">cmd_type<pos:position pos:line="134" pos:column="21"/></name> <operator pos:line="134" pos:column="22">=<pos:position pos:line="134" pos:column="23"/></operator> <name pos:line="134" pos:column="24">APR_PROGRAM<pos:position pos:line="134" pos:column="35"/></name></expr>;<pos:position pos:line="134" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="135" pos:column="10"/></block></else></if>

        <if pos:line="137" pos:column="9">if <condition pos:line="137" pos:column="12">(<expr><operator pos:line="137" pos:column="13">(<pos:position pos:line="137" pos:column="14"/></operator><operator pos:line="137" pos:column="14">(<pos:position pos:line="137" pos:column="15"/></operator><name pos:line="137" pos:column="15">rc<pos:position pos:line="137" pos:column="17"/></name> <operator pos:line="137" pos:column="18">=<pos:position pos:line="137" pos:column="19"/></operator> <call><name pos:line="137" pos:column="20">apr_procattr_create<pos:position pos:line="137" pos:column="39"/></name><argument_list pos:line="137" pos:column="39">(<argument><expr><operator pos:line="137" pos:column="40">&amp;<pos:position pos:line="137" pos:column="45"/></operator><name pos:line="137" pos:column="41">procattr<pos:position pos:line="137" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="51">ptrans<pos:position pos:line="137" pos:column="57"/></name></expr></argument>)<pos:position pos:line="137" pos:column="58"/></argument_list></call><operator pos:line="137" pos:column="58">)<pos:position pos:line="137" pos:column="59"/></operator> <operator pos:line="137" pos:column="60">!=<pos:position pos:line="137" pos:column="62"/></operator> <name pos:line="137" pos:column="63">APR_SUCCESS<pos:position pos:line="137" pos:column="74"/></name><operator pos:line="137" pos:column="74">)<pos:position pos:line="137" pos:column="75"/></operator> <operator pos:line="137" pos:column="76">||<pos:position pos:line="137" pos:column="78"/></operator>
            <operator pos:line="138" pos:column="13">(<pos:position pos:line="138" pos:column="14"/></operator><operator pos:line="138" pos:column="14">(<pos:position pos:line="138" pos:column="15"/></operator><name><name pos:line="138" pos:column="15">cgid_req<pos:position pos:line="138" pos:column="23"/></name><operator pos:line="138" pos:column="23">.<pos:position pos:line="138" pos:column="24"/></operator><name pos:line="138" pos:column="24">req_type<pos:position pos:line="138" pos:column="32"/></name></name> <operator pos:line="138" pos:column="33">==<pos:position pos:line="138" pos:column="35"/></operator> <name pos:line="138" pos:column="36">CGI_REQ<pos:position pos:line="138" pos:column="43"/></name><operator pos:line="138" pos:column="43">)<pos:position pos:line="138" pos:column="44"/></operator> <operator pos:line="138" pos:column="45">&amp;&amp;<pos:position pos:line="138" pos:column="55"/></operator> 
             <operator pos:line="139" pos:column="14">(<pos:position pos:line="139" pos:column="15"/></operator><operator pos:line="139" pos:column="15">(<pos:position pos:line="139" pos:column="16"/></operator><operator pos:line="139" pos:column="16">(<pos:position pos:line="139" pos:column="17"/></operator><name pos:line="139" pos:column="17">rc<pos:position pos:line="139" pos:column="19"/></name> <operator pos:line="139" pos:column="20">=<pos:position pos:line="139" pos:column="21"/></operator> <call><name pos:line="139" pos:column="22">apr_procattr_io_set<pos:position pos:line="139" pos:column="41"/></name><argument_list pos:line="139" pos:column="41">(<argument><expr><name pos:line="139" pos:column="42">procattr<pos:position pos:line="139" pos:column="50"/></name></expr></argument>,
                                        <argument><expr><name pos:line="140" pos:column="41">in_pipe<pos:position pos:line="140" pos:column="48"/></name></expr></argument>,
                                        <argument><expr><name pos:line="141" pos:column="41">out_pipe<pos:position pos:line="141" pos:column="49"/></name></expr></argument>,
                                        <argument><expr><name pos:line="142" pos:column="41">err_pipe<pos:position pos:line="142" pos:column="49"/></name></expr></argument>)<pos:position pos:line="142" pos:column="50"/></argument_list></call><operator pos:line="142" pos:column="50">)<pos:position pos:line="142" pos:column="51"/></operator> <operator pos:line="142" pos:column="52">!=<pos:position pos:line="142" pos:column="54"/></operator> <name pos:line="142" pos:column="55">APR_SUCCESS<pos:position pos:line="142" pos:column="66"/></name><operator pos:line="142" pos:column="66">)<pos:position pos:line="142" pos:column="67"/></operator> <operator pos:line="142" pos:column="68">||<pos:position pos:line="142" pos:column="70"/></operator>
              <comment type="block" pos:line="143" pos:column="15">/* XXX apr_procattr_child_*_set() is creating an unnecessary 
               * pipe between this process and the child being created...
               * It is cleaned up with the temporary pool for this request.
               */</comment>
              <operator pos:line="147" pos:column="15">(<pos:position pos:line="147" pos:column="16"/></operator><operator pos:line="147" pos:column="16">(<pos:position pos:line="147" pos:column="17"/></operator><name pos:line="147" pos:column="17">rc<pos:position pos:line="147" pos:column="19"/></name> <operator pos:line="147" pos:column="20">=<pos:position pos:line="147" pos:column="21"/></operator> <call><name pos:line="147" pos:column="22">apr_procattr_child_err_set<pos:position pos:line="147" pos:column="48"/></name><argument_list pos:line="147" pos:column="48">(<argument><expr><name pos:line="147" pos:column="49">procattr<pos:position pos:line="147" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="147" pos:column="59">r<pos:position pos:line="147" pos:column="60"/></name><operator pos:line="147" pos:column="60">-&gt;<pos:position pos:line="147" pos:column="65"/></operator><name pos:line="147" pos:column="62">server<pos:position pos:line="147" pos:column="68"/></name><operator pos:line="147" pos:column="68">-&gt;<pos:position pos:line="147" pos:column="73"/></operator><name pos:line="147" pos:column="70">error_log<pos:position pos:line="147" pos:column="79"/></name></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="81">NULL<pos:position pos:line="147" pos:column="85"/></name></expr></argument>)<pos:position pos:line="147" pos:column="86"/></argument_list></call><operator pos:line="147" pos:column="86">)<pos:position pos:line="147" pos:column="87"/></operator> <operator pos:line="147" pos:column="88">!=<pos:position pos:line="147" pos:column="90"/></operator> <name pos:line="147" pos:column="91">APR_SUCCESS<pos:position pos:line="147" pos:column="102"/></name><operator pos:line="147" pos:column="102">)<pos:position pos:line="147" pos:column="103"/></operator> <operator pos:line="147" pos:column="104">||<pos:position pos:line="147" pos:column="106"/></operator>
              <operator pos:line="148" pos:column="15">(<pos:position pos:line="148" pos:column="16"/></operator><operator pos:line="148" pos:column="16">(<pos:position pos:line="148" pos:column="17"/></operator><name pos:line="148" pos:column="17">rc<pos:position pos:line="148" pos:column="19"/></name> <operator pos:line="148" pos:column="20">=<pos:position pos:line="148" pos:column="21"/></operator> <call><name pos:line="148" pos:column="22">apr_procattr_child_in_set<pos:position pos:line="148" pos:column="47"/></name><argument_list pos:line="148" pos:column="47">(<argument><expr><name pos:line="148" pos:column="48">procattr<pos:position pos:line="148" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="58">inout<pos:position pos:line="148" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="65">NULL<pos:position pos:line="148" pos:column="69"/></name></expr></argument>)<pos:position pos:line="148" pos:column="70"/></argument_list></call><operator pos:line="148" pos:column="70">)<pos:position pos:line="148" pos:column="71"/></operator> <operator pos:line="148" pos:column="72">!=<pos:position pos:line="148" pos:column="74"/></operator> <name pos:line="148" pos:column="75">APR_SUCCESS<pos:position pos:line="148" pos:column="86"/></name><operator pos:line="148" pos:column="86">)<pos:position pos:line="148" pos:column="87"/></operator><operator pos:line="148" pos:column="87">)<pos:position pos:line="148" pos:column="88"/></operator><operator pos:line="148" pos:column="88">)<pos:position pos:line="148" pos:column="89"/></operator> <operator pos:line="148" pos:column="90">||<pos:position pos:line="148" pos:column="92"/></operator>
            <operator pos:line="149" pos:column="13">(<pos:position pos:line="149" pos:column="14"/></operator><operator pos:line="149" pos:column="14">(<pos:position pos:line="149" pos:column="15"/></operator><name pos:line="149" pos:column="15">rc<pos:position pos:line="149" pos:column="17"/></name> <operator pos:line="149" pos:column="18">=<pos:position pos:line="149" pos:column="19"/></operator> <call><name pos:line="149" pos:column="20">apr_procattr_child_out_set<pos:position pos:line="149" pos:column="46"/></name><argument_list pos:line="149" pos:column="46">(<argument><expr><name pos:line="149" pos:column="47">procattr<pos:position pos:line="149" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="57">inout<pos:position pos:line="149" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="64">NULL<pos:position pos:line="149" pos:column="68"/></name></expr></argument>)<pos:position pos:line="149" pos:column="69"/></argument_list></call><operator pos:line="149" pos:column="69">)<pos:position pos:line="149" pos:column="70"/></operator> <operator pos:line="149" pos:column="71">!=<pos:position pos:line="149" pos:column="73"/></operator> <name pos:line="149" pos:column="74">APR_SUCCESS<pos:position pos:line="149" pos:column="85"/></name><operator pos:line="149" pos:column="85">)<pos:position pos:line="149" pos:column="86"/></operator> <operator pos:line="149" pos:column="87">||<pos:position pos:line="149" pos:column="89"/></operator>
            <operator pos:line="150" pos:column="13">(<pos:position pos:line="150" pos:column="14"/></operator><operator pos:line="150" pos:column="14">(<pos:position pos:line="150" pos:column="15"/></operator><name pos:line="150" pos:column="15">rc<pos:position pos:line="150" pos:column="17"/></name> <operator pos:line="150" pos:column="18">=<pos:position pos:line="150" pos:column="19"/></operator> <call><name pos:line="150" pos:column="20">apr_procattr_dir_set<pos:position pos:line="150" pos:column="40"/></name><argument_list pos:line="150" pos:column="40">(<argument><expr><name pos:line="150" pos:column="41">procattr<pos:position pos:line="150" pos:column="49"/></name></expr></argument>,
                                  <argument><expr><call><name pos:line="151" pos:column="35">ap_make_dirstr_parent<pos:position pos:line="151" pos:column="56"/></name><argument_list pos:line="151" pos:column="56">(<argument><expr><name><name pos:line="151" pos:column="57">r<pos:position pos:line="151" pos:column="58"/></name><operator pos:line="151" pos:column="58">-&gt;<pos:position pos:line="151" pos:column="63"/></operator><name pos:line="151" pos:column="60">pool<pos:position pos:line="151" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="151" pos:column="66">r<pos:position pos:line="151" pos:column="67"/></name><operator pos:line="151" pos:column="67">-&gt;<pos:position pos:line="151" pos:column="72"/></operator><name pos:line="151" pos:column="69">filename<pos:position pos:line="151" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="151" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="151" pos:column="79"/></argument_list></call><operator pos:line="151" pos:column="79">)<pos:position pos:line="151" pos:column="80"/></operator> <operator pos:line="151" pos:column="81">!=<pos:position pos:line="151" pos:column="83"/></operator> <name pos:line="151" pos:column="84">APR_SUCCESS<pos:position pos:line="151" pos:column="95"/></name><operator pos:line="151" pos:column="95">)<pos:position pos:line="151" pos:column="96"/></operator> <operator pos:line="151" pos:column="97">||<pos:position pos:line="151" pos:column="99"/></operator>
            <operator pos:line="152" pos:column="13">(<pos:position pos:line="152" pos:column="14"/></operator><operator pos:line="152" pos:column="14">(<pos:position pos:line="152" pos:column="15"/></operator><name pos:line="152" pos:column="15">rc<pos:position pos:line="152" pos:column="17"/></name> <operator pos:line="152" pos:column="18">=<pos:position pos:line="152" pos:column="19"/></operator> <call><name pos:line="152" pos:column="20">apr_procattr_cmdtype_set<pos:position pos:line="152" pos:column="44"/></name><argument_list pos:line="152" pos:column="44">(<argument><expr><name pos:line="152" pos:column="45">procattr<pos:position pos:line="152" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="55">cmd_type<pos:position pos:line="152" pos:column="63"/></name></expr></argument>)<pos:position pos:line="152" pos:column="64"/></argument_list></call><operator pos:line="152" pos:column="64">)<pos:position pos:line="152" pos:column="65"/></operator> <operator pos:line="152" pos:column="66">!=<pos:position pos:line="152" pos:column="68"/></operator> <name pos:line="152" pos:column="69">APR_SUCCESS<pos:position pos:line="152" pos:column="80"/></name><operator pos:line="152" pos:column="80">)<pos:position pos:line="152" pos:column="81"/></operator> <operator pos:line="152" pos:column="82">||<pos:position pos:line="152" pos:column="84"/></operator>
            <operator pos:line="153" pos:column="13">(<pos:position pos:line="153" pos:column="14"/></operator><operator pos:line="153" pos:column="14">(<pos:position pos:line="153" pos:column="15"/></operator><name pos:line="153" pos:column="15">rc<pos:position pos:line="153" pos:column="17"/></name> <operator pos:line="153" pos:column="18">=<pos:position pos:line="153" pos:column="19"/></operator> <call><name pos:line="153" pos:column="20">apr_procattr_child_errfn_set<pos:position pos:line="153" pos:column="48"/></name><argument_list pos:line="153" pos:column="48">(<argument><expr><name pos:line="153" pos:column="49">procattr<pos:position pos:line="153" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="59">cgid_child_errfn<pos:position pos:line="153" pos:column="75"/></name></expr></argument>)<pos:position pos:line="153" pos:column="76"/></argument_list></call><operator pos:line="153" pos:column="76">)<pos:position pos:line="153" pos:column="77"/></operator> <operator pos:line="153" pos:column="78">!=<pos:position pos:line="153" pos:column="80"/></operator> <name pos:line="153" pos:column="81">APR_SUCCESS<pos:position pos:line="153" pos:column="92"/></name><operator pos:line="153" pos:column="92">)<pos:position pos:line="153" pos:column="93"/></operator></expr>)<pos:position pos:line="153" pos:column="94"/></condition><then pos:line="153" pos:column="94"> <block pos:line="153" pos:column="95">{
            <comment type="block" pos:line="154" pos:column="13">/* Something bad happened, tell the world.
             * ap_log_rerror() won't work because the header table used by
             * ap_log_rerror() hasn't been replicated in the phony r
             */</comment>
            <expr_stmt><expr><call><name pos:line="158" pos:column="13">ap_log_error<pos:position pos:line="158" pos:column="25"/></name><argument_list pos:line="158" pos:column="25">(<argument><expr><name pos:line="158" pos:column="26">APLOG_MARK<pos:position pos:line="158" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="38">APLOG_ERR<pos:position pos:line="158" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="49">rc<pos:position pos:line="158" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="158" pos:column="53">r<pos:position pos:line="158" pos:column="54"/></name><operator pos:line="158" pos:column="54">-&gt;<pos:position pos:line="158" pos:column="59"/></operator><name pos:line="158" pos:column="56">server<pos:position pos:line="158" pos:column="62"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="159" pos:column="26">"couldn't set child process attributes: %s"<pos:position pos:line="159" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="159" pos:column="71">r<pos:position pos:line="159" pos:column="72"/></name><operator pos:line="159" pos:column="72">-&gt;<pos:position pos:line="159" pos:column="77"/></operator><name pos:line="159" pos:column="74">filename<pos:position pos:line="159" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="159" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="84"/></expr_stmt>
        }<pos:position pos:line="160" pos:column="10"/></block></then>
        <else pos:line="161" pos:column="9">else <block pos:line="161" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="162" pos:column="13">apr_pool_userdata_set<pos:position pos:line="162" pos:column="34"/></name><argument_list pos:line="162" pos:column="34">(<argument><expr><name pos:line="162" pos:column="35">r<pos:position pos:line="162" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="38">ERRFN_USERDATA_KEY<pos:position pos:line="162" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="58">apr_pool_cleanup_null<pos:position pos:line="162" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="81">ptrans<pos:position pos:line="162" pos:column="87"/></name></expr></argument>)<pos:position pos:line="162" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="89"/></expr_stmt>

            <expr_stmt><expr><name pos:line="164" pos:column="13">argv<pos:position pos:line="164" pos:column="17"/></name> <operator pos:line="164" pos:column="18">=<pos:position pos:line="164" pos:column="19"/></operator> <operator pos:line="164" pos:column="20">(<pos:position pos:line="164" pos:column="21"/></operator><specifier pos:line="164" pos:column="21">const<pos:position pos:line="164" pos:column="26"/></specifier> <name pos:line="164" pos:column="27">char<pos:position pos:line="164" pos:column="31"/></name> <operator pos:line="164" pos:column="32">*<pos:position pos:line="164" pos:column="33"/></operator> <specifier pos:line="164" pos:column="34">const<pos:position pos:line="164" pos:column="39"/></specifier> <operator pos:line="164" pos:column="40">*<pos:position pos:line="164" pos:column="41"/></operator><operator pos:line="164" pos:column="41">)<pos:position pos:line="164" pos:column="42"/></operator><call><name pos:line="164" pos:column="42">create_argv<pos:position pos:line="164" pos:column="53"/></name><argument_list pos:line="164" pos:column="53">(<argument><expr><name><name pos:line="164" pos:column="54">r<pos:position pos:line="164" pos:column="55"/></name><operator pos:line="164" pos:column="55">-&gt;<pos:position pos:line="164" pos:column="60"/></operator><name pos:line="164" pos:column="57">pool<pos:position pos:line="164" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="63">NULL<pos:position pos:line="164" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="69">NULL<pos:position pos:line="164" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="75">NULL<pos:position pos:line="164" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="81">argv0<pos:position pos:line="164" pos:column="86"/></name></expr></argument>, <argument><expr><name><name pos:line="164" pos:column="88">r<pos:position pos:line="164" pos:column="89"/></name><operator pos:line="164" pos:column="89">-&gt;<pos:position pos:line="164" pos:column="94"/></operator><name pos:line="164" pos:column="91">args<pos:position pos:line="164" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="164" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="97"/></expr_stmt>

           <comment type="block" pos:line="166" pos:column="12">/* We want to close sd2 for the new CGI process too.
            * If it is left open it'll make ap_pass_brigade() block
            * waiting for EOF if CGI forked something running long.
            * close(sd2) here should be okay, as CGI channel
            * is already dup()ed by apr_procattr_child_{in,out}_set()
            * above.
            */</comment>
            <expr_stmt><expr><call><name pos:line="173" pos:column="13">close<pos:position pos:line="173" pos:column="18"/></name><argument_list pos:line="173" pos:column="18">(<argument><expr><name pos:line="173" pos:column="19">sd2<pos:position pos:line="173" pos:column="22"/></name></expr></argument>)<pos:position pos:line="173" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="24"/></expr_stmt>

            <if pos:line="175" pos:column="13">if <condition pos:line="175" pos:column="16">(<expr><call><name pos:line="175" pos:column="17">memcmp<pos:position pos:line="175" pos:column="23"/></name><argument_list pos:line="175" pos:column="23">(<argument><expr><operator pos:line="175" pos:column="24">&amp;<pos:position pos:line="175" pos:column="29"/></operator><name pos:line="175" pos:column="25">empty_ugid<pos:position pos:line="175" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="175" pos:column="37">&amp;<pos:position pos:line="175" pos:column="42"/></operator><name><name pos:line="175" pos:column="38">cgid_req<pos:position pos:line="175" pos:column="46"/></name><operator pos:line="175" pos:column="46">.<pos:position pos:line="175" pos:column="47"/></operator><name pos:line="175" pos:column="47">ugid<pos:position pos:line="175" pos:column="51"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="175" pos:column="53">sizeof<argument_list pos:line="175" pos:column="59">(<argument><expr><name pos:line="175" pos:column="60">empty_ugid<pos:position pos:line="175" pos:column="70"/></name></expr></argument>)<pos:position pos:line="175" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="175" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="175" pos:column="73"/></condition><then pos:line="175" pos:column="73"> <block pos:line="175" pos:column="74">{
                <comment type="block" pos:line="176" pos:column="17">/* We have a valid identity, and can be sure that 
                 * cgid_suexec_id_doer will return a valid ugid 
                 */</comment>
                <expr_stmt><expr><name pos:line="179" pos:column="17">rc<pos:position pos:line="179" pos:column="19"/></name> <operator pos:line="179" pos:column="20">=<pos:position pos:line="179" pos:column="21"/></operator> <call><name pos:line="179" pos:column="22">ap_os_create_privileged_process<pos:position pos:line="179" pos:column="53"/></name><argument_list pos:line="179" pos:column="53">(<argument><expr><name pos:line="179" pos:column="54">r<pos:position pos:line="179" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="57">procnew<pos:position pos:line="179" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="66">argv0<pos:position pos:line="179" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="73">argv<pos:position pos:line="179" pos:column="77"/></name></expr></argument>,
                                                     <argument><expr><operator pos:line="180" pos:column="54">(<pos:position pos:line="180" pos:column="55"/></operator><specifier pos:line="180" pos:column="55">const<pos:position pos:line="180" pos:column="60"/></specifier> <name pos:line="180" pos:column="61">char<pos:position pos:line="180" pos:column="65"/></name> <operator pos:line="180" pos:column="66">*<pos:position pos:line="180" pos:column="67"/></operator> <specifier pos:line="180" pos:column="68">const<pos:position pos:line="180" pos:column="73"/></specifier> <operator pos:line="180" pos:column="74">*<pos:position pos:line="180" pos:column="75"/></operator><operator pos:line="180" pos:column="75">)<pos:position pos:line="180" pos:column="76"/></operator><name pos:line="180" pos:column="76">env<pos:position pos:line="180" pos:column="79"/></name></expr></argument>,
                                                     <argument><expr><name pos:line="181" pos:column="54">procattr<pos:position pos:line="181" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="64">ptrans<pos:position pos:line="181" pos:column="70"/></name></expr></argument>)<pos:position pos:line="181" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="72"/></expr_stmt>
            }<pos:position pos:line="182" pos:column="14"/></block></then> <else pos:line="182" pos:column="15">else <block pos:line="182" pos:column="20">{
                <expr_stmt><expr><name pos:line="183" pos:column="17">rc<pos:position pos:line="183" pos:column="19"/></name> <operator pos:line="183" pos:column="20">=<pos:position pos:line="183" pos:column="21"/></operator> <call><name pos:line="183" pos:column="22">apr_proc_create<pos:position pos:line="183" pos:column="37"/></name><argument_list pos:line="183" pos:column="37">(<argument><expr><name pos:line="183" pos:column="38">procnew<pos:position pos:line="183" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="47">argv0<pos:position pos:line="183" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="54">argv<pos:position pos:line="183" pos:column="58"/></name></expr></argument>, 
                                     <argument><expr><operator pos:line="184" pos:column="38">(<pos:position pos:line="184" pos:column="39"/></operator><specifier pos:line="184" pos:column="39">const<pos:position pos:line="184" pos:column="44"/></specifier> <name pos:line="184" pos:column="45">char<pos:position pos:line="184" pos:column="49"/></name> <operator pos:line="184" pos:column="50">*<pos:position pos:line="184" pos:column="51"/></operator> <specifier pos:line="184" pos:column="52">const<pos:position pos:line="184" pos:column="57"/></specifier> <operator pos:line="184" pos:column="58">*<pos:position pos:line="184" pos:column="59"/></operator><operator pos:line="184" pos:column="59">)<pos:position pos:line="184" pos:column="60"/></operator><name pos:line="184" pos:column="60">env<pos:position pos:line="184" pos:column="63"/></name></expr></argument>, 
                                     <argument><expr><name pos:line="185" pos:column="38">procattr<pos:position pos:line="185" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="48">ptrans<pos:position pos:line="185" pos:column="54"/></name></expr></argument>)<pos:position pos:line="185" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="186" pos:column="14"/></block></else></if>
                
            <if pos:line="188" pos:column="13">if <condition pos:line="188" pos:column="16">(<expr><name pos:line="188" pos:column="17">rc<pos:position pos:line="188" pos:column="19"/></name> <operator pos:line="188" pos:column="20">!=<pos:position pos:line="188" pos:column="22"/></operator> <name pos:line="188" pos:column="23">APR_SUCCESS<pos:position pos:line="188" pos:column="34"/></name></expr>)<pos:position pos:line="188" pos:column="35"/></condition><then pos:line="188" pos:column="35"> <block pos:line="188" pos:column="36">{
                <comment type="block" pos:line="189" pos:column="17">/* Bad things happened. Everyone should have cleaned up.
                 * ap_log_rerror() won't work because the header table used by
                 * ap_log_rerror() hasn't been replicated in the phony r
                 */</comment>
                <expr_stmt><expr><call><name pos:line="193" pos:column="17">ap_log_error<pos:position pos:line="193" pos:column="29"/></name><argument_list pos:line="193" pos:column="29">(<argument><expr><name pos:line="193" pos:column="30">APLOG_MARK<pos:position pos:line="193" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="42">APLOG_ERR<pos:position pos:line="193" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="53">rc<pos:position pos:line="193" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="193" pos:column="57">r<pos:position pos:line="193" pos:column="58"/></name><operator pos:line="193" pos:column="58">-&gt;<pos:position pos:line="193" pos:column="63"/></operator><name pos:line="193" pos:column="60">server<pos:position pos:line="193" pos:column="66"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="194" pos:column="30">"couldn't create child process: %d: %s"<pos:position pos:line="194" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="194" pos:column="71">rc<pos:position pos:line="194" pos:column="73"/></name></expr></argument>, 
                             <argument><expr><call><name pos:line="195" pos:column="30">apr_filename_of_pathname<pos:position pos:line="195" pos:column="54"/></name><argument_list pos:line="195" pos:column="54">(<argument><expr><name><name pos:line="195" pos:column="55">r<pos:position pos:line="195" pos:column="56"/></name><operator pos:line="195" pos:column="56">-&gt;<pos:position pos:line="195" pos:column="61"/></operator><name pos:line="195" pos:column="58">filename<pos:position pos:line="195" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="195" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="195" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="69"/></expr_stmt>
            }<pos:position pos:line="196" pos:column="14"/></block></then>
            <else pos:line="197" pos:column="13">else <block pos:line="197" pos:column="18">{
                <comment type="block" pos:line="198" pos:column="17">/* We don't want to leak storage for the key, so only allocate
                 * a key if the key doesn't exist yet in the hash; there are
                 * only a limited number of possible keys (one for each
                 * possible thread in the server), so we can allocate a copy
                 * of the key the first time a thread has a cgid request.
                 * Note that apr_hash_set() only uses the storage passed in
                 * for the key if it is adding the key to the hash for the
                 * first time; new key storage isn't needed for replacing the
                 * existing value of a key.
                 */</comment>
                <decl_stmt><decl><type><name pos:line="208" pos:column="17">void<pos:position pos:line="208" pos:column="21"/></name> <modifier pos:line="208" pos:column="22">*<pos:position pos:line="208" pos:column="23"/></modifier></type><name pos:line="208" pos:column="23">key<pos:position pos:line="208" pos:column="26"/></name></decl>;<pos:position pos:line="208" pos:column="27"/></decl_stmt>

                <if pos:line="210" pos:column="17">if <condition pos:line="210" pos:column="20">(<expr><call><name pos:line="210" pos:column="21">apr_hash_get<pos:position pos:line="210" pos:column="33"/></name><argument_list pos:line="210" pos:column="33">(<argument><expr><name pos:line="210" pos:column="34">script_hash<pos:position pos:line="210" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="210" pos:column="47">&amp;<pos:position pos:line="210" pos:column="52"/></operator><name><name pos:line="210" pos:column="48">cgid_req<pos:position pos:line="210" pos:column="56"/></name><operator pos:line="210" pos:column="56">.<pos:position pos:line="210" pos:column="57"/></operator><name pos:line="210" pos:column="57">conn_id<pos:position pos:line="210" pos:column="64"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="210" pos:column="66">sizeof<argument_list pos:line="210" pos:column="72">(<argument><expr><name><name pos:line="210" pos:column="73">cgid_req<pos:position pos:line="210" pos:column="81"/></name><operator pos:line="210" pos:column="81">.<pos:position pos:line="210" pos:column="82"/></operator><name pos:line="210" pos:column="82">conn_id<pos:position pos:line="210" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="210" pos:column="90"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="210" pos:column="91"/></argument_list></call></expr>)<pos:position pos:line="210" pos:column="92"/></condition><then pos:line="210" pos:column="92"> <block pos:line="210" pos:column="93">{
                    <expr_stmt><expr><name pos:line="211" pos:column="21">key<pos:position pos:line="211" pos:column="24"/></name> <operator pos:line="211" pos:column="25">=<pos:position pos:line="211" pos:column="26"/></operator> <operator pos:line="211" pos:column="27">&amp;<pos:position pos:line="211" pos:column="32"/></operator><name><name pos:line="211" pos:column="28">cgid_req<pos:position pos:line="211" pos:column="36"/></name><operator pos:line="211" pos:column="36">.<pos:position pos:line="211" pos:column="37"/></operator><name pos:line="211" pos:column="37">conn_id<pos:position pos:line="211" pos:column="44"/></name></name></expr>;<pos:position pos:line="211" pos:column="45"/></expr_stmt>
                }<pos:position pos:line="212" pos:column="18"/></block></then>
                <else pos:line="213" pos:column="17">else <block pos:line="213" pos:column="22">{
                    <expr_stmt><expr><name pos:line="214" pos:column="21">key<pos:position pos:line="214" pos:column="24"/></name> <operator pos:line="214" pos:column="25">=<pos:position pos:line="214" pos:column="26"/></operator> <call><name pos:line="214" pos:column="27">apr_pcalloc<pos:position pos:line="214" pos:column="38"/></name><argument_list pos:line="214" pos:column="38">(<argument><expr><name pos:line="214" pos:column="39">pcgi<pos:position pos:line="214" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="214" pos:column="45">sizeof<argument_list pos:line="214" pos:column="51">(<argument><expr><name><name pos:line="214" pos:column="52">cgid_req<pos:position pos:line="214" pos:column="60"/></name><operator pos:line="214" pos:column="60">.<pos:position pos:line="214" pos:column="61"/></operator><name pos:line="214" pos:column="61">conn_id<pos:position pos:line="214" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="214" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="214" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="71"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="215" pos:column="21">memcpy<pos:position pos:line="215" pos:column="27"/></name><argument_list pos:line="215" pos:column="27">(<argument><expr><name pos:line="215" pos:column="28">key<pos:position pos:line="215" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="215" pos:column="33">&amp;<pos:position pos:line="215" pos:column="38"/></operator><name><name pos:line="215" pos:column="34">cgid_req<pos:position pos:line="215" pos:column="42"/></name><operator pos:line="215" pos:column="42">.<pos:position pos:line="215" pos:column="43"/></operator><name pos:line="215" pos:column="43">conn_id<pos:position pos:line="215" pos:column="50"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="215" pos:column="52">sizeof<argument_list pos:line="215" pos:column="58">(<argument><expr><name><name pos:line="215" pos:column="59">cgid_req<pos:position pos:line="215" pos:column="67"/></name><operator pos:line="215" pos:column="67">.<pos:position pos:line="215" pos:column="68"/></operator><name pos:line="215" pos:column="68">conn_id<pos:position pos:line="215" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="215" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="215" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="78"/></expr_stmt>
                }<pos:position pos:line="216" pos:column="18"/></block></else></if>
                <expr_stmt><expr><call><name pos:line="217" pos:column="17">apr_hash_set<pos:position pos:line="217" pos:column="29"/></name><argument_list pos:line="217" pos:column="29">(<argument><expr><name pos:line="217" pos:column="30">script_hash<pos:position pos:line="217" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="43">key<pos:position pos:line="217" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="217" pos:column="48">sizeof<argument_list pos:line="217" pos:column="54">(<argument><expr><name><name pos:line="217" pos:column="55">cgid_req<pos:position pos:line="217" pos:column="63"/></name><operator pos:line="217" pos:column="63">.<pos:position pos:line="217" pos:column="64"/></operator><name pos:line="217" pos:column="64">conn_id<pos:position pos:line="217" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="217" pos:column="72"/></argument_list></sizeof></expr></argument>,
                             <argument><expr><operator pos:line="218" pos:column="30">(<pos:position pos:line="218" pos:column="31"/></operator><name pos:line="218" pos:column="31">void<pos:position pos:line="218" pos:column="35"/></name> <operator pos:line="218" pos:column="36">*<pos:position pos:line="218" pos:column="37"/></operator><operator pos:line="218" pos:column="37">)<pos:position pos:line="218" pos:column="38"/></operator><name><name pos:line="218" pos:column="38">procnew<pos:position pos:line="218" pos:column="45"/></name><operator pos:line="218" pos:column="45">-&gt;<pos:position pos:line="218" pos:column="50"/></operator><name pos:line="218" pos:column="47">pid<pos:position pos:line="218" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="218" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="52"/></expr_stmt>
            }<pos:position pos:line="219" pos:column="14"/></block></else></if>
        }<pos:position pos:line="220" pos:column="10"/></block></else></if>
    }<pos:position pos:line="221" pos:column="6"/></block></while> 
    <return pos:line="222" pos:column="5">return <expr><operator pos:line="222" pos:column="12">-<pos:position pos:line="222" pos:column="13"/></operator><literal type="number" pos:line="222" pos:column="13">1<pos:position pos:line="222" pos:column="14"/></literal></expr>;<pos:position pos:line="222" pos:column="15"/></return> 
}<pos:position pos:line="223" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1375_httpd-2.0.64.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_size_t<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">find_tail<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">ssi_ctx_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">ctx<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">data<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">apr_size_t<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">len<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">p<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">data<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">ep<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">data<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">+<pos:position pos:line="5" pos:column="28"/></operator> <name pos:line="5" pos:column="29">len<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">pos<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name><name pos:line="6" pos:column="22">ctx<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">ctx<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">-&gt;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="32">parse_pos<pos:position pos:line="6" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">PARSE_TAIL<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">==<pos:position pos:line="8" pos:column="22"/></operator> <name><name pos:line="8" pos:column="23">ctx<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">state<pos:position pos:line="8" pos:column="33"/></name></name></expr>)<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34"> <block pos:line="8" pos:column="35">{
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">ctx<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">state<pos:position pos:line="9" pos:column="19"/></name></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="22">PARSE_TAIL_SEQ<pos:position pos:line="9" pos:column="36"/></name></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="10" pos:column="9">pos<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <name><name pos:line="10" pos:column="15">ctx<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">ctx<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">parse_pos<pos:position pos:line="10" pos:column="34"/></name></name> <operator pos:line="10" pos:column="35">=<pos:position pos:line="10" pos:column="36"/></operator> <literal type="number" pos:line="10" pos:column="37">0<pos:position pos:line="10" pos:column="38"/></literal></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <while pos:line="13" pos:column="5">while <condition pos:line="13" pos:column="11">(<expr><name pos:line="13" pos:column="12">p<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">&lt;<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="16">ep<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">&amp;&amp;<pos:position pos:line="13" pos:column="29"/></operator> <name pos:line="13" pos:column="22">pos<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">&lt;<pos:position pos:line="13" pos:column="30"/></operator> <name><name pos:line="13" pos:column="28">ctx<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">end_seq_len<pos:position pos:line="13" pos:column="44"/></name></name> <operator pos:line="13" pos:column="45">&amp;&amp;<pos:position pos:line="13" pos:column="55"/></operator> <operator pos:line="13" pos:column="48">*<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="49">p<pos:position pos:line="13" pos:column="50"/></name> <operator pos:line="13" pos:column="51">==<pos:position pos:line="13" pos:column="53"/></operator> <name><name pos:line="13" pos:column="54">ctx<pos:position pos:line="13" pos:column="57"/></name><operator pos:line="13" pos:column="57">-&gt;<pos:position pos:line="13" pos:column="62"/></operator><name pos:line="13" pos:column="59">ctx<pos:position pos:line="13" pos:column="62"/></name><operator pos:line="13" pos:column="62">-&gt;<pos:position pos:line="13" pos:column="67"/></operator><name pos:line="13" pos:column="64">end_seq<pos:position pos:line="13" pos:column="71"/></name><index pos:line="13" pos:column="71">[<expr><name pos:line="13" pos:column="72">pos<pos:position pos:line="13" pos:column="75"/></name></expr>]<pos:position pos:line="13" pos:column="76"/></index></name></expr>)<pos:position pos:line="13" pos:column="77"/></condition> <block pos:line="13" pos:column="78">{
        <expr_stmt><expr><operator pos:line="14" pos:column="9">++<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">p<pos:position pos:line="14" pos:column="12"/></name></expr>;<pos:position pos:line="14" pos:column="13"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="15" pos:column="9">++<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">pos<pos:position pos:line="15" pos:column="14"/></name></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></while>

    <comment type="block" pos:line="18" pos:column="5">/* bingo, full match */</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">pos<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">==<pos:position pos:line="19" pos:column="15"/></operator> <name><name pos:line="19" pos:column="16">ctx<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">end_seq_len<pos:position pos:line="19" pos:column="32"/></name></name></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33"> <block pos:line="19" pos:column="34">{
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">ctx<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">state<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">PARSE_EXECUTE<pos:position pos:line="20" pos:column="35"/></name></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><operator pos:line="21" pos:column="16">(<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">p<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">-<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">data<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">)<pos:position pos:line="21" pos:column="26"/></operator></expr>;<pos:position pos:line="21" pos:column="27"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="24" pos:column="5">/* partial match, the buffer is too small to match fully */</comment>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">p<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">==<pos:position pos:line="25" pos:column="13"/></operator> <name pos:line="25" pos:column="14">ep<pos:position pos:line="25" pos:column="16"/></name></expr>)<pos:position pos:line="25" pos:column="17"/></condition><then pos:line="25" pos:column="17"> <block pos:line="25" pos:column="18">{
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">ctx<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">ctx<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">parse_pos<pos:position pos:line="26" pos:column="28"/></name></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator> <name pos:line="26" pos:column="31">pos<pos:position pos:line="26" pos:column="34"/></name></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><operator pos:line="27" pos:column="16">(<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">p<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">-<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">data<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">)<pos:position pos:line="27" pos:column="26"/></operator></expr>;<pos:position pos:line="27" pos:column="27"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="30" pos:column="5">/* no match. It must be an argument string then */</comment>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">ctx<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">-&gt;<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="10">state<pos:position pos:line="31" pos:column="15"/></name></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">PARSE_ARG<pos:position pos:line="31" pos:column="27"/></name></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><literal type="number" pos:line="32" pos:column="12">0<pos:position pos:line="32" pos:column="13"/></literal></expr>;<pos:position pos:line="32" pos:column="14"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2232_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">ef_output_filter<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">ap_filter_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">f<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">apr_bucket_brigade<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">bb<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">request_rec<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">r<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name><name pos:line="3" pos:column="22">f<pos:position pos:line="3" pos:column="23"/></name><operator pos:line="3" pos:column="23">-&gt;<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="25">r<pos:position pos:line="3" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ef_ctx_t<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">ctx<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name><name pos:line="4" pos:column="21">f<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">-&gt;<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="24">ctx<pos:position pos:line="4" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">ctx<pos:position pos:line="7" pos:column="13"/></name></expr>)<pos:position pos:line="7" pos:column="14"/></condition><then pos:line="7" pos:column="14"> <block pos:line="7" pos:column="15">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">rv<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <call><name pos:line="8" pos:column="19">init_filter_instance<pos:position pos:line="8" pos:column="39"/></name><argument_list pos:line="8" pos:column="39">(<argument><expr><name pos:line="8" pos:column="40">f<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call><operator pos:line="8" pos:column="42">)<pos:position pos:line="8" pos:column="43"/></operator> <operator pos:line="8" pos:column="44">!=<pos:position pos:line="8" pos:column="46"/></operator> <name pos:line="8" pos:column="47">APR_SUCCESS<pos:position pos:line="8" pos:column="58"/></name></expr>)<pos:position pos:line="8" pos:column="59"/></condition><then pos:line="8" pos:column="59"> <block pos:line="8" pos:column="60">{
            <expr_stmt><expr><name pos:line="9" pos:column="13">ctx<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <name><name pos:line="9" pos:column="19">f<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">ctx<pos:position pos:line="9" pos:column="25"/></name></name></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">ap_log_rerror<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">APLOG_MARK<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">APLOG_ERR<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="50">rv<pos:position pos:line="10" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="54">r<pos:position pos:line="10" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="57">APLOGNO<pos:position pos:line="10" pos:column="64"/></name><argument_list pos:line="10" pos:column="64">(<argument><expr><literal type="number" pos:line="10" pos:column="65">01467<pos:position pos:line="10" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="71"/></argument_list></call>
                          <literal type="string" pos:line="11" pos:column="27">"can't initialise output filter %s: %s"<pos:position pos:line="11" pos:column="66"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="12" pos:column="27">f<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">frec<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">name<pos:position pos:line="12" pos:column="40"/></name></name></expr></argument>,
                          <argument><expr><ternary><condition><expr><operator pos:line="13" pos:column="27">(<pos:position pos:line="13" pos:column="28"/></operator><name><name pos:line="13" pos:column="28">ctx<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">dc<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">-&gt;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="37">onfail<pos:position pos:line="13" pos:column="43"/></name></name> <operator pos:line="13" pos:column="44">==<pos:position pos:line="13" pos:column="46"/></operator> <literal type="number" pos:line="13" pos:column="47">1<pos:position pos:line="13" pos:column="48"/></literal><operator pos:line="13" pos:column="48">)<pos:position pos:line="13" pos:column="49"/></operator></expr> ?<pos:position pos:line="13" pos:column="51"/></condition><then pos:line="13" pos:column="51"> <expr><literal type="string" pos:line="13" pos:column="52">"removing"<pos:position pos:line="13" pos:column="62"/></literal></expr> <pos:position pos:line="13" pos:column="63"/></then><else pos:line="13" pos:column="63">: <expr><literal type="string" pos:line="13" pos:column="65">"aborting"<pos:position pos:line="13" pos:column="75"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="13" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">ap_remove_output_filter<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">f<pos:position pos:line="14" pos:column="38"/></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
            <if pos:line="15" pos:column="13">if <condition pos:line="15" pos:column="16">(<expr><name><name pos:line="15" pos:column="17">ctx<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">dc<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">onfail<pos:position pos:line="15" pos:column="32"/></name></name> <operator pos:line="15" pos:column="33">==<pos:position pos:line="15" pos:column="35"/></operator> <literal type="number" pos:line="15" pos:column="36">1<pos:position pos:line="15" pos:column="37"/></literal></expr>)<pos:position pos:line="15" pos:column="38"/></condition><then pos:line="15" pos:column="38"> <block pos:line="15" pos:column="39">{
                <return pos:line="16" pos:column="17">return <expr><call><name pos:line="16" pos:column="24">ap_pass_brigade<pos:position pos:line="16" pos:column="39"/></name><argument_list pos:line="16" pos:column="39">(<argument><expr><name><name pos:line="16" pos:column="40">f<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">-&gt;<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="43">next<pos:position pos:line="16" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="49">bb<pos:position pos:line="16" pos:column="51"/></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="53"/></return>
            }<pos:position pos:line="17" pos:column="14"/></block></then>
            <else pos:line="18" pos:column="13">else <block pos:line="18" pos:column="18">{
                <decl_stmt><decl><type><name pos:line="19" pos:column="17">apr_bucket<pos:position pos:line="19" pos:column="27"/></name> <modifier pos:line="19" pos:column="28">*<pos:position pos:line="19" pos:column="29"/></modifier></type><name pos:line="19" pos:column="29">e<pos:position pos:line="19" pos:column="30"/></name></decl>;<pos:position pos:line="19" pos:column="31"/></decl_stmt>
                <expr_stmt><expr><name><name pos:line="20" pos:column="17">f<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">-&gt;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="20">r<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">status_line<pos:position pos:line="20" pos:column="34"/></name></name> <operator pos:line="20" pos:column="35">=<pos:position pos:line="20" pos:column="36"/></operator> <literal type="string" pos:line="20" pos:column="37">"500 Internal Server Error"<pos:position pos:line="20" pos:column="64"/></literal></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="22" pos:column="17">apr_brigade_cleanup<pos:position pos:line="22" pos:column="36"/></name><argument_list pos:line="22" pos:column="36">(<argument><expr><name pos:line="22" pos:column="37">bb<pos:position pos:line="22" pos:column="39"/></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name pos:line="23" pos:column="17">e<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <call><name pos:line="23" pos:column="21">ap_bucket_error_create<pos:position pos:line="23" pos:column="43"/></name><argument_list pos:line="23" pos:column="43">(<argument><expr><name pos:line="23" pos:column="44">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="23" pos:column="70"/></name></expr></argument>,
                                           <argument><expr><name pos:line="24" pos:column="44">NULL<pos:position pos:line="24" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="50">r<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">-&gt;<pos:position pos:line="24" pos:column="56"/></operator><name pos:line="24" pos:column="53">pool<pos:position pos:line="24" pos:column="57"/></name></name></expr></argument>,
                                           <argument><expr><name><name pos:line="25" pos:column="44">f<pos:position pos:line="25" pos:column="45"/></name><operator pos:line="25" pos:column="45">-&gt;<pos:position pos:line="25" pos:column="50"/></operator><name pos:line="25" pos:column="47">c<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">-&gt;<pos:position pos:line="25" pos:column="53"/></operator><name pos:line="25" pos:column="50">bucket_alloc<pos:position pos:line="25" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="26" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="26" pos:column="40"/></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name pos:line="26" pos:column="41">bb<pos:position pos:line="26" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="45">e<pos:position pos:line="26" pos:column="46"/></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name pos:line="27" pos:column="17">e<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <call><name pos:line="27" pos:column="21">apr_bucket_eos_create<pos:position pos:line="27" pos:column="42"/></name><argument_list pos:line="27" pos:column="42">(<argument><expr><name><name pos:line="27" pos:column="43">f<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">-&gt;<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="46">c<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">-&gt;<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="49">bucket_alloc<pos:position pos:line="27" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="28" pos:column="40"/></name><argument_list pos:line="28" pos:column="40">(<argument><expr><name pos:line="28" pos:column="41">bb<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="45">e<pos:position pos:line="28" pos:column="46"/></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="29" pos:column="17">ap_pass_brigade<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name><name pos:line="29" pos:column="33">f<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">-&gt;<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="36">next<pos:position pos:line="29" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="42">bb<pos:position pos:line="29" pos:column="44"/></name></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="46"/></expr_stmt>
                <return pos:line="30" pos:column="17">return <expr><name pos:line="30" pos:column="24">AP_FILTER_ERROR<pos:position pos:line="30" pos:column="39"/></name></expr>;<pos:position pos:line="30" pos:column="40"/></return>
            }<pos:position pos:line="31" pos:column="14"/></block></else></if>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="33" pos:column="9">ctx<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <name><name pos:line="33" pos:column="15">f<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">-&gt;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="18">ctx<pos:position pos:line="33" pos:column="21"/></name></name></expr>;<pos:position pos:line="33" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name><name pos:line="35" pos:column="9">ctx<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">noop<pos:position pos:line="35" pos:column="18"/></name></name></expr>)<pos:position pos:line="35" pos:column="19"/></condition><then pos:line="35" pos:column="19"> <block pos:line="35" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ap_remove_output_filter<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">f<pos:position pos:line="36" pos:column="34"/></name></expr></argument>)<pos:position pos:line="36" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><call><name pos:line="37" pos:column="16">ap_pass_brigade<pos:position pos:line="37" pos:column="31"/></name><argument_list pos:line="37" pos:column="31">(<argument><expr><name><name pos:line="37" pos:column="32">f<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">-&gt;<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="35">next<pos:position pos:line="37" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="41">bb<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="40" pos:column="5">rv<pos:position pos:line="40" pos:column="7"/></name> <operator pos:line="40" pos:column="8">=<pos:position pos:line="40" pos:column="9"/></operator> <call><name pos:line="40" pos:column="10">ef_unified_filter<pos:position pos:line="40" pos:column="27"/></name><argument_list pos:line="40" pos:column="27">(<argument><expr><name pos:line="40" pos:column="28">f<pos:position pos:line="40" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="31">bb<pos:position pos:line="40" pos:column="33"/></name></expr></argument>)<pos:position pos:line="40" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">rv<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">!=<pos:position pos:line="41" pos:column="14"/></operator> <name pos:line="41" pos:column="15">APR_SUCCESS<pos:position pos:line="41" pos:column="26"/></name></expr>)<pos:position pos:line="41" pos:column="27"/></condition><then pos:line="41" pos:column="27"> <block pos:line="41" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">ap_log_rerror<pos:position pos:line="42" pos:column="22"/></name><argument_list pos:line="42" pos:column="22">(<argument><expr><name pos:line="42" pos:column="23">APLOG_MARK<pos:position pos:line="42" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="35">APLOG_ERR<pos:position pos:line="42" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="46">rv<pos:position pos:line="42" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="50">r<pos:position pos:line="42" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="53">APLOGNO<pos:position pos:line="42" pos:column="60"/></name><argument_list pos:line="42" pos:column="60">(<argument><expr><literal type="number" pos:line="42" pos:column="61">01468<pos:position pos:line="42" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="67"/></argument_list></call>
                      <literal type="string" pos:line="43" pos:column="23">"ef_unified_filter() failed"<pos:position pos:line="43" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">(<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">rv<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <call><name pos:line="46" pos:column="15">ap_pass_brigade<pos:position pos:line="46" pos:column="30"/></name><argument_list pos:line="46" pos:column="30">(<argument><expr><name><name pos:line="46" pos:column="31">f<pos:position pos:line="46" pos:column="32"/></name><operator pos:line="46" pos:column="32">-&gt;<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="34">next<pos:position pos:line="46" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="40">bb<pos:position pos:line="46" pos:column="42"/></name></expr></argument>)<pos:position pos:line="46" pos:column="43"/></argument_list></call><operator pos:line="46" pos:column="43">)<pos:position pos:line="46" pos:column="44"/></operator> <operator pos:line="46" pos:column="45">!=<pos:position pos:line="46" pos:column="47"/></operator> <name pos:line="46" pos:column="48">APR_SUCCESS<pos:position pos:line="46" pos:column="59"/></name></expr>)<pos:position pos:line="46" pos:column="60"/></condition><then pos:line="46" pos:column="60"> <block pos:line="46" pos:column="61">{
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">ap_log_rerror<pos:position pos:line="47" pos:column="22"/></name><argument_list pos:line="47" pos:column="22">(<argument><expr><name pos:line="47" pos:column="23">APLOG_MARK<pos:position pos:line="47" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="35">APLOG_DEBUG<pos:position pos:line="47" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="48">rv<pos:position pos:line="47" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="52">r<pos:position pos:line="47" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="55">APLOGNO<pos:position pos:line="47" pos:column="62"/></name><argument_list pos:line="47" pos:column="62">(<argument><expr><literal type="number" pos:line="47" pos:column="63">01469<pos:position pos:line="47" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="69"/></argument_list></call>
                      <literal type="string" pos:line="48" pos:column="23">"ap_pass_brigade() failed"<pos:position pos:line="48" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    <return pos:line="50" pos:column="5">return <expr><name pos:line="50" pos:column="12">rv<pos:position pos:line="50" pos:column="14"/></name></expr>;<pos:position pos:line="50" pos:column="15"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

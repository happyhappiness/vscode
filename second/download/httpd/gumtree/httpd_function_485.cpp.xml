<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_485.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ssl_hook_Access<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">request_rec<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">r<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SSLDirConfigRec<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">dc<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">myDirConfig<pos:position pos:line="3" pos:column="38"/></name><argument_list pos:line="3" pos:column="38">(<argument><expr><name pos:line="3" pos:column="39">r<pos:position pos:line="3" pos:column="40"/></name></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SSLSrvConfigRec<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">sc<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><call><name pos:line="4" pos:column="27">mySrvConfig<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><name><name pos:line="4" pos:column="39">r<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">-&gt;<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="42">server<pos:position pos:line="4" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SSLConnRec<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">sslconn<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><call><name pos:line="5" pos:column="27">myConnConfig<pos:position pos:line="5" pos:column="39"/></name><argument_list pos:line="5" pos:column="39">(<argument><expr><name><name pos:line="5" pos:column="40">r<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">-&gt;<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="43">connection<pos:position pos:line="5" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SSL<pos:position pos:line="6" pos:column="8"/></name> <modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">ssl<pos:position pos:line="6" pos:column="13"/></name>            <init pos:line="6" pos:column="25">= <expr><ternary><condition><expr><name pos:line="6" pos:column="27">sslconn<pos:position pos:line="6" pos:column="34"/></name></expr> ?<pos:position pos:line="6" pos:column="36"/></condition><then pos:line="6" pos:column="36"> <expr><name><name pos:line="6" pos:column="37">sslconn<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">-&gt;<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="46">ssl<pos:position pos:line="6" pos:column="49"/></name></name></expr> <pos:position pos:line="6" pos:column="50"/></then><else pos:line="6" pos:column="50">: <expr><name pos:line="6" pos:column="52">NULL<pos:position pos:line="6" pos:column="56"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">SSL_CTX<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">ctx<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><name pos:line="7" pos:column="20">NULL<pos:position pos:line="7" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_array_header_t<pos:position pos:line="8" pos:column="23"/></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">requires<pos:position pos:line="8" pos:column="33"/></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ssl_require_t<pos:position pos:line="9" pos:column="18"/></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type><name pos:line="9" pos:column="20">ssl_requires<pos:position pos:line="9" pos:column="32"/></name></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">cp<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">ok<pos:position pos:line="11" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="13">i<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">BOOL<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">renegotiate<pos:position pos:line="12" pos:column="21"/></name> <init pos:line="12" pos:column="22">= <expr><name pos:line="12" pos:column="24">FALSE<pos:position pos:line="12" pos:column="29"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="31">renegotiate_quick<pos:position pos:line="12" pos:column="48"/></name> <init pos:line="12" pos:column="49">= <expr><name pos:line="12" pos:column="51">FALSE<pos:position pos:line="12" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">X509<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">cert<pos:position pos:line="13" pos:column="15"/></name></decl>;<pos:position pos:line="13" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">X509<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">peercert<pos:position pos:line="14" pos:column="19"/></name></decl>;<pos:position pos:line="14" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">X509_STORE<pos:position pos:line="15" pos:column="15"/></name> <modifier pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></modifier></type><name pos:line="15" pos:column="17">cert_store<pos:position pos:line="15" pos:column="27"/></name> <init pos:line="15" pos:column="28">= <expr><name pos:line="15" pos:column="30">NULL<pos:position pos:line="15" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">X509_STORE_CTX<pos:position pos:line="16" pos:column="19"/></name></type> <name pos:line="16" pos:column="20">cert_store_ctx<pos:position pos:line="16" pos:column="34"/></name></decl>;<pos:position pos:line="16" pos:column="35"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">STACK_OF<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">SSL_CIPHER<pos:position pos:line="17" pos:column="24"/></name></expr></argument>)<pos:position pos:line="17" pos:column="25"/></argument_list></call> <operator pos:line="17" pos:column="26">*<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">cipher_list_old<pos:position pos:line="17" pos:column="42"/></name> <operator pos:line="17" pos:column="43">=<pos:position pos:line="17" pos:column="44"/></operator> <name pos:line="17" pos:column="45">NULL<pos:position pos:line="17" pos:column="49"/></name></expr><operator pos:line="17" pos:column="49">,<pos:position pos:line="17" pos:column="50"/></operator> <expr><operator pos:line="17" pos:column="51">*<pos:position pos:line="17" pos:column="52"/></operator><name pos:line="17" pos:column="52">cipher_list<pos:position pos:line="17" pos:column="63"/></name> <operator pos:line="17" pos:column="64">=<pos:position pos:line="17" pos:column="65"/></operator> <name pos:line="17" pos:column="66">NULL<pos:position pos:line="17" pos:column="70"/></name></expr>;<pos:position pos:line="17" pos:column="71"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">SSL_CIPHER<pos:position pos:line="18" pos:column="15"/></name> <modifier pos:line="18" pos:column="16">*<pos:position pos:line="18" pos:column="17"/></modifier></type><name pos:line="18" pos:column="17">cipher<pos:position pos:line="18" pos:column="23"/></name> <init pos:line="18" pos:column="24">= <expr><name pos:line="18" pos:column="26">NULL<pos:position pos:line="18" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">depth<pos:position pos:line="19" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="19" pos:column="16">verify_old<pos:position pos:line="19" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="19" pos:column="28">verify<pos:position pos:line="19" pos:column="34"/></name></decl>, <decl><type ref="prev"/><name pos:line="19" pos:column="36">n<pos:position pos:line="19" pos:column="37"/></name></decl>;<pos:position pos:line="19" pos:column="38"/></decl_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">ssl<pos:position pos:line="21" pos:column="12"/></name></expr>)<pos:position pos:line="21" pos:column="13"/></condition><then pos:line="21" pos:column="13"> <block pos:line="21" pos:column="14">{
        <expr_stmt><expr><name pos:line="22" pos:column="9">ctx<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">SSL_get_SSL_CTX<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">ssl<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/*
     * Support for SSLRequireSSL directive
     */</comment>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">dc<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">bSSLRequired<pos:position pos:line="28" pos:column="25"/></name></name> <operator pos:line="28" pos:column="26">&amp;&amp;<pos:position pos:line="28" pos:column="36"/></operator> <operator pos:line="28" pos:column="29">!<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">ssl<pos:position pos:line="28" pos:column="33"/></name></expr>)<pos:position pos:line="28" pos:column="34"/></condition><then pos:line="28" pos:column="34"> <block pos:line="28" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">ap_log_rerror<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">APLOG_MARK<pos:position pos:line="29" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="35">APLOG_ERR<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="46">0<pos:position pos:line="29" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">r<pos:position pos:line="29" pos:column="50"/></name></expr></argument>, 
                      <argument><expr><literal type="string" pos:line="30" pos:column="23">"access to %s failed, reason: %s"<pos:position pos:line="30" pos:column="56"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="31" pos:column="23">r<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">-&gt;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="26">filename<pos:position pos:line="31" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="36">"SSL connection required"<pos:position pos:line="31" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="63"/></expr_stmt>

        <comment type="block" pos:line="33" pos:column="9">/* remember forbidden access for strict require option */</comment>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">apr_table_setn<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name><name pos:line="34" pos:column="24">r<pos:position pos:line="34" pos:column="25"/></name><operator pos:line="34" pos:column="25">-&gt;<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="27">notes<pos:position pos:line="34" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="34">"ssl-access-forbidden"<pos:position pos:line="34" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="58">"1"<pos:position pos:line="34" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="63"/></expr_stmt>

        <return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">HTTP_FORBIDDEN<pos:position pos:line="36" pos:column="30"/></name></expr>;<pos:position pos:line="36" pos:column="31"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="39" pos:column="5">/*
     * Check to see if SSL protocol is on
     */</comment>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><operator pos:line="42" pos:column="9">!<pos:position pos:line="42" pos:column="10"/></operator><operator pos:line="42" pos:column="10">(<pos:position pos:line="42" pos:column="11"/></operator><name><name pos:line="42" pos:column="11">sc<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">-&gt;<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="15">enabled<pos:position pos:line="42" pos:column="22"/></name></name> <operator pos:line="42" pos:column="23">||<pos:position pos:line="42" pos:column="25"/></operator> <name pos:line="42" pos:column="26">ssl<pos:position pos:line="42" pos:column="29"/></name><operator pos:line="42" pos:column="29">)<pos:position pos:line="42" pos:column="30"/></operator></expr>)<pos:position pos:line="42" pos:column="31"/></condition><then pos:line="42" pos:column="31"> <block pos:line="42" pos:column="32">{
        <return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">DECLINED<pos:position pos:line="43" pos:column="24"/></name></expr>;<pos:position pos:line="43" pos:column="25"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="45" pos:column="5">/*
     * Support for per-directory reconfigured SSL connection parameters.
     *
     * This is implemented by forcing an SSL renegotiation with the
     * reconfigured parameter suite. But Apache's internal API processing
     * makes our life very hard here, because when internal sub-requests occur
     * we nevertheless should avoid multiple unnecessary SSL handshakes (they
     * require extra network I/O and especially time to perform). 
     * 
     * But the optimization for filtering out the unnecessary handshakes isn't
     * obvious and trivial.  Especially because while Apache is in its
     * sub-request processing the client could force additional handshakes,
     * too. And these take place perhaps without our notice. So the only
     * possibility is to explicitly _ask_ OpenSSL whether the renegotiation
     * has to be performed or not. It has to performed when some parameters
     * which were previously known (by us) are not those we've now
     * reconfigured (as known by OpenSSL) or (in optimized way) at least when
     * the reconfigured parameter suite is stronger (more restrictions) than
     * the currently active one.
     */</comment>

    <comment type="block" pos:line="66" pos:column="5">/*
     * Override of SSLCipherSuite
     *
     * We provide two options here:
     *
     * o The paranoid and default approach where we force a renegotiation when
     *   the cipher suite changed in _any_ way (which is straight-forward but
     *   often forces renegotiations too often and is perhaps not what the
     *   user actually wanted).
     *
     * o The optimized and still secure way where we force a renegotiation
     *   only if the currently active cipher is no longer contained in the
     *   reconfigured/new cipher suite. Any other changes are not important
     *   because it's the servers choice to select a cipher from the ones the
     *   client supports. So as long as the current cipher is still in the new
     *   cipher suite we're happy. Because we can assume we would have
     *   selected it again even when other (better) ciphers exists now in the
     *   new cipher suite. This approach is fine because the user explicitly
     *   has to enable this via ``SSLOptions +OptRenegotiate''. So we do no
     *   implicit optimizations.
     */</comment>
    <if pos:line="87" pos:column="5">if <condition pos:line="87" pos:column="8">(<expr><name><name pos:line="87" pos:column="9">dc<pos:position pos:line="87" pos:column="11"/></name><operator pos:line="87" pos:column="11">-&gt;<pos:position pos:line="87" pos:column="16"/></operator><name pos:line="87" pos:column="13">szCipherSuite<pos:position pos:line="87" pos:column="26"/></name></name></expr>)<pos:position pos:line="87" pos:column="27"/></condition><then pos:line="87" pos:column="27"> <block pos:line="87" pos:column="28">{
        <comment type="block" pos:line="88" pos:column="9">/* remember old state */</comment>

        <if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">(<expr><name><name pos:line="90" pos:column="13">dc<pos:position pos:line="90" pos:column="15"/></name><operator pos:line="90" pos:column="15">-&gt;<pos:position pos:line="90" pos:column="20"/></operator><name pos:line="90" pos:column="17">nOptions<pos:position pos:line="90" pos:column="25"/></name></name> <operator pos:line="90" pos:column="26">&amp;<pos:position pos:line="90" pos:column="31"/></operator> <name pos:line="90" pos:column="28">SSL_OPT_OPTRENEGOTIATE<pos:position pos:line="90" pos:column="50"/></name></expr>)<pos:position pos:line="90" pos:column="51"/></condition><then pos:line="90" pos:column="51"> <block pos:line="90" pos:column="52">{
            <expr_stmt><expr><name pos:line="91" pos:column="13">cipher<pos:position pos:line="91" pos:column="19"/></name> <operator pos:line="91" pos:column="20">=<pos:position pos:line="91" pos:column="21"/></operator> <call><name pos:line="91" pos:column="22">SSL_get_current_cipher<pos:position pos:line="91" pos:column="44"/></name><argument_list pos:line="91" pos:column="44">(<argument><expr><name pos:line="91" pos:column="45">ssl<pos:position pos:line="91" pos:column="48"/></name></expr></argument>)<pos:position pos:line="91" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="92" pos:column="10"/></block></then>
        <else pos:line="93" pos:column="9">else <block pos:line="93" pos:column="14">{
            <expr_stmt><expr><name pos:line="94" pos:column="13">cipher_list_old<pos:position pos:line="94" pos:column="28"/></name> <operator pos:line="94" pos:column="29">=<pos:position pos:line="94" pos:column="30"/></operator> <operator pos:line="94" pos:column="31">(<pos:position pos:line="94" pos:column="32"/></operator><call><name pos:line="94" pos:column="32">STACK_OF<pos:position pos:line="94" pos:column="40"/></name><argument_list pos:line="94" pos:column="40">(<argument><expr><name pos:line="94" pos:column="41">SSL_CIPHER<pos:position pos:line="94" pos:column="51"/></name></expr></argument>)<pos:position pos:line="94" pos:column="52"/></argument_list></call> <operator pos:line="94" pos:column="53">*<pos:position pos:line="94" pos:column="54"/></operator><operator pos:line="94" pos:column="54">)<pos:position pos:line="94" pos:column="55"/></operator><call><name pos:line="94" pos:column="55">SSL_get_ciphers<pos:position pos:line="94" pos:column="70"/></name><argument_list pos:line="94" pos:column="70">(<argument><expr><name pos:line="94" pos:column="71">ssl<pos:position pos:line="94" pos:column="74"/></name></expr></argument>)<pos:position pos:line="94" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="76"/></expr_stmt>

            <if pos:line="96" pos:column="13">if <condition pos:line="96" pos:column="16">(<expr><name pos:line="96" pos:column="17">cipher_list_old<pos:position pos:line="96" pos:column="32"/></name></expr>)<pos:position pos:line="96" pos:column="33"/></condition><then pos:line="96" pos:column="33"> <block pos:line="96" pos:column="34">{
                <expr_stmt><expr><name pos:line="97" pos:column="17">cipher_list_old<pos:position pos:line="97" pos:column="32"/></name> <operator pos:line="97" pos:column="33">=<pos:position pos:line="97" pos:column="34"/></operator> <call><name pos:line="97" pos:column="35">sk_SSL_CIPHER_dup<pos:position pos:line="97" pos:column="52"/></name><argument_list pos:line="97" pos:column="52">(<argument><expr><name pos:line="97" pos:column="53">cipher_list_old<pos:position pos:line="97" pos:column="68"/></name></expr></argument>)<pos:position pos:line="97" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="70"/></expr_stmt>
            }<pos:position pos:line="98" pos:column="14"/></block></then></if>
        }<pos:position pos:line="99" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="101" pos:column="9">/* configure new state */</comment>
        <if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">(<expr><operator pos:line="102" pos:column="13">!<pos:position pos:line="102" pos:column="14"/></operator><call><name pos:line="102" pos:column="14">modssl_set_cipher_list<pos:position pos:line="102" pos:column="36"/></name><argument_list pos:line="102" pos:column="36">(<argument><expr><name pos:line="102" pos:column="37">ssl<pos:position pos:line="102" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="42">dc<pos:position pos:line="102" pos:column="44"/></name><operator pos:line="102" pos:column="44">-&gt;<pos:position pos:line="102" pos:column="49"/></operator><name pos:line="102" pos:column="46">szCipherSuite<pos:position pos:line="102" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="102" pos:column="61"/></condition><then pos:line="102" pos:column="61"> <block pos:line="102" pos:column="62">{
            <expr_stmt><expr><call><name pos:line="103" pos:column="13">ap_log_error<pos:position pos:line="103" pos:column="25"/></name><argument_list pos:line="103" pos:column="25">(<argument><expr><name pos:line="103" pos:column="26">APLOG_MARK<pos:position pos:line="103" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="38">APLOG_WARNING<pos:position pos:line="103" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="103" pos:column="53">0<pos:position pos:line="103" pos:column="54"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="104" pos:column="26">r<pos:position pos:line="104" pos:column="27"/></name><operator pos:line="104" pos:column="27">-&gt;<pos:position pos:line="104" pos:column="32"/></operator><name pos:line="104" pos:column="29">server<pos:position pos:line="104" pos:column="35"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="105" pos:column="26">"Unable to reconfigure (per-directory) "<pos:position pos:line="105" pos:column="66"/></literal>
                         <literal type="string" pos:line="106" pos:column="26">"permitted SSL ciphers"<pos:position pos:line="106" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="107" pos:column="13">ssl_log_ssl_error<pos:position pos:line="107" pos:column="30"/></name><argument_list pos:line="107" pos:column="30">(<argument><expr><name pos:line="107" pos:column="31">APLOG_MARK<pos:position pos:line="107" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="43">APLOG_ERR<pos:position pos:line="107" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="54">r<pos:position pos:line="107" pos:column="55"/></name><operator pos:line="107" pos:column="55">-&gt;<pos:position pos:line="107" pos:column="60"/></operator><name pos:line="107" pos:column="57">server<pos:position pos:line="107" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="65"/></expr_stmt>

            <if pos:line="109" pos:column="13">if <condition pos:line="109" pos:column="16">(<expr><name pos:line="109" pos:column="17">cipher_list_old<pos:position pos:line="109" pos:column="32"/></name></expr>)<pos:position pos:line="109" pos:column="33"/></condition><then pos:line="109" pos:column="33"> <block pos:line="109" pos:column="34">{
                <expr_stmt><expr><call><name pos:line="110" pos:column="17">sk_SSL_CIPHER_free<pos:position pos:line="110" pos:column="35"/></name><argument_list pos:line="110" pos:column="35">(<argument><expr><name pos:line="110" pos:column="36">cipher_list_old<pos:position pos:line="110" pos:column="51"/></name></expr></argument>)<pos:position pos:line="110" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="111" pos:column="14"/></block></then></if>

            <return pos:line="113" pos:column="13">return <expr><name pos:line="113" pos:column="20">HTTP_FORBIDDEN<pos:position pos:line="113" pos:column="34"/></name></expr>;<pos:position pos:line="113" pos:column="35"/></return>
        }<pos:position pos:line="114" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="116" pos:column="9">/* determine whether a renegotiation has to be forced */</comment>
        <expr_stmt><expr><name pos:line="117" pos:column="9">cipher_list<pos:position pos:line="117" pos:column="20"/></name> <operator pos:line="117" pos:column="21">=<pos:position pos:line="117" pos:column="22"/></operator> <operator pos:line="117" pos:column="23">(<pos:position pos:line="117" pos:column="24"/></operator><call><name pos:line="117" pos:column="24">STACK_OF<pos:position pos:line="117" pos:column="32"/></name><argument_list pos:line="117" pos:column="32">(<argument><expr><name pos:line="117" pos:column="33">SSL_CIPHER<pos:position pos:line="117" pos:column="43"/></name></expr></argument>)<pos:position pos:line="117" pos:column="44"/></argument_list></call> <operator pos:line="117" pos:column="45">*<pos:position pos:line="117" pos:column="46"/></operator><operator pos:line="117" pos:column="46">)<pos:position pos:line="117" pos:column="47"/></operator><call><name pos:line="117" pos:column="47">SSL_get_ciphers<pos:position pos:line="117" pos:column="62"/></name><argument_list pos:line="117" pos:column="62">(<argument><expr><name pos:line="117" pos:column="63">ssl<pos:position pos:line="117" pos:column="66"/></name></expr></argument>)<pos:position pos:line="117" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="68"/></expr_stmt>

        <if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><name><name pos:line="119" pos:column="13">dc<pos:position pos:line="119" pos:column="15"/></name><operator pos:line="119" pos:column="15">-&gt;<pos:position pos:line="119" pos:column="20"/></operator><name pos:line="119" pos:column="17">nOptions<pos:position pos:line="119" pos:column="25"/></name></name> <operator pos:line="119" pos:column="26">&amp;<pos:position pos:line="119" pos:column="31"/></operator> <name pos:line="119" pos:column="28">SSL_OPT_OPTRENEGOTIATE<pos:position pos:line="119" pos:column="50"/></name></expr>)<pos:position pos:line="119" pos:column="51"/></condition><then pos:line="119" pos:column="51"> <block pos:line="119" pos:column="52">{
            <comment type="block" pos:line="120" pos:column="13">/* optimized way */</comment>
            <if pos:line="121" pos:column="13">if <condition pos:line="121" pos:column="16">(<expr><operator pos:line="121" pos:column="17">(<pos:position pos:line="121" pos:column="18"/></operator><operator pos:line="121" pos:column="18">!<pos:position pos:line="121" pos:column="19"/></operator><name pos:line="121" pos:column="19">cipher<pos:position pos:line="121" pos:column="25"/></name> <operator pos:line="121" pos:column="26">&amp;&amp;<pos:position pos:line="121" pos:column="36"/></operator> <name pos:line="121" pos:column="29">cipher_list<pos:position pos:line="121" pos:column="40"/></name><operator pos:line="121" pos:column="40">)<pos:position pos:line="121" pos:column="41"/></operator> <operator pos:line="121" pos:column="42">||<pos:position pos:line="121" pos:column="44"/></operator>
                <operator pos:line="122" pos:column="17">(<pos:position pos:line="122" pos:column="18"/></operator><name pos:line="122" pos:column="18">cipher<pos:position pos:line="122" pos:column="24"/></name> <operator pos:line="122" pos:column="25">&amp;&amp;<pos:position pos:line="122" pos:column="35"/></operator> <operator pos:line="122" pos:column="28">!<pos:position pos:line="122" pos:column="29"/></operator><name pos:line="122" pos:column="29">cipher_list<pos:position pos:line="122" pos:column="40"/></name><operator pos:line="122" pos:column="40">)<pos:position pos:line="122" pos:column="41"/></operator></expr>)<pos:position pos:line="122" pos:column="42"/></condition><then pos:line="122" pos:column="42">
            <block pos:line="123" pos:column="13">{
                <expr_stmt><expr><name pos:line="124" pos:column="17">renegotiate<pos:position pos:line="124" pos:column="28"/></name> <operator pos:line="124" pos:column="29">=<pos:position pos:line="124" pos:column="30"/></operator> <name pos:line="124" pos:column="31">TRUE<pos:position pos:line="124" pos:column="35"/></name></expr>;<pos:position pos:line="124" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="125" pos:column="14"/></block></then>
            <elseif pos:line="126" pos:column="13">else <if pos:line="126" pos:column="18">if <condition pos:line="126" pos:column="21">(<expr><name pos:line="126" pos:column="22">cipher<pos:position pos:line="126" pos:column="28"/></name> <operator pos:line="126" pos:column="29">&amp;&amp;<pos:position pos:line="126" pos:column="39"/></operator> <name pos:line="126" pos:column="32">cipher_list<pos:position pos:line="126" pos:column="43"/></name> <operator pos:line="126" pos:column="44">&amp;&amp;<pos:position pos:line="126" pos:column="54"/></operator>
                     <operator pos:line="127" pos:column="22">(<pos:position pos:line="127" pos:column="23"/></operator><call><name pos:line="127" pos:column="23">sk_SSL_CIPHER_find<pos:position pos:line="127" pos:column="41"/></name><argument_list pos:line="127" pos:column="41">(<argument><expr><name pos:line="127" pos:column="42">cipher_list<pos:position pos:line="127" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="55">cipher<pos:position pos:line="127" pos:column="61"/></name></expr></argument>)<pos:position pos:line="127" pos:column="62"/></argument_list></call> <operator pos:line="127" pos:column="63">&lt;<pos:position pos:line="127" pos:column="67"/></operator> <literal type="number" pos:line="127" pos:column="65">0<pos:position pos:line="127" pos:column="66"/></literal><operator pos:line="127" pos:column="66">)<pos:position pos:line="127" pos:column="67"/></operator></expr>)<pos:position pos:line="127" pos:column="68"/></condition><then pos:line="127" pos:column="68">
            <block pos:line="128" pos:column="13">{
                <expr_stmt><expr><name pos:line="129" pos:column="17">renegotiate<pos:position pos:line="129" pos:column="28"/></name> <operator pos:line="129" pos:column="29">=<pos:position pos:line="129" pos:column="30"/></operator> <name pos:line="129" pos:column="31">TRUE<pos:position pos:line="129" pos:column="35"/></name></expr>;<pos:position pos:line="129" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="130" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="131" pos:column="10"/></block></then>
        <else pos:line="132" pos:column="9">else <block pos:line="132" pos:column="14">{
            <comment type="block" pos:line="133" pos:column="13">/* paranoid way */</comment>
            <if pos:line="134" pos:column="13">if <condition pos:line="134" pos:column="16">(<expr><operator pos:line="134" pos:column="17">(<pos:position pos:line="134" pos:column="18"/></operator><operator pos:line="134" pos:column="18">!<pos:position pos:line="134" pos:column="19"/></operator><name pos:line="134" pos:column="19">cipher_list_old<pos:position pos:line="134" pos:column="34"/></name> <operator pos:line="134" pos:column="35">&amp;&amp;<pos:position pos:line="134" pos:column="45"/></operator> <name pos:line="134" pos:column="38">cipher_list<pos:position pos:line="134" pos:column="49"/></name><operator pos:line="134" pos:column="49">)<pos:position pos:line="134" pos:column="50"/></operator> <operator pos:line="134" pos:column="51">||<pos:position pos:line="134" pos:column="53"/></operator>
                <operator pos:line="135" pos:column="17">(<pos:position pos:line="135" pos:column="18"/></operator><name pos:line="135" pos:column="18">cipher_list_old<pos:position pos:line="135" pos:column="33"/></name> <operator pos:line="135" pos:column="34">&amp;&amp;<pos:position pos:line="135" pos:column="44"/></operator> <operator pos:line="135" pos:column="37">!<pos:position pos:line="135" pos:column="38"/></operator><name pos:line="135" pos:column="38">cipher_list<pos:position pos:line="135" pos:column="49"/></name><operator pos:line="135" pos:column="49">)<pos:position pos:line="135" pos:column="50"/></operator></expr>)<pos:position pos:line="135" pos:column="51"/></condition><then pos:line="135" pos:column="51">
            <block pos:line="136" pos:column="13">{
                <expr_stmt><expr><name pos:line="137" pos:column="17">renegotiate<pos:position pos:line="137" pos:column="28"/></name> <operator pos:line="137" pos:column="29">=<pos:position pos:line="137" pos:column="30"/></operator> <name pos:line="137" pos:column="31">TRUE<pos:position pos:line="137" pos:column="35"/></name></expr>;<pos:position pos:line="137" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="138" pos:column="14"/></block></then>
            <elseif pos:line="139" pos:column="13">else <if pos:line="139" pos:column="18">if <condition pos:line="139" pos:column="21">(<expr><name pos:line="139" pos:column="22">cipher_list_old<pos:position pos:line="139" pos:column="37"/></name> <operator pos:line="139" pos:column="38">&amp;&amp;<pos:position pos:line="139" pos:column="48"/></operator> <name pos:line="139" pos:column="41">cipher_list<pos:position pos:line="139" pos:column="52"/></name></expr>)<pos:position pos:line="139" pos:column="53"/></condition><then pos:line="139" pos:column="53"> <block pos:line="139" pos:column="54">{
                <for pos:line="140" pos:column="17">for <control pos:line="140" pos:column="21">(<init><expr><name pos:line="140" pos:column="22">n<pos:position pos:line="140" pos:column="23"/></name> <operator pos:line="140" pos:column="24">=<pos:position pos:line="140" pos:column="25"/></operator> <literal type="number" pos:line="140" pos:column="26">0<pos:position pos:line="140" pos:column="27"/></literal></expr>;<pos:position pos:line="140" pos:column="28"/></init>
                     <condition><expr><operator pos:line="141" pos:column="22">!<pos:position pos:line="141" pos:column="23"/></operator><name pos:line="141" pos:column="23">renegotiate<pos:position pos:line="141" pos:column="34"/></name> <operator pos:line="141" pos:column="35">&amp;&amp;<pos:position pos:line="141" pos:column="45"/></operator> <operator pos:line="141" pos:column="38">(<pos:position pos:line="141" pos:column="39"/></operator><name pos:line="141" pos:column="39">n<pos:position pos:line="141" pos:column="40"/></name> <operator pos:line="141" pos:column="41">&lt;<pos:position pos:line="141" pos:column="45"/></operator> <call><name pos:line="141" pos:column="43">sk_SSL_CIPHER_num<pos:position pos:line="141" pos:column="60"/></name><argument_list pos:line="141" pos:column="60">(<argument><expr><name pos:line="141" pos:column="61">cipher_list<pos:position pos:line="141" pos:column="72"/></name></expr></argument>)<pos:position pos:line="141" pos:column="73"/></argument_list></call><operator pos:line="141" pos:column="73">)<pos:position pos:line="141" pos:column="74"/></operator></expr>;<pos:position pos:line="141" pos:column="75"/></condition>
                     <incr><expr><name pos:line="142" pos:column="22">n<pos:position pos:line="142" pos:column="23"/></name><operator pos:line="142" pos:column="23">++<pos:position pos:line="142" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="142" pos:column="26"/></control>
                <block pos:line="143" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="144" pos:column="21">SSL_CIPHER<pos:position pos:line="144" pos:column="31"/></name> <modifier pos:line="144" pos:column="32">*<pos:position pos:line="144" pos:column="33"/></modifier></type><name pos:line="144" pos:column="33">value<pos:position pos:line="144" pos:column="38"/></name> <init pos:line="144" pos:column="39">= <expr><call><name pos:line="144" pos:column="41">sk_SSL_CIPHER_value<pos:position pos:line="144" pos:column="60"/></name><argument_list pos:line="144" pos:column="60">(<argument><expr><name pos:line="144" pos:column="61">cipher_list<pos:position pos:line="144" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="74">n<pos:position pos:line="144" pos:column="75"/></name></expr></argument>)<pos:position pos:line="144" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="144" pos:column="77"/></decl_stmt>

                    <if pos:line="146" pos:column="21">if <condition pos:line="146" pos:column="24">(<expr><call><name pos:line="146" pos:column="25">sk_SSL_CIPHER_find<pos:position pos:line="146" pos:column="43"/></name><argument_list pos:line="146" pos:column="43">(<argument><expr><name pos:line="146" pos:column="44">cipher_list_old<pos:position pos:line="146" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="61">value<pos:position pos:line="146" pos:column="66"/></name></expr></argument>)<pos:position pos:line="146" pos:column="67"/></argument_list></call> <operator pos:line="146" pos:column="68">&lt;<pos:position pos:line="146" pos:column="72"/></operator> <literal type="number" pos:line="146" pos:column="70">0<pos:position pos:line="146" pos:column="71"/></literal></expr>)<pos:position pos:line="146" pos:column="72"/></condition><then pos:line="146" pos:column="72"> <block pos:line="146" pos:column="73">{
                        <expr_stmt><expr><name pos:line="147" pos:column="25">renegotiate<pos:position pos:line="147" pos:column="36"/></name> <operator pos:line="147" pos:column="37">=<pos:position pos:line="147" pos:column="38"/></operator> <name pos:line="147" pos:column="39">TRUE<pos:position pos:line="147" pos:column="43"/></name></expr>;<pos:position pos:line="147" pos:column="44"/></expr_stmt>
                    }<pos:position pos:line="148" pos:column="22"/></block></then></if>
                }<pos:position pos:line="149" pos:column="18"/></block></for>

                <for pos:line="151" pos:column="17">for <control pos:line="151" pos:column="21">(<init><expr><name pos:line="151" pos:column="22">n<pos:position pos:line="151" pos:column="23"/></name> <operator pos:line="151" pos:column="24">=<pos:position pos:line="151" pos:column="25"/></operator> <literal type="number" pos:line="151" pos:column="26">0<pos:position pos:line="151" pos:column="27"/></literal></expr>;<pos:position pos:line="151" pos:column="28"/></init>
                     <condition><expr><operator pos:line="152" pos:column="22">!<pos:position pos:line="152" pos:column="23"/></operator><name pos:line="152" pos:column="23">renegotiate<pos:position pos:line="152" pos:column="34"/></name> <operator pos:line="152" pos:column="35">&amp;&amp;<pos:position pos:line="152" pos:column="45"/></operator> <operator pos:line="152" pos:column="38">(<pos:position pos:line="152" pos:column="39"/></operator><name pos:line="152" pos:column="39">n<pos:position pos:line="152" pos:column="40"/></name> <operator pos:line="152" pos:column="41">&lt;<pos:position pos:line="152" pos:column="45"/></operator> <call><name pos:line="152" pos:column="43">sk_SSL_CIPHER_num<pos:position pos:line="152" pos:column="60"/></name><argument_list pos:line="152" pos:column="60">(<argument><expr><name pos:line="152" pos:column="61">cipher_list_old<pos:position pos:line="152" pos:column="76"/></name></expr></argument>)<pos:position pos:line="152" pos:column="77"/></argument_list></call><operator pos:line="152" pos:column="77">)<pos:position pos:line="152" pos:column="78"/></operator></expr>;<pos:position pos:line="152" pos:column="79"/></condition>
                     <incr><expr><name pos:line="153" pos:column="22">n<pos:position pos:line="153" pos:column="23"/></name><operator pos:line="153" pos:column="23">++<pos:position pos:line="153" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="153" pos:column="26"/></control>
                <block pos:line="154" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="155" pos:column="21">SSL_CIPHER<pos:position pos:line="155" pos:column="31"/></name> <modifier pos:line="155" pos:column="32">*<pos:position pos:line="155" pos:column="33"/></modifier></type><name pos:line="155" pos:column="33">value<pos:position pos:line="155" pos:column="38"/></name> <init pos:line="155" pos:column="39">= <expr><call><name pos:line="155" pos:column="41">sk_SSL_CIPHER_value<pos:position pos:line="155" pos:column="60"/></name><argument_list pos:line="155" pos:column="60">(<argument><expr><name pos:line="155" pos:column="61">cipher_list_old<pos:position pos:line="155" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="78">n<pos:position pos:line="155" pos:column="79"/></name></expr></argument>)<pos:position pos:line="155" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="155" pos:column="81"/></decl_stmt>

                    <if pos:line="157" pos:column="21">if <condition pos:line="157" pos:column="24">(<expr><call><name pos:line="157" pos:column="25">sk_SSL_CIPHER_find<pos:position pos:line="157" pos:column="43"/></name><argument_list pos:line="157" pos:column="43">(<argument><expr><name pos:line="157" pos:column="44">cipher_list<pos:position pos:line="157" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="57">value<pos:position pos:line="157" pos:column="62"/></name></expr></argument>)<pos:position pos:line="157" pos:column="63"/></argument_list></call> <operator pos:line="157" pos:column="64">&lt;<pos:position pos:line="157" pos:column="68"/></operator> <literal type="number" pos:line="157" pos:column="66">0<pos:position pos:line="157" pos:column="67"/></literal></expr>)<pos:position pos:line="157" pos:column="68"/></condition><then pos:line="157" pos:column="68"> <block pos:line="157" pos:column="69">{
                        <expr_stmt><expr><name pos:line="158" pos:column="25">renegotiate<pos:position pos:line="158" pos:column="36"/></name> <operator pos:line="158" pos:column="37">=<pos:position pos:line="158" pos:column="38"/></operator> <name pos:line="158" pos:column="39">TRUE<pos:position pos:line="158" pos:column="43"/></name></expr>;<pos:position pos:line="158" pos:column="44"/></expr_stmt>
                    }<pos:position pos:line="159" pos:column="22"/></block></then></if>
                }<pos:position pos:line="160" pos:column="18"/></block></for>
            }<pos:position pos:line="161" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="162" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="164" pos:column="9">/* cleanup */</comment>
        <if pos:line="165" pos:column="9">if <condition pos:line="165" pos:column="12">(<expr><name pos:line="165" pos:column="13">cipher_list_old<pos:position pos:line="165" pos:column="28"/></name></expr>)<pos:position pos:line="165" pos:column="29"/></condition><then pos:line="165" pos:column="29"> <block pos:line="165" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="166" pos:column="13">sk_SSL_CIPHER_free<pos:position pos:line="166" pos:column="31"/></name><argument_list pos:line="166" pos:column="31">(<argument><expr><name pos:line="166" pos:column="32">cipher_list_old<pos:position pos:line="166" pos:column="47"/></name></expr></argument>)<pos:position pos:line="166" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="167" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="169" pos:column="9">/* tracing */</comment>
        <if pos:line="170" pos:column="9">if <condition pos:line="170" pos:column="12">(<expr><name pos:line="170" pos:column="13">renegotiate<pos:position pos:line="170" pos:column="24"/></name></expr>)<pos:position pos:line="170" pos:column="25"/></condition><then pos:line="170" pos:column="25"> <block pos:line="170" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="171" pos:column="13">ap_log_error<pos:position pos:line="171" pos:column="25"/></name><argument_list pos:line="171" pos:column="25">(<argument><expr><name pos:line="171" pos:column="26">APLOG_MARK<pos:position pos:line="171" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="38">APLOG_DEBUG<pos:position pos:line="171" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="171" pos:column="51">0<pos:position pos:line="171" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="171" pos:column="54">r<pos:position pos:line="171" pos:column="55"/></name><operator pos:line="171" pos:column="55">-&gt;<pos:position pos:line="171" pos:column="60"/></operator><name pos:line="171" pos:column="57">server<pos:position pos:line="171" pos:column="63"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="172" pos:column="26">"Reconfigured cipher suite will force renegotiation"<pos:position pos:line="172" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="80"/></expr_stmt>
        }<pos:position pos:line="173" pos:column="10"/></block></then></if>
    }<pos:position pos:line="174" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="176" pos:column="5">/*
     * override of SSLVerifyDepth
     *
     * The depth checks are handled by us manually inside the verify callback
     * function and not by OpenSSL internally (and our function is aware of
     * both the per-server and per-directory contexts). So we cannot ask
     * OpenSSL about the currently verify depth. Instead we remember it in our
     * ap_ctx attached to the SSL* of OpenSSL.  We've to force the
     * renegotiation if the reconfigured/new verify depth is less than the
     * currently active/remembered verify depth (because this means more
     * restriction on the certificate chain).
     */</comment>
    <if pos:line="188" pos:column="5">if <condition pos:line="188" pos:column="8">(<expr><name><name pos:line="188" pos:column="9">dc<pos:position pos:line="188" pos:column="11"/></name><operator pos:line="188" pos:column="11">-&gt;<pos:position pos:line="188" pos:column="16"/></operator><name pos:line="188" pos:column="13">nVerifyDepth<pos:position pos:line="188" pos:column="25"/></name></name> <operator pos:line="188" pos:column="26">!=<pos:position pos:line="188" pos:column="28"/></operator> <name pos:line="188" pos:column="29">UNSET<pos:position pos:line="188" pos:column="34"/></name></expr>)<pos:position pos:line="188" pos:column="35"/></condition><then pos:line="188" pos:column="35"> <block pos:line="188" pos:column="36">{
        <comment type="block" pos:line="189" pos:column="9">/* XXX: doesnt look like sslconn-&gt;verify_depth is actually used */</comment>
        <if pos:line="190" pos:column="9">if <condition pos:line="190" pos:column="12">(<expr><operator pos:line="190" pos:column="13">!<pos:position pos:line="190" pos:column="14"/></operator><operator pos:line="190" pos:column="14">(<pos:position pos:line="190" pos:column="15"/></operator><name pos:line="190" pos:column="15">n<pos:position pos:line="190" pos:column="16"/></name> <operator pos:line="190" pos:column="17">=<pos:position pos:line="190" pos:column="18"/></operator> <name><name pos:line="190" pos:column="19">sslconn<pos:position pos:line="190" pos:column="26"/></name><operator pos:line="190" pos:column="26">-&gt;<pos:position pos:line="190" pos:column="31"/></operator><name pos:line="190" pos:column="28">verify_depth<pos:position pos:line="190" pos:column="40"/></name></name><operator pos:line="190" pos:column="40">)<pos:position pos:line="190" pos:column="41"/></operator></expr>)<pos:position pos:line="190" pos:column="42"/></condition><then pos:line="190" pos:column="42"> <block pos:line="190" pos:column="43">{
            <expr_stmt><expr><name><name pos:line="191" pos:column="13">sslconn<pos:position pos:line="191" pos:column="20"/></name><operator pos:line="191" pos:column="20">-&gt;<pos:position pos:line="191" pos:column="25"/></operator><name pos:line="191" pos:column="22">verify_depth<pos:position pos:line="191" pos:column="34"/></name></name> <operator pos:line="191" pos:column="35">=<pos:position pos:line="191" pos:column="36"/></operator> <name pos:line="191" pos:column="37">n<pos:position pos:line="191" pos:column="38"/></name> <operator pos:line="191" pos:column="39">=<pos:position pos:line="191" pos:column="40"/></operator> <name><name pos:line="191" pos:column="41">sc<pos:position pos:line="191" pos:column="43"/></name><operator pos:line="191" pos:column="43">-&gt;<pos:position pos:line="191" pos:column="48"/></operator><name pos:line="191" pos:column="45">server<pos:position pos:line="191" pos:column="51"/></name><operator pos:line="191" pos:column="51">-&gt;<pos:position pos:line="191" pos:column="56"/></operator><name pos:line="191" pos:column="53">auth<pos:position pos:line="191" pos:column="57"/></name><operator pos:line="191" pos:column="57">.<pos:position pos:line="191" pos:column="58"/></operator><name pos:line="191" pos:column="58">verify_depth<pos:position pos:line="191" pos:column="70"/></name></name></expr>;<pos:position pos:line="191" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="192" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="194" pos:column="9">/* determine whether a renegotiation has to be forced */</comment>
        <if pos:line="195" pos:column="9">if <condition pos:line="195" pos:column="12">(<expr><name><name pos:line="195" pos:column="13">dc<pos:position pos:line="195" pos:column="15"/></name><operator pos:line="195" pos:column="15">-&gt;<pos:position pos:line="195" pos:column="20"/></operator><name pos:line="195" pos:column="17">nVerifyDepth<pos:position pos:line="195" pos:column="29"/></name></name> <operator pos:line="195" pos:column="30">&lt;<pos:position pos:line="195" pos:column="34"/></operator> <name pos:line="195" pos:column="32">n<pos:position pos:line="195" pos:column="33"/></name></expr>)<pos:position pos:line="195" pos:column="34"/></condition><then pos:line="195" pos:column="34"> <block pos:line="195" pos:column="35">{
            <expr_stmt><expr><name pos:line="196" pos:column="13">renegotiate<pos:position pos:line="196" pos:column="24"/></name> <operator pos:line="196" pos:column="25">=<pos:position pos:line="196" pos:column="26"/></operator> <name pos:line="196" pos:column="27">TRUE<pos:position pos:line="196" pos:column="31"/></name></expr>;<pos:position pos:line="196" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="197" pos:column="13">ap_log_error<pos:position pos:line="197" pos:column="25"/></name><argument_list pos:line="197" pos:column="25">(<argument><expr><name pos:line="197" pos:column="26">APLOG_MARK<pos:position pos:line="197" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="38">APLOG_DEBUG<pos:position pos:line="197" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="197" pos:column="51">0<pos:position pos:line="197" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="197" pos:column="54">r<pos:position pos:line="197" pos:column="55"/></name><operator pos:line="197" pos:column="55">-&gt;<pos:position pos:line="197" pos:column="60"/></operator><name pos:line="197" pos:column="57">server<pos:position pos:line="197" pos:column="63"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="198" pos:column="26">"Reduced client verification depth will force "<pos:position pos:line="198" pos:column="73"/></literal>
                         <literal type="string" pos:line="199" pos:column="26">"renegotiation"<pos:position pos:line="199" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="200" pos:column="10"/></block></then></if>
    }<pos:position pos:line="201" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="203" pos:column="5">/*
     * override of SSLVerifyClient
     *
     * We force a renegotiation if the reconfigured/new verify type is
     * stronger than the currently active verify type. 
     *
     * The order is: none &lt;&lt; optional_no_ca &lt;&lt; optional &lt;&lt; require
     *
     * Additionally the following optimization is possible here: When the
     * currently active verify type is "none" but a client certificate is
     * already known/present, it's enough to manually force a client
     * verification but at least skip the I/O-intensive renegotation
     * handshake.
     */</comment>
    <if pos:line="217" pos:column="5">if <condition pos:line="217" pos:column="8">(<expr><name><name pos:line="217" pos:column="9">dc<pos:position pos:line="217" pos:column="11"/></name><operator pos:line="217" pos:column="11">-&gt;<pos:position pos:line="217" pos:column="16"/></operator><name pos:line="217" pos:column="13">nVerifyClient<pos:position pos:line="217" pos:column="26"/></name></name> <operator pos:line="217" pos:column="27">!=<pos:position pos:line="217" pos:column="29"/></operator> <name pos:line="217" pos:column="30">SSL_CVERIFY_UNSET<pos:position pos:line="217" pos:column="47"/></name></expr>)<pos:position pos:line="217" pos:column="48"/></condition><then pos:line="217" pos:column="48"> <block pos:line="217" pos:column="49">{
        <comment type="block" pos:line="218" pos:column="9">/* remember old state */</comment>
        <expr_stmt><expr><name pos:line="219" pos:column="9">verify_old<pos:position pos:line="219" pos:column="19"/></name> <operator pos:line="219" pos:column="20">=<pos:position pos:line="219" pos:column="21"/></operator> <call><name pos:line="219" pos:column="22">SSL_get_verify_mode<pos:position pos:line="219" pos:column="41"/></name><argument_list pos:line="219" pos:column="41">(<argument><expr><name pos:line="219" pos:column="42">ssl<pos:position pos:line="219" pos:column="45"/></name></expr></argument>)<pos:position pos:line="219" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="47"/></expr_stmt>
        <comment type="block" pos:line="220" pos:column="9">/* configure new state */</comment>
        <expr_stmt><expr><name pos:line="221" pos:column="9">verify<pos:position pos:line="221" pos:column="15"/></name> <operator pos:line="221" pos:column="16">=<pos:position pos:line="221" pos:column="17"/></operator> <name pos:line="221" pos:column="18">SSL_VERIFY_NONE<pos:position pos:line="221" pos:column="33"/></name></expr>;<pos:position pos:line="221" pos:column="34"/></expr_stmt>

        <if pos:line="223" pos:column="9">if <condition pos:line="223" pos:column="12">(<expr><name><name pos:line="223" pos:column="13">dc<pos:position pos:line="223" pos:column="15"/></name><operator pos:line="223" pos:column="15">-&gt;<pos:position pos:line="223" pos:column="20"/></operator><name pos:line="223" pos:column="17">nVerifyClient<pos:position pos:line="223" pos:column="30"/></name></name> <operator pos:line="223" pos:column="31">==<pos:position pos:line="223" pos:column="33"/></operator> <name pos:line="223" pos:column="34">SSL_CVERIFY_REQUIRE<pos:position pos:line="223" pos:column="53"/></name></expr>)<pos:position pos:line="223" pos:column="54"/></condition><then pos:line="223" pos:column="54"> <block pos:line="223" pos:column="55">{
            <expr_stmt><expr><name pos:line="224" pos:column="13">verify<pos:position pos:line="224" pos:column="19"/></name> <operator pos:line="224" pos:column="20">|=<pos:position pos:line="224" pos:column="22"/></operator> <name pos:line="224" pos:column="23">SSL_VERIFY_PEER_STRICT<pos:position pos:line="224" pos:column="45"/></name></expr>;<pos:position pos:line="224" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="225" pos:column="10"/></block></then></if>

        <if pos:line="227" pos:column="9">if <condition pos:line="227" pos:column="12">(<expr><operator pos:line="227" pos:column="13">(<pos:position pos:line="227" pos:column="14"/></operator><name><name pos:line="227" pos:column="14">dc<pos:position pos:line="227" pos:column="16"/></name><operator pos:line="227" pos:column="16">-&gt;<pos:position pos:line="227" pos:column="21"/></operator><name pos:line="227" pos:column="18">nVerifyClient<pos:position pos:line="227" pos:column="31"/></name></name> <operator pos:line="227" pos:column="32">==<pos:position pos:line="227" pos:column="34"/></operator> <name pos:line="227" pos:column="35">SSL_CVERIFY_OPTIONAL<pos:position pos:line="227" pos:column="55"/></name><operator pos:line="227" pos:column="55">)<pos:position pos:line="227" pos:column="56"/></operator> <operator pos:line="227" pos:column="57">||<pos:position pos:line="227" pos:column="59"/></operator>
            <operator pos:line="228" pos:column="13">(<pos:position pos:line="228" pos:column="14"/></operator><name><name pos:line="228" pos:column="14">dc<pos:position pos:line="228" pos:column="16"/></name><operator pos:line="228" pos:column="16">-&gt;<pos:position pos:line="228" pos:column="21"/></operator><name pos:line="228" pos:column="18">nVerifyClient<pos:position pos:line="228" pos:column="31"/></name></name> <operator pos:line="228" pos:column="32">==<pos:position pos:line="228" pos:column="34"/></operator> <name pos:line="228" pos:column="35">SSL_CVERIFY_OPTIONAL_NO_CA<pos:position pos:line="228" pos:column="61"/></name><operator pos:line="228" pos:column="61">)<pos:position pos:line="228" pos:column="62"/></operator></expr>)<pos:position pos:line="228" pos:column="63"/></condition><then pos:line="228" pos:column="63">
        <block pos:line="229" pos:column="9">{
            <expr_stmt><expr><name pos:line="230" pos:column="13">verify<pos:position pos:line="230" pos:column="19"/></name> <operator pos:line="230" pos:column="20">|=<pos:position pos:line="230" pos:column="22"/></operator> <name pos:line="230" pos:column="23">SSL_VERIFY_PEER<pos:position pos:line="230" pos:column="38"/></name></expr>;<pos:position pos:line="230" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="231" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="233" pos:column="9">modssl_set_verify<pos:position pos:line="233" pos:column="26"/></name><argument_list pos:line="233" pos:column="26">(<argument><expr><name pos:line="233" pos:column="27">ssl<pos:position pos:line="233" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="233" pos:column="32">verify<pos:position pos:line="233" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="233" pos:column="40">ssl_callback_SSLVerify<pos:position pos:line="233" pos:column="62"/></name></expr></argument>)<pos:position pos:line="233" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="234" pos:column="9">SSL_set_verify_result<pos:position pos:line="234" pos:column="30"/></name><argument_list pos:line="234" pos:column="30">(<argument><expr><name pos:line="234" pos:column="31">ssl<pos:position pos:line="234" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="36">X509_V_OK<pos:position pos:line="234" pos:column="45"/></name></expr></argument>)<pos:position pos:line="234" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="47"/></expr_stmt>

        <comment type="block" pos:line="236" pos:column="9">/* determine whether we've to force a renegotiation */</comment>
        <if pos:line="237" pos:column="9">if <condition pos:line="237" pos:column="12">(<expr><operator pos:line="237" pos:column="13">!<pos:position pos:line="237" pos:column="14"/></operator><name pos:line="237" pos:column="14">renegotiate<pos:position pos:line="237" pos:column="25"/></name> <operator pos:line="237" pos:column="26">&amp;&amp;<pos:position pos:line="237" pos:column="36"/></operator> <name pos:line="237" pos:column="29">verify<pos:position pos:line="237" pos:column="35"/></name> <operator pos:line="237" pos:column="36">!=<pos:position pos:line="237" pos:column="38"/></operator> <name pos:line="237" pos:column="39">verify_old<pos:position pos:line="237" pos:column="49"/></name></expr>)<pos:position pos:line="237" pos:column="50"/></condition><then pos:line="237" pos:column="50"> <block pos:line="237" pos:column="51">{
            <if pos:line="238" pos:column="13">if <condition pos:line="238" pos:column="16">(<expr><operator pos:line="238" pos:column="17">(<pos:position pos:line="238" pos:column="18"/></operator><operator pos:line="238" pos:column="18">(<pos:position pos:line="238" pos:column="19"/></operator><name pos:line="238" pos:column="19">verify_old<pos:position pos:line="238" pos:column="29"/></name> <operator pos:line="238" pos:column="30">==<pos:position pos:line="238" pos:column="32"/></operator> <name pos:line="238" pos:column="33">SSL_VERIFY_NONE<pos:position pos:line="238" pos:column="48"/></name><operator pos:line="238" pos:column="48">)<pos:position pos:line="238" pos:column="49"/></operator> <operator pos:line="238" pos:column="50">&amp;&amp;<pos:position pos:line="238" pos:column="60"/></operator>
                 <operator pos:line="239" pos:column="18">(<pos:position pos:line="239" pos:column="19"/></operator><name pos:line="239" pos:column="19">verify<pos:position pos:line="239" pos:column="25"/></name>     <operator pos:line="239" pos:column="30">!=<pos:position pos:line="239" pos:column="32"/></operator> <name pos:line="239" pos:column="33">SSL_VERIFY_NONE<pos:position pos:line="239" pos:column="48"/></name><operator pos:line="239" pos:column="48">)<pos:position pos:line="239" pos:column="49"/></operator><operator pos:line="239" pos:column="49">)<pos:position pos:line="239" pos:column="50"/></operator> <operator pos:line="239" pos:column="51">||<pos:position pos:line="239" pos:column="53"/></operator>

                <operator pos:line="241" pos:column="17">(<pos:position pos:line="241" pos:column="18"/></operator><operator pos:line="241" pos:column="18">!<pos:position pos:line="241" pos:column="19"/></operator><operator pos:line="241" pos:column="19">(<pos:position pos:line="241" pos:column="20"/></operator><name pos:line="241" pos:column="20">verify_old<pos:position pos:line="241" pos:column="30"/></name> <operator pos:line="241" pos:column="31">&amp;<pos:position pos:line="241" pos:column="36"/></operator> <name pos:line="241" pos:column="33">SSL_VERIFY_PEER<pos:position pos:line="241" pos:column="48"/></name><operator pos:line="241" pos:column="48">)<pos:position pos:line="241" pos:column="49"/></operator> <operator pos:line="241" pos:column="50">&amp;&amp;<pos:position pos:line="241" pos:column="60"/></operator>
                  <operator pos:line="242" pos:column="19">(<pos:position pos:line="242" pos:column="20"/></operator><name pos:line="242" pos:column="20">verify<pos:position pos:line="242" pos:column="26"/></name>     <operator pos:line="242" pos:column="31">&amp;<pos:position pos:line="242" pos:column="36"/></operator> <name pos:line="242" pos:column="33">SSL_VERIFY_PEER<pos:position pos:line="242" pos:column="48"/></name><operator pos:line="242" pos:column="48">)<pos:position pos:line="242" pos:column="49"/></operator><operator pos:line="242" pos:column="49">)<pos:position pos:line="242" pos:column="50"/></operator> <operator pos:line="242" pos:column="51">||<pos:position pos:line="242" pos:column="53"/></operator>

                <operator pos:line="244" pos:column="17">(<pos:position pos:line="244" pos:column="18"/></operator><operator pos:line="244" pos:column="18">!<pos:position pos:line="244" pos:column="19"/></operator><operator pos:line="244" pos:column="19">(<pos:position pos:line="244" pos:column="20"/></operator><name pos:line="244" pos:column="20">verify_old<pos:position pos:line="244" pos:column="30"/></name> <operator pos:line="244" pos:column="31">&amp;<pos:position pos:line="244" pos:column="36"/></operator> <name pos:line="244" pos:column="33">SSL_VERIFY_PEER_STRICT<pos:position pos:line="244" pos:column="55"/></name><operator pos:line="244" pos:column="55">)<pos:position pos:line="244" pos:column="56"/></operator> <operator pos:line="244" pos:column="57">&amp;&amp;<pos:position pos:line="244" pos:column="67"/></operator>
                  <operator pos:line="245" pos:column="19">(<pos:position pos:line="245" pos:column="20"/></operator><name pos:line="245" pos:column="20">verify<pos:position pos:line="245" pos:column="26"/></name>     <operator pos:line="245" pos:column="31">&amp;<pos:position pos:line="245" pos:column="36"/></operator> <name pos:line="245" pos:column="33">SSL_VERIFY_PEER_STRICT<pos:position pos:line="245" pos:column="55"/></name><operator pos:line="245" pos:column="55">)<pos:position pos:line="245" pos:column="56"/></operator><operator pos:line="245" pos:column="56">)<pos:position pos:line="245" pos:column="57"/></operator></expr>)<pos:position pos:line="245" pos:column="58"/></condition><then pos:line="245" pos:column="58">
            <block pos:line="246" pos:column="13">{
                <expr_stmt><expr><name pos:line="247" pos:column="17">renegotiate<pos:position pos:line="247" pos:column="28"/></name> <operator pos:line="247" pos:column="29">=<pos:position pos:line="247" pos:column="30"/></operator> <name pos:line="247" pos:column="31">TRUE<pos:position pos:line="247" pos:column="35"/></name></expr>;<pos:position pos:line="247" pos:column="36"/></expr_stmt>
                <comment type="block" pos:line="248" pos:column="17">/* optimization */</comment>

                <if pos:line="250" pos:column="17">if <condition pos:line="250" pos:column="20">(<expr><operator pos:line="250" pos:column="21">(<pos:position pos:line="250" pos:column="22"/></operator><name><name pos:line="250" pos:column="22">dc<pos:position pos:line="250" pos:column="24"/></name><operator pos:line="250" pos:column="24">-&gt;<pos:position pos:line="250" pos:column="29"/></operator><name pos:line="250" pos:column="26">nOptions<pos:position pos:line="250" pos:column="34"/></name></name> <operator pos:line="250" pos:column="35">&amp;<pos:position pos:line="250" pos:column="40"/></operator> <name pos:line="250" pos:column="37">SSL_OPT_OPTRENEGOTIATE<pos:position pos:line="250" pos:column="59"/></name><operator pos:line="250" pos:column="59">)<pos:position pos:line="250" pos:column="60"/></operator> <operator pos:line="250" pos:column="61">&amp;&amp;<pos:position pos:line="250" pos:column="71"/></operator>
                    <operator pos:line="251" pos:column="21">(<pos:position pos:line="251" pos:column="22"/></operator><name pos:line="251" pos:column="22">verify_old<pos:position pos:line="251" pos:column="32"/></name> <operator pos:line="251" pos:column="33">==<pos:position pos:line="251" pos:column="35"/></operator> <name pos:line="251" pos:column="36">SSL_VERIFY_NONE<pos:position pos:line="251" pos:column="51"/></name><operator pos:line="251" pos:column="51">)<pos:position pos:line="251" pos:column="52"/></operator> <operator pos:line="251" pos:column="53">&amp;&amp;<pos:position pos:line="251" pos:column="63"/></operator>
                    <operator pos:line="252" pos:column="21">(<pos:position pos:line="252" pos:column="22"/></operator><operator pos:line="252" pos:column="22">(<pos:position pos:line="252" pos:column="23"/></operator><name pos:line="252" pos:column="23">peercert<pos:position pos:line="252" pos:column="31"/></name> <operator pos:line="252" pos:column="32">=<pos:position pos:line="252" pos:column="33"/></operator> <call><name pos:line="252" pos:column="34">SSL_get_peer_certificate<pos:position pos:line="252" pos:column="58"/></name><argument_list pos:line="252" pos:column="58">(<argument><expr><name pos:line="252" pos:column="59">ssl<pos:position pos:line="252" pos:column="62"/></name></expr></argument>)<pos:position pos:line="252" pos:column="63"/></argument_list></call><operator pos:line="252" pos:column="63">)<pos:position pos:line="252" pos:column="64"/></operator> <operator pos:line="252" pos:column="65">!=<pos:position pos:line="252" pos:column="67"/></operator> <name pos:line="252" pos:column="68">NULL<pos:position pos:line="252" pos:column="72"/></name><operator pos:line="252" pos:column="72">)<pos:position pos:line="252" pos:column="73"/></operator></expr>)<pos:position pos:line="252" pos:column="74"/></condition><then pos:line="252" pos:column="74">
                <block pos:line="253" pos:column="17">{
                    <expr_stmt><expr><name pos:line="254" pos:column="21">renegotiate_quick<pos:position pos:line="254" pos:column="38"/></name> <operator pos:line="254" pos:column="39">=<pos:position pos:line="254" pos:column="40"/></operator> <name pos:line="254" pos:column="41">TRUE<pos:position pos:line="254" pos:column="45"/></name></expr>;<pos:position pos:line="254" pos:column="46"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="255" pos:column="21">X509_free<pos:position pos:line="255" pos:column="30"/></name><argument_list pos:line="255" pos:column="30">(<argument><expr><name pos:line="255" pos:column="31">peercert<pos:position pos:line="255" pos:column="39"/></name></expr></argument>)<pos:position pos:line="255" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="256" pos:column="18"/></block></then></if>

                <expr_stmt><expr><call><name pos:line="258" pos:column="17">ap_log_error<pos:position pos:line="258" pos:column="29"/></name><argument_list pos:line="258" pos:column="29">(<argument><expr><name pos:line="258" pos:column="30">APLOG_MARK<pos:position pos:line="258" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="258" pos:column="42">APLOG_DEBUG<pos:position pos:line="258" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="258" pos:column="55">0<pos:position pos:line="258" pos:column="56"/></literal></expr></argument>,
                             <argument><expr><name><name pos:line="259" pos:column="30">r<pos:position pos:line="259" pos:column="31"/></name><operator pos:line="259" pos:column="31">-&gt;<pos:position pos:line="259" pos:column="36"/></operator><name pos:line="259" pos:column="33">server<pos:position pos:line="259" pos:column="39"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="260" pos:column="30">"Changed client verification type will force "<pos:position pos:line="260" pos:column="76"/></literal>
                             <literal type="string" pos:line="261" pos:column="30">"%srenegotiation"<pos:position pos:line="261" pos:column="47"/></literal></expr></argument>,
                             <argument><expr><ternary><condition><expr><name pos:line="262" pos:column="30">renegotiate_quick<pos:position pos:line="262" pos:column="47"/></name></expr> ?<pos:position pos:line="262" pos:column="49"/></condition><then pos:line="262" pos:column="49"> <expr><literal type="string" pos:line="262" pos:column="50">"quick "<pos:position pos:line="262" pos:column="58"/></literal></expr> <pos:position pos:line="262" pos:column="59"/></then><else pos:line="262" pos:column="59">: <expr><literal type="string" pos:line="262" pos:column="61">""<pos:position pos:line="262" pos:column="63"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="262" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="65"/></expr_stmt>
             }<pos:position pos:line="263" pos:column="15"/></block></then></if>
        }<pos:position pos:line="264" pos:column="10"/></block></then></if>
    }<pos:position pos:line="265" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="267" pos:column="5">/*
     * override SSLCACertificateFile &amp; SSLCACertificatePath
     * This is only enabled if the SSL_set_cert_store() function
     * is available in the ssl library.  the 1.x based mod_ssl
     * used SSL_CTX_set_cert_store which is not thread safe.
     */</comment>

<cpp:ifdef pos:line="274" pos:column="1">#<cpp:directive pos:line="274" pos:column="2">ifdef<pos:position pos:line="274" pos:column="7"/></cpp:directive> <name pos:line="274" pos:column="8">HAVE_SSL_SET_CERT_STORE<pos:position pos:line="274" pos:column="31"/></name></cpp:ifdef>
    <comment type="block" pos:line="275" pos:column="5">/*
     * check if per-dir and per-server config field are not the same.
     * if f is defined in per-dir and not defined in per-server
     * or f is defined in both but not the equal ...
     */</comment>
<cpp:define pos:line="280" pos:column="1">#<cpp:directive pos:line="280" pos:column="2">define<pos:position pos:line="280" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="280" pos:column="9">MODSSL_CFG_NE<pos:position pos:line="280" pos:column="22"/></name><parameter_list pos:line="280" pos:column="22">(<parameter><type><name pos:line="280" pos:column="23">f<pos:position pos:line="280" pos:column="24"/></name></type></parameter>)<pos:position pos:line="280" pos:column="25"/></parameter_list></cpp:macro> \
     <cpp:value pos:line="281" pos:column="6">(dc-&gt;f &amp;&amp; (!sc-&gt;f || (sc-&gt;f &amp;&amp; strNE(dc-&gt;f, sc-&gt;f))))<pos:position pos:line="281" pos:column="59"/></cpp:value></cpp:define>

<cpp:define pos:line="283" pos:column="1">#<cpp:directive pos:line="283" pos:column="2">define<pos:position pos:line="283" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="283" pos:column="9">MODSSL_CFG_CA<pos:position pos:line="283" pos:column="22"/></name><parameter_list pos:line="283" pos:column="22">(<parameter><type><name pos:line="283" pos:column="23">f<pos:position pos:line="283" pos:column="24"/></name></type></parameter>)<pos:position pos:line="283" pos:column="25"/></parameter_list></cpp:macro> \
     <cpp:value pos:line="284" pos:column="6">(dc-&gt;f ? dc-&gt;f : sc-&gt;f)<pos:position pos:line="284" pos:column="29"/></cpp:value></cpp:define>

    <if pos:line="286" pos:column="5">if <condition pos:line="286" pos:column="8">(<expr><call><name pos:line="286" pos:column="9">MODSSL_CFG_NE<pos:position pos:line="286" pos:column="22"/></name><argument_list pos:line="286" pos:column="22">(<argument><expr><name pos:line="286" pos:column="23">szCACertificateFile<pos:position pos:line="286" pos:column="42"/></name></expr></argument>)<pos:position pos:line="286" pos:column="43"/></argument_list></call> <operator pos:line="286" pos:column="44">||<pos:position pos:line="286" pos:column="46"/></operator>
        <call><name pos:line="287" pos:column="9">MODSSL_CFG_NE<pos:position pos:line="287" pos:column="22"/></name><argument_list pos:line="287" pos:column="22">(<argument><expr><name pos:line="287" pos:column="23">szCACertificatePath<pos:position pos:line="287" pos:column="42"/></name></expr></argument>)<pos:position pos:line="287" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="287" pos:column="44"/></condition><then pos:line="287" pos:column="44">
    <block pos:line="288" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="289" pos:column="9">STACK_OF<pos:position pos:line="289" pos:column="17"/></name><argument_list pos:line="289" pos:column="17">(<argument><expr><name pos:line="289" pos:column="18">X509_NAME<pos:position pos:line="289" pos:column="27"/></name></expr></argument>)<pos:position pos:line="289" pos:column="28"/></argument_list></call> <operator pos:line="289" pos:column="29">*<pos:position pos:line="289" pos:column="30"/></operator><name pos:line="289" pos:column="30">ca_list<pos:position pos:line="289" pos:column="37"/></name></expr>;<pos:position pos:line="289" pos:column="38"/></expr_stmt>
        <decl_stmt><decl><type><specifier pos:line="290" pos:column="9">const<pos:position pos:line="290" pos:column="14"/></specifier> <name pos:line="290" pos:column="15">char<pos:position pos:line="290" pos:column="19"/></name> <modifier pos:line="290" pos:column="20">*<pos:position pos:line="290" pos:column="21"/></modifier></type><name pos:line="290" pos:column="21">ca_file<pos:position pos:line="290" pos:column="28"/></name> <init pos:line="290" pos:column="29">= <expr><call><name pos:line="290" pos:column="31">MODSSL_CFG_CA<pos:position pos:line="290" pos:column="44"/></name><argument_list pos:line="290" pos:column="44">(<argument><expr><name pos:line="290" pos:column="45">szCACertificateFile<pos:position pos:line="290" pos:column="64"/></name></expr></argument>)<pos:position pos:line="290" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="290" pos:column="66"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="291" pos:column="9">const<pos:position pos:line="291" pos:column="14"/></specifier> <name pos:line="291" pos:column="15">char<pos:position pos:line="291" pos:column="19"/></name> <modifier pos:line="291" pos:column="20">*<pos:position pos:line="291" pos:column="21"/></modifier></type><name pos:line="291" pos:column="21">ca_path<pos:position pos:line="291" pos:column="28"/></name> <init pos:line="291" pos:column="29">= <expr><call><name pos:line="291" pos:column="31">MODSSL_CFG_CA<pos:position pos:line="291" pos:column="44"/></name><argument_list pos:line="291" pos:column="44">(<argument><expr><name pos:line="291" pos:column="45">szCACertificatePath<pos:position pos:line="291" pos:column="64"/></name></expr></argument>)<pos:position pos:line="291" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="291" pos:column="66"/></decl_stmt>

        <expr_stmt><expr><name pos:line="293" pos:column="9">cert_store<pos:position pos:line="293" pos:column="19"/></name> <operator pos:line="293" pos:column="20">=<pos:position pos:line="293" pos:column="21"/></operator> <call><name pos:line="293" pos:column="22">X509_STORE_new<pos:position pos:line="293" pos:column="36"/></name><argument_list pos:line="293" pos:column="36">()<pos:position pos:line="293" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="39"/></expr_stmt>

        <if pos:line="295" pos:column="9">if <condition pos:line="295" pos:column="12">(<expr><operator pos:line="295" pos:column="13">!<pos:position pos:line="295" pos:column="14"/></operator><call><name pos:line="295" pos:column="14">X509_STORE_load_locations<pos:position pos:line="295" pos:column="39"/></name><argument_list pos:line="295" pos:column="39">(<argument><expr><name pos:line="295" pos:column="40">cert_store<pos:position pos:line="295" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="295" pos:column="52">ca_file<pos:position pos:line="295" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="295" pos:column="61">ca_path<pos:position pos:line="295" pos:column="68"/></name></expr></argument>)<pos:position pos:line="295" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="295" pos:column="70"/></condition><then pos:line="295" pos:column="70"> <block pos:line="295" pos:column="71">{
            <expr_stmt><expr><call><name pos:line="296" pos:column="13">ap_log_error<pos:position pos:line="296" pos:column="25"/></name><argument_list pos:line="296" pos:column="25">(<argument><expr><name pos:line="296" pos:column="26">APLOG_MARK<pos:position pos:line="296" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="296" pos:column="38">APLOG_ERR<pos:position pos:line="296" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="296" pos:column="49">0<pos:position pos:line="296" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="296" pos:column="52">r<pos:position pos:line="296" pos:column="53"/></name><operator pos:line="296" pos:column="53">-&gt;<pos:position pos:line="296" pos:column="58"/></operator><name pos:line="296" pos:column="55">server<pos:position pos:line="296" pos:column="61"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="297" pos:column="26">"Unable to reconfigure verify locations "<pos:position pos:line="297" pos:column="67"/></literal>
                         <literal type="string" pos:line="298" pos:column="26">"for client authentication"<pos:position pos:line="298" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="298" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="299" pos:column="13">ssl_log_ssl_error<pos:position pos:line="299" pos:column="30"/></name><argument_list pos:line="299" pos:column="30">(<argument><expr><name pos:line="299" pos:column="31">APLOG_MARK<pos:position pos:line="299" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="299" pos:column="43">APLOG_ERR<pos:position pos:line="299" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="299" pos:column="54">r<pos:position pos:line="299" pos:column="55"/></name><operator pos:line="299" pos:column="55">-&gt;<pos:position pos:line="299" pos:column="60"/></operator><name pos:line="299" pos:column="57">server<pos:position pos:line="299" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="299" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="65"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="301" pos:column="13">X509_STORE_free<pos:position pos:line="301" pos:column="28"/></name><argument_list pos:line="301" pos:column="28">(<argument><expr><name pos:line="301" pos:column="29">cert_store<pos:position pos:line="301" pos:column="39"/></name></expr></argument>)<pos:position pos:line="301" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="41"/></expr_stmt>

            <return pos:line="303" pos:column="13">return <expr><name pos:line="303" pos:column="20">HTTP_FORBIDDEN<pos:position pos:line="303" pos:column="34"/></name></expr>;<pos:position pos:line="303" pos:column="35"/></return>
        }<pos:position pos:line="304" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="306" pos:column="9">/* SSL_free will free cert_store */</comment>
        <expr_stmt><expr><call><name pos:line="307" pos:column="9">SSL_set_cert_store<pos:position pos:line="307" pos:column="27"/></name><argument_list pos:line="307" pos:column="27">(<argument><expr><name pos:line="307" pos:column="28">ssl<pos:position pos:line="307" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="307" pos:column="33">cert_store<pos:position pos:line="307" pos:column="43"/></name></expr></argument>)<pos:position pos:line="307" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="45"/></expr_stmt>

        <if pos:line="309" pos:column="9">if <condition pos:line="309" pos:column="12">(<expr><operator pos:line="309" pos:column="13">!<pos:position pos:line="309" pos:column="14"/></operator><operator pos:line="309" pos:column="14">(<pos:position pos:line="309" pos:column="15"/></operator><name pos:line="309" pos:column="15">ca_list<pos:position pos:line="309" pos:column="22"/></name> <operator pos:line="309" pos:column="23">=<pos:position pos:line="309" pos:column="24"/></operator> <call><name pos:line="309" pos:column="25">ssl_init_FindCAList<pos:position pos:line="309" pos:column="44"/></name><argument_list pos:line="309" pos:column="44">(<argument><expr><name><name pos:line="309" pos:column="45">r<pos:position pos:line="309" pos:column="46"/></name><operator pos:line="309" pos:column="46">-&gt;<pos:position pos:line="309" pos:column="51"/></operator><name pos:line="309" pos:column="48">server<pos:position pos:line="309" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="309" pos:column="56">r<pos:position pos:line="309" pos:column="57"/></name><operator pos:line="309" pos:column="57">-&gt;<pos:position pos:line="309" pos:column="62"/></operator><name pos:line="309" pos:column="59">pool<pos:position pos:line="309" pos:column="63"/></name></name></expr></argument>,
                                            <argument><expr><name pos:line="310" pos:column="45">ca_file<pos:position pos:line="310" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="54">ca_path<pos:position pos:line="310" pos:column="61"/></name></expr></argument>)<pos:position pos:line="310" pos:column="62"/></argument_list></call><operator pos:line="310" pos:column="62">)<pos:position pos:line="310" pos:column="63"/></operator></expr>)<pos:position pos:line="310" pos:column="64"/></condition><then pos:line="310" pos:column="64">
        <block pos:line="311" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="312" pos:column="13">ap_log_error<pos:position pos:line="312" pos:column="25"/></name><argument_list pos:line="312" pos:column="25">(<argument><expr><name pos:line="312" pos:column="26">APLOG_MARK<pos:position pos:line="312" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="312" pos:column="38">APLOG_ERR<pos:position pos:line="312" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="312" pos:column="49">0<pos:position pos:line="312" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="312" pos:column="52">r<pos:position pos:line="312" pos:column="53"/></name><operator pos:line="312" pos:column="53">-&gt;<pos:position pos:line="312" pos:column="58"/></operator><name pos:line="312" pos:column="55">server<pos:position pos:line="312" pos:column="61"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="313" pos:column="26">"Unable to determine list of available "<pos:position pos:line="313" pos:column="66"/></literal>
                         <literal type="string" pos:line="314" pos:column="26">"CA certificates for client authentication"<pos:position pos:line="314" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="314" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="71"/></expr_stmt>

            <return pos:line="316" pos:column="13">return <expr><name pos:line="316" pos:column="20">HTTP_FORBIDDEN<pos:position pos:line="316" pos:column="34"/></name></expr>;<pos:position pos:line="316" pos:column="35"/></return>
        }<pos:position pos:line="317" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="319" pos:column="9">SSL_set_client_CA_list<pos:position pos:line="319" pos:column="31"/></name><argument_list pos:line="319" pos:column="31">(<argument><expr><name pos:line="319" pos:column="32">ssl<pos:position pos:line="319" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="319" pos:column="37">ca_list<pos:position pos:line="319" pos:column="44"/></name></expr></argument>)<pos:position pos:line="319" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="319" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="320" pos:column="9">renegotiate<pos:position pos:line="320" pos:column="20"/></name> <operator pos:line="320" pos:column="21">=<pos:position pos:line="320" pos:column="22"/></operator> <name pos:line="320" pos:column="23">TRUE<pos:position pos:line="320" pos:column="27"/></name></expr>;<pos:position pos:line="320" pos:column="28"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="322" pos:column="9">ap_log_error<pos:position pos:line="322" pos:column="21"/></name><argument_list pos:line="322" pos:column="21">(<argument><expr><name pos:line="322" pos:column="22">APLOG_MARK<pos:position pos:line="322" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="322" pos:column="34">APLOG_DEBUG<pos:position pos:line="322" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="322" pos:column="47">0<pos:position pos:line="322" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="322" pos:column="50">r<pos:position pos:line="322" pos:column="51"/></name><operator pos:line="322" pos:column="51">-&gt;<pos:position pos:line="322" pos:column="56"/></operator><name pos:line="322" pos:column="53">server<pos:position pos:line="322" pos:column="59"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="323" pos:column="22">"Changed client verification locations will force "<pos:position pos:line="323" pos:column="73"/></literal>
                     <literal type="string" pos:line="324" pos:column="22">"renegotiation"<pos:position pos:line="324" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="324" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="324" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="325" pos:column="6"/></block></then></if>
<cpp:endif pos:line="326" pos:column="1">#<cpp:directive pos:line="326" pos:column="2">endif<pos:position pos:line="326" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="326" pos:column="8">/* HAVE_SSL_SET_CERT_STORE */</comment>

    <comment type="block" pos:line="328" pos:column="5">/* 
     * SSL renegotiations in conjunction with HTTP
     * requests using the POST method are not supported.
     *
     * Background:
     *
     * 1. When the client sends a HTTP/HTTPS request, Apache's core code
     * reads only the request line ("METHOD /path HTTP/x.y") and the
     * attached MIME headers ("Foo: bar") up to the terminating line ("CR
     * LF"). An attached request body (for instance the data of a POST
     * method) is _NOT_ read. Instead it is read by mod_cgi's content
     * handler and directly passed to the CGI script.
     *
     * 2. mod_ssl supports per-directory re-configuration of SSL parameters.
     * This is implemented by performing an SSL renegotiation of the
     * re-configured parameters after the request is read, but before the
     * response is sent. In more detail: the renegotiation happens after the
     * request line and MIME headers were read, but _before_ the attached
     * request body is read. The reason simply is that in the HTTP protocol
     * usually there is no acknowledgment step between the headers and the
     * body (there is the 100-continue feature and the chunking facility
     * only), so Apache has no API hook for this step.
     *
     * 3. the problem now occurs when the client sends a POST request for
     * URL /foo via HTTPS the server and the server has SSL parameters
     * re-configured on a per-URL basis for /foo. Then mod_ssl has to
     * perform an SSL renegotiation after the request was read and before
     * the response is sent. But the problem is the pending POST body data
     * in the receive buffer of SSL (which Apache still has not read - it's
     * pending until mod_cgi sucks it in). When mod_ssl now tries to perform
     * the renegotiation the pending data leads to an I/O error.
     *
     * Solution Idea:
     *
     * There are only two solutions: Either to simply state that POST
     * requests to URLs with SSL re-configurations are not allowed, or to
     * renegotiate really after the _complete_ request (i.e. including
     * the POST body) was read. Obviously the latter would be preferred,
     * but it cannot be done easily inside Apache, because as already
     * mentioned, there is no API step between the body reading and the body
     * processing. And even when we mod_ssl would hook directly into the
     * loop of mod_cgi, we wouldn't solve the problem for other handlers, of
     * course. So the only general solution is to suck in the pending data
     * of the request body from the OpenSSL BIO into the Apache BUFF. Then
     * the renegotiation can be done and after this step Apache can proceed
     * processing the request as before.
     *
     * Solution Implementation:
     *
     * We cannot simply suck in the data via an SSL_read-based loop because of
     * HTTP chunking. Instead we _have_ to use the Apache API for this step which
     * is aware of HTTP chunking. So the trick is to suck in the pending request
     * data via the Apache API (which uses Apache's BUFF code and in the
     * background mod_ssl's I/O glue code) and re-inject it later into the Apache
     * BUFF code again. This way the data flows twice through the Apache BUFF, of
     * course. But this way the solution doesn't depend on any Apache specifics
     * and is fully transparent to Apache modules.
     *
     * !! BUT ALL THIS IS STILL NOT RE-IMPLEMENTED FOR APACHE 2.0 !!
     */</comment>
    <if pos:line="388" pos:column="5">if <condition pos:line="388" pos:column="8">(<expr><name pos:line="388" pos:column="9">renegotiate<pos:position pos:line="388" pos:column="20"/></name> <operator pos:line="388" pos:column="21">&amp;&amp;<pos:position pos:line="388" pos:column="31"/></operator> <operator pos:line="388" pos:column="24">!<pos:position pos:line="388" pos:column="25"/></operator><name pos:line="388" pos:column="25">renegotiate_quick<pos:position pos:line="388" pos:column="42"/></name> <operator pos:line="388" pos:column="43">&amp;&amp;<pos:position pos:line="388" pos:column="53"/></operator> <operator pos:line="388" pos:column="46">(<pos:position pos:line="388" pos:column="47"/></operator><name><name pos:line="388" pos:column="47">r<pos:position pos:line="388" pos:column="48"/></name><operator pos:line="388" pos:column="48">-&gt;<pos:position pos:line="388" pos:column="53"/></operator><name pos:line="388" pos:column="50">method_number<pos:position pos:line="388" pos:column="63"/></name></name> <operator pos:line="388" pos:column="64">==<pos:position pos:line="388" pos:column="66"/></operator> <name pos:line="388" pos:column="67">M_POST<pos:position pos:line="388" pos:column="73"/></name><operator pos:line="388" pos:column="73">)<pos:position pos:line="388" pos:column="74"/></operator></expr>)<pos:position pos:line="388" pos:column="75"/></condition><then pos:line="388" pos:column="75"> <block pos:line="388" pos:column="76">{
        <expr_stmt><expr><call><name pos:line="389" pos:column="9">ap_log_error<pos:position pos:line="389" pos:column="21"/></name><argument_list pos:line="389" pos:column="21">(<argument><expr><name pos:line="389" pos:column="22">APLOG_MARK<pos:position pos:line="389" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="389" pos:column="34">APLOG_ERR<pos:position pos:line="389" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="389" pos:column="45">0<pos:position pos:line="389" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="389" pos:column="48">r<pos:position pos:line="389" pos:column="49"/></name><operator pos:line="389" pos:column="49">-&gt;<pos:position pos:line="389" pos:column="54"/></operator><name pos:line="389" pos:column="51">server<pos:position pos:line="389" pos:column="57"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="390" pos:column="22">"SSL Re-negotiation in conjunction "<pos:position pos:line="390" pos:column="58"/></literal>
                     <literal type="string" pos:line="391" pos:column="22">"with POST method not supported!\n"<pos:position pos:line="391" pos:column="57"/></literal>
                     <literal type="string" pos:line="392" pos:column="22">"hint: try SSLOptions +OptRenegotiate"<pos:position pos:line="392" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="392" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="392" pos:column="62"/></expr_stmt>

        <return pos:line="394" pos:column="9">return <expr><name pos:line="394" pos:column="16">HTTP_METHOD_NOT_ALLOWED<pos:position pos:line="394" pos:column="39"/></name></expr>;<pos:position pos:line="394" pos:column="40"/></return>
    }<pos:position pos:line="395" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="397" pos:column="5">/*
     * now do the renegotiation if anything was actually reconfigured
     */</comment>
    <if pos:line="400" pos:column="5">if <condition pos:line="400" pos:column="8">(<expr><name pos:line="400" pos:column="9">renegotiate<pos:position pos:line="400" pos:column="20"/></name></expr>)<pos:position pos:line="400" pos:column="21"/></condition><then pos:line="400" pos:column="21"> <block pos:line="400" pos:column="22">{
        <comment type="block" pos:line="401" pos:column="9">/*
         * Now we force the SSL renegotation by sending the Hello Request
         * message to the client. Here we have to do a workaround: Actually
         * OpenSSL returns immediately after sending the Hello Request (the
         * intent AFAIK is because the SSL/TLS protocol says it's not a must
         * that the client replies to a Hello Request). But because we insist
         * on a reply (anything else is an error for us) we have to go to the
         * ACCEPT state manually. Using SSL_set_accept_state() doesn't work
         * here because it resets too much of the connection.  So we set the
         * state explicitly and continue the handshake manually.
         */</comment>
        <expr_stmt><expr><call><name pos:line="412" pos:column="9">ap_log_error<pos:position pos:line="412" pos:column="21"/></name><argument_list pos:line="412" pos:column="21">(<argument><expr><name pos:line="412" pos:column="22">APLOG_MARK<pos:position pos:line="412" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="412" pos:column="34">APLOG_INFO<pos:position pos:line="412" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="412" pos:column="46">0<pos:position pos:line="412" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="412" pos:column="49">r<pos:position pos:line="412" pos:column="50"/></name><operator pos:line="412" pos:column="50">-&gt;<pos:position pos:line="412" pos:column="55"/></operator><name pos:line="412" pos:column="52">server<pos:position pos:line="412" pos:column="58"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="413" pos:column="22">"Requesting connection re-negotiation"<pos:position pos:line="413" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="413" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="413" pos:column="62"/></expr_stmt>

        <if pos:line="415" pos:column="9">if <condition pos:line="415" pos:column="12">(<expr><name pos:line="415" pos:column="13">renegotiate_quick<pos:position pos:line="415" pos:column="30"/></name></expr>)<pos:position pos:line="415" pos:column="31"/></condition><then pos:line="415" pos:column="31"> <block pos:line="415" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="416" pos:column="13">STACK_OF<pos:position pos:line="416" pos:column="21"/></name><argument_list pos:line="416" pos:column="21">(<argument><expr><name pos:line="416" pos:column="22">X509<pos:position pos:line="416" pos:column="26"/></name></expr></argument>)<pos:position pos:line="416" pos:column="27"/></argument_list></call> <operator pos:line="416" pos:column="28">*<pos:position pos:line="416" pos:column="29"/></operator><name pos:line="416" pos:column="29">cert_stack<pos:position pos:line="416" pos:column="39"/></name></expr>;<pos:position pos:line="416" pos:column="40"/></expr_stmt>

            <comment type="block" pos:line="418" pos:column="13">/* perform just a manual re-verification of the peer */</comment>
            <expr_stmt><expr><call><name pos:line="419" pos:column="13">ap_log_error<pos:position pos:line="419" pos:column="25"/></name><argument_list pos:line="419" pos:column="25">(<argument><expr><name pos:line="419" pos:column="26">APLOG_MARK<pos:position pos:line="419" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="419" pos:column="38">APLOG_DEBUG<pos:position pos:line="419" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="419" pos:column="51">0<pos:position pos:line="419" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="419" pos:column="54">r<pos:position pos:line="419" pos:column="55"/></name><operator pos:line="419" pos:column="55">-&gt;<pos:position pos:line="419" pos:column="60"/></operator><name pos:line="419" pos:column="57">server<pos:position pos:line="419" pos:column="63"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="420" pos:column="26">"Performing quick renegotiation: "<pos:position pos:line="420" pos:column="60"/></literal>
                         <literal type="string" pos:line="421" pos:column="26">"just re-verifying the peer"<pos:position pos:line="421" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="421" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="421" pos:column="56"/></expr_stmt>

            <expr_stmt><expr><name pos:line="423" pos:column="13">cert_stack<pos:position pos:line="423" pos:column="23"/></name> <operator pos:line="423" pos:column="24">=<pos:position pos:line="423" pos:column="25"/></operator> <operator pos:line="423" pos:column="26">(<pos:position pos:line="423" pos:column="27"/></operator><call><name pos:line="423" pos:column="27">STACK_OF<pos:position pos:line="423" pos:column="35"/></name><argument_list pos:line="423" pos:column="35">(<argument><expr><name pos:line="423" pos:column="36">X509<pos:position pos:line="423" pos:column="40"/></name></expr></argument>)<pos:position pos:line="423" pos:column="41"/></argument_list></call> <operator pos:line="423" pos:column="42">*<pos:position pos:line="423" pos:column="43"/></operator><operator pos:line="423" pos:column="43">)<pos:position pos:line="423" pos:column="44"/></operator><call><name pos:line="423" pos:column="44">SSL_get_peer_cert_chain<pos:position pos:line="423" pos:column="67"/></name><argument_list pos:line="423" pos:column="67">(<argument><expr><name pos:line="423" pos:column="68">ssl<pos:position pos:line="423" pos:column="71"/></name></expr></argument>)<pos:position pos:line="423" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="423" pos:column="73"/></expr_stmt>

            <expr_stmt><expr><name pos:line="425" pos:column="13">cert<pos:position pos:line="425" pos:column="17"/></name> <operator pos:line="425" pos:column="18">=<pos:position pos:line="425" pos:column="19"/></operator> <call><name pos:line="425" pos:column="20">SSL_get_peer_certificate<pos:position pos:line="425" pos:column="44"/></name><argument_list pos:line="425" pos:column="44">(<argument><expr><name pos:line="425" pos:column="45">ssl<pos:position pos:line="425" pos:column="48"/></name></expr></argument>)<pos:position pos:line="425" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="425" pos:column="50"/></expr_stmt>

            <if pos:line="427" pos:column="13">if <condition pos:line="427" pos:column="16">(<expr><operator pos:line="427" pos:column="17">!<pos:position pos:line="427" pos:column="18"/></operator><name pos:line="427" pos:column="18">cert_stack<pos:position pos:line="427" pos:column="28"/></name> <operator pos:line="427" pos:column="29">&amp;&amp;<pos:position pos:line="427" pos:column="39"/></operator> <name pos:line="427" pos:column="32">cert<pos:position pos:line="427" pos:column="36"/></name></expr>)<pos:position pos:line="427" pos:column="37"/></condition><then pos:line="427" pos:column="37"> <block pos:line="427" pos:column="38">{
                <comment type="block" pos:line="428" pos:column="17">/* client cert is in the session cache, but there is
                 * no chain, since ssl3_get_client_certificate()
                 * sk_X509_shift-ed the peer cert out of the chain.
                 * we put it back here for the purpose of quick_renegotiation.
                 */</comment>
                <expr_stmt><expr><name pos:line="433" pos:column="17">cert_stack<pos:position pos:line="433" pos:column="27"/></name> <operator pos:line="433" pos:column="28">=<pos:position pos:line="433" pos:column="29"/></operator> <call><name pos:line="433" pos:column="30">sk_new_null<pos:position pos:line="433" pos:column="41"/></name><argument_list pos:line="433" pos:column="41">()<pos:position pos:line="433" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="433" pos:column="44"/></expr_stmt>
                <macro><name pos:line="434" pos:column="17">sk_X509_push<pos:position pos:line="434" pos:column="29"/></name><argument_list pos:line="434" pos:column="29">(<argument pos:line="434" pos:column="30">cert_stack<pos:position pos:line="434" pos:column="40"/></argument>, <argument pos:line="434" pos:column="42">MODSSL_PCHAR_CAST cert<pos:position pos:line="434" pos:column="64"/></argument>)<pos:position pos:line="434" pos:column="65"/></argument_list></macro><empty_stmt pos:line="434" pos:column="65">;<pos:position pos:line="434" pos:column="66"/></empty_stmt>
            }<pos:position pos:line="435" pos:column="14"/></block></then></if>

            <if pos:line="437" pos:column="13">if <condition pos:line="437" pos:column="16">(<expr><operator pos:line="437" pos:column="17">!<pos:position pos:line="437" pos:column="18"/></operator><name pos:line="437" pos:column="18">cert_stack<pos:position pos:line="437" pos:column="28"/></name> <operator pos:line="437" pos:column="29">||<pos:position pos:line="437" pos:column="31"/></operator> <operator pos:line="437" pos:column="32">(<pos:position pos:line="437" pos:column="33"/></operator><call><name pos:line="437" pos:column="33">sk_X509_num<pos:position pos:line="437" pos:column="44"/></name><argument_list pos:line="437" pos:column="44">(<argument><expr><name pos:line="437" pos:column="45">cert_stack<pos:position pos:line="437" pos:column="55"/></name></expr></argument>)<pos:position pos:line="437" pos:column="56"/></argument_list></call> <operator pos:line="437" pos:column="57">==<pos:position pos:line="437" pos:column="59"/></operator> <literal type="number" pos:line="437" pos:column="60">0<pos:position pos:line="437" pos:column="61"/></literal><operator pos:line="437" pos:column="61">)<pos:position pos:line="437" pos:column="62"/></operator></expr>)<pos:position pos:line="437" pos:column="63"/></condition><then pos:line="437" pos:column="63"> <block pos:line="437" pos:column="64">{
                <expr_stmt><expr><call><name pos:line="438" pos:column="17">ap_log_error<pos:position pos:line="438" pos:column="29"/></name><argument_list pos:line="438" pos:column="29">(<argument><expr><name pos:line="438" pos:column="30">APLOG_MARK<pos:position pos:line="438" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="438" pos:column="42">APLOG_ERR<pos:position pos:line="438" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="438" pos:column="53">0<pos:position pos:line="438" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="438" pos:column="56">r<pos:position pos:line="438" pos:column="57"/></name><operator pos:line="438" pos:column="57">-&gt;<pos:position pos:line="438" pos:column="62"/></operator><name pos:line="438" pos:column="59">server<pos:position pos:line="438" pos:column="65"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="439" pos:column="30">"Cannot find peer certificate chain"<pos:position pos:line="439" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="439" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="439" pos:column="68"/></expr_stmt>

                <return pos:line="441" pos:column="17">return <expr><name pos:line="441" pos:column="24">HTTP_FORBIDDEN<pos:position pos:line="441" pos:column="38"/></name></expr>;<pos:position pos:line="441" pos:column="39"/></return>
            }<pos:position pos:line="442" pos:column="14"/></block></then></if>

            <if pos:line="444" pos:column="13">if <condition pos:line="444" pos:column="16">(<expr><operator pos:line="444" pos:column="17">!<pos:position pos:line="444" pos:column="18"/></operator><operator pos:line="444" pos:column="18">(<pos:position pos:line="444" pos:column="19"/></operator><name pos:line="444" pos:column="19">cert_store<pos:position pos:line="444" pos:column="29"/></name> <operator pos:line="444" pos:column="30">||<pos:position pos:line="444" pos:column="32"/></operator>
                  <operator pos:line="445" pos:column="19">(<pos:position pos:line="445" pos:column="20"/></operator><name pos:line="445" pos:column="20">cert_store<pos:position pos:line="445" pos:column="30"/></name> <operator pos:line="445" pos:column="31">=<pos:position pos:line="445" pos:column="32"/></operator> <call><name pos:line="445" pos:column="33">SSL_CTX_get_cert_store<pos:position pos:line="445" pos:column="55"/></name><argument_list pos:line="445" pos:column="55">(<argument><expr><name pos:line="445" pos:column="56">ctx<pos:position pos:line="445" pos:column="59"/></name></expr></argument>)<pos:position pos:line="445" pos:column="60"/></argument_list></call><operator pos:line="445" pos:column="60">)<pos:position pos:line="445" pos:column="61"/></operator><operator pos:line="445" pos:column="61">)<pos:position pos:line="445" pos:column="62"/></operator></expr>)<pos:position pos:line="445" pos:column="63"/></condition><then pos:line="445" pos:column="63">
            <block pos:line="446" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="447" pos:column="17">ap_log_error<pos:position pos:line="447" pos:column="29"/></name><argument_list pos:line="447" pos:column="29">(<argument><expr><name pos:line="447" pos:column="30">APLOG_MARK<pos:position pos:line="447" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="447" pos:column="42">APLOG_ERR<pos:position pos:line="447" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="447" pos:column="53">0<pos:position pos:line="447" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="447" pos:column="56">r<pos:position pos:line="447" pos:column="57"/></name><operator pos:line="447" pos:column="57">-&gt;<pos:position pos:line="447" pos:column="62"/></operator><name pos:line="447" pos:column="59">server<pos:position pos:line="447" pos:column="65"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="448" pos:column="30">"Cannot find certificate storage"<pos:position pos:line="448" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="448" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="448" pos:column="65"/></expr_stmt>

                <return pos:line="450" pos:column="17">return <expr><name pos:line="450" pos:column="24">HTTP_FORBIDDEN<pos:position pos:line="450" pos:column="38"/></name></expr>;<pos:position pos:line="450" pos:column="39"/></return>
            }<pos:position pos:line="451" pos:column="14"/></block></then></if>

            <if pos:line="453" pos:column="13">if <condition pos:line="453" pos:column="16">(<expr><operator pos:line="453" pos:column="17">!<pos:position pos:line="453" pos:column="18"/></operator><name pos:line="453" pos:column="18">cert<pos:position pos:line="453" pos:column="22"/></name></expr>)<pos:position pos:line="453" pos:column="23"/></condition><then pos:line="453" pos:column="23"> <block pos:line="453" pos:column="24">{
                <expr_stmt><expr><name pos:line="454" pos:column="17">cert<pos:position pos:line="454" pos:column="21"/></name> <operator pos:line="454" pos:column="22">=<pos:position pos:line="454" pos:column="23"/></operator> <call><name pos:line="454" pos:column="24">sk_X509_value<pos:position pos:line="454" pos:column="37"/></name><argument_list pos:line="454" pos:column="37">(<argument><expr><name pos:line="454" pos:column="38">cert_stack<pos:position pos:line="454" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="454" pos:column="50">0<pos:position pos:line="454" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="454" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="454" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="455" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="457" pos:column="13">X509_STORE_CTX_init<pos:position pos:line="457" pos:column="32"/></name><argument_list pos:line="457" pos:column="32">(<argument><expr><operator pos:line="457" pos:column="33">&amp;<pos:position pos:line="457" pos:column="38"/></operator><name pos:line="457" pos:column="34">cert_store_ctx<pos:position pos:line="457" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="457" pos:column="50">cert_store<pos:position pos:line="457" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="457" pos:column="62">cert<pos:position pos:line="457" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="457" pos:column="68">cert_stack<pos:position pos:line="457" pos:column="78"/></name></expr></argument>)<pos:position pos:line="457" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="457" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><name pos:line="458" pos:column="13">depth<pos:position pos:line="458" pos:column="18"/></name> <operator pos:line="458" pos:column="19">=<pos:position pos:line="458" pos:column="20"/></operator> <call><name pos:line="458" pos:column="21">SSL_get_verify_depth<pos:position pos:line="458" pos:column="41"/></name><argument_list pos:line="458" pos:column="41">(<argument><expr><name pos:line="458" pos:column="42">ssl<pos:position pos:line="458" pos:column="45"/></name></expr></argument>)<pos:position pos:line="458" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="458" pos:column="47"/></expr_stmt>

            <if pos:line="460" pos:column="13">if <condition pos:line="460" pos:column="16">(<expr><name pos:line="460" pos:column="17">depth<pos:position pos:line="460" pos:column="22"/></name> <operator pos:line="460" pos:column="23">&gt;=<pos:position pos:line="460" pos:column="28"/></operator> <literal type="number" pos:line="460" pos:column="26">0<pos:position pos:line="460" pos:column="27"/></literal></expr>)<pos:position pos:line="460" pos:column="28"/></condition><then pos:line="460" pos:column="28"> <block pos:line="460" pos:column="29">{
                <expr_stmt><expr><call><name pos:line="461" pos:column="17">X509_STORE_CTX_set_depth<pos:position pos:line="461" pos:column="41"/></name><argument_list pos:line="461" pos:column="41">(<argument><expr><operator pos:line="461" pos:column="42">&amp;<pos:position pos:line="461" pos:column="47"/></operator><name pos:line="461" pos:column="43">cert_store_ctx<pos:position pos:line="461" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="461" pos:column="59">depth<pos:position pos:line="461" pos:column="64"/></name></expr></argument>)<pos:position pos:line="461" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="461" pos:column="66"/></expr_stmt>
            }<pos:position pos:line="462" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="464" pos:column="13">X509_STORE_CTX_set_ex_data<pos:position pos:line="464" pos:column="39"/></name><argument_list pos:line="464" pos:column="39">(<argument><expr><operator pos:line="464" pos:column="40">&amp;<pos:position pos:line="464" pos:column="45"/></operator><name pos:line="464" pos:column="41">cert_store_ctx<pos:position pos:line="464" pos:column="55"/></name></expr></argument>,
                                       <argument><expr><call><name pos:line="465" pos:column="40">SSL_get_ex_data_X509_STORE_CTX_idx<pos:position pos:line="465" pos:column="74"/></name><argument_list pos:line="465" pos:column="74">()<pos:position pos:line="465" pos:column="76"/></argument_list></call></expr></argument>,
                                       <argument><expr><operator pos:line="466" pos:column="40">(<pos:position pos:line="466" pos:column="41"/></operator><name pos:line="466" pos:column="41">char<pos:position pos:line="466" pos:column="45"/></name> <operator pos:line="466" pos:column="46">*<pos:position pos:line="466" pos:column="47"/></operator><operator pos:line="466" pos:column="47">)<pos:position pos:line="466" pos:column="48"/></operator><name pos:line="466" pos:column="48">ssl<pos:position pos:line="466" pos:column="51"/></name></expr></argument>)<pos:position pos:line="466" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="466" pos:column="53"/></expr_stmt>

            <if pos:line="468" pos:column="13">if <condition pos:line="468" pos:column="16">(<expr><operator pos:line="468" pos:column="17">!<pos:position pos:line="468" pos:column="18"/></operator><call><name pos:line="468" pos:column="18">modssl_X509_verify_cert<pos:position pos:line="468" pos:column="41"/></name><argument_list pos:line="468" pos:column="41">(<argument><expr><operator pos:line="468" pos:column="42">&amp;<pos:position pos:line="468" pos:column="47"/></operator><name pos:line="468" pos:column="43">cert_store_ctx<pos:position pos:line="468" pos:column="57"/></name></expr></argument>)<pos:position pos:line="468" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="468" pos:column="59"/></condition><then pos:line="468" pos:column="59"> <block pos:line="468" pos:column="60">{
                <expr_stmt><expr><call><name pos:line="469" pos:column="17">ap_log_error<pos:position pos:line="469" pos:column="29"/></name><argument_list pos:line="469" pos:column="29">(<argument><expr><name pos:line="469" pos:column="30">APLOG_MARK<pos:position pos:line="469" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="469" pos:column="42">APLOG_ERR<pos:position pos:line="469" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="469" pos:column="53">0<pos:position pos:line="469" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="469" pos:column="56">r<pos:position pos:line="469" pos:column="57"/></name><operator pos:line="469" pos:column="57">-&gt;<pos:position pos:line="469" pos:column="62"/></operator><name pos:line="469" pos:column="59">server<pos:position pos:line="469" pos:column="65"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="470" pos:column="30">"Re-negotiation verification step failed"<pos:position pos:line="470" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="470" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="470" pos:column="73"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="471" pos:column="17">ssl_log_ssl_error<pos:position pos:line="471" pos:column="34"/></name><argument_list pos:line="471" pos:column="34">(<argument><expr><name pos:line="471" pos:column="35">APLOG_MARK<pos:position pos:line="471" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="471" pos:column="47">APLOG_ERR<pos:position pos:line="471" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="471" pos:column="58">r<pos:position pos:line="471" pos:column="59"/></name><operator pos:line="471" pos:column="59">-&gt;<pos:position pos:line="471" pos:column="64"/></operator><name pos:line="471" pos:column="61">server<pos:position pos:line="471" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="471" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="471" pos:column="69"/></expr_stmt>
            }<pos:position pos:line="472" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="474" pos:column="13">SSL_set_verify_result<pos:position pos:line="474" pos:column="34"/></name><argument_list pos:line="474" pos:column="34">(<argument><expr><name pos:line="474" pos:column="35">ssl<pos:position pos:line="474" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="474" pos:column="40">cert_store_ctx<pos:position pos:line="474" pos:column="54"/></name><operator pos:line="474" pos:column="54">.<pos:position pos:line="474" pos:column="55"/></operator><name pos:line="474" pos:column="55">error<pos:position pos:line="474" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="474" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="474" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="475" pos:column="13">X509_STORE_CTX_cleanup<pos:position pos:line="475" pos:column="35"/></name><argument_list pos:line="475" pos:column="35">(<argument><expr><operator pos:line="475" pos:column="36">&amp;<pos:position pos:line="475" pos:column="41"/></operator><name pos:line="475" pos:column="37">cert_store_ctx<pos:position pos:line="475" pos:column="51"/></name></expr></argument>)<pos:position pos:line="475" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="475" pos:column="53"/></expr_stmt>

            <if pos:line="477" pos:column="13">if <condition pos:line="477" pos:column="16">(<expr><name pos:line="477" pos:column="17">cert_stack<pos:position pos:line="477" pos:column="27"/></name> <operator pos:line="477" pos:column="28">!=<pos:position pos:line="477" pos:column="30"/></operator> <call><name pos:line="477" pos:column="31">SSL_get_peer_cert_chain<pos:position pos:line="477" pos:column="54"/></name><argument_list pos:line="477" pos:column="54">(<argument><expr><name pos:line="477" pos:column="55">ssl<pos:position pos:line="477" pos:column="58"/></name></expr></argument>)<pos:position pos:line="477" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="477" pos:column="60"/></condition><then pos:line="477" pos:column="60"> <block pos:line="477" pos:column="61">{
                <comment type="block" pos:line="478" pos:column="17">/* we created this ourselves, so free it */</comment>
                <expr_stmt><expr><call><name pos:line="479" pos:column="17">sk_X509_pop_free<pos:position pos:line="479" pos:column="33"/></name><argument_list pos:line="479" pos:column="33">(<argument><expr><name pos:line="479" pos:column="34">cert_stack<pos:position pos:line="479" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="479" pos:column="46">X509_free<pos:position pos:line="479" pos:column="55"/></name></expr></argument>)<pos:position pos:line="479" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="479" pos:column="57"/></expr_stmt>
            }<pos:position pos:line="480" pos:column="14"/></block></then></if>
        }<pos:position pos:line="481" pos:column="10"/></block></then>
        <else pos:line="482" pos:column="9">else <block pos:line="482" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="483" pos:column="13">request_rec<pos:position pos:line="483" pos:column="24"/></name> <modifier pos:line="483" pos:column="25">*<pos:position pos:line="483" pos:column="26"/></modifier></type><name pos:line="483" pos:column="26">id<pos:position pos:line="483" pos:column="28"/></name> <init pos:line="483" pos:column="29">= <expr><ternary><condition><expr><name><name pos:line="483" pos:column="31">r<pos:position pos:line="483" pos:column="32"/></name><operator pos:line="483" pos:column="32">-&gt;<pos:position pos:line="483" pos:column="37"/></operator><name pos:line="483" pos:column="34">main<pos:position pos:line="483" pos:column="38"/></name></name></expr> ?<pos:position pos:line="483" pos:column="40"/></condition><then pos:line="483" pos:column="40"> <expr><name><name pos:line="483" pos:column="41">r<pos:position pos:line="483" pos:column="42"/></name><operator pos:line="483" pos:column="42">-&gt;<pos:position pos:line="483" pos:column="47"/></operator><name pos:line="483" pos:column="44">main<pos:position pos:line="483" pos:column="48"/></name></name></expr> <pos:position pos:line="483" pos:column="49"/></then><else pos:line="483" pos:column="49">: <expr><name pos:line="483" pos:column="51">r<pos:position pos:line="483" pos:column="52"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="483" pos:column="53"/></decl_stmt>

            <comment type="block" pos:line="485" pos:column="13">/* do a full renegotiation */</comment>
            <expr_stmt><expr><call><name pos:line="486" pos:column="13">ap_log_error<pos:position pos:line="486" pos:column="25"/></name><argument_list pos:line="486" pos:column="25">(<argument><expr><name pos:line="486" pos:column="26">APLOG_MARK<pos:position pos:line="486" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="486" pos:column="38">APLOG_DEBUG<pos:position pos:line="486" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="486" pos:column="51">0<pos:position pos:line="486" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="486" pos:column="54">r<pos:position pos:line="486" pos:column="55"/></name><operator pos:line="486" pos:column="55">-&gt;<pos:position pos:line="486" pos:column="60"/></operator><name pos:line="486" pos:column="57">server<pos:position pos:line="486" pos:column="63"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="487" pos:column="26">"Performing full renegotiation: "<pos:position pos:line="487" pos:column="59"/></literal>
                         <literal type="string" pos:line="488" pos:column="26">"complete handshake protocol"<pos:position pos:line="488" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="488" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="488" pos:column="57"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="490" pos:column="13">SSL_set_session_id_context<pos:position pos:line="490" pos:column="39"/></name><argument_list pos:line="490" pos:column="39">(<argument><expr><name pos:line="490" pos:column="40">ssl<pos:position pos:line="490" pos:column="43"/></name></expr></argument>,
                                       <argument><expr><operator pos:line="491" pos:column="40">(<pos:position pos:line="491" pos:column="41"/></operator><name pos:line="491" pos:column="41">unsigned<pos:position pos:line="491" pos:column="49"/></name> <name pos:line="491" pos:column="50">char<pos:position pos:line="491" pos:column="54"/></name> <operator pos:line="491" pos:column="55">*<pos:position pos:line="491" pos:column="56"/></operator><operator pos:line="491" pos:column="56">)<pos:position pos:line="491" pos:column="57"/></operator><operator pos:line="491" pos:column="57">&amp;<pos:position pos:line="491" pos:column="62"/></operator><name pos:line="491" pos:column="58">id<pos:position pos:line="491" pos:column="60"/></name></expr></argument>,
                                       <argument><expr><sizeof pos:line="492" pos:column="40">sizeof<argument_list pos:line="492" pos:column="46">(<argument><expr><name pos:line="492" pos:column="47">id<pos:position pos:line="492" pos:column="49"/></name></expr></argument>)<pos:position pos:line="492" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="492" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="492" pos:column="52"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="494" pos:column="13">SSL_renegotiate<pos:position pos:line="494" pos:column="28"/></name><argument_list pos:line="494" pos:column="28">(<argument><expr><name pos:line="494" pos:column="29">ssl<pos:position pos:line="494" pos:column="32"/></name></expr></argument>)<pos:position pos:line="494" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="494" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="495" pos:column="13">SSL_do_handshake<pos:position pos:line="495" pos:column="29"/></name><argument_list pos:line="495" pos:column="29">(<argument><expr><name pos:line="495" pos:column="30">ssl<pos:position pos:line="495" pos:column="33"/></name></expr></argument>)<pos:position pos:line="495" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="495" pos:column="35"/></expr_stmt>

            <if pos:line="497" pos:column="13">if <condition pos:line="497" pos:column="16">(<expr><call><name pos:line="497" pos:column="17">SSL_get_state<pos:position pos:line="497" pos:column="30"/></name><argument_list pos:line="497" pos:column="30">(<argument><expr><name pos:line="497" pos:column="31">ssl<pos:position pos:line="497" pos:column="34"/></name></expr></argument>)<pos:position pos:line="497" pos:column="35"/></argument_list></call> <operator pos:line="497" pos:column="36">!=<pos:position pos:line="497" pos:column="38"/></operator> <name pos:line="497" pos:column="39">SSL_ST_OK<pos:position pos:line="497" pos:column="48"/></name></expr>)<pos:position pos:line="497" pos:column="49"/></condition><then pos:line="497" pos:column="49"> <block pos:line="497" pos:column="50">{
                <expr_stmt><expr><call><name pos:line="498" pos:column="17">ap_log_error<pos:position pos:line="498" pos:column="29"/></name><argument_list pos:line="498" pos:column="29">(<argument><expr><name pos:line="498" pos:column="30">APLOG_MARK<pos:position pos:line="498" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="498" pos:column="42">APLOG_ERR<pos:position pos:line="498" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="498" pos:column="53">0<pos:position pos:line="498" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="498" pos:column="56">r<pos:position pos:line="498" pos:column="57"/></name><operator pos:line="498" pos:column="57">-&gt;<pos:position pos:line="498" pos:column="62"/></operator><name pos:line="498" pos:column="59">server<pos:position pos:line="498" pos:column="65"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="499" pos:column="30">"Re-negotiation request failed"<pos:position pos:line="499" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="499" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="499" pos:column="63"/></expr_stmt>

                <expr_stmt><expr><name><name pos:line="501" pos:column="17">r<pos:position pos:line="501" pos:column="18"/></name><operator pos:line="501" pos:column="18">-&gt;<pos:position pos:line="501" pos:column="23"/></operator><name pos:line="501" pos:column="20">connection<pos:position pos:line="501" pos:column="30"/></name><operator pos:line="501" pos:column="30">-&gt;<pos:position pos:line="501" pos:column="35"/></operator><name pos:line="501" pos:column="32">aborted<pos:position pos:line="501" pos:column="39"/></name></name> <operator pos:line="501" pos:column="40">=<pos:position pos:line="501" pos:column="41"/></operator> <literal type="number" pos:line="501" pos:column="42">1<pos:position pos:line="501" pos:column="43"/></literal></expr>;<pos:position pos:line="501" pos:column="44"/></expr_stmt>
                <return pos:line="502" pos:column="17">return <expr><name pos:line="502" pos:column="24">HTTP_FORBIDDEN<pos:position pos:line="502" pos:column="38"/></name></expr>;<pos:position pos:line="502" pos:column="39"/></return>
            }<pos:position pos:line="503" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="505" pos:column="13">ap_log_error<pos:position pos:line="505" pos:column="25"/></name><argument_list pos:line="505" pos:column="25">(<argument><expr><name pos:line="505" pos:column="26">APLOG_MARK<pos:position pos:line="505" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="505" pos:column="38">APLOG_INFO<pos:position pos:line="505" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="505" pos:column="50">0<pos:position pos:line="505" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="505" pos:column="53">r<pos:position pos:line="505" pos:column="54"/></name><operator pos:line="505" pos:column="54">-&gt;<pos:position pos:line="505" pos:column="59"/></operator><name pos:line="505" pos:column="56">server<pos:position pos:line="505" pos:column="62"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="506" pos:column="26">"Awaiting re-negotiation handshake"<pos:position pos:line="506" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="506" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="506" pos:column="63"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="508" pos:column="13">SSL_set_state<pos:position pos:line="508" pos:column="26"/></name><argument_list pos:line="508" pos:column="26">(<argument><expr><name pos:line="508" pos:column="27">ssl<pos:position pos:line="508" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="508" pos:column="32">SSL_ST_ACCEPT<pos:position pos:line="508" pos:column="45"/></name></expr></argument>)<pos:position pos:line="508" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="508" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="509" pos:column="13">SSL_do_handshake<pos:position pos:line="509" pos:column="29"/></name><argument_list pos:line="509" pos:column="29">(<argument><expr><name pos:line="509" pos:column="30">ssl<pos:position pos:line="509" pos:column="33"/></name></expr></argument>)<pos:position pos:line="509" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="509" pos:column="35"/></expr_stmt>

            <if pos:line="511" pos:column="13">if <condition pos:line="511" pos:column="16">(<expr><call><name pos:line="511" pos:column="17">SSL_get_state<pos:position pos:line="511" pos:column="30"/></name><argument_list pos:line="511" pos:column="30">(<argument><expr><name pos:line="511" pos:column="31">ssl<pos:position pos:line="511" pos:column="34"/></name></expr></argument>)<pos:position pos:line="511" pos:column="35"/></argument_list></call> <operator pos:line="511" pos:column="36">!=<pos:position pos:line="511" pos:column="38"/></operator> <name pos:line="511" pos:column="39">SSL_ST_OK<pos:position pos:line="511" pos:column="48"/></name></expr>)<pos:position pos:line="511" pos:column="49"/></condition><then pos:line="511" pos:column="49"> <block pos:line="511" pos:column="50">{
                <expr_stmt><expr><call><name pos:line="512" pos:column="17">ap_log_error<pos:position pos:line="512" pos:column="29"/></name><argument_list pos:line="512" pos:column="29">(<argument><expr><name pos:line="512" pos:column="30">APLOG_MARK<pos:position pos:line="512" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="512" pos:column="42">APLOG_ERR<pos:position pos:line="512" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="512" pos:column="53">0<pos:position pos:line="512" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="512" pos:column="56">r<pos:position pos:line="512" pos:column="57"/></name><operator pos:line="512" pos:column="57">-&gt;<pos:position pos:line="512" pos:column="62"/></operator><name pos:line="512" pos:column="59">server<pos:position pos:line="512" pos:column="65"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="513" pos:column="30">"Re-negotiation handshake failed: "<pos:position pos:line="513" pos:column="65"/></literal>
                        <literal type="string" pos:line="514" pos:column="25">"Not accepted by client!?"<pos:position pos:line="514" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="514" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="514" pos:column="53"/></expr_stmt>

                <expr_stmt><expr><name><name pos:line="516" pos:column="17">r<pos:position pos:line="516" pos:column="18"/></name><operator pos:line="516" pos:column="18">-&gt;<pos:position pos:line="516" pos:column="23"/></operator><name pos:line="516" pos:column="20">connection<pos:position pos:line="516" pos:column="30"/></name><operator pos:line="516" pos:column="30">-&gt;<pos:position pos:line="516" pos:column="35"/></operator><name pos:line="516" pos:column="32">aborted<pos:position pos:line="516" pos:column="39"/></name></name> <operator pos:line="516" pos:column="40">=<pos:position pos:line="516" pos:column="41"/></operator> <literal type="number" pos:line="516" pos:column="42">1<pos:position pos:line="516" pos:column="43"/></literal></expr>;<pos:position pos:line="516" pos:column="44"/></expr_stmt>
                <return pos:line="517" pos:column="17">return <expr><name pos:line="517" pos:column="24">HTTP_FORBIDDEN<pos:position pos:line="517" pos:column="38"/></name></expr>;<pos:position pos:line="517" pos:column="39"/></return>
            }<pos:position pos:line="518" pos:column="14"/></block></then></if>
        }<pos:position pos:line="519" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="521" pos:column="9">/*
         * Remember the peer certificate's DN
         */</comment>
        <if pos:line="524" pos:column="9">if <condition pos:line="524" pos:column="12">(<expr><operator pos:line="524" pos:column="13">(<pos:position pos:line="524" pos:column="14"/></operator><name pos:line="524" pos:column="14">cert<pos:position pos:line="524" pos:column="18"/></name> <operator pos:line="524" pos:column="19">=<pos:position pos:line="524" pos:column="20"/></operator> <call><name pos:line="524" pos:column="21">SSL_get_peer_certificate<pos:position pos:line="524" pos:column="45"/></name><argument_list pos:line="524" pos:column="45">(<argument><expr><name pos:line="524" pos:column="46">ssl<pos:position pos:line="524" pos:column="49"/></name></expr></argument>)<pos:position pos:line="524" pos:column="50"/></argument_list></call><operator pos:line="524" pos:column="50">)<pos:position pos:line="524" pos:column="51"/></operator></expr>)<pos:position pos:line="524" pos:column="52"/></condition><then pos:line="524" pos:column="52"> <block pos:line="524" pos:column="53">{
            <if pos:line="525" pos:column="13">if <condition pos:line="525" pos:column="16">(<expr><name><name pos:line="525" pos:column="17">sslconn<pos:position pos:line="525" pos:column="24"/></name><operator pos:line="525" pos:column="24">-&gt;<pos:position pos:line="525" pos:column="29"/></operator><name pos:line="525" pos:column="26">client_cert<pos:position pos:line="525" pos:column="37"/></name></name></expr>)<pos:position pos:line="525" pos:column="38"/></condition><then pos:line="525" pos:column="38"> <block pos:line="525" pos:column="39">{
                <expr_stmt><expr><call><name pos:line="526" pos:column="17">X509_free<pos:position pos:line="526" pos:column="26"/></name><argument_list pos:line="526" pos:column="26">(<argument><expr><name><name pos:line="526" pos:column="27">sslconn<pos:position pos:line="526" pos:column="34"/></name><operator pos:line="526" pos:column="34">-&gt;<pos:position pos:line="526" pos:column="39"/></operator><name pos:line="526" pos:column="36">client_cert<pos:position pos:line="526" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="526" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="526" pos:column="49"/></expr_stmt>
            }<pos:position pos:line="527" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="528" pos:column="13">sslconn<pos:position pos:line="528" pos:column="20"/></name><operator pos:line="528" pos:column="20">-&gt;<pos:position pos:line="528" pos:column="25"/></operator><name pos:line="528" pos:column="22">client_cert<pos:position pos:line="528" pos:column="33"/></name></name> <operator pos:line="528" pos:column="34">=<pos:position pos:line="528" pos:column="35"/></operator> <name pos:line="528" pos:column="36">cert<pos:position pos:line="528" pos:column="40"/></name></expr>;<pos:position pos:line="528" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="529" pos:column="13">sslconn<pos:position pos:line="529" pos:column="20"/></name><operator pos:line="529" pos:column="20">-&gt;<pos:position pos:line="529" pos:column="25"/></operator><name pos:line="529" pos:column="22">client_dn<pos:position pos:line="529" pos:column="31"/></name></name> <operator pos:line="529" pos:column="32">=<pos:position pos:line="529" pos:column="33"/></operator> <name pos:line="529" pos:column="34">NULL<pos:position pos:line="529" pos:column="38"/></name></expr>;<pos:position pos:line="529" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="530" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="532" pos:column="9">/*
         * Finally check for acceptable renegotiation results
         */</comment>
        <if pos:line="535" pos:column="9">if <condition pos:line="535" pos:column="12">(<expr><name><name pos:line="535" pos:column="13">dc<pos:position pos:line="535" pos:column="15"/></name><operator pos:line="535" pos:column="15">-&gt;<pos:position pos:line="535" pos:column="20"/></operator><name pos:line="535" pos:column="17">nVerifyClient<pos:position pos:line="535" pos:column="30"/></name></name> <operator pos:line="535" pos:column="31">!=<pos:position pos:line="535" pos:column="33"/></operator> <name pos:line="535" pos:column="34">SSL_CVERIFY_NONE<pos:position pos:line="535" pos:column="50"/></name></expr>)<pos:position pos:line="535" pos:column="51"/></condition><then pos:line="535" pos:column="51"> <block pos:line="535" pos:column="52">{
            <decl_stmt><decl><type><name pos:line="536" pos:column="13">BOOL<pos:position pos:line="536" pos:column="17"/></name></type> <name pos:line="536" pos:column="18">do_verify<pos:position pos:line="536" pos:column="27"/></name> <init pos:line="536" pos:column="28">= <expr><operator pos:line="536" pos:column="30">(<pos:position pos:line="536" pos:column="31"/></operator><name><name pos:line="536" pos:column="31">dc<pos:position pos:line="536" pos:column="33"/></name><operator pos:line="536" pos:column="33">-&gt;<pos:position pos:line="536" pos:column="38"/></operator><name pos:line="536" pos:column="35">nVerifyClient<pos:position pos:line="536" pos:column="48"/></name></name> <operator pos:line="536" pos:column="49">==<pos:position pos:line="536" pos:column="51"/></operator> <name pos:line="536" pos:column="52">SSL_CVERIFY_REQUIRE<pos:position pos:line="536" pos:column="71"/></name><operator pos:line="536" pos:column="71">)<pos:position pos:line="536" pos:column="72"/></operator></expr></init></decl>;<pos:position pos:line="536" pos:column="73"/></decl_stmt>

            <if pos:line="538" pos:column="13">if <condition pos:line="538" pos:column="16">(<expr><name pos:line="538" pos:column="17">do_verify<pos:position pos:line="538" pos:column="26"/></name> <operator pos:line="538" pos:column="27">&amp;&amp;<pos:position pos:line="538" pos:column="37"/></operator> <operator pos:line="538" pos:column="30">(<pos:position pos:line="538" pos:column="31"/></operator><call><name pos:line="538" pos:column="31">SSL_get_verify_result<pos:position pos:line="538" pos:column="52"/></name><argument_list pos:line="538" pos:column="52">(<argument><expr><name pos:line="538" pos:column="53">ssl<pos:position pos:line="538" pos:column="56"/></name></expr></argument>)<pos:position pos:line="538" pos:column="57"/></argument_list></call> <operator pos:line="538" pos:column="58">!=<pos:position pos:line="538" pos:column="60"/></operator> <name pos:line="538" pos:column="61">X509_V_OK<pos:position pos:line="538" pos:column="70"/></name><operator pos:line="538" pos:column="70">)<pos:position pos:line="538" pos:column="71"/></operator></expr>)<pos:position pos:line="538" pos:column="72"/></condition><then pos:line="538" pos:column="72"> <block pos:line="538" pos:column="73">{
                <expr_stmt><expr><call><name pos:line="539" pos:column="17">ap_log_error<pos:position pos:line="539" pos:column="29"/></name><argument_list pos:line="539" pos:column="29">(<argument><expr><name pos:line="539" pos:column="30">APLOG_MARK<pos:position pos:line="539" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="539" pos:column="42">APLOG_ERR<pos:position pos:line="539" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="539" pos:column="53">0<pos:position pos:line="539" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="539" pos:column="56">r<pos:position pos:line="539" pos:column="57"/></name><operator pos:line="539" pos:column="57">-&gt;<pos:position pos:line="539" pos:column="62"/></operator><name pos:line="539" pos:column="59">server<pos:position pos:line="539" pos:column="65"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="540" pos:column="30">"Re-negotiation handshake failed: "<pos:position pos:line="540" pos:column="65"/></literal>
                             <literal type="string" pos:line="541" pos:column="30">"Client verification failed"<pos:position pos:line="541" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="541" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="541" pos:column="60"/></expr_stmt>

                <return pos:line="543" pos:column="17">return <expr><name pos:line="543" pos:column="24">HTTP_FORBIDDEN<pos:position pos:line="543" pos:column="38"/></name></expr>;<pos:position pos:line="543" pos:column="39"/></return>
            }<pos:position pos:line="544" pos:column="14"/></block></then></if>

            <if pos:line="546" pos:column="13">if <condition pos:line="546" pos:column="16">(<expr><name pos:line="546" pos:column="17">do_verify<pos:position pos:line="546" pos:column="26"/></name></expr>)<pos:position pos:line="546" pos:column="27"/></condition><then pos:line="546" pos:column="27"> <block pos:line="546" pos:column="28">{
                <if pos:line="547" pos:column="17">if <condition pos:line="547" pos:column="20">(<expr><operator pos:line="547" pos:column="21">(<pos:position pos:line="547" pos:column="22"/></operator><name pos:line="547" pos:column="22">peercert<pos:position pos:line="547" pos:column="30"/></name> <operator pos:line="547" pos:column="31">=<pos:position pos:line="547" pos:column="32"/></operator> <call><name pos:line="547" pos:column="33">SSL_get_peer_certificate<pos:position pos:line="547" pos:column="57"/></name><argument_list pos:line="547" pos:column="57">(<argument><expr><name pos:line="547" pos:column="58">ssl<pos:position pos:line="547" pos:column="61"/></name></expr></argument>)<pos:position pos:line="547" pos:column="62"/></argument_list></call><operator pos:line="547" pos:column="62">)<pos:position pos:line="547" pos:column="63"/></operator> <operator pos:line="547" pos:column="64">==<pos:position pos:line="547" pos:column="66"/></operator> <name pos:line="547" pos:column="67">NULL<pos:position pos:line="547" pos:column="71"/></name></expr>)<pos:position pos:line="547" pos:column="72"/></condition><then pos:line="547" pos:column="72"> <block pos:line="547" pos:column="73">{
                    <expr_stmt><expr><call><name pos:line="548" pos:column="21">ap_log_error<pos:position pos:line="548" pos:column="33"/></name><argument_list pos:line="548" pos:column="33">(<argument><expr><name pos:line="548" pos:column="34">APLOG_MARK<pos:position pos:line="548" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="548" pos:column="46">APLOG_ERR<pos:position pos:line="548" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="548" pos:column="57">0<pos:position pos:line="548" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="548" pos:column="60">r<pos:position pos:line="548" pos:column="61"/></name><operator pos:line="548" pos:column="61">-&gt;<pos:position pos:line="548" pos:column="66"/></operator><name pos:line="548" pos:column="63">server<pos:position pos:line="548" pos:column="69"/></name></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="549" pos:column="34">"Re-negotiation handshake failed: "<pos:position pos:line="549" pos:column="69"/></literal>
                                 <literal type="string" pos:line="550" pos:column="34">"Client certificate missing"<pos:position pos:line="550" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="550" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="550" pos:column="64"/></expr_stmt>

                    <return pos:line="552" pos:column="21">return <expr><name pos:line="552" pos:column="28">HTTP_FORBIDDEN<pos:position pos:line="552" pos:column="42"/></name></expr>;<pos:position pos:line="552" pos:column="43"/></return>
                }<pos:position pos:line="553" pos:column="18"/></block></then></if>

                <expr_stmt><expr><call><name pos:line="555" pos:column="17">X509_free<pos:position pos:line="555" pos:column="26"/></name><argument_list pos:line="555" pos:column="26">(<argument><expr><name pos:line="555" pos:column="27">peercert<pos:position pos:line="555" pos:column="35"/></name></expr></argument>)<pos:position pos:line="555" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="555" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="556" pos:column="14"/></block></then></if>
        }<pos:position pos:line="557" pos:column="10"/></block></then></if>
        
        <comment type="block" pos:line="559" pos:column="9">/*
         * Also check that SSLCipherSuite has been enforced as expected.
         */</comment>
        <if pos:line="562" pos:column="9">if <condition pos:line="562" pos:column="12">(<expr><name pos:line="562" pos:column="13">cipher_list<pos:position pos:line="562" pos:column="24"/></name></expr>)<pos:position pos:line="562" pos:column="25"/></condition><then pos:line="562" pos:column="25"> <block pos:line="562" pos:column="26">{
            <expr_stmt><expr><name pos:line="563" pos:column="13">cipher<pos:position pos:line="563" pos:column="19"/></name> <operator pos:line="563" pos:column="20">=<pos:position pos:line="563" pos:column="21"/></operator> <call><name pos:line="563" pos:column="22">SSL_get_current_cipher<pos:position pos:line="563" pos:column="44"/></name><argument_list pos:line="563" pos:column="44">(<argument><expr><name pos:line="563" pos:column="45">ssl<pos:position pos:line="563" pos:column="48"/></name></expr></argument>)<pos:position pos:line="563" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="563" pos:column="50"/></expr_stmt>
            <if pos:line="564" pos:column="13">if <condition pos:line="564" pos:column="16">(<expr><call><name pos:line="564" pos:column="17">sk_SSL_CIPHER_find<pos:position pos:line="564" pos:column="35"/></name><argument_list pos:line="564" pos:column="35">(<argument><expr><name pos:line="564" pos:column="36">cipher_list<pos:position pos:line="564" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="564" pos:column="49">cipher<pos:position pos:line="564" pos:column="55"/></name></expr></argument>)<pos:position pos:line="564" pos:column="56"/></argument_list></call> <operator pos:line="564" pos:column="57">&lt;<pos:position pos:line="564" pos:column="61"/></operator> <literal type="number" pos:line="564" pos:column="59">0<pos:position pos:line="564" pos:column="60"/></literal></expr>)<pos:position pos:line="564" pos:column="61"/></condition><then pos:line="564" pos:column="61"> <block pos:line="564" pos:column="62">{
                <expr_stmt><expr><call><name pos:line="565" pos:column="17">ap_log_rerror<pos:position pos:line="565" pos:column="30"/></name><argument_list pos:line="565" pos:column="30">(<argument><expr><name pos:line="565" pos:column="31">APLOG_MARK<pos:position pos:line="565" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="565" pos:column="43">APLOG_ERR<pos:position pos:line="565" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="565" pos:column="54">0<pos:position pos:line="565" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="565" pos:column="57">r<pos:position pos:line="565" pos:column="58"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="566" pos:column="30">"SSL cipher suite not renegotiated: "<pos:position pos:line="566" pos:column="67"/></literal>
                             <literal type="string" pos:line="567" pos:column="30">"access to %s denied using cipher %s"<pos:position pos:line="567" pos:column="67"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="568" pos:column="31">r<pos:position pos:line="568" pos:column="32"/></name><operator pos:line="568" pos:column="32">-&gt;<pos:position pos:line="568" pos:column="37"/></operator><name pos:line="568" pos:column="34">filename<pos:position pos:line="568" pos:column="42"/></name></name></expr></argument>,
                              <argument><expr><call><name pos:line="569" pos:column="31">SSL_CIPHER_get_name<pos:position pos:line="569" pos:column="50"/></name><argument_list pos:line="569" pos:column="50">(<argument><expr><name pos:line="569" pos:column="51">cipher<pos:position pos:line="569" pos:column="57"/></name></expr></argument>)<pos:position pos:line="569" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="569" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="569" pos:column="60"/></expr_stmt>
                <return pos:line="570" pos:column="17">return <expr><name pos:line="570" pos:column="24">HTTP_FORBIDDEN<pos:position pos:line="570" pos:column="38"/></name></expr>;<pos:position pos:line="570" pos:column="39"/></return>
            }<pos:position pos:line="571" pos:column="14"/></block></then></if>
        }<pos:position pos:line="572" pos:column="10"/></block></then></if>
    }<pos:position pos:line="573" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="575" pos:column="5">/*
     * Check SSLRequire boolean expressions
     */</comment>
    <expr_stmt><expr><name pos:line="578" pos:column="5">requires<pos:position pos:line="578" pos:column="13"/></name> <operator pos:line="578" pos:column="14">=<pos:position pos:line="578" pos:column="15"/></operator> <name><name pos:line="578" pos:column="16">dc<pos:position pos:line="578" pos:column="18"/></name><operator pos:line="578" pos:column="18">-&gt;<pos:position pos:line="578" pos:column="23"/></operator><name pos:line="578" pos:column="20">aRequirement<pos:position pos:line="578" pos:column="32"/></name></name></expr>;<pos:position pos:line="578" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="579" pos:column="5">ssl_requires<pos:position pos:line="579" pos:column="17"/></name> <operator pos:line="579" pos:column="18">=<pos:position pos:line="579" pos:column="19"/></operator> <operator pos:line="579" pos:column="20">(<pos:position pos:line="579" pos:column="21"/></operator><name pos:line="579" pos:column="21">ssl_require_t<pos:position pos:line="579" pos:column="34"/></name> <operator pos:line="579" pos:column="35">*<pos:position pos:line="579" pos:column="36"/></operator><operator pos:line="579" pos:column="36">)<pos:position pos:line="579" pos:column="37"/></operator><name><name pos:line="579" pos:column="37">requires<pos:position pos:line="579" pos:column="45"/></name><operator pos:line="579" pos:column="45">-&gt;<pos:position pos:line="579" pos:column="50"/></operator><name pos:line="579" pos:column="47">elts<pos:position pos:line="579" pos:column="51"/></name></name></expr>;<pos:position pos:line="579" pos:column="52"/></expr_stmt>

    <for pos:line="581" pos:column="5">for <control pos:line="581" pos:column="9">(<init><expr><name pos:line="581" pos:column="10">i<pos:position pos:line="581" pos:column="11"/></name> <operator pos:line="581" pos:column="12">=<pos:position pos:line="581" pos:column="13"/></operator> <literal type="number" pos:line="581" pos:column="14">0<pos:position pos:line="581" pos:column="15"/></literal></expr>;<pos:position pos:line="581" pos:column="16"/></init> <condition><expr><name pos:line="581" pos:column="17">i<pos:position pos:line="581" pos:column="18"/></name> <operator pos:line="581" pos:column="19">&lt;<pos:position pos:line="581" pos:column="23"/></operator> <name><name pos:line="581" pos:column="21">requires<pos:position pos:line="581" pos:column="29"/></name><operator pos:line="581" pos:column="29">-&gt;<pos:position pos:line="581" pos:column="34"/></operator><name pos:line="581" pos:column="31">nelts<pos:position pos:line="581" pos:column="36"/></name></name></expr>;<pos:position pos:line="581" pos:column="37"/></condition> <incr><expr><name pos:line="581" pos:column="38">i<pos:position pos:line="581" pos:column="39"/></name><operator pos:line="581" pos:column="39">++<pos:position pos:line="581" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="581" pos:column="42"/></control> <block pos:line="581" pos:column="43">{
        <decl_stmt><decl><type><name pos:line="582" pos:column="9">ssl_require_t<pos:position pos:line="582" pos:column="22"/></name> <modifier pos:line="582" pos:column="23">*<pos:position pos:line="582" pos:column="24"/></modifier></type><name pos:line="582" pos:column="24">req<pos:position pos:line="582" pos:column="27"/></name> <init pos:line="582" pos:column="28">= <expr><operator pos:line="582" pos:column="30">&amp;<pos:position pos:line="582" pos:column="35"/></operator><name><name pos:line="582" pos:column="31">ssl_requires<pos:position pos:line="582" pos:column="43"/></name><index pos:line="582" pos:column="43">[<expr><name pos:line="582" pos:column="44">i<pos:position pos:line="582" pos:column="45"/></name></expr>]<pos:position pos:line="582" pos:column="46"/></index></name></expr></init></decl>;<pos:position pos:line="582" pos:column="47"/></decl_stmt>
        <expr_stmt><expr><name pos:line="583" pos:column="9">ok<pos:position pos:line="583" pos:column="11"/></name> <operator pos:line="583" pos:column="12">=<pos:position pos:line="583" pos:column="13"/></operator> <call><name pos:line="583" pos:column="14">ssl_expr_exec<pos:position pos:line="583" pos:column="27"/></name><argument_list pos:line="583" pos:column="27">(<argument><expr><name pos:line="583" pos:column="28">r<pos:position pos:line="583" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="583" pos:column="31">req<pos:position pos:line="583" pos:column="34"/></name><operator pos:line="583" pos:column="34">-&gt;<pos:position pos:line="583" pos:column="39"/></operator><name pos:line="583" pos:column="36">mpExpr<pos:position pos:line="583" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="583" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="583" pos:column="44"/></expr_stmt>

        <if pos:line="585" pos:column="9">if <condition pos:line="585" pos:column="12">(<expr><name pos:line="585" pos:column="13">ok<pos:position pos:line="585" pos:column="15"/></name> <operator pos:line="585" pos:column="16">&lt;<pos:position pos:line="585" pos:column="20"/></operator> <literal type="number" pos:line="585" pos:column="18">0<pos:position pos:line="585" pos:column="19"/></literal></expr>)<pos:position pos:line="585" pos:column="20"/></condition><then pos:line="585" pos:column="20"> <block pos:line="585" pos:column="21">{
            <expr_stmt><expr><name pos:line="586" pos:column="13">cp<pos:position pos:line="586" pos:column="15"/></name> <operator pos:line="586" pos:column="16">=<pos:position pos:line="586" pos:column="17"/></operator> <call><name pos:line="586" pos:column="18">apr_psprintf<pos:position pos:line="586" pos:column="30"/></name><argument_list pos:line="586" pos:column="30">(<argument><expr><name><name pos:line="586" pos:column="31">r<pos:position pos:line="586" pos:column="32"/></name><operator pos:line="586" pos:column="32">-&gt;<pos:position pos:line="586" pos:column="37"/></operator><name pos:line="586" pos:column="34">pool<pos:position pos:line="586" pos:column="38"/></name></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="587" pos:column="31">"Failed to execute "<pos:position pos:line="587" pos:column="51"/></literal>
                              <literal type="string" pos:line="588" pos:column="31">"SSL requirement expression: %s"<pos:position pos:line="588" pos:column="63"/></literal></expr></argument>,
                              <argument><expr><call><name pos:line="589" pos:column="31">ssl_expr_get_error<pos:position pos:line="589" pos:column="49"/></name><argument_list pos:line="589" pos:column="49">()<pos:position pos:line="589" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="589" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="589" pos:column="53"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="591" pos:column="13">ap_log_rerror<pos:position pos:line="591" pos:column="26"/></name><argument_list pos:line="591" pos:column="26">(<argument><expr><name pos:line="591" pos:column="27">APLOG_MARK<pos:position pos:line="591" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="591" pos:column="39">APLOG_ERR<pos:position pos:line="591" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="591" pos:column="50">0<pos:position pos:line="591" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="591" pos:column="53">r<pos:position pos:line="591" pos:column="54"/></name></expr></argument>, 
                          <argument><expr><literal type="string" pos:line="592" pos:column="27">"access to %s failed, reason: %s"<pos:position pos:line="592" pos:column="60"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="593" pos:column="27">r<pos:position pos:line="593" pos:column="28"/></name><operator pos:line="593" pos:column="28">-&gt;<pos:position pos:line="593" pos:column="33"/></operator><name pos:line="593" pos:column="30">filename<pos:position pos:line="593" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="593" pos:column="40">cp<pos:position pos:line="593" pos:column="42"/></name></expr></argument>)<pos:position pos:line="593" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="593" pos:column="44"/></expr_stmt>

            <comment type="block" pos:line="595" pos:column="13">/* remember forbidden access for strict require option */</comment>
            <expr_stmt><expr><call><name pos:line="596" pos:column="13">apr_table_setn<pos:position pos:line="596" pos:column="27"/></name><argument_list pos:line="596" pos:column="27">(<argument><expr><name><name pos:line="596" pos:column="28">r<pos:position pos:line="596" pos:column="29"/></name><operator pos:line="596" pos:column="29">-&gt;<pos:position pos:line="596" pos:column="34"/></operator><name pos:line="596" pos:column="31">notes<pos:position pos:line="596" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="596" pos:column="38">"ssl-access-forbidden"<pos:position pos:line="596" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="596" pos:column="62">"1"<pos:position pos:line="596" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="596" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="596" pos:column="67"/></expr_stmt>

            <return pos:line="598" pos:column="13">return <expr><name pos:line="598" pos:column="20">HTTP_FORBIDDEN<pos:position pos:line="598" pos:column="34"/></name></expr>;<pos:position pos:line="598" pos:column="35"/></return>
        }<pos:position pos:line="599" pos:column="10"/></block></then></if>

        <if pos:line="601" pos:column="9">if <condition pos:line="601" pos:column="12">(<expr><name pos:line="601" pos:column="13">ok<pos:position pos:line="601" pos:column="15"/></name> <operator pos:line="601" pos:column="16">!=<pos:position pos:line="601" pos:column="18"/></operator> <literal type="number" pos:line="601" pos:column="19">1<pos:position pos:line="601" pos:column="20"/></literal></expr>)<pos:position pos:line="601" pos:column="21"/></condition><then pos:line="601" pos:column="21"> <block pos:line="601" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="602" pos:column="13">ap_log_error<pos:position pos:line="602" pos:column="25"/></name><argument_list pos:line="602" pos:column="25">(<argument><expr><name pos:line="602" pos:column="26">APLOG_MARK<pos:position pos:line="602" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="602" pos:column="38">APLOG_INFO<pos:position pos:line="602" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="602" pos:column="50">0<pos:position pos:line="602" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="602" pos:column="53">r<pos:position pos:line="602" pos:column="54"/></name><operator pos:line="602" pos:column="54">-&gt;<pos:position pos:line="602" pos:column="59"/></operator><name pos:line="602" pos:column="56">server<pos:position pos:line="602" pos:column="62"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="603" pos:column="26">"Access to %s denied for %s "<pos:position pos:line="603" pos:column="55"/></literal>
                         <literal type="string" pos:line="604" pos:column="26">"(requirement expression not fulfilled)"<pos:position pos:line="604" pos:column="66"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="605" pos:column="26">r<pos:position pos:line="605" pos:column="27"/></name><operator pos:line="605" pos:column="27">-&gt;<pos:position pos:line="605" pos:column="32"/></operator><name pos:line="605" pos:column="29">filename<pos:position pos:line="605" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="605" pos:column="39">r<pos:position pos:line="605" pos:column="40"/></name><operator pos:line="605" pos:column="40">-&gt;<pos:position pos:line="605" pos:column="45"/></operator><name pos:line="605" pos:column="42">connection<pos:position pos:line="605" pos:column="52"/></name><operator pos:line="605" pos:column="52">-&gt;<pos:position pos:line="605" pos:column="57"/></operator><name pos:line="605" pos:column="54">remote_ip<pos:position pos:line="605" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="605" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="605" pos:column="65"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="607" pos:column="13">ap_log_error<pos:position pos:line="607" pos:column="25"/></name><argument_list pos:line="607" pos:column="25">(<argument><expr><name pos:line="607" pos:column="26">APLOG_MARK<pos:position pos:line="607" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="607" pos:column="38">APLOG_INFO<pos:position pos:line="607" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="607" pos:column="50">0<pos:position pos:line="607" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="607" pos:column="53">r<pos:position pos:line="607" pos:column="54"/></name><operator pos:line="607" pos:column="54">-&gt;<pos:position pos:line="607" pos:column="59"/></operator><name pos:line="607" pos:column="56">server<pos:position pos:line="607" pos:column="62"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="608" pos:column="26">"Failed expression: %s"<pos:position pos:line="608" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="608" pos:column="51">req<pos:position pos:line="608" pos:column="54"/></name><operator pos:line="608" pos:column="54">-&gt;<pos:position pos:line="608" pos:column="59"/></operator><name pos:line="608" pos:column="56">cpExpr<pos:position pos:line="608" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="608" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="608" pos:column="64"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="610" pos:column="13">ap_log_rerror<pos:position pos:line="610" pos:column="26"/></name><argument_list pos:line="610" pos:column="26">(<argument><expr><name pos:line="610" pos:column="27">APLOG_MARK<pos:position pos:line="610" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="610" pos:column="39">APLOG_ERR<pos:position pos:line="610" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="610" pos:column="50">0<pos:position pos:line="610" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="610" pos:column="53">r<pos:position pos:line="610" pos:column="54"/></name></expr></argument>, 
                          <argument><expr><literal type="string" pos:line="611" pos:column="27">"access to %s failed, reason: %s"<pos:position pos:line="611" pos:column="60"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="612" pos:column="27">r<pos:position pos:line="612" pos:column="28"/></name><operator pos:line="612" pos:column="28">-&gt;<pos:position pos:line="612" pos:column="33"/></operator><name pos:line="612" pos:column="30">filename<pos:position pos:line="612" pos:column="38"/></name></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="613" pos:column="27">"SSL requirement expression not fulfilled "<pos:position pos:line="613" pos:column="70"/></literal>
                          <literal type="string" pos:line="614" pos:column="27">"(see SSL logfile for more details)"<pos:position pos:line="614" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="614" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="614" pos:column="65"/></expr_stmt>

            <comment type="block" pos:line="616" pos:column="13">/* remember forbidden access for strict require option */</comment>
            <expr_stmt><expr><call><name pos:line="617" pos:column="13">apr_table_setn<pos:position pos:line="617" pos:column="27"/></name><argument_list pos:line="617" pos:column="27">(<argument><expr><name><name pos:line="617" pos:column="28">r<pos:position pos:line="617" pos:column="29"/></name><operator pos:line="617" pos:column="29">-&gt;<pos:position pos:line="617" pos:column="34"/></operator><name pos:line="617" pos:column="31">notes<pos:position pos:line="617" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="617" pos:column="38">"ssl-access-forbidden"<pos:position pos:line="617" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="617" pos:column="62">"1"<pos:position pos:line="617" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="617" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="617" pos:column="67"/></expr_stmt>

            <return pos:line="619" pos:column="13">return <expr><name pos:line="619" pos:column="20">HTTP_FORBIDDEN<pos:position pos:line="619" pos:column="34"/></name></expr>;<pos:position pos:line="619" pos:column="35"/></return>
        }<pos:position pos:line="620" pos:column="10"/></block></then></if>
    }<pos:position pos:line="621" pos:column="6"/></block></for>

    <comment type="block" pos:line="623" pos:column="5">/*
     * Else access is granted from our point of view (except vendor
     * handlers override). But we have to return DECLINED here instead
     * of OK, because mod_auth and other modules still might want to
     * deny access.
     */</comment>

    <return pos:line="630" pos:column="5">return <expr><name pos:line="630" pos:column="12">DECLINED<pos:position pos:line="630" pos:column="20"/></name></expr>;<pos:position pos:line="630" pos:column="21"/></return>
}<pos:position pos:line="631" pos:column="2"/></block></function></unit>

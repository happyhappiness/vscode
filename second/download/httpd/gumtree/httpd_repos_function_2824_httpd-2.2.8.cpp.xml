<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2824_httpd-2.2.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name><name pos:line="2" pos:column="1">enum<pos:position pos:line="2" pos:column="5"/></name> <name pos:line="2" pos:column="6">XML_Error<pos:position pos:line="2" pos:column="15"/></name></name></type> <name pos:line="2" pos:column="16">storeEntityValue<pos:position pos:line="2" pos:column="32"/></name><parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><name pos:line="2" pos:column="33">XML_Parser<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">parser<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="3" pos:column="33">const<pos:position pos:line="3" pos:column="38"/></specifier> <name pos:line="3" pos:column="39">ENCODING<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">enc<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="4" pos:column="33">const<pos:position pos:line="4" pos:column="38"/></specifier> <name pos:line="4" pos:column="39">char<pos:position pos:line="4" pos:column="43"/></name> <modifier pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></modifier></type><name pos:line="4" pos:column="45">entityTextPtr<pos:position pos:line="4" pos:column="58"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="5" pos:column="33">const<pos:position pos:line="5" pos:column="38"/></specifier> <name pos:line="5" pos:column="39">char<pos:position pos:line="5" pos:column="43"/></name> <modifier pos:line="5" pos:column="44">*<pos:position pos:line="5" pos:column="45"/></modifier></type><name pos:line="5" pos:column="45">entityTextEnd<pos:position pos:line="5" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="59"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">STRING_POOL<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">pool<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><operator pos:line="7" pos:column="23">&amp;<pos:position pos:line="7" pos:column="28"/></operator><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><name><name pos:line="7" pos:column="25">dtd<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">.<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">pool<pos:position pos:line="7" pos:column="33"/></name></name><operator pos:line="7" pos:column="33">)<pos:position pos:line="7" pos:column="34"/></operator></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init pos:line="8" pos:column="8">;<pos:position pos:line="8" pos:column="9"/></init><condition pos:line="8" pos:column="9">;<pos:position pos:line="8" pos:column="10"/></condition><incr/>)<pos:position pos:line="8" pos:column="11"/></control> <block pos:line="8" pos:column="12">{
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">next<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">tok<pos:position pos:line="10" pos:column="12"/></name> <init pos:line="10" pos:column="13">= <expr><call><name pos:line="10" pos:column="15">XmlEntityValueTok<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">enc<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="38">entityTextPtr<pos:position pos:line="10" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="53">entityTextEnd<pos:position pos:line="10" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="68">&amp;<pos:position pos:line="10" pos:column="73"/></operator><name pos:line="10" pos:column="69">next<pos:position pos:line="10" pos:column="73"/></name></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="75"/></decl_stmt>
    <switch pos:line="11" pos:column="5">switch <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">tok<pos:position pos:line="11" pos:column="16"/></name></expr>)<pos:position pos:line="11" pos:column="17"/></condition> <block pos:line="11" pos:column="18">{
    <case pos:line="12" pos:column="5">case <expr><name pos:line="12" pos:column="10">XML_TOK_PARAM_ENTITY_REF<pos:position pos:line="12" pos:column="34"/></name></expr>:<pos:position pos:line="12" pos:column="35"/></case>
<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">XML_DTD<pos:position pos:line="13" pos:column="15"/></name></cpp:ifdef>
      <if pos:line="14" pos:column="7">if <condition pos:line="14" pos:column="10">(<expr><name pos:line="14" pos:column="11">parentParser<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">||<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">enc<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">!=<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="34">encoding<pos:position pos:line="14" pos:column="42"/></name></expr>)<pos:position pos:line="14" pos:column="43"/></condition><then pos:line="14" pos:column="43"> <block pos:line="14" pos:column="44">{
	<decl_stmt><decl><type><name><name pos:line="15" pos:column="9">enum<pos:position pos:line="15" pos:column="13"/></name> <name pos:line="15" pos:column="14">XML_Error<pos:position pos:line="15" pos:column="23"/></name></name></type> <name pos:line="15" pos:column="24">result<pos:position pos:line="15" pos:column="30"/></name></decl>;<pos:position pos:line="15" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="16" pos:column="9">const<pos:position pos:line="16" pos:column="14"/></specifier> <name pos:line="16" pos:column="15">XML_Char<pos:position pos:line="16" pos:column="23"/></name> <modifier pos:line="16" pos:column="24">*<pos:position pos:line="16" pos:column="25"/></modifier></type><name pos:line="16" pos:column="25">name<pos:position pos:line="16" pos:column="29"/></name></decl>;<pos:position pos:line="16" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">ENTITY<pos:position pos:line="17" pos:column="15"/></name> <modifier pos:line="17" pos:column="16">*<pos:position pos:line="17" pos:column="17"/></modifier></type><name pos:line="17" pos:column="17">entity<pos:position pos:line="17" pos:column="23"/></name></decl>;<pos:position pos:line="17" pos:column="24"/></decl_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">name<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <call><name pos:line="18" pos:column="16">poolStoreString<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><operator pos:line="18" pos:column="32">&amp;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="33">tempPool<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">enc<pos:position pos:line="18" pos:column="46"/></name></expr></argument>,
			       <argument><expr><name pos:line="19" pos:column="32">entityTextPtr<pos:position pos:line="19" pos:column="45"/></name> <operator pos:line="19" pos:column="46">+<pos:position pos:line="19" pos:column="47"/></operator> <name><name pos:line="19" pos:column="48">enc<pos:position pos:line="19" pos:column="51"/></name><operator pos:line="19" pos:column="51">-&gt;<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="53">minBytesPerChar<pos:position pos:line="19" pos:column="68"/></name></name></expr></argument>,
			       <argument><expr><name pos:line="20" pos:column="32">next<pos:position pos:line="20" pos:column="36"/></name> <operator pos:line="20" pos:column="37">-<pos:position pos:line="20" pos:column="38"/></operator> <name><name pos:line="20" pos:column="39">enc<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">-&gt;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="44">minBytesPerChar<pos:position pos:line="20" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">name<pos:position pos:line="21" pos:column="18"/></name></expr>)<pos:position pos:line="21" pos:column="19"/></condition><then pos:line="21" pos:column="19">
	  <block type="pseudo"><return pos:line="22" pos:column="11">return <expr><name pos:line="22" pos:column="18">XML_ERROR_NO_MEMORY<pos:position pos:line="22" pos:column="37"/></name></expr>;<pos:position pos:line="22" pos:column="38"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="23" pos:column="9">entity<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <operator pos:line="23" pos:column="18">(<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">ENTITY<pos:position pos:line="23" pos:column="25"/></name> <operator pos:line="23" pos:column="26">*<pos:position pos:line="23" pos:column="27"/></operator><operator pos:line="23" pos:column="27">)<pos:position pos:line="23" pos:column="28"/></operator><call><name pos:line="23" pos:column="28">lookup<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><operator pos:line="23" pos:column="35">&amp;<pos:position pos:line="23" pos:column="40"/></operator><name><name pos:line="23" pos:column="36">dtd<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">.<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="40">paramEntities<pos:position pos:line="23" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="55">name<pos:position pos:line="23" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="61">0<pos:position pos:line="23" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">poolDiscard<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><operator pos:line="24" pos:column="21">&amp;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="22">tempPool<pos:position pos:line="24" pos:column="30"/></name></expr></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">entity<pos:position pos:line="25" pos:column="20"/></name></expr>)<pos:position pos:line="25" pos:column="21"/></condition><then pos:line="25" pos:column="21"> <block pos:line="25" pos:column="22">{
	  <if pos:line="26" pos:column="11">if <condition pos:line="26" pos:column="14">(<expr><name pos:line="26" pos:column="15">enc<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">==<pos:position pos:line="26" pos:column="21"/></operator> <name pos:line="26" pos:column="22">encoding<pos:position pos:line="26" pos:column="30"/></name></expr>)<pos:position pos:line="26" pos:column="31"/></condition><then pos:line="26" pos:column="31">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="13">eventPtr<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="24">entityTextPtr<pos:position pos:line="27" pos:column="37"/></name></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt></block></then></if>
	  <return pos:line="28" pos:column="11">return <expr><name pos:line="28" pos:column="18">XML_ERROR_UNDEFINED_ENTITY<pos:position pos:line="28" pos:column="44"/></name></expr>;<pos:position pos:line="28" pos:column="45"/></return>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">entity<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">open<pos:position pos:line="30" pos:column="25"/></name></name></expr>)<pos:position pos:line="30" pos:column="26"/></condition><then pos:line="30" pos:column="26"> <block pos:line="30" pos:column="27">{
	  <if pos:line="31" pos:column="11">if <condition pos:line="31" pos:column="14">(<expr><name pos:line="31" pos:column="15">enc<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">==<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">encoding<pos:position pos:line="31" pos:column="30"/></name></expr>)<pos:position pos:line="31" pos:column="31"/></condition><then pos:line="31" pos:column="31">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="13">eventPtr<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <name pos:line="32" pos:column="24">entityTextPtr<pos:position pos:line="32" pos:column="37"/></name></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt></block></then></if>
	  <return pos:line="33" pos:column="11">return <expr><name pos:line="33" pos:column="18">XML_ERROR_RECURSIVE_ENTITY_REF<pos:position pos:line="33" pos:column="48"/></name></expr>;<pos:position pos:line="33" pos:column="49"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name><name pos:line="35" pos:column="13">entity<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">systemId<pos:position pos:line="35" pos:column="29"/></name></name></expr>)<pos:position pos:line="35" pos:column="30"/></condition><then pos:line="35" pos:column="30"> <block pos:line="35" pos:column="31">{
	  <if pos:line="36" pos:column="11">if <condition pos:line="36" pos:column="14">(<expr><name pos:line="36" pos:column="15">enc<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">==<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">encoding<pos:position pos:line="36" pos:column="30"/></name></expr>)<pos:position pos:line="36" pos:column="31"/></condition><then pos:line="36" pos:column="31">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="13">eventPtr<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="24">entityTextPtr<pos:position pos:line="37" pos:column="37"/></name></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt></block></then></if>
	  <return pos:line="38" pos:column="11">return <expr><name pos:line="38" pos:column="18">XML_ERROR_PARAM_ENTITY_REF<pos:position pos:line="38" pos:column="44"/></name></expr>;<pos:position pos:line="38" pos:column="45"/></return>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="40" pos:column="9">entity<pos:position pos:line="40" pos:column="15"/></name><operator pos:line="40" pos:column="15">-&gt;<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="17">open<pos:position pos:line="40" pos:column="21"/></name></name> <operator pos:line="40" pos:column="22">=<pos:position pos:line="40" pos:column="23"/></operator> <literal type="number" pos:line="40" pos:column="24">1<pos:position pos:line="40" pos:column="25"/></literal></expr>;<pos:position pos:line="40" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="41" pos:column="9">result<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <call><name pos:line="41" pos:column="18">storeEntityValue<pos:position pos:line="41" pos:column="34"/></name><argument_list pos:line="41" pos:column="34">(<argument><expr><name pos:line="41" pos:column="35">parser<pos:position pos:line="41" pos:column="41"/></name></expr></argument>,
				  <argument><expr><name pos:line="42" pos:column="35">internalEncoding<pos:position pos:line="42" pos:column="51"/></name></expr></argument>,
				  <argument><expr><operator pos:line="43" pos:column="35">(<pos:position pos:line="43" pos:column="36"/></operator><name pos:line="43" pos:column="36">char<pos:position pos:line="43" pos:column="40"/></name> <operator pos:line="43" pos:column="41">*<pos:position pos:line="43" pos:column="42"/></operator><operator pos:line="43" pos:column="42">)<pos:position pos:line="43" pos:column="43"/></operator><name><name pos:line="43" pos:column="43">entity<pos:position pos:line="43" pos:column="49"/></name><operator pos:line="43" pos:column="49">-&gt;<pos:position pos:line="43" pos:column="54"/></operator><name pos:line="43" pos:column="51">textPtr<pos:position pos:line="43" pos:column="58"/></name></name></expr></argument>,
				  <argument><expr><operator pos:line="44" pos:column="35">(<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="36">char<pos:position pos:line="44" pos:column="40"/></name> <operator pos:line="44" pos:column="41">*<pos:position pos:line="44" pos:column="42"/></operator><operator pos:line="44" pos:column="42">)<pos:position pos:line="44" pos:column="43"/></operator><operator pos:line="44" pos:column="43">(<pos:position pos:line="44" pos:column="44"/></operator><name><name pos:line="44" pos:column="44">entity<pos:position pos:line="44" pos:column="50"/></name><operator pos:line="44" pos:column="50">-&gt;<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="52">textPtr<pos:position pos:line="44" pos:column="59"/></name></name> <operator pos:line="44" pos:column="60">+<pos:position pos:line="44" pos:column="61"/></operator> <name><name pos:line="44" pos:column="62">entity<pos:position pos:line="44" pos:column="68"/></name><operator pos:line="44" pos:column="68">-&gt;<pos:position pos:line="44" pos:column="73"/></operator><name pos:line="44" pos:column="70">textLen<pos:position pos:line="44" pos:column="77"/></name></name><operator pos:line="44" pos:column="77">)<pos:position pos:line="44" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="44" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="80"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="45" pos:column="9">entity<pos:position pos:line="45" pos:column="15"/></name><operator pos:line="45" pos:column="15">-&gt;<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="17">open<pos:position pos:line="45" pos:column="21"/></name></name> <operator pos:line="45" pos:column="22">=<pos:position pos:line="45" pos:column="23"/></operator> <literal type="number" pos:line="45" pos:column="24">0<pos:position pos:line="45" pos:column="25"/></literal></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt>
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">result<pos:position pos:line="46" pos:column="19"/></name></expr>)<pos:position pos:line="46" pos:column="20"/></condition><then pos:line="46" pos:column="20">
	  <block type="pseudo"><return pos:line="47" pos:column="11">return <expr><name pos:line="47" pos:column="18">result<pos:position pos:line="47" pos:column="24"/></name></expr>;<pos:position pos:line="47" pos:column="25"/></return></block></then></if>
	<break pos:line="48" pos:column="9">break;<pos:position pos:line="48" pos:column="15"/></break>
      }<pos:position pos:line="49" pos:column="8"/></block></then></if>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif<pos:position pos:line="50" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="50" pos:column="8">/* XML_DTD */</comment>
      <expr_stmt><expr><name pos:line="51" pos:column="7">eventPtr<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <name pos:line="51" pos:column="18">entityTextPtr<pos:position pos:line="51" pos:column="31"/></name></expr>;<pos:position pos:line="51" pos:column="32"/></expr_stmt>
      <return pos:line="52" pos:column="7">return <expr><name pos:line="52" pos:column="14">XML_ERROR_SYNTAX<pos:position pos:line="52" pos:column="30"/></name></expr>;<pos:position pos:line="52" pos:column="31"/></return>
    <case pos:line="53" pos:column="5">case <expr><name pos:line="53" pos:column="10">XML_TOK_NONE<pos:position pos:line="53" pos:column="22"/></name></expr>:<pos:position pos:line="53" pos:column="23"/></case>
      <return pos:line="54" pos:column="7">return <expr><name pos:line="54" pos:column="14">XML_ERROR_NONE<pos:position pos:line="54" pos:column="28"/></name></expr>;<pos:position pos:line="54" pos:column="29"/></return>
    <case pos:line="55" pos:column="5">case <expr><name pos:line="55" pos:column="10">XML_TOK_ENTITY_REF<pos:position pos:line="55" pos:column="28"/></name></expr>:<pos:position pos:line="55" pos:column="29"/></case>
    <case pos:line="56" pos:column="5">case <expr><name pos:line="56" pos:column="10">XML_TOK_DATA_CHARS<pos:position pos:line="56" pos:column="28"/></name></expr>:<pos:position pos:line="56" pos:column="29"/></case>
      <if pos:line="57" pos:column="7">if <condition pos:line="57" pos:column="10">(<expr><operator pos:line="57" pos:column="11">!<pos:position pos:line="57" pos:column="12"/></operator><call><name pos:line="57" pos:column="12">poolAppend<pos:position pos:line="57" pos:column="22"/></name><argument_list pos:line="57" pos:column="22">(<argument><expr><name pos:line="57" pos:column="23">pool<pos:position pos:line="57" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="29">enc<pos:position pos:line="57" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="34">entityTextPtr<pos:position pos:line="57" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="49">next<pos:position pos:line="57" pos:column="53"/></name></expr></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="55"/></condition><then pos:line="57" pos:column="55">
	<block type="pseudo"><return pos:line="58" pos:column="9">return <expr><name pos:line="58" pos:column="16">XML_ERROR_NO_MEMORY<pos:position pos:line="58" pos:column="35"/></name></expr>;<pos:position pos:line="58" pos:column="36"/></return></block></then></if>
      <break pos:line="59" pos:column="7">break;<pos:position pos:line="59" pos:column="13"/></break>
    <case pos:line="60" pos:column="5">case <expr><name pos:line="60" pos:column="10">XML_TOK_TRAILING_CR<pos:position pos:line="60" pos:column="29"/></name></expr>:<pos:position pos:line="60" pos:column="30"/></case>
      <expr_stmt><expr><name pos:line="61" pos:column="7">next<pos:position pos:line="61" pos:column="11"/></name> <operator pos:line="61" pos:column="12">=<pos:position pos:line="61" pos:column="13"/></operator> <name pos:line="61" pos:column="14">entityTextPtr<pos:position pos:line="61" pos:column="27"/></name> <operator pos:line="61" pos:column="28">+<pos:position pos:line="61" pos:column="29"/></operator> <name><name pos:line="61" pos:column="30">enc<pos:position pos:line="61" pos:column="33"/></name><operator pos:line="61" pos:column="33">-&gt;<pos:position pos:line="61" pos:column="38"/></operator><name pos:line="61" pos:column="35">minBytesPerChar<pos:position pos:line="61" pos:column="50"/></name></name></expr>;<pos:position pos:line="61" pos:column="51"/></expr_stmt>
      <comment type="block" pos:line="62" pos:column="7">/* fall through */</comment>
    <case pos:line="63" pos:column="5">case <expr><name pos:line="63" pos:column="10">XML_TOK_DATA_NEWLINE<pos:position pos:line="63" pos:column="30"/></name></expr>:<pos:position pos:line="63" pos:column="31"/></case>
      <if pos:line="64" pos:column="7">if <condition pos:line="64" pos:column="10">(<expr><name><name pos:line="64" pos:column="11">pool<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">-&gt;<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="17">end<pos:position pos:line="64" pos:column="20"/></name></name> <operator pos:line="64" pos:column="21">==<pos:position pos:line="64" pos:column="23"/></operator> <name><name pos:line="64" pos:column="24">pool<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">-&gt;<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="30">ptr<pos:position pos:line="64" pos:column="33"/></name></name> <operator pos:line="64" pos:column="34">&amp;&amp;<pos:position pos:line="64" pos:column="44"/></operator> <operator pos:line="64" pos:column="37">!<pos:position pos:line="64" pos:column="38"/></operator><call><name pos:line="64" pos:column="38">poolGrow<pos:position pos:line="64" pos:column="46"/></name><argument_list pos:line="64" pos:column="46">(<argument><expr><name pos:line="64" pos:column="47">pool<pos:position pos:line="64" pos:column="51"/></name></expr></argument>)<pos:position pos:line="64" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="53"/></condition><then pos:line="64" pos:column="53">
	<block type="pseudo"><return pos:line="65" pos:column="9">return <expr><name pos:line="65" pos:column="16">XML_ERROR_NO_MEMORY<pos:position pos:line="65" pos:column="35"/></name></expr>;<pos:position pos:line="65" pos:column="36"/></return></block></then></if>
      <expr_stmt><expr><operator pos:line="66" pos:column="7">*<pos:position pos:line="66" pos:column="8"/></operator><operator pos:line="66" pos:column="8">(<pos:position pos:line="66" pos:column="9"/></operator><name><name pos:line="66" pos:column="9">pool<pos:position pos:line="66" pos:column="13"/></name><operator pos:line="66" pos:column="13">-&gt;<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="15">ptr<pos:position pos:line="66" pos:column="18"/></name></name><operator pos:line="66" pos:column="18">)<pos:position pos:line="66" pos:column="19"/></operator><operator pos:line="66" pos:column="19">++<pos:position pos:line="66" pos:column="21"/></operator> <operator pos:line="66" pos:column="22">=<pos:position pos:line="66" pos:column="23"/></operator> <literal type="number" pos:line="66" pos:column="24">0xA<pos:position pos:line="66" pos:column="27"/></literal></expr>;<pos:position pos:line="66" pos:column="28"/></expr_stmt>
      <break pos:line="67" pos:column="7">break;<pos:position pos:line="67" pos:column="13"/></break>
    <case pos:line="68" pos:column="5">case <expr><name pos:line="68" pos:column="10">XML_TOK_CHAR_REF<pos:position pos:line="68" pos:column="26"/></name></expr>:<pos:position pos:line="68" pos:column="27"/></case>
      <block pos:line="69" pos:column="7">{
	<decl_stmt><decl><type><name pos:line="70" pos:column="9">XML_Char<pos:position pos:line="70" pos:column="17"/></name></type> <name><name pos:line="70" pos:column="18">buf<pos:position pos:line="70" pos:column="21"/></name><index pos:line="70" pos:column="21">[<expr><name pos:line="70" pos:column="22">XML_ENCODE_MAX<pos:position pos:line="70" pos:column="36"/></name></expr>]<pos:position pos:line="70" pos:column="37"/></index></name></decl>;<pos:position pos:line="70" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="71" pos:column="9">int<pos:position pos:line="71" pos:column="12"/></name></type> <name pos:line="71" pos:column="13">i<pos:position pos:line="71" pos:column="14"/></name></decl>;<pos:position pos:line="71" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="72" pos:column="9">int<pos:position pos:line="72" pos:column="12"/></name></type> <name pos:line="72" pos:column="13">n<pos:position pos:line="72" pos:column="14"/></name> <init pos:line="72" pos:column="15">= <expr><call><name pos:line="72" pos:column="17">XmlCharRefNumber<pos:position pos:line="72" pos:column="33"/></name><argument_list pos:line="72" pos:column="33">(<argument><expr><name pos:line="72" pos:column="34">enc<pos:position pos:line="72" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="39">entityTextPtr<pos:position pos:line="72" pos:column="52"/></name></expr></argument>)<pos:position pos:line="72" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="72" pos:column="54"/></decl_stmt>
	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">n<pos:position pos:line="73" pos:column="14"/></name> <operator pos:line="73" pos:column="15">&lt;<pos:position pos:line="73" pos:column="19"/></operator> <literal type="number" pos:line="73" pos:column="17">0<pos:position pos:line="73" pos:column="18"/></literal></expr>)<pos:position pos:line="73" pos:column="19"/></condition><then pos:line="73" pos:column="19"> <block pos:line="73" pos:column="20">{
	  <if pos:line="74" pos:column="11">if <condition pos:line="74" pos:column="14">(<expr><name pos:line="74" pos:column="15">enc<pos:position pos:line="74" pos:column="18"/></name> <operator pos:line="74" pos:column="19">==<pos:position pos:line="74" pos:column="21"/></operator> <name pos:line="74" pos:column="22">encoding<pos:position pos:line="74" pos:column="30"/></name></expr>)<pos:position pos:line="74" pos:column="31"/></condition><then pos:line="74" pos:column="31">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="13">eventPtr<pos:position pos:line="75" pos:column="21"/></name> <operator pos:line="75" pos:column="22">=<pos:position pos:line="75" pos:column="23"/></operator> <name pos:line="75" pos:column="24">entityTextPtr<pos:position pos:line="75" pos:column="37"/></name></expr>;<pos:position pos:line="75" pos:column="38"/></expr_stmt></block></then></if>
	  <return pos:line="76" pos:column="11">return <expr><name pos:line="76" pos:column="18">XML_ERROR_BAD_CHAR_REF<pos:position pos:line="76" pos:column="40"/></name></expr>;<pos:position pos:line="76" pos:column="41"/></return>
	}<pos:position pos:line="77" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="78" pos:column="9">n<pos:position pos:line="78" pos:column="10"/></name> <operator pos:line="78" pos:column="11">=<pos:position pos:line="78" pos:column="12"/></operator> <call><name pos:line="78" pos:column="13">XmlEncode<pos:position pos:line="78" pos:column="22"/></name><argument_list pos:line="78" pos:column="22">(<argument><expr><name pos:line="78" pos:column="23">n<pos:position pos:line="78" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="26">(<pos:position pos:line="78" pos:column="27"/></operator><name pos:line="78" pos:column="27">ICHAR<pos:position pos:line="78" pos:column="32"/></name> <operator pos:line="78" pos:column="33">*<pos:position pos:line="78" pos:column="34"/></operator><operator pos:line="78" pos:column="34">)<pos:position pos:line="78" pos:column="35"/></operator><name pos:line="78" pos:column="35">buf<pos:position pos:line="78" pos:column="38"/></name></expr></argument>)<pos:position pos:line="78" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="40"/></expr_stmt>
	<if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><operator pos:line="79" pos:column="13">!<pos:position pos:line="79" pos:column="14"/></operator><name pos:line="79" pos:column="14">n<pos:position pos:line="79" pos:column="15"/></name></expr>)<pos:position pos:line="79" pos:column="16"/></condition><then pos:line="79" pos:column="16"> <block pos:line="79" pos:column="17">{
	  <if pos:line="80" pos:column="11">if <condition pos:line="80" pos:column="14">(<expr><name pos:line="80" pos:column="15">enc<pos:position pos:line="80" pos:column="18"/></name> <operator pos:line="80" pos:column="19">==<pos:position pos:line="80" pos:column="21"/></operator> <name pos:line="80" pos:column="22">encoding<pos:position pos:line="80" pos:column="30"/></name></expr>)<pos:position pos:line="80" pos:column="31"/></condition><then pos:line="80" pos:column="31">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="81" pos:column="13">eventPtr<pos:position pos:line="81" pos:column="21"/></name> <operator pos:line="81" pos:column="22">=<pos:position pos:line="81" pos:column="23"/></operator> <name pos:line="81" pos:column="24">entityTextPtr<pos:position pos:line="81" pos:column="37"/></name></expr>;<pos:position pos:line="81" pos:column="38"/></expr_stmt></block></then></if>
	  <return pos:line="82" pos:column="11">return <expr><name pos:line="82" pos:column="18">XML_ERROR_BAD_CHAR_REF<pos:position pos:line="82" pos:column="40"/></name></expr>;<pos:position pos:line="82" pos:column="41"/></return>
	}<pos:position pos:line="83" pos:column="10"/></block></then></if>
	<for pos:line="84" pos:column="9">for <control pos:line="84" pos:column="13">(<init><expr><name pos:line="84" pos:column="14">i<pos:position pos:line="84" pos:column="15"/></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <literal type="number" pos:line="84" pos:column="18">0<pos:position pos:line="84" pos:column="19"/></literal></expr>;<pos:position pos:line="84" pos:column="20"/></init> <condition><expr><name pos:line="84" pos:column="21">i<pos:position pos:line="84" pos:column="22"/></name> <operator pos:line="84" pos:column="23">&lt;<pos:position pos:line="84" pos:column="27"/></operator> <name pos:line="84" pos:column="25">n<pos:position pos:line="84" pos:column="26"/></name></expr>;<pos:position pos:line="84" pos:column="27"/></condition> <incr><expr><name pos:line="84" pos:column="28">i<pos:position pos:line="84" pos:column="29"/></name><operator pos:line="84" pos:column="29">++<pos:position pos:line="84" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="84" pos:column="32"/></control> <block pos:line="84" pos:column="33">{
	  <if pos:line="85" pos:column="11">if <condition pos:line="85" pos:column="14">(<expr><name><name pos:line="85" pos:column="15">pool<pos:position pos:line="85" pos:column="19"/></name><operator pos:line="85" pos:column="19">-&gt;<pos:position pos:line="85" pos:column="24"/></operator><name pos:line="85" pos:column="21">end<pos:position pos:line="85" pos:column="24"/></name></name> <operator pos:line="85" pos:column="25">==<pos:position pos:line="85" pos:column="27"/></operator> <name><name pos:line="85" pos:column="28">pool<pos:position pos:line="85" pos:column="32"/></name><operator pos:line="85" pos:column="32">-&gt;<pos:position pos:line="85" pos:column="37"/></operator><name pos:line="85" pos:column="34">ptr<pos:position pos:line="85" pos:column="37"/></name></name> <operator pos:line="85" pos:column="38">&amp;&amp;<pos:position pos:line="85" pos:column="48"/></operator> <operator pos:line="85" pos:column="41">!<pos:position pos:line="85" pos:column="42"/></operator><call><name pos:line="85" pos:column="42">poolGrow<pos:position pos:line="85" pos:column="50"/></name><argument_list pos:line="85" pos:column="50">(<argument><expr><name pos:line="85" pos:column="51">pool<pos:position pos:line="85" pos:column="55"/></name></expr></argument>)<pos:position pos:line="85" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="57"/></condition><then pos:line="85" pos:column="57">
	    <block type="pseudo"><return pos:line="86" pos:column="13">return <expr><name pos:line="86" pos:column="20">XML_ERROR_NO_MEMORY<pos:position pos:line="86" pos:column="39"/></name></expr>;<pos:position pos:line="86" pos:column="40"/></return></block></then></if>
	  <expr_stmt><expr><operator pos:line="87" pos:column="11">*<pos:position pos:line="87" pos:column="12"/></operator><operator pos:line="87" pos:column="12">(<pos:position pos:line="87" pos:column="13"/></operator><name><name pos:line="87" pos:column="13">pool<pos:position pos:line="87" pos:column="17"/></name><operator pos:line="87" pos:column="17">-&gt;<pos:position pos:line="87" pos:column="22"/></operator><name pos:line="87" pos:column="19">ptr<pos:position pos:line="87" pos:column="22"/></name></name><operator pos:line="87" pos:column="22">)<pos:position pos:line="87" pos:column="23"/></operator><operator pos:line="87" pos:column="23">++<pos:position pos:line="87" pos:column="25"/></operator> <operator pos:line="87" pos:column="26">=<pos:position pos:line="87" pos:column="27"/></operator> <name><name pos:line="87" pos:column="28">buf<pos:position pos:line="87" pos:column="31"/></name><index pos:line="87" pos:column="31">[<expr><name pos:line="87" pos:column="32">i<pos:position pos:line="87" pos:column="33"/></name></expr>]<pos:position pos:line="87" pos:column="34"/></index></name></expr>;<pos:position pos:line="87" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="88" pos:column="10"/></block></for>
      }<pos:position pos:line="89" pos:column="8"/></block>
      <break pos:line="90" pos:column="7">break;<pos:position pos:line="90" pos:column="13"/></break>
    <case pos:line="91" pos:column="5">case <expr><name pos:line="91" pos:column="10">XML_TOK_PARTIAL<pos:position pos:line="91" pos:column="25"/></name></expr>:<pos:position pos:line="91" pos:column="26"/></case>
      <if pos:line="92" pos:column="7">if <condition pos:line="92" pos:column="10">(<expr><name pos:line="92" pos:column="11">enc<pos:position pos:line="92" pos:column="14"/></name> <operator pos:line="92" pos:column="15">==<pos:position pos:line="92" pos:column="17"/></operator> <name pos:line="92" pos:column="18">encoding<pos:position pos:line="92" pos:column="26"/></name></expr>)<pos:position pos:line="92" pos:column="27"/></condition><then pos:line="92" pos:column="27">
	<block type="pseudo"><expr_stmt><expr><name pos:line="93" pos:column="9">eventPtr<pos:position pos:line="93" pos:column="17"/></name> <operator pos:line="93" pos:column="18">=<pos:position pos:line="93" pos:column="19"/></operator> <name pos:line="93" pos:column="20">entityTextPtr<pos:position pos:line="93" pos:column="33"/></name></expr>;<pos:position pos:line="93" pos:column="34"/></expr_stmt></block></then></if>
      <return pos:line="94" pos:column="7">return <expr><name pos:line="94" pos:column="14">XML_ERROR_INVALID_TOKEN<pos:position pos:line="94" pos:column="37"/></name></expr>;<pos:position pos:line="94" pos:column="38"/></return>
    <case pos:line="95" pos:column="5">case <expr><name pos:line="95" pos:column="10">XML_TOK_INVALID<pos:position pos:line="95" pos:column="25"/></name></expr>:<pos:position pos:line="95" pos:column="26"/></case>
      <if pos:line="96" pos:column="7">if <condition pos:line="96" pos:column="10">(<expr><name pos:line="96" pos:column="11">enc<pos:position pos:line="96" pos:column="14"/></name> <operator pos:line="96" pos:column="15">==<pos:position pos:line="96" pos:column="17"/></operator> <name pos:line="96" pos:column="18">encoding<pos:position pos:line="96" pos:column="26"/></name></expr>)<pos:position pos:line="96" pos:column="27"/></condition><then pos:line="96" pos:column="27">
	<block type="pseudo"><expr_stmt><expr><name pos:line="97" pos:column="9">eventPtr<pos:position pos:line="97" pos:column="17"/></name> <operator pos:line="97" pos:column="18">=<pos:position pos:line="97" pos:column="19"/></operator> <name pos:line="97" pos:column="20">next<pos:position pos:line="97" pos:column="24"/></name></expr>;<pos:position pos:line="97" pos:column="25"/></expr_stmt></block></then></if>
      <return pos:line="98" pos:column="7">return <expr><name pos:line="98" pos:column="14">XML_ERROR_INVALID_TOKEN<pos:position pos:line="98" pos:column="37"/></name></expr>;<pos:position pos:line="98" pos:column="38"/></return>
    <default pos:line="99" pos:column="5">default:<pos:position pos:line="99" pos:column="13"/></default>
      <if pos:line="100" pos:column="7">if <condition pos:line="100" pos:column="10">(<expr><name pos:line="100" pos:column="11">enc<pos:position pos:line="100" pos:column="14"/></name> <operator pos:line="100" pos:column="15">==<pos:position pos:line="100" pos:column="17"/></operator> <name pos:line="100" pos:column="18">encoding<pos:position pos:line="100" pos:column="26"/></name></expr>)<pos:position pos:line="100" pos:column="27"/></condition><then pos:line="100" pos:column="27">
	<block type="pseudo"><expr_stmt><expr><name pos:line="101" pos:column="9">eventPtr<pos:position pos:line="101" pos:column="17"/></name> <operator pos:line="101" pos:column="18">=<pos:position pos:line="101" pos:column="19"/></operator> <name pos:line="101" pos:column="20">entityTextPtr<pos:position pos:line="101" pos:column="33"/></name></expr>;<pos:position pos:line="101" pos:column="34"/></expr_stmt></block></then></if>
      <return pos:line="102" pos:column="7">return <expr><name pos:line="102" pos:column="14">XML_ERROR_UNEXPECTED_STATE<pos:position pos:line="102" pos:column="40"/></name></expr>;<pos:position pos:line="102" pos:column="41"/></return>
    }<pos:position pos:line="103" pos:column="6"/></block></switch>
    <expr_stmt><expr><name pos:line="104" pos:column="5">entityTextPtr<pos:position pos:line="104" pos:column="18"/></name> <operator pos:line="104" pos:column="19">=<pos:position pos:line="104" pos:column="20"/></operator> <name pos:line="104" pos:column="21">next<pos:position pos:line="104" pos:column="25"/></name></expr>;<pos:position pos:line="104" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="105" pos:column="4"/></block></for>
  <comment type="block" pos:line="106" pos:column="3">/* not reached */</comment>
}<pos:position pos:line="107" pos:column="2"/></block></function></unit>

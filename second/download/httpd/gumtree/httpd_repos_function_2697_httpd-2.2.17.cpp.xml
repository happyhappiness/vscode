<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2697_httpd-2.2.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">conn_clean<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">void<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">data<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_memcache_conn_t<pos:position pos:line="3" pos:column="24"/></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">conn<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><name pos:line="3" pos:column="33">data<pos:position pos:line="3" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">iovec<pos:position pos:line="4" pos:column="17"/></name></name></type> <name><name pos:line="4" pos:column="18">vec<pos:position pos:line="4" pos:column="21"/></name><index pos:line="4" pos:column="21">[<expr><literal type="number" pos:line="4" pos:column="22">2<pos:position pos:line="4" pos:column="23"/></literal></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">written<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* send a quit message to the memcached server to be nice about it. */</comment>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">vec<pos:position pos:line="8" pos:column="8"/></name><index pos:line="8" pos:column="8">[<expr><literal type="number" pos:line="8" pos:column="9">0<pos:position pos:line="8" pos:column="10"/></literal></expr>]<pos:position pos:line="8" pos:column="11"/></index></name><operator pos:line="8" pos:column="11">.<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">iov_base<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <name pos:line="8" pos:column="23">MC_QUIT<pos:position pos:line="8" pos:column="30"/></name></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">vec<pos:position pos:line="9" pos:column="8"/></name><index pos:line="9" pos:column="8">[<expr><literal type="number" pos:line="9" pos:column="9">0<pos:position pos:line="9" pos:column="10"/></literal></expr>]<pos:position pos:line="9" pos:column="11"/></index></name><operator pos:line="9" pos:column="11">.<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">iov_len<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="22">MC_QUIT_LEN<pos:position pos:line="9" pos:column="33"/></name></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="11" pos:column="5">vec<pos:position pos:line="11" pos:column="8"/></name><index pos:line="11" pos:column="8">[<expr><literal type="number" pos:line="11" pos:column="9">1<pos:position pos:line="11" pos:column="10"/></literal></expr>]<pos:position pos:line="11" pos:column="11"/></index></name><operator pos:line="11" pos:column="11">.<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">iov_base<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">MC_EOL<pos:position pos:line="11" pos:column="29"/></name></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">vec<pos:position pos:line="12" pos:column="8"/></name><index pos:line="12" pos:column="8">[<expr><literal type="number" pos:line="12" pos:column="9">1<pos:position pos:line="12" pos:column="10"/></literal></expr>]<pos:position pos:line="12" pos:column="11"/></index></name><operator pos:line="12" pos:column="11">.<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">iov_len<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">MC_EOL_LEN<pos:position pos:line="12" pos:column="32"/></name></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
    
    <comment type="block" pos:line="14" pos:column="5">/* Return values not checked, since we just want to make it go away. */</comment>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">apr_socket_sendv<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name><name pos:line="15" pos:column="22">conn<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">sock<pos:position pos:line="15" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">vec<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="39">2<pos:position pos:line="15" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="42">&amp;<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="43">written<pos:position pos:line="15" pos:column="50"/></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">apr_socket_close<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name><name pos:line="16" pos:column="22">conn<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">sock<pos:position pos:line="16" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">conn<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">-&gt;<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="11">p<pos:position pos:line="18" pos:column="12"/></name></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">NULL<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt> <comment type="block" pos:line="18" pos:column="21">/* so that destructor does not destroy the pool again */</comment>

    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">APR_SUCCESS<pos:position pos:line="20" pos:column="23"/></name></expr>;<pos:position pos:line="20" pos:column="24"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1044.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">winnt_rewrite_args<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">process_rec<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">process<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/* Handle the following SCM aspects in this phase:
     *
     *   -k runservice [transition for WinNT, nothing for Win9x]
     *   -k install
     *   -k config
     *   -k uninstall
     *   -k stop
     *   -k shutdown (same as -k stop). Maintained for backward compatability.
     *
     * We can't leave this phase until we know our identity
     * and modify the command arguments appropriately.
     *
     * We do not care if the .conf file exists or is parsable when
     * attempting to stop or uninstall a service.
     */</comment>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">apr_status_t<pos:position pos:line="18" pos:column="17"/></name></type> <name pos:line="18" pos:column="18">rv<pos:position pos:line="18" pos:column="20"/></name></decl>;<pos:position pos:line="18" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name> <modifier pos:line="19" pos:column="10">*<pos:position pos:line="19" pos:column="11"/></modifier></type><name pos:line="19" pos:column="11">def_server_root<pos:position pos:line="19" pos:column="26"/></name></decl>;<pos:position pos:line="19" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">char<pos:position pos:line="20" pos:column="9"/></name> <modifier pos:line="20" pos:column="10">*<pos:position pos:line="20" pos:column="11"/></modifier></type><name pos:line="20" pos:column="11">binpath<pos:position pos:line="20" pos:column="18"/></name></decl>;<pos:position pos:line="20" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name></type> <name><name pos:line="21" pos:column="10">optbuf<pos:position pos:line="21" pos:column="16"/></name><index pos:line="21" pos:column="16">[<expr><literal type="number" pos:line="21" pos:column="17">3<pos:position pos:line="21" pos:column="18"/></literal></expr>]<pos:position pos:line="21" pos:column="19"/></index></name></decl>;<pos:position pos:line="21" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="22" pos:column="5">const<pos:position pos:line="22" pos:column="10"/></specifier> <name pos:line="22" pos:column="11">char<pos:position pos:line="22" pos:column="15"/></name> <modifier pos:line="22" pos:column="16">*<pos:position pos:line="22" pos:column="17"/></modifier></type><name pos:line="22" pos:column="17">optarg<pos:position pos:line="22" pos:column="23"/></name></decl>;<pos:position pos:line="22" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">int<pos:position pos:line="23" pos:column="8"/></name></type> <name pos:line="23" pos:column="9">fixed_args<pos:position pos:line="23" pos:column="19"/></name></decl>;<pos:position pos:line="23" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">char<pos:position pos:line="24" pos:column="9"/></name> <modifier pos:line="24" pos:column="10">*<pos:position pos:line="24" pos:column="11"/></modifier></type><name pos:line="24" pos:column="11">pid<pos:position pos:line="24" pos:column="14"/></name></decl>;<pos:position pos:line="24" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">apr_getopt_t<pos:position pos:line="25" pos:column="17"/></name> <modifier pos:line="25" pos:column="18">*<pos:position pos:line="25" pos:column="19"/></modifier></type><name pos:line="25" pos:column="19">opt<pos:position pos:line="25" pos:column="22"/></name></decl>;<pos:position pos:line="25" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">int<pos:position pos:line="26" pos:column="8"/></name></type> <name pos:line="26" pos:column="9">running_as_service<pos:position pos:line="26" pos:column="27"/></name> <init pos:line="26" pos:column="28">= <expr><literal type="number" pos:line="26" pos:column="30">1<pos:position pos:line="26" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">int<pos:position pos:line="27" pos:column="8"/></name></type> <name pos:line="27" pos:column="9">errout<pos:position pos:line="27" pos:column="15"/></name> <init pos:line="27" pos:column="16">= <expr><literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><name pos:line="29" pos:column="5">pconf<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <name><name pos:line="29" pos:column="13">process<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">-&gt;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="22">pconf<pos:position pos:line="29" pos:column="27"/></name></name></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="31" pos:column="5">osver<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">.<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="11">dwOSVersionInfoSize<pos:position pos:line="31" pos:column="30"/></name></name> <operator pos:line="31" pos:column="31">=<pos:position pos:line="31" pos:column="32"/></operator> <sizeof pos:line="31" pos:column="33">sizeof<argument_list pos:line="31" pos:column="39">(<argument><expr><name pos:line="31" pos:column="40">OSVERSIONINFO<pos:position pos:line="31" pos:column="53"/></name></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></sizeof></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">GetVersionEx<pos:position pos:line="32" pos:column="17"/></name><argument_list pos:line="32" pos:column="17">(<argument><expr><operator pos:line="32" pos:column="18">&amp;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="19">osver<pos:position pos:line="32" pos:column="24"/></name></expr></argument>)<pos:position pos:line="32" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="34" pos:column="5">/* AP_PARENT_PID is only valid in the child */</comment>
    <expr_stmt><expr><name pos:line="35" pos:column="5">pid<pos:position pos:line="35" pos:column="8"/></name> <operator pos:line="35" pos:column="9">=<pos:position pos:line="35" pos:column="10"/></operator> <call><name pos:line="35" pos:column="11">getenv<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><literal type="string" pos:line="35" pos:column="18">"AP_PARENT_PID"<pos:position pos:line="35" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">pid<pos:position pos:line="36" pos:column="12"/></name></expr>)<pos:position pos:line="36" pos:column="13"/></condition><then pos:line="36" pos:column="13">
    <block pos:line="37" pos:column="5">{
        <comment type="block" pos:line="38" pos:column="9">/* This is the child */</comment>
        <expr_stmt><expr><name pos:line="39" pos:column="9">my_pid<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">GetCurrentProcessId<pos:position pos:line="39" pos:column="37"/></name><argument_list pos:line="39" pos:column="37">()<pos:position pos:line="39" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="40" pos:column="9">parent_pid<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <operator pos:line="40" pos:column="22">(<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="23">DWORD<pos:position pos:line="40" pos:column="28"/></name><operator pos:line="40" pos:column="28">)<pos:position pos:line="40" pos:column="29"/></operator> <call><name pos:line="40" pos:column="30">atol<pos:position pos:line="40" pos:column="34"/></name><argument_list pos:line="40" pos:column="34">(<argument><expr><name pos:line="40" pos:column="35">pid<pos:position pos:line="40" pos:column="38"/></name></expr></argument>)<pos:position pos:line="40" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="40"/></expr_stmt>

        <comment type="block" pos:line="42" pos:column="9">/* Prevent holding open the (nonexistant) console */</comment>
        <expr_stmt><expr><name pos:line="43" pos:column="9">ap_real_exit_code<pos:position pos:line="43" pos:column="26"/></name> <operator pos:line="43" pos:column="27">=<pos:position pos:line="43" pos:column="28"/></operator> <literal type="number" pos:line="43" pos:column="29">0<pos:position pos:line="43" pos:column="30"/></literal></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>

        <comment type="block" pos:line="45" pos:column="9">/* The parent is responsible for providing the
         * COMPLETE ARGUMENTS REQUIRED to the child.
         *
         * No further argument parsing is needed, but
         * for good measure we will provide a simple
         * signal string for later testing.
         */</comment>
        <expr_stmt><expr><name pos:line="52" pos:column="9">signal_arg<pos:position pos:line="52" pos:column="19"/></name> <operator pos:line="52" pos:column="20">=<pos:position pos:line="52" pos:column="21"/></operator> <literal type="string" pos:line="52" pos:column="22">"runchild"<pos:position pos:line="52" pos:column="32"/></literal></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt>
        <return pos:line="53" pos:column="9">return;<pos:position pos:line="53" pos:column="16"/></return>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="56" pos:column="5">/* This is the parent, we have a long way to go :-) */</comment>
    <expr_stmt><expr><name pos:line="57" pos:column="5">parent_pid<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">=<pos:position pos:line="57" pos:column="17"/></operator> <name pos:line="57" pos:column="18">my_pid<pos:position pos:line="57" pos:column="24"/></name> <operator pos:line="57" pos:column="25">=<pos:position pos:line="57" pos:column="26"/></operator> <call><name pos:line="57" pos:column="27">GetCurrentProcessId<pos:position pos:line="57" pos:column="46"/></name><argument_list pos:line="57" pos:column="46">()<pos:position pos:line="57" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="49"/></expr_stmt>

    <comment type="block" pos:line="59" pos:column="5">/* This behavior is voided by setting real_exit_code to 0 */</comment>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">atexit<pos:position pos:line="60" pos:column="11"/></name><argument_list pos:line="60" pos:column="11">(<argument><expr><name pos:line="60" pos:column="12">hold_console_open_on_error<pos:position pos:line="60" pos:column="38"/></name></expr></argument>)<pos:position pos:line="60" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="62" pos:column="5">/* Rewrite process-&gt;argv[];
     *
     * strip out -k signal into signal_arg
     * strip out -n servicename and set the names
     * add default -d serverroot from the path of this executable
     *
     * The end result will look like:
     *
     * The invocation command (%0)
     *     The -d serverroot default from the running executable
     *         The requested service's (-n) registry ConfigArgs
     *             The WinNT SCM's StartService() args
     */</comment>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><operator pos:line="75" pos:column="9">(<pos:position pos:line="75" pos:column="10"/></operator><name pos:line="75" pos:column="10">rv<pos:position pos:line="75" pos:column="12"/></name> <operator pos:line="75" pos:column="13">=<pos:position pos:line="75" pos:column="14"/></operator> <call><name pos:line="75" pos:column="15">ap_os_proc_filepath<pos:position pos:line="75" pos:column="34"/></name><argument_list pos:line="75" pos:column="34">(<argument><expr><operator pos:line="75" pos:column="35">&amp;<pos:position pos:line="75" pos:column="40"/></operator><name pos:line="75" pos:column="36">binpath<pos:position pos:line="75" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="45">process<pos:position pos:line="75" pos:column="52"/></name><operator pos:line="75" pos:column="52">-&gt;<pos:position pos:line="75" pos:column="57"/></operator><name pos:line="75" pos:column="54">pconf<pos:position pos:line="75" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="60"/></argument_list></call><operator pos:line="75" pos:column="60">)<pos:position pos:line="75" pos:column="61"/></operator>
            <operator pos:line="76" pos:column="13">!=<pos:position pos:line="76" pos:column="15"/></operator> <name pos:line="76" pos:column="16">APR_SUCCESS<pos:position pos:line="76" pos:column="27"/></name></expr>)<pos:position pos:line="76" pos:column="28"/></condition><then pos:line="76" pos:column="28"> <block pos:line="76" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">ap_log_error<pos:position pos:line="77" pos:column="21"/></name><argument_list pos:line="77" pos:column="21">(<argument><expr><name pos:line="77" pos:column="22">APLOG_MARK<pos:position pos:line="77" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="77" pos:column="33">APLOG_CRIT<pos:position pos:line="77" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="45">rv<pos:position pos:line="77" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="49">NULL<pos:position pos:line="77" pos:column="53"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="78" pos:column="22">"Failed to get the full path of %s"<pos:position pos:line="78" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="59">process<pos:position pos:line="78" pos:column="66"/></name><operator pos:line="78" pos:column="66">-&gt;<pos:position pos:line="78" pos:column="71"/></operator><name pos:line="78" pos:column="68">argv<pos:position pos:line="78" pos:column="72"/></name><index pos:line="78" pos:column="72">[<expr><literal type="number" pos:line="78" pos:column="73">0<pos:position pos:line="78" pos:column="74"/></literal></expr>]<pos:position pos:line="78" pos:column="75"/></index></name></expr></argument>)<pos:position pos:line="78" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">exit<pos:position pos:line="79" pos:column="13"/></name><argument_list pos:line="79" pos:column="13">(<argument><expr><name pos:line="79" pos:column="14">APEXIT_INIT<pos:position pos:line="79" pos:column="25"/></name></expr></argument>)<pos:position pos:line="79" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="81" pos:column="5">/* WARNING: There is an implict assumption here that the
     * executable resides in ServerRoot or ServerRoot\bin
     */</comment>
    <expr_stmt><expr><name pos:line="84" pos:column="5">def_server_root<pos:position pos:line="84" pos:column="20"/></name> <operator pos:line="84" pos:column="21">=<pos:position pos:line="84" pos:column="22"/></operator> <operator pos:line="84" pos:column="23">(<pos:position pos:line="84" pos:column="24"/></operator><name pos:line="84" pos:column="24">char<pos:position pos:line="84" pos:column="28"/></name> <operator pos:line="84" pos:column="29">*<pos:position pos:line="84" pos:column="30"/></operator><operator pos:line="84" pos:column="30">)<pos:position pos:line="84" pos:column="31"/></operator> <call><name pos:line="84" pos:column="32">apr_filepath_name_get<pos:position pos:line="84" pos:column="53"/></name><argument_list pos:line="84" pos:column="53">(<argument><expr><name pos:line="84" pos:column="54">binpath<pos:position pos:line="84" pos:column="61"/></name></expr></argument>)<pos:position pos:line="84" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="63"/></expr_stmt>
    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><name pos:line="85" pos:column="9">def_server_root<pos:position pos:line="85" pos:column="24"/></name> <operator pos:line="85" pos:column="25">&gt;<pos:position pos:line="85" pos:column="29"/></operator> <name pos:line="85" pos:column="27">binpath<pos:position pos:line="85" pos:column="34"/></name></expr>)<pos:position pos:line="85" pos:column="35"/></condition><then pos:line="85" pos:column="35"> <block pos:line="85" pos:column="36">{
        <expr_stmt><expr><operator pos:line="86" pos:column="9">*<pos:position pos:line="86" pos:column="10"/></operator><operator pos:line="86" pos:column="10">(<pos:position pos:line="86" pos:column="11"/></operator><name pos:line="86" pos:column="11">def_server_root<pos:position pos:line="86" pos:column="26"/></name> <operator pos:line="86" pos:column="27">-<pos:position pos:line="86" pos:column="28"/></operator> <literal type="number" pos:line="86" pos:column="29">1<pos:position pos:line="86" pos:column="30"/></literal><operator pos:line="86" pos:column="30">)<pos:position pos:line="86" pos:column="31"/></operator> <operator pos:line="86" pos:column="32">=<pos:position pos:line="86" pos:column="33"/></operator> <literal type="char" pos:line="86" pos:column="34">'\0'<pos:position pos:line="86" pos:column="38"/></literal></expr>;<pos:position pos:line="86" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="87" pos:column="9">def_server_root<pos:position pos:line="87" pos:column="24"/></name> <operator pos:line="87" pos:column="25">=<pos:position pos:line="87" pos:column="26"/></operator> <operator pos:line="87" pos:column="27">(<pos:position pos:line="87" pos:column="28"/></operator><name pos:line="87" pos:column="28">char<pos:position pos:line="87" pos:column="32"/></name> <operator pos:line="87" pos:column="33">*<pos:position pos:line="87" pos:column="34"/></operator><operator pos:line="87" pos:column="34">)<pos:position pos:line="87" pos:column="35"/></operator> <call><name pos:line="87" pos:column="36">apr_filepath_name_get<pos:position pos:line="87" pos:column="57"/></name><argument_list pos:line="87" pos:column="57">(<argument><expr><name pos:line="87" pos:column="58">binpath<pos:position pos:line="87" pos:column="65"/></name></expr></argument>)<pos:position pos:line="87" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="67"/></expr_stmt>
        <if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><operator pos:line="88" pos:column="13">!<pos:position pos:line="88" pos:column="14"/></operator><call><name pos:line="88" pos:column="14">strcasecmp<pos:position pos:line="88" pos:column="24"/></name><argument_list pos:line="88" pos:column="24">(<argument><expr><name pos:line="88" pos:column="25">def_server_root<pos:position pos:line="88" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="42">"bin"<pos:position pos:line="88" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="49"/></condition><then pos:line="88" pos:column="49">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="89" pos:column="13">*<pos:position pos:line="89" pos:column="14"/></operator><operator pos:line="89" pos:column="14">(<pos:position pos:line="89" pos:column="15"/></operator><name pos:line="89" pos:column="15">def_server_root<pos:position pos:line="89" pos:column="30"/></name> <operator pos:line="89" pos:column="31">-<pos:position pos:line="89" pos:column="32"/></operator> <literal type="number" pos:line="89" pos:column="33">1<pos:position pos:line="89" pos:column="34"/></literal><operator pos:line="89" pos:column="34">)<pos:position pos:line="89" pos:column="35"/></operator> <operator pos:line="89" pos:column="36">=<pos:position pos:line="89" pos:column="37"/></operator> <literal type="char" pos:line="89" pos:column="38">'\0'<pos:position pos:line="89" pos:column="42"/></literal></expr>;<pos:position pos:line="89" pos:column="43"/></expr_stmt></block></then></if>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">apr_filepath_merge<pos:position pos:line="91" pos:column="23"/></name><argument_list pos:line="91" pos:column="23">(<argument><expr><operator pos:line="91" pos:column="24">&amp;<pos:position pos:line="91" pos:column="29"/></operator><name pos:line="91" pos:column="25">def_server_root<pos:position pos:line="91" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="42">NULL<pos:position pos:line="91" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="48">binpath<pos:position pos:line="91" pos:column="55"/></name></expr></argument>,
                       <argument><expr><name pos:line="92" pos:column="24">APR_FILEPATH_TRUENAME<pos:position pos:line="92" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="47">process<pos:position pos:line="92" pos:column="54"/></name><operator pos:line="92" pos:column="54">-&gt;<pos:position pos:line="92" pos:column="59"/></operator><name pos:line="92" pos:column="56">pool<pos:position pos:line="92" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="62"/></expr_stmt>

    <comment type="block" pos:line="94" pos:column="5">/* Use process-&gt;pool so that the rewritten argv
     * lasts for the lifetime of the server process,
     * because pconf will be destroyed after the
     * initial pre-flight of the config parser.
     */</comment>
    <expr_stmt><expr><name pos:line="99" pos:column="5">mpm_new_argv<pos:position pos:line="99" pos:column="17"/></name> <operator pos:line="99" pos:column="18">=<pos:position pos:line="99" pos:column="19"/></operator> <call><name pos:line="99" pos:column="20">apr_array_make<pos:position pos:line="99" pos:column="34"/></name><argument_list pos:line="99" pos:column="34">(<argument><expr><name><name pos:line="99" pos:column="35">process<pos:position pos:line="99" pos:column="42"/></name><operator pos:line="99" pos:column="42">-&gt;<pos:position pos:line="99" pos:column="47"/></operator><name pos:line="99" pos:column="44">pool<pos:position pos:line="99" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="50">process<pos:position pos:line="99" pos:column="57"/></name><operator pos:line="99" pos:column="57">-&gt;<pos:position pos:line="99" pos:column="62"/></operator><name pos:line="99" pos:column="59">argc<pos:position pos:line="99" pos:column="63"/></name></name> <operator pos:line="99" pos:column="64">+<pos:position pos:line="99" pos:column="65"/></operator> <literal type="number" pos:line="99" pos:column="66">2<pos:position pos:line="99" pos:column="67"/></literal></expr></argument>,
                                  <argument><expr><sizeof pos:line="100" pos:column="35">sizeof<argument_list pos:line="100" pos:column="41">(<argument><expr><specifier pos:line="100" pos:column="42">const<pos:position pos:line="100" pos:column="47"/></specifier> <name pos:line="100" pos:column="48">char<pos:position pos:line="100" pos:column="52"/></name> <operator pos:line="100" pos:column="53">*<pos:position pos:line="100" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="100" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="100" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="101" pos:column="5">*<pos:position pos:line="101" pos:column="6"/></operator><operator pos:line="101" pos:column="6">(<pos:position pos:line="101" pos:column="7"/></operator><specifier pos:line="101" pos:column="7">const<pos:position pos:line="101" pos:column="12"/></specifier> <name pos:line="101" pos:column="13">char<pos:position pos:line="101" pos:column="17"/></name> <operator pos:line="101" pos:column="18">*<pos:position pos:line="101" pos:column="19"/></operator><operator pos:line="101" pos:column="19">*<pos:position pos:line="101" pos:column="20"/></operator><operator pos:line="101" pos:column="20">)<pos:position pos:line="101" pos:column="21"/></operator><call><name pos:line="101" pos:column="21">apr_array_push<pos:position pos:line="101" pos:column="35"/></name><argument_list pos:line="101" pos:column="35">(<argument><expr><name pos:line="101" pos:column="36">mpm_new_argv<pos:position pos:line="101" pos:column="48"/></name></expr></argument>)<pos:position pos:line="101" pos:column="49"/></argument_list></call> <operator pos:line="101" pos:column="50">=<pos:position pos:line="101" pos:column="51"/></operator> <name><name pos:line="101" pos:column="52">process<pos:position pos:line="101" pos:column="59"/></name><operator pos:line="101" pos:column="59">-&gt;<pos:position pos:line="101" pos:column="64"/></operator><name pos:line="101" pos:column="61">argv<pos:position pos:line="101" pos:column="65"/></name><index pos:line="101" pos:column="65">[<expr><literal type="number" pos:line="101" pos:column="66">0<pos:position pos:line="101" pos:column="67"/></literal></expr>]<pos:position pos:line="101" pos:column="68"/></index></name></expr>;<pos:position pos:line="101" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="102" pos:column="5">*<pos:position pos:line="102" pos:column="6"/></operator><operator pos:line="102" pos:column="6">(<pos:position pos:line="102" pos:column="7"/></operator><specifier pos:line="102" pos:column="7">const<pos:position pos:line="102" pos:column="12"/></specifier> <name pos:line="102" pos:column="13">char<pos:position pos:line="102" pos:column="17"/></name> <operator pos:line="102" pos:column="18">*<pos:position pos:line="102" pos:column="19"/></operator><operator pos:line="102" pos:column="19">*<pos:position pos:line="102" pos:column="20"/></operator><operator pos:line="102" pos:column="20">)<pos:position pos:line="102" pos:column="21"/></operator><call><name pos:line="102" pos:column="21">apr_array_push<pos:position pos:line="102" pos:column="35"/></name><argument_list pos:line="102" pos:column="35">(<argument><expr><name pos:line="102" pos:column="36">mpm_new_argv<pos:position pos:line="102" pos:column="48"/></name></expr></argument>)<pos:position pos:line="102" pos:column="49"/></argument_list></call> <operator pos:line="102" pos:column="50">=<pos:position pos:line="102" pos:column="51"/></operator> <literal type="string" pos:line="102" pos:column="52">"-d"<pos:position pos:line="102" pos:column="56"/></literal></expr>;<pos:position pos:line="102" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="103" pos:column="5">*<pos:position pos:line="103" pos:column="6"/></operator><operator pos:line="103" pos:column="6">(<pos:position pos:line="103" pos:column="7"/></operator><specifier pos:line="103" pos:column="7">const<pos:position pos:line="103" pos:column="12"/></specifier> <name pos:line="103" pos:column="13">char<pos:position pos:line="103" pos:column="17"/></name> <operator pos:line="103" pos:column="18">*<pos:position pos:line="103" pos:column="19"/></operator><operator pos:line="103" pos:column="19">*<pos:position pos:line="103" pos:column="20"/></operator><operator pos:line="103" pos:column="20">)<pos:position pos:line="103" pos:column="21"/></operator><call><name pos:line="103" pos:column="21">apr_array_push<pos:position pos:line="103" pos:column="35"/></name><argument_list pos:line="103" pos:column="35">(<argument><expr><name pos:line="103" pos:column="36">mpm_new_argv<pos:position pos:line="103" pos:column="48"/></name></expr></argument>)<pos:position pos:line="103" pos:column="49"/></argument_list></call> <operator pos:line="103" pos:column="50">=<pos:position pos:line="103" pos:column="51"/></operator> <name pos:line="103" pos:column="52">def_server_root<pos:position pos:line="103" pos:column="67"/></name></expr>;<pos:position pos:line="103" pos:column="68"/></expr_stmt>

    <expr_stmt><expr><name pos:line="105" pos:column="5">fixed_args<pos:position pos:line="105" pos:column="15"/></name> <operator pos:line="105" pos:column="16">=<pos:position pos:line="105" pos:column="17"/></operator> <name><name pos:line="105" pos:column="18">mpm_new_argv<pos:position pos:line="105" pos:column="30"/></name><operator pos:line="105" pos:column="30">-&gt;<pos:position pos:line="105" pos:column="35"/></operator><name pos:line="105" pos:column="32">nelts<pos:position pos:line="105" pos:column="37"/></name></name></expr>;<pos:position pos:line="105" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="107" pos:column="5">optbuf<pos:position pos:line="107" pos:column="11"/></name><index pos:line="107" pos:column="11">[<expr><literal type="number" pos:line="107" pos:column="12">0<pos:position pos:line="107" pos:column="13"/></literal></expr>]<pos:position pos:line="107" pos:column="14"/></index></name> <operator pos:line="107" pos:column="15">=<pos:position pos:line="107" pos:column="16"/></operator> <literal type="char" pos:line="107" pos:column="17">'-'<pos:position pos:line="107" pos:column="20"/></literal></expr>;<pos:position pos:line="107" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="108" pos:column="5">optbuf<pos:position pos:line="108" pos:column="11"/></name><index pos:line="108" pos:column="11">[<expr><literal type="number" pos:line="108" pos:column="12">2<pos:position pos:line="108" pos:column="13"/></literal></expr>]<pos:position pos:line="108" pos:column="14"/></index></name> <operator pos:line="108" pos:column="15">=<pos:position pos:line="108" pos:column="16"/></operator> <literal type="char" pos:line="108" pos:column="17">'\0'<pos:position pos:line="108" pos:column="21"/></literal></expr>;<pos:position pos:line="108" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="109" pos:column="5">apr_getopt_init<pos:position pos:line="109" pos:column="20"/></name><argument_list pos:line="109" pos:column="20">(<argument><expr><operator pos:line="109" pos:column="21">&amp;<pos:position pos:line="109" pos:column="26"/></operator><name pos:line="109" pos:column="22">opt<pos:position pos:line="109" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="27">process<pos:position pos:line="109" pos:column="34"/></name><operator pos:line="109" pos:column="34">-&gt;<pos:position pos:line="109" pos:column="39"/></operator><name pos:line="109" pos:column="36">pool<pos:position pos:line="109" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="42">process<pos:position pos:line="109" pos:column="49"/></name><operator pos:line="109" pos:column="49">-&gt;<pos:position pos:line="109" pos:column="54"/></operator><name pos:line="109" pos:column="51">argc<pos:position pos:line="109" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="109" pos:column="57">(<pos:position pos:line="109" pos:column="58"/></operator><name pos:line="109" pos:column="58">char<pos:position pos:line="109" pos:column="62"/></name><operator pos:line="109" pos:column="62">*<pos:position pos:line="109" pos:column="63"/></operator><operator pos:line="109" pos:column="63">*<pos:position pos:line="109" pos:column="64"/></operator><operator pos:line="109" pos:column="64">)<pos:position pos:line="109" pos:column="65"/></operator> <name><name pos:line="109" pos:column="66">process<pos:position pos:line="109" pos:column="73"/></name><operator pos:line="109" pos:column="73">-&gt;<pos:position pos:line="109" pos:column="78"/></operator><name pos:line="109" pos:column="75">argv<pos:position pos:line="109" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="110" pos:column="5">opt<pos:position pos:line="110" pos:column="8"/></name><operator pos:line="110" pos:column="8">-&gt;<pos:position pos:line="110" pos:column="13"/></operator><name pos:line="110" pos:column="10">errfn<pos:position pos:line="110" pos:column="15"/></name></name> <operator pos:line="110" pos:column="16">=<pos:position pos:line="110" pos:column="17"/></operator> <name pos:line="110" pos:column="18">NULL<pos:position pos:line="110" pos:column="22"/></name></expr>;<pos:position pos:line="110" pos:column="23"/></expr_stmt>
    <while pos:line="111" pos:column="5">while <condition pos:line="111" pos:column="11">(<expr><operator pos:line="111" pos:column="12">(<pos:position pos:line="111" pos:column="13"/></operator><name pos:line="111" pos:column="13">rv<pos:position pos:line="111" pos:column="15"/></name> <operator pos:line="111" pos:column="16">=<pos:position pos:line="111" pos:column="17"/></operator> <call><name pos:line="111" pos:column="18">apr_getopt<pos:position pos:line="111" pos:column="28"/></name><argument_list pos:line="111" pos:column="28">(<argument><expr><name pos:line="111" pos:column="29">opt<pos:position pos:line="111" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="34">"wn:k:"<pos:position pos:line="111" pos:column="41"/></literal> <name pos:line="111" pos:column="42">AP_SERVER_BASEARGS<pos:position pos:line="111" pos:column="60"/></name></expr></argument>,
                            <argument><expr><name pos:line="112" pos:column="29">optbuf<pos:position pos:line="112" pos:column="35"/></name> <operator pos:line="112" pos:column="36">+<pos:position pos:line="112" pos:column="37"/></operator> <literal type="number" pos:line="112" pos:column="38">1<pos:position pos:line="112" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="112" pos:column="41">&amp;<pos:position pos:line="112" pos:column="46"/></operator><name pos:line="112" pos:column="42">optarg<pos:position pos:line="112" pos:column="48"/></name></expr></argument>)<pos:position pos:line="112" pos:column="49"/></argument_list></call><operator pos:line="112" pos:column="49">)<pos:position pos:line="112" pos:column="50"/></operator> <operator pos:line="112" pos:column="51">==<pos:position pos:line="112" pos:column="53"/></operator> <name pos:line="112" pos:column="54">APR_SUCCESS<pos:position pos:line="112" pos:column="65"/></name></expr>)<pos:position pos:line="112" pos:column="66"/></condition> <block pos:line="112" pos:column="67">{
        <switch pos:line="113" pos:column="9">switch <condition pos:line="113" pos:column="16">(<expr><name><name pos:line="113" pos:column="17">optbuf<pos:position pos:line="113" pos:column="23"/></name><index pos:line="113" pos:column="23">[<expr><literal type="number" pos:line="113" pos:column="24">1<pos:position pos:line="113" pos:column="25"/></literal></expr>]<pos:position pos:line="113" pos:column="26"/></index></name></expr>)<pos:position pos:line="113" pos:column="27"/></condition> <block pos:line="113" pos:column="28">{

        <comment type="block" pos:line="115" pos:column="9">/* Shortcuts; include the -w option to hold the window open on error.
         * This must not be toggled once we reset ap_real_exit_code to 0!
         */</comment>
        <case pos:line="118" pos:column="9">case <expr><literal type="char" pos:line="118" pos:column="14">'w'<pos:position pos:line="118" pos:column="17"/></literal></expr>:<pos:position pos:line="118" pos:column="18"/></case>
            <if pos:line="119" pos:column="13">if <condition pos:line="119" pos:column="16">(<expr><name pos:line="119" pos:column="17">ap_real_exit_code<pos:position pos:line="119" pos:column="34"/></name></expr>)<pos:position pos:line="119" pos:column="35"/></condition><then pos:line="119" pos:column="35">
                <block type="pseudo"><expr_stmt><expr><name pos:line="120" pos:column="17">ap_real_exit_code<pos:position pos:line="120" pos:column="34"/></name> <operator pos:line="120" pos:column="35">=<pos:position pos:line="120" pos:column="36"/></operator> <literal type="number" pos:line="120" pos:column="37">2<pos:position pos:line="120" pos:column="38"/></literal></expr>;<pos:position pos:line="120" pos:column="39"/></expr_stmt></block></then></if>
            <break pos:line="121" pos:column="13">break;<pos:position pos:line="121" pos:column="19"/></break>

        <case pos:line="123" pos:column="9">case <expr><literal type="char" pos:line="123" pos:column="14">'n'<pos:position pos:line="123" pos:column="17"/></literal></expr>:<pos:position pos:line="123" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="124" pos:column="13">service_set<pos:position pos:line="124" pos:column="24"/></name> <operator pos:line="124" pos:column="25">=<pos:position pos:line="124" pos:column="26"/></operator> <call><name pos:line="124" pos:column="27">mpm_service_set_name<pos:position pos:line="124" pos:column="47"/></name><argument_list pos:line="124" pos:column="47">(<argument><expr><name><name pos:line="124" pos:column="48">process<pos:position pos:line="124" pos:column="55"/></name><operator pos:line="124" pos:column="55">-&gt;<pos:position pos:line="124" pos:column="60"/></operator><name pos:line="124" pos:column="57">pool<pos:position pos:line="124" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="124" pos:column="63">&amp;<pos:position pos:line="124" pos:column="68"/></operator><name pos:line="124" pos:column="64">service_name<pos:position pos:line="124" pos:column="76"/></name></expr></argument>,
                                               <argument><expr><name pos:line="125" pos:column="48">optarg<pos:position pos:line="125" pos:column="54"/></name></expr></argument>)<pos:position pos:line="125" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="56"/></expr_stmt>
            <break pos:line="126" pos:column="13">break;<pos:position pos:line="126" pos:column="19"/></break>

        <case pos:line="128" pos:column="9">case <expr><literal type="char" pos:line="128" pos:column="14">'k'<pos:position pos:line="128" pos:column="17"/></literal></expr>:<pos:position pos:line="128" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="129" pos:column="13">signal_arg<pos:position pos:line="129" pos:column="23"/></name> <operator pos:line="129" pos:column="24">=<pos:position pos:line="129" pos:column="25"/></operator> <name pos:line="129" pos:column="26">optarg<pos:position pos:line="129" pos:column="32"/></name></expr>;<pos:position pos:line="129" pos:column="33"/></expr_stmt>
            <break pos:line="130" pos:column="13">break;<pos:position pos:line="130" pos:column="19"/></break>

        <case pos:line="132" pos:column="9">case <expr><literal type="char" pos:line="132" pos:column="14">'E'<pos:position pos:line="132" pos:column="17"/></literal></expr>:<pos:position pos:line="132" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="133" pos:column="13">errout<pos:position pos:line="133" pos:column="19"/></name> <operator pos:line="133" pos:column="20">=<pos:position pos:line="133" pos:column="21"/></operator> <literal type="number" pos:line="133" pos:column="22">1<pos:position pos:line="133" pos:column="23"/></literal></expr>;<pos:position pos:line="133" pos:column="24"/></expr_stmt>
            <comment type="block" pos:line="134" pos:column="13">/* Fall through so the Apache main() handles the 'E' arg */</comment>
        <default pos:line="135" pos:column="9">default:<pos:position pos:line="135" pos:column="17"/></default>
            <expr_stmt><expr><operator pos:line="136" pos:column="13">*<pos:position pos:line="136" pos:column="14"/></operator><operator pos:line="136" pos:column="14">(<pos:position pos:line="136" pos:column="15"/></operator><specifier pos:line="136" pos:column="15">const<pos:position pos:line="136" pos:column="20"/></specifier> <name pos:line="136" pos:column="21">char<pos:position pos:line="136" pos:column="25"/></name> <operator pos:line="136" pos:column="26">*<pos:position pos:line="136" pos:column="27"/></operator><operator pos:line="136" pos:column="27">*<pos:position pos:line="136" pos:column="28"/></operator><operator pos:line="136" pos:column="28">)<pos:position pos:line="136" pos:column="29"/></operator><call><name pos:line="136" pos:column="29">apr_array_push<pos:position pos:line="136" pos:column="43"/></name><argument_list pos:line="136" pos:column="43">(<argument><expr><name pos:line="136" pos:column="44">mpm_new_argv<pos:position pos:line="136" pos:column="56"/></name></expr></argument>)<pos:position pos:line="136" pos:column="57"/></argument_list></call> <operator pos:line="136" pos:column="58">=<pos:position pos:line="136" pos:column="59"/></operator>
                <call><name pos:line="137" pos:column="17">apr_pstrdup<pos:position pos:line="137" pos:column="28"/></name><argument_list pos:line="137" pos:column="28">(<argument><expr><name><name pos:line="137" pos:column="29">process<pos:position pos:line="137" pos:column="36"/></name><operator pos:line="137" pos:column="36">-&gt;<pos:position pos:line="137" pos:column="41"/></operator><name pos:line="137" pos:column="38">pool<pos:position pos:line="137" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="44">optbuf<pos:position pos:line="137" pos:column="50"/></name></expr></argument>)<pos:position pos:line="137" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="52"/></expr_stmt>

            <if pos:line="139" pos:column="13">if <condition pos:line="139" pos:column="16">(<expr><name pos:line="139" pos:column="17">optarg<pos:position pos:line="139" pos:column="23"/></name></expr>)<pos:position pos:line="139" pos:column="24"/></condition><then pos:line="139" pos:column="24"> <block pos:line="139" pos:column="25">{
                <expr_stmt><expr><operator pos:line="140" pos:column="17">*<pos:position pos:line="140" pos:column="18"/></operator><operator pos:line="140" pos:column="18">(<pos:position pos:line="140" pos:column="19"/></operator><specifier pos:line="140" pos:column="19">const<pos:position pos:line="140" pos:column="24"/></specifier> <name pos:line="140" pos:column="25">char<pos:position pos:line="140" pos:column="29"/></name> <operator pos:line="140" pos:column="30">*<pos:position pos:line="140" pos:column="31"/></operator><operator pos:line="140" pos:column="31">*<pos:position pos:line="140" pos:column="32"/></operator><operator pos:line="140" pos:column="32">)<pos:position pos:line="140" pos:column="33"/></operator><call><name pos:line="140" pos:column="33">apr_array_push<pos:position pos:line="140" pos:column="47"/></name><argument_list pos:line="140" pos:column="47">(<argument><expr><name pos:line="140" pos:column="48">mpm_new_argv<pos:position pos:line="140" pos:column="60"/></name></expr></argument>)<pos:position pos:line="140" pos:column="61"/></argument_list></call> <operator pos:line="140" pos:column="62">=<pos:position pos:line="140" pos:column="63"/></operator> <name pos:line="140" pos:column="64">optarg<pos:position pos:line="140" pos:column="70"/></name></expr>;<pos:position pos:line="140" pos:column="71"/></expr_stmt>
            }<pos:position pos:line="141" pos:column="14"/></block></then></if>
            <break pos:line="142" pos:column="13">break;<pos:position pos:line="142" pos:column="19"/></break>
        }<pos:position pos:line="143" pos:column="10"/></block></switch>
    }<pos:position pos:line="144" pos:column="6"/></block></while>

    <comment type="block" pos:line="146" pos:column="5">/* back up to capture the bad argument */</comment>
    <if pos:line="147" pos:column="5">if <condition pos:line="147" pos:column="8">(<expr><name pos:line="147" pos:column="9">rv<pos:position pos:line="147" pos:column="11"/></name> <operator pos:line="147" pos:column="12">==<pos:position pos:line="147" pos:column="14"/></operator> <name pos:line="147" pos:column="15">APR_BADCH<pos:position pos:line="147" pos:column="24"/></name> <operator pos:line="147" pos:column="25">||<pos:position pos:line="147" pos:column="27"/></operator> <name pos:line="147" pos:column="28">rv<pos:position pos:line="147" pos:column="30"/></name> <operator pos:line="147" pos:column="31">==<pos:position pos:line="147" pos:column="33"/></operator> <name pos:line="147" pos:column="34">APR_BADARG<pos:position pos:line="147" pos:column="44"/></name></expr>)<pos:position pos:line="147" pos:column="45"/></condition><then pos:line="147" pos:column="45"> <block pos:line="147" pos:column="46">{
        <expr_stmt><expr><name><name pos:line="148" pos:column="9">opt<pos:position pos:line="148" pos:column="12"/></name><operator pos:line="148" pos:column="12">-&gt;<pos:position pos:line="148" pos:column="17"/></operator><name pos:line="148" pos:column="14">ind<pos:position pos:line="148" pos:column="17"/></name></name><operator pos:line="148" pos:column="17">--<pos:position pos:line="148" pos:column="19"/></operator></expr>;<pos:position pos:line="148" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="149" pos:column="6"/></block></then></if>

    <while pos:line="151" pos:column="5">while <condition pos:line="151" pos:column="11">(<expr><name><name pos:line="151" pos:column="12">opt<pos:position pos:line="151" pos:column="15"/></name><operator pos:line="151" pos:column="15">-&gt;<pos:position pos:line="151" pos:column="20"/></operator><name pos:line="151" pos:column="17">ind<pos:position pos:line="151" pos:column="20"/></name></name> <operator pos:line="151" pos:column="21">&lt;<pos:position pos:line="151" pos:column="25"/></operator> <name><name pos:line="151" pos:column="23">opt<pos:position pos:line="151" pos:column="26"/></name><operator pos:line="151" pos:column="26">-&gt;<pos:position pos:line="151" pos:column="31"/></operator><name pos:line="151" pos:column="28">argc<pos:position pos:line="151" pos:column="32"/></name></name></expr>)<pos:position pos:line="151" pos:column="33"/></condition> <block pos:line="151" pos:column="34">{
        <expr_stmt><expr><operator pos:line="152" pos:column="9">*<pos:position pos:line="152" pos:column="10"/></operator><operator pos:line="152" pos:column="10">(<pos:position pos:line="152" pos:column="11"/></operator><specifier pos:line="152" pos:column="11">const<pos:position pos:line="152" pos:column="16"/></specifier> <name pos:line="152" pos:column="17">char<pos:position pos:line="152" pos:column="21"/></name> <operator pos:line="152" pos:column="22">*<pos:position pos:line="152" pos:column="23"/></operator><operator pos:line="152" pos:column="23">*<pos:position pos:line="152" pos:column="24"/></operator><operator pos:line="152" pos:column="24">)<pos:position pos:line="152" pos:column="25"/></operator><call><name pos:line="152" pos:column="25">apr_array_push<pos:position pos:line="152" pos:column="39"/></name><argument_list pos:line="152" pos:column="39">(<argument><expr><name pos:line="152" pos:column="40">mpm_new_argv<pos:position pos:line="152" pos:column="52"/></name></expr></argument>)<pos:position pos:line="152" pos:column="53"/></argument_list></call> <operator pos:line="152" pos:column="54">=<pos:position pos:line="152" pos:column="55"/></operator>
            <call><name pos:line="153" pos:column="13">apr_pstrdup<pos:position pos:line="153" pos:column="24"/></name><argument_list pos:line="153" pos:column="24">(<argument><expr><name><name pos:line="153" pos:column="25">process<pos:position pos:line="153" pos:column="32"/></name><operator pos:line="153" pos:column="32">-&gt;<pos:position pos:line="153" pos:column="37"/></operator><name pos:line="153" pos:column="34">pool<pos:position pos:line="153" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="153" pos:column="40">opt<pos:position pos:line="153" pos:column="43"/></name><operator pos:line="153" pos:column="43">-&gt;<pos:position pos:line="153" pos:column="48"/></operator><name pos:line="153" pos:column="45">argv<pos:position pos:line="153" pos:column="49"/></name><index pos:line="153" pos:column="49">[<expr><name><name pos:line="153" pos:column="50">opt<pos:position pos:line="153" pos:column="53"/></name><operator pos:line="153" pos:column="53">-&gt;<pos:position pos:line="153" pos:column="58"/></operator><name pos:line="153" pos:column="55">ind<pos:position pos:line="153" pos:column="58"/></name></name><operator pos:line="153" pos:column="58">++<pos:position pos:line="153" pos:column="60"/></operator></expr>]<pos:position pos:line="153" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="153" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="154" pos:column="6"/></block></while>

    <comment type="block" pos:line="156" pos:column="5">/* Track the number of args actually entered by the user */</comment>
    <expr_stmt><expr><name pos:line="157" pos:column="5">inst_argc<pos:position pos:line="157" pos:column="14"/></name> <operator pos:line="157" pos:column="15">=<pos:position pos:line="157" pos:column="16"/></operator> <name><name pos:line="157" pos:column="17">mpm_new_argv<pos:position pos:line="157" pos:column="29"/></name><operator pos:line="157" pos:column="29">-&gt;<pos:position pos:line="157" pos:column="34"/></operator><name pos:line="157" pos:column="31">nelts<pos:position pos:line="157" pos:column="36"/></name></name> <operator pos:line="157" pos:column="37">-<pos:position pos:line="157" pos:column="38"/></operator> <name pos:line="157" pos:column="39">fixed_args<pos:position pos:line="157" pos:column="49"/></name></expr>;<pos:position pos:line="157" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="159" pos:column="5">/* Provide a default 'run' -k arg to simplify signal_arg tests */</comment>
    <if pos:line="160" pos:column="5">if <condition pos:line="160" pos:column="8">(<expr><operator pos:line="160" pos:column="9">!<pos:position pos:line="160" pos:column="10"/></operator><name pos:line="160" pos:column="10">signal_arg<pos:position pos:line="160" pos:column="20"/></name></expr>)<pos:position pos:line="160" pos:column="21"/></condition><then pos:line="160" pos:column="21">
    <block pos:line="161" pos:column="5">{
        <expr_stmt><expr><name pos:line="162" pos:column="9">signal_arg<pos:position pos:line="162" pos:column="19"/></name> <operator pos:line="162" pos:column="20">=<pos:position pos:line="162" pos:column="21"/></operator> <literal type="string" pos:line="162" pos:column="22">"run"<pos:position pos:line="162" pos:column="27"/></literal></expr>;<pos:position pos:line="162" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="163" pos:column="9">running_as_service<pos:position pos:line="163" pos:column="27"/></name> <operator pos:line="163" pos:column="28">=<pos:position pos:line="163" pos:column="29"/></operator> <literal type="number" pos:line="163" pos:column="30">0<pos:position pos:line="163" pos:column="31"/></literal></expr>;<pos:position pos:line="163" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="164" pos:column="6"/></block></then></if>

    <if pos:line="166" pos:column="5">if <condition pos:line="166" pos:column="8">(<expr><operator pos:line="166" pos:column="9">!<pos:position pos:line="166" pos:column="10"/></operator><call><name pos:line="166" pos:column="10">strcasecmp<pos:position pos:line="166" pos:column="20"/></name><argument_list pos:line="166" pos:column="20">(<argument><expr><name pos:line="166" pos:column="21">signal_arg<pos:position pos:line="166" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="33">"runservice"<pos:position pos:line="166" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="166" pos:column="47"/></condition><then pos:line="166" pos:column="47">
    <block pos:line="167" pos:column="5">{
        <comment type="block" pos:line="168" pos:column="9">/* Start the NT Service _NOW_ because the WinNT SCM is
         * expecting us to rapidly assume control of our own
         * process, the SCM will tell us our service name, and
         * may have extra StartService() command arguments to
         * add for us.
         *
         * The SCM will generally invoke the executable with
         * the c:\win\system32 default directory.  This is very
         * lethal if folks use ServerRoot /foopath on windows
         * without a drive letter.  Change to the default root
         * (path to apache root, above /bin) for safety.
         */</comment>
        <expr_stmt><expr><call><name pos:line="180" pos:column="9">apr_filepath_set<pos:position pos:line="180" pos:column="25"/></name><argument_list pos:line="180" pos:column="25">(<argument><expr><name pos:line="180" pos:column="26">def_server_root<pos:position pos:line="180" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="180" pos:column="43">process<pos:position pos:line="180" pos:column="50"/></name><operator pos:line="180" pos:column="50">-&gt;<pos:position pos:line="180" pos:column="55"/></operator><name pos:line="180" pos:column="52">pool<pos:position pos:line="180" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="180" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="58"/></expr_stmt>

        <comment type="block" pos:line="182" pos:column="9">/* Any other process has a console, so we don't to begin
         * a Win9x service until the configuration is parsed and
         * any command line errors are reported.
         *
         * We hold the return value so that we can die in pre_config
         * after logging begins, and the failure can land in the log.
         */</comment>
        <if pos:line="189" pos:column="9">if <condition pos:line="189" pos:column="12">(<expr><name><name pos:line="189" pos:column="13">osver<pos:position pos:line="189" pos:column="18"/></name><operator pos:line="189" pos:column="18">.<pos:position pos:line="189" pos:column="19"/></operator><name pos:line="189" pos:column="19">dwPlatformId<pos:position pos:line="189" pos:column="31"/></name></name> <operator pos:line="189" pos:column="32">==<pos:position pos:line="189" pos:column="34"/></operator> <name pos:line="189" pos:column="35">VER_PLATFORM_WIN32_NT<pos:position pos:line="189" pos:column="56"/></name></expr>)<pos:position pos:line="189" pos:column="57"/></condition><then pos:line="189" pos:column="57">
        <block pos:line="190" pos:column="9">{
            <if pos:line="191" pos:column="13">if <condition pos:line="191" pos:column="16">(<expr><operator pos:line="191" pos:column="17">!<pos:position pos:line="191" pos:column="18"/></operator><name pos:line="191" pos:column="18">errout<pos:position pos:line="191" pos:column="24"/></name></expr>)<pos:position pos:line="191" pos:column="25"/></condition><then pos:line="191" pos:column="25"> <block pos:line="191" pos:column="26">{
                <expr_stmt><expr><call><name pos:line="192" pos:column="17">mpm_nt_eventlog_stderr_open<pos:position pos:line="192" pos:column="44"/></name><argument_list pos:line="192" pos:column="44">(<argument><expr><name pos:line="192" pos:column="45">service_name<pos:position pos:line="192" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="192" pos:column="59">process<pos:position pos:line="192" pos:column="66"/></name><operator pos:line="192" pos:column="66">-&gt;<pos:position pos:line="192" pos:column="71"/></operator><name pos:line="192" pos:column="68">pool<pos:position pos:line="192" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="192" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="74"/></expr_stmt>
            }<pos:position pos:line="193" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="194" pos:column="13">service_to_start_success<pos:position pos:line="194" pos:column="37"/></name> <operator pos:line="194" pos:column="38">=<pos:position pos:line="194" pos:column="39"/></operator> <call><name pos:line="194" pos:column="40">mpm_service_to_start<pos:position pos:line="194" pos:column="60"/></name><argument_list pos:line="194" pos:column="60">(<argument><expr><operator pos:line="194" pos:column="61">&amp;<pos:position pos:line="194" pos:column="66"/></operator><name pos:line="194" pos:column="62">service_name<pos:position pos:line="194" pos:column="74"/></name></expr></argument>,
                                                            <argument><expr><name><name pos:line="195" pos:column="61">process<pos:position pos:line="195" pos:column="68"/></name><operator pos:line="195" pos:column="68">-&gt;<pos:position pos:line="195" pos:column="73"/></operator><name pos:line="195" pos:column="70">pool<pos:position pos:line="195" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="195" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="76"/></expr_stmt>
            <if pos:line="196" pos:column="13">if <condition pos:line="196" pos:column="16">(<expr><name pos:line="196" pos:column="17">service_to_start_success<pos:position pos:line="196" pos:column="41"/></name> <operator pos:line="196" pos:column="42">==<pos:position pos:line="196" pos:column="44"/></operator> <name pos:line="196" pos:column="45">APR_SUCCESS<pos:position pos:line="196" pos:column="56"/></name></expr>)<pos:position pos:line="196" pos:column="57"/></condition><then pos:line="196" pos:column="57"> <block pos:line="196" pos:column="58">{
                <expr_stmt><expr><name pos:line="197" pos:column="17">service_set<pos:position pos:line="197" pos:column="28"/></name> <operator pos:line="197" pos:column="29">=<pos:position pos:line="197" pos:column="30"/></operator> <name pos:line="197" pos:column="31">APR_SUCCESS<pos:position pos:line="197" pos:column="42"/></name></expr>;<pos:position pos:line="197" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="198" pos:column="14"/></block></then></if>
        }<pos:position pos:line="199" pos:column="10"/></block></then></if>
    }<pos:position pos:line="200" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="202" pos:column="5">/* Get the default for any -k option, except run */</comment>
    <if pos:line="203" pos:column="5">if <condition pos:line="203" pos:column="8">(<expr><name pos:line="203" pos:column="9">service_set<pos:position pos:line="203" pos:column="20"/></name> <operator pos:line="203" pos:column="21">==<pos:position pos:line="203" pos:column="23"/></operator> <name pos:line="203" pos:column="24">SERVICE_UNSET<pos:position pos:line="203" pos:column="37"/></name> <operator pos:line="203" pos:column="38">&amp;&amp;<pos:position pos:line="203" pos:column="48"/></operator> <call><name pos:line="203" pos:column="41">strcasecmp<pos:position pos:line="203" pos:column="51"/></name><argument_list pos:line="203" pos:column="51">(<argument><expr><name pos:line="203" pos:column="52">signal_arg<pos:position pos:line="203" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="203" pos:column="64">"run"<pos:position pos:line="203" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="203" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="203" pos:column="71"/></condition><then pos:line="203" pos:column="71"> <block pos:line="203" pos:column="72">{
        <expr_stmt><expr><name pos:line="204" pos:column="9">service_set<pos:position pos:line="204" pos:column="20"/></name> <operator pos:line="204" pos:column="21">=<pos:position pos:line="204" pos:column="22"/></operator> <call><name pos:line="204" pos:column="23">mpm_service_set_name<pos:position pos:line="204" pos:column="43"/></name><argument_list pos:line="204" pos:column="43">(<argument><expr><name><name pos:line="204" pos:column="44">process<pos:position pos:line="204" pos:column="51"/></name><operator pos:line="204" pos:column="51">-&gt;<pos:position pos:line="204" pos:column="56"/></operator><name pos:line="204" pos:column="53">pool<pos:position pos:line="204" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="204" pos:column="59">&amp;<pos:position pos:line="204" pos:column="64"/></operator><name pos:line="204" pos:column="60">service_name<pos:position pos:line="204" pos:column="72"/></name></expr></argument>,
                                           <argument><expr><name pos:line="205" pos:column="44">AP_DEFAULT_SERVICE_NAME<pos:position pos:line="205" pos:column="67"/></name></expr></argument>)<pos:position pos:line="205" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="206" pos:column="6"/></block></then></if>

    <if pos:line="208" pos:column="5">if <condition pos:line="208" pos:column="8">(<expr><operator pos:line="208" pos:column="9">!<pos:position pos:line="208" pos:column="10"/></operator><call><name pos:line="208" pos:column="10">strcasecmp<pos:position pos:line="208" pos:column="20"/></name><argument_list pos:line="208" pos:column="20">(<argument><expr><name pos:line="208" pos:column="21">signal_arg<pos:position pos:line="208" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="208" pos:column="33">"install"<pos:position pos:line="208" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="208" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="208" pos:column="44"/></condition><then pos:line="208" pos:column="44"> <comment type="block" pos:line="208" pos:column="45">/* -k install */</comment>
    <block pos:line="209" pos:column="5">{
        <if pos:line="210" pos:column="9">if <condition pos:line="210" pos:column="12">(<expr><name pos:line="210" pos:column="13">service_set<pos:position pos:line="210" pos:column="24"/></name> <operator pos:line="210" pos:column="25">==<pos:position pos:line="210" pos:column="27"/></operator> <name pos:line="210" pos:column="28">APR_SUCCESS<pos:position pos:line="210" pos:column="39"/></name></expr>)<pos:position pos:line="210" pos:column="40"/></condition><then pos:line="210" pos:column="40">
        <block pos:line="211" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="212" pos:column="13">ap_log_error<pos:position pos:line="212" pos:column="25"/></name><argument_list pos:line="212" pos:column="25">(<argument><expr><name pos:line="212" pos:column="26">APLOG_MARK<pos:position pos:line="212" pos:column="36"/></name></expr></argument>,<argument><expr><name pos:line="212" pos:column="37">APLOG_ERR<pos:position pos:line="212" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="212" pos:column="48">0<pos:position pos:line="212" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="212" pos:column="51">NULL<pos:position pos:line="212" pos:column="55"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="213" pos:column="18">"%s: Service is already installed."<pos:position pos:line="213" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="213" pos:column="55">service_name<pos:position pos:line="213" pos:column="67"/></name></expr></argument>)<pos:position pos:line="213" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="214" pos:column="13">exit<pos:position pos:line="214" pos:column="17"/></name><argument_list pos:line="214" pos:column="17">(<argument><expr><name pos:line="214" pos:column="18">APEXIT_INIT<pos:position pos:line="214" pos:column="29"/></name></expr></argument>)<pos:position pos:line="214" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="215" pos:column="10"/></block></then></if>
    }<pos:position pos:line="216" pos:column="6"/></block></then>
    <elseif pos:line="217" pos:column="5">else <if pos:line="217" pos:column="10">if <condition pos:line="217" pos:column="13">(<expr><name pos:line="217" pos:column="14">running_as_service<pos:position pos:line="217" pos:column="32"/></name></expr>)<pos:position pos:line="217" pos:column="33"/></condition><then pos:line="217" pos:column="33">
    <block pos:line="218" pos:column="5">{
        <if pos:line="219" pos:column="9">if <condition pos:line="219" pos:column="12">(<expr><name pos:line="219" pos:column="13">service_set<pos:position pos:line="219" pos:column="24"/></name> <operator pos:line="219" pos:column="25">==<pos:position pos:line="219" pos:column="27"/></operator> <name pos:line="219" pos:column="28">APR_SUCCESS<pos:position pos:line="219" pos:column="39"/></name></expr>)<pos:position pos:line="219" pos:column="40"/></condition><then pos:line="219" pos:column="40">
        <block pos:line="220" pos:column="9">{
            <comment type="block" pos:line="221" pos:column="13">/* Attempt to Uninstall, or stop, before
             * we can read the arguments or .conf files
             */</comment>
            <if pos:line="224" pos:column="13">if <condition pos:line="224" pos:column="16">(<expr><operator pos:line="224" pos:column="17">!<pos:position pos:line="224" pos:column="18"/></operator><call><name pos:line="224" pos:column="18">strcasecmp<pos:position pos:line="224" pos:column="28"/></name><argument_list pos:line="224" pos:column="28">(<argument><expr><name pos:line="224" pos:column="29">signal_arg<pos:position pos:line="224" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="224" pos:column="41">"uninstall"<pos:position pos:line="224" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="224" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="224" pos:column="54"/></condition><then pos:line="224" pos:column="54"> <block pos:line="224" pos:column="55">{
                <expr_stmt><expr><name pos:line="225" pos:column="17">rv<pos:position pos:line="225" pos:column="19"/></name> <operator pos:line="225" pos:column="20">=<pos:position pos:line="225" pos:column="21"/></operator> <call><name pos:line="225" pos:column="22">mpm_service_uninstall<pos:position pos:line="225" pos:column="43"/></name><argument_list pos:line="225" pos:column="43">()<pos:position pos:line="225" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="226" pos:column="17">exit<pos:position pos:line="226" pos:column="21"/></name><argument_list pos:line="226" pos:column="21">(<argument><expr><name pos:line="226" pos:column="22">rv<pos:position pos:line="226" pos:column="24"/></name></expr></argument>)<pos:position pos:line="226" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="227" pos:column="14"/></block></then></if>

            <if pos:line="229" pos:column="13">if <condition pos:line="229" pos:column="16">(<expr><operator pos:line="229" pos:column="17">(<pos:position pos:line="229" pos:column="18"/></operator><operator pos:line="229" pos:column="18">!<pos:position pos:line="229" pos:column="19"/></operator><call><name pos:line="229" pos:column="19">strcasecmp<pos:position pos:line="229" pos:column="29"/></name><argument_list pos:line="229" pos:column="29">(<argument><expr><name pos:line="229" pos:column="30">signal_arg<pos:position pos:line="229" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="229" pos:column="42">"stop"<pos:position pos:line="229" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="229" pos:column="49"/></argument_list></call><operator pos:line="229" pos:column="49">)<pos:position pos:line="229" pos:column="50"/></operator> <operator pos:line="229" pos:column="51">||<pos:position pos:line="229" pos:column="53"/></operator>
                <operator pos:line="230" pos:column="17">(<pos:position pos:line="230" pos:column="18"/></operator><operator pos:line="230" pos:column="18">!<pos:position pos:line="230" pos:column="19"/></operator><call><name pos:line="230" pos:column="19">strcasecmp<pos:position pos:line="230" pos:column="29"/></name><argument_list pos:line="230" pos:column="29">(<argument><expr><name pos:line="230" pos:column="30">signal_arg<pos:position pos:line="230" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="230" pos:column="42">"shutdown"<pos:position pos:line="230" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="230" pos:column="53"/></argument_list></call><operator pos:line="230" pos:column="53">)<pos:position pos:line="230" pos:column="54"/></operator></expr>)<pos:position pos:line="230" pos:column="55"/></condition><then pos:line="230" pos:column="55"> <block pos:line="230" pos:column="56">{
                <expr_stmt><expr><call><name pos:line="231" pos:column="17">mpm_signal_service<pos:position pos:line="231" pos:column="35"/></name><argument_list pos:line="231" pos:column="35">(<argument><expr><name><name pos:line="231" pos:column="36">process<pos:position pos:line="231" pos:column="43"/></name><operator pos:line="231" pos:column="43">-&gt;<pos:position pos:line="231" pos:column="48"/></operator><name pos:line="231" pos:column="45">pool<pos:position pos:line="231" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="231" pos:column="51">0<pos:position pos:line="231" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="231" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="232" pos:column="17">exit<pos:position pos:line="232" pos:column="21"/></name><argument_list pos:line="232" pos:column="21">(<argument><expr><literal type="number" pos:line="232" pos:column="22">0<pos:position pos:line="232" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="232" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="233" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="235" pos:column="13">rv<pos:position pos:line="235" pos:column="15"/></name> <operator pos:line="235" pos:column="16">=<pos:position pos:line="235" pos:column="17"/></operator> <call><name pos:line="235" pos:column="18">mpm_merge_service_args<pos:position pos:line="235" pos:column="40"/></name><argument_list pos:line="235" pos:column="40">(<argument><expr><name><name pos:line="235" pos:column="41">process<pos:position pos:line="235" pos:column="48"/></name><operator pos:line="235" pos:column="48">-&gt;<pos:position pos:line="235" pos:column="53"/></operator><name pos:line="235" pos:column="50">pool<pos:position pos:line="235" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="56">mpm_new_argv<pos:position pos:line="235" pos:column="68"/></name></expr></argument>,
                                        <argument><expr><name pos:line="236" pos:column="41">fixed_args<pos:position pos:line="236" pos:column="51"/></name></expr></argument>)<pos:position pos:line="236" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="53"/></expr_stmt>
            <if pos:line="237" pos:column="13">if <condition pos:line="237" pos:column="16">(<expr><name pos:line="237" pos:column="17">rv<pos:position pos:line="237" pos:column="19"/></name> <operator pos:line="237" pos:column="20">==<pos:position pos:line="237" pos:column="22"/></operator> <name pos:line="237" pos:column="23">APR_SUCCESS<pos:position pos:line="237" pos:column="34"/></name></expr>)<pos:position pos:line="237" pos:column="35"/></condition><then pos:line="237" pos:column="35"> <block pos:line="237" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="238" pos:column="17">ap_log_error<pos:position pos:line="238" pos:column="29"/></name><argument_list pos:line="238" pos:column="29">(<argument><expr><name pos:line="238" pos:column="30">APLOG_MARK<pos:position pos:line="238" pos:column="40"/></name></expr></argument>,<argument><expr><name pos:line="238" pos:column="41">APLOG_INFO<pos:position pos:line="238" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="238" pos:column="53">0<pos:position pos:line="238" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="238" pos:column="56">NULL<pos:position pos:line="238" pos:column="60"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="239" pos:column="30">"Using ConfigArgs of the installed service "<pos:position pos:line="239" pos:column="74"/></literal>
                             <literal type="string" pos:line="240" pos:column="30">"\"%s\"."<pos:position pos:line="240" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="240" pos:column="41">service_name<pos:position pos:line="240" pos:column="53"/></name></expr></argument>)<pos:position pos:line="240" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="55"/></expr_stmt>
            }<pos:position pos:line="241" pos:column="14"/></block></then>
            <else pos:line="242" pos:column="13">else  <block pos:line="242" pos:column="19">{
                <expr_stmt><expr><call><name pos:line="243" pos:column="17">ap_log_error<pos:position pos:line="243" pos:column="29"/></name><argument_list pos:line="243" pos:column="29">(<argument><expr><name pos:line="243" pos:column="30">APLOG_MARK<pos:position pos:line="243" pos:column="40"/></name></expr></argument>,<argument><expr><name pos:line="243" pos:column="41">APLOG_WARNING<pos:position pos:line="243" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="56">rv<pos:position pos:line="243" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="60">NULL<pos:position pos:line="243" pos:column="64"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="244" pos:column="30">"No installed ConfigArgs for the service "<pos:position pos:line="244" pos:column="72"/></literal>
                             <literal type="string" pos:line="245" pos:column="30">"\"%s\", using Apache defaults."<pos:position pos:line="245" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="245" pos:column="64">service_name<pos:position pos:line="245" pos:column="76"/></name></expr></argument>)<pos:position pos:line="245" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="78"/></expr_stmt>
            }<pos:position pos:line="246" pos:column="14"/></block></else></if>
        }<pos:position pos:line="247" pos:column="10"/></block></then>
        <else pos:line="248" pos:column="9">else
        <block pos:line="249" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="250" pos:column="13">ap_log_error<pos:position pos:line="250" pos:column="25"/></name><argument_list pos:line="250" pos:column="25">(<argument><expr><name pos:line="250" pos:column="26">APLOG_MARK<pos:position pos:line="250" pos:column="36"/></name></expr></argument>,<argument><expr><name pos:line="250" pos:column="37">APLOG_ERR<pos:position pos:line="250" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="250" pos:column="48">service_set<pos:position pos:line="250" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="250" pos:column="61">NULL<pos:position pos:line="250" pos:column="65"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="251" pos:column="18">"No installed service named \"%s\"."<pos:position pos:line="251" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="251" pos:column="56">service_name<pos:position pos:line="251" pos:column="68"/></name></expr></argument>)<pos:position pos:line="251" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="252" pos:column="13">exit<pos:position pos:line="252" pos:column="17"/></name><argument_list pos:line="252" pos:column="17">(<argument><expr><name pos:line="252" pos:column="18">APEXIT_INIT<pos:position pos:line="252" pos:column="29"/></name></expr></argument>)<pos:position pos:line="252" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="253" pos:column="10"/></block></else></if>
    }<pos:position pos:line="254" pos:column="6"/></block></then></if></elseif></if>
    <if pos:line="255" pos:column="5">if <condition pos:line="255" pos:column="8">(<expr><call><name pos:line="255" pos:column="9">strcasecmp<pos:position pos:line="255" pos:column="19"/></name><argument_list pos:line="255" pos:column="19">(<argument><expr><name pos:line="255" pos:column="20">signal_arg<pos:position pos:line="255" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="255" pos:column="32">"install"<pos:position pos:line="255" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="255" pos:column="42"/></argument_list></call> <operator pos:line="255" pos:column="43">&amp;&amp;<pos:position pos:line="255" pos:column="53"/></operator> <name pos:line="255" pos:column="46">service_set<pos:position pos:line="255" pos:column="57"/></name> <operator pos:line="255" pos:column="58">&amp;&amp;<pos:position pos:line="255" pos:column="68"/></operator> <name pos:line="255" pos:column="61">service_set<pos:position pos:line="255" pos:column="72"/></name> <operator pos:line="255" pos:column="73">!=<pos:position pos:line="255" pos:column="75"/></operator> <name pos:line="255" pos:column="76">SERVICE_UNSET<pos:position pos:line="255" pos:column="89"/></name></expr>)<pos:position pos:line="255" pos:column="90"/></condition><then pos:line="255" pos:column="90">
    <block pos:line="256" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="257" pos:column="9">ap_log_error<pos:position pos:line="257" pos:column="21"/></name><argument_list pos:line="257" pos:column="21">(<argument><expr><name pos:line="257" pos:column="22">APLOG_MARK<pos:position pos:line="257" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="257" pos:column="33">APLOG_ERR<pos:position pos:line="257" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="44">service_set<pos:position pos:line="257" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="57">NULL<pos:position pos:line="257" pos:column="61"/></name></expr></argument>,
             <argument><expr><literal type="string" pos:line="258" pos:column="14">"No installed service named \"%s\"."<pos:position pos:line="258" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="258" pos:column="52">service_name<pos:position pos:line="258" pos:column="64"/></name></expr></argument>)<pos:position pos:line="258" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="259" pos:column="9">exit<pos:position pos:line="259" pos:column="13"/></name><argument_list pos:line="259" pos:column="13">(<argument><expr><name pos:line="259" pos:column="14">APEXIT_INIT<pos:position pos:line="259" pos:column="25"/></name></expr></argument>)<pos:position pos:line="259" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="260" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="262" pos:column="5">/* Track the args actually entered by the user.
     * These will be used for the -k install parameters, as well as
     * for the -k start service override arguments.
     */</comment>
    <expr_stmt><expr><name pos:line="266" pos:column="5">inst_argv<pos:position pos:line="266" pos:column="14"/></name> <operator pos:line="266" pos:column="15">=<pos:position pos:line="266" pos:column="16"/></operator> <operator pos:line="266" pos:column="17">(<pos:position pos:line="266" pos:column="18"/></operator><specifier pos:line="266" pos:column="18">const<pos:position pos:line="266" pos:column="23"/></specifier> <name pos:line="266" pos:column="24">char<pos:position pos:line="266" pos:column="28"/></name> <operator pos:line="266" pos:column="29">*<pos:position pos:line="266" pos:column="30"/></operator> <specifier pos:line="266" pos:column="31">const<pos:position pos:line="266" pos:column="36"/></specifier> <operator pos:line="266" pos:column="37">*<pos:position pos:line="266" pos:column="38"/></operator><operator pos:line="266" pos:column="38">)<pos:position pos:line="266" pos:column="39"/></operator><name><name pos:line="266" pos:column="39">mpm_new_argv<pos:position pos:line="266" pos:column="51"/></name><operator pos:line="266" pos:column="51">-&gt;<pos:position pos:line="266" pos:column="56"/></operator><name pos:line="266" pos:column="53">elts<pos:position pos:line="266" pos:column="57"/></name></name>
        <operator pos:line="267" pos:column="9">+<pos:position pos:line="267" pos:column="10"/></operator> <name><name pos:line="267" pos:column="11">mpm_new_argv<pos:position pos:line="267" pos:column="23"/></name><operator pos:line="267" pos:column="23">-&gt;<pos:position pos:line="267" pos:column="28"/></operator><name pos:line="267" pos:column="25">nelts<pos:position pos:line="267" pos:column="30"/></name></name> <operator pos:line="267" pos:column="31">-<pos:position pos:line="267" pos:column="32"/></operator> <name pos:line="267" pos:column="33">inst_argc<pos:position pos:line="267" pos:column="42"/></name></expr>;<pos:position pos:line="267" pos:column="43"/></expr_stmt>

    <comment type="block" pos:line="269" pos:column="5">/* Now, do service install or reconfigure then proceed to
     * post_config to test the installed configuration.
     */</comment>
    <if pos:line="272" pos:column="5">if <condition pos:line="272" pos:column="8">(<expr><operator pos:line="272" pos:column="9">!<pos:position pos:line="272" pos:column="10"/></operator><call><name pos:line="272" pos:column="10">strcasecmp<pos:position pos:line="272" pos:column="20"/></name><argument_list pos:line="272" pos:column="20">(<argument><expr><name pos:line="272" pos:column="21">signal_arg<pos:position pos:line="272" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="272" pos:column="33">"config"<pos:position pos:line="272" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="272" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="272" pos:column="43"/></condition><then pos:line="272" pos:column="43"> <block pos:line="272" pos:column="44">{ <comment type="block" pos:line="272" pos:column="46">/* -k config */</comment>
        <comment type="block" pos:line="273" pos:column="9">/* Reconfigure the service */</comment>
        <expr_stmt><expr><name pos:line="274" pos:column="9">rv<pos:position pos:line="274" pos:column="11"/></name> <operator pos:line="274" pos:column="12">=<pos:position pos:line="274" pos:column="13"/></operator> <call><name pos:line="274" pos:column="14">mpm_service_install<pos:position pos:line="274" pos:column="33"/></name><argument_list pos:line="274" pos:column="33">(<argument><expr><name><name pos:line="274" pos:column="34">process<pos:position pos:line="274" pos:column="41"/></name><operator pos:line="274" pos:column="41">-&gt;<pos:position pos:line="274" pos:column="46"/></operator><name pos:line="274" pos:column="43">pool<pos:position pos:line="274" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="274" pos:column="49">inst_argc<pos:position pos:line="274" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="274" pos:column="60">inst_argv<pos:position pos:line="274" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="274" pos:column="71">1<pos:position pos:line="274" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="274" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="74"/></expr_stmt>
        <if pos:line="275" pos:column="9">if <condition pos:line="275" pos:column="12">(<expr><name pos:line="275" pos:column="13">rv<pos:position pos:line="275" pos:column="15"/></name> <operator pos:line="275" pos:column="16">!=<pos:position pos:line="275" pos:column="18"/></operator> <name pos:line="275" pos:column="19">APR_SUCCESS<pos:position pos:line="275" pos:column="30"/></name></expr>)<pos:position pos:line="275" pos:column="31"/></condition><then pos:line="275" pos:column="31"> <block pos:line="275" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="276" pos:column="13">exit<pos:position pos:line="276" pos:column="17"/></name><argument_list pos:line="276" pos:column="17">(<argument><expr><name pos:line="276" pos:column="18">rv<pos:position pos:line="276" pos:column="20"/></name></expr></argument>)<pos:position pos:line="276" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="277" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="279" pos:column="9">fprintf<pos:position pos:line="279" pos:column="16"/></name><argument_list pos:line="279" pos:column="16">(<argument><expr><name pos:line="279" pos:column="17">stderr<pos:position pos:line="279" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="279" pos:column="24">"Testing httpd.conf....\n"<pos:position pos:line="279" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="279" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="280" pos:column="9">fprintf<pos:position pos:line="280" pos:column="16"/></name><argument_list pos:line="280" pos:column="16">(<argument><expr><name pos:line="280" pos:column="17">stderr<pos:position pos:line="280" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="280" pos:column="24">"Errors reported here must be corrected before the "<pos:position pos:line="280" pos:column="76"/></literal>
                <literal type="string" pos:line="281" pos:column="17">"service can be started.\n"<pos:position pos:line="281" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="281" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="282" pos:column="6"/></block></then>
    <elseif pos:line="283" pos:column="5">else <if pos:line="283" pos:column="10">if <condition pos:line="283" pos:column="13">(<expr><operator pos:line="283" pos:column="14">!<pos:position pos:line="283" pos:column="15"/></operator><call><name pos:line="283" pos:column="15">strcasecmp<pos:position pos:line="283" pos:column="25"/></name><argument_list pos:line="283" pos:column="25">(<argument><expr><name pos:line="283" pos:column="26">signal_arg<pos:position pos:line="283" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="283" pos:column="38">"install"<pos:position pos:line="283" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="283" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="283" pos:column="49"/></condition><then pos:line="283" pos:column="49"> <block pos:line="283" pos:column="50">{ <comment type="block" pos:line="283" pos:column="52">/* -k install */</comment>
        <comment type="block" pos:line="284" pos:column="9">/* Install the service */</comment>
        <expr_stmt><expr><name pos:line="285" pos:column="9">rv<pos:position pos:line="285" pos:column="11"/></name> <operator pos:line="285" pos:column="12">=<pos:position pos:line="285" pos:column="13"/></operator> <call><name pos:line="285" pos:column="14">mpm_service_install<pos:position pos:line="285" pos:column="33"/></name><argument_list pos:line="285" pos:column="33">(<argument><expr><name><name pos:line="285" pos:column="34">process<pos:position pos:line="285" pos:column="41"/></name><operator pos:line="285" pos:column="41">-&gt;<pos:position pos:line="285" pos:column="46"/></operator><name pos:line="285" pos:column="43">pool<pos:position pos:line="285" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="49">inst_argc<pos:position pos:line="285" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="60">inst_argv<pos:position pos:line="285" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="285" pos:column="71">0<pos:position pos:line="285" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="285" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="74"/></expr_stmt>
        <if pos:line="286" pos:column="9">if <condition pos:line="286" pos:column="12">(<expr><name pos:line="286" pos:column="13">rv<pos:position pos:line="286" pos:column="15"/></name> <operator pos:line="286" pos:column="16">!=<pos:position pos:line="286" pos:column="18"/></operator> <name pos:line="286" pos:column="19">APR_SUCCESS<pos:position pos:line="286" pos:column="30"/></name></expr>)<pos:position pos:line="286" pos:column="31"/></condition><then pos:line="286" pos:column="31"> <block pos:line="286" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="287" pos:column="13">exit<pos:position pos:line="287" pos:column="17"/></name><argument_list pos:line="287" pos:column="17">(<argument><expr><name pos:line="287" pos:column="18">rv<pos:position pos:line="287" pos:column="20"/></name></expr></argument>)<pos:position pos:line="287" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="287" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="288" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="290" pos:column="9">fprintf<pos:position pos:line="290" pos:column="16"/></name><argument_list pos:line="290" pos:column="16">(<argument><expr><name pos:line="290" pos:column="17">stderr<pos:position pos:line="290" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="290" pos:column="24">"Testing httpd.conf....\n"<pos:position pos:line="290" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="290" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="291" pos:column="9">fprintf<pos:position pos:line="291" pos:column="16"/></name><argument_list pos:line="291" pos:column="16">(<argument><expr><name pos:line="291" pos:column="17">stderr<pos:position pos:line="291" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="291" pos:column="24">"Errors reported here must be corrected before the "<pos:position pos:line="291" pos:column="76"/></literal>
                <literal type="string" pos:line="292" pos:column="17">"service can be started.\n"<pos:position pos:line="292" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="292" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="293" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><name><name pos:line="295" pos:column="5">process<pos:position pos:line="295" pos:column="12"/></name><operator pos:line="295" pos:column="12">-&gt;<pos:position pos:line="295" pos:column="17"/></operator><name pos:line="295" pos:column="14">argc<pos:position pos:line="295" pos:column="18"/></name></name> <operator pos:line="295" pos:column="19">=<pos:position pos:line="295" pos:column="20"/></operator> <name><name pos:line="295" pos:column="21">mpm_new_argv<pos:position pos:line="295" pos:column="33"/></name><operator pos:line="295" pos:column="33">-&gt;<pos:position pos:line="295" pos:column="38"/></operator><name pos:line="295" pos:column="35">nelts<pos:position pos:line="295" pos:column="40"/></name></name></expr>;<pos:position pos:line="295" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="296" pos:column="5">process<pos:position pos:line="296" pos:column="12"/></name><operator pos:line="296" pos:column="12">-&gt;<pos:position pos:line="296" pos:column="17"/></operator><name pos:line="296" pos:column="14">argv<pos:position pos:line="296" pos:column="18"/></name></name> <operator pos:line="296" pos:column="19">=<pos:position pos:line="296" pos:column="20"/></operator> <operator pos:line="296" pos:column="21">(<pos:position pos:line="296" pos:column="22"/></operator><specifier pos:line="296" pos:column="22">const<pos:position pos:line="296" pos:column="27"/></specifier> <name pos:line="296" pos:column="28">char<pos:position pos:line="296" pos:column="32"/></name> <operator pos:line="296" pos:column="33">*<pos:position pos:line="296" pos:column="34"/></operator> <specifier pos:line="296" pos:column="35">const<pos:position pos:line="296" pos:column="40"/></specifier> <operator pos:line="296" pos:column="41">*<pos:position pos:line="296" pos:column="42"/></operator><operator pos:line="296" pos:column="42">)<pos:position pos:line="296" pos:column="43"/></operator> <name><name pos:line="296" pos:column="44">mpm_new_argv<pos:position pos:line="296" pos:column="56"/></name><operator pos:line="296" pos:column="56">-&gt;<pos:position pos:line="296" pos:column="61"/></operator><name pos:line="296" pos:column="58">elts<pos:position pos:line="296" pos:column="62"/></name></name></expr>;<pos:position pos:line="296" pos:column="63"/></expr_stmt>
}<pos:position pos:line="297" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5125.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ap_mpm_child_main<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">apr_pool_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">pconf<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ap_listen_rec<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">lr<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><name pos:line="3" pos:column="25">NULL<pos:position pos:line="3" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">requests_this_child<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><literal type="number" pos:line="4" pos:column="31">0<pos:position pos:line="4" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">rv<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">long<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">ulTimes<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">my_pid<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><call><name pos:line="7" pos:column="18">getpid<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">()<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ULONG<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">rc<pos:position pos:line="8" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="15">c<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">HQUEUE<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">workq<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_pollset_t<pos:position pos:line="10" pos:column="18"/></name> <modifier pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></modifier></type><name pos:line="10" pos:column="20">pollset<pos:position pos:line="10" pos:column="27"/></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">num_listeners<pos:position pos:line="11" pos:column="22"/></name></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">TID<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">server_maint_tid<pos:position pos:line="12" pos:column="25"/></name></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">void<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">sb_mem<pos:position pos:line="13" pos:column="17"/></name></decl>;<pos:position pos:line="13" pos:column="18"/></decl_stmt>

    <comment type="block" pos:line="15" pos:column="5">/* Stop Ctrl-C/Ctrl-Break signals going to child processes */</comment>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">DosSetSignalExceptionFocus<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><literal type="number" pos:line="16" pos:column="32">0<pos:position pos:line="16" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="35">&amp;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="36">ulTimes<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">set_signals<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">()<pos:position pos:line="17" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* Create pool for child */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">apr_pool_create<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><operator pos:line="20" pos:column="21">&amp;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="22">pchild<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="30">pconf<pos:position pos:line="20" pos:column="35"/></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">ap_run_child_init<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">pchild<pos:position pos:line="22" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="31">ap_server_conf<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>

    <comment type="block" pos:line="24" pos:column="5">/* Create an event semaphore used to trigger other threads to shutdown */</comment>
    <expr_stmt><expr><name pos:line="25" pos:column="5">rc<pos:position pos:line="25" pos:column="7"/></name> <operator pos:line="25" pos:column="8">=<pos:position pos:line="25" pos:column="9"/></operator> <call><name pos:line="25" pos:column="10">DosCreateEventSem<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">NULL<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="34">&amp;<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="35">shutdown_event<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="51">0<pos:position pos:line="25" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="54">FALSE<pos:position pos:line="25" pos:column="59"/></name></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="61"/></expr_stmt>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">rc<pos:position pos:line="27" pos:column="11"/></name></expr>)<pos:position pos:line="27" pos:column="12"/></condition><then pos:line="27" pos:column="12"> <block pos:line="27" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">ap_log_error<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name pos:line="28" pos:column="22">APLOG_MARK<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="34">APLOG_ERR<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="45">APR_FROM_OS_ERROR<pos:position pos:line="28" pos:column="62"/></name><argument_list pos:line="28" pos:column="62">(<argument><expr><name pos:line="28" pos:column="63">rc<pos:position pos:line="28" pos:column="65"/></name></expr></argument>)<pos:position pos:line="28" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="28" pos:column="68">ap_server_conf<pos:position pos:line="28" pos:column="82"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="29" pos:column="22">"unable to create shutdown semaphore, exiting"<pos:position pos:line="29" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">clean_child_exit<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">APEXIT_CHILDFATAL<pos:position pos:line="30" pos:column="43"/></name></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="33" pos:column="5">/* Gain access to the scoreboard. */</comment>
    <expr_stmt><expr><name pos:line="34" pos:column="5">rc<pos:position pos:line="34" pos:column="7"/></name> <operator pos:line="34" pos:column="8">=<pos:position pos:line="34" pos:column="9"/></operator> <call><name pos:line="34" pos:column="10">DosGetNamedSharedMem<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><operator pos:line="34" pos:column="31">&amp;<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="32">sb_mem<pos:position pos:line="34" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="40">ap_scoreboard_fname<pos:position pos:line="34" pos:column="59"/></name></expr></argument>,
                              <argument><expr><name pos:line="35" pos:column="31">PAG_READ<pos:position pos:line="35" pos:column="39"/></name><operator pos:line="35" pos:column="39">|<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="40">PAG_WRITE<pos:position pos:line="35" pos:column="49"/></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">rc<pos:position pos:line="37" pos:column="11"/></name></expr>)<pos:position pos:line="37" pos:column="12"/></condition><then pos:line="37" pos:column="12"> <block pos:line="37" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">ap_log_error<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">APLOG_MARK<pos:position pos:line="38" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="34">APLOG_ERR<pos:position pos:line="38" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="45">APR_FROM_OS_ERROR<pos:position pos:line="38" pos:column="62"/></name><argument_list pos:line="38" pos:column="62">(<argument><expr><name pos:line="38" pos:column="63">rc<pos:position pos:line="38" pos:column="65"/></name></expr></argument>)<pos:position pos:line="38" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="38" pos:column="68">ap_server_conf<pos:position pos:line="38" pos:column="82"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="39" pos:column="22">"scoreboard not readable in child, exiting"<pos:position pos:line="39" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">clean_child_exit<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">APEXIT_CHILDFATAL<pos:position pos:line="40" pos:column="43"/></name></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">ap_calc_scoreboard_size<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">()<pos:position pos:line="43" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">ap_init_scoreboard<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><name pos:line="44" pos:column="24">sb_mem<pos:position pos:line="44" pos:column="30"/></name></expr></argument>)<pos:position pos:line="44" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="46" pos:column="5">/* Gain access to the accpet mutex */</comment>
    <expr_stmt><expr><name pos:line="47" pos:column="5">rc<pos:position pos:line="47" pos:column="7"/></name> <operator pos:line="47" pos:column="8">=<pos:position pos:line="47" pos:column="9"/></operator> <call><name pos:line="47" pos:column="10">DosOpenMutexSem<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><name pos:line="47" pos:column="26">NULL<pos:position pos:line="47" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="32">&amp;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="33">ap_mpm_accept_mutex<pos:position pos:line="47" pos:column="52"/></name></expr></argument>)<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="54"/></expr_stmt>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">rc<pos:position pos:line="49" pos:column="11"/></name></expr>)<pos:position pos:line="49" pos:column="12"/></condition><then pos:line="49" pos:column="12"> <block pos:line="49" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">ap_log_error<pos:position pos:line="50" pos:column="21"/></name><argument_list pos:line="50" pos:column="21">(<argument><expr><name pos:line="50" pos:column="22">APLOG_MARK<pos:position pos:line="50" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="34">APLOG_ERR<pos:position pos:line="50" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="45">APR_FROM_OS_ERROR<pos:position pos:line="50" pos:column="62"/></name><argument_list pos:line="50" pos:column="62">(<argument><expr><name pos:line="50" pos:column="63">rc<pos:position pos:line="50" pos:column="65"/></name></expr></argument>)<pos:position pos:line="50" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="50" pos:column="68">ap_server_conf<pos:position pos:line="50" pos:column="82"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="51" pos:column="22">"accept mutex couldn't be accessed in child, exiting"<pos:position pos:line="51" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">clean_child_exit<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><name pos:line="52" pos:column="26">APEXIT_CHILDFATAL<pos:position pos:line="52" pos:column="43"/></name></expr></argument>)<pos:position pos:line="52" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="55" pos:column="5">/* Find our pid in the scoreboard so we know what slot our parent allocated us */</comment>
    <for pos:line="56" pos:column="5">for <control pos:line="56" pos:column="9">(<init><expr><name pos:line="56" pos:column="10">child_slot<pos:position pos:line="56" pos:column="20"/></name> <operator pos:line="56" pos:column="21">=<pos:position pos:line="56" pos:column="22"/></operator> <literal type="number" pos:line="56" pos:column="23">0<pos:position pos:line="56" pos:column="24"/></literal></expr>;<pos:position pos:line="56" pos:column="25"/></init> <condition><expr><name><name pos:line="56" pos:column="26">ap_scoreboard_image<pos:position pos:line="56" pos:column="45"/></name><operator pos:line="56" pos:column="45">-&gt;<pos:position pos:line="56" pos:column="50"/></operator><name pos:line="56" pos:column="47">parent<pos:position pos:line="56" pos:column="53"/></name><index pos:line="56" pos:column="53">[<expr><name pos:line="56" pos:column="54">child_slot<pos:position pos:line="56" pos:column="64"/></name></expr>]<pos:position pos:line="56" pos:column="65"/></index></name><operator pos:line="56" pos:column="65">.<pos:position pos:line="56" pos:column="66"/></operator><name pos:line="56" pos:column="66">pid<pos:position pos:line="56" pos:column="69"/></name> <operator pos:line="56" pos:column="70">!=<pos:position pos:line="56" pos:column="72"/></operator> <name pos:line="56" pos:column="73">my_pid<pos:position pos:line="56" pos:column="79"/></name> <operator pos:line="56" pos:column="80">&amp;&amp;<pos:position pos:line="56" pos:column="90"/></operator> <name pos:line="56" pos:column="83">child_slot<pos:position pos:line="56" pos:column="93"/></name> <operator pos:line="56" pos:column="94">&lt;<pos:position pos:line="56" pos:column="98"/></operator> <name pos:line="56" pos:column="96">HARD_SERVER_LIMIT<pos:position pos:line="56" pos:column="113"/></name></expr>;<pos:position pos:line="56" pos:column="114"/></condition> <incr><expr><name pos:line="56" pos:column="115">child_slot<pos:position pos:line="56" pos:column="125"/></name><operator pos:line="56" pos:column="125">++<pos:position pos:line="56" pos:column="127"/></operator></expr></incr>)<pos:position pos:line="56" pos:column="128"/></control><block type="pseudo"><empty_stmt pos:line="56" pos:column="128">;<pos:position pos:line="56" pos:column="129"/></empty_stmt></block></for>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">child_slot<pos:position pos:line="58" pos:column="19"/></name> <operator pos:line="58" pos:column="20">==<pos:position pos:line="58" pos:column="22"/></operator> <name pos:line="58" pos:column="23">HARD_SERVER_LIMIT<pos:position pos:line="58" pos:column="40"/></name></expr>)<pos:position pos:line="58" pos:column="41"/></condition><then pos:line="58" pos:column="41"> <block pos:line="58" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">ap_log_error<pos:position pos:line="59" pos:column="21"/></name><argument_list pos:line="59" pos:column="21">(<argument><expr><name pos:line="59" pos:column="22">APLOG_MARK<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="34">APLOG_ERR<pos:position pos:line="59" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="45">0<pos:position pos:line="59" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="48">ap_server_conf<pos:position pos:line="59" pos:column="62"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="60" pos:column="22">"child pid not found in scoreboard, exiting"<pos:position pos:line="60" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">clean_child_exit<pos:position pos:line="61" pos:column="25"/></name><argument_list pos:line="61" pos:column="25">(<argument><expr><name pos:line="61" pos:column="26">APEXIT_CHILDFATAL<pos:position pos:line="61" pos:column="43"/></name></expr></argument>)<pos:position pos:line="61" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="64" pos:column="5">ap_my_generation<pos:position pos:line="64" pos:column="21"/></name> <operator pos:line="64" pos:column="22">=<pos:position pos:line="64" pos:column="23"/></operator> <name><name pos:line="64" pos:column="24">ap_scoreboard_image<pos:position pos:line="64" pos:column="43"/></name><operator pos:line="64" pos:column="43">-&gt;<pos:position pos:line="64" pos:column="48"/></operator><name pos:line="64" pos:column="45">parent<pos:position pos:line="64" pos:column="51"/></name><index pos:line="64" pos:column="51">[<expr><name pos:line="64" pos:column="52">child_slot<pos:position pos:line="64" pos:column="62"/></name></expr>]<pos:position pos:line="64" pos:column="63"/></index></name><operator pos:line="64" pos:column="63">.<pos:position pos:line="64" pos:column="64"/></operator><name pos:line="64" pos:column="64">generation<pos:position pos:line="64" pos:column="74"/></name></expr>;<pos:position pos:line="64" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">memset<pos:position pos:line="65" pos:column="11"/></name><argument_list pos:line="65" pos:column="11">(<argument><expr><name><name pos:line="65" pos:column="12">ap_scoreboard_image<pos:position pos:line="65" pos:column="31"/></name><operator pos:line="65" pos:column="31">-&gt;<pos:position pos:line="65" pos:column="36"/></operator><name pos:line="65" pos:column="33">servers<pos:position pos:line="65" pos:column="40"/></name><index pos:line="65" pos:column="40">[<expr><name pos:line="65" pos:column="41">child_slot<pos:position pos:line="65" pos:column="51"/></name></expr>]<pos:position pos:line="65" pos:column="52"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="54">0<pos:position pos:line="65" pos:column="55"/></literal></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="57">sizeof<argument_list pos:line="65" pos:column="63">(<argument><expr><name pos:line="65" pos:column="64">worker_score<pos:position pos:line="65" pos:column="76"/></name></expr></argument>)<pos:position pos:line="65" pos:column="77"/></argument_list></sizeof> <operator pos:line="65" pos:column="78">*<pos:position pos:line="65" pos:column="79"/></operator> <name pos:line="65" pos:column="80">HARD_THREAD_LIMIT<pos:position pos:line="65" pos:column="97"/></name></expr></argument>)<pos:position pos:line="65" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="99"/></expr_stmt>

    <comment type="block" pos:line="67" pos:column="5">/* Set up an OS/2 queue for passing connections &amp; termination requests
     * to worker threads
     */</comment>
    <expr_stmt><expr><name pos:line="70" pos:column="5">rc<pos:position pos:line="70" pos:column="7"/></name> <operator pos:line="70" pos:column="8">=<pos:position pos:line="70" pos:column="9"/></operator> <call><name pos:line="70" pos:column="10">DosCreateQueue<pos:position pos:line="70" pos:column="24"/></name><argument_list pos:line="70" pos:column="24">(<argument><expr><operator pos:line="70" pos:column="25">&amp;<pos:position pos:line="70" pos:column="30"/></operator><name pos:line="70" pos:column="26">workq<pos:position pos:line="70" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="33">QUE_FIFO<pos:position pos:line="70" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="70" pos:column="43">apr_psprintf<pos:position pos:line="70" pos:column="55"/></name><argument_list pos:line="70" pos:column="55">(<argument><expr><name pos:line="70" pos:column="56">pchild<pos:position pos:line="70" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="64">"/queues/httpd/work.%d"<pos:position pos:line="70" pos:column="87"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="89">my_pid<pos:position pos:line="70" pos:column="95"/></name></expr></argument>)<pos:position pos:line="70" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="98"/></expr_stmt>

    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><name pos:line="72" pos:column="9">rc<pos:position pos:line="72" pos:column="11"/></name></expr>)<pos:position pos:line="72" pos:column="12"/></condition><then pos:line="72" pos:column="12"> <block pos:line="72" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">ap_log_error<pos:position pos:line="73" pos:column="21"/></name><argument_list pos:line="73" pos:column="21">(<argument><expr><name pos:line="73" pos:column="22">APLOG_MARK<pos:position pos:line="73" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="34">APLOG_ERR<pos:position pos:line="73" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="45">APR_FROM_OS_ERROR<pos:position pos:line="73" pos:column="62"/></name><argument_list pos:line="73" pos:column="62">(<argument><expr><name pos:line="73" pos:column="63">rc<pos:position pos:line="73" pos:column="65"/></name></expr></argument>)<pos:position pos:line="73" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="73" pos:column="68">ap_server_conf<pos:position pos:line="73" pos:column="82"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="74" pos:column="22">"unable to create work queue, exiting"<pos:position pos:line="74" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">clean_child_exit<pos:position pos:line="75" pos:column="25"/></name><argument_list pos:line="75" pos:column="25">(<argument><expr><name pos:line="75" pos:column="26">APEXIT_CHILDFATAL<pos:position pos:line="75" pos:column="43"/></name></expr></argument>)<pos:position pos:line="75" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="78" pos:column="5">/* Create initial pool of worker threads */</comment>
    <for pos:line="79" pos:column="5">for <control pos:line="79" pos:column="9">(<init><expr><name pos:line="79" pos:column="10">c<pos:position pos:line="79" pos:column="11"/></name> <operator pos:line="79" pos:column="12">=<pos:position pos:line="79" pos:column="13"/></operator> <literal type="number" pos:line="79" pos:column="14">0<pos:position pos:line="79" pos:column="15"/></literal></expr>;<pos:position pos:line="79" pos:column="16"/></init> <condition><expr><name pos:line="79" pos:column="17">c<pos:position pos:line="79" pos:column="18"/></name> <operator pos:line="79" pos:column="19">&lt;<pos:position pos:line="79" pos:column="23"/></operator> <name pos:line="79" pos:column="21">ap_min_spare_threads<pos:position pos:line="79" pos:column="41"/></name></expr>;<pos:position pos:line="79" pos:column="42"/></condition> <incr><expr><name pos:line="79" pos:column="43">c<pos:position pos:line="79" pos:column="44"/></name><operator pos:line="79" pos:column="44">++<pos:position pos:line="79" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="79" pos:column="47"/></control> <block pos:line="79" pos:column="48">{
<comment type="line" pos:line="80" pos:column="1">//        ap_scoreboard_image-&gt;servers[child_slot][c].tid = _beginthread(worker_main, NULL, 128*1024, (void *)c);</comment>
    }<pos:position pos:line="81" pos:column="6"/></block></for>

    <comment type="block" pos:line="83" pos:column="5">/* Start maintenance thread */</comment>
    <expr_stmt><expr><name pos:line="84" pos:column="5">server_maint_tid<pos:position pos:line="84" pos:column="21"/></name> <operator pos:line="84" pos:column="22">=<pos:position pos:line="84" pos:column="23"/></operator> <call><name pos:line="84" pos:column="24">_beginthread<pos:position pos:line="84" pos:column="36"/></name><argument_list pos:line="84" pos:column="36">(<argument><expr><name pos:line="84" pos:column="37">server_maintenance<pos:position pos:line="84" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="57">NULL<pos:position pos:line="84" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="63">32768<pos:position pos:line="84" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="70">NULL<pos:position pos:line="84" pos:column="74"/></name></expr></argument>)<pos:position pos:line="84" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="76"/></expr_stmt>

    <comment type="block" pos:line="86" pos:column="5">/* Set up poll */</comment>
    <for pos:line="87" pos:column="5">for <control pos:line="87" pos:column="9">(<init><expr><name pos:line="87" pos:column="10">num_listeners<pos:position pos:line="87" pos:column="23"/></name> <operator pos:line="87" pos:column="24">=<pos:position pos:line="87" pos:column="25"/></operator> <literal type="number" pos:line="87" pos:column="26">0<pos:position pos:line="87" pos:column="27"/></literal></expr><operator pos:line="87" pos:column="27">,<pos:position pos:line="87" pos:column="28"/></operator> <expr><name pos:line="87" pos:column="29">lr<pos:position pos:line="87" pos:column="31"/></name> <operator pos:line="87" pos:column="32">=<pos:position pos:line="87" pos:column="33"/></operator> <name pos:line="87" pos:column="34">ap_listeners<pos:position pos:line="87" pos:column="46"/></name></expr>;<pos:position pos:line="87" pos:column="47"/></init> <condition><expr><name pos:line="87" pos:column="48">lr<pos:position pos:line="87" pos:column="50"/></name></expr>;<pos:position pos:line="87" pos:column="51"/></condition> <incr><expr><name pos:line="87" pos:column="52">lr<pos:position pos:line="87" pos:column="54"/></name> <operator pos:line="87" pos:column="55">=<pos:position pos:line="87" pos:column="56"/></operator> <name><name pos:line="87" pos:column="57">lr<pos:position pos:line="87" pos:column="59"/></name><operator pos:line="87" pos:column="59">-&gt;<pos:position pos:line="87" pos:column="64"/></operator><name pos:line="87" pos:column="61">next<pos:position pos:line="87" pos:column="65"/></name></name></expr></incr>)<pos:position pos:line="87" pos:column="66"/></control> <block pos:line="87" pos:column="67">{
        <expr_stmt><expr><name pos:line="88" pos:column="9">num_listeners<pos:position pos:line="88" pos:column="22"/></name><operator pos:line="88" pos:column="22">++<pos:position pos:line="88" pos:column="24"/></operator></expr>;<pos:position pos:line="88" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="89" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="91" pos:column="5">apr_pollset_create<pos:position pos:line="91" pos:column="23"/></name><argument_list pos:line="91" pos:column="23">(<argument><expr><operator pos:line="91" pos:column="24">&amp;<pos:position pos:line="91" pos:column="29"/></operator><name pos:line="91" pos:column="25">pollset<pos:position pos:line="91" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="34">num_listeners<pos:position pos:line="91" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="49">pchild<pos:position pos:line="91" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="57">0<pos:position pos:line="91" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="60"/></expr_stmt>

    <for pos:line="93" pos:column="5">for <control pos:line="93" pos:column="9">(<init><expr><name pos:line="93" pos:column="10">lr<pos:position pos:line="93" pos:column="12"/></name> <operator pos:line="93" pos:column="13">=<pos:position pos:line="93" pos:column="14"/></operator> <name pos:line="93" pos:column="15">ap_listeners<pos:position pos:line="93" pos:column="27"/></name></expr>;<pos:position pos:line="93" pos:column="28"/></init> <condition><expr><name pos:line="93" pos:column="29">lr<pos:position pos:line="93" pos:column="31"/></name> <operator pos:line="93" pos:column="32">!=<pos:position pos:line="93" pos:column="34"/></operator> <name pos:line="93" pos:column="35">NULL<pos:position pos:line="93" pos:column="39"/></name></expr>;<pos:position pos:line="93" pos:column="40"/></condition> <incr><expr><name pos:line="93" pos:column="41">lr<pos:position pos:line="93" pos:column="43"/></name> <operator pos:line="93" pos:column="44">=<pos:position pos:line="93" pos:column="45"/></operator> <name><name pos:line="93" pos:column="46">lr<pos:position pos:line="93" pos:column="48"/></name><operator pos:line="93" pos:column="48">-&gt;<pos:position pos:line="93" pos:column="53"/></operator><name pos:line="93" pos:column="50">next<pos:position pos:line="93" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="93" pos:column="55"/></control> <block pos:line="93" pos:column="56">{
        <decl_stmt><decl><type><name pos:line="94" pos:column="9">apr_pollfd_t<pos:position pos:line="94" pos:column="21"/></name></type> <name pos:line="94" pos:column="22">pfd<pos:position pos:line="94" pos:column="25"/></name> <init pos:line="94" pos:column="26">= <expr><block pos:line="94" pos:column="28">{ <expr><literal type="number" pos:line="94" pos:column="30">0<pos:position pos:line="94" pos:column="31"/></literal></expr> }<pos:position pos:line="94" pos:column="33"/></block></expr></init></decl>;<pos:position pos:line="94" pos:column="34"/></decl_stmt>

        <expr_stmt><expr><name><name pos:line="96" pos:column="9">pfd<pos:position pos:line="96" pos:column="12"/></name><operator pos:line="96" pos:column="12">.<pos:position pos:line="96" pos:column="13"/></operator><name pos:line="96" pos:column="13">desc_type<pos:position pos:line="96" pos:column="22"/></name></name> <operator pos:line="96" pos:column="23">=<pos:position pos:line="96" pos:column="24"/></operator> <name pos:line="96" pos:column="25">APR_POLL_SOCKET<pos:position pos:line="96" pos:column="40"/></name></expr>;<pos:position pos:line="96" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="97" pos:column="9">pfd<pos:position pos:line="97" pos:column="12"/></name><operator pos:line="97" pos:column="12">.<pos:position pos:line="97" pos:column="13"/></operator><name pos:line="97" pos:column="13">desc<pos:position pos:line="97" pos:column="17"/></name><operator pos:line="97" pos:column="17">.<pos:position pos:line="97" pos:column="18"/></operator><name pos:line="97" pos:column="18">s<pos:position pos:line="97" pos:column="19"/></name></name> <operator pos:line="97" pos:column="20">=<pos:position pos:line="97" pos:column="21"/></operator> <name><name pos:line="97" pos:column="22">lr<pos:position pos:line="97" pos:column="24"/></name><operator pos:line="97" pos:column="24">-&gt;<pos:position pos:line="97" pos:column="29"/></operator><name pos:line="97" pos:column="26">sd<pos:position pos:line="97" pos:column="28"/></name></name></expr>;<pos:position pos:line="97" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="98" pos:column="9">pfd<pos:position pos:line="98" pos:column="12"/></name><operator pos:line="98" pos:column="12">.<pos:position pos:line="98" pos:column="13"/></operator><name pos:line="98" pos:column="13">reqevents<pos:position pos:line="98" pos:column="22"/></name></name> <operator pos:line="98" pos:column="23">=<pos:position pos:line="98" pos:column="24"/></operator> <name pos:line="98" pos:column="25">APR_POLLIN<pos:position pos:line="98" pos:column="35"/></name></expr>;<pos:position pos:line="98" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="99" pos:column="9">pfd<pos:position pos:line="99" pos:column="12"/></name><operator pos:line="99" pos:column="12">.<pos:position pos:line="99" pos:column="13"/></operator><name pos:line="99" pos:column="13">client_data<pos:position pos:line="99" pos:column="24"/></name></name> <operator pos:line="99" pos:column="25">=<pos:position pos:line="99" pos:column="26"/></operator> <name pos:line="99" pos:column="27">lr<pos:position pos:line="99" pos:column="29"/></name></expr>;<pos:position pos:line="99" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="100" pos:column="9">apr_pollset_add<pos:position pos:line="100" pos:column="24"/></name><argument_list pos:line="100" pos:column="24">(<argument><expr><name pos:line="100" pos:column="25">pollset<pos:position pos:line="100" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="34">&amp;<pos:position pos:line="100" pos:column="39"/></operator><name pos:line="100" pos:column="35">pfd<pos:position pos:line="100" pos:column="38"/></name></expr></argument>)<pos:position pos:line="100" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="101" pos:column="6"/></block></for>

    <comment type="block" pos:line="103" pos:column="5">/* Main connection accept loop */</comment>
    <do pos:line="104" pos:column="5">do <block pos:line="104" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="105" pos:column="9">apr_pool_t<pos:position pos:line="105" pos:column="19"/></name> <modifier pos:line="105" pos:column="20">*<pos:position pos:line="105" pos:column="21"/></modifier></type><name pos:line="105" pos:column="21">pconn<pos:position pos:line="105" pos:column="26"/></name></decl>;<pos:position pos:line="105" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="106" pos:column="9">worker_args_t<pos:position pos:line="106" pos:column="22"/></name> <modifier pos:line="106" pos:column="23">*<pos:position pos:line="106" pos:column="24"/></modifier></type><name pos:line="106" pos:column="24">worker_args<pos:position pos:line="106" pos:column="35"/></name></decl>;<pos:position pos:line="106" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="107" pos:column="9">int<pos:position pos:line="107" pos:column="12"/></name></type> <name pos:line="107" pos:column="13">last_poll_idx<pos:position pos:line="107" pos:column="26"/></name> <init pos:line="107" pos:column="27">= <expr><literal type="number" pos:line="107" pos:column="29">0<pos:position pos:line="107" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="107" pos:column="31"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="109" pos:column="9">apr_pool_create<pos:position pos:line="109" pos:column="24"/></name><argument_list pos:line="109" pos:column="24">(<argument><expr><operator pos:line="109" pos:column="25">&amp;<pos:position pos:line="109" pos:column="30"/></operator><name pos:line="109" pos:column="26">pconn<pos:position pos:line="109" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="33">pchild<pos:position pos:line="109" pos:column="39"/></name></expr></argument>)<pos:position pos:line="109" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="110" pos:column="9">worker_args<pos:position pos:line="110" pos:column="20"/></name> <operator pos:line="110" pos:column="21">=<pos:position pos:line="110" pos:column="22"/></operator> <call><name pos:line="110" pos:column="23">apr_palloc<pos:position pos:line="110" pos:column="33"/></name><argument_list pos:line="110" pos:column="33">(<argument><expr><name pos:line="110" pos:column="34">pconn<pos:position pos:line="110" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="110" pos:column="41">sizeof<argument_list pos:line="110" pos:column="47">(<argument><expr><name pos:line="110" pos:column="48">worker_args_t<pos:position pos:line="110" pos:column="61"/></name></expr></argument>)<pos:position pos:line="110" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="110" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="111" pos:column="9">worker_args<pos:position pos:line="111" pos:column="20"/></name><operator pos:line="111" pos:column="20">-&gt;<pos:position pos:line="111" pos:column="25"/></operator><name pos:line="111" pos:column="22">pconn<pos:position pos:line="111" pos:column="27"/></name></name> <operator pos:line="111" pos:column="28">=<pos:position pos:line="111" pos:column="29"/></operator> <name pos:line="111" pos:column="30">pconn<pos:position pos:line="111" pos:column="35"/></name></expr>;<pos:position pos:line="111" pos:column="36"/></expr_stmt>

        <if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name pos:line="113" pos:column="13">num_listeners<pos:position pos:line="113" pos:column="26"/></name> <operator pos:line="113" pos:column="27">==<pos:position pos:line="113" pos:column="29"/></operator> <literal type="number" pos:line="113" pos:column="30">1<pos:position pos:line="113" pos:column="31"/></literal></expr>)<pos:position pos:line="113" pos:column="32"/></condition><then pos:line="113" pos:column="32"> <block pos:line="113" pos:column="33">{
            <expr_stmt><expr><name pos:line="114" pos:column="13">rv<pos:position pos:line="114" pos:column="15"/></name> <operator pos:line="114" pos:column="16">=<pos:position pos:line="114" pos:column="17"/></operator> <call><name pos:line="114" pos:column="18">apr_socket_accept<pos:position pos:line="114" pos:column="35"/></name><argument_list pos:line="114" pos:column="35">(<argument><expr><operator pos:line="114" pos:column="36">&amp;<pos:position pos:line="114" pos:column="41"/></operator><name><name pos:line="114" pos:column="37">worker_args<pos:position pos:line="114" pos:column="48"/></name><operator pos:line="114" pos:column="48">-&gt;<pos:position pos:line="114" pos:column="53"/></operator><name pos:line="114" pos:column="50">conn_sd<pos:position pos:line="114" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="59">ap_listeners<pos:position pos:line="114" pos:column="71"/></name><operator pos:line="114" pos:column="71">-&gt;<pos:position pos:line="114" pos:column="76"/></operator><name pos:line="114" pos:column="73">sd<pos:position pos:line="114" pos:column="75"/></name></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="77">pconn<pos:position pos:line="114" pos:column="82"/></name></expr></argument>)<pos:position pos:line="114" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="84"/></expr_stmt>
        }<pos:position pos:line="115" pos:column="10"/></block></then> <else pos:line="115" pos:column="11">else <block pos:line="115" pos:column="16">{
            <decl_stmt><decl><type><specifier pos:line="116" pos:column="13">const<pos:position pos:line="116" pos:column="18"/></specifier> <name pos:line="116" pos:column="19">apr_pollfd_t<pos:position pos:line="116" pos:column="31"/></name> <modifier pos:line="116" pos:column="32">*<pos:position pos:line="116" pos:column="33"/></modifier></type><name pos:line="116" pos:column="33">poll_results<pos:position pos:line="116" pos:column="45"/></name></decl>;<pos:position pos:line="116" pos:column="46"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="117" pos:column="13">apr_int32_t<pos:position pos:line="117" pos:column="24"/></name></type> <name pos:line="117" pos:column="25">num_poll_results<pos:position pos:line="117" pos:column="41"/></name></decl>;<pos:position pos:line="117" pos:column="42"/></decl_stmt>

            <expr_stmt><expr><name pos:line="119" pos:column="13">rc<pos:position pos:line="119" pos:column="15"/></name> <operator pos:line="119" pos:column="16">=<pos:position pos:line="119" pos:column="17"/></operator> <call><name pos:line="119" pos:column="18">DosRequestMutexSem<pos:position pos:line="119" pos:column="36"/></name><argument_list pos:line="119" pos:column="36">(<argument><expr><name pos:line="119" pos:column="37">ap_mpm_accept_mutex<pos:position pos:line="119" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="58">SEM_INDEFINITE_WAIT<pos:position pos:line="119" pos:column="77"/></name></expr></argument>)<pos:position pos:line="119" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="79"/></expr_stmt>

            <if pos:line="121" pos:column="13">if <condition pos:line="121" pos:column="16">(<expr><name pos:line="121" pos:column="17">shutdown_pending<pos:position pos:line="121" pos:column="33"/></name></expr>)<pos:position pos:line="121" pos:column="34"/></condition><then pos:line="121" pos:column="34"> <block pos:line="121" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="122" pos:column="17">DosReleaseMutexSem<pos:position pos:line="122" pos:column="35"/></name><argument_list pos:line="122" pos:column="35">(<argument><expr><name pos:line="122" pos:column="36">ap_mpm_accept_mutex<pos:position pos:line="122" pos:column="55"/></name></expr></argument>)<pos:position pos:line="122" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="57"/></expr_stmt>
                <break pos:line="123" pos:column="17">break;<pos:position pos:line="123" pos:column="23"/></break>
            }<pos:position pos:line="124" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="126" pos:column="13">rv<pos:position pos:line="126" pos:column="15"/></name> <operator pos:line="126" pos:column="16">=<pos:position pos:line="126" pos:column="17"/></operator> <call><name pos:line="126" pos:column="18">APR_FROM_OS_ERROR<pos:position pos:line="126" pos:column="35"/></name><argument_list pos:line="126" pos:column="35">(<argument><expr><name pos:line="126" pos:column="36">rc<pos:position pos:line="126" pos:column="38"/></name></expr></argument>)<pos:position pos:line="126" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="40"/></expr_stmt>

            <if pos:line="128" pos:column="13">if <condition pos:line="128" pos:column="16">(<expr><name pos:line="128" pos:column="17">rv<pos:position pos:line="128" pos:column="19"/></name> <operator pos:line="128" pos:column="20">==<pos:position pos:line="128" pos:column="22"/></operator> <name pos:line="128" pos:column="23">APR_SUCCESS<pos:position pos:line="128" pos:column="34"/></name></expr>)<pos:position pos:line="128" pos:column="35"/></condition><then pos:line="128" pos:column="35"> <block pos:line="128" pos:column="36">{
                <expr_stmt><expr><name pos:line="129" pos:column="17">rv<pos:position pos:line="129" pos:column="19"/></name> <operator pos:line="129" pos:column="20">=<pos:position pos:line="129" pos:column="21"/></operator> <call><name pos:line="129" pos:column="22">apr_pollset_poll<pos:position pos:line="129" pos:column="38"/></name><argument_list pos:line="129" pos:column="38">(<argument><expr><name pos:line="129" pos:column="39">pollset<pos:position pos:line="129" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="129" pos:column="48">-<pos:position pos:line="129" pos:column="49"/></operator><literal type="number" pos:line="129" pos:column="49">1<pos:position pos:line="129" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="129" pos:column="52">&amp;<pos:position pos:line="129" pos:column="57"/></operator><name pos:line="129" pos:column="53">num_poll_results<pos:position pos:line="129" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="129" pos:column="71">&amp;<pos:position pos:line="129" pos:column="76"/></operator><name pos:line="129" pos:column="72">poll_results<pos:position pos:line="129" pos:column="84"/></name></expr></argument>)<pos:position pos:line="129" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="86"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="130" pos:column="17">DosReleaseMutexSem<pos:position pos:line="130" pos:column="35"/></name><argument_list pos:line="130" pos:column="35">(<argument><expr><name pos:line="130" pos:column="36">ap_mpm_accept_mutex<pos:position pos:line="130" pos:column="55"/></name></expr></argument>)<pos:position pos:line="130" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="57"/></expr_stmt>
            }<pos:position pos:line="131" pos:column="14"/></block></then></if>

            <if pos:line="133" pos:column="13">if <condition pos:line="133" pos:column="16">(<expr><name pos:line="133" pos:column="17">rv<pos:position pos:line="133" pos:column="19"/></name> <operator pos:line="133" pos:column="20">==<pos:position pos:line="133" pos:column="22"/></operator> <name pos:line="133" pos:column="23">APR_SUCCESS<pos:position pos:line="133" pos:column="34"/></name></expr>)<pos:position pos:line="133" pos:column="35"/></condition><then pos:line="133" pos:column="35"> <block pos:line="133" pos:column="36">{
                <if pos:line="134" pos:column="17">if <condition pos:line="134" pos:column="20">(<expr><name pos:line="134" pos:column="21">last_poll_idx<pos:position pos:line="134" pos:column="34"/></name> <operator pos:line="134" pos:column="35">&gt;=<pos:position pos:line="134" pos:column="40"/></operator> <name pos:line="134" pos:column="38">num_listeners<pos:position pos:line="134" pos:column="51"/></name></expr>)<pos:position pos:line="134" pos:column="52"/></condition><then pos:line="134" pos:column="52"> <block pos:line="134" pos:column="53">{
                    <expr_stmt><expr><name pos:line="135" pos:column="21">last_poll_idx<pos:position pos:line="135" pos:column="34"/></name> <operator pos:line="135" pos:column="35">=<pos:position pos:line="135" pos:column="36"/></operator> <literal type="number" pos:line="135" pos:column="37">0<pos:position pos:line="135" pos:column="38"/></literal></expr>;<pos:position pos:line="135" pos:column="39"/></expr_stmt>
                }<pos:position pos:line="136" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="138" pos:column="17">lr<pos:position pos:line="138" pos:column="19"/></name> <operator pos:line="138" pos:column="20">=<pos:position pos:line="138" pos:column="21"/></operator> <name><name pos:line="138" pos:column="22">poll_results<pos:position pos:line="138" pos:column="34"/></name><index pos:line="138" pos:column="34">[<expr><name pos:line="138" pos:column="35">last_poll_idx<pos:position pos:line="138" pos:column="48"/></name><operator pos:line="138" pos:column="48">++<pos:position pos:line="138" pos:column="50"/></operator></expr>]<pos:position pos:line="138" pos:column="51"/></index></name><operator pos:line="138" pos:column="51">.<pos:position pos:line="138" pos:column="52"/></operator><name pos:line="138" pos:column="52">client_data<pos:position pos:line="138" pos:column="63"/></name></expr>;<pos:position pos:line="138" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><name pos:line="139" pos:column="17">rv<pos:position pos:line="139" pos:column="19"/></name> <operator pos:line="139" pos:column="20">=<pos:position pos:line="139" pos:column="21"/></operator> <call><name pos:line="139" pos:column="22">apr_socket_accept<pos:position pos:line="139" pos:column="39"/></name><argument_list pos:line="139" pos:column="39">(<argument><expr><operator pos:line="139" pos:column="40">&amp;<pos:position pos:line="139" pos:column="45"/></operator><name><name pos:line="139" pos:column="41">worker_args<pos:position pos:line="139" pos:column="52"/></name><operator pos:line="139" pos:column="52">-&gt;<pos:position pos:line="139" pos:column="57"/></operator><name pos:line="139" pos:column="54">conn_sd<pos:position pos:line="139" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="139" pos:column="63">lr<pos:position pos:line="139" pos:column="65"/></name><operator pos:line="139" pos:column="65">-&gt;<pos:position pos:line="139" pos:column="70"/></operator><name pos:line="139" pos:column="67">sd<pos:position pos:line="139" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="71">pconn<pos:position pos:line="139" pos:column="76"/></name></expr></argument>)<pos:position pos:line="139" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="78"/></expr_stmt>
                <expr_stmt><expr><name pos:line="140" pos:column="17">last_poll_idx<pos:position pos:line="140" pos:column="30"/></name><operator pos:line="140" pos:column="30">++<pos:position pos:line="140" pos:column="32"/></operator></expr>;<pos:position pos:line="140" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="141" pos:column="14"/></block></then></if>
        }<pos:position pos:line="142" pos:column="10"/></block></else></if>

        <if pos:line="144" pos:column="9">if <condition pos:line="144" pos:column="12">(<expr><name pos:line="144" pos:column="13">rv<pos:position pos:line="144" pos:column="15"/></name> <operator pos:line="144" pos:column="16">!=<pos:position pos:line="144" pos:column="18"/></operator> <name pos:line="144" pos:column="19">APR_SUCCESS<pos:position pos:line="144" pos:column="30"/></name></expr>)<pos:position pos:line="144" pos:column="31"/></condition><then pos:line="144" pos:column="31"> <block pos:line="144" pos:column="32">{
            <if pos:line="145" pos:column="13">if <condition pos:line="145" pos:column="16">(<expr><operator pos:line="145" pos:column="17">!<pos:position pos:line="145" pos:column="18"/></operator><call><name pos:line="145" pos:column="18">APR_STATUS_IS_EINTR<pos:position pos:line="145" pos:column="37"/></name><argument_list pos:line="145" pos:column="37">(<argument><expr><name pos:line="145" pos:column="38">rv<pos:position pos:line="145" pos:column="40"/></name></expr></argument>)<pos:position pos:line="145" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="145" pos:column="42"/></condition><then pos:line="145" pos:column="42"> <block pos:line="145" pos:column="43">{
                <expr_stmt><expr><call><name pos:line="146" pos:column="17">ap_log_error<pos:position pos:line="146" pos:column="29"/></name><argument_list pos:line="146" pos:column="29">(<argument><expr><name pos:line="146" pos:column="30">APLOG_MARK<pos:position pos:line="146" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="42">APLOG_ERR<pos:position pos:line="146" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="53">rv<pos:position pos:line="146" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="57">ap_server_conf<pos:position pos:line="146" pos:column="71"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="147" pos:column="30">"apr_socket_accept"<pos:position pos:line="147" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="148" pos:column="17">clean_child_exit<pos:position pos:line="148" pos:column="33"/></name><argument_list pos:line="148" pos:column="33">(<argument><expr><name pos:line="148" pos:column="34">APEXIT_CHILDFATAL<pos:position pos:line="148" pos:column="51"/></name></expr></argument>)<pos:position pos:line="148" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="149" pos:column="14"/></block></then></if>
        }<pos:position pos:line="150" pos:column="10"/></block></then> <else pos:line="150" pos:column="11">else <block pos:line="150" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="151" pos:column="13">DosWriteQueue<pos:position pos:line="151" pos:column="26"/></name><argument_list pos:line="151" pos:column="26">(<argument><expr><name pos:line="151" pos:column="27">workq<pos:position pos:line="151" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="34">WORKTYPE_CONN<pos:position pos:line="151" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="151" pos:column="49">sizeof<argument_list pos:line="151" pos:column="55">(<argument><expr><name pos:line="151" pos:column="56">worker_args_t<pos:position pos:line="151" pos:column="69"/></name></expr></argument>)<pos:position pos:line="151" pos:column="70"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="151" pos:column="72">worker_args<pos:position pos:line="151" pos:column="83"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="151" pos:column="85">0<pos:position pos:line="151" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="88"/></expr_stmt>
            <expr_stmt><expr><name pos:line="152" pos:column="13">requests_this_child<pos:position pos:line="152" pos:column="32"/></name><operator pos:line="152" pos:column="32">++<pos:position pos:line="152" pos:column="34"/></operator></expr>;<pos:position pos:line="152" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="153" pos:column="10"/></block></else></if>

        <if pos:line="155" pos:column="9">if <condition pos:line="155" pos:column="12">(<expr><name pos:line="155" pos:column="13">ap_max_requests_per_child<pos:position pos:line="155" pos:column="38"/></name> <operator pos:line="155" pos:column="39">!=<pos:position pos:line="155" pos:column="41"/></operator> <literal type="number" pos:line="155" pos:column="42">0<pos:position pos:line="155" pos:column="43"/></literal> <operator pos:line="155" pos:column="44">&amp;&amp;<pos:position pos:line="155" pos:column="54"/></operator> <name pos:line="155" pos:column="47">requests_this_child<pos:position pos:line="155" pos:column="66"/></name> <operator pos:line="155" pos:column="67">&gt;=<pos:position pos:line="155" pos:column="72"/></operator> <name pos:line="155" pos:column="70">ap_max_requests_per_child<pos:position pos:line="155" pos:column="95"/></name></expr>)<pos:position pos:line="155" pos:column="96"/></condition><then pos:line="155" pos:column="96">
            <block type="pseudo"><break pos:line="156" pos:column="13">break;<pos:position pos:line="156" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="157" pos:column="6"/></block> while <condition pos:line="157" pos:column="13">(<expr><operator pos:line="157" pos:column="14">!<pos:position pos:line="157" pos:column="15"/></operator><name pos:line="157" pos:column="15">shutdown_pending<pos:position pos:line="157" pos:column="31"/></name> <operator pos:line="157" pos:column="32">&amp;&amp;<pos:position pos:line="157" pos:column="42"/></operator> <name pos:line="157" pos:column="35">ap_my_generation<pos:position pos:line="157" pos:column="51"/></name> <operator pos:line="157" pos:column="52">==<pos:position pos:line="157" pos:column="54"/></operator> <name><name pos:line="157" pos:column="55">ap_scoreboard_image<pos:position pos:line="157" pos:column="74"/></name><operator pos:line="157" pos:column="74">-&gt;<pos:position pos:line="157" pos:column="79"/></operator><name pos:line="157" pos:column="76">global<pos:position pos:line="157" pos:column="82"/></name><operator pos:line="157" pos:column="82">-&gt;<pos:position pos:line="157" pos:column="87"/></operator><name pos:line="157" pos:column="84">running_generation<pos:position pos:line="157" pos:column="102"/></name></name></expr>)<pos:position pos:line="157" pos:column="103"/></condition>;<pos:position pos:line="157" pos:column="104"/></do>

    <expr_stmt><expr><name><name pos:line="159" pos:column="5">ap_scoreboard_image<pos:position pos:line="159" pos:column="24"/></name><operator pos:line="159" pos:column="24">-&gt;<pos:position pos:line="159" pos:column="29"/></operator><name pos:line="159" pos:column="26">parent<pos:position pos:line="159" pos:column="32"/></name><index pos:line="159" pos:column="32">[<expr><name pos:line="159" pos:column="33">child_slot<pos:position pos:line="159" pos:column="43"/></name></expr>]<pos:position pos:line="159" pos:column="44"/></index></name><operator pos:line="159" pos:column="44">.<pos:position pos:line="159" pos:column="45"/></operator><name pos:line="159" pos:column="45">quiescing<pos:position pos:line="159" pos:column="54"/></name> <operator pos:line="159" pos:column="55">=<pos:position pos:line="159" pos:column="56"/></operator> <literal type="number" pos:line="159" pos:column="57">1<pos:position pos:line="159" pos:column="58"/></literal></expr>;<pos:position pos:line="159" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="160" pos:column="5">DosPostEventSem<pos:position pos:line="160" pos:column="20"/></name><argument_list pos:line="160" pos:column="20">(<argument><expr><name pos:line="160" pos:column="21">shutdown_event<pos:position pos:line="160" pos:column="35"/></name></expr></argument>)<pos:position pos:line="160" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="161" pos:column="5">DosWaitThread<pos:position pos:line="161" pos:column="18"/></name><argument_list pos:line="161" pos:column="18">(<argument><expr><operator pos:line="161" pos:column="19">&amp;<pos:position pos:line="161" pos:column="24"/></operator><name pos:line="161" pos:column="20">server_maint_tid<pos:position pos:line="161" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="38">DCWW_WAIT<pos:position pos:line="161" pos:column="47"/></name></expr></argument>)<pos:position pos:line="161" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="49"/></expr_stmt>

    <if pos:line="163" pos:column="5">if <condition pos:line="163" pos:column="8">(<expr><name pos:line="163" pos:column="9">is_graceful<pos:position pos:line="163" pos:column="20"/></name></expr>)<pos:position pos:line="163" pos:column="21"/></condition><then pos:line="163" pos:column="21"> <block pos:line="163" pos:column="22">{
        <decl_stmt><decl><type><name pos:line="164" pos:column="9">char<pos:position pos:line="164" pos:column="13"/></name></type> <name pos:line="164" pos:column="14">someleft<pos:position pos:line="164" pos:column="22"/></name></decl>;<pos:position pos:line="164" pos:column="23"/></decl_stmt>

        <comment type="block" pos:line="166" pos:column="9">/* tell our worker threads to exit */</comment>
        <for pos:line="167" pos:column="9">for <control pos:line="167" pos:column="13">(<init><expr><name pos:line="167" pos:column="14">c<pos:position pos:line="167" pos:column="15"/></name><operator pos:line="167" pos:column="15">=<pos:position pos:line="167" pos:column="16"/></operator><literal type="number" pos:line="167" pos:column="16">0<pos:position pos:line="167" pos:column="17"/></literal></expr>;<pos:position pos:line="167" pos:column="18"/></init> <condition><expr><name pos:line="167" pos:column="19">c<pos:position pos:line="167" pos:column="20"/></name><operator pos:line="167" pos:column="20">&lt;<pos:position pos:line="167" pos:column="24"/></operator><name pos:line="167" pos:column="21">HARD_THREAD_LIMIT<pos:position pos:line="167" pos:column="38"/></name></expr>;<pos:position pos:line="167" pos:column="39"/></condition> <incr><expr><name pos:line="167" pos:column="40">c<pos:position pos:line="167" pos:column="41"/></name><operator pos:line="167" pos:column="41">++<pos:position pos:line="167" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="167" pos:column="44"/></control> <block pos:line="167" pos:column="45">{
            <if pos:line="168" pos:column="13">if <condition pos:line="168" pos:column="16">(<expr><name><name pos:line="168" pos:column="17">ap_scoreboard_image<pos:position pos:line="168" pos:column="36"/></name><operator pos:line="168" pos:column="36">-&gt;<pos:position pos:line="168" pos:column="41"/></operator><name pos:line="168" pos:column="38">servers<pos:position pos:line="168" pos:column="45"/></name><index pos:line="168" pos:column="45">[<expr><name pos:line="168" pos:column="46">child_slot<pos:position pos:line="168" pos:column="56"/></name></expr>]<pos:position pos:line="168" pos:column="57"/></index><index pos:line="168" pos:column="57">[<expr><name pos:line="168" pos:column="58">c<pos:position pos:line="168" pos:column="59"/></name></expr>]<pos:position pos:line="168" pos:column="60"/></index></name><operator pos:line="168" pos:column="60">.<pos:position pos:line="168" pos:column="61"/></operator><name pos:line="168" pos:column="61">status<pos:position pos:line="168" pos:column="67"/></name> <operator pos:line="168" pos:column="68">!=<pos:position pos:line="168" pos:column="70"/></operator> <name pos:line="168" pos:column="71">SERVER_DEAD<pos:position pos:line="168" pos:column="82"/></name></expr>)<pos:position pos:line="168" pos:column="83"/></condition><then pos:line="168" pos:column="83"> <block pos:line="168" pos:column="84">{
                <expr_stmt><expr><call><name pos:line="169" pos:column="17">DosWriteQueue<pos:position pos:line="169" pos:column="30"/></name><argument_list pos:line="169" pos:column="30">(<argument><expr><name pos:line="169" pos:column="31">workq<pos:position pos:line="169" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="38">WORKTYPE_EXIT<pos:position pos:line="169" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="169" pos:column="53">0<pos:position pos:line="169" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="169" pos:column="56">NULL<pos:position pos:line="169" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="169" pos:column="62">0<pos:position pos:line="169" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="170" pos:column="14"/></block></then></if>
        }<pos:position pos:line="171" pos:column="10"/></block></for>

        <do pos:line="173" pos:column="9">do <block pos:line="173" pos:column="12">{
            <expr_stmt><expr><name pos:line="174" pos:column="13">someleft<pos:position pos:line="174" pos:column="21"/></name> <operator pos:line="174" pos:column="22">=<pos:position pos:line="174" pos:column="23"/></operator> <literal type="number" pos:line="174" pos:column="24">0<pos:position pos:line="174" pos:column="25"/></literal></expr>;<pos:position pos:line="174" pos:column="26"/></expr_stmt>

            <for pos:line="176" pos:column="13">for <control pos:line="176" pos:column="17">(<init><expr><name pos:line="176" pos:column="18">c<pos:position pos:line="176" pos:column="19"/></name><operator pos:line="176" pos:column="19">=<pos:position pos:line="176" pos:column="20"/></operator><literal type="number" pos:line="176" pos:column="20">0<pos:position pos:line="176" pos:column="21"/></literal></expr>;<pos:position pos:line="176" pos:column="22"/></init> <condition><expr><name pos:line="176" pos:column="23">c<pos:position pos:line="176" pos:column="24"/></name><operator pos:line="176" pos:column="24">&lt;<pos:position pos:line="176" pos:column="28"/></operator><name pos:line="176" pos:column="25">HARD_THREAD_LIMIT<pos:position pos:line="176" pos:column="42"/></name></expr>;<pos:position pos:line="176" pos:column="43"/></condition> <incr><expr><name pos:line="176" pos:column="44">c<pos:position pos:line="176" pos:column="45"/></name><operator pos:line="176" pos:column="45">++<pos:position pos:line="176" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="176" pos:column="48"/></control> <block pos:line="176" pos:column="49">{
                <if pos:line="177" pos:column="17">if <condition pos:line="177" pos:column="20">(<expr><name><name pos:line="177" pos:column="21">ap_scoreboard_image<pos:position pos:line="177" pos:column="40"/></name><operator pos:line="177" pos:column="40">-&gt;<pos:position pos:line="177" pos:column="45"/></operator><name pos:line="177" pos:column="42">servers<pos:position pos:line="177" pos:column="49"/></name><index pos:line="177" pos:column="49">[<expr><name pos:line="177" pos:column="50">child_slot<pos:position pos:line="177" pos:column="60"/></name></expr>]<pos:position pos:line="177" pos:column="61"/></index><index pos:line="177" pos:column="61">[<expr><name pos:line="177" pos:column="62">c<pos:position pos:line="177" pos:column="63"/></name></expr>]<pos:position pos:line="177" pos:column="64"/></index></name><operator pos:line="177" pos:column="64">.<pos:position pos:line="177" pos:column="65"/></operator><name pos:line="177" pos:column="65">status<pos:position pos:line="177" pos:column="71"/></name> <operator pos:line="177" pos:column="72">!=<pos:position pos:line="177" pos:column="74"/></operator> <name pos:line="177" pos:column="75">SERVER_DEAD<pos:position pos:line="177" pos:column="86"/></name></expr>)<pos:position pos:line="177" pos:column="87"/></condition><then pos:line="177" pos:column="87"> <block pos:line="177" pos:column="88">{
                    <expr_stmt><expr><name pos:line="178" pos:column="21">someleft<pos:position pos:line="178" pos:column="29"/></name> <operator pos:line="178" pos:column="30">=<pos:position pos:line="178" pos:column="31"/></operator> <literal type="number" pos:line="178" pos:column="32">1<pos:position pos:line="178" pos:column="33"/></literal></expr>;<pos:position pos:line="178" pos:column="34"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="179" pos:column="21">DosSleep<pos:position pos:line="179" pos:column="29"/></name><argument_list pos:line="179" pos:column="29">(<argument><expr><literal type="number" pos:line="179" pos:column="30">1000<pos:position pos:line="179" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="36"/></expr_stmt>
                    <break pos:line="180" pos:column="21">break;<pos:position pos:line="180" pos:column="27"/></break>
                }<pos:position pos:line="181" pos:column="18"/></block></then></if>
            }<pos:position pos:line="182" pos:column="14"/></block></for>
        }<pos:position pos:line="183" pos:column="10"/></block> while <condition pos:line="183" pos:column="17">(<expr><name pos:line="183" pos:column="18">someleft<pos:position pos:line="183" pos:column="26"/></name></expr>)<pos:position pos:line="183" pos:column="27"/></condition>;<pos:position pos:line="183" pos:column="28"/></do>
    }<pos:position pos:line="184" pos:column="6"/></block></then> <else pos:line="184" pos:column="7">else <block pos:line="184" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="185" pos:column="9">DosPurgeQueue<pos:position pos:line="185" pos:column="22"/></name><argument_list pos:line="185" pos:column="22">(<argument><expr><name pos:line="185" pos:column="23">workq<pos:position pos:line="185" pos:column="28"/></name></expr></argument>)<pos:position pos:line="185" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="30"/></expr_stmt>

        <for pos:line="187" pos:column="9">for <control pos:line="187" pos:column="13">(<init><expr><name pos:line="187" pos:column="14">c<pos:position pos:line="187" pos:column="15"/></name><operator pos:line="187" pos:column="15">=<pos:position pos:line="187" pos:column="16"/></operator><literal type="number" pos:line="187" pos:column="16">0<pos:position pos:line="187" pos:column="17"/></literal></expr>;<pos:position pos:line="187" pos:column="18"/></init> <condition><expr><name pos:line="187" pos:column="19">c<pos:position pos:line="187" pos:column="20"/></name><operator pos:line="187" pos:column="20">&lt;<pos:position pos:line="187" pos:column="24"/></operator><name pos:line="187" pos:column="21">HARD_THREAD_LIMIT<pos:position pos:line="187" pos:column="38"/></name></expr>;<pos:position pos:line="187" pos:column="39"/></condition> <incr><expr><name pos:line="187" pos:column="40">c<pos:position pos:line="187" pos:column="41"/></name><operator pos:line="187" pos:column="41">++<pos:position pos:line="187" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="187" pos:column="44"/></control> <block pos:line="187" pos:column="45">{
            <if pos:line="188" pos:column="13">if <condition pos:line="188" pos:column="16">(<expr><name><name pos:line="188" pos:column="17">ap_scoreboard_image<pos:position pos:line="188" pos:column="36"/></name><operator pos:line="188" pos:column="36">-&gt;<pos:position pos:line="188" pos:column="41"/></operator><name pos:line="188" pos:column="38">servers<pos:position pos:line="188" pos:column="45"/></name><index pos:line="188" pos:column="45">[<expr><name pos:line="188" pos:column="46">child_slot<pos:position pos:line="188" pos:column="56"/></name></expr>]<pos:position pos:line="188" pos:column="57"/></index><index pos:line="188" pos:column="57">[<expr><name pos:line="188" pos:column="58">c<pos:position pos:line="188" pos:column="59"/></name></expr>]<pos:position pos:line="188" pos:column="60"/></index></name><operator pos:line="188" pos:column="60">.<pos:position pos:line="188" pos:column="61"/></operator><name pos:line="188" pos:column="61">status<pos:position pos:line="188" pos:column="67"/></name> <operator pos:line="188" pos:column="68">!=<pos:position pos:line="188" pos:column="70"/></operator> <name pos:line="188" pos:column="71">SERVER_DEAD<pos:position pos:line="188" pos:column="82"/></name></expr>)<pos:position pos:line="188" pos:column="83"/></condition><then pos:line="188" pos:column="83"> <block pos:line="188" pos:column="84">{
                <expr_stmt><expr><call><name pos:line="189" pos:column="17">DosKillThread<pos:position pos:line="189" pos:column="30"/></name><argument_list pos:line="189" pos:column="30">(<argument><expr><name><name pos:line="189" pos:column="31">ap_scoreboard_image<pos:position pos:line="189" pos:column="50"/></name><operator pos:line="189" pos:column="50">-&gt;<pos:position pos:line="189" pos:column="55"/></operator><name pos:line="189" pos:column="52">servers<pos:position pos:line="189" pos:column="59"/></name><index pos:line="189" pos:column="59">[<expr><name pos:line="189" pos:column="60">child_slot<pos:position pos:line="189" pos:column="70"/></name></expr>]<pos:position pos:line="189" pos:column="71"/></index><index pos:line="189" pos:column="71">[<expr><name pos:line="189" pos:column="72">c<pos:position pos:line="189" pos:column="73"/></name></expr>]<pos:position pos:line="189" pos:column="74"/></index></name><operator pos:line="189" pos:column="74">.<pos:position pos:line="189" pos:column="75"/></operator><name pos:line="189" pos:column="75">tid<pos:position pos:line="189" pos:column="78"/></name></expr></argument>)<pos:position pos:line="189" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="80"/></expr_stmt>
            }<pos:position pos:line="190" pos:column="14"/></block></then></if>
        }<pos:position pos:line="191" pos:column="10"/></block></for>
    }<pos:position pos:line="192" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="194" pos:column="5">apr_pool_destroy<pos:position pos:line="194" pos:column="21"/></name><argument_list pos:line="194" pos:column="21">(<argument><expr><name pos:line="194" pos:column="22">pchild<pos:position pos:line="194" pos:column="28"/></name></expr></argument>)<pos:position pos:line="194" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="30"/></expr_stmt>
}<pos:position pos:line="195" pos:column="2"/></block></function></unit>

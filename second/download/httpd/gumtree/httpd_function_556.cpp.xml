<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_556.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ap_open_logs<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">apr_pool_t<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">pconf<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">apr_pool_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">p<pos:position pos:line="1" pos:column="50"/></name></decl></parameter> <comment type="block" pos:line="1" pos:column="51">/* plog */</comment>, 
                 <parameter><decl><type><name pos:line="2" pos:column="18">apr_pool_t<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">ptemp<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">server_rec<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">s_main<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rc<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">APR_SUCCESS<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">server_rec<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">virt<pos:position pos:line="5" pos:column="21"/></name></decl>, <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="24">q<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">replace_stderr<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_file_t<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">errfile<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name pos:line="7" pos:column="27">NULL<pos:position pos:line="7" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">p<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="34">NULL<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">clear_handle_list<pos:position pos:line="9" pos:column="57"/></name></expr></argument>,
                              <argument><expr><name pos:line="10" pos:column="31">apr_pool_cleanup_null<pos:position pos:line="10" pos:column="52"/></name></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">open_error_log<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">s_main<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="32">p<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call> <operator pos:line="11" pos:column="35">!=<pos:position pos:line="11" pos:column="37"/></operator> <name pos:line="11" pos:column="38">OK<pos:position pos:line="11" pos:column="40"/></name></expr>)<pos:position pos:line="11" pos:column="41"/></condition><then pos:line="11" pos:column="41"> <block pos:line="11" pos:column="42">{
        <return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">DONE<pos:position pos:line="12" pos:column="20"/></name></expr>;<pos:position pos:line="12" pos:column="21"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="15" pos:column="5">replace_stderr<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <literal type="number" pos:line="15" pos:column="22">1<pos:position pos:line="15" pos:column="23"/></literal></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">s_main<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">error_log<pos:position pos:line="16" pos:column="26"/></name></name></expr>)<pos:position pos:line="16" pos:column="27"/></condition><then pos:line="16" pos:column="27"> <block pos:line="16" pos:column="28">{
        <comment type="block" pos:line="17" pos:column="9">/* replace stderr with this new log */</comment>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">apr_file_flush<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name><name pos:line="18" pos:column="24">s_main<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">-&gt;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="32">error_log<pos:position pos:line="18" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">rc<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <call><name pos:line="19" pos:column="19">apr_file_open_stderr<pos:position pos:line="19" pos:column="39"/></name><argument_list pos:line="19" pos:column="39">(<argument><expr><operator pos:line="19" pos:column="40">&amp;<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="41">errfile<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">p<pos:position pos:line="19" pos:column="51"/></name></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call><operator pos:line="19" pos:column="52">)<pos:position pos:line="19" pos:column="53"/></operator> <operator pos:line="19" pos:column="54">==<pos:position pos:line="19" pos:column="56"/></operator> <name pos:line="19" pos:column="57">APR_SUCCESS<pos:position pos:line="19" pos:column="68"/></name></expr>)<pos:position pos:line="19" pos:column="69"/></condition><then pos:line="19" pos:column="69"> <block pos:line="19" pos:column="70">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">rc<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <call><name pos:line="20" pos:column="18">apr_file_dup2<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">errfile<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="41">s_main<pos:position pos:line="20" pos:column="47"/></name><operator pos:line="20" pos:column="47">-&gt;<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="49">error_log<pos:position pos:line="20" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="60">p<pos:position pos:line="20" pos:column="61"/></name></expr></argument>)<pos:position pos:line="20" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">rc<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">!=<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">APR_SUCCESS<pos:position pos:line="22" pos:column="30"/></name></expr>)<pos:position pos:line="22" pos:column="31"/></condition><then pos:line="22" pos:column="31"> <block pos:line="22" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">ap_log_error<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">APLOG_MARK<pos:position pos:line="23" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="38">APLOG_CRIT<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="50">rc<pos:position pos:line="23" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="54">s_main<pos:position pos:line="23" pos:column="60"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="24" pos:column="26">"unable to replace stderr with error_log"<pos:position pos:line="24" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then>
        <else pos:line="26" pos:column="9">else <block pos:line="26" pos:column="14">{
            <expr_stmt><expr><name pos:line="27" pos:column="13">replace_stderr<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <literal type="number" pos:line="27" pos:column="30">0<pos:position pos:line="27" pos:column="31"/></literal></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></else></if>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="30" pos:column="5">/* note that stderr may still need to be replaced with something
     * because it points to the old error log, or back to the tty
     * of the submitter.
     * XXX: This is BS - /dev/null is non-portable
     */</comment>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">replace_stderr<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">&amp;&amp;<pos:position pos:line="35" pos:column="34"/></operator> <call><name pos:line="35" pos:column="27">freopen<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><literal type="string" pos:line="35" pos:column="35">"/dev/null"<pos:position pos:line="35" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="48">"w"<pos:position pos:line="35" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="53">stderr<pos:position pos:line="35" pos:column="59"/></name></expr></argument>)<pos:position pos:line="35" pos:column="60"/></argument_list></call> <operator pos:line="35" pos:column="61">==<pos:position pos:line="35" pos:column="63"/></operator> <name pos:line="35" pos:column="64">NULL<pos:position pos:line="35" pos:column="68"/></name></expr>)<pos:position pos:line="35" pos:column="69"/></condition><then pos:line="35" pos:column="69"> <block pos:line="35" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ap_log_error<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">APLOG_MARK<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="34">APLOG_CRIT<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="46">errno<pos:position pos:line="36" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="53">s_main<pos:position pos:line="36" pos:column="59"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="37" pos:column="22">"unable to replace stderr with /dev/null"<pos:position pos:line="37" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <for pos:line="40" pos:column="5">for <control pos:line="40" pos:column="9">(<init><expr><name pos:line="40" pos:column="10">virt<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">=<pos:position pos:line="40" pos:column="16"/></operator> <name><name pos:line="40" pos:column="17">s_main<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">-&gt;<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="25">next<pos:position pos:line="40" pos:column="29"/></name></name></expr>;<pos:position pos:line="40" pos:column="30"/></init> <condition><expr><name pos:line="40" pos:column="31">virt<pos:position pos:line="40" pos:column="35"/></name></expr>;<pos:position pos:line="40" pos:column="36"/></condition> <incr><expr><name pos:line="40" pos:column="37">virt<pos:position pos:line="40" pos:column="41"/></name> <operator pos:line="40" pos:column="42">=<pos:position pos:line="40" pos:column="43"/></operator> <name><name pos:line="40" pos:column="44">virt<pos:position pos:line="40" pos:column="48"/></name><operator pos:line="40" pos:column="48">-&gt;<pos:position pos:line="40" pos:column="53"/></operator><name pos:line="40" pos:column="50">next<pos:position pos:line="40" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="40" pos:column="55"/></control> <block pos:line="40" pos:column="56">{
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name><name pos:line="41" pos:column="13">virt<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">-&gt;<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="19">error_fname<pos:position pos:line="41" pos:column="30"/></name></name></expr>)<pos:position pos:line="41" pos:column="31"/></condition><then pos:line="41" pos:column="31"> <block pos:line="41" pos:column="32">{
            <for pos:line="42" pos:column="13">for <control pos:line="42" pos:column="17">(<init><expr><name pos:line="42" pos:column="18">q<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">=<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">s_main<pos:position pos:line="42" pos:column="26"/></name></expr>;<pos:position pos:line="42" pos:column="27"/></init> <condition><expr><name pos:line="42" pos:column="28">q<pos:position pos:line="42" pos:column="29"/></name> <operator pos:line="42" pos:column="30">!=<pos:position pos:line="42" pos:column="32"/></operator> <name pos:line="42" pos:column="33">virt<pos:position pos:line="42" pos:column="37"/></name></expr>;<pos:position pos:line="42" pos:column="38"/></condition> <incr><expr><name pos:line="42" pos:column="39">q<pos:position pos:line="42" pos:column="40"/></name> <operator pos:line="42" pos:column="41">=<pos:position pos:line="42" pos:column="42"/></operator> <name><name pos:line="42" pos:column="43">q<pos:position pos:line="42" pos:column="44"/></name><operator pos:line="42" pos:column="44">-&gt;<pos:position pos:line="42" pos:column="49"/></operator><name pos:line="42" pos:column="46">next<pos:position pos:line="42" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="42" pos:column="51"/></control> <block pos:line="42" pos:column="52">{
                <if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name><name pos:line="43" pos:column="21">q<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">-&gt;<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="24">error_fname<pos:position pos:line="43" pos:column="35"/></name></name> <operator pos:line="43" pos:column="36">!=<pos:position pos:line="43" pos:column="38"/></operator> <name pos:line="43" pos:column="39">NULL<pos:position pos:line="43" pos:column="43"/></name>
                    <operator pos:line="44" pos:column="21">&amp;&amp;<pos:position pos:line="44" pos:column="31"/></operator> <call><name pos:line="44" pos:column="24">strcmp<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name><name pos:line="44" pos:column="31">q<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">-&gt;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="34">error_fname<pos:position pos:line="44" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="47">virt<pos:position pos:line="44" pos:column="51"/></name><operator pos:line="44" pos:column="51">-&gt;<pos:position pos:line="44" pos:column="56"/></operator><name pos:line="44" pos:column="53">error_fname<pos:position pos:line="44" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="65"/></argument_list></call> <operator pos:line="44" pos:column="66">==<pos:position pos:line="44" pos:column="68"/></operator> <literal type="number" pos:line="44" pos:column="69">0<pos:position pos:line="44" pos:column="70"/></literal></expr>)<pos:position pos:line="44" pos:column="71"/></condition><then pos:line="44" pos:column="71"> <block pos:line="44" pos:column="72">{
                    <break pos:line="45" pos:column="21">break;<pos:position pos:line="45" pos:column="27"/></break>
                }<pos:position pos:line="46" pos:column="18"/></block></then></if>
            }<pos:position pos:line="47" pos:column="14"/></block></for>

            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<expr><name pos:line="49" pos:column="17">q<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">==<pos:position pos:line="49" pos:column="21"/></operator> <name pos:line="49" pos:column="22">virt<pos:position pos:line="49" pos:column="26"/></name></expr>)<pos:position pos:line="49" pos:column="27"/></condition><then pos:line="49" pos:column="27"> <block pos:line="49" pos:column="28">{
                <if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><call><name pos:line="50" pos:column="21">open_error_log<pos:position pos:line="50" pos:column="35"/></name><argument_list pos:line="50" pos:column="35">(<argument><expr><name pos:line="50" pos:column="36">virt<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="42">p<pos:position pos:line="50" pos:column="43"/></name></expr></argument>)<pos:position pos:line="50" pos:column="44"/></argument_list></call> <operator pos:line="50" pos:column="45">!=<pos:position pos:line="50" pos:column="47"/></operator> <name pos:line="50" pos:column="48">OK<pos:position pos:line="50" pos:column="50"/></name></expr>)<pos:position pos:line="50" pos:column="51"/></condition><then pos:line="50" pos:column="51"> <block pos:line="50" pos:column="52">{
                    <return pos:line="51" pos:column="21">return <expr><name pos:line="51" pos:column="28">DONE<pos:position pos:line="51" pos:column="32"/></name></expr>;<pos:position pos:line="51" pos:column="33"/></return>
                }<pos:position pos:line="52" pos:column="18"/></block></then></if>
            }<pos:position pos:line="53" pos:column="14"/></block></then>
            <else pos:line="54" pos:column="13">else <block pos:line="54" pos:column="18">{
                <expr_stmt><expr><name><name pos:line="55" pos:column="17">virt<pos:position pos:line="55" pos:column="21"/></name><operator pos:line="55" pos:column="21">-&gt;<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="23">error_log<pos:position pos:line="55" pos:column="32"/></name></name> <operator pos:line="55" pos:column="33">=<pos:position pos:line="55" pos:column="34"/></operator> <name><name pos:line="55" pos:column="35">q<pos:position pos:line="55" pos:column="36"/></name><operator pos:line="55" pos:column="36">-&gt;<pos:position pos:line="55" pos:column="41"/></operator><name pos:line="55" pos:column="38">error_log<pos:position pos:line="55" pos:column="47"/></name></name></expr>;<pos:position pos:line="55" pos:column="48"/></expr_stmt>
            }<pos:position pos:line="56" pos:column="14"/></block></else></if>
        }<pos:position pos:line="57" pos:column="10"/></block></then>
        <else pos:line="58" pos:column="9">else <block pos:line="58" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="59" pos:column="13">virt<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">-&gt;<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="19">error_log<pos:position pos:line="59" pos:column="28"/></name></name> <operator pos:line="59" pos:column="29">=<pos:position pos:line="59" pos:column="30"/></operator> <name><name pos:line="59" pos:column="31">s_main<pos:position pos:line="59" pos:column="37"/></name><operator pos:line="59" pos:column="37">-&gt;<pos:position pos:line="59" pos:column="42"/></operator><name pos:line="59" pos:column="39">error_log<pos:position pos:line="59" pos:column="48"/></name></name></expr>;<pos:position pos:line="59" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></else></if>
    }<pos:position pos:line="61" pos:column="6"/></block></for>
    <return pos:line="62" pos:column="5">return <expr><name pos:line="62" pos:column="12">OK<pos:position pos:line="62" pos:column="14"/></name></expr>;<pos:position pos:line="62" pos:column="15"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2593_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">XML_Bool<pos:position pos:line="1" pos:column="16"/></name></type>
<name pos:line="2" pos:column="1">setContext<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">XML_Parser<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">parser<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">XML_Char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">context<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">DTD<pos:position pos:line="4" pos:column="6"/></name> <modifier pos:line="4" pos:column="7">*<pos:position pos:line="4" pos:column="8"/></modifier> <specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier></type> <name pos:line="4" pos:column="15">dtd<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">_dtd<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>  <comment type="block" pos:line="4" pos:column="28">/* save one level of indirection */</comment>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">XML_Char<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">s<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">context<pos:position pos:line="5" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>

  <while pos:line="7" pos:column="3">while <condition pos:line="7" pos:column="9">(<expr><operator pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="11">context<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">!=<pos:position pos:line="7" pos:column="21"/></operator> <call><name pos:line="7" pos:column="22">XML_T<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><literal type="char" pos:line="7" pos:column="28">'\0'<pos:position pos:line="7" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="34"/></condition> <block pos:line="7" pos:column="35">{
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">s<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">==<pos:position pos:line="8" pos:column="14"/></operator> <name pos:line="8" pos:column="15">CONTEXT_SEP<pos:position pos:line="8" pos:column="26"/></name> <operator pos:line="8" pos:column="27">||<pos:position pos:line="8" pos:column="29"/></operator> <operator pos:line="8" pos:column="30">*<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">s<pos:position pos:line="8" pos:column="32"/></name> <operator pos:line="8" pos:column="33">==<pos:position pos:line="8" pos:column="35"/></operator> <call><name pos:line="8" pos:column="36">XML_T<pos:position pos:line="8" pos:column="41"/></name><argument_list pos:line="8" pos:column="41">(<argument><expr><literal type="char" pos:line="8" pos:column="42">'\0'<pos:position pos:line="8" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="48"/></condition><then pos:line="8" pos:column="48"> <block pos:line="8" pos:column="49">{
      <decl_stmt><decl><type><name pos:line="9" pos:column="7">ENTITY<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">e<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>
      <if pos:line="10" pos:column="7">if <condition pos:line="10" pos:column="10">(<expr><operator pos:line="10" pos:column="11">!<pos:position pos:line="10" pos:column="12"/></operator><call><name pos:line="10" pos:column="12">poolAppendChar<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><operator pos:line="10" pos:column="27">&amp;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="28">tempPool<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="38">XML_T<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">(<argument><expr><literal type="char" pos:line="10" pos:column="44">'\0'<pos:position pos:line="10" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="51"/></condition><then pos:line="10" pos:column="51">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">XML_FALSE<pos:position pos:line="11" pos:column="25"/></name></expr>;<pos:position pos:line="11" pos:column="26"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="12" pos:column="7">e<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <operator pos:line="12" pos:column="11">(<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">ENTITY<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">*<pos:position pos:line="12" pos:column="20"/></operator><operator pos:line="12" pos:column="20">)<pos:position pos:line="12" pos:column="21"/></operator><call><name pos:line="12" pos:column="21">lookup<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><operator pos:line="12" pos:column="28">&amp;<pos:position pos:line="12" pos:column="33"/></operator><name><name pos:line="12" pos:column="29">dtd<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">generalEntities<pos:position pos:line="12" pos:column="49"/></name></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="51">poolStart<pos:position pos:line="12" pos:column="60"/></name><argument_list pos:line="12" pos:column="60">(<argument><expr><operator pos:line="12" pos:column="61">&amp;<pos:position pos:line="12" pos:column="66"/></operator><name pos:line="12" pos:column="62">tempPool<pos:position pos:line="12" pos:column="70"/></name></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="73">0<pos:position pos:line="12" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="76"/></expr_stmt>
      <if pos:line="13" pos:column="7">if <condition pos:line="13" pos:column="10">(<expr><name pos:line="13" pos:column="11">e<pos:position pos:line="13" pos:column="12"/></name></expr>)<pos:position pos:line="13" pos:column="13"/></condition><then pos:line="13" pos:column="13">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="9">e<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">open<pos:position pos:line="14" pos:column="16"/></name></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">XML_TRUE<pos:position pos:line="14" pos:column="27"/></name></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt></block></then></if>
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><operator pos:line="15" pos:column="11">*<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="12">s<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">!=<pos:position pos:line="15" pos:column="16"/></operator> <call><name pos:line="15" pos:column="17">XML_T<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><literal type="char" pos:line="15" pos:column="23">'\0'<pos:position pos:line="15" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="9">s<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">++<pos:position pos:line="16" pos:column="12"/></operator></expr>;<pos:position pos:line="16" pos:column="13"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="17" pos:column="7">context<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">s<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">poolDiscard<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><operator pos:line="18" pos:column="19">&amp;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="20">tempPool<pos:position pos:line="18" pos:column="28"/></name></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then>
    <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><operator pos:line="20" pos:column="14">*<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">s<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">==<pos:position pos:line="20" pos:column="19"/></operator> <call><name pos:line="20" pos:column="20">XML_T<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><literal type="char" pos:line="20" pos:column="26">'='<pos:position pos:line="20" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="31"/></condition><then pos:line="20" pos:column="31"> <block pos:line="20" pos:column="32">{
      <decl_stmt><decl><type><name pos:line="21" pos:column="7">PREFIX<pos:position pos:line="21" pos:column="13"/></name> <modifier pos:line="21" pos:column="14">*<pos:position pos:line="21" pos:column="15"/></modifier></type><name pos:line="21" pos:column="15">prefix<pos:position pos:line="21" pos:column="21"/></name></decl>;<pos:position pos:line="21" pos:column="22"/></decl_stmt>
      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><call><name pos:line="22" pos:column="11">poolLength<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><operator pos:line="22" pos:column="22">&amp;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="23">tempPool<pos:position pos:line="22" pos:column="31"/></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call> <operator pos:line="22" pos:column="33">==<pos:position pos:line="22" pos:column="35"/></operator> <literal type="number" pos:line="22" pos:column="36">0<pos:position pos:line="22" pos:column="37"/></literal></expr>)<pos:position pos:line="22" pos:column="38"/></condition><then pos:line="22" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="9">prefix<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <operator pos:line="23" pos:column="18">&amp;<pos:position pos:line="23" pos:column="23"/></operator><name><name pos:line="23" pos:column="19">dtd<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">-&gt;<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="24">defaultPrefix<pos:position pos:line="23" pos:column="37"/></name></name></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt></block></then>
      <else pos:line="24" pos:column="7">else <block pos:line="24" pos:column="12">{
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><call><name pos:line="25" pos:column="14">poolAppendChar<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><operator pos:line="25" pos:column="29">&amp;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="30">tempPool<pos:position pos:line="25" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="40">XML_T<pos:position pos:line="25" pos:column="45"/></name><argument_list pos:line="25" pos:column="45">(<argument><expr><literal type="char" pos:line="25" pos:column="46">'\0'<pos:position pos:line="25" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="53"/></condition><then pos:line="25" pos:column="53">
          <block type="pseudo"><return pos:line="26" pos:column="11">return <expr><name pos:line="26" pos:column="18">XML_FALSE<pos:position pos:line="26" pos:column="27"/></name></expr>;<pos:position pos:line="26" pos:column="28"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="27" pos:column="9">prefix<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <operator pos:line="27" pos:column="18">(<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">PREFIX<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">*<pos:position pos:line="27" pos:column="27"/></operator><operator pos:line="27" pos:column="27">)<pos:position pos:line="27" pos:column="28"/></operator><call><name pos:line="27" pos:column="28">lookup<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><operator pos:line="27" pos:column="35">&amp;<pos:position pos:line="27" pos:column="40"/></operator><name><name pos:line="27" pos:column="36">dtd<pos:position pos:line="27" pos:column="39"/></name><operator pos:line="27" pos:column="39">-&gt;<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="41">prefixes<pos:position pos:line="27" pos:column="49"/></name></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="51">poolStart<pos:position pos:line="27" pos:column="60"/></name><argument_list pos:line="27" pos:column="60">(<argument><expr><operator pos:line="27" pos:column="61">&amp;<pos:position pos:line="27" pos:column="66"/></operator><name pos:line="27" pos:column="62">tempPool<pos:position pos:line="27" pos:column="70"/></name></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></call></expr></argument>,
                                  <argument><expr><sizeof pos:line="28" pos:column="35">sizeof<argument_list pos:line="28" pos:column="41">(<argument><expr><name pos:line="28" pos:column="42">PREFIX<pos:position pos:line="28" pos:column="48"/></name></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="51"/></expr_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">prefix<pos:position pos:line="29" pos:column="20"/></name></expr>)<pos:position pos:line="29" pos:column="21"/></condition><then pos:line="29" pos:column="21">
          <block type="pseudo"><return pos:line="30" pos:column="11">return <expr><name pos:line="30" pos:column="18">XML_FALSE<pos:position pos:line="30" pos:column="27"/></name></expr>;<pos:position pos:line="30" pos:column="28"/></return></block></then></if>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name><name pos:line="31" pos:column="13">prefix<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">-&gt;<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="21">name<pos:position pos:line="31" pos:column="25"/></name></name> <operator pos:line="31" pos:column="26">==<pos:position pos:line="31" pos:column="28"/></operator> <call><name pos:line="31" pos:column="29">poolStart<pos:position pos:line="31" pos:column="38"/></name><argument_list pos:line="31" pos:column="38">(<argument><expr><operator pos:line="31" pos:column="39">&amp;<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="40">tempPool<pos:position pos:line="31" pos:column="48"/></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="50"/></condition><then pos:line="31" pos:column="50"> <block pos:line="31" pos:column="51">{
          <expr_stmt><expr><name><name pos:line="32" pos:column="11">prefix<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">name<pos:position pos:line="32" pos:column="23"/></name></name> <operator pos:line="32" pos:column="24">=<pos:position pos:line="32" pos:column="25"/></operator> <call><name pos:line="32" pos:column="26">poolCopyString<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><operator pos:line="32" pos:column="41">&amp;<pos:position pos:line="32" pos:column="46"/></operator><name><name pos:line="32" pos:column="42">dtd<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">-&gt;<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="47">pool<pos:position pos:line="32" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="53">prefix<pos:position pos:line="32" pos:column="59"/></name><operator pos:line="32" pos:column="59">-&gt;<pos:position pos:line="32" pos:column="64"/></operator><name pos:line="32" pos:column="61">name<pos:position pos:line="32" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="67"/></expr_stmt>
          <if pos:line="33" pos:column="11">if <condition pos:line="33" pos:column="14">(<expr><operator pos:line="33" pos:column="15">!<pos:position pos:line="33" pos:column="16"/></operator><name><name pos:line="33" pos:column="16">prefix<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">-&gt;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="24">name<pos:position pos:line="33" pos:column="28"/></name></name></expr>)<pos:position pos:line="33" pos:column="29"/></condition><then pos:line="33" pos:column="29">
            <block type="pseudo"><return pos:line="34" pos:column="13">return <expr><name pos:line="34" pos:column="20">XML_FALSE<pos:position pos:line="34" pos:column="29"/></name></expr>;<pos:position pos:line="34" pos:column="30"/></return></block></then></if>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">poolDiscard<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><operator pos:line="36" pos:column="21">&amp;<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="22">tempPool<pos:position pos:line="36" pos:column="30"/></name></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="37" pos:column="8"/></block></else></if>
      <for pos:line="38" pos:column="7">for <control pos:line="38" pos:column="11">(<init><expr><name pos:line="38" pos:column="12">context<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <name pos:line="38" pos:column="22">s<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">+<pos:position pos:line="38" pos:column="25"/></operator> <literal type="number" pos:line="38" pos:column="26">1<pos:position pos:line="38" pos:column="27"/></literal></expr>;<pos:position pos:line="38" pos:column="28"/></init>
           <condition><expr><operator pos:line="39" pos:column="12">*<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="13">context<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">!=<pos:position pos:line="39" pos:column="23"/></operator> <name pos:line="39" pos:column="24">CONTEXT_SEP<pos:position pos:line="39" pos:column="35"/></name> <operator pos:line="39" pos:column="36">&amp;&amp;<pos:position pos:line="39" pos:column="46"/></operator> <operator pos:line="39" pos:column="39">*<pos:position pos:line="39" pos:column="40"/></operator><name pos:line="39" pos:column="40">context<pos:position pos:line="39" pos:column="47"/></name> <operator pos:line="39" pos:column="48">!=<pos:position pos:line="39" pos:column="50"/></operator> <call><name pos:line="39" pos:column="51">XML_T<pos:position pos:line="39" pos:column="56"/></name><argument_list pos:line="39" pos:column="56">(<argument><expr><literal type="char" pos:line="39" pos:column="57">'\0'<pos:position pos:line="39" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="63"/></condition>
           <incr><expr><name pos:line="40" pos:column="12">context<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">++<pos:position pos:line="40" pos:column="21"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="22"/></control>
        <block type="pseudo"><if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><call><name pos:line="41" pos:column="14">poolAppendChar<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><operator pos:line="41" pos:column="29">&amp;<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="30">tempPool<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="40">*<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="41">context<pos:position pos:line="41" pos:column="48"/></name></expr></argument>)<pos:position pos:line="41" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="50"/></condition><then pos:line="41" pos:column="50">
          <block type="pseudo"><return pos:line="42" pos:column="11">return <expr><name pos:line="42" pos:column="18">XML_FALSE<pos:position pos:line="42" pos:column="27"/></name></expr>;<pos:position pos:line="42" pos:column="28"/></return></block></then></if></block></for>
      <if pos:line="43" pos:column="7">if <condition pos:line="43" pos:column="10">(<expr><operator pos:line="43" pos:column="11">!<pos:position pos:line="43" pos:column="12"/></operator><call><name pos:line="43" pos:column="12">poolAppendChar<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><operator pos:line="43" pos:column="27">&amp;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="28">tempPool<pos:position pos:line="43" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="38">XML_T<pos:position pos:line="43" pos:column="43"/></name><argument_list pos:line="43" pos:column="43">(<argument><expr><literal type="char" pos:line="43" pos:column="44">'\0'<pos:position pos:line="43" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="51"/></condition><then pos:line="43" pos:column="51">
        <block type="pseudo"><return pos:line="44" pos:column="9">return <expr><name pos:line="44" pos:column="16">XML_FALSE<pos:position pos:line="44" pos:column="25"/></name></expr>;<pos:position pos:line="44" pos:column="26"/></return></block></then></if>
      <if pos:line="45" pos:column="7">if <condition pos:line="45" pos:column="10">(<expr><call><name pos:line="45" pos:column="11">addBinding<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">parser<pos:position pos:line="45" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="30">prefix<pos:position pos:line="45" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="38">0<pos:position pos:line="45" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="41">poolStart<pos:position pos:line="45" pos:column="50"/></name><argument_list pos:line="45" pos:column="50">(<argument><expr><operator pos:line="45" pos:column="51">&amp;<pos:position pos:line="45" pos:column="56"/></operator><name pos:line="45" pos:column="52">tempPool<pos:position pos:line="45" pos:column="60"/></name></expr></argument>)<pos:position pos:line="45" pos:column="61"/></argument_list></call></expr></argument>,
                     <argument><expr><operator pos:line="46" pos:column="22">&amp;<pos:position pos:line="46" pos:column="27"/></operator><name pos:line="46" pos:column="23">inheritedBindings<pos:position pos:line="46" pos:column="40"/></name></expr></argument>)<pos:position pos:line="46" pos:column="41"/></argument_list></call> <operator pos:line="46" pos:column="42">!=<pos:position pos:line="46" pos:column="44"/></operator> <name pos:line="46" pos:column="45">XML_ERROR_NONE<pos:position pos:line="46" pos:column="59"/></name></expr>)<pos:position pos:line="46" pos:column="60"/></condition><then pos:line="46" pos:column="60">
        <block type="pseudo"><return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">XML_FALSE<pos:position pos:line="47" pos:column="25"/></name></expr>;<pos:position pos:line="47" pos:column="26"/></return></block></then></if>
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">poolDiscard<pos:position pos:line="48" pos:column="18"/></name><argument_list pos:line="48" pos:column="18">(<argument><expr><operator pos:line="48" pos:column="19">&amp;<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="20">tempPool<pos:position pos:line="48" pos:column="28"/></name></expr></argument>)<pos:position pos:line="48" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="30"/></expr_stmt>
      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><operator pos:line="49" pos:column="11">*<pos:position pos:line="49" pos:column="12"/></operator><name pos:line="49" pos:column="12">context<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">!=<pos:position pos:line="49" pos:column="22"/></operator> <call><name pos:line="49" pos:column="23">XML_T<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><literal type="char" pos:line="49" pos:column="29">'\0'<pos:position pos:line="49" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="35"/></condition><then pos:line="49" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="50" pos:column="9">++<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="11">context<pos:position pos:line="50" pos:column="18"/></name></expr>;<pos:position pos:line="50" pos:column="19"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="51" pos:column="7">s<pos:position pos:line="51" pos:column="8"/></name> <operator pos:line="51" pos:column="9">=<pos:position pos:line="51" pos:column="10"/></operator> <name pos:line="51" pos:column="11">context<pos:position pos:line="51" pos:column="18"/></name></expr>;<pos:position pos:line="51" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if></elseif>
    <else pos:line="53" pos:column="5">else <block pos:line="53" pos:column="10">{
      <if pos:line="54" pos:column="7">if <condition pos:line="54" pos:column="10">(<expr><operator pos:line="54" pos:column="11">!<pos:position pos:line="54" pos:column="12"/></operator><call><name pos:line="54" pos:column="12">poolAppendChar<pos:position pos:line="54" pos:column="26"/></name><argument_list pos:line="54" pos:column="26">(<argument><expr><operator pos:line="54" pos:column="27">&amp;<pos:position pos:line="54" pos:column="32"/></operator><name pos:line="54" pos:column="28">tempPool<pos:position pos:line="54" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="38">*<pos:position pos:line="54" pos:column="39"/></operator><name pos:line="54" pos:column="39">s<pos:position pos:line="54" pos:column="40"/></name></expr></argument>)<pos:position pos:line="54" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="42"/></condition><then pos:line="54" pos:column="42">
        <block type="pseudo"><return pos:line="55" pos:column="9">return <expr><name pos:line="55" pos:column="16">XML_FALSE<pos:position pos:line="55" pos:column="25"/></name></expr>;<pos:position pos:line="55" pos:column="26"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="56" pos:column="7">s<pos:position pos:line="56" pos:column="8"/></name><operator pos:line="56" pos:column="8">++<pos:position pos:line="56" pos:column="10"/></operator></expr>;<pos:position pos:line="56" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></else></if>
  }<pos:position pos:line="58" pos:column="4"/></block></while>
  <return pos:line="59" pos:column="3">return <expr><name pos:line="59" pos:column="10">XML_TRUE<pos:position pos:line="59" pos:column="18"/></name></expr>;<pos:position pos:line="59" pos:column="19"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2468_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name><modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">authn_ldap_xlate_password<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name pos:line="1" pos:column="46">request_rec<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">r<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                                             <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name><modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type> <name pos:line="2" pos:column="58">sent_password<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_xlate_t<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">convset<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name pos:line="4" pos:column="28">NULL<pos:position pos:line="4" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">inbytes<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">outbytes<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">outbuf<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">charset_conversions<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">&amp;&amp;<pos:position pos:line="9" pos:column="39"/></operator> <operator pos:line="9" pos:column="32">(<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">convset<pos:position pos:line="9" pos:column="40"/></name> <operator pos:line="9" pos:column="41">=<pos:position pos:line="9" pos:column="42"/></operator> <call><name pos:line="9" pos:column="43">get_conv_set<pos:position pos:line="9" pos:column="55"/></name><argument_list pos:line="9" pos:column="55">(<argument><expr><name pos:line="9" pos:column="56">r<pos:position pos:line="9" pos:column="57"/></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call><operator pos:line="9" pos:column="58">)<pos:position pos:line="9" pos:column="59"/></operator></expr> )<pos:position pos:line="9" pos:column="61"/></condition><then pos:line="9" pos:column="61"> <block pos:line="9" pos:column="62">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">inbytes<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <call><name pos:line="10" pos:column="19">strlen<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">sent_password<pos:position pos:line="10" pos:column="39"/></name></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">outbytes<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <operator pos:line="11" pos:column="20">(<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="21">inbytes<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">+<pos:position pos:line="11" pos:column="29"/></operator><literal type="number" pos:line="11" pos:column="29">1<pos:position pos:line="11" pos:column="30"/></literal><operator pos:line="11" pos:column="30">)<pos:position pos:line="11" pos:column="31"/></operator><operator pos:line="11" pos:column="31">*<pos:position pos:line="11" pos:column="32"/></operator><literal type="number" pos:line="11" pos:column="32">3<pos:position pos:line="11" pos:column="33"/></literal></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">outbuf<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">apr_pcalloc<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name><name pos:line="12" pos:column="30">r<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">pool<pos:position pos:line="12" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="39">outbytes<pos:position pos:line="12" pos:column="47"/></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>

        <comment type="block" pos:line="14" pos:column="9">/* Convert the password to UTF-8. */</comment>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">apr_xlate_conv_buffer<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">convset<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">sent_password<pos:position pos:line="15" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="59">&amp;<pos:position pos:line="15" pos:column="64"/></operator><name pos:line="15" pos:column="60">inbytes<pos:position pos:line="15" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="69">outbuf<pos:position pos:line="15" pos:column="75"/></name></expr></argument>,
                                  <argument><expr><operator pos:line="16" pos:column="35">&amp;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="36">outbytes<pos:position pos:line="16" pos:column="44"/></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call> <operator pos:line="16" pos:column="46">==<pos:position pos:line="16" pos:column="48"/></operator> <name pos:line="16" pos:column="49">APR_SUCCESS<pos:position pos:line="16" pos:column="60"/></name></expr>)<pos:position pos:line="16" pos:column="61"/></condition><then pos:line="16" pos:column="61">
            <block type="pseudo"><return pos:line="17" pos:column="13">return <expr><name pos:line="17" pos:column="20">outbuf<pos:position pos:line="17" pos:column="26"/></name></expr>;<pos:position pos:line="17" pos:column="27"/></return></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">sent_password<pos:position pos:line="20" pos:column="25"/></name></expr>;<pos:position pos:line="20" pos:column="26"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

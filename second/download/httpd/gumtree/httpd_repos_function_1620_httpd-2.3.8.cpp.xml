<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1620_httpd-2.3.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">brigade_peek<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">apr_bucket_brigade<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">bbIn<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">buff<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">apr_size_t<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">bufflen<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_bucket<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">b<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">readbytes<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><literal type="number" pos:line="5" pos:column="28">0<pos:position pos:line="5" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">bufflen<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">--<pos:position pos:line="7" pos:column="18"/></operator></expr>)<pos:position pos:line="7" pos:column="19"/></condition><then pos:line="7" pos:column="19">
        <comment type="block" pos:line="8" pos:column="9">/* compensate for NULL */</comment>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="9" pos:column="9">*<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">buff<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <literal type="char" pos:line="9" pos:column="17">'\0'<pos:position pos:line="9" pos:column="21"/></literal></expr>;<pos:position pos:line="9" pos:column="22"/></expr_stmt></block></then>
    <else pos:line="10" pos:column="5">else
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">APR_EGENERAL<pos:position pos:line="11" pos:column="28"/></name></expr>;<pos:position pos:line="11" pos:column="29"/></return></block></else></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">APR_BRIGADE_EMPTY<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">bbIn<pos:position pos:line="13" pos:column="31"/></name></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="33"/></condition><then pos:line="13" pos:column="33">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">APR_EGENERAL<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="16" pos:column="5">b<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <call><name pos:line="16" pos:column="9">APR_BRIGADE_FIRST<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">bbIn<pos:position pos:line="16" pos:column="31"/></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>

    <while pos:line="18" pos:column="5">while <condition pos:line="18" pos:column="11">(<expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">b<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">!=<pos:position pos:line="18" pos:column="17"/></operator> <call><name pos:line="18" pos:column="18">APR_BRIGADE_SENTINEL<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><name pos:line="18" pos:column="39">bbIn<pos:position pos:line="18" pos:column="43"/></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call><operator pos:line="18" pos:column="44">)<pos:position pos:line="18" pos:column="45"/></operator> <operator pos:line="18" pos:column="46">&amp;&amp;<pos:position pos:line="18" pos:column="56"/></operator> <operator pos:line="18" pos:column="49">(<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="50">readbytes<pos:position pos:line="18" pos:column="59"/></name> <operator pos:line="18" pos:column="60">&lt;<pos:position pos:line="18" pos:column="64"/></operator> <name pos:line="18" pos:column="62">bufflen<pos:position pos:line="18" pos:column="69"/></name><operator pos:line="18" pos:column="69">)<pos:position pos:line="18" pos:column="70"/></operator></expr>)<pos:position pos:line="18" pos:column="71"/></condition> <block pos:line="18" pos:column="72">{
        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">const<pos:position pos:line="19" pos:column="14"/></specifier> <name pos:line="19" pos:column="15">char<pos:position pos:line="19" pos:column="19"/></name> <modifier pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></modifier></type><name pos:line="19" pos:column="21">pos<pos:position pos:line="19" pos:column="24"/></name></decl>;<pos:position pos:line="19" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">const<pos:position pos:line="20" pos:column="14"/></specifier> <name pos:line="20" pos:column="15">char<pos:position pos:line="20" pos:column="19"/></name> <modifier pos:line="20" pos:column="20">*<pos:position pos:line="20" pos:column="21"/></modifier></type><name pos:line="20" pos:column="21">str<pos:position pos:line="20" pos:column="24"/></name></decl>;<pos:position pos:line="20" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">apr_size_t<pos:position pos:line="21" pos:column="19"/></name></type> <name pos:line="21" pos:column="20">len<pos:position pos:line="21" pos:column="23"/></name></decl>;<pos:position pos:line="21" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="22" pos:column="9">apr_status_t<pos:position pos:line="22" pos:column="21"/></name></type> <name pos:line="22" pos:column="22">rv<pos:position pos:line="22" pos:column="24"/></name></decl>;<pos:position pos:line="22" pos:column="25"/></decl_stmt>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">rv<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <call><name pos:line="24" pos:column="19">apr_bucket_read<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">b<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="38">&amp;<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="39">str<pos:position pos:line="24" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="44">&amp;<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="45">len<pos:position pos:line="24" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="50">APR_NONBLOCK_READ<pos:position pos:line="24" pos:column="67"/></name></expr></argument>)<pos:position pos:line="24" pos:column="68"/></argument_list></call><operator pos:line="24" pos:column="68">)<pos:position pos:line="24" pos:column="69"/></operator>
                <operator pos:line="25" pos:column="17">!=<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="20">APR_SUCCESS<pos:position pos:line="25" pos:column="31"/></name></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32">
            <block type="pseudo"><return pos:line="26" pos:column="13">return <expr><name pos:line="26" pos:column="20">rv<pos:position pos:line="26" pos:column="22"/></name></expr>;<pos:position pos:line="26" pos:column="23"/></return></block></then></if>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">pos<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <call><name pos:line="28" pos:column="20">memchr<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><name pos:line="28" pos:column="27">str<pos:position pos:line="28" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="32">APR_ASCII_LF<pos:position pos:line="28" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="46">len<pos:position pos:line="28" pos:column="49"/></name></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call><operator pos:line="28" pos:column="50">)<pos:position pos:line="28" pos:column="51"/></operator> <operator pos:line="28" pos:column="52">!=<pos:position pos:line="28" pos:column="54"/></operator> <name pos:line="28" pos:column="55">NULL<pos:position pos:line="28" pos:column="59"/></name></expr>)<pos:position pos:line="28" pos:column="60"/></condition><then pos:line="28" pos:column="60">
            <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="13">len<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="19">pos<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">-<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="25">str<pos:position pos:line="29" pos:column="28"/></name></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt></block></then></if>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">len<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">&gt;<pos:position pos:line="30" pos:column="21"/></operator> <name pos:line="30" pos:column="19">bufflen<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">-<pos:position pos:line="30" pos:column="28"/></operator> <name pos:line="30" pos:column="29">readbytes<pos:position pos:line="30" pos:column="38"/></name></expr>)<pos:position pos:line="30" pos:column="39"/></condition><then pos:line="30" pos:column="39">
            <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="13">len<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">bufflen<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">-<pos:position pos:line="31" pos:column="28"/></operator> <name pos:line="31" pos:column="29">readbytes<pos:position pos:line="31" pos:column="38"/></name></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">memcpy<pos:position pos:line="32" pos:column="15"/></name> <argument_list pos:line="32" pos:column="16">(<argument><expr><name pos:line="32" pos:column="17">buff<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">+<pos:position pos:line="32" pos:column="23"/></operator> <name pos:line="32" pos:column="24">readbytes<pos:position pos:line="32" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="35">str<pos:position pos:line="32" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="40">len<pos:position pos:line="32" pos:column="43"/></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="33" pos:column="9">readbytes<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">+=<pos:position pos:line="33" pos:column="21"/></operator> <name pos:line="33" pos:column="22">len<pos:position pos:line="33" pos:column="25"/></name></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">buff<pos:position pos:line="34" pos:column="13"/></name><index pos:line="34" pos:column="13">[<expr><name pos:line="34" pos:column="14">readbytes<pos:position pos:line="34" pos:column="23"/></name></expr>]<pos:position pos:line="34" pos:column="24"/></index></name> <operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator> <literal type="char" pos:line="34" pos:column="27">'\0'<pos:position pos:line="34" pos:column="31"/></literal></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>

        <expr_stmt><expr><name pos:line="36" pos:column="9">b<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <call><name pos:line="36" pos:column="13">APR_BUCKET_NEXT<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><name pos:line="36" pos:column="29">b<pos:position pos:line="36" pos:column="30"/></name></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></while>
    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">APR_SUCCESS<pos:position pos:line="38" pos:column="23"/></name></expr>;<pos:position pos:line="38" pos:column="24"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

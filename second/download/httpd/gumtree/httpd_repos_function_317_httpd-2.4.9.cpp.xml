<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_317_httpd-2.4.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">dav_error<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">dav_lock_walker<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">dav_walk_resource<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">wres<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">calltype<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">dav_walker_ctx<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">ctx<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name><name pos:line="3" pos:column="27">wres<pos:position pos:line="3" pos:column="31"/></name><operator pos:line="3" pos:column="31">-&gt;<pos:position pos:line="3" pos:column="36"/></operator><name pos:line="3" pos:column="33">walk_ctx<pos:position pos:line="3" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">dav_error<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">err<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* We don't want to set indirects on the target */</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call pos:line="7" pos:column="9">(<modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier><name><name pos:line="7" pos:column="11">wres<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">resource<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">hooks<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">is_same_resource<pos:position pos:line="7" pos:column="50"/></name></name>)<argument_list pos:line="7" pos:column="51">(<argument><expr><name><name pos:line="7" pos:column="52">wres<pos:position pos:line="7" pos:column="56"/></name><operator pos:line="7" pos:column="56">-&gt;<pos:position pos:line="7" pos:column="61"/></operator><name pos:line="7" pos:column="58">resource<pos:position pos:line="7" pos:column="66"/></name></name></expr></argument>,
                                                   <argument><expr><name><name pos:line="8" pos:column="52">ctx<pos:position pos:line="8" pos:column="55"/></name><operator pos:line="8" pos:column="55">-&gt;<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="57">w<pos:position pos:line="8" pos:column="58"/></name><operator pos:line="8" pos:column="58">.<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="59">root<pos:position pos:line="8" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="65"/></condition><then pos:line="8" pos:column="65">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr>;<pos:position pos:line="9" pos:column="21"/></return></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">err<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <call pos:line="11" pos:column="16">(<modifier pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></modifier><name><name pos:line="11" pos:column="18">ctx<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">w<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">.<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">lockdb<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">-&gt;<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="33">hooks<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">-&gt;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="40">append_locks<pos:position pos:line="11" pos:column="52"/></name></name>)<argument_list pos:line="11" pos:column="53">(<argument><expr><name><name pos:line="11" pos:column="54">ctx<pos:position pos:line="11" pos:column="57"/></name><operator pos:line="11" pos:column="57">-&gt;<pos:position pos:line="11" pos:column="62"/></operator><name pos:line="11" pos:column="59">w<pos:position pos:line="11" pos:column="60"/></name><operator pos:line="11" pos:column="60">.<pos:position pos:line="11" pos:column="61"/></operator><name pos:line="11" pos:column="61">lockdb<pos:position pos:line="11" pos:column="67"/></name></name></expr></argument>,
                                                     <argument><expr><name><name pos:line="12" pos:column="54">wres<pos:position pos:line="12" pos:column="58"/></name><operator pos:line="12" pos:column="58">-&gt;<pos:position pos:line="12" pos:column="63"/></operator><name pos:line="12" pos:column="60">resource<pos:position pos:line="12" pos:column="68"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="70">1<pos:position pos:line="12" pos:column="71"/></literal></expr></argument>,
                                                     <argument><expr><name><name pos:line="13" pos:column="54">ctx<pos:position pos:line="13" pos:column="57"/></name><operator pos:line="13" pos:column="57">-&gt;<pos:position pos:line="13" pos:column="62"/></operator><name pos:line="13" pos:column="59">lock<pos:position pos:line="13" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call><operator pos:line="13" pos:column="64">)<pos:position pos:line="13" pos:column="65"/></operator> <operator pos:line="13" pos:column="66">!=<pos:position pos:line="13" pos:column="68"/></operator> <name pos:line="13" pos:column="69">NULL<pos:position pos:line="13" pos:column="73"/></name></expr>)<pos:position pos:line="13" pos:column="74"/></condition><then pos:line="13" pos:column="74"> <block pos:line="13" pos:column="75">{
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">ap_is_HTTP_SERVER_ERROR<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name><name pos:line="14" pos:column="37">err<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">-&gt;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="42">status<pos:position pos:line="14" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="50"/></condition><then pos:line="14" pos:column="50"> <block pos:line="14" pos:column="51">{
            <comment type="block" pos:line="15" pos:column="13">/* ### add a higher-level description? */</comment>
            <return pos:line="16" pos:column="13">return <expr><name pos:line="16" pos:column="20">err<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></return>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="19" pos:column="9">/* add to the multistatus response */</comment>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">dav_add_response<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">wres<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="32">err<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">-&gt;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="37">status<pos:position pos:line="20" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="45">NULL<pos:position pos:line="20" pos:column="49"/></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt>

        <comment type="block" pos:line="22" pos:column="9">/*
        ** ### actually, this is probably wrong: we want to fail the whole
        ** ### LOCK process if something goes bad. maybe the caller should
        ** ### do a dav_unlock() (e.g. a rollback) if any errors occurred.
        */</comment>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">NULL<pos:position pos:line="29" pos:column="16"/></name></expr>;<pos:position pos:line="29" pos:column="17"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

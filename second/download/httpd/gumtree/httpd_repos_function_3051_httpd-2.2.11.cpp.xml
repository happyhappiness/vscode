<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3051_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name><name pos:line="2" pos:column="1">enum<pos:position pos:line="2" pos:column="5"/></name> <name pos:line="2" pos:column="6">XML_Error<pos:position pos:line="2" pos:column="15"/></name></name></type> <name pos:line="2" pos:column="16">ignoreSectionProcessor<pos:position pos:line="2" pos:column="38"/></name><parameter_list pos:line="2" pos:column="38">(<parameter><decl><type><name pos:line="2" pos:column="39">XML_Parser<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">parser<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
				      <parameter><decl><type><specifier pos:line="3" pos:column="39">const<pos:position pos:line="3" pos:column="44"/></specifier> <name pos:line="3" pos:column="45">char<pos:position pos:line="3" pos:column="49"/></name> <modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier></type><name pos:line="3" pos:column="51">start<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>,
				      <parameter><decl><type><specifier pos:line="4" pos:column="39">const<pos:position pos:line="4" pos:column="44"/></specifier> <name pos:line="4" pos:column="45">char<pos:position pos:line="4" pos:column="49"/></name> <modifier pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></modifier></type><name pos:line="4" pos:column="51">end<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>,
				      <parameter><decl><type><specifier pos:line="5" pos:column="39">const<pos:position pos:line="5" pos:column="44"/></specifier> <name pos:line="5" pos:column="45">char<pos:position pos:line="5" pos:column="49"/></name> <modifier pos:line="5" pos:column="50">*<pos:position pos:line="5" pos:column="51"/></modifier><modifier pos:line="5" pos:column="51">*<pos:position pos:line="5" pos:column="52"/></modifier></type><name pos:line="5" pos:column="52">endPtr<pos:position pos:line="5" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="59"/></parameter_list>
<block pos:line="6" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">enum<pos:position pos:line="7" pos:column="7"/></name> <name pos:line="7" pos:column="8">XML_Error<pos:position pos:line="7" pos:column="17"/></name></name></type> <name pos:line="7" pos:column="18">result<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><call><name pos:line="7" pos:column="27">doIgnoreSection<pos:position pos:line="7" pos:column="42"/></name><argument_list pos:line="7" pos:column="42">(<argument><expr><name pos:line="7" pos:column="43">parser<pos:position pos:line="7" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="51">encoding<pos:position pos:line="7" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="61">&amp;<pos:position pos:line="7" pos:column="66"/></operator><name pos:line="7" pos:column="62">start<pos:position pos:line="7" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="69">end<pos:position pos:line="7" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="74">endPtr<pos:position pos:line="7" pos:column="80"/></name></expr></argument>)<pos:position pos:line="7" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="82"/></decl_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">start<pos:position pos:line="8" pos:column="12"/></name></expr>)<pos:position pos:line="8" pos:column="13"/></condition><then pos:line="8" pos:column="13"> <block pos:line="8" pos:column="14">{
    <expr_stmt><expr><name pos:line="9" pos:column="5">processor<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <name pos:line="9" pos:column="17">prologProcessor<pos:position pos:line="9" pos:column="32"/></name></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><call><name pos:line="10" pos:column="12">prologProcessor<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">parser<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="36">start<pos:position pos:line="10" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="43">end<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="48">endPtr<pos:position pos:line="10" pos:column="54"/></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>
  <return pos:line="12" pos:column="3">return <expr><name pos:line="12" pos:column="10">result<pos:position pos:line="12" pos:column="16"/></name></expr>;<pos:position pos:line="12" pos:column="17"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

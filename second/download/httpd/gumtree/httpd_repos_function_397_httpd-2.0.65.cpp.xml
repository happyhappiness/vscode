<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_397_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">init_child<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">apr_pool_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">p<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">server_rec<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">s<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">mpm_threads<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="5" pos:column="5">ap_mpm_query<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><name pos:line="5" pos:column="18">AP_MPMQ_MAX_THREADS<pos:position pos:line="5" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="39">&amp;<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="40">mpm_threads<pos:position pos:line="5" pos:column="51"/></name></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* Now register the last buffer flush with the cleanup engine */</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">buffered_logs<pos:position pos:line="8" pos:column="22"/></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23"> <block pos:line="8" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">i<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">buffered_log<pos:position pos:line="10" pos:column="21"/></name> <modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier><modifier pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></modifier></type><name pos:line="10" pos:column="24">array<pos:position pos:line="10" pos:column="29"/></name> <init pos:line="10" pos:column="30">= <expr><operator pos:line="10" pos:column="32">(<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="33">buffered_log<pos:position pos:line="10" pos:column="45"/></name> <operator pos:line="10" pos:column="46">*<pos:position pos:line="10" pos:column="47"/></operator><operator pos:line="10" pos:column="47">*<pos:position pos:line="10" pos:column="48"/></operator><operator pos:line="10" pos:column="48">)<pos:position pos:line="10" pos:column="49"/></operator><name><name pos:line="10" pos:column="49">all_buffered_logs<pos:position pos:line="10" pos:column="66"/></name><operator pos:line="10" pos:column="66">-&gt;<pos:position pos:line="10" pos:column="71"/></operator><name pos:line="10" pos:column="68">elts<pos:position pos:line="10" pos:column="72"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="73"/></decl_stmt>
        
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">apr_pool_cleanup_register<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">p<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">s<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="41">flush_all_logs<pos:position pos:line="12" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="57">flush_all_logs<pos:position pos:line="12" pos:column="71"/></name></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="73"/></expr_stmt>

        <for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init><expr><name pos:line="14" pos:column="14">i<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr>;<pos:position pos:line="14" pos:column="20"/></init> <condition><expr><name pos:line="14" pos:column="21">i<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&lt;<pos:position pos:line="14" pos:column="27"/></operator> <name><name pos:line="14" pos:column="25">all_buffered_logs<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-&gt;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="44">nelts<pos:position pos:line="14" pos:column="49"/></name></name></expr>;<pos:position pos:line="14" pos:column="50"/></condition> <incr><expr><name pos:line="14" pos:column="51">i<pos:position pos:line="14" pos:column="52"/></name><operator pos:line="14" pos:column="52">++<pos:position pos:line="14" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="55"/></control> <block pos:line="14" pos:column="56">{
            <decl_stmt><decl><type><name pos:line="15" pos:column="13">buffered_log<pos:position pos:line="15" pos:column="25"/></name> <modifier pos:line="15" pos:column="26">*<pos:position pos:line="15" pos:column="27"/></modifier></type><name pos:line="15" pos:column="27">this<pos:position pos:line="15" pos:column="31"/></name> <init pos:line="15" pos:column="32">= <expr><name><name pos:line="15" pos:column="34">array<pos:position pos:line="15" pos:column="39"/></name><index pos:line="15" pos:column="39">[<expr><name pos:line="15" pos:column="40">i<pos:position pos:line="15" pos:column="41"/></name></expr>]<pos:position pos:line="15" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="15" pos:column="43"/></decl_stmt>
            
<cpp:if pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">if<pos:position pos:line="17" pos:column="4"/></cpp:directive> <expr><name pos:line="17" pos:column="5">APR_HAS_THREADS<pos:position pos:line="17" pos:column="20"/></name></expr></cpp:if>
            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><name pos:line="18" pos:column="17">mpm_threads<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">&gt;<pos:position pos:line="18" pos:column="33"/></operator> <literal type="number" pos:line="18" pos:column="31">1<pos:position pos:line="18" pos:column="32"/></literal></expr>)<pos:position pos:line="18" pos:column="33"/></condition><then pos:line="18" pos:column="33"> <block pos:line="18" pos:column="34">{
                <decl_stmt><decl><type><name pos:line="19" pos:column="17">apr_status_t<pos:position pos:line="19" pos:column="29"/></name></type> <name pos:line="19" pos:column="30">rv<pos:position pos:line="19" pos:column="32"/></name></decl>;<pos:position pos:line="19" pos:column="33"/></decl_stmt>

                <expr_stmt><expr><name><name pos:line="21" pos:column="17">this<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">mutex<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">.<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="29">type<pos:position pos:line="21" pos:column="33"/></name></name> <operator pos:line="21" pos:column="34">=<pos:position pos:line="21" pos:column="35"/></operator> <name pos:line="21" pos:column="36">apr_anylock_threadmutex<pos:position pos:line="21" pos:column="59"/></name></expr>;<pos:position pos:line="21" pos:column="60"/></expr_stmt>
                <expr_stmt><expr><name pos:line="22" pos:column="17">rv<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <call><name pos:line="22" pos:column="22">apr_thread_mutex_create<pos:position pos:line="22" pos:column="45"/></name><argument_list pos:line="22" pos:column="45">(<argument><expr><operator pos:line="22" pos:column="46">&amp;<pos:position pos:line="22" pos:column="51"/></operator><name><name pos:line="22" pos:column="47">this<pos:position pos:line="22" pos:column="51"/></name><operator pos:line="22" pos:column="51">-&gt;<pos:position pos:line="22" pos:column="56"/></operator><name pos:line="22" pos:column="53">mutex<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">.<pos:position pos:line="22" pos:column="59"/></operator><name pos:line="22" pos:column="59">lock<pos:position pos:line="22" pos:column="63"/></name><operator pos:line="22" pos:column="63">.<pos:position pos:line="22" pos:column="64"/></operator><name pos:line="22" pos:column="64">tm<pos:position pos:line="22" pos:column="66"/></name></name></expr></argument>,
                                             <argument><expr><name pos:line="23" pos:column="46">APR_THREAD_MUTEX_DEFAULT<pos:position pos:line="23" pos:column="70"/></name></expr></argument>,
                                             <argument><expr><name pos:line="24" pos:column="46">p<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
                <if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">rv<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">!=<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="27">APR_SUCCESS<pos:position pos:line="25" pos:column="38"/></name></expr>)<pos:position pos:line="25" pos:column="39"/></condition><then pos:line="25" pos:column="39"> <block pos:line="25" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="26" pos:column="21">ap_log_error<pos:position pos:line="26" pos:column="33"/></name><argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">APLOG_MARK<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="46">APLOG_CRIT<pos:position pos:line="26" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="58">rv<pos:position pos:line="26" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="62">s<pos:position pos:line="26" pos:column="63"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="27" pos:column="34">"could not initialize buffered log mutex, "<pos:position pos:line="27" pos:column="77"/></literal>
                                 <literal type="string" pos:line="28" pos:column="34">"transfer log may become corrupted"<pos:position pos:line="28" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="71"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="29" pos:column="21">this<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">mutex<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">.<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="33">type<pos:position pos:line="29" pos:column="37"/></name></name> <operator pos:line="29" pos:column="38">=<pos:position pos:line="29" pos:column="39"/></operator> <name pos:line="29" pos:column="40">apr_anylock_none<pos:position pos:line="29" pos:column="56"/></name></expr>;<pos:position pos:line="29" pos:column="57"/></expr_stmt>
                }<pos:position pos:line="30" pos:column="18"/></block></then></if>
            }<pos:position pos:line="31" pos:column="14"/></block></then>
            <else pos:line="32" pos:column="13">else
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>
            <block pos:line="34" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="35" pos:column="17">this<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">-&gt;<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="23">mutex<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">.<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="29">type<pos:position pos:line="35" pos:column="33"/></name></name> <operator pos:line="35" pos:column="34">=<pos:position pos:line="35" pos:column="35"/></operator> <name pos:line="35" pos:column="36">apr_anylock_none<pos:position pos:line="35" pos:column="52"/></name></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="36" pos:column="14"/></block></else></if>
        }<pos:position pos:line="37" pos:column="10"/></block></for>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

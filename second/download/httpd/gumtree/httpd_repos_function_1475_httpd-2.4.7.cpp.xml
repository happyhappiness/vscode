<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1475_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">menu_blank<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">request_rec<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">r<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">menu<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><operator pos:line="3" pos:column="9">!<pos:position pos:line="3" pos:column="10"/></operator><call><name pos:line="3" pos:column="10">strcasecmp<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">(<argument><expr><name pos:line="3" pos:column="21">menu<pos:position pos:line="3" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="27">"formatted"<pos:position pos:line="3" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="40"/></condition><then pos:line="3" pos:column="40"> <block pos:line="3" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="4" pos:column="9">ap_rputs<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">(<argument><expr><literal type="string" pos:line="4" pos:column="18">"\n"<pos:position pos:line="4" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="24">r<pos:position pos:line="4" pos:column="25"/></name></expr></argument>)<pos:position pos:line="4" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="5" pos:column="6"/></block></then>
    <elseif pos:line="6" pos:column="5">else <if pos:line="6" pos:column="10">if <condition pos:line="6" pos:column="13">(<expr><operator pos:line="6" pos:column="14">!<pos:position pos:line="6" pos:column="15"/></operator><call><name pos:line="6" pos:column="15">strcasecmp<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">menu<pos:position pos:line="6" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="32">"semiformatted"<pos:position pos:line="6" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="49"/></condition><then pos:line="6" pos:column="49"> <block pos:line="6" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">ap_rputs<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><literal type="string" pos:line="7" pos:column="18">"&lt;br /&gt;\n"<pos:position pos:line="7" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="30">r<pos:position pos:line="7" pos:column="31"/></name></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="9" pos:column="5">else <if pos:line="9" pos:column="10">if <condition pos:line="9" pos:column="13">(<expr><operator pos:line="9" pos:column="14">!<pos:position pos:line="9" pos:column="15"/></operator><call><name pos:line="9" pos:column="15">strcasecmp<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">menu<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="32">"unformatted"<pos:position pos:line="9" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="47"/></condition><then pos:line="9" pos:column="47"> <block pos:line="9" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">ap_rputs<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><literal type="string" pos:line="10" pos:column="18">"\n"<pos:position pos:line="10" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="24">r<pos:position pos:line="10" pos:column="25"/></name></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if></elseif></if>
    <return pos:line="12" pos:column="5">return;<pos:position pos:line="12" pos:column="12"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4468.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">apr_status_t<pos:position pos:line="2" pos:column="13"/></name></type> <name pos:line="2" pos:column="14">ap_proxy_http_process_response<pos:position pos:line="2" pos:column="44"/></name><parameter_list pos:line="2" pos:column="44">(<parameter><decl><type><name pos:line="2" pos:column="45">apr_pool_t<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type> <name pos:line="2" pos:column="58">p<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">request_rec<pos:position pos:line="2" pos:column="72"/></name> <modifier pos:line="2" pos:column="73">*<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="74">r<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="3" pos:column="45">proxy_conn_rec<pos:position pos:line="3" pos:column="59"/></name> <modifier pos:line="3" pos:column="60">*<pos:position pos:line="3" pos:column="61"/></modifier></type><name pos:line="3" pos:column="61">backend<pos:position pos:line="3" pos:column="68"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="4" pos:column="45">proxy_worker<pos:position pos:line="4" pos:column="57"/></name> <modifier pos:line="4" pos:column="58">*<pos:position pos:line="4" pos:column="59"/></modifier></type><name pos:line="4" pos:column="59">worker<pos:position pos:line="4" pos:column="65"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="5" pos:column="45">proxy_server_conf<pos:position pos:line="5" pos:column="62"/></name> <modifier pos:line="5" pos:column="63">*<pos:position pos:line="5" pos:column="64"/></modifier></type><name pos:line="5" pos:column="64">conf<pos:position pos:line="5" pos:column="68"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="6" pos:column="45">char<pos:position pos:line="6" pos:column="49"/></name> <modifier pos:line="6" pos:column="50">*<pos:position pos:line="6" pos:column="51"/></modifier></type><name pos:line="6" pos:column="51">server_portstr<pos:position pos:line="6" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="66"/></parameter_list> <block pos:line="6" pos:column="67">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">conn_rec<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">c<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><name><name pos:line="7" pos:column="19">r<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">-&gt;<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="22">connection<pos:position pos:line="7" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">buffer<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><name pos:line="8" pos:column="17">HUGE_STRING_LEN<pos:position pos:line="8" pos:column="32"/></name></expr>]<pos:position pos:line="8" pos:column="33"/></index></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">buf<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">keepchar<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">request_rec<pos:position pos:line="11" pos:column="16"/></name> <modifier pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></modifier></type><name pos:line="11" pos:column="18">rp<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_bucket<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">e<pos:position pos:line="12" pos:column="18"/></name></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">apr_bucket_brigade<pos:position pos:line="13" pos:column="23"/></name> <modifier pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></modifier></type><name pos:line="13" pos:column="25">bb<pos:position pos:line="13" pos:column="27"/></name></decl>, <modifier pos:line="13" pos:column="29">*<pos:position pos:line="13" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="30">tmp_bb<pos:position pos:line="13" pos:column="36"/></name></decl>;<pos:position pos:line="13" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_bucket_brigade<pos:position pos:line="14" pos:column="23"/></name> <modifier pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></modifier></type><name pos:line="14" pos:column="25">pass_bb<pos:position pos:line="14" pos:column="32"/></name></decl>;<pos:position pos:line="14" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">len<pos:position pos:line="15" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="14">backasswards<pos:position pos:line="15" pos:column="26"/></name></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">interim_response<pos:position pos:line="16" pos:column="25"/></name> <init pos:line="16" pos:column="26">= <expr><literal type="number" pos:line="16" pos:column="28">0<pos:position pos:line="16" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="30"/></decl_stmt> <comment type="block" pos:line="16" pos:column="31">/* non-zero whilst interim 1xx responses
                               * are being read. */</comment>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">pread_len<pos:position pos:line="18" pos:column="18"/></name> <init pos:line="18" pos:column="19">= <expr><literal type="number" pos:line="18" pos:column="21">0<pos:position pos:line="18" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">apr_table_t<pos:position pos:line="19" pos:column="16"/></name> <modifier pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></modifier></type><name pos:line="19" pos:column="18">save_table<pos:position pos:line="19" pos:column="28"/></name></decl>;<pos:position pos:line="19" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">int<pos:position pos:line="20" pos:column="8"/></name></type> <name pos:line="20" pos:column="9">backend_broke<pos:position pos:line="20" pos:column="22"/></name> <init pos:line="20" pos:column="23">= <expr><literal type="number" pos:line="20" pos:column="25">0<pos:position pos:line="20" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="21" pos:column="5">static<pos:position pos:line="21" pos:column="11"/></specifier> <type><specifier pos:line="21" pos:column="12">const<pos:position pos:line="21" pos:column="17"/></specifier> <name pos:line="21" pos:column="18">char<pos:position pos:line="21" pos:column="22"/></name> <modifier pos:line="21" pos:column="23">*<pos:position pos:line="21" pos:column="24"/></modifier></type><name><name pos:line="21" pos:column="24">hop_by_hop_hdrs<pos:position pos:line="21" pos:column="39"/></name><index pos:line="21" pos:column="39">[]<pos:position pos:line="21" pos:column="41"/></index></name> <init pos:line="21" pos:column="42">=
        <expr><block pos:line="22" pos:column="9">{<expr><literal type="string" pos:line="22" pos:column="10">"Keep-Alive"<pos:position pos:line="22" pos:column="22"/></literal></expr>, <expr><literal type="string" pos:line="22" pos:column="24">"Proxy-Authenticate"<pos:position pos:line="22" pos:column="44"/></literal></expr>, <expr><literal type="string" pos:line="22" pos:column="46">"TE"<pos:position pos:line="22" pos:column="50"/></literal></expr>, <expr><literal type="string" pos:line="22" pos:column="52">"Trailer"<pos:position pos:line="22" pos:column="61"/></literal></expr>, <expr><literal type="string" pos:line="22" pos:column="63">"Upgrade"<pos:position pos:line="22" pos:column="72"/></literal></expr>, <expr><name pos:line="22" pos:column="74">NULL<pos:position pos:line="22" pos:column="78"/></name></expr>}<pos:position pos:line="22" pos:column="79"/></block></expr></init></decl>;<pos:position pos:line="22" pos:column="80"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">int<pos:position pos:line="23" pos:column="8"/></name></type> <name pos:line="23" pos:column="9">i<pos:position pos:line="23" pos:column="10"/></name></decl>;<pos:position pos:line="23" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="24" pos:column="5">const<pos:position pos:line="24" pos:column="10"/></specifier> <name pos:line="24" pos:column="11">char<pos:position pos:line="24" pos:column="15"/></name> <modifier pos:line="24" pos:column="16">*<pos:position pos:line="24" pos:column="17"/></modifier></type><name pos:line="24" pos:column="17">te<pos:position pos:line="24" pos:column="19"/></name> <init pos:line="24" pos:column="20">= <expr><name pos:line="24" pos:column="22">NULL<pos:position pos:line="24" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">int<pos:position pos:line="25" pos:column="8"/></name></type> <name pos:line="25" pos:column="9">original_status<pos:position pos:line="25" pos:column="24"/></name> <init pos:line="25" pos:column="25">= <expr><name><name pos:line="25" pos:column="27">r<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">status<pos:position pos:line="25" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="25" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">int<pos:position pos:line="26" pos:column="8"/></name></type> <name pos:line="26" pos:column="9">proxy_status<pos:position pos:line="26" pos:column="21"/></name> <init pos:line="26" pos:column="22">= <expr><name pos:line="26" pos:column="24">OK<pos:position pos:line="26" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="27" pos:column="5">const<pos:position pos:line="27" pos:column="10"/></specifier> <name pos:line="27" pos:column="11">char<pos:position pos:line="27" pos:column="15"/></name> <modifier pos:line="27" pos:column="16">*<pos:position pos:line="27" pos:column="17"/></modifier></type><name pos:line="27" pos:column="17">original_status_line<pos:position pos:line="27" pos:column="37"/></name> <init pos:line="27" pos:column="38">= <expr><name><name pos:line="27" pos:column="40">r<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">-&gt;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="43">status_line<pos:position pos:line="27" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="27" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="28" pos:column="5">const<pos:position pos:line="28" pos:column="10"/></specifier> <name pos:line="28" pos:column="11">char<pos:position pos:line="28" pos:column="15"/></name> <modifier pos:line="28" pos:column="16">*<pos:position pos:line="28" pos:column="17"/></modifier></type><name pos:line="28" pos:column="17">proxy_status_line<pos:position pos:line="28" pos:column="34"/></name> <init pos:line="28" pos:column="35">= <expr><name pos:line="28" pos:column="37">NULL<pos:position pos:line="28" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="28" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">conn_rec<pos:position pos:line="29" pos:column="13"/></name> <modifier pos:line="29" pos:column="14">*<pos:position pos:line="29" pos:column="15"/></modifier></type><name pos:line="29" pos:column="15">origin<pos:position pos:line="29" pos:column="21"/></name> <init pos:line="29" pos:column="22">= <expr><name><name pos:line="29" pos:column="24">backend<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">-&gt;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="33">connection<pos:position pos:line="29" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="29" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">apr_interval_time_t<pos:position pos:line="30" pos:column="24"/></name></type> <name pos:line="30" pos:column="25">old_timeout<pos:position pos:line="30" pos:column="36"/></name> <init pos:line="30" pos:column="37">= <expr><literal type="number" pos:line="30" pos:column="39">0<pos:position pos:line="30" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="30" pos:column="41"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="32" pos:column="5">int<pos:position pos:line="32" pos:column="8"/></name></type> <name pos:line="32" pos:column="9">do_100_continue<pos:position pos:line="32" pos:column="24"/></name></decl>;<pos:position pos:line="32" pos:column="25"/></decl_stmt>
    
    <expr_stmt><expr><name pos:line="34" pos:column="5">do_100_continue<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <operator pos:line="34" pos:column="23">(<pos:position pos:line="34" pos:column="24"/></operator><name><name pos:line="34" pos:column="24">worker<pos:position pos:line="34" pos:column="30"/></name><operator pos:line="34" pos:column="30">-&gt;<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="32">ping_timeout_set<pos:position pos:line="34" pos:column="48"/></name></name>
                       <operator pos:line="35" pos:column="24">&amp;&amp;<pos:position pos:line="35" pos:column="34"/></operator> <call><name pos:line="35" pos:column="27">ap_request_has_body<pos:position pos:line="35" pos:column="46"/></name><argument_list pos:line="35" pos:column="46">(<argument><expr><name pos:line="35" pos:column="47">r<pos:position pos:line="35" pos:column="48"/></name></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></call>
                       <operator pos:line="36" pos:column="24">&amp;&amp;<pos:position pos:line="36" pos:column="34"/></operator> <operator pos:line="36" pos:column="27">(<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="28">PROXYREQ_REVERSE<pos:position pos:line="36" pos:column="44"/></name> <operator pos:line="36" pos:column="45">==<pos:position pos:line="36" pos:column="47"/></operator> <name><name pos:line="36" pos:column="48">r<pos:position pos:line="36" pos:column="49"/></name><operator pos:line="36" pos:column="49">-&gt;<pos:position pos:line="36" pos:column="54"/></operator><name pos:line="36" pos:column="51">proxyreq<pos:position pos:line="36" pos:column="59"/></name></name><operator pos:line="36" pos:column="59">)<pos:position pos:line="36" pos:column="60"/></operator>
                       <operator pos:line="37" pos:column="24">&amp;&amp;<pos:position pos:line="37" pos:column="34"/></operator> <operator pos:line="37" pos:column="27">!<pos:position pos:line="37" pos:column="28"/></operator><operator pos:line="37" pos:column="28">(<pos:position pos:line="37" pos:column="29"/></operator><call><name pos:line="37" pos:column="29">apr_table_get<pos:position pos:line="37" pos:column="42"/></name><argument_list pos:line="37" pos:column="42">(<argument><expr><name><name pos:line="37" pos:column="43">r<pos:position pos:line="37" pos:column="44"/></name><operator pos:line="37" pos:column="44">-&gt;<pos:position pos:line="37" pos:column="49"/></operator><name pos:line="37" pos:column="46">subprocess_env<pos:position pos:line="37" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="62">"force-proxy-request-1.0"<pos:position pos:line="37" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="88"/></argument_list></call><operator pos:line="37" pos:column="88">)<pos:position pos:line="37" pos:column="89"/></operator><operator pos:line="37" pos:column="89">)<pos:position pos:line="37" pos:column="90"/></operator></expr>;<pos:position pos:line="37" pos:column="91"/></expr_stmt>
    
    <expr_stmt><expr><name pos:line="39" pos:column="5">bb<pos:position pos:line="39" pos:column="7"/></name> <operator pos:line="39" pos:column="8">=<pos:position pos:line="39" pos:column="9"/></operator> <call><name pos:line="39" pos:column="10">apr_brigade_create<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><name pos:line="39" pos:column="29">p<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="32">c<pos:position pos:line="39" pos:column="33"/></name><operator pos:line="39" pos:column="33">-&gt;<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="35">bucket_alloc<pos:position pos:line="39" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name pos:line="40" pos:column="5">pass_bb<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <call><name pos:line="40" pos:column="15">apr_brigade_create<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">p<pos:position pos:line="40" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="37">c<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">-&gt;<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="40">bucket_alloc<pos:position pos:line="40" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt>
    
    <comment type="block" pos:line="42" pos:column="5">/* Setup for 100-Continue timeout if appropriate */</comment>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">do_100_continue<pos:position pos:line="43" pos:column="24"/></name></expr>)<pos:position pos:line="43" pos:column="25"/></condition><then pos:line="43" pos:column="25"> <block pos:line="43" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">apr_socket_timeout_get<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><name><name pos:line="44" pos:column="32">backend<pos:position pos:line="44" pos:column="39"/></name><operator pos:line="44" pos:column="39">-&gt;<pos:position pos:line="44" pos:column="44"/></operator><name pos:line="44" pos:column="41">sock<pos:position pos:line="44" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="47">&amp;<pos:position pos:line="44" pos:column="52"/></operator><name pos:line="44" pos:column="48">old_timeout<pos:position pos:line="44" pos:column="59"/></name></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="61"/></expr_stmt>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name><name pos:line="45" pos:column="13">worker<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">-&gt;<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="21">ping_timeout<pos:position pos:line="45" pos:column="33"/></name></name> <operator pos:line="45" pos:column="34">!=<pos:position pos:line="45" pos:column="36"/></operator> <name pos:line="45" pos:column="37">old_timeout<pos:position pos:line="45" pos:column="48"/></name></expr>)<pos:position pos:line="45" pos:column="49"/></condition><then pos:line="45" pos:column="49"> <block pos:line="45" pos:column="50">{
            <decl_stmt><decl><type><name pos:line="46" pos:column="13">apr_status_t<pos:position pos:line="46" pos:column="25"/></name></type> <name pos:line="46" pos:column="26">rc<pos:position pos:line="46" pos:column="28"/></name></decl>;<pos:position pos:line="46" pos:column="29"/></decl_stmt>
            <expr_stmt><expr><name pos:line="47" pos:column="13">rc<pos:position pos:line="47" pos:column="15"/></name> <operator pos:line="47" pos:column="16">=<pos:position pos:line="47" pos:column="17"/></operator> <call><name pos:line="47" pos:column="18">apr_socket_timeout_set<pos:position pos:line="47" pos:column="40"/></name><argument_list pos:line="47" pos:column="40">(<argument><expr><name><name pos:line="47" pos:column="41">backend<pos:position pos:line="47" pos:column="48"/></name><operator pos:line="47" pos:column="48">-&gt;<pos:position pos:line="47" pos:column="53"/></operator><name pos:line="47" pos:column="50">sock<pos:position pos:line="47" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="56">worker<pos:position pos:line="47" pos:column="62"/></name><operator pos:line="47" pos:column="62">-&gt;<pos:position pos:line="47" pos:column="67"/></operator><name pos:line="47" pos:column="64">ping_timeout<pos:position pos:line="47" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="78"/></expr_stmt>
            <if pos:line="48" pos:column="13">if <condition pos:line="48" pos:column="16">(<expr><name pos:line="48" pos:column="17">rc<pos:position pos:line="48" pos:column="19"/></name> <operator pos:line="48" pos:column="20">!=<pos:position pos:line="48" pos:column="22"/></operator> <name pos:line="48" pos:column="23">APR_SUCCESS<pos:position pos:line="48" pos:column="34"/></name></expr>)<pos:position pos:line="48" pos:column="35"/></condition><then pos:line="48" pos:column="35"> <block pos:line="48" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="49" pos:column="17">ap_log_error<pos:position pos:line="49" pos:column="29"/></name><argument_list pos:line="49" pos:column="29">(<argument><expr><name pos:line="49" pos:column="30">APLOG_MARK<pos:position pos:line="49" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="42">APLOG_ERR<pos:position pos:line="49" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="53">rc<pos:position pos:line="49" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="57">r<pos:position pos:line="49" pos:column="58"/></name><operator pos:line="49" pos:column="58">-&gt;<pos:position pos:line="49" pos:column="63"/></operator><name pos:line="49" pos:column="60">server<pos:position pos:line="49" pos:column="66"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="50" pos:column="30">"proxy: could not set 100-Continue timeout"<pos:position pos:line="50" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="75"/></expr_stmt>
            }<pos:position pos:line="51" pos:column="14"/></block></then></if>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="55" pos:column="5">/* Get response from the remote server, and pass it up the
     * filter chain
     */</comment>

    <expr_stmt><expr><name pos:line="59" pos:column="5">rp<pos:position pos:line="59" pos:column="7"/></name> <operator pos:line="59" pos:column="8">=<pos:position pos:line="59" pos:column="9"/></operator> <call><name pos:line="59" pos:column="10">ap_proxy_make_fake_req<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><name pos:line="59" pos:column="33">origin<pos:position pos:line="59" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="41">r<pos:position pos:line="59" pos:column="42"/></name></expr></argument>)<pos:position pos:line="59" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="44"/></expr_stmt>
    <comment type="block" pos:line="60" pos:column="5">/* In case anyone needs to know, this is a fake request that is really a
     * response.
     */</comment>
    <expr_stmt><expr><name><name pos:line="63" pos:column="5">rp<pos:position pos:line="63" pos:column="7"/></name><operator pos:line="63" pos:column="7">-&gt;<pos:position pos:line="63" pos:column="12"/></operator><name pos:line="63" pos:column="9">proxyreq<pos:position pos:line="63" pos:column="17"/></name></name> <operator pos:line="63" pos:column="18">=<pos:position pos:line="63" pos:column="19"/></operator> <name pos:line="63" pos:column="20">PROXYREQ_RESPONSE<pos:position pos:line="63" pos:column="37"/></name></expr>;<pos:position pos:line="63" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="64" pos:column="5">tmp_bb<pos:position pos:line="64" pos:column="11"/></name> <operator pos:line="64" pos:column="12">=<pos:position pos:line="64" pos:column="13"/></operator> <call><name pos:line="64" pos:column="14">apr_brigade_create<pos:position pos:line="64" pos:column="32"/></name><argument_list pos:line="64" pos:column="32">(<argument><expr><name pos:line="64" pos:column="33">p<pos:position pos:line="64" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="36">c<pos:position pos:line="64" pos:column="37"/></name><operator pos:line="64" pos:column="37">-&gt;<pos:position pos:line="64" pos:column="42"/></operator><name pos:line="64" pos:column="39">bucket_alloc<pos:position pos:line="64" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="53"/></expr_stmt>
    <do pos:line="65" pos:column="5">do <block pos:line="65" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="66" pos:column="9">apr_status_t<pos:position pos:line="66" pos:column="21"/></name></type> <name pos:line="66" pos:column="22">rc<pos:position pos:line="66" pos:column="24"/></name></decl>;<pos:position pos:line="66" pos:column="25"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="68" pos:column="9">apr_brigade_cleanup<pos:position pos:line="68" pos:column="28"/></name><argument_list pos:line="68" pos:column="28">(<argument><expr><name pos:line="68" pos:column="29">bb<pos:position pos:line="68" pos:column="31"/></name></expr></argument>)<pos:position pos:line="68" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="33"/></expr_stmt>

        <expr_stmt><expr><name pos:line="70" pos:column="9">rc<pos:position pos:line="70" pos:column="11"/></name> <operator pos:line="70" pos:column="12">=<pos:position pos:line="70" pos:column="13"/></operator> <call><name pos:line="70" pos:column="14">ap_proxygetline<pos:position pos:line="70" pos:column="29"/></name><argument_list pos:line="70" pos:column="29">(<argument><expr><name pos:line="70" pos:column="30">tmp_bb<pos:position pos:line="70" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="38">buffer<pos:position pos:line="70" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="46">sizeof<argument_list pos:line="70" pos:column="52">(<argument><expr><name pos:line="70" pos:column="53">buffer<pos:position pos:line="70" pos:column="59"/></name></expr></argument>)<pos:position pos:line="70" pos:column="60"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="70" pos:column="62">rp<pos:position pos:line="70" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="66">0<pos:position pos:line="70" pos:column="67"/></literal></expr></argument>, <argument><expr><operator pos:line="70" pos:column="69">&amp;<pos:position pos:line="70" pos:column="74"/></operator><name pos:line="70" pos:column="70">len<pos:position pos:line="70" pos:column="73"/></name></expr></argument>)<pos:position pos:line="70" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="75"/></expr_stmt>
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name pos:line="71" pos:column="13">len<pos:position pos:line="71" pos:column="16"/></name> <operator pos:line="71" pos:column="17">==<pos:position pos:line="71" pos:column="19"/></operator> <literal type="number" pos:line="71" pos:column="20">0<pos:position pos:line="71" pos:column="21"/></literal></expr>)<pos:position pos:line="71" pos:column="22"/></condition><then pos:line="71" pos:column="22"> <block pos:line="71" pos:column="23">{
            <comment type="block" pos:line="72" pos:column="13">/* handle one potential stray CRLF */</comment>
            <expr_stmt><expr><name pos:line="73" pos:column="13">rc<pos:position pos:line="73" pos:column="15"/></name> <operator pos:line="73" pos:column="16">=<pos:position pos:line="73" pos:column="17"/></operator> <call><name pos:line="73" pos:column="18">ap_proxygetline<pos:position pos:line="73" pos:column="33"/></name><argument_list pos:line="73" pos:column="33">(<argument><expr><name pos:line="73" pos:column="34">tmp_bb<pos:position pos:line="73" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="42">buffer<pos:position pos:line="73" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="50">sizeof<argument_list pos:line="73" pos:column="56">(<argument><expr><name pos:line="73" pos:column="57">buffer<pos:position pos:line="73" pos:column="63"/></name></expr></argument>)<pos:position pos:line="73" pos:column="64"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="73" pos:column="66">rp<pos:position pos:line="73" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="70">0<pos:position pos:line="73" pos:column="71"/></literal></expr></argument>, <argument><expr><operator pos:line="73" pos:column="73">&amp;<pos:position pos:line="73" pos:column="78"/></operator><name pos:line="73" pos:column="74">len<pos:position pos:line="73" pos:column="77"/></name></expr></argument>)<pos:position pos:line="73" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if>
        <if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">len<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">&lt;=<pos:position pos:line="75" pos:column="22"/></operator> <literal type="number" pos:line="75" pos:column="20">0<pos:position pos:line="75" pos:column="21"/></literal></expr>)<pos:position pos:line="75" pos:column="22"/></condition><then pos:line="75" pos:column="22"> <block pos:line="75" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">ap_log_rerror<pos:position pos:line="76" pos:column="26"/></name><argument_list pos:line="76" pos:column="26">(<argument><expr><name pos:line="76" pos:column="27">APLOG_MARK<pos:position pos:line="76" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="39">APLOG_ERR<pos:position pos:line="76" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="50">rc<pos:position pos:line="76" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="54">r<pos:position pos:line="76" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="77" pos:column="27">"proxy: error reading status line from remote "<pos:position pos:line="77" pos:column="74"/></literal>
                          <literal type="string" pos:line="78" pos:column="27">"server %s:%d"<pos:position pos:line="78" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="43">backend<pos:position pos:line="78" pos:column="50"/></name><operator pos:line="78" pos:column="50">-&gt;<pos:position pos:line="78" pos:column="55"/></operator><name pos:line="78" pos:column="52">hostname<pos:position pos:line="78" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="62">backend<pos:position pos:line="78" pos:column="69"/></name><operator pos:line="78" pos:column="69">-&gt;<pos:position pos:line="78" pos:column="74"/></operator><name pos:line="78" pos:column="71">port<pos:position pos:line="78" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="77"/></expr_stmt>
            <if pos:line="79" pos:column="13">if <condition pos:line="79" pos:column="16">(<expr><call><name pos:line="79" pos:column="17">APR_STATUS_IS_TIMEUP<pos:position pos:line="79" pos:column="37"/></name><argument_list pos:line="79" pos:column="37">(<argument><expr><name pos:line="79" pos:column="38">rc<pos:position pos:line="79" pos:column="40"/></name></expr></argument>)<pos:position pos:line="79" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="42"/></condition><then pos:line="79" pos:column="42"> <block pos:line="79" pos:column="43">{
                <expr_stmt><expr><call><name pos:line="80" pos:column="17">ap_log_rerror<pos:position pos:line="80" pos:column="30"/></name><argument_list pos:line="80" pos:column="30">(<argument><expr><name pos:line="80" pos:column="31">APLOG_MARK<pos:position pos:line="80" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="43">APLOG_DEBUG<pos:position pos:line="80" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="56">0<pos:position pos:line="80" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="59">r<pos:position pos:line="80" pos:column="60"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="81" pos:column="31">"proxy: read timeout"<pos:position pos:line="81" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="54"/></expr_stmt>
                <if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><name pos:line="82" pos:column="21">do_100_continue<pos:position pos:line="82" pos:column="36"/></name></expr>)<pos:position pos:line="82" pos:column="37"/></condition><then pos:line="82" pos:column="37"> <block pos:line="82" pos:column="38">{
                    <return pos:line="83" pos:column="21">return <expr><call><name pos:line="83" pos:column="28">ap_proxyerror<pos:position pos:line="83" pos:column="41"/></name><argument_list pos:line="83" pos:column="41">(<argument><expr><name pos:line="83" pos:column="42">r<pos:position pos:line="83" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="45">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="83" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="71">"Timeout on 100-Continue"<pos:position pos:line="83" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="98"/></return>
                }<pos:position pos:line="84" pos:column="18"/></block></then></if>
            }<pos:position pos:line="85" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="86" pos:column="13">/*
             * If we are a reverse proxy request shutdown the connection
             * WITHOUT ANY response to trigger a retry by the client
             * if allowed (as for idempotent requests).
             * BUT currently we should not do this if the request is the
             * first request on a keepalive connection as browsers like
             * seamonkey only display an empty page in this case and do
             * not do a retry. We should also not do this on a
             * connection which times out; instead handle as
             * we normally would handle timeouts
             */</comment>
            <if pos:line="97" pos:column="13">if <condition pos:line="97" pos:column="16">(<expr><name><name pos:line="97" pos:column="17">r<pos:position pos:line="97" pos:column="18"/></name><operator pos:line="97" pos:column="18">-&gt;<pos:position pos:line="97" pos:column="23"/></operator><name pos:line="97" pos:column="20">proxyreq<pos:position pos:line="97" pos:column="28"/></name></name> <operator pos:line="97" pos:column="29">==<pos:position pos:line="97" pos:column="31"/></operator> <name pos:line="97" pos:column="32">PROXYREQ_REVERSE<pos:position pos:line="97" pos:column="48"/></name> <operator pos:line="97" pos:column="49">&amp;&amp;<pos:position pos:line="97" pos:column="59"/></operator> <name><name pos:line="97" pos:column="52">c<pos:position pos:line="97" pos:column="53"/></name><operator pos:line="97" pos:column="53">-&gt;<pos:position pos:line="97" pos:column="58"/></operator><name pos:line="97" pos:column="55">keepalives<pos:position pos:line="97" pos:column="65"/></name></name> <operator pos:line="97" pos:column="66">&amp;&amp;<pos:position pos:line="97" pos:column="76"/></operator>
                <operator pos:line="98" pos:column="17">!<pos:position pos:line="98" pos:column="18"/></operator><call><name pos:line="98" pos:column="18">APR_STATUS_IS_TIMEUP<pos:position pos:line="98" pos:column="38"/></name><argument_list pos:line="98" pos:column="38">(<argument><expr><name pos:line="98" pos:column="39">rc<pos:position pos:line="98" pos:column="41"/></name></expr></argument>)<pos:position pos:line="98" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="43"/></condition><then pos:line="98" pos:column="43"> <block pos:line="98" pos:column="44">{
                <decl_stmt><decl><type><name pos:line="99" pos:column="17">apr_bucket<pos:position pos:line="99" pos:column="27"/></name> <modifier pos:line="99" pos:column="28">*<pos:position pos:line="99" pos:column="29"/></modifier></type><name pos:line="99" pos:column="29">eos<pos:position pos:line="99" pos:column="32"/></name></decl>;<pos:position pos:line="99" pos:column="33"/></decl_stmt>

                <expr_stmt><expr><call><name pos:line="101" pos:column="17">ap_log_rerror<pos:position pos:line="101" pos:column="30"/></name><argument_list pos:line="101" pos:column="30">(<argument><expr><name pos:line="101" pos:column="31">APLOG_MARK<pos:position pos:line="101" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="43">APLOG_DEBUG<pos:position pos:line="101" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="101" pos:column="56">0<pos:position pos:line="101" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="59">r<pos:position pos:line="101" pos:column="60"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="102" pos:column="31">"proxy: Closing connection to client because"<pos:position pos:line="102" pos:column="76"/></literal>
                              <literal type="string" pos:line="103" pos:column="31">" reading from backend server %s:%d failed."<pos:position pos:line="103" pos:column="75"/></literal>
                              <literal type="string" pos:line="104" pos:column="31">" Number of keepalives %i"<pos:position pos:line="104" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="59">backend<pos:position pos:line="104" pos:column="66"/></name><operator pos:line="104" pos:column="66">-&gt;<pos:position pos:line="104" pos:column="71"/></operator><name pos:line="104" pos:column="68">hostname<pos:position pos:line="104" pos:column="76"/></name></name></expr></argument>, 
                              <argument><expr><name><name pos:line="105" pos:column="31">backend<pos:position pos:line="105" pos:column="38"/></name><operator pos:line="105" pos:column="38">-&gt;<pos:position pos:line="105" pos:column="43"/></operator><name pos:line="105" pos:column="40">port<pos:position pos:line="105" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="105" pos:column="46">c<pos:position pos:line="105" pos:column="47"/></name><operator pos:line="105" pos:column="47">-&gt;<pos:position pos:line="105" pos:column="52"/></operator><name pos:line="105" pos:column="49">keepalives<pos:position pos:line="105" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="106" pos:column="17">ap_proxy_backend_broke<pos:position pos:line="106" pos:column="39"/></name><argument_list pos:line="106" pos:column="39">(<argument><expr><name pos:line="106" pos:column="40">r<pos:position pos:line="106" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="43">bb<pos:position pos:line="106" pos:column="45"/></name></expr></argument>)<pos:position pos:line="106" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="47"/></expr_stmt>
                <comment type="block" pos:line="107" pos:column="17">/*
                 * Add an EOC bucket to signal the ap_http_header_filter
                 * that it should get out of our way, BUT ensure that the
                 * EOC bucket is inserted BEFORE an EOS bucket in bb as
                 * some resource filters like mod_deflate pass everything
                 * up to the EOS down the chain immediately and sent the
                 * remainder of the brigade later (or even never). But in
                 * this case the ap_http_header_filter does not get out of
                 * our way soon enough.
                 */</comment>
                <expr_stmt><expr><name pos:line="117" pos:column="17">e<pos:position pos:line="117" pos:column="18"/></name> <operator pos:line="117" pos:column="19">=<pos:position pos:line="117" pos:column="20"/></operator> <call><name pos:line="117" pos:column="21">ap_bucket_eoc_create<pos:position pos:line="117" pos:column="41"/></name><argument_list pos:line="117" pos:column="41">(<argument><expr><name><name pos:line="117" pos:column="42">c<pos:position pos:line="117" pos:column="43"/></name><operator pos:line="117" pos:column="43">-&gt;<pos:position pos:line="117" pos:column="48"/></operator><name pos:line="117" pos:column="45">bucket_alloc<pos:position pos:line="117" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="59"/></expr_stmt>
                <expr_stmt><expr><name pos:line="118" pos:column="17">eos<pos:position pos:line="118" pos:column="20"/></name> <operator pos:line="118" pos:column="21">=<pos:position pos:line="118" pos:column="22"/></operator> <call><name pos:line="118" pos:column="23">APR_BRIGADE_LAST<pos:position pos:line="118" pos:column="39"/></name><argument_list pos:line="118" pos:column="39">(<argument><expr><name pos:line="118" pos:column="40">bb<pos:position pos:line="118" pos:column="42"/></name></expr></argument>)<pos:position pos:line="118" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="44"/></expr_stmt>
                <while pos:line="119" pos:column="17">while <condition pos:line="119" pos:column="23">(<expr><operator pos:line="119" pos:column="24">(<pos:position pos:line="119" pos:column="25"/></operator><call><name pos:line="119" pos:column="25">APR_BRIGADE_SENTINEL<pos:position pos:line="119" pos:column="45"/></name><argument_list pos:line="119" pos:column="45">(<argument><expr><name pos:line="119" pos:column="46">bb<pos:position pos:line="119" pos:column="48"/></name></expr></argument>)<pos:position pos:line="119" pos:column="49"/></argument_list></call> <operator pos:line="119" pos:column="50">!=<pos:position pos:line="119" pos:column="52"/></operator> <name pos:line="119" pos:column="53">eos<pos:position pos:line="119" pos:column="56"/></name><operator pos:line="119" pos:column="56">)<pos:position pos:line="119" pos:column="57"/></operator>
                       <operator pos:line="120" pos:column="24">&amp;&amp;<pos:position pos:line="120" pos:column="34"/></operator> <operator pos:line="120" pos:column="27">!<pos:position pos:line="120" pos:column="28"/></operator><call><name pos:line="120" pos:column="28">APR_BUCKET_IS_EOS<pos:position pos:line="120" pos:column="45"/></name><argument_list pos:line="120" pos:column="45">(<argument><expr><name pos:line="120" pos:column="46">eos<pos:position pos:line="120" pos:column="49"/></name></expr></argument>)<pos:position pos:line="120" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="120" pos:column="51"/></condition> <block pos:line="120" pos:column="52">{
                    <expr_stmt><expr><name pos:line="121" pos:column="21">eos<pos:position pos:line="121" pos:column="24"/></name> <operator pos:line="121" pos:column="25">=<pos:position pos:line="121" pos:column="26"/></operator> <call><name pos:line="121" pos:column="27">APR_BUCKET_PREV<pos:position pos:line="121" pos:column="42"/></name><argument_list pos:line="121" pos:column="42">(<argument><expr><name pos:line="121" pos:column="43">eos<pos:position pos:line="121" pos:column="46"/></name></expr></argument>)<pos:position pos:line="121" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="48"/></expr_stmt>
                }<pos:position pos:line="122" pos:column="18"/></block></while>
                <if pos:line="123" pos:column="17">if <condition pos:line="123" pos:column="20">(<expr><name pos:line="123" pos:column="21">eos<pos:position pos:line="123" pos:column="24"/></name> <operator pos:line="123" pos:column="25">==<pos:position pos:line="123" pos:column="27"/></operator> <call><name pos:line="123" pos:column="28">APR_BRIGADE_SENTINEL<pos:position pos:line="123" pos:column="48"/></name><argument_list pos:line="123" pos:column="48">(<argument><expr><name pos:line="123" pos:column="49">bb<pos:position pos:line="123" pos:column="51"/></name></expr></argument>)<pos:position pos:line="123" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="123" pos:column="53"/></condition><then pos:line="123" pos:column="53"> <block pos:line="123" pos:column="54">{
                    <expr_stmt><expr><call><name pos:line="124" pos:column="21">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="124" pos:column="44"/></name><argument_list pos:line="124" pos:column="44">(<argument><expr><name pos:line="124" pos:column="45">bb<pos:position pos:line="124" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="49">e<pos:position pos:line="124" pos:column="50"/></name></expr></argument>)<pos:position pos:line="124" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="52"/></expr_stmt>
                }<pos:position pos:line="125" pos:column="18"/></block></then>
                <else pos:line="126" pos:column="17">else <block pos:line="126" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="127" pos:column="21">APR_BUCKET_INSERT_BEFORE<pos:position pos:line="127" pos:column="45"/></name><argument_list pos:line="127" pos:column="45">(<argument><expr><name pos:line="127" pos:column="46">eos<pos:position pos:line="127" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="51">e<pos:position pos:line="127" pos:column="52"/></name></expr></argument>)<pos:position pos:line="127" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="54"/></expr_stmt>
                }<pos:position pos:line="128" pos:column="18"/></block></else></if>
                <expr_stmt><expr><call><name pos:line="129" pos:column="17">ap_pass_brigade<pos:position pos:line="129" pos:column="32"/></name><argument_list pos:line="129" pos:column="32">(<argument><expr><name><name pos:line="129" pos:column="33">r<pos:position pos:line="129" pos:column="34"/></name><operator pos:line="129" pos:column="34">-&gt;<pos:position pos:line="129" pos:column="39"/></operator><name pos:line="129" pos:column="36">output_filters<pos:position pos:line="129" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="52">bb<pos:position pos:line="129" pos:column="54"/></name></expr></argument>)<pos:position pos:line="129" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="56"/></expr_stmt>
                <comment type="block" pos:line="130" pos:column="17">/* Mark the backend connection for closing */</comment>
                <expr_stmt><expr><name><name pos:line="131" pos:column="17">backend<pos:position pos:line="131" pos:column="24"/></name><operator pos:line="131" pos:column="24">-&gt;<pos:position pos:line="131" pos:column="29"/></operator><name pos:line="131" pos:column="26">close<pos:position pos:line="131" pos:column="31"/></name></name> <operator pos:line="131" pos:column="32">=<pos:position pos:line="131" pos:column="33"/></operator> <literal type="number" pos:line="131" pos:column="34">1<pos:position pos:line="131" pos:column="35"/></literal></expr>;<pos:position pos:line="131" pos:column="36"/></expr_stmt>
                <comment type="block" pos:line="132" pos:column="17">/* Need to return OK to avoid sending an error message */</comment>
                <return pos:line="133" pos:column="17">return <expr><name pos:line="133" pos:column="24">OK<pos:position pos:line="133" pos:column="26"/></name></expr>;<pos:position pos:line="133" pos:column="27"/></return>
            }<pos:position pos:line="134" pos:column="14"/></block></then>
            <elseif pos:line="135" pos:column="13">else <if pos:line="135" pos:column="18">if <condition pos:line="135" pos:column="21">(<expr><operator pos:line="135" pos:column="22">!<pos:position pos:line="135" pos:column="23"/></operator><name><name pos:line="135" pos:column="23">c<pos:position pos:line="135" pos:column="24"/></name><operator pos:line="135" pos:column="24">-&gt;<pos:position pos:line="135" pos:column="29"/></operator><name pos:line="135" pos:column="26">keepalives<pos:position pos:line="135" pos:column="36"/></name></name></expr>)<pos:position pos:line="135" pos:column="37"/></condition><then pos:line="135" pos:column="37"> <block pos:line="135" pos:column="38">{
                     <expr_stmt><expr><call><name pos:line="136" pos:column="22">ap_log_rerror<pos:position pos:line="136" pos:column="35"/></name><argument_list pos:line="136" pos:column="35">(<argument><expr><name pos:line="136" pos:column="36">APLOG_MARK<pos:position pos:line="136" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="48">APLOG_DEBUG<pos:position pos:line="136" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="136" pos:column="61">0<pos:position pos:line="136" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="136" pos:column="64">r<pos:position pos:line="136" pos:column="65"/></name></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="137" pos:column="36">"proxy: NOT Closing connection to client"<pos:position pos:line="137" pos:column="77"/></literal>
                                   <literal type="string" pos:line="138" pos:column="36">" although reading from backend server %s:%d"<pos:position pos:line="138" pos:column="81"/></literal>
                                   <literal type="string" pos:line="139" pos:column="36">" failed."<pos:position pos:line="139" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="139" pos:column="48">backend<pos:position pos:line="139" pos:column="55"/></name><operator pos:line="139" pos:column="55">-&gt;<pos:position pos:line="139" pos:column="60"/></operator><name pos:line="139" pos:column="57">hostname<pos:position pos:line="139" pos:column="65"/></name></name></expr></argument>,
                                   <argument><expr><name><name pos:line="140" pos:column="36">backend<pos:position pos:line="140" pos:column="43"/></name><operator pos:line="140" pos:column="43">-&gt;<pos:position pos:line="140" pos:column="48"/></operator><name pos:line="140" pos:column="45">port<pos:position pos:line="140" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="141" pos:column="14"/></block></then></if></elseif></if>
            <return pos:line="142" pos:column="13">return <expr><call><name pos:line="142" pos:column="20">ap_proxyerror<pos:position pos:line="142" pos:column="33"/></name><argument_list pos:line="142" pos:column="33">(<argument><expr><name pos:line="142" pos:column="34">r<pos:position pos:line="142" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="37">HTTP_BAD_GATEWAY<pos:position pos:line="142" pos:column="53"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="143" pos:column="34">"Error reading from remote server"<pos:position pos:line="143" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="70"/></return>
        }<pos:position pos:line="144" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="145" pos:column="9">/* XXX: Is this a real headers length send from remote? */</comment>
        <expr_stmt><expr><name><name pos:line="146" pos:column="9">backend<pos:position pos:line="146" pos:column="16"/></name><operator pos:line="146" pos:column="16">-&gt;<pos:position pos:line="146" pos:column="21"/></operator><name pos:line="146" pos:column="18">worker<pos:position pos:line="146" pos:column="24"/></name><operator pos:line="146" pos:column="24">-&gt;<pos:position pos:line="146" pos:column="29"/></operator><name pos:line="146" pos:column="26">s<pos:position pos:line="146" pos:column="27"/></name><operator pos:line="146" pos:column="27">-&gt;<pos:position pos:line="146" pos:column="32"/></operator><name pos:line="146" pos:column="29">read<pos:position pos:line="146" pos:column="33"/></name></name> <operator pos:line="146" pos:column="34">+=<pos:position pos:line="146" pos:column="36"/></operator> <name pos:line="146" pos:column="37">len<pos:position pos:line="146" pos:column="40"/></name></expr>;<pos:position pos:line="146" pos:column="41"/></expr_stmt>

        <comment type="block" pos:line="148" pos:column="9">/* Is it an HTTP/1 response?
         * This is buggy if we ever see an HTTP/1.10
         */</comment>
        <if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><call><name pos:line="151" pos:column="13">apr_date_checkmask<pos:position pos:line="151" pos:column="31"/></name><argument_list pos:line="151" pos:column="31">(<argument><expr><name pos:line="151" pos:column="32">buffer<pos:position pos:line="151" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="40">"HTTP/#.# ###*"<pos:position pos:line="151" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="151" pos:column="57"/></condition><then pos:line="151" pos:column="57"> <block pos:line="151" pos:column="58">{
            <decl_stmt><decl><type><name pos:line="152" pos:column="13">int<pos:position pos:line="152" pos:column="16"/></name></type> <name pos:line="152" pos:column="17">major<pos:position pos:line="152" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="152" pos:column="24">minor<pos:position pos:line="152" pos:column="29"/></name></decl>;<pos:position pos:line="152" pos:column="30"/></decl_stmt>

            <if pos:line="154" pos:column="13">if <condition pos:line="154" pos:column="16">(<expr><literal type="number" pos:line="154" pos:column="17">2<pos:position pos:line="154" pos:column="18"/></literal> <operator pos:line="154" pos:column="19">!=<pos:position pos:line="154" pos:column="21"/></operator> <call><name pos:line="154" pos:column="22">sscanf<pos:position pos:line="154" pos:column="28"/></name><argument_list pos:line="154" pos:column="28">(<argument><expr><name pos:line="154" pos:column="29">buffer<pos:position pos:line="154" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="37">"HTTP/%u.%u"<pos:position pos:line="154" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="154" pos:column="51">&amp;<pos:position pos:line="154" pos:column="56"/></operator><name pos:line="154" pos:column="52">major<pos:position pos:line="154" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="154" pos:column="59">&amp;<pos:position pos:line="154" pos:column="64"/></operator><name pos:line="154" pos:column="60">minor<pos:position pos:line="154" pos:column="65"/></name></expr></argument>)<pos:position pos:line="154" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="154" pos:column="67"/></condition><then pos:line="154" pos:column="67"> <block pos:line="154" pos:column="68">{
                <expr_stmt><expr><name pos:line="155" pos:column="17">major<pos:position pos:line="155" pos:column="22"/></name> <operator pos:line="155" pos:column="23">=<pos:position pos:line="155" pos:column="24"/></operator> <literal type="number" pos:line="155" pos:column="25">1<pos:position pos:line="155" pos:column="26"/></literal></expr>;<pos:position pos:line="155" pos:column="27"/></expr_stmt>
                <expr_stmt><expr><name pos:line="156" pos:column="17">minor<pos:position pos:line="156" pos:column="22"/></name> <operator pos:line="156" pos:column="23">=<pos:position pos:line="156" pos:column="24"/></operator> <literal type="number" pos:line="156" pos:column="25">1<pos:position pos:line="156" pos:column="26"/></literal></expr>;<pos:position pos:line="156" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="157" pos:column="14"/></block></then>
            <comment type="block" pos:line="158" pos:column="13">/* If not an HTTP/1 message or
             * if the status line was &gt; 8192 bytes
             */</comment>
            <elseif pos:line="161" pos:column="13">else <if pos:line="161" pos:column="18">if <condition pos:line="161" pos:column="21">(<expr><operator pos:line="161" pos:column="22">(<pos:position pos:line="161" pos:column="23"/></operator><name><name pos:line="161" pos:column="23">buffer<pos:position pos:line="161" pos:column="29"/></name><index pos:line="161" pos:column="29">[<expr><literal type="number" pos:line="161" pos:column="30">5<pos:position pos:line="161" pos:column="31"/></literal></expr>]<pos:position pos:line="161" pos:column="32"/></index></name> <operator pos:line="161" pos:column="33">!=<pos:position pos:line="161" pos:column="35"/></operator> <literal type="char" pos:line="161" pos:column="36">'1'<pos:position pos:line="161" pos:column="39"/></literal><operator pos:line="161" pos:column="39">)<pos:position pos:line="161" pos:column="40"/></operator> <operator pos:line="161" pos:column="41">||<pos:position pos:line="161" pos:column="43"/></operator> <operator pos:line="161" pos:column="44">(<pos:position pos:line="161" pos:column="45"/></operator><name pos:line="161" pos:column="45">len<pos:position pos:line="161" pos:column="48"/></name> <operator pos:line="161" pos:column="49">&gt;=<pos:position pos:line="161" pos:column="54"/></operator> <sizeof pos:line="161" pos:column="52">sizeof<argument_list pos:line="161" pos:column="58">(<argument><expr><name pos:line="161" pos:column="59">buffer<pos:position pos:line="161" pos:column="65"/></name></expr></argument>)<pos:position pos:line="161" pos:column="66"/></argument_list></sizeof><operator pos:line="161" pos:column="66">-<pos:position pos:line="161" pos:column="67"/></operator><literal type="number" pos:line="161" pos:column="67">1<pos:position pos:line="161" pos:column="68"/></literal><operator pos:line="161" pos:column="68">)<pos:position pos:line="161" pos:column="69"/></operator></expr>)<pos:position pos:line="161" pos:column="70"/></condition><then pos:line="161" pos:column="70"> <block pos:line="161" pos:column="71">{
                <return pos:line="162" pos:column="17">return <expr><call><name pos:line="162" pos:column="24">ap_proxyerror<pos:position pos:line="162" pos:column="37"/></name><argument_list pos:line="162" pos:column="37">(<argument><expr><name pos:line="162" pos:column="38">r<pos:position pos:line="162" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="41">HTTP_BAD_GATEWAY<pos:position pos:line="162" pos:column="57"/></name></expr></argument>,
                <argument><expr><call><name pos:line="163" pos:column="17">apr_pstrcat<pos:position pos:line="163" pos:column="28"/></name><argument_list pos:line="163" pos:column="28">(<argument><expr><name pos:line="163" pos:column="29">p<pos:position pos:line="163" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="32">"Corrupt status line returned by remote "<pos:position pos:line="163" pos:column="73"/></literal>
                            <literal type="string" pos:line="164" pos:column="29">"server: "<pos:position pos:line="164" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="164" pos:column="41">buffer<pos:position pos:line="164" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="49">NULL<pos:position pos:line="164" pos:column="53"/></name></expr></argument>)<pos:position pos:line="164" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="164" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="56"/></return>
            }<pos:position pos:line="165" pos:column="14"/></block></then></if></elseif></if>
            <expr_stmt><expr><name pos:line="166" pos:column="13">backasswards<pos:position pos:line="166" pos:column="25"/></name> <operator pos:line="166" pos:column="26">=<pos:position pos:line="166" pos:column="27"/></operator> <literal type="number" pos:line="166" pos:column="28">0<pos:position pos:line="166" pos:column="29"/></literal></expr>;<pos:position pos:line="166" pos:column="30"/></expr_stmt>

            <expr_stmt><expr><name pos:line="168" pos:column="13">keepchar<pos:position pos:line="168" pos:column="21"/></name> <operator pos:line="168" pos:column="22">=<pos:position pos:line="168" pos:column="23"/></operator> <name><name pos:line="168" pos:column="24">buffer<pos:position pos:line="168" pos:column="30"/></name><index pos:line="168" pos:column="30">[<expr><literal type="number" pos:line="168" pos:column="31">12<pos:position pos:line="168" pos:column="33"/></literal></expr>]<pos:position pos:line="168" pos:column="34"/></index></name></expr>;<pos:position pos:line="168" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="169" pos:column="13">buffer<pos:position pos:line="169" pos:column="19"/></name><index pos:line="169" pos:column="19">[<expr><literal type="number" pos:line="169" pos:column="20">12<pos:position pos:line="169" pos:column="22"/></literal></expr>]<pos:position pos:line="169" pos:column="23"/></index></name> <operator pos:line="169" pos:column="24">=<pos:position pos:line="169" pos:column="25"/></operator> <literal type="char" pos:line="169" pos:column="26">'\0'<pos:position pos:line="169" pos:column="30"/></literal></expr>;<pos:position pos:line="169" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="170" pos:column="13">proxy_status<pos:position pos:line="170" pos:column="25"/></name> <operator pos:line="170" pos:column="26">=<pos:position pos:line="170" pos:column="27"/></operator> <call><name pos:line="170" pos:column="28">atoi<pos:position pos:line="170" pos:column="32"/></name><argument_list pos:line="170" pos:column="32">(<argument><expr><operator pos:line="170" pos:column="33">&amp;<pos:position pos:line="170" pos:column="38"/></operator><name><name pos:line="170" pos:column="34">buffer<pos:position pos:line="170" pos:column="40"/></name><index pos:line="170" pos:column="40">[<expr><literal type="number" pos:line="170" pos:column="41">9<pos:position pos:line="170" pos:column="42"/></literal></expr>]<pos:position pos:line="170" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="170" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="45"/></expr_stmt>

            <if pos:line="172" pos:column="13">if <condition pos:line="172" pos:column="16">(<expr><name pos:line="172" pos:column="17">keepchar<pos:position pos:line="172" pos:column="25"/></name> <operator pos:line="172" pos:column="26">!=<pos:position pos:line="172" pos:column="28"/></operator> <literal type="char" pos:line="172" pos:column="29">'\0'<pos:position pos:line="172" pos:column="33"/></literal></expr>)<pos:position pos:line="172" pos:column="34"/></condition><then pos:line="172" pos:column="34"> <block pos:line="172" pos:column="35">{
                <expr_stmt><expr><name><name pos:line="173" pos:column="17">buffer<pos:position pos:line="173" pos:column="23"/></name><index pos:line="173" pos:column="23">[<expr><literal type="number" pos:line="173" pos:column="24">12<pos:position pos:line="173" pos:column="26"/></literal></expr>]<pos:position pos:line="173" pos:column="27"/></index></name> <operator pos:line="173" pos:column="28">=<pos:position pos:line="173" pos:column="29"/></operator> <name pos:line="173" pos:column="30">keepchar<pos:position pos:line="173" pos:column="38"/></name></expr>;<pos:position pos:line="173" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="174" pos:column="14"/></block></then> <else pos:line="174" pos:column="15">else <block pos:line="174" pos:column="20">{
                <comment type="block" pos:line="175" pos:column="17">/* 2616 requires the space in Status-Line; the origin
                 * server may have sent one but ap_rgetline_core will
                 * have stripped it. */</comment>
                <expr_stmt><expr><name><name pos:line="178" pos:column="17">buffer<pos:position pos:line="178" pos:column="23"/></name><index pos:line="178" pos:column="23">[<expr><literal type="number" pos:line="178" pos:column="24">12<pos:position pos:line="178" pos:column="26"/></literal></expr>]<pos:position pos:line="178" pos:column="27"/></index></name> <operator pos:line="178" pos:column="28">=<pos:position pos:line="178" pos:column="29"/></operator> <literal type="char" pos:line="178" pos:column="30">' '<pos:position pos:line="178" pos:column="33"/></literal></expr>;<pos:position pos:line="178" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="179" pos:column="17">buffer<pos:position pos:line="179" pos:column="23"/></name><index pos:line="179" pos:column="23">[<expr><literal type="number" pos:line="179" pos:column="24">13<pos:position pos:line="179" pos:column="26"/></literal></expr>]<pos:position pos:line="179" pos:column="27"/></index></name> <operator pos:line="179" pos:column="28">=<pos:position pos:line="179" pos:column="29"/></operator> <literal type="char" pos:line="179" pos:column="30">'\0'<pos:position pos:line="179" pos:column="34"/></literal></expr>;<pos:position pos:line="179" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="180" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name pos:line="181" pos:column="13">proxy_status_line<pos:position pos:line="181" pos:column="30"/></name> <operator pos:line="181" pos:column="31">=<pos:position pos:line="181" pos:column="32"/></operator> <call><name pos:line="181" pos:column="33">apr_pstrdup<pos:position pos:line="181" pos:column="44"/></name><argument_list pos:line="181" pos:column="44">(<argument><expr><name pos:line="181" pos:column="45">p<pos:position pos:line="181" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="181" pos:column="48">&amp;<pos:position pos:line="181" pos:column="53"/></operator><name><name pos:line="181" pos:column="49">buffer<pos:position pos:line="181" pos:column="55"/></name><index pos:line="181" pos:column="55">[<expr><literal type="number" pos:line="181" pos:column="56">9<pos:position pos:line="181" pos:column="57"/></literal></expr>]<pos:position pos:line="181" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="181" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="60"/></expr_stmt>

            <comment type="block" pos:line="183" pos:column="13">/* The status out of the front is the same as the status coming in
             * from the back, until further notice.
             */</comment>
            <expr_stmt><expr><name><name pos:line="186" pos:column="13">r<pos:position pos:line="186" pos:column="14"/></name><operator pos:line="186" pos:column="14">-&gt;<pos:position pos:line="186" pos:column="19"/></operator><name pos:line="186" pos:column="16">status<pos:position pos:line="186" pos:column="22"/></name></name> <operator pos:line="186" pos:column="23">=<pos:position pos:line="186" pos:column="24"/></operator> <name pos:line="186" pos:column="25">proxy_status<pos:position pos:line="186" pos:column="37"/></name></expr>;<pos:position pos:line="186" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="187" pos:column="13">r<pos:position pos:line="187" pos:column="14"/></name><operator pos:line="187" pos:column="14">-&gt;<pos:position pos:line="187" pos:column="19"/></operator><name pos:line="187" pos:column="16">status_line<pos:position pos:line="187" pos:column="27"/></name></name> <operator pos:line="187" pos:column="28">=<pos:position pos:line="187" pos:column="29"/></operator> <name pos:line="187" pos:column="30">proxy_status_line<pos:position pos:line="187" pos:column="47"/></name></expr>;<pos:position pos:line="187" pos:column="48"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="189" pos:column="13">ap_log_rerror<pos:position pos:line="189" pos:column="26"/></name><argument_list pos:line="189" pos:column="26">(<argument><expr><name pos:line="189" pos:column="27">APLOG_MARK<pos:position pos:line="189" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="39">APLOG_TRACE3<pos:position pos:line="189" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="189" pos:column="53">0<pos:position pos:line="189" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="189" pos:column="56">r<pos:position pos:line="189" pos:column="57"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="190" pos:column="27">"Status from backend: %d"<pos:position pos:line="190" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="190" pos:column="54">proxy_status<pos:position pos:line="190" pos:column="66"/></name></expr></argument>)<pos:position pos:line="190" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="68"/></expr_stmt>

            <comment type="block" pos:line="192" pos:column="13">/* read the headers. */</comment>
            <comment type="block" pos:line="193" pos:column="13">/* N.B. for HTTP/1.0 clients, we have to fold line-wrapped headers*/</comment>
            <comment type="block" pos:line="194" pos:column="13">/* Also, take care with headers with multiple occurences. */</comment>

            <comment type="block" pos:line="196" pos:column="13">/* First, tuck away all already existing cookies */</comment>
            <expr_stmt><expr><name pos:line="197" pos:column="13">save_table<pos:position pos:line="197" pos:column="23"/></name> <operator pos:line="197" pos:column="24">=<pos:position pos:line="197" pos:column="25"/></operator> <call><name pos:line="197" pos:column="26">apr_table_make<pos:position pos:line="197" pos:column="40"/></name><argument_list pos:line="197" pos:column="40">(<argument><expr><name><name pos:line="197" pos:column="41">r<pos:position pos:line="197" pos:column="42"/></name><operator pos:line="197" pos:column="42">-&gt;<pos:position pos:line="197" pos:column="47"/></operator><name pos:line="197" pos:column="44">pool<pos:position pos:line="197" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="197" pos:column="50">2<pos:position pos:line="197" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="197" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="198" pos:column="13">apr_table_do<pos:position pos:line="198" pos:column="25"/></name><argument_list pos:line="198" pos:column="25">(<argument><expr><name pos:line="198" pos:column="26">addit_dammit<pos:position pos:line="198" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="198" pos:column="40">save_table<pos:position pos:line="198" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="198" pos:column="52">r<pos:position pos:line="198" pos:column="53"/></name><operator pos:line="198" pos:column="53">-&gt;<pos:position pos:line="198" pos:column="58"/></operator><name pos:line="198" pos:column="55">headers_out<pos:position pos:line="198" pos:column="66"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="199" pos:column="26">"Set-Cookie"<pos:position pos:line="199" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="199" pos:column="40">NULL<pos:position pos:line="199" pos:column="44"/></name></expr></argument>)<pos:position pos:line="199" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="46"/></expr_stmt>

            <comment type="block" pos:line="201" pos:column="13">/* shove the headers direct into r-&gt;headers_out */</comment>
            <expr_stmt><expr><call><name pos:line="202" pos:column="13">ap_proxy_read_headers<pos:position pos:line="202" pos:column="34"/></name><argument_list pos:line="202" pos:column="34">(<argument><expr><name pos:line="202" pos:column="35">r<pos:position pos:line="202" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="38">rp<pos:position pos:line="202" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="42">buffer<pos:position pos:line="202" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="202" pos:column="50">sizeof<argument_list pos:line="202" pos:column="56">(<argument><expr><name pos:line="202" pos:column="57">buffer<pos:position pos:line="202" pos:column="63"/></name></expr></argument>)<pos:position pos:line="202" pos:column="64"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="202" pos:column="66">origin<pos:position pos:line="202" pos:column="72"/></name></expr></argument>,
                                  <argument><expr><operator pos:line="203" pos:column="35">&amp;<pos:position pos:line="203" pos:column="40"/></operator><name pos:line="203" pos:column="36">pread_len<pos:position pos:line="203" pos:column="45"/></name></expr></argument>)<pos:position pos:line="203" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="47"/></expr_stmt>

            <if pos:line="205" pos:column="13">if <condition pos:line="205" pos:column="16">(<expr><name><name pos:line="205" pos:column="17">r<pos:position pos:line="205" pos:column="18"/></name><operator pos:line="205" pos:column="18">-&gt;<pos:position pos:line="205" pos:column="23"/></operator><name pos:line="205" pos:column="20">headers_out<pos:position pos:line="205" pos:column="31"/></name></name> <operator pos:line="205" pos:column="32">==<pos:position pos:line="205" pos:column="34"/></operator> <name pos:line="205" pos:column="35">NULL<pos:position pos:line="205" pos:column="39"/></name></expr>)<pos:position pos:line="205" pos:column="40"/></condition><then pos:line="205" pos:column="40"> <block pos:line="205" pos:column="41">{
                <expr_stmt><expr><call><name pos:line="206" pos:column="17">ap_log_error<pos:position pos:line="206" pos:column="29"/></name><argument_list pos:line="206" pos:column="29">(<argument><expr><name pos:line="206" pos:column="30">APLOG_MARK<pos:position pos:line="206" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="42">APLOG_WARNING<pos:position pos:line="206" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="206" pos:column="57">0<pos:position pos:line="206" pos:column="58"/></literal></expr></argument>,
                             <argument><expr><name><name pos:line="207" pos:column="30">r<pos:position pos:line="207" pos:column="31"/></name><operator pos:line="207" pos:column="31">-&gt;<pos:position pos:line="207" pos:column="36"/></operator><name pos:line="207" pos:column="33">server<pos:position pos:line="207" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="207" pos:column="41">"proxy: bad HTTP/%d.%d header "<pos:position pos:line="207" pos:column="72"/></literal>
                             <literal type="string" pos:line="208" pos:column="30">"returned by %s (%s)"<pos:position pos:line="208" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="208" pos:column="53">major<pos:position pos:line="208" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="60">minor<pos:position pos:line="208" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="208" pos:column="67">r<pos:position pos:line="208" pos:column="68"/></name><operator pos:line="208" pos:column="68">-&gt;<pos:position pos:line="208" pos:column="73"/></operator><name pos:line="208" pos:column="70">uri<pos:position pos:line="208" pos:column="73"/></name></name></expr></argument>,
                             <argument><expr><name><name pos:line="209" pos:column="30">r<pos:position pos:line="209" pos:column="31"/></name><operator pos:line="209" pos:column="31">-&gt;<pos:position pos:line="209" pos:column="36"/></operator><name pos:line="209" pos:column="33">method<pos:position pos:line="209" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="209" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="210" pos:column="17">backend<pos:position pos:line="210" pos:column="24"/></name><operator pos:line="210" pos:column="24">-&gt;<pos:position pos:line="210" pos:column="29"/></operator><name pos:line="210" pos:column="26">close<pos:position pos:line="210" pos:column="31"/></name></name> <operator pos:line="210" pos:column="32">+=<pos:position pos:line="210" pos:column="34"/></operator> <literal type="number" pos:line="210" pos:column="35">1<pos:position pos:line="210" pos:column="36"/></literal></expr>;<pos:position pos:line="210" pos:column="37"/></expr_stmt>
                <comment type="block" pos:line="211" pos:column="17">/*
                 * ap_send_error relies on a headers_out to be present. we
                 * are in a bad position here.. so force everything we send out
                 * to have nothing to do with the incoming packet
                 */</comment>
                <expr_stmt><expr><name><name pos:line="216" pos:column="17">r<pos:position pos:line="216" pos:column="18"/></name><operator pos:line="216" pos:column="18">-&gt;<pos:position pos:line="216" pos:column="23"/></operator><name pos:line="216" pos:column="20">headers_out<pos:position pos:line="216" pos:column="31"/></name></name> <operator pos:line="216" pos:column="32">=<pos:position pos:line="216" pos:column="33"/></operator> <call><name pos:line="216" pos:column="34">apr_table_make<pos:position pos:line="216" pos:column="48"/></name><argument_list pos:line="216" pos:column="48">(<argument><expr><name><name pos:line="216" pos:column="49">r<pos:position pos:line="216" pos:column="50"/></name><operator pos:line="216" pos:column="50">-&gt;<pos:position pos:line="216" pos:column="55"/></operator><name pos:line="216" pos:column="52">pool<pos:position pos:line="216" pos:column="56"/></name></name></expr></argument>,<argument><expr><literal type="number" pos:line="216" pos:column="57">1<pos:position pos:line="216" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="216" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="60"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="217" pos:column="17">r<pos:position pos:line="217" pos:column="18"/></name><operator pos:line="217" pos:column="18">-&gt;<pos:position pos:line="217" pos:column="23"/></operator><name pos:line="217" pos:column="20">status<pos:position pos:line="217" pos:column="26"/></name></name> <operator pos:line="217" pos:column="27">=<pos:position pos:line="217" pos:column="28"/></operator> <name pos:line="217" pos:column="29">HTTP_BAD_GATEWAY<pos:position pos:line="217" pos:column="45"/></name></expr>;<pos:position pos:line="217" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="218" pos:column="17">r<pos:position pos:line="218" pos:column="18"/></name><operator pos:line="218" pos:column="18">-&gt;<pos:position pos:line="218" pos:column="23"/></operator><name pos:line="218" pos:column="20">status_line<pos:position pos:line="218" pos:column="31"/></name></name> <operator pos:line="218" pos:column="32">=<pos:position pos:line="218" pos:column="33"/></operator> <literal type="string" pos:line="218" pos:column="34">"bad gateway"<pos:position pos:line="218" pos:column="47"/></literal></expr>;<pos:position pos:line="218" pos:column="48"/></expr_stmt>
                <return pos:line="219" pos:column="17">return <expr><name><name pos:line="219" pos:column="24">r<pos:position pos:line="219" pos:column="25"/></name><operator pos:line="219" pos:column="25">-&gt;<pos:position pos:line="219" pos:column="30"/></operator><name pos:line="219" pos:column="27">status<pos:position pos:line="219" pos:column="33"/></name></name></expr>;<pos:position pos:line="219" pos:column="34"/></return>
            }<pos:position pos:line="220" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="222" pos:column="13">/* Now, add in the just read cookies */</comment>
            <expr_stmt><expr><call><name pos:line="223" pos:column="13">apr_table_do<pos:position pos:line="223" pos:column="25"/></name><argument_list pos:line="223" pos:column="25">(<argument><expr><name pos:line="223" pos:column="26">addit_dammit<pos:position pos:line="223" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="223" pos:column="40">save_table<pos:position pos:line="223" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="223" pos:column="52">r<pos:position pos:line="223" pos:column="53"/></name><operator pos:line="223" pos:column="53">-&gt;<pos:position pos:line="223" pos:column="58"/></operator><name pos:line="223" pos:column="55">headers_out<pos:position pos:line="223" pos:column="66"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="224" pos:column="26">"Set-Cookie"<pos:position pos:line="224" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="224" pos:column="40">NULL<pos:position pos:line="224" pos:column="44"/></name></expr></argument>)<pos:position pos:line="224" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="46"/></expr_stmt>

            <comment type="block" pos:line="226" pos:column="13">/* and now load 'em all in */</comment>
            <if pos:line="227" pos:column="13">if <condition pos:line="227" pos:column="16">(<expr><operator pos:line="227" pos:column="17">!<pos:position pos:line="227" pos:column="18"/></operator><call><name pos:line="227" pos:column="18">apr_is_empty_table<pos:position pos:line="227" pos:column="36"/></name><argument_list pos:line="227" pos:column="36">(<argument><expr><name pos:line="227" pos:column="37">save_table<pos:position pos:line="227" pos:column="47"/></name></expr></argument>)<pos:position pos:line="227" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="227" pos:column="49"/></condition><then pos:line="227" pos:column="49"> <block pos:line="227" pos:column="50">{
                <expr_stmt><expr><call><name pos:line="228" pos:column="17">apr_table_unset<pos:position pos:line="228" pos:column="32"/></name><argument_list pos:line="228" pos:column="32">(<argument><expr><name><name pos:line="228" pos:column="33">r<pos:position pos:line="228" pos:column="34"/></name><operator pos:line="228" pos:column="34">-&gt;<pos:position pos:line="228" pos:column="39"/></operator><name pos:line="228" pos:column="36">headers_out<pos:position pos:line="228" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="228" pos:column="49">"Set-Cookie"<pos:position pos:line="228" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="228" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="229" pos:column="17">r<pos:position pos:line="229" pos:column="18"/></name><operator pos:line="229" pos:column="18">-&gt;<pos:position pos:line="229" pos:column="23"/></operator><name pos:line="229" pos:column="20">headers_out<pos:position pos:line="229" pos:column="31"/></name></name> <operator pos:line="229" pos:column="32">=<pos:position pos:line="229" pos:column="33"/></operator> <call><name pos:line="229" pos:column="34">apr_table_overlay<pos:position pos:line="229" pos:column="51"/></name><argument_list pos:line="229" pos:column="51">(<argument><expr><name><name pos:line="229" pos:column="52">r<pos:position pos:line="229" pos:column="53"/></name><operator pos:line="229" pos:column="53">-&gt;<pos:position pos:line="229" pos:column="58"/></operator><name pos:line="229" pos:column="55">pool<pos:position pos:line="229" pos:column="59"/></name></name></expr></argument>,
                                                   <argument><expr><name><name pos:line="230" pos:column="52">r<pos:position pos:line="230" pos:column="53"/></name><operator pos:line="230" pos:column="53">-&gt;<pos:position pos:line="230" pos:column="58"/></operator><name pos:line="230" pos:column="55">headers_out<pos:position pos:line="230" pos:column="66"/></name></name></expr></argument>,
                                                   <argument><expr><name pos:line="231" pos:column="52">save_table<pos:position pos:line="231" pos:column="62"/></name></expr></argument>)<pos:position pos:line="231" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="64"/></expr_stmt>
            }<pos:position pos:line="232" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="234" pos:column="13">/* can't have both Content-Length and Transfer-Encoding */</comment>
            <if pos:line="235" pos:column="13">if <condition pos:line="235" pos:column="16">(<expr><call><name pos:line="235" pos:column="17">apr_table_get<pos:position pos:line="235" pos:column="30"/></name><argument_list pos:line="235" pos:column="30">(<argument><expr><name><name pos:line="235" pos:column="31">r<pos:position pos:line="235" pos:column="32"/></name><operator pos:line="235" pos:column="32">-&gt;<pos:position pos:line="235" pos:column="37"/></operator><name pos:line="235" pos:column="34">headers_out<pos:position pos:line="235" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="235" pos:column="47">"Transfer-Encoding"<pos:position pos:line="235" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="235" pos:column="67"/></argument_list></call>
                    <operator pos:line="236" pos:column="21">&amp;&amp;<pos:position pos:line="236" pos:column="31"/></operator> <call><name pos:line="236" pos:column="24">apr_table_get<pos:position pos:line="236" pos:column="37"/></name><argument_list pos:line="236" pos:column="37">(<argument><expr><name><name pos:line="236" pos:column="38">r<pos:position pos:line="236" pos:column="39"/></name><operator pos:line="236" pos:column="39">-&gt;<pos:position pos:line="236" pos:column="44"/></operator><name pos:line="236" pos:column="41">headers_out<pos:position pos:line="236" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="236" pos:column="54">"Content-Length"<pos:position pos:line="236" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="236" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="236" pos:column="72"/></condition><then pos:line="236" pos:column="72"> <block pos:line="236" pos:column="73">{
                <comment type="block" pos:line="237" pos:column="17">/*
                 * 2616 section 4.4, point 3: "if both Transfer-Encoding
                 * and Content-Length are received, the latter MUST be
                 * ignored";
                 *
                 * To help mitigate HTTP Splitting, unset Content-Length
                 * and shut down the backend server connection
                 * XXX: We aught to treat such a response as uncachable
                 */</comment>
                <expr_stmt><expr><call><name pos:line="246" pos:column="17">apr_table_unset<pos:position pos:line="246" pos:column="32"/></name><argument_list pos:line="246" pos:column="32">(<argument><expr><name><name pos:line="246" pos:column="33">r<pos:position pos:line="246" pos:column="34"/></name><operator pos:line="246" pos:column="34">-&gt;<pos:position pos:line="246" pos:column="39"/></operator><name pos:line="246" pos:column="36">headers_out<pos:position pos:line="246" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="246" pos:column="49">"Content-Length"<pos:position pos:line="246" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="246" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="67"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="247" pos:column="17">ap_log_error<pos:position pos:line="247" pos:column="29"/></name><argument_list pos:line="247" pos:column="29">(<argument><expr><name pos:line="247" pos:column="30">APLOG_MARK<pos:position pos:line="247" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="247" pos:column="42">APLOG_DEBUG<pos:position pos:line="247" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="247" pos:column="55">0<pos:position pos:line="247" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="247" pos:column="58">r<pos:position pos:line="247" pos:column="59"/></name><operator pos:line="247" pos:column="59">-&gt;<pos:position pos:line="247" pos:column="64"/></operator><name pos:line="247" pos:column="61">server<pos:position pos:line="247" pos:column="67"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="248" pos:column="30">"proxy: server %s:%d returned Transfer-Encoding"<pos:position pos:line="248" pos:column="78"/></literal>
                             <literal type="string" pos:line="249" pos:column="30">" and Content-Length"<pos:position pos:line="249" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="249" pos:column="53">backend<pos:position pos:line="249" pos:column="60"/></name><operator pos:line="249" pos:column="60">-&gt;<pos:position pos:line="249" pos:column="65"/></operator><name pos:line="249" pos:column="62">hostname<pos:position pos:line="249" pos:column="70"/></name></name></expr></argument>,
                             <argument><expr><name><name pos:line="250" pos:column="30">backend<pos:position pos:line="250" pos:column="37"/></name><operator pos:line="250" pos:column="37">-&gt;<pos:position pos:line="250" pos:column="42"/></operator><name pos:line="250" pos:column="39">port<pos:position pos:line="250" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="250" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="251" pos:column="17">backend<pos:position pos:line="251" pos:column="24"/></name><operator pos:line="251" pos:column="24">-&gt;<pos:position pos:line="251" pos:column="29"/></operator><name pos:line="251" pos:column="26">close<pos:position pos:line="251" pos:column="31"/></name></name> <operator pos:line="251" pos:column="32">+=<pos:position pos:line="251" pos:column="34"/></operator> <literal type="number" pos:line="251" pos:column="35">1<pos:position pos:line="251" pos:column="36"/></literal></expr>;<pos:position pos:line="251" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="252" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="254" pos:column="13">/*
             * Save a possible Transfer-Encoding header as we need it later for
             * ap_http_filter to know where to end.
             */</comment>
            <expr_stmt><expr><name pos:line="258" pos:column="13">te<pos:position pos:line="258" pos:column="15"/></name> <operator pos:line="258" pos:column="16">=<pos:position pos:line="258" pos:column="17"/></operator> <call><name pos:line="258" pos:column="18">apr_table_get<pos:position pos:line="258" pos:column="31"/></name><argument_list pos:line="258" pos:column="31">(<argument><expr><name><name pos:line="258" pos:column="32">r<pos:position pos:line="258" pos:column="33"/></name><operator pos:line="258" pos:column="33">-&gt;<pos:position pos:line="258" pos:column="38"/></operator><name pos:line="258" pos:column="35">headers_out<pos:position pos:line="258" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="258" pos:column="48">"Transfer-Encoding"<pos:position pos:line="258" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="258" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="69"/></expr_stmt>
            <comment type="block" pos:line="259" pos:column="13">/* strip connection listed hop-by-hop headers from response */</comment>
            <expr_stmt><expr><name><name pos:line="260" pos:column="13">backend<pos:position pos:line="260" pos:column="20"/></name><operator pos:line="260" pos:column="20">-&gt;<pos:position pos:line="260" pos:column="25"/></operator><name pos:line="260" pos:column="22">close<pos:position pos:line="260" pos:column="27"/></name></name> <operator pos:line="260" pos:column="28">+=<pos:position pos:line="260" pos:column="30"/></operator> <call><name pos:line="260" pos:column="31">ap_proxy_liststr<pos:position pos:line="260" pos:column="47"/></name><argument_list pos:line="260" pos:column="47">(<argument><expr><call><name pos:line="260" pos:column="48">apr_table_get<pos:position pos:line="260" pos:column="61"/></name><argument_list pos:line="260" pos:column="61">(<argument><expr><name><name pos:line="260" pos:column="62">r<pos:position pos:line="260" pos:column="63"/></name><operator pos:line="260" pos:column="63">-&gt;<pos:position pos:line="260" pos:column="68"/></operator><name pos:line="260" pos:column="65">headers_out<pos:position pos:line="260" pos:column="76"/></name></name></expr></argument>,
                                                             <argument><expr><literal type="string" pos:line="261" pos:column="62">"Connection"<pos:position pos:line="261" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="261" pos:column="75"/></argument_list></call></expr></argument>,
                                              <argument><expr><literal type="string" pos:line="262" pos:column="47">"close"<pos:position pos:line="262" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="262" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="263" pos:column="13">ap_proxy_clear_connection<pos:position pos:line="263" pos:column="38"/></name><argument_list pos:line="263" pos:column="38">(<argument><expr><name pos:line="263" pos:column="39">p<pos:position pos:line="263" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="263" pos:column="42">r<pos:position pos:line="263" pos:column="43"/></name><operator pos:line="263" pos:column="43">-&gt;<pos:position pos:line="263" pos:column="48"/></operator><name pos:line="263" pos:column="45">headers_out<pos:position pos:line="263" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="263" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="58"/></expr_stmt>
            <if pos:line="264" pos:column="13">if <condition pos:line="264" pos:column="16">(<expr><operator pos:line="264" pos:column="17">(<pos:position pos:line="264" pos:column="18"/></operator><name pos:line="264" pos:column="18">buf<pos:position pos:line="264" pos:column="21"/></name> <operator pos:line="264" pos:column="22">=<pos:position pos:line="264" pos:column="23"/></operator> <call><name pos:line="264" pos:column="24">apr_table_get<pos:position pos:line="264" pos:column="37"/></name><argument_list pos:line="264" pos:column="37">(<argument><expr><name><name pos:line="264" pos:column="38">r<pos:position pos:line="264" pos:column="39"/></name><operator pos:line="264" pos:column="39">-&gt;<pos:position pos:line="264" pos:column="44"/></operator><name pos:line="264" pos:column="41">headers_out<pos:position pos:line="264" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="264" pos:column="54">"Content-Type"<pos:position pos:line="264" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="264" pos:column="69"/></argument_list></call><operator pos:line="264" pos:column="69">)<pos:position pos:line="264" pos:column="70"/></operator></expr>)<pos:position pos:line="264" pos:column="71"/></condition><then pos:line="264" pos:column="71"> <block pos:line="264" pos:column="72">{
                <expr_stmt><expr><call><name pos:line="265" pos:column="17">ap_set_content_type<pos:position pos:line="265" pos:column="36"/></name><argument_list pos:line="265" pos:column="36">(<argument><expr><name pos:line="265" pos:column="37">r<pos:position pos:line="265" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="265" pos:column="40">apr_pstrdup<pos:position pos:line="265" pos:column="51"/></name><argument_list pos:line="265" pos:column="51">(<argument><expr><name pos:line="265" pos:column="52">p<pos:position pos:line="265" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="55">buf<pos:position pos:line="265" pos:column="58"/></name></expr></argument>)<pos:position pos:line="265" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="265" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="61"/></expr_stmt>
            }<pos:position pos:line="266" pos:column="14"/></block></then></if>
            <if pos:line="267" pos:column="13">if <condition pos:line="267" pos:column="16">(<expr><operator pos:line="267" pos:column="17">!<pos:position pos:line="267" pos:column="18"/></operator><call><name pos:line="267" pos:column="18">ap_is_HTTP_INFO<pos:position pos:line="267" pos:column="33"/></name><argument_list pos:line="267" pos:column="33">(<argument><expr><name pos:line="267" pos:column="34">proxy_status<pos:position pos:line="267" pos:column="46"/></name></expr></argument>)<pos:position pos:line="267" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="267" pos:column="48"/></condition><then pos:line="267" pos:column="48"> <block pos:line="267" pos:column="49">{
                <expr_stmt><expr><call><name pos:line="268" pos:column="17">ap_proxy_pre_http_request<pos:position pos:line="268" pos:column="42"/></name><argument_list pos:line="268" pos:column="42">(<argument><expr><name pos:line="268" pos:column="43">origin<pos:position pos:line="268" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="268" pos:column="51">rp<pos:position pos:line="268" pos:column="53"/></name></expr></argument>)<pos:position pos:line="268" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="55"/></expr_stmt>
            }<pos:position pos:line="269" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="271" pos:column="13">/* Clear hop-by-hop headers */</comment>
            <for pos:line="272" pos:column="13">for <control pos:line="272" pos:column="17">(<init><expr><name pos:line="272" pos:column="18">i<pos:position pos:line="272" pos:column="19"/></name><operator pos:line="272" pos:column="19">=<pos:position pos:line="272" pos:column="20"/></operator><literal type="number" pos:line="272" pos:column="20">0<pos:position pos:line="272" pos:column="21"/></literal></expr>;<pos:position pos:line="272" pos:column="22"/></init> <condition><expr><name><name pos:line="272" pos:column="23">hop_by_hop_hdrs<pos:position pos:line="272" pos:column="38"/></name><index pos:line="272" pos:column="38">[<expr><name pos:line="272" pos:column="39">i<pos:position pos:line="272" pos:column="40"/></name></expr>]<pos:position pos:line="272" pos:column="41"/></index></name></expr>;<pos:position pos:line="272" pos:column="42"/></condition> <incr><expr><operator pos:line="272" pos:column="43">++<pos:position pos:line="272" pos:column="45"/></operator><name pos:line="272" pos:column="45">i<pos:position pos:line="272" pos:column="46"/></name></expr></incr>)<pos:position pos:line="272" pos:column="47"/></control> <block pos:line="272" pos:column="48">{
                <expr_stmt><expr><call><name pos:line="273" pos:column="17">apr_table_unset<pos:position pos:line="273" pos:column="32"/></name><argument_list pos:line="273" pos:column="32">(<argument><expr><name><name pos:line="273" pos:column="33">r<pos:position pos:line="273" pos:column="34"/></name><operator pos:line="273" pos:column="34">-&gt;<pos:position pos:line="273" pos:column="39"/></operator><name pos:line="273" pos:column="36">headers_out<pos:position pos:line="273" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="273" pos:column="49">hop_by_hop_hdrs<pos:position pos:line="273" pos:column="64"/></name><index pos:line="273" pos:column="64">[<expr><name pos:line="273" pos:column="65">i<pos:position pos:line="273" pos:column="66"/></name></expr>]<pos:position pos:line="273" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="273" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="69"/></expr_stmt>
            }<pos:position pos:line="274" pos:column="14"/></block></for>
            <comment type="block" pos:line="275" pos:column="13">/* Delete warnings with wrong date */</comment>
            <expr_stmt><expr><name><name pos:line="276" pos:column="13">r<pos:position pos:line="276" pos:column="14"/></name><operator pos:line="276" pos:column="14">-&gt;<pos:position pos:line="276" pos:column="19"/></operator><name pos:line="276" pos:column="16">headers_out<pos:position pos:line="276" pos:column="27"/></name></name> <operator pos:line="276" pos:column="28">=<pos:position pos:line="276" pos:column="29"/></operator> <call><name pos:line="276" pos:column="30">ap_proxy_clean_warnings<pos:position pos:line="276" pos:column="53"/></name><argument_list pos:line="276" pos:column="53">(<argument><expr><name pos:line="276" pos:column="54">p<pos:position pos:line="276" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="276" pos:column="57">r<pos:position pos:line="276" pos:column="58"/></name><operator pos:line="276" pos:column="58">-&gt;<pos:position pos:line="276" pos:column="63"/></operator><name pos:line="276" pos:column="60">headers_out<pos:position pos:line="276" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="276" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="73"/></expr_stmt>

            <comment type="block" pos:line="278" pos:column="13">/* handle Via header in response */</comment>
            <if pos:line="279" pos:column="13">if <condition pos:line="279" pos:column="16">(<expr><name><name pos:line="279" pos:column="17">conf<pos:position pos:line="279" pos:column="21"/></name><operator pos:line="279" pos:column="21">-&gt;<pos:position pos:line="279" pos:column="26"/></operator><name pos:line="279" pos:column="23">viaopt<pos:position pos:line="279" pos:column="29"/></name></name> <operator pos:line="279" pos:column="30">!=<pos:position pos:line="279" pos:column="32"/></operator> <name pos:line="279" pos:column="33">via_off<pos:position pos:line="279" pos:column="40"/></name> <operator pos:line="279" pos:column="41">&amp;&amp;<pos:position pos:line="279" pos:column="51"/></operator> <name><name pos:line="279" pos:column="44">conf<pos:position pos:line="279" pos:column="48"/></name><operator pos:line="279" pos:column="48">-&gt;<pos:position pos:line="279" pos:column="53"/></operator><name pos:line="279" pos:column="50">viaopt<pos:position pos:line="279" pos:column="56"/></name></name> <operator pos:line="279" pos:column="57">!=<pos:position pos:line="279" pos:column="59"/></operator> <name pos:line="279" pos:column="60">via_block<pos:position pos:line="279" pos:column="69"/></name></expr>)<pos:position pos:line="279" pos:column="70"/></condition><then pos:line="279" pos:column="70"> <block pos:line="279" pos:column="71">{
                <decl_stmt><decl><type><specifier pos:line="280" pos:column="17">const<pos:position pos:line="280" pos:column="22"/></specifier> <name pos:line="280" pos:column="23">char<pos:position pos:line="280" pos:column="27"/></name> <modifier pos:line="280" pos:column="28">*<pos:position pos:line="280" pos:column="29"/></modifier></type><name pos:line="280" pos:column="29">server_name<pos:position pos:line="280" pos:column="40"/></name> <init pos:line="280" pos:column="41">= <expr><call><name pos:line="280" pos:column="43">ap_get_server_name<pos:position pos:line="280" pos:column="61"/></name><argument_list pos:line="280" pos:column="61">(<argument><expr><name pos:line="280" pos:column="62">r<pos:position pos:line="280" pos:column="63"/></name></expr></argument>)<pos:position pos:line="280" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="280" pos:column="65"/></decl_stmt>
                <comment type="block" pos:line="281" pos:column="17">/* If USE_CANONICAL_NAME_OFF was configured for the proxy virtual host,
                 * then the server name returned by ap_get_server_name() is the
                 * origin server name (which does make too much sense with Via: headers)
                 * so we use the proxy vhost's name instead.
                 */</comment>
                <if pos:line="286" pos:column="17">if <condition pos:line="286" pos:column="20">(<expr><name pos:line="286" pos:column="21">server_name<pos:position pos:line="286" pos:column="32"/></name> <operator pos:line="286" pos:column="33">==<pos:position pos:line="286" pos:column="35"/></operator> <name><name pos:line="286" pos:column="36">r<pos:position pos:line="286" pos:column="37"/></name><operator pos:line="286" pos:column="37">-&gt;<pos:position pos:line="286" pos:column="42"/></operator><name pos:line="286" pos:column="39">hostname<pos:position pos:line="286" pos:column="47"/></name></name></expr>)<pos:position pos:line="286" pos:column="48"/></condition><then pos:line="286" pos:column="48">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="287" pos:column="21">server_name<pos:position pos:line="287" pos:column="32"/></name> <operator pos:line="287" pos:column="33">=<pos:position pos:line="287" pos:column="34"/></operator> <name><name pos:line="287" pos:column="35">r<pos:position pos:line="287" pos:column="36"/></name><operator pos:line="287" pos:column="36">-&gt;<pos:position pos:line="287" pos:column="41"/></operator><name pos:line="287" pos:column="38">server<pos:position pos:line="287" pos:column="44"/></name><operator pos:line="287" pos:column="44">-&gt;<pos:position pos:line="287" pos:column="49"/></operator><name pos:line="287" pos:column="46">server_hostname<pos:position pos:line="287" pos:column="61"/></name></name></expr>;<pos:position pos:line="287" pos:column="62"/></expr_stmt></block></then></if>
                <comment type="block" pos:line="288" pos:column="17">/* create a "Via:" response header entry and merge it */</comment>
                <expr_stmt><expr><call><name pos:line="289" pos:column="17">apr_table_addn<pos:position pos:line="289" pos:column="31"/></name><argument_list pos:line="289" pos:column="31">(<argument><expr><name><name pos:line="289" pos:column="32">r<pos:position pos:line="289" pos:column="33"/></name><operator pos:line="289" pos:column="33">-&gt;<pos:position pos:line="289" pos:column="38"/></operator><name pos:line="289" pos:column="35">headers_out<pos:position pos:line="289" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="289" pos:column="48">"Via"<pos:position pos:line="289" pos:column="53"/></literal></expr></argument>,
                               <argument><expr><ternary><condition><expr><operator pos:line="290" pos:column="32">(<pos:position pos:line="290" pos:column="33"/></operator><name><name pos:line="290" pos:column="33">conf<pos:position pos:line="290" pos:column="37"/></name><operator pos:line="290" pos:column="37">-&gt;<pos:position pos:line="290" pos:column="42"/></operator><name pos:line="290" pos:column="39">viaopt<pos:position pos:line="290" pos:column="45"/></name></name> <operator pos:line="290" pos:column="46">==<pos:position pos:line="290" pos:column="48"/></operator> <name pos:line="290" pos:column="49">via_full<pos:position pos:line="290" pos:column="57"/></name><operator pos:line="290" pos:column="57">)<pos:position pos:line="290" pos:column="58"/></operator></expr>
                                     ?<pos:position pos:line="291" pos:column="39"/></condition><then pos:line="291" pos:column="39"> <expr><call><name pos:line="291" pos:column="40">apr_psprintf<pos:position pos:line="291" pos:column="52"/></name><argument_list pos:line="291" pos:column="52">(<argument><expr><name pos:line="291" pos:column="53">p<pos:position pos:line="291" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="291" pos:column="56">"%d.%d %s%s (%s)"<pos:position pos:line="291" pos:column="73"/></literal></expr></argument>,
                                           <argument><expr><call><name pos:line="292" pos:column="44">HTTP_VERSION_MAJOR<pos:position pos:line="292" pos:column="62"/></name><argument_list pos:line="292" pos:column="62">(<argument><expr><name><name pos:line="292" pos:column="63">r<pos:position pos:line="292" pos:column="64"/></name><operator pos:line="292" pos:column="64">-&gt;<pos:position pos:line="292" pos:column="69"/></operator><name pos:line="292" pos:column="66">proto_num<pos:position pos:line="292" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="292" pos:column="76"/></argument_list></call></expr></argument>,
                                           <argument><expr><call><name pos:line="293" pos:column="44">HTTP_VERSION_MINOR<pos:position pos:line="293" pos:column="62"/></name><argument_list pos:line="293" pos:column="62">(<argument><expr><name><name pos:line="293" pos:column="63">r<pos:position pos:line="293" pos:column="64"/></name><operator pos:line="293" pos:column="64">-&gt;<pos:position pos:line="293" pos:column="69"/></operator><name pos:line="293" pos:column="66">proto_num<pos:position pos:line="293" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="293" pos:column="76"/></argument_list></call></expr></argument>,
                                           <argument><expr><name pos:line="294" pos:column="44">server_name<pos:position pos:line="294" pos:column="55"/></name></expr></argument>,
                                           <argument><expr><name pos:line="295" pos:column="44">server_portstr<pos:position pos:line="295" pos:column="58"/></name></expr></argument>,
                                           <argument><expr><name pos:line="296" pos:column="44">AP_SERVER_BASEVERSION<pos:position pos:line="296" pos:column="65"/></name></expr></argument>)<pos:position pos:line="296" pos:column="66"/></argument_list></call></expr>
                                     <pos:position pos:line="297" pos:column="38"/></then><else pos:line="297" pos:column="38">: <expr><call><name pos:line="297" pos:column="40">apr_psprintf<pos:position pos:line="297" pos:column="52"/></name><argument_list pos:line="297" pos:column="52">(<argument><expr><name pos:line="297" pos:column="53">p<pos:position pos:line="297" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="297" pos:column="56">"%d.%d %s%s"<pos:position pos:line="297" pos:column="68"/></literal></expr></argument>,
                                           <argument><expr><call><name pos:line="298" pos:column="44">HTTP_VERSION_MAJOR<pos:position pos:line="298" pos:column="62"/></name><argument_list pos:line="298" pos:column="62">(<argument><expr><name><name pos:line="298" pos:column="63">r<pos:position pos:line="298" pos:column="64"/></name><operator pos:line="298" pos:column="64">-&gt;<pos:position pos:line="298" pos:column="69"/></operator><name pos:line="298" pos:column="66">proto_num<pos:position pos:line="298" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="298" pos:column="76"/></argument_list></call></expr></argument>,
                                           <argument><expr><call><name pos:line="299" pos:column="44">HTTP_VERSION_MINOR<pos:position pos:line="299" pos:column="62"/></name><argument_list pos:line="299" pos:column="62">(<argument><expr><name><name pos:line="299" pos:column="63">r<pos:position pos:line="299" pos:column="64"/></name><operator pos:line="299" pos:column="64">-&gt;<pos:position pos:line="299" pos:column="69"/></operator><name pos:line="299" pos:column="66">proto_num<pos:position pos:line="299" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="299" pos:column="76"/></argument_list></call></expr></argument>,
                                           <argument><expr><name pos:line="300" pos:column="44">server_name<pos:position pos:line="300" pos:column="55"/></name></expr></argument>,
                                           <argument><expr><name pos:line="301" pos:column="44">server_portstr<pos:position pos:line="301" pos:column="58"/></name></expr></argument>)<pos:position pos:line="301" pos:column="59"/></argument_list></call></expr></else></ternary></expr></argument>
                )<pos:position pos:line="302" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="19"/></expr_stmt>
            }<pos:position pos:line="303" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="305" pos:column="13">/* cancel keepalive if HTTP/1.0 or less */</comment>
            <if pos:line="306" pos:column="13">if <condition pos:line="306" pos:column="16">(<expr><operator pos:line="306" pos:column="17">(<pos:position pos:line="306" pos:column="18"/></operator><name pos:line="306" pos:column="18">major<pos:position pos:line="306" pos:column="23"/></name> <operator pos:line="306" pos:column="24">&lt;<pos:position pos:line="306" pos:column="28"/></operator> <literal type="number" pos:line="306" pos:column="26">1<pos:position pos:line="306" pos:column="27"/></literal><operator pos:line="306" pos:column="27">)<pos:position pos:line="306" pos:column="28"/></operator> <operator pos:line="306" pos:column="29">||<pos:position pos:line="306" pos:column="31"/></operator> <operator pos:line="306" pos:column="32">(<pos:position pos:line="306" pos:column="33"/></operator><name pos:line="306" pos:column="33">minor<pos:position pos:line="306" pos:column="38"/></name> <operator pos:line="306" pos:column="39">&lt;<pos:position pos:line="306" pos:column="43"/></operator> <literal type="number" pos:line="306" pos:column="41">1<pos:position pos:line="306" pos:column="42"/></literal><operator pos:line="306" pos:column="42">)<pos:position pos:line="306" pos:column="43"/></operator></expr>)<pos:position pos:line="306" pos:column="44"/></condition><then pos:line="306" pos:column="44"> <block pos:line="306" pos:column="45">{
                <expr_stmt><expr><name><name pos:line="307" pos:column="17">backend<pos:position pos:line="307" pos:column="24"/></name><operator pos:line="307" pos:column="24">-&gt;<pos:position pos:line="307" pos:column="29"/></operator><name pos:line="307" pos:column="26">close<pos:position pos:line="307" pos:column="31"/></name></name> <operator pos:line="307" pos:column="32">+=<pos:position pos:line="307" pos:column="34"/></operator> <literal type="number" pos:line="307" pos:column="35">1<pos:position pos:line="307" pos:column="36"/></literal></expr>;<pos:position pos:line="307" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="308" pos:column="17">origin<pos:position pos:line="308" pos:column="23"/></name><operator pos:line="308" pos:column="23">-&gt;<pos:position pos:line="308" pos:column="28"/></operator><name pos:line="308" pos:column="25">keepalive<pos:position pos:line="308" pos:column="34"/></name></name> <operator pos:line="308" pos:column="35">=<pos:position pos:line="308" pos:column="36"/></operator> <name pos:line="308" pos:column="37">AP_CONN_CLOSE<pos:position pos:line="308" pos:column="50"/></name></expr>;<pos:position pos:line="308" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="309" pos:column="14"/></block></then></if>
        }<pos:position pos:line="310" pos:column="10"/></block></then> <else pos:line="310" pos:column="11">else <block pos:line="310" pos:column="16">{
            <comment type="block" pos:line="311" pos:column="13">/* an http/0.9 response */</comment>
            <expr_stmt><expr><name pos:line="312" pos:column="13">backasswards<pos:position pos:line="312" pos:column="25"/></name> <operator pos:line="312" pos:column="26">=<pos:position pos:line="312" pos:column="27"/></operator> <literal type="number" pos:line="312" pos:column="28">1<pos:position pos:line="312" pos:column="29"/></literal></expr>;<pos:position pos:line="312" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="313" pos:column="13">r<pos:position pos:line="313" pos:column="14"/></name><operator pos:line="313" pos:column="14">-&gt;<pos:position pos:line="313" pos:column="19"/></operator><name pos:line="313" pos:column="16">status<pos:position pos:line="313" pos:column="22"/></name></name> <operator pos:line="313" pos:column="23">=<pos:position pos:line="313" pos:column="24"/></operator> <literal type="number" pos:line="313" pos:column="25">200<pos:position pos:line="313" pos:column="28"/></literal></expr>;<pos:position pos:line="313" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="314" pos:column="13">r<pos:position pos:line="314" pos:column="14"/></name><operator pos:line="314" pos:column="14">-&gt;<pos:position pos:line="314" pos:column="19"/></operator><name pos:line="314" pos:column="16">status_line<pos:position pos:line="314" pos:column="27"/></name></name> <operator pos:line="314" pos:column="28">=<pos:position pos:line="314" pos:column="29"/></operator> <literal type="string" pos:line="314" pos:column="30">"200 OK"<pos:position pos:line="314" pos:column="38"/></literal></expr>;<pos:position pos:line="314" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="315" pos:column="13">backend<pos:position pos:line="315" pos:column="20"/></name><operator pos:line="315" pos:column="20">-&gt;<pos:position pos:line="315" pos:column="25"/></operator><name pos:line="315" pos:column="22">close<pos:position pos:line="315" pos:column="27"/></name></name> <operator pos:line="315" pos:column="28">+=<pos:position pos:line="315" pos:column="30"/></operator> <literal type="number" pos:line="315" pos:column="31">1<pos:position pos:line="315" pos:column="32"/></literal></expr>;<pos:position pos:line="315" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="316" pos:column="10"/></block></else></if>

        <if pos:line="318" pos:column="9">if <condition pos:line="318" pos:column="12">(<expr><call><name pos:line="318" pos:column="13">ap_is_HTTP_INFO<pos:position pos:line="318" pos:column="28"/></name><argument_list pos:line="318" pos:column="28">(<argument><expr><name pos:line="318" pos:column="29">proxy_status<pos:position pos:line="318" pos:column="41"/></name></expr></argument>)<pos:position pos:line="318" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="318" pos:column="43"/></condition><then pos:line="318" pos:column="43"> <block pos:line="318" pos:column="44">{
            <expr_stmt><expr><name pos:line="319" pos:column="13">interim_response<pos:position pos:line="319" pos:column="29"/></name><operator pos:line="319" pos:column="29">++<pos:position pos:line="319" pos:column="31"/></operator></expr>;<pos:position pos:line="319" pos:column="32"/></expr_stmt>
            <comment type="block" pos:line="320" pos:column="13">/* Reset to old timeout iff we've adjusted it */</comment>
            <if pos:line="321" pos:column="13">if <condition pos:line="321" pos:column="16">(<expr><name pos:line="321" pos:column="17">do_100_continue<pos:position pos:line="321" pos:column="32"/></name>
                <operator pos:line="322" pos:column="17">&amp;&amp;<pos:position pos:line="322" pos:column="27"/></operator> <operator pos:line="322" pos:column="20">(<pos:position pos:line="322" pos:column="21"/></operator><name><name pos:line="322" pos:column="21">r<pos:position pos:line="322" pos:column="22"/></name><operator pos:line="322" pos:column="22">-&gt;<pos:position pos:line="322" pos:column="27"/></operator><name pos:line="322" pos:column="24">status<pos:position pos:line="322" pos:column="30"/></name></name> <operator pos:line="322" pos:column="31">==<pos:position pos:line="322" pos:column="33"/></operator> <name pos:line="322" pos:column="34">HTTP_CONTINUE<pos:position pos:line="322" pos:column="47"/></name><operator pos:line="322" pos:column="47">)<pos:position pos:line="322" pos:column="48"/></operator>
                <operator pos:line="323" pos:column="17">&amp;&amp;<pos:position pos:line="323" pos:column="27"/></operator> <operator pos:line="323" pos:column="20">(<pos:position pos:line="323" pos:column="21"/></operator><name><name pos:line="323" pos:column="21">worker<pos:position pos:line="323" pos:column="27"/></name><operator pos:line="323" pos:column="27">-&gt;<pos:position pos:line="323" pos:column="32"/></operator><name pos:line="323" pos:column="29">ping_timeout<pos:position pos:line="323" pos:column="41"/></name></name> <operator pos:line="323" pos:column="42">!=<pos:position pos:line="323" pos:column="44"/></operator> <name pos:line="323" pos:column="45">old_timeout<pos:position pos:line="323" pos:column="56"/></name><operator pos:line="323" pos:column="56">)<pos:position pos:line="323" pos:column="57"/></operator></expr>)<pos:position pos:line="323" pos:column="58"/></condition><then pos:line="323" pos:column="58"> <block pos:line="323" pos:column="59">{
                    <expr_stmt><expr><call><name pos:line="324" pos:column="21">apr_socket_timeout_set<pos:position pos:line="324" pos:column="43"/></name><argument_list pos:line="324" pos:column="43">(<argument><expr><name><name pos:line="324" pos:column="44">backend<pos:position pos:line="324" pos:column="51"/></name><operator pos:line="324" pos:column="51">-&gt;<pos:position pos:line="324" pos:column="56"/></operator><name pos:line="324" pos:column="53">sock<pos:position pos:line="324" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="324" pos:column="59">old_timeout<pos:position pos:line="324" pos:column="70"/></name></expr></argument>)<pos:position pos:line="324" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="324" pos:column="72"/></expr_stmt>
            }<pos:position pos:line="325" pos:column="14"/></block></then></if>
        }<pos:position pos:line="326" pos:column="10"/></block></then>
        <else pos:line="327" pos:column="9">else <block pos:line="327" pos:column="14">{
            <expr_stmt><expr><name pos:line="328" pos:column="13">interim_response<pos:position pos:line="328" pos:column="29"/></name> <operator pos:line="328" pos:column="30">=<pos:position pos:line="328" pos:column="31"/></operator> <literal type="number" pos:line="328" pos:column="32">0<pos:position pos:line="328" pos:column="33"/></literal></expr>;<pos:position pos:line="328" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="329" pos:column="10"/></block></else></if>
        <if pos:line="330" pos:column="9">if <condition pos:line="330" pos:column="12">(<expr><name pos:line="330" pos:column="13">interim_response<pos:position pos:line="330" pos:column="29"/></name></expr>)<pos:position pos:line="330" pos:column="30"/></condition><then pos:line="330" pos:column="30"> <block pos:line="330" pos:column="31">{
            <comment type="block" pos:line="331" pos:column="13">/* RFC2616 tells us to forward this.
             *
             * OTOH, an interim response here may mean the backend
             * is playing sillybuggers.  The Client didn't ask for
             * it within the defined HTTP/1.1 mechanisms, and if
             * it's an extension, it may also be unsupported by us.
             *
             * There's also the possibility that changing existing
             * behaviour here might break something.
             *
             * So let's make it configurable.
             */</comment>
            <decl_stmt><decl><type><specifier pos:line="343" pos:column="13">const<pos:position pos:line="343" pos:column="18"/></specifier> <name pos:line="343" pos:column="19">char<pos:position pos:line="343" pos:column="23"/></name> <modifier pos:line="343" pos:column="24">*<pos:position pos:line="343" pos:column="25"/></modifier></type><name pos:line="343" pos:column="25">policy<pos:position pos:line="343" pos:column="31"/></name> <init pos:line="343" pos:column="32">= <expr><call><name pos:line="343" pos:column="34">apr_table_get<pos:position pos:line="343" pos:column="47"/></name><argument_list pos:line="343" pos:column="47">(<argument><expr><name><name pos:line="343" pos:column="48">r<pos:position pos:line="343" pos:column="49"/></name><operator pos:line="343" pos:column="49">-&gt;<pos:position pos:line="343" pos:column="54"/></operator><name pos:line="343" pos:column="51">subprocess_env<pos:position pos:line="343" pos:column="65"/></name></name></expr></argument>,
                                               <argument><expr><literal type="string" pos:line="344" pos:column="48">"proxy-interim-response"<pos:position pos:line="344" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="344" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="344" pos:column="74"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="345" pos:column="13">ap_log_rerror<pos:position pos:line="345" pos:column="26"/></name><argument_list pos:line="345" pos:column="26">(<argument><expr><name pos:line="345" pos:column="27">APLOG_MARK<pos:position pos:line="345" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="345" pos:column="39">APLOG_TRACE2<pos:position pos:line="345" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="345" pos:column="53">0<pos:position pos:line="345" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="345" pos:column="56">r<pos:position pos:line="345" pos:column="57"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="346" pos:column="26">"proxy: HTTP: received interim %d response"<pos:position pos:line="346" pos:column="69"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="347" pos:column="26">r<pos:position pos:line="347" pos:column="27"/></name><operator pos:line="347" pos:column="27">-&gt;<pos:position pos:line="347" pos:column="32"/></operator><name pos:line="347" pos:column="29">status<pos:position pos:line="347" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="347" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="347" pos:column="37"/></expr_stmt>
            <if pos:line="348" pos:column="13">if <condition pos:line="348" pos:column="16">(<expr><operator pos:line="348" pos:column="17">!<pos:position pos:line="348" pos:column="18"/></operator><name pos:line="348" pos:column="18">policy<pos:position pos:line="348" pos:column="24"/></name> <operator pos:line="348" pos:column="25">||<pos:position pos:line="348" pos:column="27"/></operator> <operator pos:line="348" pos:column="28">!<pos:position pos:line="348" pos:column="29"/></operator><call><name pos:line="348" pos:column="29">strcasecmp<pos:position pos:line="348" pos:column="39"/></name><argument_list pos:line="348" pos:column="39">(<argument><expr><name pos:line="348" pos:column="40">policy<pos:position pos:line="348" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="348" pos:column="48">"RFC"<pos:position pos:line="348" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="348" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="348" pos:column="55"/></condition><then pos:line="348" pos:column="55"> <block pos:line="348" pos:column="56">{
                <expr_stmt><expr><call><name pos:line="349" pos:column="17">ap_send_interim_response<pos:position pos:line="349" pos:column="41"/></name><argument_list pos:line="349" pos:column="41">(<argument><expr><name pos:line="349" pos:column="42">r<pos:position pos:line="349" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="349" pos:column="45">1<pos:position pos:line="349" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="349" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="48"/></expr_stmt>
            }<pos:position pos:line="350" pos:column="14"/></block></then>
            <comment type="block" pos:line="351" pos:column="13">/* FIXME: refine this to be able to specify per-response-status
             * policies and maybe also add option to bail out with 502
             */</comment>
            <elseif pos:line="354" pos:column="13">else <if pos:line="354" pos:column="18">if <condition pos:line="354" pos:column="21">(<expr><call><name pos:line="354" pos:column="22">strcasecmp<pos:position pos:line="354" pos:column="32"/></name><argument_list pos:line="354" pos:column="32">(<argument><expr><name pos:line="354" pos:column="33">policy<pos:position pos:line="354" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="354" pos:column="41">"Suppress"<pos:position pos:line="354" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="354" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="354" pos:column="53"/></condition><then pos:line="354" pos:column="53"> <block pos:line="354" pos:column="54">{
                <expr_stmt><expr><call><name pos:line="355" pos:column="17">ap_log_rerror<pos:position pos:line="355" pos:column="30"/></name><argument_list pos:line="355" pos:column="30">(<argument><expr><name pos:line="355" pos:column="31">APLOG_MARK<pos:position pos:line="355" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="355" pos:column="43">APLOG_WARNING<pos:position pos:line="355" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="355" pos:column="58">0<pos:position pos:line="355" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="355" pos:column="61">r<pos:position pos:line="355" pos:column="62"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="356" pos:column="30">"undefined proxy interim response policy"<pos:position pos:line="356" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="356" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="356" pos:column="73"/></expr_stmt>
            }<pos:position pos:line="357" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="358" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="359" pos:column="9">/* Moved the fixups of Date headers and those affected by
         * ProxyPassReverse/etc from here to ap_proxy_read_headers
         */</comment>

        <if pos:line="363" pos:column="9">if <condition pos:line="363" pos:column="12">(<expr><operator pos:line="363" pos:column="13">(<pos:position pos:line="363" pos:column="14"/></operator><name pos:line="363" pos:column="14">proxy_status<pos:position pos:line="363" pos:column="26"/></name> <operator pos:line="363" pos:column="27">==<pos:position pos:line="363" pos:column="29"/></operator> <literal type="number" pos:line="363" pos:column="30">401<pos:position pos:line="363" pos:column="33"/></literal><operator pos:line="363" pos:column="33">)<pos:position pos:line="363" pos:column="34"/></operator> <operator pos:line="363" pos:column="35">&amp;&amp;<pos:position pos:line="363" pos:column="45"/></operator> <operator pos:line="363" pos:column="38">(<pos:position pos:line="363" pos:column="39"/></operator><name><name pos:line="363" pos:column="39">conf<pos:position pos:line="363" pos:column="43"/></name><operator pos:line="363" pos:column="43">-&gt;<pos:position pos:line="363" pos:column="48"/></operator><name pos:line="363" pos:column="45">error_override<pos:position pos:line="363" pos:column="59"/></name></name><operator pos:line="363" pos:column="59">)<pos:position pos:line="363" pos:column="60"/></operator></expr>)<pos:position pos:line="363" pos:column="61"/></condition><then pos:line="363" pos:column="61"> <block pos:line="363" pos:column="62">{
            <decl_stmt><decl><type><specifier pos:line="364" pos:column="13">const<pos:position pos:line="364" pos:column="18"/></specifier> <name pos:line="364" pos:column="19">char<pos:position pos:line="364" pos:column="23"/></name> <modifier pos:line="364" pos:column="24">*<pos:position pos:line="364" pos:column="25"/></modifier></type><name pos:line="364" pos:column="25">buf<pos:position pos:line="364" pos:column="28"/></name></decl>;<pos:position pos:line="364" pos:column="29"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="365" pos:column="13">const<pos:position pos:line="365" pos:column="18"/></specifier> <name pos:line="365" pos:column="19">char<pos:position pos:line="365" pos:column="23"/></name> <modifier pos:line="365" pos:column="24">*<pos:position pos:line="365" pos:column="25"/></modifier></type><name pos:line="365" pos:column="25">wa<pos:position pos:line="365" pos:column="27"/></name> <init pos:line="365" pos:column="28">= <expr><literal type="string" pos:line="365" pos:column="30">"WWW-Authenticate"<pos:position pos:line="365" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="365" pos:column="49"/></decl_stmt>
            <if pos:line="366" pos:column="13">if <condition pos:line="366" pos:column="16">(<expr><operator pos:line="366" pos:column="17">(<pos:position pos:line="366" pos:column="18"/></operator><name pos:line="366" pos:column="18">buf<pos:position pos:line="366" pos:column="21"/></name> <operator pos:line="366" pos:column="22">=<pos:position pos:line="366" pos:column="23"/></operator> <call><name pos:line="366" pos:column="24">apr_table_get<pos:position pos:line="366" pos:column="37"/></name><argument_list pos:line="366" pos:column="37">(<argument><expr><name><name pos:line="366" pos:column="38">r<pos:position pos:line="366" pos:column="39"/></name><operator pos:line="366" pos:column="39">-&gt;<pos:position pos:line="366" pos:column="44"/></operator><name pos:line="366" pos:column="41">headers_out<pos:position pos:line="366" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="366" pos:column="54">wa<pos:position pos:line="366" pos:column="56"/></name></expr></argument>)<pos:position pos:line="366" pos:column="57"/></argument_list></call><operator pos:line="366" pos:column="57">)<pos:position pos:line="366" pos:column="58"/></operator></expr>)<pos:position pos:line="366" pos:column="59"/></condition><then pos:line="366" pos:column="59"> <block pos:line="366" pos:column="60">{
                <expr_stmt><expr><call><name pos:line="367" pos:column="17">apr_table_set<pos:position pos:line="367" pos:column="30"/></name><argument_list pos:line="367" pos:column="30">(<argument><expr><name><name pos:line="367" pos:column="31">r<pos:position pos:line="367" pos:column="32"/></name><operator pos:line="367" pos:column="32">-&gt;<pos:position pos:line="367" pos:column="37"/></operator><name pos:line="367" pos:column="34">err_headers_out<pos:position pos:line="367" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="367" pos:column="51">wa<pos:position pos:line="367" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="367" pos:column="55">buf<pos:position pos:line="367" pos:column="58"/></name></expr></argument>)<pos:position pos:line="367" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="367" pos:column="60"/></expr_stmt>
            }<pos:position pos:line="368" pos:column="14"/></block></then> <else pos:line="368" pos:column="15">else <block pos:line="368" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="369" pos:column="17">ap_log_error<pos:position pos:line="369" pos:column="29"/></name><argument_list pos:line="369" pos:column="29">(<argument><expr><name pos:line="369" pos:column="30">APLOG_MARK<pos:position pos:line="369" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="369" pos:column="42">APLOG_DEBUG<pos:position pos:line="369" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="369" pos:column="55">0<pos:position pos:line="369" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="369" pos:column="58">r<pos:position pos:line="369" pos:column="59"/></name><operator pos:line="369" pos:column="59">-&gt;<pos:position pos:line="369" pos:column="64"/></operator><name pos:line="369" pos:column="61">server<pos:position pos:line="369" pos:column="67"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="370" pos:column="30">"proxy: origin server sent 401 without WWW-Authenticate header"<pos:position pos:line="370" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="370" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="370" pos:column="95"/></expr_stmt>
            }<pos:position pos:line="371" pos:column="14"/></block></else></if>
        }<pos:position pos:line="372" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="374" pos:column="9">r<pos:position pos:line="374" pos:column="10"/></name><operator pos:line="374" pos:column="10">-&gt;<pos:position pos:line="374" pos:column="15"/></operator><name pos:line="374" pos:column="12">sent_bodyct<pos:position pos:line="374" pos:column="23"/></name></name> <operator pos:line="374" pos:column="24">=<pos:position pos:line="374" pos:column="25"/></operator> <literal type="number" pos:line="374" pos:column="26">1<pos:position pos:line="374" pos:column="27"/></literal></expr>;<pos:position pos:line="374" pos:column="28"/></expr_stmt>
        <comment type="block" pos:line="375" pos:column="9">/*
         * Is it an HTTP/0.9 response or did we maybe preread the 1st line of
         * the response? If so, load the extra data. These are 2 mutually
         * exclusive possibilities, that just happen to require very
         * similar behavior.
         */</comment>
        <if pos:line="381" pos:column="9">if <condition pos:line="381" pos:column="12">(<expr><name pos:line="381" pos:column="13">backasswards<pos:position pos:line="381" pos:column="25"/></name> <operator pos:line="381" pos:column="26">||<pos:position pos:line="381" pos:column="28"/></operator> <name pos:line="381" pos:column="29">pread_len<pos:position pos:line="381" pos:column="38"/></name></expr>)<pos:position pos:line="381" pos:column="39"/></condition><then pos:line="381" pos:column="39"> <block pos:line="381" pos:column="40">{
            <decl_stmt><decl><type><name pos:line="382" pos:column="13">apr_ssize_t<pos:position pos:line="382" pos:column="24"/></name></type> <name pos:line="382" pos:column="25">cntr<pos:position pos:line="382" pos:column="29"/></name> <init pos:line="382" pos:column="30">= <expr><operator pos:line="382" pos:column="32">(<pos:position pos:line="382" pos:column="33"/></operator><name pos:line="382" pos:column="33">apr_ssize_t<pos:position pos:line="382" pos:column="44"/></name><operator pos:line="382" pos:column="44">)<pos:position pos:line="382" pos:column="45"/></operator><name pos:line="382" pos:column="45">pread_len<pos:position pos:line="382" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="382" pos:column="55"/></decl_stmt>
            <if pos:line="383" pos:column="13">if <condition pos:line="383" pos:column="16">(<expr><name pos:line="383" pos:column="17">backasswards<pos:position pos:line="383" pos:column="29"/></name></expr>)<pos:position pos:line="383" pos:column="30"/></condition><then pos:line="383" pos:column="30"> <block pos:line="383" pos:column="31">{
                <comment type="block" pos:line="384" pos:column="17">/*@@@FIXME:
                 * At this point in response processing of a 0.9 response,
                 * we don't know yet whether data is binary or not.
                 * mod_charset_lite will get control later on, so it cannot
                 * decide on the conversion of this buffer full of data.
                 * However, chances are that we are not really talking to an
                 * HTTP/0.9 server, but to some different protocol, therefore
                 * the best guess IMHO is to always treat the buffer as "text/x":
                 */</comment>
                <expr_stmt><expr><call><name pos:line="393" pos:column="17">ap_xlate_proto_to_ascii<pos:position pos:line="393" pos:column="40"/></name><argument_list pos:line="393" pos:column="40">(<argument><expr><name pos:line="393" pos:column="41">buffer<pos:position pos:line="393" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="393" pos:column="49">len<pos:position pos:line="393" pos:column="52"/></name></expr></argument>)<pos:position pos:line="393" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="393" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><name pos:line="394" pos:column="17">cntr<pos:position pos:line="394" pos:column="21"/></name> <operator pos:line="394" pos:column="22">=<pos:position pos:line="394" pos:column="23"/></operator> <operator pos:line="394" pos:column="24">(<pos:position pos:line="394" pos:column="25"/></operator><name pos:line="394" pos:column="25">apr_ssize_t<pos:position pos:line="394" pos:column="36"/></name><operator pos:line="394" pos:column="36">)<pos:position pos:line="394" pos:column="37"/></operator><name pos:line="394" pos:column="37">len<pos:position pos:line="394" pos:column="40"/></name></expr>;<pos:position pos:line="394" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="395" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="396" pos:column="13">e<pos:position pos:line="396" pos:column="14"/></name> <operator pos:line="396" pos:column="15">=<pos:position pos:line="396" pos:column="16"/></operator> <call><name pos:line="396" pos:column="17">apr_bucket_heap_create<pos:position pos:line="396" pos:column="39"/></name><argument_list pos:line="396" pos:column="39">(<argument><expr><name pos:line="396" pos:column="40">buffer<pos:position pos:line="396" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="396" pos:column="48">cntr<pos:position pos:line="396" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="396" pos:column="54">NULL<pos:position pos:line="396" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="396" pos:column="60">c<pos:position pos:line="396" pos:column="61"/></name><operator pos:line="396" pos:column="61">-&gt;<pos:position pos:line="396" pos:column="66"/></operator><name pos:line="396" pos:column="63">bucket_alloc<pos:position pos:line="396" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="396" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="396" pos:column="77"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="397" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="397" pos:column="36"/></name><argument_list pos:line="397" pos:column="36">(<argument><expr><name pos:line="397" pos:column="37">bb<pos:position pos:line="397" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="397" pos:column="41">e<pos:position pos:line="397" pos:column="42"/></name></expr></argument>)<pos:position pos:line="397" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="398" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="399" pos:column="9">/* PR 41646: get HEAD right with ProxyErrorOverride */</comment>
        <if pos:line="400" pos:column="9">if <condition pos:line="400" pos:column="12">(<expr><call><name pos:line="400" pos:column="13">ap_is_HTTP_ERROR<pos:position pos:line="400" pos:column="29"/></name><argument_list pos:line="400" pos:column="29">(<argument><expr><name><name pos:line="400" pos:column="30">r<pos:position pos:line="400" pos:column="31"/></name><operator pos:line="400" pos:column="31">-&gt;<pos:position pos:line="400" pos:column="36"/></operator><name pos:line="400" pos:column="33">status<pos:position pos:line="400" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="400" pos:column="40"/></argument_list></call> <operator pos:line="400" pos:column="41">&amp;&amp;<pos:position pos:line="400" pos:column="51"/></operator> <name><name pos:line="400" pos:column="44">conf<pos:position pos:line="400" pos:column="48"/></name><operator pos:line="400" pos:column="48">-&gt;<pos:position pos:line="400" pos:column="53"/></operator><name pos:line="400" pos:column="50">error_override<pos:position pos:line="400" pos:column="64"/></name></name></expr>)<pos:position pos:line="400" pos:column="65"/></condition><then pos:line="400" pos:column="65"> <block pos:line="400" pos:column="66">{
            <comment type="block" pos:line="401" pos:column="13">/* clear r-&gt;status for override error, otherwise ErrorDocument
             * thinks that this is a recursive error, and doesn't find the
             * custom error page
             */</comment>
            <expr_stmt><expr><name><name pos:line="405" pos:column="13">r<pos:position pos:line="405" pos:column="14"/></name><operator pos:line="405" pos:column="14">-&gt;<pos:position pos:line="405" pos:column="19"/></operator><name pos:line="405" pos:column="16">status<pos:position pos:line="405" pos:column="22"/></name></name> <operator pos:line="405" pos:column="23">=<pos:position pos:line="405" pos:column="24"/></operator> <name pos:line="405" pos:column="25">HTTP_OK<pos:position pos:line="405" pos:column="32"/></name></expr>;<pos:position pos:line="405" pos:column="33"/></expr_stmt>
            <comment type="block" pos:line="406" pos:column="13">/* Discard body, if one is expected */</comment>
            <if pos:line="407" pos:column="13">if <condition pos:line="407" pos:column="16">(<expr><operator pos:line="407" pos:column="17">!<pos:position pos:line="407" pos:column="18"/></operator><name><name pos:line="407" pos:column="18">r<pos:position pos:line="407" pos:column="19"/></name><operator pos:line="407" pos:column="19">-&gt;<pos:position pos:line="407" pos:column="24"/></operator><name pos:line="407" pos:column="21">header_only<pos:position pos:line="407" pos:column="32"/></name></name> <operator pos:line="407" pos:column="33">&amp;&amp;<pos:position pos:line="407" pos:column="43"/></operator> <comment type="block" pos:line="407" pos:column="36">/* not HEAD request */</comment>
                <operator pos:line="408" pos:column="17">(<pos:position pos:line="408" pos:column="18"/></operator><name pos:line="408" pos:column="18">proxy_status<pos:position pos:line="408" pos:column="30"/></name> <operator pos:line="408" pos:column="31">!=<pos:position pos:line="408" pos:column="33"/></operator> <name pos:line="408" pos:column="34">HTTP_NO_CONTENT<pos:position pos:line="408" pos:column="49"/></name><operator pos:line="408" pos:column="49">)<pos:position pos:line="408" pos:column="50"/></operator> <operator pos:line="408" pos:column="51">&amp;&amp;<pos:position pos:line="408" pos:column="61"/></operator> <comment type="block" pos:line="408" pos:column="54">/* not 204 */</comment>
                <operator pos:line="409" pos:column="17">(<pos:position pos:line="409" pos:column="18"/></operator><name pos:line="409" pos:column="18">proxy_status<pos:position pos:line="409" pos:column="30"/></name> <operator pos:line="409" pos:column="31">!=<pos:position pos:line="409" pos:column="33"/></operator> <name pos:line="409" pos:column="34">HTTP_NOT_MODIFIED<pos:position pos:line="409" pos:column="51"/></name><operator pos:line="409" pos:column="51">)<pos:position pos:line="409" pos:column="52"/></operator></expr>)<pos:position pos:line="409" pos:column="53"/></condition><then pos:line="409" pos:column="53"> <block pos:line="409" pos:column="54">{ <comment type="block" pos:line="409" pos:column="56">/* not 304 */</comment>
                <expr_stmt><expr><call><name pos:line="410" pos:column="17">ap_discard_request_body<pos:position pos:line="410" pos:column="40"/></name><argument_list pos:line="410" pos:column="40">(<argument><expr><name pos:line="410" pos:column="41">rp<pos:position pos:line="410" pos:column="43"/></name></expr></argument>)<pos:position pos:line="410" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="410" pos:column="45"/></expr_stmt>
            }<pos:position pos:line="411" pos:column="14"/></block></then></if>
            <return pos:line="412" pos:column="13">return <expr><name pos:line="412" pos:column="20">proxy_status<pos:position pos:line="412" pos:column="32"/></name></expr>;<pos:position pos:line="412" pos:column="33"/></return>
        }<pos:position pos:line="413" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="415" pos:column="9">/* send body - but only if a body is expected */</comment>
        <if pos:line="416" pos:column="9">if <condition pos:line="416" pos:column="12">(<expr><operator pos:line="416" pos:column="13">(<pos:position pos:line="416" pos:column="14"/></operator><operator pos:line="416" pos:column="14">!<pos:position pos:line="416" pos:column="15"/></operator><name><name pos:line="416" pos:column="15">r<pos:position pos:line="416" pos:column="16"/></name><operator pos:line="416" pos:column="16">-&gt;<pos:position pos:line="416" pos:column="21"/></operator><name pos:line="416" pos:column="18">header_only<pos:position pos:line="416" pos:column="29"/></name></name><operator pos:line="416" pos:column="29">)<pos:position pos:line="416" pos:column="30"/></operator> <operator pos:line="416" pos:column="31">&amp;&amp;<pos:position pos:line="416" pos:column="41"/></operator>                   <comment type="block" pos:line="416" pos:column="52">/* not HEAD request */</comment>
            <operator pos:line="417" pos:column="13">!<pos:position pos:line="417" pos:column="14"/></operator><name pos:line="417" pos:column="14">interim_response<pos:position pos:line="417" pos:column="30"/></name> <operator pos:line="417" pos:column="31">&amp;&amp;<pos:position pos:line="417" pos:column="41"/></operator>                   <comment type="block" pos:line="417" pos:column="52">/* not any 1xx response */</comment>
            <operator pos:line="418" pos:column="13">(<pos:position pos:line="418" pos:column="14"/></operator><name pos:line="418" pos:column="14">proxy_status<pos:position pos:line="418" pos:column="26"/></name> <operator pos:line="418" pos:column="27">!=<pos:position pos:line="418" pos:column="29"/></operator> <name pos:line="418" pos:column="30">HTTP_NO_CONTENT<pos:position pos:line="418" pos:column="45"/></name><operator pos:line="418" pos:column="45">)<pos:position pos:line="418" pos:column="46"/></operator> <operator pos:line="418" pos:column="47">&amp;&amp;<pos:position pos:line="418" pos:column="57"/></operator>      <comment type="block" pos:line="418" pos:column="55">/* not 204 */</comment>
            <operator pos:line="419" pos:column="13">(<pos:position pos:line="419" pos:column="14"/></operator><name pos:line="419" pos:column="14">proxy_status<pos:position pos:line="419" pos:column="26"/></name> <operator pos:line="419" pos:column="27">!=<pos:position pos:line="419" pos:column="29"/></operator> <name pos:line="419" pos:column="30">HTTP_NOT_MODIFIED<pos:position pos:line="419" pos:column="47"/></name><operator pos:line="419" pos:column="47">)<pos:position pos:line="419" pos:column="48"/></operator></expr>)<pos:position pos:line="419" pos:column="49"/></condition><then pos:line="419" pos:column="49"> <block pos:line="419" pos:column="50">{    <comment type="block" pos:line="419" pos:column="55">/* not 304 */</comment>

            <comment type="block" pos:line="421" pos:column="13">/* We need to copy the output headers and treat them as input
             * headers as well.  BUT, we need to do this before we remove
             * TE, so that they are preserved accordingly for
             * ap_http_filter to know where to end.
             */</comment>
            <expr_stmt><expr><name><name pos:line="426" pos:column="13">rp<pos:position pos:line="426" pos:column="15"/></name><operator pos:line="426" pos:column="15">-&gt;<pos:position pos:line="426" pos:column="20"/></operator><name pos:line="426" pos:column="17">headers_in<pos:position pos:line="426" pos:column="27"/></name></name> <operator pos:line="426" pos:column="28">=<pos:position pos:line="426" pos:column="29"/></operator> <call><name pos:line="426" pos:column="30">apr_table_copy<pos:position pos:line="426" pos:column="44"/></name><argument_list pos:line="426" pos:column="44">(<argument><expr><name><name pos:line="426" pos:column="45">r<pos:position pos:line="426" pos:column="46"/></name><operator pos:line="426" pos:column="46">-&gt;<pos:position pos:line="426" pos:column="51"/></operator><name pos:line="426" pos:column="48">pool<pos:position pos:line="426" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="426" pos:column="54">r<pos:position pos:line="426" pos:column="55"/></name><operator pos:line="426" pos:column="55">-&gt;<pos:position pos:line="426" pos:column="60"/></operator><name pos:line="426" pos:column="57">headers_out<pos:position pos:line="426" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="426" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="426" pos:column="70"/></expr_stmt>
            <comment type="block" pos:line="427" pos:column="13">/*
             * Restore Transfer-Encoding header from response if we saved
             * one before and there is none left. We need it for the
             * ap_http_filter. See above.
             */</comment>
            <if pos:line="432" pos:column="13">if <condition pos:line="432" pos:column="16">(<expr><name pos:line="432" pos:column="17">te<pos:position pos:line="432" pos:column="19"/></name> <operator pos:line="432" pos:column="20">&amp;&amp;<pos:position pos:line="432" pos:column="30"/></operator> <operator pos:line="432" pos:column="23">!<pos:position pos:line="432" pos:column="24"/></operator><call><name pos:line="432" pos:column="24">apr_table_get<pos:position pos:line="432" pos:column="37"/></name><argument_list pos:line="432" pos:column="37">(<argument><expr><name><name pos:line="432" pos:column="38">rp<pos:position pos:line="432" pos:column="40"/></name><operator pos:line="432" pos:column="40">-&gt;<pos:position pos:line="432" pos:column="45"/></operator><name pos:line="432" pos:column="42">headers_in<pos:position pos:line="432" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="432" pos:column="54">"Transfer-Encoding"<pos:position pos:line="432" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="432" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="432" pos:column="75"/></condition><then pos:line="432" pos:column="75"> <block pos:line="432" pos:column="76">{
                <expr_stmt><expr><call><name pos:line="433" pos:column="17">apr_table_add<pos:position pos:line="433" pos:column="30"/></name><argument_list pos:line="433" pos:column="30">(<argument><expr><name><name pos:line="433" pos:column="31">rp<pos:position pos:line="433" pos:column="33"/></name><operator pos:line="433" pos:column="33">-&gt;<pos:position pos:line="433" pos:column="38"/></operator><name pos:line="433" pos:column="35">headers_in<pos:position pos:line="433" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="433" pos:column="47">"Transfer-Encoding"<pos:position pos:line="433" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="433" pos:column="68">te<pos:position pos:line="433" pos:column="70"/></name></expr></argument>)<pos:position pos:line="433" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="433" pos:column="72"/></expr_stmt>
            }<pos:position pos:line="434" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="436" pos:column="13">apr_table_unset<pos:position pos:line="436" pos:column="28"/></name><argument_list pos:line="436" pos:column="28">(<argument><expr><name><name pos:line="436" pos:column="29">r<pos:position pos:line="436" pos:column="30"/></name><operator pos:line="436" pos:column="30">-&gt;<pos:position pos:line="436" pos:column="35"/></operator><name pos:line="436" pos:column="32">headers_out<pos:position pos:line="436" pos:column="43"/></name></name></expr></argument>,<argument><expr><literal type="string" pos:line="436" pos:column="44">"Transfer-Encoding"<pos:position pos:line="436" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="436" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="436" pos:column="65"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="438" pos:column="13">ap_log_error<pos:position pos:line="438" pos:column="25"/></name><argument_list pos:line="438" pos:column="25">(<argument><expr><name pos:line="438" pos:column="26">APLOG_MARK<pos:position pos:line="438" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="438" pos:column="38">APLOG_TRACE3<pos:position pos:line="438" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="438" pos:column="52">0<pos:position pos:line="438" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="438" pos:column="55">r<pos:position pos:line="438" pos:column="56"/></name><operator pos:line="438" pos:column="56">-&gt;<pos:position pos:line="438" pos:column="61"/></operator><name pos:line="438" pos:column="58">server<pos:position pos:line="438" pos:column="64"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="439" pos:column="26">"proxy: start body send"<pos:position pos:line="439" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="439" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="439" pos:column="52"/></expr_stmt>

            <comment type="block" pos:line="441" pos:column="13">/*
             * if we are overriding the errors, we can't put the content
             * of the page into the brigade
             */</comment>
            <if pos:line="445" pos:column="13">if <condition pos:line="445" pos:column="16">(<expr><operator pos:line="445" pos:column="17">!<pos:position pos:line="445" pos:column="18"/></operator><name><name pos:line="445" pos:column="18">conf<pos:position pos:line="445" pos:column="22"/></name><operator pos:line="445" pos:column="22">-&gt;<pos:position pos:line="445" pos:column="27"/></operator><name pos:line="445" pos:column="24">error_override<pos:position pos:line="445" pos:column="38"/></name></name> <operator pos:line="445" pos:column="39">||<pos:position pos:line="445" pos:column="41"/></operator> <operator pos:line="445" pos:column="42">!<pos:position pos:line="445" pos:column="43"/></operator><call><name pos:line="445" pos:column="43">ap_is_HTTP_ERROR<pos:position pos:line="445" pos:column="59"/></name><argument_list pos:line="445" pos:column="59">(<argument><expr><name pos:line="445" pos:column="60">proxy_status<pos:position pos:line="445" pos:column="72"/></name></expr></argument>)<pos:position pos:line="445" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="445" pos:column="74"/></condition><then pos:line="445" pos:column="74"> <block pos:line="445" pos:column="75">{
                <comment type="block" pos:line="446" pos:column="17">/* read the body, pass it to the output filters */</comment>
                <decl_stmt><decl><type><name pos:line="447" pos:column="17">apr_read_type_e<pos:position pos:line="447" pos:column="32"/></name></type> <name pos:line="447" pos:column="33">mode<pos:position pos:line="447" pos:column="37"/></name> <init pos:line="447" pos:column="38">= <expr><name pos:line="447" pos:column="40">APR_NONBLOCK_READ<pos:position pos:line="447" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="447" pos:column="58"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="448" pos:column="17">int<pos:position pos:line="448" pos:column="20"/></name></type> <name pos:line="448" pos:column="21">finish<pos:position pos:line="448" pos:column="27"/></name> <init pos:line="448" pos:column="28">= <expr><name pos:line="448" pos:column="30">FALSE<pos:position pos:line="448" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="448" pos:column="36"/></decl_stmt>

                <comment type="block" pos:line="450" pos:column="17">/* Handle the case where the error document is itself reverse
                 * proxied and was successful. We must maintain any previous
                 * error status so that an underlying error (eg HTTP_NOT_FOUND)
                 * doesn't become an HTTP_OK.
                 */</comment>
                <if pos:line="455" pos:column="17">if <condition pos:line="455" pos:column="20">(<expr><name><name pos:line="455" pos:column="21">conf<pos:position pos:line="455" pos:column="25"/></name><operator pos:line="455" pos:column="25">-&gt;<pos:position pos:line="455" pos:column="30"/></operator><name pos:line="455" pos:column="27">error_override<pos:position pos:line="455" pos:column="41"/></name></name> <operator pos:line="455" pos:column="42">&amp;&amp;<pos:position pos:line="455" pos:column="52"/></operator> <operator pos:line="455" pos:column="45">!<pos:position pos:line="455" pos:column="46"/></operator><call><name pos:line="455" pos:column="46">ap_is_HTTP_ERROR<pos:position pos:line="455" pos:column="62"/></name><argument_list pos:line="455" pos:column="62">(<argument><expr><name pos:line="455" pos:column="63">proxy_status<pos:position pos:line="455" pos:column="75"/></name></expr></argument>)<pos:position pos:line="455" pos:column="76"/></argument_list></call>
                        <operator pos:line="456" pos:column="25">&amp;&amp;<pos:position pos:line="456" pos:column="35"/></operator> <call><name pos:line="456" pos:column="28">ap_is_HTTP_ERROR<pos:position pos:line="456" pos:column="44"/></name><argument_list pos:line="456" pos:column="44">(<argument><expr><name pos:line="456" pos:column="45">original_status<pos:position pos:line="456" pos:column="60"/></name></expr></argument>)<pos:position pos:line="456" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="456" pos:column="62"/></condition><then pos:line="456" pos:column="62"> <block pos:line="456" pos:column="63">{
                    <expr_stmt><expr><name><name pos:line="457" pos:column="21">r<pos:position pos:line="457" pos:column="22"/></name><operator pos:line="457" pos:column="22">-&gt;<pos:position pos:line="457" pos:column="27"/></operator><name pos:line="457" pos:column="24">status<pos:position pos:line="457" pos:column="30"/></name></name> <operator pos:line="457" pos:column="31">=<pos:position pos:line="457" pos:column="32"/></operator> <name pos:line="457" pos:column="33">original_status<pos:position pos:line="457" pos:column="48"/></name></expr>;<pos:position pos:line="457" pos:column="49"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="458" pos:column="21">r<pos:position pos:line="458" pos:column="22"/></name><operator pos:line="458" pos:column="22">-&gt;<pos:position pos:line="458" pos:column="27"/></operator><name pos:line="458" pos:column="24">status_line<pos:position pos:line="458" pos:column="35"/></name></name> <operator pos:line="458" pos:column="36">=<pos:position pos:line="458" pos:column="37"/></operator> <name pos:line="458" pos:column="38">original_status_line<pos:position pos:line="458" pos:column="58"/></name></expr>;<pos:position pos:line="458" pos:column="59"/></expr_stmt>
                }<pos:position pos:line="459" pos:column="18"/></block></then></if>

                <do pos:line="461" pos:column="17">do <block pos:line="461" pos:column="20">{
                    <decl_stmt><decl><type><name pos:line="462" pos:column="21">apr_off_t<pos:position pos:line="462" pos:column="30"/></name></type> <name pos:line="462" pos:column="31">readbytes<pos:position pos:line="462" pos:column="40"/></name></decl>;<pos:position pos:line="462" pos:column="41"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="463" pos:column="21">apr_status_t<pos:position pos:line="463" pos:column="33"/></name></type> <name pos:line="463" pos:column="34">rv<pos:position pos:line="463" pos:column="36"/></name></decl>;<pos:position pos:line="463" pos:column="37"/></decl_stmt>

                    <expr_stmt><expr><name pos:line="465" pos:column="21">rv<pos:position pos:line="465" pos:column="23"/></name> <operator pos:line="465" pos:column="24">=<pos:position pos:line="465" pos:column="25"/></operator> <call><name pos:line="465" pos:column="26">ap_get_brigade<pos:position pos:line="465" pos:column="40"/></name><argument_list pos:line="465" pos:column="40">(<argument><expr><name><name pos:line="465" pos:column="41">rp<pos:position pos:line="465" pos:column="43"/></name><operator pos:line="465" pos:column="43">-&gt;<pos:position pos:line="465" pos:column="48"/></operator><name pos:line="465" pos:column="45">input_filters<pos:position pos:line="465" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="465" pos:column="60">bb<pos:position pos:line="465" pos:column="62"/></name></expr></argument>,
                                        <argument><expr><name pos:line="466" pos:column="41">AP_MODE_READBYTES<pos:position pos:line="466" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="466" pos:column="60">mode<pos:position pos:line="466" pos:column="64"/></name></expr></argument>,
                                        <argument><expr><name><name pos:line="467" pos:column="41">conf<pos:position pos:line="467" pos:column="45"/></name><operator pos:line="467" pos:column="45">-&gt;<pos:position pos:line="467" pos:column="50"/></operator><name pos:line="467" pos:column="47">io_buffer_size<pos:position pos:line="467" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="467" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="467" pos:column="63"/></expr_stmt>

                    <comment type="block" pos:line="469" pos:column="21">/* ap_get_brigade will return success with an empty brigade
                     * for a non-blocking read which would block: */</comment>
                    <if pos:line="471" pos:column="21">if <condition pos:line="471" pos:column="24">(<expr><call><name pos:line="471" pos:column="25">APR_STATUS_IS_EAGAIN<pos:position pos:line="471" pos:column="45"/></name><argument_list pos:line="471" pos:column="45">(<argument><expr><name pos:line="471" pos:column="46">rv<pos:position pos:line="471" pos:column="48"/></name></expr></argument>)<pos:position pos:line="471" pos:column="49"/></argument_list></call>
                        <operator pos:line="472" pos:column="25">||<pos:position pos:line="472" pos:column="27"/></operator> <operator pos:line="472" pos:column="28">(<pos:position pos:line="472" pos:column="29"/></operator><name pos:line="472" pos:column="29">rv<pos:position pos:line="472" pos:column="31"/></name> <operator pos:line="472" pos:column="32">==<pos:position pos:line="472" pos:column="34"/></operator> <name pos:line="472" pos:column="35">APR_SUCCESS<pos:position pos:line="472" pos:column="46"/></name> <operator pos:line="472" pos:column="47">&amp;&amp;<pos:position pos:line="472" pos:column="57"/></operator> <call><name pos:line="472" pos:column="50">APR_BRIGADE_EMPTY<pos:position pos:line="472" pos:column="67"/></name><argument_list pos:line="472" pos:column="67">(<argument><expr><name pos:line="472" pos:column="68">bb<pos:position pos:line="472" pos:column="70"/></name></expr></argument>)<pos:position pos:line="472" pos:column="71"/></argument_list></call><operator pos:line="472" pos:column="71">)<pos:position pos:line="472" pos:column="72"/></operator></expr>)<pos:position pos:line="472" pos:column="73"/></condition><then pos:line="472" pos:column="73"> <block pos:line="472" pos:column="74">{
                        <comment type="block" pos:line="473" pos:column="25">/* flush to the client and switch to blocking mode */</comment>
                        <expr_stmt><expr><name pos:line="474" pos:column="25">e<pos:position pos:line="474" pos:column="26"/></name> <operator pos:line="474" pos:column="27">=<pos:position pos:line="474" pos:column="28"/></operator> <call><name pos:line="474" pos:column="29">apr_bucket_flush_create<pos:position pos:line="474" pos:column="52"/></name><argument_list pos:line="474" pos:column="52">(<argument><expr><name><name pos:line="474" pos:column="53">c<pos:position pos:line="474" pos:column="54"/></name><operator pos:line="474" pos:column="54">-&gt;<pos:position pos:line="474" pos:column="59"/></operator><name pos:line="474" pos:column="56">bucket_alloc<pos:position pos:line="474" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="474" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="474" pos:column="70"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="475" pos:column="25">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="475" pos:column="48"/></name><argument_list pos:line="475" pos:column="48">(<argument><expr><name pos:line="475" pos:column="49">bb<pos:position pos:line="475" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="475" pos:column="53">e<pos:position pos:line="475" pos:column="54"/></name></expr></argument>)<pos:position pos:line="475" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="475" pos:column="56"/></expr_stmt>
                        <if pos:line="476" pos:column="25">if <condition pos:line="476" pos:column="28">(<expr><call><name pos:line="476" pos:column="29">ap_pass_brigade<pos:position pos:line="476" pos:column="44"/></name><argument_list pos:line="476" pos:column="44">(<argument><expr><name><name pos:line="476" pos:column="45">r<pos:position pos:line="476" pos:column="46"/></name><operator pos:line="476" pos:column="46">-&gt;<pos:position pos:line="476" pos:column="51"/></operator><name pos:line="476" pos:column="48">output_filters<pos:position pos:line="476" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="476" pos:column="64">bb<pos:position pos:line="476" pos:column="66"/></name></expr></argument>)<pos:position pos:line="476" pos:column="67"/></argument_list></call>
                            <operator pos:line="477" pos:column="29">||<pos:position pos:line="477" pos:column="31"/></operator> <name><name pos:line="477" pos:column="32">c<pos:position pos:line="477" pos:column="33"/></name><operator pos:line="477" pos:column="33">-&gt;<pos:position pos:line="477" pos:column="38"/></operator><name pos:line="477" pos:column="35">aborted<pos:position pos:line="477" pos:column="42"/></name></name></expr>)<pos:position pos:line="477" pos:column="43"/></condition><then pos:line="477" pos:column="43"> <block pos:line="477" pos:column="44">{
                            <expr_stmt><expr><name><name pos:line="478" pos:column="29">backend<pos:position pos:line="478" pos:column="36"/></name><operator pos:line="478" pos:column="36">-&gt;<pos:position pos:line="478" pos:column="41"/></operator><name pos:line="478" pos:column="38">close<pos:position pos:line="478" pos:column="43"/></name></name> <operator pos:line="478" pos:column="44">=<pos:position pos:line="478" pos:column="45"/></operator> <literal type="number" pos:line="478" pos:column="46">1<pos:position pos:line="478" pos:column="47"/></literal></expr>;<pos:position pos:line="478" pos:column="48"/></expr_stmt>
                            <break pos:line="479" pos:column="29">break;<pos:position pos:line="479" pos:column="35"/></break>
                        }<pos:position pos:line="480" pos:column="26"/></block></then></if>
                        <expr_stmt><expr><call><name pos:line="481" pos:column="25">apr_brigade_cleanup<pos:position pos:line="481" pos:column="44"/></name><argument_list pos:line="481" pos:column="44">(<argument><expr><name pos:line="481" pos:column="45">bb<pos:position pos:line="481" pos:column="47"/></name></expr></argument>)<pos:position pos:line="481" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="481" pos:column="49"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="482" pos:column="25">mode<pos:position pos:line="482" pos:column="29"/></name> <operator pos:line="482" pos:column="30">=<pos:position pos:line="482" pos:column="31"/></operator> <name pos:line="482" pos:column="32">APR_BLOCK_READ<pos:position pos:line="482" pos:column="46"/></name></expr>;<pos:position pos:line="482" pos:column="47"/></expr_stmt>
                        <continue pos:line="483" pos:column="25">continue;<pos:position pos:line="483" pos:column="34"/></continue>
                    }<pos:position pos:line="484" pos:column="22"/></block></then>
                    <elseif pos:line="485" pos:column="21">else <if pos:line="485" pos:column="26">if <condition pos:line="485" pos:column="29">(<expr><name pos:line="485" pos:column="30">rv<pos:position pos:line="485" pos:column="32"/></name> <operator pos:line="485" pos:column="33">==<pos:position pos:line="485" pos:column="35"/></operator> <name pos:line="485" pos:column="36">APR_EOF<pos:position pos:line="485" pos:column="43"/></name></expr>)<pos:position pos:line="485" pos:column="44"/></condition><then pos:line="485" pos:column="44"> <block pos:line="485" pos:column="45">{
                        <break pos:line="486" pos:column="25">break;<pos:position pos:line="486" pos:column="31"/></break>
                    }<pos:position pos:line="487" pos:column="22"/></block></then></if></elseif>
                    <elseif pos:line="488" pos:column="21">else <if pos:line="488" pos:column="26">if <condition pos:line="488" pos:column="29">(<expr><name pos:line="488" pos:column="30">rv<pos:position pos:line="488" pos:column="32"/></name> <operator pos:line="488" pos:column="33">!=<pos:position pos:line="488" pos:column="35"/></operator> <name pos:line="488" pos:column="36">APR_SUCCESS<pos:position pos:line="488" pos:column="47"/></name></expr>)<pos:position pos:line="488" pos:column="48"/></condition><then pos:line="488" pos:column="48"> <block pos:line="488" pos:column="49">{
                        <comment type="block" pos:line="489" pos:column="25">/* In this case, we are in real trouble because
                         * our backend bailed on us. Pass along a 502 error
                         * error bucket
                         */</comment>
                        <expr_stmt><expr><call><name pos:line="493" pos:column="25">ap_log_cerror<pos:position pos:line="493" pos:column="38"/></name><argument_list pos:line="493" pos:column="38">(<argument><expr><name pos:line="493" pos:column="39">APLOG_MARK<pos:position pos:line="493" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="493" pos:column="51">APLOG_ERR<pos:position pos:line="493" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="493" pos:column="62">rv<pos:position pos:line="493" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="493" pos:column="66">c<pos:position pos:line="493" pos:column="67"/></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="494" pos:column="39">"proxy: error reading response"<pos:position pos:line="494" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="494" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="494" pos:column="72"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="495" pos:column="25">ap_proxy_backend_broke<pos:position pos:line="495" pos:column="47"/></name><argument_list pos:line="495" pos:column="47">(<argument><expr><name pos:line="495" pos:column="48">r<pos:position pos:line="495" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="495" pos:column="51">bb<pos:position pos:line="495" pos:column="53"/></name></expr></argument>)<pos:position pos:line="495" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="495" pos:column="55"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="496" pos:column="25">ap_pass_brigade<pos:position pos:line="496" pos:column="40"/></name><argument_list pos:line="496" pos:column="40">(<argument><expr><name><name pos:line="496" pos:column="41">r<pos:position pos:line="496" pos:column="42"/></name><operator pos:line="496" pos:column="42">-&gt;<pos:position pos:line="496" pos:column="47"/></operator><name pos:line="496" pos:column="44">output_filters<pos:position pos:line="496" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="496" pos:column="60">bb<pos:position pos:line="496" pos:column="62"/></name></expr></argument>)<pos:position pos:line="496" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="496" pos:column="64"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="497" pos:column="25">backend_broke<pos:position pos:line="497" pos:column="38"/></name> <operator pos:line="497" pos:column="39">=<pos:position pos:line="497" pos:column="40"/></operator> <literal type="number" pos:line="497" pos:column="41">1<pos:position pos:line="497" pos:column="42"/></literal></expr>;<pos:position pos:line="497" pos:column="43"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="498" pos:column="25">backend<pos:position pos:line="498" pos:column="32"/></name><operator pos:line="498" pos:column="32">-&gt;<pos:position pos:line="498" pos:column="37"/></operator><name pos:line="498" pos:column="34">close<pos:position pos:line="498" pos:column="39"/></name></name> <operator pos:line="498" pos:column="40">=<pos:position pos:line="498" pos:column="41"/></operator> <literal type="number" pos:line="498" pos:column="42">1<pos:position pos:line="498" pos:column="43"/></literal></expr>;<pos:position pos:line="498" pos:column="44"/></expr_stmt>
                        <break pos:line="499" pos:column="25">break;<pos:position pos:line="499" pos:column="31"/></break>
                    }<pos:position pos:line="500" pos:column="22"/></block></then></if></elseif></if>
                    <comment type="block" pos:line="501" pos:column="21">/* next time try a non-blocking read */</comment>
                    <expr_stmt><expr><name pos:line="502" pos:column="21">mode<pos:position pos:line="502" pos:column="25"/></name> <operator pos:line="502" pos:column="26">=<pos:position pos:line="502" pos:column="27"/></operator> <name pos:line="502" pos:column="28">APR_NONBLOCK_READ<pos:position pos:line="502" pos:column="45"/></name></expr>;<pos:position pos:line="502" pos:column="46"/></expr_stmt>

                    <expr_stmt><expr><call><name pos:line="504" pos:column="21">apr_brigade_length<pos:position pos:line="504" pos:column="39"/></name><argument_list pos:line="504" pos:column="39">(<argument><expr><name pos:line="504" pos:column="40">bb<pos:position pos:line="504" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="504" pos:column="44">0<pos:position pos:line="504" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="504" pos:column="47">&amp;<pos:position pos:line="504" pos:column="52"/></operator><name pos:line="504" pos:column="48">readbytes<pos:position pos:line="504" pos:column="57"/></name></expr></argument>)<pos:position pos:line="504" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="504" pos:column="59"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="505" pos:column="21">backend<pos:position pos:line="505" pos:column="28"/></name><operator pos:line="505" pos:column="28">-&gt;<pos:position pos:line="505" pos:column="33"/></operator><name pos:line="505" pos:column="30">worker<pos:position pos:line="505" pos:column="36"/></name><operator pos:line="505" pos:column="36">-&gt;<pos:position pos:line="505" pos:column="41"/></operator><name pos:line="505" pos:column="38">s<pos:position pos:line="505" pos:column="39"/></name><operator pos:line="505" pos:column="39">-&gt;<pos:position pos:line="505" pos:column="44"/></operator><name pos:line="505" pos:column="41">read<pos:position pos:line="505" pos:column="45"/></name></name> <operator pos:line="505" pos:column="46">+=<pos:position pos:line="505" pos:column="48"/></operator> <name pos:line="505" pos:column="49">readbytes<pos:position pos:line="505" pos:column="58"/></name></expr>;<pos:position pos:line="505" pos:column="59"/></expr_stmt>
<cpp:if pos:line="506" pos:column="1">#<cpp:directive pos:line="506" pos:column="2">if<pos:position pos:line="506" pos:column="4"/></cpp:directive> <expr><name pos:line="506" pos:column="5">DEBUGGING<pos:position pos:line="506" pos:column="14"/></name></expr></cpp:if>
                    <block pos:line="507" pos:column="21">{
                    <expr_stmt><expr><call><name pos:line="508" pos:column="21">ap_log_error<pos:position pos:line="508" pos:column="33"/></name><argument_list pos:line="508" pos:column="33">(<argument><expr><name pos:line="508" pos:column="34">APLOG_MARK<pos:position pos:line="508" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="508" pos:column="46">APLOG_DEBUG<pos:position pos:line="508" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="508" pos:column="59">0<pos:position pos:line="508" pos:column="60"/></literal></expr></argument>,
                                 <argument><expr><name><name pos:line="509" pos:column="34">r<pos:position pos:line="509" pos:column="35"/></name><operator pos:line="509" pos:column="35">-&gt;<pos:position pos:line="509" pos:column="40"/></operator><name pos:line="509" pos:column="37">server<pos:position pos:line="509" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="509" pos:column="45">"proxy (PID %d): readbytes: %#x"<pos:position pos:line="509" pos:column="77"/></literal></expr></argument>,
                                 <argument><expr><call><name pos:line="510" pos:column="34">getpid<pos:position pos:line="510" pos:column="40"/></name><argument_list pos:line="510" pos:column="40">()<pos:position pos:line="510" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="510" pos:column="44">readbytes<pos:position pos:line="510" pos:column="53"/></name></expr></argument>)<pos:position pos:line="510" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="510" pos:column="55"/></expr_stmt>
                    }<pos:position pos:line="511" pos:column="22"/></block>
<cpp:endif pos:line="512" pos:column="1">#<cpp:directive pos:line="512" pos:column="2">endif<pos:position pos:line="512" pos:column="7"/></cpp:directive></cpp:endif>
                    <comment type="block" pos:line="513" pos:column="21">/* sanity check */</comment>
                    <if pos:line="514" pos:column="21">if <condition pos:line="514" pos:column="24">(<expr><call><name pos:line="514" pos:column="25">APR_BRIGADE_EMPTY<pos:position pos:line="514" pos:column="42"/></name><argument_list pos:line="514" pos:column="42">(<argument><expr><name pos:line="514" pos:column="43">bb<pos:position pos:line="514" pos:column="45"/></name></expr></argument>)<pos:position pos:line="514" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="514" pos:column="47"/></condition><then pos:line="514" pos:column="47"> <block pos:line="514" pos:column="48">{
                        <expr_stmt><expr><call><name pos:line="515" pos:column="25">apr_brigade_cleanup<pos:position pos:line="515" pos:column="44"/></name><argument_list pos:line="515" pos:column="44">(<argument><expr><name pos:line="515" pos:column="45">bb<pos:position pos:line="515" pos:column="47"/></name></expr></argument>)<pos:position pos:line="515" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="515" pos:column="49"/></expr_stmt>
                        <break pos:line="516" pos:column="25">break;<pos:position pos:line="516" pos:column="31"/></break>
                    }<pos:position pos:line="517" pos:column="22"/></block></then></if>

                    <comment type="block" pos:line="519" pos:column="21">/* Switch the allocator lifetime of the buckets */</comment>
                    <expr_stmt><expr><call><name pos:line="520" pos:column="21">ap_proxy_buckets_lifetime_transform<pos:position pos:line="520" pos:column="56"/></name><argument_list pos:line="520" pos:column="56">(<argument><expr><name pos:line="520" pos:column="57">r<pos:position pos:line="520" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="520" pos:column="60">bb<pos:position pos:line="520" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="520" pos:column="64">pass_bb<pos:position pos:line="520" pos:column="71"/></name></expr></argument>)<pos:position pos:line="520" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="520" pos:column="73"/></expr_stmt>

                    <comment type="block" pos:line="522" pos:column="21">/* found the last brigade? */</comment>
                    <if pos:line="523" pos:column="21">if <condition pos:line="523" pos:column="24">(<expr><call><name pos:line="523" pos:column="25">APR_BUCKET_IS_EOS<pos:position pos:line="523" pos:column="42"/></name><argument_list pos:line="523" pos:column="42">(<argument><expr><call><name pos:line="523" pos:column="43">APR_BRIGADE_LAST<pos:position pos:line="523" pos:column="59"/></name><argument_list pos:line="523" pos:column="59">(<argument><expr><name pos:line="523" pos:column="60">bb<pos:position pos:line="523" pos:column="62"/></name></expr></argument>)<pos:position pos:line="523" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="523" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="523" pos:column="65"/></condition><then pos:line="523" pos:column="65"> <block pos:line="523" pos:column="66">{
                        <comment type="block" pos:line="524" pos:column="25">/* signal that we must leave */</comment>
                        <expr_stmt><expr><name pos:line="525" pos:column="25">finish<pos:position pos:line="525" pos:column="31"/></name> <operator pos:line="525" pos:column="32">=<pos:position pos:line="525" pos:column="33"/></operator> <name pos:line="525" pos:column="34">TRUE<pos:position pos:line="525" pos:column="38"/></name></expr>;<pos:position pos:line="525" pos:column="39"/></expr_stmt>
                    }<pos:position pos:line="526" pos:column="22"/></block></then></if>

                    <comment type="block" pos:line="528" pos:column="21">/* try send what we read */</comment>
                    <if pos:line="529" pos:column="21">if <condition pos:line="529" pos:column="24">(<expr><call><name pos:line="529" pos:column="25">ap_pass_brigade<pos:position pos:line="529" pos:column="40"/></name><argument_list pos:line="529" pos:column="40">(<argument><expr><name><name pos:line="529" pos:column="41">r<pos:position pos:line="529" pos:column="42"/></name><operator pos:line="529" pos:column="42">-&gt;<pos:position pos:line="529" pos:column="47"/></operator><name pos:line="529" pos:column="44">output_filters<pos:position pos:line="529" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="529" pos:column="60">pass_bb<pos:position pos:line="529" pos:column="67"/></name></expr></argument>)<pos:position pos:line="529" pos:column="68"/></argument_list></call> <operator pos:line="529" pos:column="69">!=<pos:position pos:line="529" pos:column="71"/></operator> <name pos:line="529" pos:column="72">APR_SUCCESS<pos:position pos:line="529" pos:column="83"/></name>
                        <operator pos:line="530" pos:column="25">||<pos:position pos:line="530" pos:column="27"/></operator> <name><name pos:line="530" pos:column="28">c<pos:position pos:line="530" pos:column="29"/></name><operator pos:line="530" pos:column="29">-&gt;<pos:position pos:line="530" pos:column="34"/></operator><name pos:line="530" pos:column="31">aborted<pos:position pos:line="530" pos:column="38"/></name></name></expr>)<pos:position pos:line="530" pos:column="39"/></condition><then pos:line="530" pos:column="39"> <block pos:line="530" pos:column="40">{
                        <comment type="block" pos:line="531" pos:column="25">/* Ack! Phbtt! Die! User aborted! */</comment>
                        <expr_stmt><expr><name><name pos:line="532" pos:column="25">backend<pos:position pos:line="532" pos:column="32"/></name><operator pos:line="532" pos:column="32">-&gt;<pos:position pos:line="532" pos:column="37"/></operator><name pos:line="532" pos:column="34">close<pos:position pos:line="532" pos:column="39"/></name></name> <operator pos:line="532" pos:column="40">=<pos:position pos:line="532" pos:column="41"/></operator> <literal type="number" pos:line="532" pos:column="42">1<pos:position pos:line="532" pos:column="43"/></literal></expr>;<pos:position pos:line="532" pos:column="44"/></expr_stmt>  <comment type="block" pos:line="532" pos:column="46">/* this causes socket close below */</comment>
                        <expr_stmt><expr><name pos:line="533" pos:column="25">finish<pos:position pos:line="533" pos:column="31"/></name> <operator pos:line="533" pos:column="32">=<pos:position pos:line="533" pos:column="33"/></operator> <name pos:line="533" pos:column="34">TRUE<pos:position pos:line="533" pos:column="38"/></name></expr>;<pos:position pos:line="533" pos:column="39"/></expr_stmt>
                    }<pos:position pos:line="534" pos:column="22"/></block></then></if>

                    <comment type="block" pos:line="536" pos:column="21">/* make sure we always clean up after ourselves */</comment>
                    <expr_stmt><expr><call><name pos:line="537" pos:column="21">apr_brigade_cleanup<pos:position pos:line="537" pos:column="40"/></name><argument_list pos:line="537" pos:column="40">(<argument><expr><name pos:line="537" pos:column="41">bb<pos:position pos:line="537" pos:column="43"/></name></expr></argument>)<pos:position pos:line="537" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="537" pos:column="45"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="538" pos:column="21">apr_brigade_cleanup<pos:position pos:line="538" pos:column="40"/></name><argument_list pos:line="538" pos:column="40">(<argument><expr><name pos:line="538" pos:column="41">pass_bb<pos:position pos:line="538" pos:column="48"/></name></expr></argument>)<pos:position pos:line="538" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="538" pos:column="50"/></expr_stmt>

                }<pos:position pos:line="540" pos:column="18"/></block> while <condition pos:line="540" pos:column="25">(<expr><operator pos:line="540" pos:column="26">!<pos:position pos:line="540" pos:column="27"/></operator><name pos:line="540" pos:column="27">finish<pos:position pos:line="540" pos:column="33"/></name></expr>)<pos:position pos:line="540" pos:column="34"/></condition>;<pos:position pos:line="540" pos:column="35"/></do>
            }<pos:position pos:line="541" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="542" pos:column="13">ap_log_error<pos:position pos:line="542" pos:column="25"/></name><argument_list pos:line="542" pos:column="25">(<argument><expr><name pos:line="542" pos:column="26">APLOG_MARK<pos:position pos:line="542" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="542" pos:column="38">APLOG_TRACE2<pos:position pos:line="542" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="542" pos:column="52">0<pos:position pos:line="542" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="542" pos:column="55">r<pos:position pos:line="542" pos:column="56"/></name><operator pos:line="542" pos:column="56">-&gt;<pos:position pos:line="542" pos:column="61"/></operator><name pos:line="542" pos:column="58">server<pos:position pos:line="542" pos:column="64"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="543" pos:column="26">"proxy: end body send"<pos:position pos:line="543" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="543" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="543" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="544" pos:column="10"/></block></then>
        <elseif pos:line="545" pos:column="9">else <if pos:line="545" pos:column="14">if <condition pos:line="545" pos:column="17">(<expr><operator pos:line="545" pos:column="18">!<pos:position pos:line="545" pos:column="19"/></operator><name pos:line="545" pos:column="19">interim_response<pos:position pos:line="545" pos:column="35"/></name></expr>)<pos:position pos:line="545" pos:column="36"/></condition><then pos:line="545" pos:column="36"> <block pos:line="545" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="546" pos:column="13">ap_log_error<pos:position pos:line="546" pos:column="25"/></name><argument_list pos:line="546" pos:column="25">(<argument><expr><name pos:line="546" pos:column="26">APLOG_MARK<pos:position pos:line="546" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="546" pos:column="38">APLOG_TRACE2<pos:position pos:line="546" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="546" pos:column="52">0<pos:position pos:line="546" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="546" pos:column="55">r<pos:position pos:line="546" pos:column="56"/></name><operator pos:line="546" pos:column="56">-&gt;<pos:position pos:line="546" pos:column="61"/></operator><name pos:line="546" pos:column="58">server<pos:position pos:line="546" pos:column="64"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="547" pos:column="26">"proxy: header only"<pos:position pos:line="547" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="547" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="547" pos:column="48"/></expr_stmt>

            <comment type="block" pos:line="549" pos:column="13">/* Pass EOS bucket down the filter chain. */</comment>
            <expr_stmt><expr><name pos:line="550" pos:column="13">e<pos:position pos:line="550" pos:column="14"/></name> <operator pos:line="550" pos:column="15">=<pos:position pos:line="550" pos:column="16"/></operator> <call><name pos:line="550" pos:column="17">apr_bucket_eos_create<pos:position pos:line="550" pos:column="38"/></name><argument_list pos:line="550" pos:column="38">(<argument><expr><name><name pos:line="550" pos:column="39">c<pos:position pos:line="550" pos:column="40"/></name><operator pos:line="550" pos:column="40">-&gt;<pos:position pos:line="550" pos:column="45"/></operator><name pos:line="550" pos:column="42">bucket_alloc<pos:position pos:line="550" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="550" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="550" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="551" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="551" pos:column="36"/></name><argument_list pos:line="551" pos:column="36">(<argument><expr><name pos:line="551" pos:column="37">bb<pos:position pos:line="551" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="551" pos:column="41">e<pos:position pos:line="551" pos:column="42"/></name></expr></argument>)<pos:position pos:line="551" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="551" pos:column="44"/></expr_stmt>
            <if pos:line="552" pos:column="13">if <condition pos:line="552" pos:column="16">(<expr><call><name pos:line="552" pos:column="17">ap_pass_brigade<pos:position pos:line="552" pos:column="32"/></name><argument_list pos:line="552" pos:column="32">(<argument><expr><name><name pos:line="552" pos:column="33">r<pos:position pos:line="552" pos:column="34"/></name><operator pos:line="552" pos:column="34">-&gt;<pos:position pos:line="552" pos:column="39"/></operator><name pos:line="552" pos:column="36">output_filters<pos:position pos:line="552" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="552" pos:column="52">bb<pos:position pos:line="552" pos:column="54"/></name></expr></argument>)<pos:position pos:line="552" pos:column="55"/></argument_list></call> <operator pos:line="552" pos:column="56">!=<pos:position pos:line="552" pos:column="58"/></operator> <name pos:line="552" pos:column="59">APR_SUCCESS<pos:position pos:line="552" pos:column="70"/></name>
                <operator pos:line="553" pos:column="17">||<pos:position pos:line="553" pos:column="19"/></operator> <name><name pos:line="553" pos:column="20">c<pos:position pos:line="553" pos:column="21"/></name><operator pos:line="553" pos:column="21">-&gt;<pos:position pos:line="553" pos:column="26"/></operator><name pos:line="553" pos:column="23">aborted<pos:position pos:line="553" pos:column="30"/></name></name></expr>)<pos:position pos:line="553" pos:column="31"/></condition><then pos:line="553" pos:column="31"> <block pos:line="553" pos:column="32">{
                <comment type="block" pos:line="554" pos:column="17">/* Ack! Phbtt! Die! User aborted! */</comment>
                <expr_stmt><expr><name><name pos:line="555" pos:column="17">backend<pos:position pos:line="555" pos:column="24"/></name><operator pos:line="555" pos:column="24">-&gt;<pos:position pos:line="555" pos:column="29"/></operator><name pos:line="555" pos:column="26">close<pos:position pos:line="555" pos:column="31"/></name></name> <operator pos:line="555" pos:column="32">=<pos:position pos:line="555" pos:column="33"/></operator> <literal type="number" pos:line="555" pos:column="34">1<pos:position pos:line="555" pos:column="35"/></literal></expr>;<pos:position pos:line="555" pos:column="36"/></expr_stmt>  <comment type="block" pos:line="555" pos:column="38">/* this causes socket close below */</comment>
            }<pos:position pos:line="556" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="558" pos:column="13">apr_brigade_cleanup<pos:position pos:line="558" pos:column="32"/></name><argument_list pos:line="558" pos:column="32">(<argument><expr><name pos:line="558" pos:column="33">bb<pos:position pos:line="558" pos:column="35"/></name></expr></argument>)<pos:position pos:line="558" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="558" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="559" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="560" pos:column="6"/></block> while <condition pos:line="560" pos:column="13">(<expr><name pos:line="560" pos:column="14">interim_response<pos:position pos:line="560" pos:column="30"/></name> <operator pos:line="560" pos:column="31">&amp;&amp;<pos:position pos:line="560" pos:column="41"/></operator> <operator pos:line="560" pos:column="34">(<pos:position pos:line="560" pos:column="35"/></operator><name pos:line="560" pos:column="35">interim_response<pos:position pos:line="560" pos:column="51"/></name> <operator pos:line="560" pos:column="52">&lt;<pos:position pos:line="560" pos:column="56"/></operator> <name pos:line="560" pos:column="54">AP_MAX_INTERIM_RESPONSES<pos:position pos:line="560" pos:column="78"/></name><operator pos:line="560" pos:column="78">)<pos:position pos:line="560" pos:column="79"/></operator></expr>)<pos:position pos:line="560" pos:column="80"/></condition>;<pos:position pos:line="560" pos:column="81"/></do>

    <comment type="block" pos:line="562" pos:column="5">/* See define of AP_MAX_INTERIM_RESPONSES for why */</comment>
    <if pos:line="563" pos:column="5">if <condition pos:line="563" pos:column="8">(<expr><name pos:line="563" pos:column="9">interim_response<pos:position pos:line="563" pos:column="25"/></name> <operator pos:line="563" pos:column="26">&gt;=<pos:position pos:line="563" pos:column="31"/></operator> <name pos:line="563" pos:column="29">AP_MAX_INTERIM_RESPONSES<pos:position pos:line="563" pos:column="53"/></name></expr>)<pos:position pos:line="563" pos:column="54"/></condition><then pos:line="563" pos:column="54"> <block pos:line="563" pos:column="55">{
        <return pos:line="564" pos:column="9">return <expr><call><name pos:line="564" pos:column="16">ap_proxyerror<pos:position pos:line="564" pos:column="29"/></name><argument_list pos:line="564" pos:column="29">(<argument><expr><name pos:line="564" pos:column="30">r<pos:position pos:line="564" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="564" pos:column="33">HTTP_BAD_GATEWAY<pos:position pos:line="564" pos:column="49"/></name></expr></argument>,
                             <argument><expr><call><name pos:line="565" pos:column="30">apr_psprintf<pos:position pos:line="565" pos:column="42"/></name><argument_list pos:line="565" pos:column="42">(<argument><expr><name pos:line="565" pos:column="43">p<pos:position pos:line="565" pos:column="44"/></name></expr></argument>, 
                             <argument><expr><literal type="string" pos:line="566" pos:column="30">"Too many (%d) interim responses from origin server"<pos:position pos:line="566" pos:column="82"/></literal></expr></argument>,
                             <argument><expr><name pos:line="567" pos:column="30">interim_response<pos:position pos:line="567" pos:column="46"/></name></expr></argument>)<pos:position pos:line="567" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="567" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="567" pos:column="49"/></return>
    }<pos:position pos:line="568" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="570" pos:column="5">/* If our connection with the client is to be aborted, return DONE. */</comment>
    <if pos:line="571" pos:column="5">if <condition pos:line="571" pos:column="8">(<expr><name><name pos:line="571" pos:column="9">c<pos:position pos:line="571" pos:column="10"/></name><operator pos:line="571" pos:column="10">-&gt;<pos:position pos:line="571" pos:column="15"/></operator><name pos:line="571" pos:column="12">aborted<pos:position pos:line="571" pos:column="19"/></name></name> <operator pos:line="571" pos:column="20">||<pos:position pos:line="571" pos:column="22"/></operator> <name pos:line="571" pos:column="23">backend_broke<pos:position pos:line="571" pos:column="36"/></name></expr>)<pos:position pos:line="571" pos:column="37"/></condition><then pos:line="571" pos:column="37"> <block pos:line="571" pos:column="38">{
        <return pos:line="572" pos:column="9">return <expr><name pos:line="572" pos:column="16">DONE<pos:position pos:line="572" pos:column="20"/></name></expr>;<pos:position pos:line="572" pos:column="21"/></return>
    }<pos:position pos:line="573" pos:column="6"/></block></then></if>

    <return pos:line="575" pos:column="5">return <expr><name pos:line="575" pos:column="12">OK<pos:position pos:line="575" pos:column="14"/></name></expr>;<pos:position pos:line="575" pos:column="15"/></return>
}<pos:position pos:line="576" pos:column="2"/></block></function></unit>

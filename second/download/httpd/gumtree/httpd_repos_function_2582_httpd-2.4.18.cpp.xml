<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2582_httpd-2.4.18.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">h2_h2_post_read_req<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">request_rec<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">r<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">h2_ctx<pos:position pos:line="3" pos:column="11"/></name> <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type><name pos:line="3" pos:column="13">ctx<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><call><name pos:line="3" pos:column="19">h2_ctx_rget<pos:position pos:line="3" pos:column="30"/></name><argument_list pos:line="3" pos:column="30">(<argument><expr><name pos:line="3" pos:column="31">r<pos:position pos:line="3" pos:column="32"/></name></expr></argument>)<pos:position pos:line="3" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">h2_task<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">task<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name pos:line="4" pos:column="28">h2_ctx_get_task<pos:position pos:line="4" pos:column="43"/></name><argument_list pos:line="4" pos:column="43">(<argument><expr><name pos:line="4" pos:column="44">ctx<pos:position pos:line="4" pos:column="47"/></name></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">task<pos:position pos:line="5" pos:column="13"/></name></expr>)<pos:position pos:line="5" pos:column="14"/></condition><then pos:line="5" pos:column="14"> <block pos:line="5" pos:column="15">{
        <comment type="block" pos:line="6" pos:column="9">/* FIXME: sometimes, this hook gets called twice for a single request.
         * This should not be, right? */</comment>
        <comment type="block" pos:line="8" pos:column="9">/* h2_task connection for a stream, not for h2c */</comment>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">ap_log_rerror<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">APLOG_MARK<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="35">APLOG_TRACE3<pos:position pos:line="9" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="49">0<pos:position pos:line="9" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="52">r<pos:position pos:line="9" pos:column="53"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="10" pos:column="23">"adding h1_to_h2_resp output filter"<pos:position pos:line="10" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">task<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">serialize_headers<pos:position pos:line="11" pos:column="36"/></name></name></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37"> <block pos:line="11" pos:column="38">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">ap_remove_output_filter_byhandle<pos:position pos:line="12" pos:column="45"/></name><argument_list pos:line="12" pos:column="45">(<argument><expr><name><name pos:line="12" pos:column="46">r<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">-&gt;<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="49">output_filters<pos:position pos:line="12" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="65">"H1_TO_H2_RESP"<pos:position pos:line="12" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="82"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">ap_add_output_filter<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><literal type="string" pos:line="13" pos:column="34">"H1_TO_H2_RESP"<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">task<pos:position pos:line="13" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="57">r<pos:position pos:line="13" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="60">r<pos:position pos:line="13" pos:column="61"/></name><operator pos:line="13" pos:column="61">-&gt;<pos:position pos:line="13" pos:column="66"/></operator><name pos:line="13" pos:column="63">connection<pos:position pos:line="13" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="75"/></expr_stmt>
        }<pos:position pos:line="14" pos:column="10"/></block></then>
        <else pos:line="15" pos:column="9">else <block pos:line="15" pos:column="14">{
            <comment type="block" pos:line="16" pos:column="13">/* replace the core http filter that formats response headers
             * in HTTP/1 with our own that collects status and headers */</comment>
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">ap_remove_output_filter_byhandle<pos:position pos:line="18" pos:column="45"/></name><argument_list pos:line="18" pos:column="45">(<argument><expr><name><name pos:line="18" pos:column="46">r<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">-&gt;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="49">output_filters<pos:position pos:line="18" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="65">"HTTP_HEADER"<pos:position pos:line="18" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">ap_remove_output_filter_byhandle<pos:position pos:line="19" pos:column="45"/></name><argument_list pos:line="19" pos:column="45">(<argument><expr><name><name pos:line="19" pos:column="46">r<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">output_filters<pos:position pos:line="19" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="65">"H2_RESPONSE"<pos:position pos:line="19" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">ap_add_output_filter<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><literal type="string" pos:line="20" pos:column="34">"H2_RESPONSE"<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="49">task<pos:position pos:line="20" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="55">r<pos:position pos:line="20" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="58">r<pos:position pos:line="20" pos:column="59"/></name><operator pos:line="20" pos:column="59">-&gt;<pos:position pos:line="20" pos:column="64"/></operator><name pos:line="20" pos:column="61">connection<pos:position pos:line="20" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="73"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">ap_add_output_filter<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><literal type="string" pos:line="22" pos:column="30">"H2_TRAILERS"<pos:position pos:line="22" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="45">task<pos:position pos:line="22" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="51">r<pos:position pos:line="22" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="54">r<pos:position pos:line="22" pos:column="55"/></name><operator pos:line="22" pos:column="55">-&gt;<pos:position pos:line="22" pos:column="60"/></operator><name pos:line="22" pos:column="57">connection<pos:position pos:line="22" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">DECLINED<pos:position pos:line="24" pos:column="20"/></name></expr>;<pos:position pos:line="24" pos:column="21"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

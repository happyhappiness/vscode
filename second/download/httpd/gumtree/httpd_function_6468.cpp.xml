<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6468.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">output_write<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">h2_task<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">task<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">ap_filter_t<pos:position pos:line="1" pos:column="60"/></name><modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type> <name pos:line="1" pos:column="62">f<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, 
                                 <parameter><decl><type><name pos:line="2" pos:column="34">apr_bucket_brigade<pos:position pos:line="2" pos:column="52"/></name><modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type> <name pos:line="2" pos:column="54">bb<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_bucket<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">b<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">APR_SUCCESS<pos:position pos:line="5" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">flush<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">APR_BRIGADE_EMPTY<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">bb<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31"> <block pos:line="8" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">ap_log_cerror<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">APLOG_MARK<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="35">APLOG_TRACE1<pos:position pos:line="9" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="49">0<pos:position pos:line="9" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="52">task<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">-&gt;<pos:position pos:line="9" pos:column="61"/></operator><name pos:line="9" pos:column="58">c<pos:position pos:line="9" pos:column="59"/></name></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="10" pos:column="23">"h2_task(%s): empty write"<pos:position pos:line="10" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="51">task<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">-&gt;<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="57">id<pos:position pos:line="10" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">APR_SUCCESS<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">task<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">frozen<pos:position pos:line="14" pos:column="21"/></name></name></expr>)<pos:position pos:line="14" pos:column="22"/></condition><then pos:line="14" pos:column="22"> <block pos:line="14" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">h2_util_bb_log<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name><name pos:line="15" pos:column="24">task<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">-&gt;<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="30">c<pos:position pos:line="15" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="33">task<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">-&gt;<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="39">stream_id<pos:position pos:line="15" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="50">APLOG_TRACE2<pos:position pos:line="15" pos:column="62"/></name></expr></argument>,
                       <argument><expr><literal type="string" pos:line="16" pos:column="24">"frozen task output write, ignored"<pos:position pos:line="16" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="61">bb<pos:position pos:line="16" pos:column="63"/></name></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="65"/></expr_stmt>
        <while pos:line="17" pos:column="9">while <condition pos:line="17" pos:column="15">(<expr><operator pos:line="17" pos:column="16">!<pos:position pos:line="17" pos:column="17"/></operator><call><name pos:line="17" pos:column="17">APR_BRIGADE_EMPTY<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">bb<pos:position pos:line="17" pos:column="37"/></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="39"/></condition> <block pos:line="17" pos:column="40">{
            <expr_stmt><expr><name pos:line="18" pos:column="13">b<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <call><name pos:line="18" pos:column="17">APR_BRIGADE_FIRST<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><name pos:line="18" pos:column="35">bb<pos:position pos:line="18" pos:column="37"/></name></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><call><name pos:line="19" pos:column="17">AP_BUCKET_IS_EOR<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">b<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37"> <block pos:line="19" pos:column="38">{
                <expr_stmt><expr><call><name pos:line="20" pos:column="17">APR_BUCKET_REMOVE<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><name pos:line="20" pos:column="35">b<pos:position pos:line="20" pos:column="36"/></name></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="21" pos:column="17">task<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">eor<pos:position pos:line="21" pos:column="26"/></name></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <name pos:line="21" pos:column="29">b<pos:position pos:line="21" pos:column="30"/></name></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="22" pos:column="14"/></block></then>
            <else pos:line="23" pos:column="13">else <block pos:line="23" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="24" pos:column="17">apr_bucket_delete<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">b<pos:position pos:line="24" pos:column="36"/></name></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="25" pos:column="14"/></block></else></if>
        }<pos:position pos:line="26" pos:column="10"/></block></while>
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">APR_SUCCESS<pos:position pos:line="27" pos:column="27"/></name></expr>;<pos:position pos:line="27" pos:column="28"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">!<pos:position pos:line="30" pos:column="10"/></operator><name><name pos:line="30" pos:column="10">task<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">output<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">.<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="23">beam<pos:position pos:line="30" pos:column="27"/></name></name></expr>)<pos:position pos:line="30" pos:column="28"/></condition><then pos:line="30" pos:column="28"> <block pos:line="30" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">h2_beam_create<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><operator pos:line="31" pos:column="24">&amp;<pos:position pos:line="31" pos:column="29"/></operator><name><name pos:line="31" pos:column="25">task<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">output<pos:position pos:line="31" pos:column="37"/></name><operator pos:line="31" pos:column="37">.<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">beam<pos:position pos:line="31" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="44">task<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">-&gt;<pos:position pos:line="31" pos:column="53"/></operator><name pos:line="31" pos:column="50">pool<pos:position pos:line="31" pos:column="54"/></name></name></expr></argument>, 
                       <argument><expr><name><name pos:line="32" pos:column="24">task<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">-&gt;<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="30">stream_id<pos:position pos:line="32" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="41">"output"<pos:position pos:line="32" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="51">0<pos:position pos:line="32" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="54"/></expr_stmt> 
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    
    <comment type="block" pos:line="35" pos:column="5">/* Attempt to write saved brigade first */</comment>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">task<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">output<pos:position pos:line="36" pos:column="21"/></name><operator pos:line="36" pos:column="21">.<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">bb<pos:position pos:line="36" pos:column="24"/></name></name> <operator pos:line="36" pos:column="25">&amp;&amp;<pos:position pos:line="36" pos:column="35"/></operator> <operator pos:line="36" pos:column="28">!<pos:position pos:line="36" pos:column="29"/></operator><call><name pos:line="36" pos:column="29">APR_BRIGADE_EMPTY<pos:position pos:line="36" pos:column="46"/></name><argument_list pos:line="36" pos:column="46">(<argument><expr><name><name pos:line="36" pos:column="47">task<pos:position pos:line="36" pos:column="51"/></name><operator pos:line="36" pos:column="51">-&gt;<pos:position pos:line="36" pos:column="56"/></operator><name pos:line="36" pos:column="53">output<pos:position pos:line="36" pos:column="59"/></name><operator pos:line="36" pos:column="59">.<pos:position pos:line="36" pos:column="60"/></operator><name pos:line="36" pos:column="60">bb<pos:position pos:line="36" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="64"/></condition><then pos:line="36" pos:column="64"> <block pos:line="36" pos:column="65">{
        <expr_stmt><expr><name pos:line="37" pos:column="9">status<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <call><name pos:line="37" pos:column="18">send_out<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">task<pos:position pos:line="37" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="33">task<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">output<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">.<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="46">bb<pos:position pos:line="37" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="50"/></expr_stmt> 
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">status<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">!=<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="23">APR_SUCCESS<pos:position pos:line="38" pos:column="34"/></name></expr>)<pos:position pos:line="38" pos:column="35"/></condition><then pos:line="38" pos:column="35"> <block pos:line="38" pos:column="36">{
            <return pos:line="39" pos:column="13">return <expr><name pos:line="39" pos:column="20">status<pos:position pos:line="39" pos:column="26"/></name></expr>;<pos:position pos:line="39" pos:column="27"/></return>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
    
    <comment type="block" pos:line="43" pos:column="5">/* If there is nothing saved (anymore), try to write the brigade passed */</comment>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">(<pos:position pos:line="44" pos:column="10"/></operator><operator pos:line="44" pos:column="10">!<pos:position pos:line="44" pos:column="11"/></operator><name><name pos:line="44" pos:column="11">task<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">-&gt;<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="17">output<pos:position pos:line="44" pos:column="23"/></name><operator pos:line="44" pos:column="23">.<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="24">bb<pos:position pos:line="44" pos:column="26"/></name></name> <operator pos:line="44" pos:column="27">||<pos:position pos:line="44" pos:column="29"/></operator> <call><name pos:line="44" pos:column="30">APR_BRIGADE_EMPTY<pos:position pos:line="44" pos:column="47"/></name><argument_list pos:line="44" pos:column="47">(<argument><expr><name><name pos:line="44" pos:column="48">task<pos:position pos:line="44" pos:column="52"/></name><operator pos:line="44" pos:column="52">-&gt;<pos:position pos:line="44" pos:column="57"/></operator><name pos:line="44" pos:column="54">output<pos:position pos:line="44" pos:column="60"/></name><operator pos:line="44" pos:column="60">.<pos:position pos:line="44" pos:column="61"/></operator><name pos:line="44" pos:column="61">bb<pos:position pos:line="44" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="64"/></argument_list></call><operator pos:line="44" pos:column="64">)<pos:position pos:line="44" pos:column="65"/></operator> 
        <operator pos:line="45" pos:column="9">&amp;&amp;<pos:position pos:line="45" pos:column="19"/></operator> <operator pos:line="45" pos:column="12">!<pos:position pos:line="45" pos:column="13"/></operator><call><name pos:line="45" pos:column="13">APR_BRIGADE_EMPTY<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">bb<pos:position pos:line="45" pos:column="33"/></name></expr></argument>)<pos:position pos:line="45" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="35"/></condition><then pos:line="45" pos:column="35"> <block pos:line="45" pos:column="36">{
        <comment type="block" pos:line="46" pos:column="9">/* check if we have a flush before the end-of-request */</comment>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">!<pos:position pos:line="47" pos:column="14"/></operator><name><name pos:line="47" pos:column="14">task<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">-&gt;<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="20">output<pos:position pos:line="47" pos:column="26"/></name><operator pos:line="47" pos:column="26">.<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="27">response_open<pos:position pos:line="47" pos:column="40"/></name></name></expr>)<pos:position pos:line="47" pos:column="41"/></condition><then pos:line="47" pos:column="41"> <block pos:line="47" pos:column="42">{
            <for pos:line="48" pos:column="13">for <control pos:line="48" pos:column="17">(<init><expr><name pos:line="48" pos:column="18">b<pos:position pos:line="48" pos:column="19"/></name> <operator pos:line="48" pos:column="20">=<pos:position pos:line="48" pos:column="21"/></operator> <call><name pos:line="48" pos:column="22">APR_BRIGADE_FIRST<pos:position pos:line="48" pos:column="39"/></name><argument_list pos:line="48" pos:column="39">(<argument><expr><name pos:line="48" pos:column="40">bb<pos:position pos:line="48" pos:column="42"/></name></expr></argument>)<pos:position pos:line="48" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="44"/></init>
                 <condition><expr><name pos:line="49" pos:column="18">b<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">!=<pos:position pos:line="49" pos:column="22"/></operator> <call><name pos:line="49" pos:column="23">APR_BRIGADE_SENTINEL<pos:position pos:line="49" pos:column="43"/></name><argument_list pos:line="49" pos:column="43">(<argument><expr><name pos:line="49" pos:column="44">bb<pos:position pos:line="49" pos:column="46"/></name></expr></argument>)<pos:position pos:line="49" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="48"/></condition>
                 <incr><expr><name pos:line="50" pos:column="18">b<pos:position pos:line="50" pos:column="19"/></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <call><name pos:line="50" pos:column="22">APR_BUCKET_NEXT<pos:position pos:line="50" pos:column="37"/></name><argument_list pos:line="50" pos:column="37">(<argument><expr><name pos:line="50" pos:column="38">b<pos:position pos:line="50" pos:column="39"/></name></expr></argument>)<pos:position pos:line="50" pos:column="40"/></argument_list></call></expr></incr>)<pos:position pos:line="50" pos:column="41"/></control> <block pos:line="50" pos:column="42">{
                <if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><call><name pos:line="51" pos:column="21">AP_BUCKET_IS_EOR<pos:position pos:line="51" pos:column="37"/></name><argument_list pos:line="51" pos:column="37">(<argument><expr><name pos:line="51" pos:column="38">b<pos:position pos:line="51" pos:column="39"/></name></expr></argument>)<pos:position pos:line="51" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="41"/></condition><then pos:line="51" pos:column="41"> <block pos:line="51" pos:column="42">{
                    <break pos:line="52" pos:column="21">break;<pos:position pos:line="52" pos:column="27"/></break>
                }<pos:position pos:line="53" pos:column="18"/></block></then>
                <elseif pos:line="54" pos:column="17">else <if pos:line="54" pos:column="22">if <condition pos:line="54" pos:column="25">(<expr><call><name pos:line="54" pos:column="26">APR_BUCKET_IS_FLUSH<pos:position pos:line="54" pos:column="45"/></name><argument_list pos:line="54" pos:column="45">(<argument><expr><name pos:line="54" pos:column="46">b<pos:position pos:line="54" pos:column="47"/></name></expr></argument>)<pos:position pos:line="54" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="49"/></condition><then pos:line="54" pos:column="49"> <block pos:line="54" pos:column="50">{
                    <expr_stmt><expr><name pos:line="55" pos:column="21">flush<pos:position pos:line="55" pos:column="26"/></name> <operator pos:line="55" pos:column="27">=<pos:position pos:line="55" pos:column="28"/></operator> <literal type="number" pos:line="55" pos:column="29">1<pos:position pos:line="55" pos:column="30"/></literal></expr>;<pos:position pos:line="55" pos:column="31"/></expr_stmt>
                }<pos:position pos:line="56" pos:column="18"/></block></then></if></elseif></if>
            }<pos:position pos:line="57" pos:column="14"/></block></for>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="60" pos:column="9">status<pos:position pos:line="60" pos:column="15"/></name> <operator pos:line="60" pos:column="16">=<pos:position pos:line="60" pos:column="17"/></operator> <call><name pos:line="60" pos:column="18">send_out<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><name pos:line="60" pos:column="27">task<pos:position pos:line="60" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="33">bb<pos:position pos:line="60" pos:column="35"/></name></expr></argument>)<pos:position pos:line="60" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="37"/></expr_stmt> 
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">status<pos:position pos:line="61" pos:column="19"/></name> <operator pos:line="61" pos:column="20">!=<pos:position pos:line="61" pos:column="22"/></operator> <name pos:line="61" pos:column="23">APR_SUCCESS<pos:position pos:line="61" pos:column="34"/></name></expr>)<pos:position pos:line="61" pos:column="35"/></condition><then pos:line="61" pos:column="35"> <block pos:line="61" pos:column="36">{
            <return pos:line="62" pos:column="13">return <expr><name pos:line="62" pos:column="20">status<pos:position pos:line="62" pos:column="26"/></name></expr>;<pos:position pos:line="62" pos:column="27"/></return>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>
    
    <comment type="block" pos:line="66" pos:column="5">/* If the passed brigade is not empty, save it before return */</comment>
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><operator pos:line="67" pos:column="9">!<pos:position pos:line="67" pos:column="10"/></operator><call><name pos:line="67" pos:column="10">APR_BRIGADE_EMPTY<pos:position pos:line="67" pos:column="27"/></name><argument_list pos:line="67" pos:column="27">(<argument><expr><name pos:line="67" pos:column="28">bb<pos:position pos:line="67" pos:column="30"/></name></expr></argument>)<pos:position pos:line="67" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="32"/></condition><then pos:line="67" pos:column="32"> <block pos:line="67" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">ap_log_cerror<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">(<argument><expr><name pos:line="68" pos:column="23">APLOG_MARK<pos:position pos:line="68" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="35">APLOG_DEBUG<pos:position pos:line="68" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="48">status<pos:position pos:line="68" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="56">task<pos:position pos:line="68" pos:column="60"/></name><operator pos:line="68" pos:column="60">-&gt;<pos:position pos:line="68" pos:column="65"/></operator><name pos:line="68" pos:column="62">c<pos:position pos:line="68" pos:column="63"/></name></name></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="65">APLOGNO<pos:position pos:line="68" pos:column="72"/></name><argument_list pos:line="68" pos:column="72">(<argument><expr><literal type="number" pos:line="68" pos:column="73">03405<pos:position pos:line="68" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="79"/></argument_list></call>
                      <literal type="string" pos:line="69" pos:column="23">"h2_task(%s): could not write all, saving brigade"<pos:position pos:line="69" pos:column="73"/></literal></expr></argument>, 
                      <argument><expr><name><name pos:line="70" pos:column="23">task<pos:position pos:line="70" pos:column="27"/></name><operator pos:line="70" pos:column="27">-&gt;<pos:position pos:line="70" pos:column="32"/></operator><name pos:line="70" pos:column="29">id<pos:position pos:line="70" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="33"/></expr_stmt>
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><operator pos:line="71" pos:column="13">!<pos:position pos:line="71" pos:column="14"/></operator><name><name pos:line="71" pos:column="14">task<pos:position pos:line="71" pos:column="18"/></name><operator pos:line="71" pos:column="18">-&gt;<pos:position pos:line="71" pos:column="23"/></operator><name pos:line="71" pos:column="20">output<pos:position pos:line="71" pos:column="26"/></name><operator pos:line="71" pos:column="26">.<pos:position pos:line="71" pos:column="27"/></operator><name pos:line="71" pos:column="27">bb<pos:position pos:line="71" pos:column="29"/></name></name></expr>)<pos:position pos:line="71" pos:column="30"/></condition><then pos:line="71" pos:column="30"> <block pos:line="71" pos:column="31">{
            <expr_stmt><expr><name><name pos:line="72" pos:column="13">task<pos:position pos:line="72" pos:column="17"/></name><operator pos:line="72" pos:column="17">-&gt;<pos:position pos:line="72" pos:column="22"/></operator><name pos:line="72" pos:column="19">output<pos:position pos:line="72" pos:column="25"/></name><operator pos:line="72" pos:column="25">.<pos:position pos:line="72" pos:column="26"/></operator><name pos:line="72" pos:column="26">bb<pos:position pos:line="72" pos:column="28"/></name></name> <operator pos:line="72" pos:column="29">=<pos:position pos:line="72" pos:column="30"/></operator> <call><name pos:line="72" pos:column="31">apr_brigade_create<pos:position pos:line="72" pos:column="49"/></name><argument_list pos:line="72" pos:column="49">(<argument><expr><name><name pos:line="72" pos:column="50">task<pos:position pos:line="72" pos:column="54"/></name><operator pos:line="72" pos:column="54">-&gt;<pos:position pos:line="72" pos:column="59"/></operator><name pos:line="72" pos:column="56">pool<pos:position pos:line="72" pos:column="60"/></name></name></expr></argument>, 
                                          <argument><expr><name><name pos:line="73" pos:column="43">task<pos:position pos:line="73" pos:column="47"/></name><operator pos:line="73" pos:column="47">-&gt;<pos:position pos:line="73" pos:column="52"/></operator><name pos:line="73" pos:column="49">c<pos:position pos:line="73" pos:column="50"/></name><operator pos:line="73" pos:column="50">-&gt;<pos:position pos:line="73" pos:column="55"/></operator><name pos:line="73" pos:column="52">bucket_alloc<pos:position pos:line="73" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if>
        <return pos:line="75" pos:column="9">return <expr><call><name pos:line="75" pos:column="16">ap_save_brigade<pos:position pos:line="75" pos:column="31"/></name><argument_list pos:line="75" pos:column="31">(<argument><expr><name pos:line="75" pos:column="32">f<pos:position pos:line="75" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="35">&amp;<pos:position pos:line="75" pos:column="40"/></operator><name><name pos:line="75" pos:column="36">task<pos:position pos:line="75" pos:column="40"/></name><operator pos:line="75" pos:column="40">-&gt;<pos:position pos:line="75" pos:column="45"/></operator><name pos:line="75" pos:column="42">output<pos:position pos:line="75" pos:column="48"/></name><operator pos:line="75" pos:column="48">.<pos:position pos:line="75" pos:column="49"/></operator><name pos:line="75" pos:column="49">bb<pos:position pos:line="75" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="53">&amp;<pos:position pos:line="75" pos:column="58"/></operator><name pos:line="75" pos:column="54">bb<pos:position pos:line="75" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="58">task<pos:position pos:line="75" pos:column="62"/></name><operator pos:line="75" pos:column="62">-&gt;<pos:position pos:line="75" pos:column="67"/></operator><name pos:line="75" pos:column="64">pool<pos:position pos:line="75" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="70"/></return>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>
    
    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><operator pos:line="78" pos:column="9">!<pos:position pos:line="78" pos:column="10"/></operator><name><name pos:line="78" pos:column="10">task<pos:position pos:line="78" pos:column="14"/></name><operator pos:line="78" pos:column="14">-&gt;<pos:position pos:line="78" pos:column="19"/></operator><name pos:line="78" pos:column="16">output<pos:position pos:line="78" pos:column="22"/></name><operator pos:line="78" pos:column="22">.<pos:position pos:line="78" pos:column="23"/></operator><name pos:line="78" pos:column="23">response_open<pos:position pos:line="78" pos:column="36"/></name></name> 
        <operator pos:line="79" pos:column="9">&amp;&amp;<pos:position pos:line="79" pos:column="19"/></operator> <operator pos:line="79" pos:column="12">(<pos:position pos:line="79" pos:column="13"/></operator><name pos:line="79" pos:column="13">flush<pos:position pos:line="79" pos:column="18"/></name> <operator pos:line="79" pos:column="19">||<pos:position pos:line="79" pos:column="21"/></operator> <call><name pos:line="79" pos:column="22">h2_beam_get_mem_used<pos:position pos:line="79" pos:column="42"/></name><argument_list pos:line="79" pos:column="42">(<argument><expr><name><name pos:line="79" pos:column="43">task<pos:position pos:line="79" pos:column="47"/></name><operator pos:line="79" pos:column="47">-&gt;<pos:position pos:line="79" pos:column="52"/></operator><name pos:line="79" pos:column="49">output<pos:position pos:line="79" pos:column="55"/></name><operator pos:line="79" pos:column="55">.<pos:position pos:line="79" pos:column="56"/></operator><name pos:line="79" pos:column="56">beam<pos:position pos:line="79" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="61"/></argument_list></call> <operator pos:line="79" pos:column="62">&gt;<pos:position pos:line="79" pos:column="66"/></operator> <operator pos:line="79" pos:column="64">(<pos:position pos:line="79" pos:column="65"/></operator><literal type="number" pos:line="79" pos:column="65">32<pos:position pos:line="79" pos:column="67"/></literal><operator pos:line="79" pos:column="67">*<pos:position pos:line="79" pos:column="68"/></operator><literal type="number" pos:line="79" pos:column="68">1024<pos:position pos:line="79" pos:column="72"/></literal><operator pos:line="79" pos:column="72">)<pos:position pos:line="79" pos:column="73"/></operator><operator pos:line="79" pos:column="73">)<pos:position pos:line="79" pos:column="74"/></operator></expr>)<pos:position pos:line="79" pos:column="75"/></condition><then pos:line="79" pos:column="75"> <block pos:line="79" pos:column="76">{
        <comment type="block" pos:line="80" pos:column="9">/* if we have enough buffered or we got a flush bucket, open
        * the response now. */</comment>
        <expr_stmt><expr><name pos:line="82" pos:column="9">status<pos:position pos:line="82" pos:column="15"/></name> <operator pos:line="82" pos:column="16">=<pos:position pos:line="82" pos:column="17"/></operator> <call><name pos:line="82" pos:column="18">open_response<pos:position pos:line="82" pos:column="31"/></name><argument_list pos:line="82" pos:column="31">(<argument><expr><name pos:line="82" pos:column="32">task<pos:position pos:line="82" pos:column="36"/></name></expr></argument>)<pos:position pos:line="82" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="83" pos:column="9">task<pos:position pos:line="83" pos:column="13"/></name><operator pos:line="83" pos:column="13">-&gt;<pos:position pos:line="83" pos:column="18"/></operator><name pos:line="83" pos:column="15">output<pos:position pos:line="83" pos:column="21"/></name><operator pos:line="83" pos:column="21">.<pos:position pos:line="83" pos:column="22"/></operator><name pos:line="83" pos:column="22">response_open<pos:position pos:line="83" pos:column="35"/></name></name> <operator pos:line="83" pos:column="36">=<pos:position pos:line="83" pos:column="37"/></operator> <literal type="number" pos:line="83" pos:column="38">1<pos:position pos:line="83" pos:column="39"/></literal></expr>;<pos:position pos:line="83" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>
    
    <return pos:line="86" pos:column="5">return <expr><name pos:line="86" pos:column="12">status<pos:position pos:line="86" pos:column="18"/></name></expr>;<pos:position pos:line="86" pos:column="19"/></return>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

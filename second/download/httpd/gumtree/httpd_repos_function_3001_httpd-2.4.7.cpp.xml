<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3001_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">am_allowmethods<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">cmd_parms<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">cmd<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">void<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">d<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">argc<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="71">char<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier><specifier pos:line="1" pos:column="77">const<pos:position pos:line="1" pos:column="82"/></specifier></type> <name><name pos:line="1" pos:column="83">argv<pos:position pos:line="1" pos:column="87"/></name><index pos:line="1" pos:column="87">[]<pos:position pos:line="1" pos:column="89"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="90"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">am_conf_t<pos:position pos:line="4" pos:column="12"/></name><modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type> <name pos:line="4" pos:column="14">conf<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><operator pos:line="4" pos:column="21">(<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">am_conf_t<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></operator><operator pos:line="4" pos:column="32">)<pos:position pos:line="4" pos:column="33"/></operator> <name pos:line="4" pos:column="34">d<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">argc<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">==<pos:position pos:line="5" pos:column="14"/></operator> <literal type="number" pos:line="5" pos:column="15">0<pos:position pos:line="5" pos:column="16"/></literal></expr>)<pos:position pos:line="5" pos:column="17"/></condition><then pos:line="5" pos:column="17"> <block pos:line="5" pos:column="18">{
      <return pos:line="6" pos:column="7">return <expr><literal type="string" pos:line="6" pos:column="14">"AllowMethods: No method or 'reset' keyword given"<pos:position pos:line="6" pos:column="64"/></literal></expr>;<pos:position pos:line="6" pos:column="65"/></return>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">argc<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">==<pos:position pos:line="8" pos:column="14"/></operator> <literal type="number" pos:line="8" pos:column="15">1<pos:position pos:line="8" pos:column="16"/></literal></expr>)<pos:position pos:line="8" pos:column="17"/></condition><then pos:line="8" pos:column="17"> <block pos:line="8" pos:column="18">{
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">strcasecmp<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><literal type="string" pos:line="9" pos:column="20">"reset"<pos:position pos:line="9" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="29">argv<pos:position pos:line="9" pos:column="33"/></name><index pos:line="9" pos:column="33">[<expr><literal type="number" pos:line="9" pos:column="34">0<pos:position pos:line="9" pos:column="35"/></literal></expr>]<pos:position pos:line="9" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call> <operator pos:line="9" pos:column="38">==<pos:position pos:line="9" pos:column="40"/></operator> <literal type="number" pos:line="9" pos:column="41">0<pos:position pos:line="9" pos:column="42"/></literal></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43"> <block pos:line="9" pos:column="44">{
      <expr_stmt><expr><name><name pos:line="10" pos:column="7">conf<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">allowed<pos:position pos:line="10" pos:column="20"/></name></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <literal type="number" pos:line="10" pos:column="23">0<pos:position pos:line="10" pos:column="24"/></literal></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="11" pos:column="7">conf<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">allowed_set<pos:position pos:line="11" pos:column="24"/></name></name> <operator pos:line="11" pos:column="25">=<pos:position pos:line="11" pos:column="26"/></operator> <literal type="number" pos:line="11" pos:column="27">1<pos:position pos:line="11" pos:column="28"/></literal></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
      <return pos:line="12" pos:column="7">return <expr><name pos:line="12" pos:column="14">NULL<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <for pos:line="16" pos:column="3">for <control pos:line="16" pos:column="7">(<init><expr><name pos:line="16" pos:column="8">i<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <literal type="number" pos:line="16" pos:column="12">0<pos:position pos:line="16" pos:column="13"/></literal></expr>;<pos:position pos:line="16" pos:column="14"/></init> <condition><expr><name pos:line="16" pos:column="15">i<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">&lt;<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="19">argc<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></condition> <incr><expr><name pos:line="16" pos:column="25">i<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">++<pos:position pos:line="16" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="29"/></control> <block pos:line="16" pos:column="30">{
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">m<pos:position pos:line="17" pos:column="10"/></name> <init pos:line="17" pos:column="11">= <expr><literal type="number" pos:line="17" pos:column="13">0<pos:position pos:line="17" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="15"/></decl_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">m<pos:position pos:line="18" pos:column="6"/></name> <operator pos:line="18" pos:column="7">=<pos:position pos:line="18" pos:column="8"/></operator> <call><name pos:line="18" pos:column="9">ap_method_number_of<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name><name pos:line="18" pos:column="29">argv<pos:position pos:line="18" pos:column="33"/></name><index pos:line="18" pos:column="33">[<expr><name pos:line="18" pos:column="34">i<pos:position pos:line="18" pos:column="35"/></name></expr>]<pos:position pos:line="18" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">m<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">==<pos:position pos:line="19" pos:column="13"/></operator> <name pos:line="19" pos:column="14">M_INVALID<pos:position pos:line="19" pos:column="23"/></name></expr>)<pos:position pos:line="19" pos:column="24"/></condition><then pos:line="19" pos:column="24"> <block pos:line="19" pos:column="25">{
      <return pos:line="20" pos:column="7">return <expr><call><name pos:line="20" pos:column="14">apr_pstrcat<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name><name pos:line="20" pos:column="26">cmd<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">pool<pos:position pos:line="20" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="37">"AllowMethods: Invalid Method '"<pos:position pos:line="20" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="71">argv<pos:position pos:line="20" pos:column="75"/></name><index pos:line="20" pos:column="75">[<expr><name pos:line="20" pos:column="76">i<pos:position pos:line="20" pos:column="77"/></name></expr>]<pos:position pos:line="20" pos:column="78"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="80">"'"<pos:position pos:line="20" pos:column="83"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="85">NULL<pos:position pos:line="20" pos:column="89"/></name></expr></argument>)<pos:position pos:line="20" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="91"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="23" pos:column="5">conf<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">allowed<pos:position pos:line="23" pos:column="18"/></name></name> <operator pos:line="23" pos:column="19">|=<pos:position pos:line="23" pos:column="21"/></operator> <operator pos:line="23" pos:column="22">(<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">AP_METHOD_BIT<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">&lt;&lt;<pos:position pos:line="23" pos:column="45"/></operator> <name pos:line="23" pos:column="40">m<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">)<pos:position pos:line="23" pos:column="42"/></operator></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></for>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">conf<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">allowed_set<pos:position pos:line="25" pos:column="20"/></name></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <literal type="number" pos:line="25" pos:column="23">1<pos:position pos:line="25" pos:column="24"/></literal></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
  <return pos:line="26" pos:column="3">return <expr><name pos:line="26" pos:column="10">NULL<pos:position pos:line="26" pos:column="14"/></name></expr>;<pos:position pos:line="26" pos:column="15"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

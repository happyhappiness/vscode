<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2161_httpd-2.4.18.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pass_response<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">request_rec<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">r<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">proxy_conn_rec<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">conn<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_bucket_brigade<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">bb<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_bucket<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">b<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">location<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">scgi_config<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">conf<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">socket_ex_data<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">sock_data<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">status<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">sock_data<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <call><name pos:line="10" pos:column="17">apr_palloc<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name><name pos:line="10" pos:column="28">r<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">pool<pos:position pos:line="10" pos:column="35"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="37">sizeof<argument_list pos:line="10" pos:column="43">(<argument><expr><operator pos:line="10" pos:column="44">*<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="45">sock_data<pos:position pos:line="10" pos:column="54"/></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">sock_data<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">sock<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <name><name pos:line="11" pos:column="23">conn<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">sock<pos:position pos:line="11" pos:column="33"/></name></name></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">sock_data<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">counter<pos:position pos:line="12" pos:column="23"/></name></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <operator pos:line="12" pos:column="26">&amp;<pos:position pos:line="12" pos:column="31"/></operator><name><name pos:line="12" pos:column="27">conn<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">worker<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">s<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">read<pos:position pos:line="12" pos:column="48"/></name></name></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><name pos:line="14" pos:column="5">bb<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <call><name pos:line="14" pos:column="10">apr_brigade_create<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name><name pos:line="14" pos:column="29">r<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">-&gt;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="32">pool<pos:position pos:line="14" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="38">r<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">-&gt;<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="41">connection<pos:position pos:line="14" pos:column="51"/></name><operator pos:line="14" pos:column="51">-&gt;<pos:position pos:line="14" pos:column="56"/></operator><name pos:line="14" pos:column="53">bucket_alloc<pos:position pos:line="14" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">b<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <call><name pos:line="15" pos:column="9">bucket_socket_ex_create<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">sock_data<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="44">r<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">-&gt;<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="47">connection<pos:position pos:line="15" pos:column="57"/></name><operator pos:line="15" pos:column="57">-&gt;<pos:position pos:line="15" pos:column="62"/></operator><name pos:line="15" pos:column="59">bucket_alloc<pos:position pos:line="15" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">bb<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">b<pos:position pos:line="16" pos:column="34"/></name></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">b<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name pos:line="17" pos:column="9">apr_bucket_eos_create<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name><name pos:line="17" pos:column="31">r<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">connection<pos:position pos:line="17" pos:column="44"/></name><operator pos:line="17" pos:column="44">-&gt;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="46">bucket_alloc<pos:position pos:line="17" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">bb<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">b<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name pos:line="20" pos:column="5">status<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <call><name pos:line="20" pos:column="14">ap_scan_script_header_err_brigade_ex<pos:position pos:line="20" pos:column="50"/></name><argument_list pos:line="20" pos:column="50">(<argument><expr><name pos:line="20" pos:column="51">r<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="54">bb<pos:position pos:line="20" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="58">NULL<pos:position pos:line="20" pos:column="62"/></name></expr></argument>,
                                                  <argument><expr><name pos:line="21" pos:column="51">APLOG_MODULE_INDEX<pos:position pos:line="21" pos:column="69"/></name></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="71"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">status<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">!=<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">OK<pos:position pos:line="22" pos:column="21"/></name></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22"> <block pos:line="22" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">ap_log_rerror<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">APLOG_MARK<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="35">APLOG_ERR<pos:position pos:line="23" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="46">0<pos:position pos:line="23" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="49">r<pos:position pos:line="23" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="52">APLOGNO<pos:position pos:line="23" pos:column="59"/></name><argument_list pos:line="23" pos:column="59">(<argument><expr><literal type="number" pos:line="23" pos:column="60">00860<pos:position pos:line="23" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call>
                      <literal type="string" pos:line="24" pos:column="23">"error reading response headers from %s:%u"<pos:position pos:line="24" pos:column="66"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="25" pos:column="23">conn<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">-&gt;<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="29">hostname<pos:position pos:line="25" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="39">conn<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">port<pos:position pos:line="25" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">r<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">status_line<pos:position pos:line="26" pos:column="23"/></name></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <name pos:line="26" pos:column="26">NULL<pos:position pos:line="26" pos:column="30"/></name></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">apr_brigade_destroy<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">bb<pos:position pos:line="27" pos:column="31"/></name></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">status<pos:position pos:line="28" pos:column="22"/></name></expr>;<pos:position pos:line="28" pos:column="23"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="31" pos:column="5">conf<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">=<pos:position pos:line="31" pos:column="11"/></operator> <call><name pos:line="31" pos:column="12">ap_get_module_config<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name><name pos:line="31" pos:column="33">r<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">per_dir_config<pos:position pos:line="31" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="52">&amp;<pos:position pos:line="31" pos:column="57"/></operator><name pos:line="31" pos:column="53">proxy_scgi_module<pos:position pos:line="31" pos:column="70"/></name></expr></argument>)<pos:position pos:line="31" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="72"/></expr_stmt>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name><name pos:line="32" pos:column="9">conf<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">-&gt;<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="15">sendfile<pos:position pos:line="32" pos:column="23"/></name></name> <operator pos:line="32" pos:column="24">&amp;&amp;<pos:position pos:line="32" pos:column="34"/></operator> <name><name pos:line="32" pos:column="27">conf<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">-&gt;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="33">sendfile<pos:position pos:line="32" pos:column="41"/></name></name> <operator pos:line="32" pos:column="42">!=<pos:position pos:line="32" pos:column="44"/></operator> <name pos:line="32" pos:column="45">scgi_sendfile_off<pos:position pos:line="32" pos:column="62"/></name></expr>)<pos:position pos:line="32" pos:column="63"/></condition><then pos:line="32" pos:column="63"> <block pos:line="32" pos:column="64">{
        <decl_stmt><decl><type><name pos:line="33" pos:column="9">short<pos:position pos:line="33" pos:column="14"/></name></type> <name pos:line="33" pos:column="15">err<pos:position pos:line="33" pos:column="18"/></name> <init pos:line="33" pos:column="19">= <expr><literal type="number" pos:line="33" pos:column="21">1<pos:position pos:line="33" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="33" pos:column="23"/></decl_stmt>

        <expr_stmt><expr><name pos:line="35" pos:column="9">location<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <call><name pos:line="35" pos:column="20">apr_table_get<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><name><name pos:line="35" pos:column="34">r<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">-&gt;<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="37">err_headers_out<pos:position pos:line="35" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="54">conf<pos:position pos:line="35" pos:column="58"/></name><operator pos:line="35" pos:column="58">-&gt;<pos:position pos:line="35" pos:column="63"/></operator><name pos:line="35" pos:column="60">sendfile<pos:position pos:line="35" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="70"/></expr_stmt>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">location<pos:position pos:line="36" pos:column="22"/></name></expr>)<pos:position pos:line="36" pos:column="23"/></condition><then pos:line="36" pos:column="23"> <block pos:line="36" pos:column="24">{
            <expr_stmt><expr><name pos:line="37" pos:column="13">err<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">=<pos:position pos:line="37" pos:column="18"/></operator> <literal type="number" pos:line="37" pos:column="19">0<pos:position pos:line="37" pos:column="20"/></literal></expr>;<pos:position pos:line="37" pos:column="21"/></expr_stmt>
            <expr_stmt><expr><name pos:line="38" pos:column="13">location<pos:position pos:line="38" pos:column="21"/></name> <operator pos:line="38" pos:column="22">=<pos:position pos:line="38" pos:column="23"/></operator> <call><name pos:line="38" pos:column="24">apr_table_get<pos:position pos:line="38" pos:column="37"/></name><argument_list pos:line="38" pos:column="37">(<argument><expr><name><name pos:line="38" pos:column="38">r<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">-&gt;<pos:position pos:line="38" pos:column="44"/></operator><name pos:line="38" pos:column="41">headers_out<pos:position pos:line="38" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="54">conf<pos:position pos:line="38" pos:column="58"/></name><operator pos:line="38" pos:column="58">-&gt;<pos:position pos:line="38" pos:column="63"/></operator><name pos:line="38" pos:column="60">sendfile<pos:position pos:line="38" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">location<pos:position pos:line="40" pos:column="21"/></name></expr>)<pos:position pos:line="40" pos:column="22"/></condition><then pos:line="40" pos:column="22"> <block pos:line="40" pos:column="23">{
            <decl_stmt><decl><type><name pos:line="41" pos:column="13">scgi_request_config<pos:position pos:line="41" pos:column="32"/></name> <modifier pos:line="41" pos:column="33">*<pos:position pos:line="41" pos:column="34"/></modifier></type><name pos:line="41" pos:column="34">req_conf<pos:position pos:line="41" pos:column="42"/></name> <init pos:line="41" pos:column="43">= <expr><call><name pos:line="41" pos:column="45">apr_palloc<pos:position pos:line="41" pos:column="55"/></name><argument_list pos:line="41" pos:column="55">(<argument><expr><name><name pos:line="41" pos:column="56">r<pos:position pos:line="41" pos:column="57"/></name><operator pos:line="41" pos:column="57">-&gt;<pos:position pos:line="41" pos:column="62"/></operator><name pos:line="41" pos:column="59">pool<pos:position pos:line="41" pos:column="63"/></name></name></expr></argument>,
                                                       <argument><expr><sizeof pos:line="42" pos:column="56">sizeof<argument_list pos:line="42" pos:column="62">(<argument><expr><operator pos:line="42" pos:column="63">*<pos:position pos:line="42" pos:column="64"/></operator><name pos:line="42" pos:column="64">req_conf<pos:position pos:line="42" pos:column="72"/></name></expr></argument>)<pos:position pos:line="42" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="75"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">ap_log_rerror<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">APLOG_MARK<pos:position pos:line="43" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="39">APLOG_DEBUG<pos:position pos:line="43" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="52">0<pos:position pos:line="43" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="55">r<pos:position pos:line="43" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="58">APLOGNO<pos:position pos:line="43" pos:column="65"/></name><argument_list pos:line="43" pos:column="65">(<argument><expr><literal type="number" pos:line="43" pos:column="66">00861<pos:position pos:line="43" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="72"/></argument_list></call>
                          <literal type="string" pos:line="44" pos:column="27">"Found %s: %s - preparing subrequest."<pos:position pos:line="44" pos:column="65"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="45" pos:column="27">conf<pos:position pos:line="45" pos:column="31"/></name><operator pos:line="45" pos:column="31">-&gt;<pos:position pos:line="45" pos:column="36"/></operator><name pos:line="45" pos:column="33">sendfile<pos:position pos:line="45" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="43">location<pos:position pos:line="45" pos:column="51"/></name></expr></argument>)<pos:position pos:line="45" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="53"/></expr_stmt>

            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><name pos:line="47" pos:column="17">err<pos:position pos:line="47" pos:column="20"/></name></expr>)<pos:position pos:line="47" pos:column="21"/></condition><then pos:line="47" pos:column="21"> <block pos:line="47" pos:column="22">{
                <expr_stmt><expr><call><name pos:line="48" pos:column="17">apr_table_unset<pos:position pos:line="48" pos:column="32"/></name><argument_list pos:line="48" pos:column="32">(<argument><expr><name><name pos:line="48" pos:column="33">r<pos:position pos:line="48" pos:column="34"/></name><operator pos:line="48" pos:column="34">-&gt;<pos:position pos:line="48" pos:column="39"/></operator><name pos:line="48" pos:column="36">err_headers_out<pos:position pos:line="48" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="53">conf<pos:position pos:line="48" pos:column="57"/></name><operator pos:line="48" pos:column="57">-&gt;<pos:position pos:line="48" pos:column="62"/></operator><name pos:line="48" pos:column="59">sendfile<pos:position pos:line="48" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="69"/></expr_stmt>
            }<pos:position pos:line="49" pos:column="14"/></block></then>
            <else pos:line="50" pos:column="13">else <block pos:line="50" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="51" pos:column="17">apr_table_unset<pos:position pos:line="51" pos:column="32"/></name><argument_list pos:line="51" pos:column="32">(<argument><expr><name><name pos:line="51" pos:column="33">r<pos:position pos:line="51" pos:column="34"/></name><operator pos:line="51" pos:column="34">-&gt;<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="36">headers_out<pos:position pos:line="51" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="49">conf<pos:position pos:line="51" pos:column="53"/></name><operator pos:line="51" pos:column="53">-&gt;<pos:position pos:line="51" pos:column="58"/></operator><name pos:line="51" pos:column="55">sendfile<pos:position pos:line="51" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="52" pos:column="14"/></block></else></if>
            <expr_stmt><expr><name><name pos:line="53" pos:column="13">req_conf<pos:position pos:line="53" pos:column="21"/></name><operator pos:line="53" pos:column="21">-&gt;<pos:position pos:line="53" pos:column="26"/></operator><name pos:line="53" pos:column="23">location<pos:position pos:line="53" pos:column="31"/></name></name> <operator pos:line="53" pos:column="32">=<pos:position pos:line="53" pos:column="33"/></operator> <name pos:line="53" pos:column="34">location<pos:position pos:line="53" pos:column="42"/></name></expr>;<pos:position pos:line="53" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="54" pos:column="13">req_conf<pos:position pos:line="54" pos:column="21"/></name><operator pos:line="54" pos:column="21">-&gt;<pos:position pos:line="54" pos:column="26"/></operator><name pos:line="54" pos:column="23">type<pos:position pos:line="54" pos:column="27"/></name></name> <operator pos:line="54" pos:column="28">=<pos:position pos:line="54" pos:column="29"/></operator> <name pos:line="54" pos:column="30">scgi_sendfile<pos:position pos:line="54" pos:column="43"/></name></expr>;<pos:position pos:line="54" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">ap_set_module_config<pos:position pos:line="55" pos:column="33"/></name><argument_list pos:line="55" pos:column="33">(<argument><expr><name><name pos:line="55" pos:column="34">r<pos:position pos:line="55" pos:column="35"/></name><operator pos:line="55" pos:column="35">-&gt;<pos:position pos:line="55" pos:column="40"/></operator><name pos:line="55" pos:column="37">request_config<pos:position pos:line="55" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="53">&amp;<pos:position pos:line="55" pos:column="58"/></operator><name pos:line="55" pos:column="54">proxy_scgi_module<pos:position pos:line="55" pos:column="71"/></name></expr></argument>,
                                 <argument><expr><name pos:line="56" pos:column="34">req_conf<pos:position pos:line="56" pos:column="42"/></name></expr></argument>)<pos:position pos:line="56" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">apr_brigade_destroy<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">bb<pos:position pos:line="57" pos:column="35"/></name></expr></argument>)<pos:position pos:line="57" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="37"/></expr_stmt>
            <return pos:line="58" pos:column="13">return <expr><name pos:line="58" pos:column="20">OK<pos:position pos:line="58" pos:column="22"/></name></expr>;<pos:position pos:line="58" pos:column="23"/></return>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name><name pos:line="62" pos:column="9">r<pos:position pos:line="62" pos:column="10"/></name><operator pos:line="62" pos:column="10">-&gt;<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="12">status<pos:position pos:line="62" pos:column="18"/></name></name> <operator pos:line="62" pos:column="19">==<pos:position pos:line="62" pos:column="21"/></operator> <name pos:line="62" pos:column="22">HTTP_OK<pos:position pos:line="62" pos:column="29"/></name> 
        <operator pos:line="63" pos:column="9">&amp;&amp;<pos:position pos:line="63" pos:column="19"/></operator> <operator pos:line="63" pos:column="12">(<pos:position pos:line="63" pos:column="13"/></operator><operator pos:line="63" pos:column="13">!<pos:position pos:line="63" pos:column="14"/></operator><name><name pos:line="63" pos:column="14">conf<pos:position pos:line="63" pos:column="18"/></name><operator pos:line="63" pos:column="18">-&gt;<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="20">internal_redirect<pos:position pos:line="63" pos:column="37"/></name></name> <comment type="block" pos:line="63" pos:column="38">/* default === On */</comment>
            <operator pos:line="64" pos:column="13">||<pos:position pos:line="64" pos:column="15"/></operator> <name><name pos:line="64" pos:column="16">conf<pos:position pos:line="64" pos:column="20"/></name><operator pos:line="64" pos:column="20">-&gt;<pos:position pos:line="64" pos:column="25"/></operator><name pos:line="64" pos:column="22">internal_redirect<pos:position pos:line="64" pos:column="39"/></name></name> <operator pos:line="64" pos:column="40">!=<pos:position pos:line="64" pos:column="42"/></operator> <name pos:line="64" pos:column="43">scgi_internal_redirect_off<pos:position pos:line="64" pos:column="69"/></name><operator pos:line="64" pos:column="69">)<pos:position pos:line="64" pos:column="70"/></operator></expr>)<pos:position pos:line="64" pos:column="71"/></condition><then pos:line="64" pos:column="71"> <block pos:line="64" pos:column="72">{
        <decl_stmt><decl><type><name pos:line="65" pos:column="9">short<pos:position pos:line="65" pos:column="14"/></name></type> <name pos:line="65" pos:column="15">err<pos:position pos:line="65" pos:column="18"/></name> <init pos:line="65" pos:column="19">= <expr><literal type="number" pos:line="65" pos:column="21">1<pos:position pos:line="65" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="65" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="66" pos:column="9">const<pos:position pos:line="66" pos:column="14"/></specifier> <name pos:line="66" pos:column="15">char<pos:position pos:line="66" pos:column="19"/></name> <modifier pos:line="66" pos:column="20">*<pos:position pos:line="66" pos:column="21"/></modifier></type><name pos:line="66" pos:column="21">location_header<pos:position pos:line="66" pos:column="36"/></name> <init pos:line="66" pos:column="37">= <expr><ternary><condition><expr><name><name pos:line="66" pos:column="39">conf<pos:position pos:line="66" pos:column="43"/></name><operator pos:line="66" pos:column="43">-&gt;<pos:position pos:line="66" pos:column="48"/></operator><name pos:line="66" pos:column="45">internal_redirect<pos:position pos:line="66" pos:column="62"/></name></name></expr> ?<pos:position pos:line="66" pos:column="64"/></condition><then pos:line="66" pos:column="64"> 
            <expr><name><name pos:line="67" pos:column="13">conf<pos:position pos:line="67" pos:column="17"/></name><operator pos:line="67" pos:column="17">-&gt;<pos:position pos:line="67" pos:column="22"/></operator><name pos:line="67" pos:column="19">internal_redirect<pos:position pos:line="67" pos:column="36"/></name></name></expr> <pos:position pos:line="67" pos:column="37"/></then><else pos:line="67" pos:column="37">: <expr><name pos:line="67" pos:column="39">scgi_internal_redirect_on<pos:position pos:line="67" pos:column="64"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="67" pos:column="65"/></decl_stmt>

        <expr_stmt><expr><name pos:line="69" pos:column="9">location<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">=<pos:position pos:line="69" pos:column="19"/></operator> <call><name pos:line="69" pos:column="20">apr_table_get<pos:position pos:line="69" pos:column="33"/></name><argument_list pos:line="69" pos:column="33">(<argument><expr><name><name pos:line="69" pos:column="34">r<pos:position pos:line="69" pos:column="35"/></name><operator pos:line="69" pos:column="35">-&gt;<pos:position pos:line="69" pos:column="40"/></operator><name pos:line="69" pos:column="37">err_headers_out<pos:position pos:line="69" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="54">location_header<pos:position pos:line="69" pos:column="69"/></name></expr></argument>)<pos:position pos:line="69" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="71"/></expr_stmt>
        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><operator pos:line="70" pos:column="13">!<pos:position pos:line="70" pos:column="14"/></operator><name pos:line="70" pos:column="14">location<pos:position pos:line="70" pos:column="22"/></name></expr>)<pos:position pos:line="70" pos:column="23"/></condition><then pos:line="70" pos:column="23"> <block pos:line="70" pos:column="24">{
            <expr_stmt><expr><name pos:line="71" pos:column="13">err<pos:position pos:line="71" pos:column="16"/></name> <operator pos:line="71" pos:column="17">=<pos:position pos:line="71" pos:column="18"/></operator> <literal type="number" pos:line="71" pos:column="19">0<pos:position pos:line="71" pos:column="20"/></literal></expr>;<pos:position pos:line="71" pos:column="21"/></expr_stmt>
            <expr_stmt><expr><name pos:line="72" pos:column="13">location<pos:position pos:line="72" pos:column="21"/></name> <operator pos:line="72" pos:column="22">=<pos:position pos:line="72" pos:column="23"/></operator> <call><name pos:line="72" pos:column="24">apr_table_get<pos:position pos:line="72" pos:column="37"/></name><argument_list pos:line="72" pos:column="37">(<argument><expr><name><name pos:line="72" pos:column="38">r<pos:position pos:line="72" pos:column="39"/></name><operator pos:line="72" pos:column="39">-&gt;<pos:position pos:line="72" pos:column="44"/></operator><name pos:line="72" pos:column="41">headers_out<pos:position pos:line="72" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="54">location_header<pos:position pos:line="72" pos:column="69"/></name></expr></argument>)<pos:position pos:line="72" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="73" pos:column="10"/></block></then></if>
        <if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name pos:line="74" pos:column="13">location<pos:position pos:line="74" pos:column="21"/></name> <operator pos:line="74" pos:column="22">&amp;&amp;<pos:position pos:line="74" pos:column="32"/></operator> <operator pos:line="74" pos:column="25">*<pos:position pos:line="74" pos:column="26"/></operator><name pos:line="74" pos:column="26">location<pos:position pos:line="74" pos:column="34"/></name> <operator pos:line="74" pos:column="35">==<pos:position pos:line="74" pos:column="37"/></operator> <literal type="char" pos:line="74" pos:column="38">'/'<pos:position pos:line="74" pos:column="41"/></literal></expr>)<pos:position pos:line="74" pos:column="42"/></condition><then pos:line="74" pos:column="42"> <block pos:line="74" pos:column="43">{
            <decl_stmt><decl><type><name pos:line="75" pos:column="13">scgi_request_config<pos:position pos:line="75" pos:column="32"/></name> <modifier pos:line="75" pos:column="33">*<pos:position pos:line="75" pos:column="34"/></modifier></type><name pos:line="75" pos:column="34">req_conf<pos:position pos:line="75" pos:column="42"/></name> <init pos:line="75" pos:column="43">= <expr><call><name pos:line="75" pos:column="45">apr_palloc<pos:position pos:line="75" pos:column="55"/></name><argument_list pos:line="75" pos:column="55">(<argument><expr><name><name pos:line="75" pos:column="56">r<pos:position pos:line="75" pos:column="57"/></name><operator pos:line="75" pos:column="57">-&gt;<pos:position pos:line="75" pos:column="62"/></operator><name pos:line="75" pos:column="59">pool<pos:position pos:line="75" pos:column="63"/></name></name></expr></argument>,
                                                       <argument><expr><sizeof pos:line="76" pos:column="56">sizeof<argument_list pos:line="76" pos:column="62">(<argument><expr><operator pos:line="76" pos:column="63">*<pos:position pos:line="76" pos:column="64"/></operator><name pos:line="76" pos:column="64">req_conf<pos:position pos:line="76" pos:column="72"/></name></expr></argument>)<pos:position pos:line="76" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="76" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="76" pos:column="75"/></decl_stmt>
            <if pos:line="77" pos:column="13">if <condition pos:line="77" pos:column="16">(<expr><call><name pos:line="77" pos:column="17">strcasecmp<pos:position pos:line="77" pos:column="27"/></name><argument_list pos:line="77" pos:column="27">(<argument><expr><name pos:line="77" pos:column="28">location_header<pos:position pos:line="77" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="45">"Location"<pos:position pos:line="77" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="57"/></condition><then pos:line="77" pos:column="57"> <block pos:line="77" pos:column="58">{
                <if pos:line="78" pos:column="17">if <condition pos:line="78" pos:column="20">(<expr><name pos:line="78" pos:column="21">err<pos:position pos:line="78" pos:column="24"/></name></expr>)<pos:position pos:line="78" pos:column="25"/></condition><then pos:line="78" pos:column="25"> <block pos:line="78" pos:column="26">{
                    <expr_stmt><expr><call><name pos:line="79" pos:column="21">apr_table_unset<pos:position pos:line="79" pos:column="36"/></name><argument_list pos:line="79" pos:column="36">(<argument><expr><name><name pos:line="79" pos:column="37">r<pos:position pos:line="79" pos:column="38"/></name><operator pos:line="79" pos:column="38">-&gt;<pos:position pos:line="79" pos:column="43"/></operator><name pos:line="79" pos:column="40">err_headers_out<pos:position pos:line="79" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="57">location_header<pos:position pos:line="79" pos:column="72"/></name></expr></argument>)<pos:position pos:line="79" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="74"/></expr_stmt>
                }<pos:position pos:line="80" pos:column="18"/></block></then>
                <else pos:line="81" pos:column="17">else <block pos:line="81" pos:column="22">{
                    <expr_stmt><expr><call><name pos:line="82" pos:column="21">apr_table_unset<pos:position pos:line="82" pos:column="36"/></name><argument_list pos:line="82" pos:column="36">(<argument><expr><name><name pos:line="82" pos:column="37">r<pos:position pos:line="82" pos:column="38"/></name><operator pos:line="82" pos:column="38">-&gt;<pos:position pos:line="82" pos:column="43"/></operator><name pos:line="82" pos:column="40">headers_out<pos:position pos:line="82" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="53">location_header<pos:position pos:line="82" pos:column="68"/></name></expr></argument>)<pos:position pos:line="82" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="70"/></expr_stmt>
                }<pos:position pos:line="83" pos:column="18"/></block></else></if>
            }<pos:position pos:line="84" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="85" pos:column="13">req_conf<pos:position pos:line="85" pos:column="21"/></name><operator pos:line="85" pos:column="21">-&gt;<pos:position pos:line="85" pos:column="26"/></operator><name pos:line="85" pos:column="23">location<pos:position pos:line="85" pos:column="31"/></name></name> <operator pos:line="85" pos:column="32">=<pos:position pos:line="85" pos:column="33"/></operator> <name pos:line="85" pos:column="34">location<pos:position pos:line="85" pos:column="42"/></name></expr>;<pos:position pos:line="85" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="86" pos:column="13">req_conf<pos:position pos:line="86" pos:column="21"/></name><operator pos:line="86" pos:column="21">-&gt;<pos:position pos:line="86" pos:column="26"/></operator><name pos:line="86" pos:column="23">type<pos:position pos:line="86" pos:column="27"/></name></name> <operator pos:line="86" pos:column="28">=<pos:position pos:line="86" pos:column="29"/></operator> <name pos:line="86" pos:column="30">scgi_internal_redirect<pos:position pos:line="86" pos:column="52"/></name></expr>;<pos:position pos:line="86" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">ap_set_module_config<pos:position pos:line="87" pos:column="33"/></name><argument_list pos:line="87" pos:column="33">(<argument><expr><name><name pos:line="87" pos:column="34">r<pos:position pos:line="87" pos:column="35"/></name><operator pos:line="87" pos:column="35">-&gt;<pos:position pos:line="87" pos:column="40"/></operator><name pos:line="87" pos:column="37">request_config<pos:position pos:line="87" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="53">&amp;<pos:position pos:line="87" pos:column="58"/></operator><name pos:line="87" pos:column="54">proxy_scgi_module<pos:position pos:line="87" pos:column="71"/></name></expr></argument>,
                                 <argument><expr><name pos:line="88" pos:column="34">req_conf<pos:position pos:line="88" pos:column="42"/></name></expr></argument>)<pos:position pos:line="88" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">apr_brigade_destroy<pos:position pos:line="89" pos:column="32"/></name><argument_list pos:line="89" pos:column="32">(<argument><expr><name pos:line="89" pos:column="33">bb<pos:position pos:line="89" pos:column="35"/></name></expr></argument>)<pos:position pos:line="89" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="37"/></expr_stmt>
            <return pos:line="90" pos:column="13">return <expr><name pos:line="90" pos:column="20">OK<pos:position pos:line="90" pos:column="22"/></name></expr>;<pos:position pos:line="90" pos:column="23"/></return>
        }<pos:position pos:line="91" pos:column="10"/></block></then></if>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if>

    <if pos:line="94" pos:column="5">if <condition pos:line="94" pos:column="8">(<expr><call><name pos:line="94" pos:column="9">ap_pass_brigade<pos:position pos:line="94" pos:column="24"/></name><argument_list pos:line="94" pos:column="24">(<argument><expr><name><name pos:line="94" pos:column="25">r<pos:position pos:line="94" pos:column="26"/></name><operator pos:line="94" pos:column="26">-&gt;<pos:position pos:line="94" pos:column="31"/></operator><name pos:line="94" pos:column="28">output_filters<pos:position pos:line="94" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="44">bb<pos:position pos:line="94" pos:column="46"/></name></expr></argument>)<pos:position pos:line="94" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="48"/></condition><then pos:line="94" pos:column="48"> <block pos:line="94" pos:column="49">{
        <return pos:line="95" pos:column="9">return <expr><name pos:line="95" pos:column="16">AP_FILTER_ERROR<pos:position pos:line="95" pos:column="31"/></name></expr>;<pos:position pos:line="95" pos:column="32"/></return>
    }<pos:position pos:line="96" pos:column="6"/></block></then></if>

    <return pos:line="98" pos:column="5">return <expr><name pos:line="98" pos:column="12">OK<pos:position pos:line="98" pos:column="14"/></name></expr>;<pos:position pos:line="98" pos:column="15"/></return>
}<pos:position pos:line="99" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1286_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
     <name pos:line="2" pos:column="6">proxy_get_host_of_request<pos:position pos:line="2" pos:column="31"/></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><name pos:line="2" pos:column="32">request_rec<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">r<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">url<pos:position pos:line="4" pos:column="14"/></name></decl>, <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="17">user<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">NULL<pos:position pos:line="4" pos:column="28"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="31">password<pos:position pos:line="4" pos:column="39"/></name> <init pos:line="4" pos:column="40">= <expr><name pos:line="4" pos:column="42">NULL<pos:position pos:line="4" pos:column="46"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="48">*<pos:position pos:line="4" pos:column="49"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="49">err<pos:position pos:line="4" pos:column="52"/></name></decl>, <modifier pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="55">host<pos:position pos:line="4" pos:column="59"/></name></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_port_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">port<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">r<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">hostname<pos:position pos:line="7" pos:column="20"/></name></name> <operator pos:line="7" pos:column="21">!=<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
	<block type="pseudo"><return pos:line="8" pos:column="9">return <expr><name><name pos:line="8" pos:column="16">r<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">hostname<pos:position pos:line="8" pos:column="27"/></name></name></expr>;<pos:position pos:line="8" pos:column="28"/></return></block></then></if>

    <comment type="block" pos:line="10" pos:column="5">/* Set url to the first char after "scheme://" */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">url<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">strchr<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name><name pos:line="11" pos:column="23">r<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">-&gt;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="26">uri<pos:position pos:line="11" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="31">':'<pos:position pos:line="11" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call><operator pos:line="11" pos:column="35">)<pos:position pos:line="11" pos:column="36"/></operator> <operator pos:line="11" pos:column="37">==<pos:position pos:line="11" pos:column="39"/></operator> <name pos:line="11" pos:column="40">NULL<pos:position pos:line="11" pos:column="44"/></name>
	<operator pos:line="12" pos:column="9">||<pos:position pos:line="12" pos:column="11"/></operator> <name><name pos:line="12" pos:column="12">url<pos:position pos:line="12" pos:column="15"/></name><index pos:line="12" pos:column="15">[<expr><literal type="number" pos:line="12" pos:column="16">1<pos:position pos:line="12" pos:column="17"/></literal></expr>]<pos:position pos:line="12" pos:column="18"/></index></name> <operator pos:line="12" pos:column="19">!=<pos:position pos:line="12" pos:column="21"/></operator> <literal type="char" pos:line="12" pos:column="22">'/'<pos:position pos:line="12" pos:column="25"/></literal> <operator pos:line="12" pos:column="26">||<pos:position pos:line="12" pos:column="28"/></operator> <name><name pos:line="12" pos:column="29">url<pos:position pos:line="12" pos:column="32"/></name><index pos:line="12" pos:column="32">[<expr><literal type="number" pos:line="12" pos:column="33">2<pos:position pos:line="12" pos:column="34"/></literal></expr>]<pos:position pos:line="12" pos:column="35"/></index></name> <operator pos:line="12" pos:column="36">!=<pos:position pos:line="12" pos:column="38"/></operator> <literal type="char" pos:line="12" pos:column="39">'/'<pos:position pos:line="12" pos:column="42"/></literal></expr>)<pos:position pos:line="12" pos:column="43"/></condition><then pos:line="12" pos:column="43">
	<block type="pseudo"><return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="15" pos:column="5">url<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <call><name pos:line="15" pos:column="11">apr_pstrdup<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name><name pos:line="15" pos:column="23">r<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">pool<pos:position pos:line="15" pos:column="30"/></name></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="32">&amp;<pos:position pos:line="15" pos:column="37"/></operator><name><name pos:line="15" pos:column="33">url<pos:position pos:line="15" pos:column="36"/></name><index pos:line="15" pos:column="36">[<expr><literal type="number" pos:line="15" pos:column="37">1<pos:position pos:line="15" pos:column="38"/></literal></expr>]<pos:position pos:line="15" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>	<comment type="block" pos:line="15" pos:column="49">/* make it point to "//", which is what proxy_canon_netloc expects */</comment>

    <expr_stmt><expr><name pos:line="17" pos:column="5">err<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <call><name pos:line="17" pos:column="11">ap_proxy_canon_netloc<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name><name pos:line="17" pos:column="33">r<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">-&gt;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="36">pool<pos:position pos:line="17" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="42">&amp;<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="43">url<pos:position pos:line="17" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="48">&amp;<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="49">user<pos:position pos:line="17" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="55">&amp;<pos:position pos:line="17" pos:column="60"/></operator><name pos:line="17" pos:column="56">password<pos:position pos:line="17" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="66">&amp;<pos:position pos:line="17" pos:column="71"/></operator><name pos:line="17" pos:column="67">host<pos:position pos:line="17" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="73">&amp;<pos:position pos:line="17" pos:column="78"/></operator><name pos:line="17" pos:column="74">port<pos:position pos:line="17" pos:column="78"/></name></expr></argument>)<pos:position pos:line="17" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="80"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">err<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">!=<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">NULL<pos:position pos:line="19" pos:column="20"/></name></expr>)<pos:position pos:line="19" pos:column="21"/></condition><then pos:line="19" pos:column="21">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="9">ap_log_rerror<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">APLOG_MARK<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">APLOG_ERR<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="46">0<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="49">r<pos:position pos:line="20" pos:column="50"/></name></expr></argument>,
		     <argument><expr><literal type="string" pos:line="21" pos:column="22">"%s"<pos:position pos:line="21" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="28">err<pos:position pos:line="21" pos:column="31"/></name></expr></argument>)<pos:position pos:line="21" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="23" pos:column="5">r<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">-&gt;<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="8">hostname<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">host<pos:position pos:line="23" pos:column="23"/></name></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>

    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">host<pos:position pos:line="25" pos:column="16"/></name></expr>;<pos:position pos:line="25" pos:column="17"/></return>		<comment type="block" pos:line="25" pos:column="33">/* ought to return the port, too */</comment>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

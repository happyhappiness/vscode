<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_949_httpd-2.0.61.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">imap_handler_internal<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">request_rec<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">r<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">input<pos:position pos:line="3" pos:column="15"/></name><index pos:line="3" pos:column="15">[<expr><name pos:line="3" pos:column="16">MAX_STRING_LEN<pos:position pos:line="3" pos:column="30"/></name></expr>]<pos:position pos:line="3" pos:column="31"/></index></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">directive<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">value<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">href_text<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">base<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">redirect<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">mapdflt<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">closest<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><name pos:line="10" pos:column="21">NULL<pos:position pos:line="10" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">double<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">closest_yet<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><operator pos:line="11" pos:column="26">-<pos:position pos:line="11" pos:column="27"/></operator><literal type="number" pos:line="11" pos:column="27">1<pos:position pos:line="11" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_status_t<pos:position pos:line="12" pos:column="17"/></name></type> <name pos:line="12" pos:column="18">status<pos:position pos:line="12" pos:column="24"/></name></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="14" pos:column="5">double<pos:position pos:line="14" pos:column="11"/></name></type> <name><name pos:line="14" pos:column="12">testpoint<pos:position pos:line="14" pos:column="21"/></name><index pos:line="14" pos:column="21">[<expr><literal type="number" pos:line="14" pos:column="22">2<pos:position pos:line="14" pos:column="23"/></literal></expr>]<pos:position pos:line="14" pos:column="24"/></index></name></decl>;<pos:position pos:line="14" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">double<pos:position pos:line="15" pos:column="11"/></name></type> <name><name pos:line="15" pos:column="12">pointarray<pos:position pos:line="15" pos:column="22"/></name><index pos:line="15" pos:column="22">[<expr><name pos:line="15" pos:column="23">MAXVERTS<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">+<pos:position pos:line="15" pos:column="33"/></operator> <literal type="number" pos:line="15" pos:column="34">1<pos:position pos:line="15" pos:column="35"/></literal></expr>]<pos:position pos:line="15" pos:column="36"/></index><index pos:line="15" pos:column="36">[<expr><literal type="number" pos:line="15" pos:column="37">2<pos:position pos:line="15" pos:column="38"/></literal></expr>]<pos:position pos:line="15" pos:column="39"/></index></name></decl>;<pos:position pos:line="15" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">vertex<pos:position pos:line="16" pos:column="15"/></name></decl>;<pos:position pos:line="16" pos:column="16"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="18" pos:column="5">char<pos:position pos:line="18" pos:column="9"/></name> <modifier pos:line="18" pos:column="10">*<pos:position pos:line="18" pos:column="11"/></modifier></type><name pos:line="18" pos:column="11">string_pos<pos:position pos:line="18" pos:column="21"/></name></decl>;<pos:position pos:line="18" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">showmenu<pos:position pos:line="19" pos:column="17"/></name> <init pos:line="19" pos:column="18">= <expr><literal type="number" pos:line="19" pos:column="20">0<pos:position pos:line="19" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="22"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="21" pos:column="5">imap_conf_rec<pos:position pos:line="21" pos:column="18"/></name> <modifier pos:line="21" pos:column="19">*<pos:position pos:line="21" pos:column="20"/></modifier></type><name pos:line="21" pos:column="20">icr<pos:position pos:line="21" pos:column="23"/></name></decl>;<pos:position pos:line="21" pos:column="24"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="23" pos:column="5">char<pos:position pos:line="23" pos:column="9"/></name> <modifier pos:line="23" pos:column="10">*<pos:position pos:line="23" pos:column="11"/></modifier></type><name pos:line="23" pos:column="11">imap_menu<pos:position pos:line="23" pos:column="20"/></name></decl>;<pos:position pos:line="23" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">char<pos:position pos:line="24" pos:column="9"/></name> <modifier pos:line="24" pos:column="10">*<pos:position pos:line="24" pos:column="11"/></modifier></type><name pos:line="24" pos:column="11">imap_default<pos:position pos:line="24" pos:column="23"/></name></decl>;<pos:position pos:line="24" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">char<pos:position pos:line="25" pos:column="9"/></name> <modifier pos:line="25" pos:column="10">*<pos:position pos:line="25" pos:column="11"/></modifier></type><name pos:line="25" pos:column="11">imap_base<pos:position pos:line="25" pos:column="20"/></name></decl>;<pos:position pos:line="25" pos:column="21"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="27" pos:column="5">ap_configfile_t<pos:position pos:line="27" pos:column="20"/></name> <modifier pos:line="27" pos:column="21">*<pos:position pos:line="27" pos:column="22"/></modifier></type><name pos:line="27" pos:column="22">imap<pos:position pos:line="27" pos:column="26"/></name></decl>;<pos:position pos:line="27" pos:column="27"/></decl_stmt> 

    <expr_stmt><expr><name pos:line="29" pos:column="5">icr<pos:position pos:line="29" pos:column="8"/></name> <operator pos:line="29" pos:column="9">=<pos:position pos:line="29" pos:column="10"/></operator> <call><name pos:line="29" pos:column="11">ap_get_module_config<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><name><name pos:line="29" pos:column="32">r<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">-&gt;<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="35">per_dir_config<pos:position pos:line="29" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="51">&amp;<pos:position pos:line="29" pos:column="56"/></operator><name pos:line="29" pos:column="52">imap_module<pos:position pos:line="29" pos:column="63"/></name></expr></argument>)<pos:position pos:line="29" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="65"/></expr_stmt>

    <expr_stmt><expr><name pos:line="31" pos:column="5">imap_menu<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <ternary><condition><expr><name><name pos:line="31" pos:column="17">icr<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">imap_menu<pos:position pos:line="31" pos:column="31"/></name></name></expr> ?<pos:position pos:line="31" pos:column="33"/></condition><then pos:line="31" pos:column="33"> <expr><name><name pos:line="31" pos:column="34">icr<pos:position pos:line="31" pos:column="37"/></name><operator pos:line="31" pos:column="37">-&gt;<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="39">imap_menu<pos:position pos:line="31" pos:column="48"/></name></name></expr> <pos:position pos:line="31" pos:column="49"/></then><else pos:line="31" pos:column="49">: <expr><name pos:line="31" pos:column="51">IMAP_MENU_DEFAULT<pos:position pos:line="31" pos:column="68"/></name></expr></else></ternary></expr>;<pos:position pos:line="31" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">imap_default<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">=<pos:position pos:line="32" pos:column="19"/></operator> <ternary><condition><expr><name><name pos:line="32" pos:column="20">icr<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">-&gt;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="25">imap_default<pos:position pos:line="32" pos:column="37"/></name></name></expr>
      ?<pos:position pos:line="33" pos:column="8"/></condition><then pos:line="33" pos:column="8">  <expr><name><name pos:line="33" pos:column="10">icr<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">imap_default<pos:position pos:line="33" pos:column="27"/></name></name></expr> <pos:position pos:line="33" pos:column="28"/></then><else pos:line="33" pos:column="28">: <expr><name pos:line="33" pos:column="30">IMAP_DEFAULT_DEFAULT<pos:position pos:line="33" pos:column="50"/></name></expr></else></ternary></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">imap_base<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <ternary><condition><expr><name><name pos:line="34" pos:column="17">icr<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">-&gt;<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="22">imap_base<pos:position pos:line="34" pos:column="31"/></name></name></expr> ?<pos:position pos:line="34" pos:column="33"/></condition><then pos:line="34" pos:column="33"> <expr><name><name pos:line="34" pos:column="34">icr<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">-&gt;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="39">imap_base<pos:position pos:line="34" pos:column="48"/></name></name></expr> <pos:position pos:line="34" pos:column="49"/></then><else pos:line="34" pos:column="49">: <expr><name pos:line="34" pos:column="51">IMAP_BASE_DEFAULT<pos:position pos:line="34" pos:column="68"/></name></expr></else></ternary></expr>;<pos:position pos:line="34" pos:column="69"/></expr_stmt>

    <expr_stmt><expr><name pos:line="36" pos:column="5">status<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <call><name pos:line="36" pos:column="14">ap_pcfg_openfile<pos:position pos:line="36" pos:column="30"/></name><argument_list pos:line="36" pos:column="30">(<argument><expr><operator pos:line="36" pos:column="31">&amp;<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="32">imap<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="38">r<pos:position pos:line="36" pos:column="39"/></name><operator pos:line="36" pos:column="39">-&gt;<pos:position pos:line="36" pos:column="44"/></operator><name pos:line="36" pos:column="41">pool<pos:position pos:line="36" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="47">r<pos:position pos:line="36" pos:column="48"/></name><operator pos:line="36" pos:column="48">-&gt;<pos:position pos:line="36" pos:column="53"/></operator><name pos:line="36" pos:column="50">filename<pos:position pos:line="36" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">status<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">!=<pos:position pos:line="38" pos:column="18"/></operator> <name pos:line="38" pos:column="19">APR_SUCCESS<pos:position pos:line="38" pos:column="30"/></name></expr>)<pos:position pos:line="38" pos:column="31"/></condition><then pos:line="38" pos:column="31"> <block pos:line="38" pos:column="32">{
        <return pos:line="39" pos:column="9">return <expr><name pos:line="39" pos:column="16">HTTP_NOT_FOUND<pos:position pos:line="39" pos:column="30"/></name></expr>;<pos:position pos:line="39" pos:column="31"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="42" pos:column="5">base<pos:position pos:line="42" pos:column="9"/></name> <operator pos:line="42" pos:column="10">=<pos:position pos:line="42" pos:column="11"/></operator> <call><name pos:line="42" pos:column="12">imap_url<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">(<argument><expr><name pos:line="42" pos:column="21">r<pos:position pos:line="42" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="24">NULL<pos:position pos:line="42" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="30">imap_base<pos:position pos:line="42" pos:column="39"/></name></expr></argument>)<pos:position pos:line="42" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt>         <comment type="block" pos:line="42" pos:column="50">/* set base according
                                                    to default */</comment>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">!<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">base<pos:position pos:line="44" pos:column="14"/></name></expr>)<pos:position pos:line="44" pos:column="15"/></condition><then pos:line="44" pos:column="15"> <block pos:line="44" pos:column="16">{
	<return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="45" pos:column="42"/></name></expr>;<pos:position pos:line="45" pos:column="43"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="47" pos:column="5">mapdflt<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <call><name pos:line="47" pos:column="15">imap_url<pos:position pos:line="47" pos:column="23"/></name><argument_list pos:line="47" pos:column="23">(<argument><expr><name pos:line="47" pos:column="24">r<pos:position pos:line="47" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="27">NULL<pos:position pos:line="47" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="33">imap_default<pos:position pos:line="47" pos:column="45"/></name></expr></argument>)<pos:position pos:line="47" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="47"/></expr_stmt>   <comment type="block" pos:line="47" pos:column="50">/* and default to
                                                    global default */</comment>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><operator pos:line="49" pos:column="9">!<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">mapdflt<pos:position pos:line="49" pos:column="17"/></name></expr>)<pos:position pos:line="49" pos:column="18"/></condition><then pos:line="49" pos:column="18"> <block pos:line="49" pos:column="19">{
	<return pos:line="50" pos:column="9">return <expr><name pos:line="50" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="50" pos:column="42"/></name></expr>;<pos:position pos:line="50" pos:column="43"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="53" pos:column="5">testpoint<pos:position pos:line="53" pos:column="14"/></name><index pos:line="53" pos:column="14">[<expr><name pos:line="53" pos:column="15">X<pos:position pos:line="53" pos:column="16"/></name></expr>]<pos:position pos:line="53" pos:column="17"/></index></name> <operator pos:line="53" pos:column="18">=<pos:position pos:line="53" pos:column="19"/></operator> <call><name pos:line="53" pos:column="20">get_x_coord<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><name><name pos:line="53" pos:column="32">r<pos:position pos:line="53" pos:column="33"/></name><operator pos:line="53" pos:column="33">-&gt;<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="35">args<pos:position pos:line="53" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="54" pos:column="5">testpoint<pos:position pos:line="54" pos:column="14"/></name><index pos:line="54" pos:column="14">[<expr><name pos:line="54" pos:column="15">Y<pos:position pos:line="54" pos:column="16"/></name></expr>]<pos:position pos:line="54" pos:column="17"/></index></name> <operator pos:line="54" pos:column="18">=<pos:position pos:line="54" pos:column="19"/></operator> <call><name pos:line="54" pos:column="20">get_y_coord<pos:position pos:line="54" pos:column="31"/></name><argument_list pos:line="54" pos:column="31">(<argument><expr><name><name pos:line="54" pos:column="32">r<pos:position pos:line="54" pos:column="33"/></name><operator pos:line="54" pos:column="33">-&gt;<pos:position pos:line="54" pos:column="38"/></operator><name pos:line="54" pos:column="35">args<pos:position pos:line="54" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="41"/></expr_stmt>

    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><operator pos:line="56" pos:column="9">(<pos:position pos:line="56" pos:column="10"/></operator><name><name pos:line="56" pos:column="10">testpoint<pos:position pos:line="56" pos:column="19"/></name><index pos:line="56" pos:column="19">[<expr><name pos:line="56" pos:column="20">X<pos:position pos:line="56" pos:column="21"/></name></expr>]<pos:position pos:line="56" pos:column="22"/></index></name> <operator pos:line="56" pos:column="23">==<pos:position pos:line="56" pos:column="25"/></operator> <operator pos:line="56" pos:column="26">-<pos:position pos:line="56" pos:column="27"/></operator><literal type="number" pos:line="56" pos:column="27">1<pos:position pos:line="56" pos:column="28"/></literal> <operator pos:line="56" pos:column="29">||<pos:position pos:line="56" pos:column="31"/></operator> <name><name pos:line="56" pos:column="32">testpoint<pos:position pos:line="56" pos:column="41"/></name><index pos:line="56" pos:column="41">[<expr><name pos:line="56" pos:column="42">Y<pos:position pos:line="56" pos:column="43"/></name></expr>]<pos:position pos:line="56" pos:column="44"/></index></name> <operator pos:line="56" pos:column="45">==<pos:position pos:line="56" pos:column="47"/></operator> <operator pos:line="56" pos:column="48">-<pos:position pos:line="56" pos:column="49"/></operator><literal type="number" pos:line="56" pos:column="49">1<pos:position pos:line="56" pos:column="50"/></literal><operator pos:line="56" pos:column="50">)<pos:position pos:line="56" pos:column="51"/></operator> <operator pos:line="56" pos:column="52">||<pos:position pos:line="56" pos:column="54"/></operator>
        <operator pos:line="57" pos:column="9">(<pos:position pos:line="57" pos:column="10"/></operator><name><name pos:line="57" pos:column="10">testpoint<pos:position pos:line="57" pos:column="19"/></name><index pos:line="57" pos:column="19">[<expr><name pos:line="57" pos:column="20">X<pos:position pos:line="57" pos:column="21"/></name></expr>]<pos:position pos:line="57" pos:column="22"/></index></name> <operator pos:line="57" pos:column="23">==<pos:position pos:line="57" pos:column="25"/></operator> <literal type="number" pos:line="57" pos:column="26">0<pos:position pos:line="57" pos:column="27"/></literal> <operator pos:line="57" pos:column="28">&amp;&amp;<pos:position pos:line="57" pos:column="38"/></operator> <name><name pos:line="57" pos:column="31">testpoint<pos:position pos:line="57" pos:column="40"/></name><index pos:line="57" pos:column="40">[<expr><name pos:line="57" pos:column="41">Y<pos:position pos:line="57" pos:column="42"/></name></expr>]<pos:position pos:line="57" pos:column="43"/></index></name> <operator pos:line="57" pos:column="44">==<pos:position pos:line="57" pos:column="46"/></operator> <literal type="number" pos:line="57" pos:column="47">0<pos:position pos:line="57" pos:column="48"/></literal><operator pos:line="57" pos:column="48">)<pos:position pos:line="57" pos:column="49"/></operator></expr>)<pos:position pos:line="57" pos:column="50"/></condition><then pos:line="57" pos:column="50"> <block pos:line="57" pos:column="51">{
        <comment type="block" pos:line="58" pos:column="9">/* if either is -1 or if both are zero (new Lynx) */</comment>
        <comment type="block" pos:line="59" pos:column="9">/* we don't have valid coordinates */</comment>
        <expr_stmt><expr><name><name pos:line="60" pos:column="9">testpoint<pos:position pos:line="60" pos:column="18"/></name><index pos:line="60" pos:column="18">[<expr><name pos:line="60" pos:column="19">X<pos:position pos:line="60" pos:column="20"/></name></expr>]<pos:position pos:line="60" pos:column="21"/></index></name> <operator pos:line="60" pos:column="22">=<pos:position pos:line="60" pos:column="23"/></operator> <operator pos:line="60" pos:column="24">-<pos:position pos:line="60" pos:column="25"/></operator><literal type="number" pos:line="60" pos:column="25">1<pos:position pos:line="60" pos:column="26"/></literal></expr>;<pos:position pos:line="60" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">testpoint<pos:position pos:line="61" pos:column="18"/></name><index pos:line="61" pos:column="18">[<expr><name pos:line="61" pos:column="19">Y<pos:position pos:line="61" pos:column="20"/></name></expr>]<pos:position pos:line="61" pos:column="21"/></index></name> <operator pos:line="61" pos:column="22">=<pos:position pos:line="61" pos:column="23"/></operator> <operator pos:line="61" pos:column="24">-<pos:position pos:line="61" pos:column="25"/></operator><literal type="number" pos:line="61" pos:column="25">1<pos:position pos:line="61" pos:column="26"/></literal></expr>;<pos:position pos:line="61" pos:column="27"/></expr_stmt>
        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><call><name pos:line="62" pos:column="13">strncasecmp<pos:position pos:line="62" pos:column="24"/></name><argument_list pos:line="62" pos:column="24">(<argument><expr><name pos:line="62" pos:column="25">imap_menu<pos:position pos:line="62" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="36">"none"<pos:position pos:line="62" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="44">2<pos:position pos:line="62" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="47"/></condition><then pos:line="62" pos:column="47"> <block pos:line="62" pos:column="48">{
            <expr_stmt><expr><name pos:line="63" pos:column="13">showmenu<pos:position pos:line="63" pos:column="21"/></name> <operator pos:line="63" pos:column="22">=<pos:position pos:line="63" pos:column="23"/></operator> <literal type="number" pos:line="63" pos:column="24">1<pos:position pos:line="63" pos:column="25"/></literal></expr>;<pos:position pos:line="63" pos:column="26"/></expr_stmt>       <comment type="block" pos:line="63" pos:column="33">/* show the menu _unless_ ImapMenu is
                                   'none' or 'no' */</comment>
	}<pos:position pos:line="65" pos:column="10"/></block></then></if>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>

    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name pos:line="68" pos:column="9">showmenu<pos:position pos:line="68" pos:column="17"/></name></expr>)<pos:position pos:line="68" pos:column="18"/></condition><then pos:line="68" pos:column="18"> <block pos:line="68" pos:column="19">{             <comment type="block" pos:line="68" pos:column="33">/* send start of imagemap menu if
                                   we're going to */</comment>
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">menu_header<pos:position pos:line="70" pos:column="20"/></name><argument_list pos:line="70" pos:column="20">(<argument><expr><name pos:line="70" pos:column="21">r<pos:position pos:line="70" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="24">imap_menu<pos:position pos:line="70" pos:column="33"/></name></expr></argument>)<pos:position pos:line="70" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>

    <while pos:line="73" pos:column="5">while <condition pos:line="73" pos:column="11">(<expr><operator pos:line="73" pos:column="12">!<pos:position pos:line="73" pos:column="13"/></operator><call><name pos:line="73" pos:column="13">ap_cfg_getline<pos:position pos:line="73" pos:column="27"/></name><argument_list pos:line="73" pos:column="27">(<argument><expr><name pos:line="73" pos:column="28">input<pos:position pos:line="73" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="35">sizeof<argument_list pos:line="73" pos:column="41">(<argument><expr><name pos:line="73" pos:column="42">input<pos:position pos:line="73" pos:column="47"/></name></expr></argument>)<pos:position pos:line="73" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="73" pos:column="50">imap<pos:position pos:line="73" pos:column="54"/></name></expr></argument>)<pos:position pos:line="73" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="73" pos:column="56"/></condition> <block pos:line="73" pos:column="57">{
        <if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><operator pos:line="74" pos:column="13">!<pos:position pos:line="74" pos:column="14"/></operator><name><name pos:line="74" pos:column="14">input<pos:position pos:line="74" pos:column="19"/></name><index pos:line="74" pos:column="19">[<expr><literal type="number" pos:line="74" pos:column="20">0<pos:position pos:line="74" pos:column="21"/></literal></expr>]<pos:position pos:line="74" pos:column="22"/></index></name></expr>)<pos:position pos:line="74" pos:column="23"/></condition><then pos:line="74" pos:column="23"> <block pos:line="74" pos:column="24">{
            <if pos:line="75" pos:column="13">if <condition pos:line="75" pos:column="16">(<expr><name pos:line="75" pos:column="17">showmenu<pos:position pos:line="75" pos:column="25"/></name></expr>)<pos:position pos:line="75" pos:column="26"/></condition><then pos:line="75" pos:column="26"> <block pos:line="75" pos:column="27">{
                <expr_stmt><expr><call><name pos:line="76" pos:column="17">menu_blank<pos:position pos:line="76" pos:column="27"/></name><argument_list pos:line="76" pos:column="27">(<argument><expr><name pos:line="76" pos:column="28">r<pos:position pos:line="76" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="31">imap_menu<pos:position pos:line="76" pos:column="40"/></name></expr></argument>)<pos:position pos:line="76" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="77" pos:column="14"/></block></then></if>
            <continue pos:line="78" pos:column="13">continue;<pos:position pos:line="78" pos:column="22"/></continue>
        }<pos:position pos:line="79" pos:column="10"/></block></then></if>

        <if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><name><name pos:line="81" pos:column="13">input<pos:position pos:line="81" pos:column="18"/></name><index pos:line="81" pos:column="18">[<expr><literal type="number" pos:line="81" pos:column="19">0<pos:position pos:line="81" pos:column="20"/></literal></expr>]<pos:position pos:line="81" pos:column="21"/></index></name> <operator pos:line="81" pos:column="22">==<pos:position pos:line="81" pos:column="24"/></operator> <literal type="char" pos:line="81" pos:column="25">'#'<pos:position pos:line="81" pos:column="28"/></literal></expr>)<pos:position pos:line="81" pos:column="29"/></condition><then pos:line="81" pos:column="29"> <block pos:line="81" pos:column="30">{
            <if pos:line="82" pos:column="13">if <condition pos:line="82" pos:column="16">(<expr><name pos:line="82" pos:column="17">showmenu<pos:position pos:line="82" pos:column="25"/></name></expr>)<pos:position pos:line="82" pos:column="26"/></condition><then pos:line="82" pos:column="26"> <block pos:line="82" pos:column="27">{
                <expr_stmt><expr><call><name pos:line="83" pos:column="17">menu_comment<pos:position pos:line="83" pos:column="29"/></name><argument_list pos:line="83" pos:column="29">(<argument><expr><name pos:line="83" pos:column="30">r<pos:position pos:line="83" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="33">imap_menu<pos:position pos:line="83" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="44">input<pos:position pos:line="83" pos:column="49"/></name> <operator pos:line="83" pos:column="50">+<pos:position pos:line="83" pos:column="51"/></operator> <literal type="number" pos:line="83" pos:column="52">1<pos:position pos:line="83" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="55"/></expr_stmt>
            }<pos:position pos:line="84" pos:column="14"/></block></then></if>
            <continue pos:line="85" pos:column="13">continue;<pos:position pos:line="85" pos:column="22"/></continue>
        }<pos:position pos:line="86" pos:column="10"/></block></then></if>                       <comment type="block" pos:line="86" pos:column="33">/* blank lines and comments are ignored
                                   if we aren't printing a menu */</comment>

	<comment type="block" pos:line="89" pos:column="9">/* find the first two space delimited fields, recall that
	 * ap_cfg_getline has removed leading/trailing whitespace.
	 *
	 * note that we're tokenizing as we go... if we were to use the
	 * ap_getword() class of functions we would end up allocating extra
	 * memory for every line of the map file
	 */</comment>
        <expr_stmt><expr><name pos:line="96" pos:column="9">string_pos<pos:position pos:line="96" pos:column="19"/></name> <operator pos:line="96" pos:column="20">=<pos:position pos:line="96" pos:column="21"/></operator> <name pos:line="96" pos:column="22">input<pos:position pos:line="96" pos:column="27"/></name></expr>;<pos:position pos:line="96" pos:column="28"/></expr_stmt>
	<if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><operator pos:line="97" pos:column="13">!<pos:position pos:line="97" pos:column="14"/></operator><operator pos:line="97" pos:column="14">*<pos:position pos:line="97" pos:column="15"/></operator><name pos:line="97" pos:column="15">string_pos<pos:position pos:line="97" pos:column="25"/></name></expr>)<pos:position pos:line="97" pos:column="26"/></condition><then pos:line="97" pos:column="26"> <block pos:line="97" pos:column="27">{		<comment type="block" pos:line="97" pos:column="41">/* need at least two fields */</comment>
	    <goto pos:line="98" pos:column="13">goto <name pos:line="98" pos:column="18">need_2_fields<pos:position pos:line="98" pos:column="31"/></name>;<pos:position pos:line="98" pos:column="32"/></goto>
	}<pos:position pos:line="99" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="101" pos:column="9">directive<pos:position pos:line="101" pos:column="18"/></name> <operator pos:line="101" pos:column="19">=<pos:position pos:line="101" pos:column="20"/></operator> <name pos:line="101" pos:column="21">string_pos<pos:position pos:line="101" pos:column="31"/></name></expr>;<pos:position pos:line="101" pos:column="32"/></expr_stmt>
	<while pos:line="102" pos:column="9">while <condition pos:line="102" pos:column="15">(<expr><operator pos:line="102" pos:column="16">*<pos:position pos:line="102" pos:column="17"/></operator><name pos:line="102" pos:column="17">string_pos<pos:position pos:line="102" pos:column="27"/></name> <operator pos:line="102" pos:column="28">&amp;&amp;<pos:position pos:line="102" pos:column="38"/></operator> <operator pos:line="102" pos:column="31">!<pos:position pos:line="102" pos:column="32"/></operator><call><name pos:line="102" pos:column="32">apr_isspace<pos:position pos:line="102" pos:column="43"/></name><argument_list pos:line="102" pos:column="43">(<argument><expr><operator pos:line="102" pos:column="44">*<pos:position pos:line="102" pos:column="45"/></operator><name pos:line="102" pos:column="45">string_pos<pos:position pos:line="102" pos:column="55"/></name></expr></argument>)<pos:position pos:line="102" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="102" pos:column="57"/></condition> <block pos:line="102" pos:column="58">{	<comment type="block" pos:line="102" pos:column="65">/* past directive */</comment>
	    <expr_stmt><expr><operator pos:line="103" pos:column="13">++<pos:position pos:line="103" pos:column="15"/></operator><name pos:line="103" pos:column="15">string_pos<pos:position pos:line="103" pos:column="25"/></name></expr>;<pos:position pos:line="103" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="104" pos:column="10"/></block></while>
	<if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><operator pos:line="105" pos:column="13">!<pos:position pos:line="105" pos:column="14"/></operator><operator pos:line="105" pos:column="14">*<pos:position pos:line="105" pos:column="15"/></operator><name pos:line="105" pos:column="15">string_pos<pos:position pos:line="105" pos:column="25"/></name></expr>)<pos:position pos:line="105" pos:column="26"/></condition><then pos:line="105" pos:column="26"> <block pos:line="105" pos:column="27">{		<comment type="block" pos:line="105" pos:column="41">/* need at least two fields */</comment>
	    <goto pos:line="106" pos:column="13">goto <name pos:line="106" pos:column="18">need_2_fields<pos:position pos:line="106" pos:column="31"/></name>;<pos:position pos:line="106" pos:column="32"/></goto>
	}<pos:position pos:line="107" pos:column="10"/></block></then></if>
	<expr_stmt><expr><operator pos:line="108" pos:column="9">*<pos:position pos:line="108" pos:column="10"/></operator><name pos:line="108" pos:column="10">string_pos<pos:position pos:line="108" pos:column="20"/></name><operator pos:line="108" pos:column="20">++<pos:position pos:line="108" pos:column="22"/></operator> <operator pos:line="108" pos:column="23">=<pos:position pos:line="108" pos:column="24"/></operator> <literal type="char" pos:line="108" pos:column="25">'\0'<pos:position pos:line="108" pos:column="29"/></literal></expr>;<pos:position pos:line="108" pos:column="30"/></expr_stmt>

	<if pos:line="110" pos:column="9">if <condition pos:line="110" pos:column="12">(<expr><operator pos:line="110" pos:column="13">!<pos:position pos:line="110" pos:column="14"/></operator><operator pos:line="110" pos:column="14">*<pos:position pos:line="110" pos:column="15"/></operator><name pos:line="110" pos:column="15">string_pos<pos:position pos:line="110" pos:column="25"/></name></expr>)<pos:position pos:line="110" pos:column="26"/></condition><then pos:line="110" pos:column="26"> <block pos:line="110" pos:column="27">{		<comment type="block" pos:line="110" pos:column="41">/* need at least two fields */</comment>
	    <goto pos:line="111" pos:column="13">goto <name pos:line="111" pos:column="18">need_2_fields<pos:position pos:line="111" pos:column="31"/></name>;<pos:position pos:line="111" pos:column="32"/></goto>
	}<pos:position pos:line="112" pos:column="10"/></block></then></if>
	<while pos:line="113" pos:column="9">while<condition pos:line="113" pos:column="14">(<expr><operator pos:line="113" pos:column="15">*<pos:position pos:line="113" pos:column="16"/></operator><name pos:line="113" pos:column="16">string_pos<pos:position pos:line="113" pos:column="26"/></name> <operator pos:line="113" pos:column="27">&amp;&amp;<pos:position pos:line="113" pos:column="37"/></operator> <call><name pos:line="113" pos:column="30">apr_isspace<pos:position pos:line="113" pos:column="41"/></name><argument_list pos:line="113" pos:column="41">(<argument><expr><operator pos:line="113" pos:column="42">*<pos:position pos:line="113" pos:column="43"/></operator><name pos:line="113" pos:column="43">string_pos<pos:position pos:line="113" pos:column="53"/></name></expr></argument>)<pos:position pos:line="113" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="113" pos:column="55"/></condition> <block pos:line="113" pos:column="56">{ <comment type="block" pos:line="113" pos:column="58">/* past whitespace */</comment>
	    <expr_stmt><expr><operator pos:line="114" pos:column="13">++<pos:position pos:line="114" pos:column="15"/></operator><name pos:line="114" pos:column="15">string_pos<pos:position pos:line="114" pos:column="25"/></name></expr>;<pos:position pos:line="114" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="115" pos:column="10"/></block></while>

	<expr_stmt><expr><name pos:line="117" pos:column="9">value<pos:position pos:line="117" pos:column="14"/></name> <operator pos:line="117" pos:column="15">=<pos:position pos:line="117" pos:column="16"/></operator> <name pos:line="117" pos:column="17">string_pos<pos:position pos:line="117" pos:column="27"/></name></expr>;<pos:position pos:line="117" pos:column="28"/></expr_stmt>
	<while pos:line="118" pos:column="9">while <condition pos:line="118" pos:column="15">(<expr><operator pos:line="118" pos:column="16">*<pos:position pos:line="118" pos:column="17"/></operator><name pos:line="118" pos:column="17">string_pos<pos:position pos:line="118" pos:column="27"/></name> <operator pos:line="118" pos:column="28">&amp;&amp;<pos:position pos:line="118" pos:column="38"/></operator> <operator pos:line="118" pos:column="31">!<pos:position pos:line="118" pos:column="32"/></operator><call><name pos:line="118" pos:column="32">apr_isspace<pos:position pos:line="118" pos:column="43"/></name><argument_list pos:line="118" pos:column="43">(<argument><expr><operator pos:line="118" pos:column="44">*<pos:position pos:line="118" pos:column="45"/></operator><name pos:line="118" pos:column="45">string_pos<pos:position pos:line="118" pos:column="55"/></name></expr></argument>)<pos:position pos:line="118" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="118" pos:column="57"/></condition> <block pos:line="118" pos:column="58">{	<comment type="block" pos:line="118" pos:column="65">/* past value */</comment>
	    <expr_stmt><expr><operator pos:line="119" pos:column="13">++<pos:position pos:line="119" pos:column="15"/></operator><name pos:line="119" pos:column="15">string_pos<pos:position pos:line="119" pos:column="25"/></name></expr>;<pos:position pos:line="119" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="120" pos:column="10"/></block></while>
	<if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><call><name pos:line="121" pos:column="13">apr_isspace<pos:position pos:line="121" pos:column="24"/></name><argument_list pos:line="121" pos:column="24">(<argument><expr><operator pos:line="121" pos:column="25">*<pos:position pos:line="121" pos:column="26"/></operator><name pos:line="121" pos:column="26">string_pos<pos:position pos:line="121" pos:column="36"/></name></expr></argument>)<pos:position pos:line="121" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="121" pos:column="38"/></condition><then pos:line="121" pos:column="38"> <block pos:line="121" pos:column="39">{
	    <expr_stmt><expr><operator pos:line="122" pos:column="13">*<pos:position pos:line="122" pos:column="14"/></operator><name pos:line="122" pos:column="14">string_pos<pos:position pos:line="122" pos:column="24"/></name><operator pos:line="122" pos:column="24">++<pos:position pos:line="122" pos:column="26"/></operator> <operator pos:line="122" pos:column="27">=<pos:position pos:line="122" pos:column="28"/></operator> <literal type="char" pos:line="122" pos:column="29">'\0'<pos:position pos:line="122" pos:column="33"/></literal></expr>;<pos:position pos:line="122" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="123" pos:column="10"/></block></then>
	<else pos:line="124" pos:column="9">else <block pos:line="124" pos:column="14">{
	    <comment type="block" pos:line="125" pos:column="13">/* end of input, don't advance past it */</comment>
	    <expr_stmt><expr><operator pos:line="126" pos:column="13">*<pos:position pos:line="126" pos:column="14"/></operator><name pos:line="126" pos:column="14">string_pos<pos:position pos:line="126" pos:column="24"/></name> <operator pos:line="126" pos:column="25">=<pos:position pos:line="126" pos:column="26"/></operator> <literal type="char" pos:line="126" pos:column="27">'\0'<pos:position pos:line="126" pos:column="31"/></literal></expr>;<pos:position pos:line="126" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="127" pos:column="10"/></block></else></if>

        <if pos:line="129" pos:column="9">if <condition pos:line="129" pos:column="12">(<expr><operator pos:line="129" pos:column="13">!<pos:position pos:line="129" pos:column="14"/></operator><call><name pos:line="129" pos:column="14">strncasecmp<pos:position pos:line="129" pos:column="25"/></name><argument_list pos:line="129" pos:column="25">(<argument><expr><name pos:line="129" pos:column="26">directive<pos:position pos:line="129" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="129" pos:column="37">"base"<pos:position pos:line="129" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="45">4<pos:position pos:line="129" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="129" pos:column="48"/></condition><then pos:line="129" pos:column="48"> <block pos:line="129" pos:column="49">{       <comment type="block" pos:line="129" pos:column="57">/* base, base_uri */</comment>
            <expr_stmt><expr><name pos:line="130" pos:column="13">base<pos:position pos:line="130" pos:column="17"/></name> <operator pos:line="130" pos:column="18">=<pos:position pos:line="130" pos:column="19"/></operator> <call><name pos:line="130" pos:column="20">imap_url<pos:position pos:line="130" pos:column="28"/></name><argument_list pos:line="130" pos:column="28">(<argument><expr><name pos:line="130" pos:column="29">r<pos:position pos:line="130" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="32">NULL<pos:position pos:line="130" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="38">value<pos:position pos:line="130" pos:column="43"/></name></expr></argument>)<pos:position pos:line="130" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="45"/></expr_stmt>
	    <if pos:line="131" pos:column="13">if <condition pos:line="131" pos:column="16">(<expr><operator pos:line="131" pos:column="17">!<pos:position pos:line="131" pos:column="18"/></operator><name pos:line="131" pos:column="18">base<pos:position pos:line="131" pos:column="22"/></name></expr>)<pos:position pos:line="131" pos:column="23"/></condition><then pos:line="131" pos:column="23"> <block pos:line="131" pos:column="24">{
		<goto pos:line="132" pos:column="17">goto <name pos:line="132" pos:column="22">menu_bail<pos:position pos:line="132" pos:column="31"/></name>;<pos:position pos:line="132" pos:column="32"/></goto>
	    }<pos:position pos:line="133" pos:column="14"/></block></then></if>
            <continue pos:line="134" pos:column="13">continue;<pos:position pos:line="134" pos:column="22"/></continue>           <comment type="block" pos:line="134" pos:column="33">/* base is never printed to a menu */</comment>
        }<pos:position pos:line="135" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="137" pos:column="9">read_quoted<pos:position pos:line="137" pos:column="20"/></name><argument_list pos:line="137" pos:column="20">(<argument><expr><operator pos:line="137" pos:column="21">&amp;<pos:position pos:line="137" pos:column="26"/></operator><name pos:line="137" pos:column="22">string_pos<pos:position pos:line="137" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="137" pos:column="34">&amp;<pos:position pos:line="137" pos:column="39"/></operator><name pos:line="137" pos:column="35">href_text<pos:position pos:line="137" pos:column="44"/></name></expr></argument>)<pos:position pos:line="137" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="46"/></expr_stmt>

        <if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><operator pos:line="139" pos:column="13">!<pos:position pos:line="139" pos:column="14"/></operator><call><name pos:line="139" pos:column="14">strcasecmp<pos:position pos:line="139" pos:column="24"/></name><argument_list pos:line="139" pos:column="24">(<argument><expr><name pos:line="139" pos:column="25">directive<pos:position pos:line="139" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="36">"default"<pos:position pos:line="139" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="139" pos:column="47"/></condition><then pos:line="139" pos:column="47"> <block pos:line="139" pos:column="48">{        <comment type="block" pos:line="139" pos:column="57">/* default */</comment>
            <expr_stmt><expr><name pos:line="140" pos:column="13">mapdflt<pos:position pos:line="140" pos:column="20"/></name> <operator pos:line="140" pos:column="21">=<pos:position pos:line="140" pos:column="22"/></operator> <call><name pos:line="140" pos:column="23">imap_url<pos:position pos:line="140" pos:column="31"/></name><argument_list pos:line="140" pos:column="31">(<argument><expr><name pos:line="140" pos:column="32">r<pos:position pos:line="140" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="35">NULL<pos:position pos:line="140" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="41">value<pos:position pos:line="140" pos:column="46"/></name></expr></argument>)<pos:position pos:line="140" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="48"/></expr_stmt>
	    <if pos:line="141" pos:column="13">if <condition pos:line="141" pos:column="16">(<expr><operator pos:line="141" pos:column="17">!<pos:position pos:line="141" pos:column="18"/></operator><name pos:line="141" pos:column="18">mapdflt<pos:position pos:line="141" pos:column="25"/></name></expr>)<pos:position pos:line="141" pos:column="26"/></condition><then pos:line="141" pos:column="26"> <block pos:line="141" pos:column="27">{
		<goto pos:line="142" pos:column="17">goto <name pos:line="142" pos:column="22">menu_bail<pos:position pos:line="142" pos:column="31"/></name>;<pos:position pos:line="142" pos:column="32"/></goto>
	    }<pos:position pos:line="143" pos:column="14"/></block></then></if>
            <if pos:line="144" pos:column="13">if <condition pos:line="144" pos:column="16">(<expr><name pos:line="144" pos:column="17">showmenu<pos:position pos:line="144" pos:column="25"/></name></expr>)<pos:position pos:line="144" pos:column="26"/></condition><then pos:line="144" pos:column="26"> <block pos:line="144" pos:column="27">{     <comment type="block" pos:line="144" pos:column="33">/* print the default if there's a menu */</comment>
                <expr_stmt><expr><name pos:line="145" pos:column="17">redirect<pos:position pos:line="145" pos:column="25"/></name> <operator pos:line="145" pos:column="26">=<pos:position pos:line="145" pos:column="27"/></operator> <call><name pos:line="145" pos:column="28">imap_url<pos:position pos:line="145" pos:column="36"/></name><argument_list pos:line="145" pos:column="36">(<argument><expr><name pos:line="145" pos:column="37">r<pos:position pos:line="145" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="40">base<pos:position pos:line="145" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="46">mapdflt<pos:position pos:line="145" pos:column="53"/></name></expr></argument>)<pos:position pos:line="145" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="55"/></expr_stmt>
		<if pos:line="146" pos:column="17">if <condition pos:line="146" pos:column="20">(<expr><operator pos:line="146" pos:column="21">!<pos:position pos:line="146" pos:column="22"/></operator><name pos:line="146" pos:column="22">redirect<pos:position pos:line="146" pos:column="30"/></name></expr>)<pos:position pos:line="146" pos:column="31"/></condition><then pos:line="146" pos:column="31"> <block pos:line="146" pos:column="32">{
		    <goto pos:line="147" pos:column="21">goto <name pos:line="147" pos:column="26">menu_bail<pos:position pos:line="147" pos:column="35"/></name>;<pos:position pos:line="147" pos:column="36"/></goto>
		}<pos:position pos:line="148" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="149" pos:column="17">menu_default<pos:position pos:line="149" pos:column="29"/></name><argument_list pos:line="149" pos:column="29">(<argument><expr><name pos:line="149" pos:column="30">r<pos:position pos:line="149" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="33">imap_menu<pos:position pos:line="149" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="44">redirect<pos:position pos:line="149" pos:column="52"/></name></expr></argument>,
                             <argument><expr><ternary><condition><expr><name pos:line="150" pos:column="30">href_text<pos:position pos:line="150" pos:column="39"/></name></expr> ?<pos:position pos:line="150" pos:column="41"/></condition><then pos:line="150" pos:column="41"> <expr><name pos:line="150" pos:column="42">href_text<pos:position pos:line="150" pos:column="51"/></name></expr> <pos:position pos:line="150" pos:column="52"/></then><else pos:line="150" pos:column="52">: <expr><name pos:line="150" pos:column="54">mapdflt<pos:position pos:line="150" pos:column="61"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="150" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="63"/></expr_stmt>
            }<pos:position pos:line="151" pos:column="14"/></block></then></if>
            <continue pos:line="152" pos:column="13">continue;<pos:position pos:line="152" pos:column="22"/></continue>
        }<pos:position pos:line="153" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="155" pos:column="9">vertex<pos:position pos:line="155" pos:column="15"/></name> <operator pos:line="155" pos:column="16">=<pos:position pos:line="155" pos:column="17"/></operator> <literal type="number" pos:line="155" pos:column="18">0<pos:position pos:line="155" pos:column="19"/></literal></expr>;<pos:position pos:line="155" pos:column="20"/></expr_stmt>
        <while pos:line="156" pos:column="9">while <condition pos:line="156" pos:column="15">(<expr><name pos:line="156" pos:column="16">vertex<pos:position pos:line="156" pos:column="22"/></name> <operator pos:line="156" pos:column="23">&lt;<pos:position pos:line="156" pos:column="27"/></operator> <name pos:line="156" pos:column="25">MAXVERTS<pos:position pos:line="156" pos:column="33"/></name> <operator pos:line="156" pos:column="34">&amp;&amp;<pos:position pos:line="156" pos:column="44"/></operator>
               <call><name pos:line="157" pos:column="16">sscanf<pos:position pos:line="157" pos:column="22"/></name><argument_list pos:line="157" pos:column="22">(<argument><expr><name pos:line="157" pos:column="23">string_pos<pos:position pos:line="157" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="35">"%lf%*[, ]%lf"<pos:position pos:line="157" pos:column="49"/></literal></expr></argument>,
                      <argument><expr><operator pos:line="158" pos:column="23">&amp;<pos:position pos:line="158" pos:column="28"/></operator><name><name pos:line="158" pos:column="24">pointarray<pos:position pos:line="158" pos:column="34"/></name><index pos:line="158" pos:column="34">[<expr><name pos:line="158" pos:column="35">vertex<pos:position pos:line="158" pos:column="41"/></name></expr>]<pos:position pos:line="158" pos:column="42"/></index><index pos:line="158" pos:column="42">[<expr><name pos:line="158" pos:column="43">X<pos:position pos:line="158" pos:column="44"/></name></expr>]<pos:position pos:line="158" pos:column="45"/></index></name></expr></argument>, <argument><expr><operator pos:line="158" pos:column="47">&amp;<pos:position pos:line="158" pos:column="52"/></operator><name><name pos:line="158" pos:column="48">pointarray<pos:position pos:line="158" pos:column="58"/></name><index pos:line="158" pos:column="58">[<expr><name pos:line="158" pos:column="59">vertex<pos:position pos:line="158" pos:column="65"/></name></expr>]<pos:position pos:line="158" pos:column="66"/></index><index pos:line="158" pos:column="66">[<expr><name pos:line="158" pos:column="67">Y<pos:position pos:line="158" pos:column="68"/></name></expr>]<pos:position pos:line="158" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="158" pos:column="70"/></argument_list></call> <operator pos:line="158" pos:column="71">==<pos:position pos:line="158" pos:column="73"/></operator> <literal type="number" pos:line="158" pos:column="74">2<pos:position pos:line="158" pos:column="75"/></literal></expr>)<pos:position pos:line="158" pos:column="76"/></condition> <block pos:line="158" pos:column="77">{
            <comment type="block" pos:line="159" pos:column="13">/* Now skip what we just read... we can't use ANSIism %n */</comment>
            <while pos:line="160" pos:column="13">while <condition pos:line="160" pos:column="19">(<expr><call><name pos:line="160" pos:column="20">apr_isspace<pos:position pos:line="160" pos:column="31"/></name><argument_list pos:line="160" pos:column="31">(<argument><expr><operator pos:line="160" pos:column="32">*<pos:position pos:line="160" pos:column="33"/></operator><name pos:line="160" pos:column="33">string_pos<pos:position pos:line="160" pos:column="43"/></name></expr></argument>)<pos:position pos:line="160" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="160" pos:column="45"/></condition> <block pos:line="160" pos:column="46">{      <comment type="block" pos:line="160" pos:column="53">/* past whitespace */</comment>
                <expr_stmt><expr><name pos:line="161" pos:column="17">string_pos<pos:position pos:line="161" pos:column="27"/></name><operator pos:line="161" pos:column="27">++<pos:position pos:line="161" pos:column="29"/></operator></expr>;<pos:position pos:line="161" pos:column="30"/></expr_stmt>
	    }<pos:position pos:line="162" pos:column="14"/></block></while>
            <while pos:line="163" pos:column="13">while <condition pos:line="163" pos:column="19">(<expr><call><name pos:line="163" pos:column="20">apr_isdigit<pos:position pos:line="163" pos:column="31"/></name><argument_list pos:line="163" pos:column="31">(<argument><expr><operator pos:line="163" pos:column="32">*<pos:position pos:line="163" pos:column="33"/></operator><name pos:line="163" pos:column="33">string_pos<pos:position pos:line="163" pos:column="43"/></name></expr></argument>)<pos:position pos:line="163" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="163" pos:column="45"/></condition> <block pos:line="163" pos:column="46">{      <comment type="block" pos:line="163" pos:column="53">/* and the 1st number */</comment>
                <expr_stmt><expr><name pos:line="164" pos:column="17">string_pos<pos:position pos:line="164" pos:column="27"/></name><operator pos:line="164" pos:column="27">++<pos:position pos:line="164" pos:column="29"/></operator></expr>;<pos:position pos:line="164" pos:column="30"/></expr_stmt>
	    }<pos:position pos:line="165" pos:column="14"/></block></while>
            <expr_stmt><expr><name pos:line="166" pos:column="13">string_pos<pos:position pos:line="166" pos:column="23"/></name><operator pos:line="166" pos:column="23">++<pos:position pos:line="166" pos:column="25"/></operator></expr>;<pos:position pos:line="166" pos:column="26"/></expr_stmt>       <comment type="block" pos:line="166" pos:column="33">/* skip the ',' */</comment>
            <while pos:line="167" pos:column="13">while <condition pos:line="167" pos:column="19">(<expr><call><name pos:line="167" pos:column="20">apr_isspace<pos:position pos:line="167" pos:column="31"/></name><argument_list pos:line="167" pos:column="31">(<argument><expr><operator pos:line="167" pos:column="32">*<pos:position pos:line="167" pos:column="33"/></operator><name pos:line="167" pos:column="33">string_pos<pos:position pos:line="167" pos:column="43"/></name></expr></argument>)<pos:position pos:line="167" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="167" pos:column="45"/></condition> <block pos:line="167" pos:column="46">{      <comment type="block" pos:line="167" pos:column="53">/* past any more whitespace */</comment>
                <expr_stmt><expr><name pos:line="168" pos:column="17">string_pos<pos:position pos:line="168" pos:column="27"/></name><operator pos:line="168" pos:column="27">++<pos:position pos:line="168" pos:column="29"/></operator></expr>;<pos:position pos:line="168" pos:column="30"/></expr_stmt>
	    }<pos:position pos:line="169" pos:column="14"/></block></while>
            <while pos:line="170" pos:column="13">while <condition pos:line="170" pos:column="19">(<expr><call><name pos:line="170" pos:column="20">apr_isdigit<pos:position pos:line="170" pos:column="31"/></name><argument_list pos:line="170" pos:column="31">(<argument><expr><operator pos:line="170" pos:column="32">*<pos:position pos:line="170" pos:column="33"/></operator><name pos:line="170" pos:column="33">string_pos<pos:position pos:line="170" pos:column="43"/></name></expr></argument>)<pos:position pos:line="170" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="170" pos:column="45"/></condition> <block pos:line="170" pos:column="46">{      <comment type="block" pos:line="170" pos:column="53">/* 2nd number */</comment>
                <expr_stmt><expr><name pos:line="171" pos:column="17">string_pos<pos:position pos:line="171" pos:column="27"/></name><operator pos:line="171" pos:column="27">++<pos:position pos:line="171" pos:column="29"/></operator></expr>;<pos:position pos:line="171" pos:column="30"/></expr_stmt>
	    }<pos:position pos:line="172" pos:column="14"/></block></while>
            <expr_stmt><expr><name pos:line="173" pos:column="13">vertex<pos:position pos:line="173" pos:column="19"/></name><operator pos:line="173" pos:column="19">++<pos:position pos:line="173" pos:column="21"/></operator></expr>;<pos:position pos:line="173" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="174" pos:column="10"/></block></while>                       <comment type="block" pos:line="174" pos:column="33">/* so long as there are more vertices to
                                   read, and we have room, read them in.
                                   We start where we left off of the last
                                   sscanf, not at the beginning. */</comment>

        <expr_stmt><expr><name><name pos:line="179" pos:column="9">pointarray<pos:position pos:line="179" pos:column="19"/></name><index pos:line="179" pos:column="19">[<expr><name pos:line="179" pos:column="20">vertex<pos:position pos:line="179" pos:column="26"/></name></expr>]<pos:position pos:line="179" pos:column="27"/></index><index pos:line="179" pos:column="27">[<expr><name pos:line="179" pos:column="28">X<pos:position pos:line="179" pos:column="29"/></name></expr>]<pos:position pos:line="179" pos:column="30"/></index></name> <operator pos:line="179" pos:column="31">=<pos:position pos:line="179" pos:column="32"/></operator> <operator pos:line="179" pos:column="33">-<pos:position pos:line="179" pos:column="34"/></operator><literal type="number" pos:line="179" pos:column="34">1<pos:position pos:line="179" pos:column="35"/></literal></expr>;<pos:position pos:line="179" pos:column="36"/></expr_stmt>     <comment type="block" pos:line="179" pos:column="41">/* signals the end of vertices */</comment>

        <if pos:line="181" pos:column="9">if <condition pos:line="181" pos:column="12">(<expr><name pos:line="181" pos:column="13">showmenu<pos:position pos:line="181" pos:column="21"/></name></expr>)<pos:position pos:line="181" pos:column="22"/></condition><then pos:line="181" pos:column="22"> <block pos:line="181" pos:column="23">{
	    <if pos:line="182" pos:column="13">if <condition pos:line="182" pos:column="16">(<expr><operator pos:line="182" pos:column="17">!<pos:position pos:line="182" pos:column="18"/></operator><name pos:line="182" pos:column="18">href_text<pos:position pos:line="182" pos:column="27"/></name></expr>)<pos:position pos:line="182" pos:column="28"/></condition><then pos:line="182" pos:column="28"> <block pos:line="182" pos:column="29">{
		<expr_stmt><expr><call><name pos:line="183" pos:column="17">read_quoted<pos:position pos:line="183" pos:column="28"/></name><argument_list pos:line="183" pos:column="28">(<argument><expr><operator pos:line="183" pos:column="29">&amp;<pos:position pos:line="183" pos:column="34"/></operator><name pos:line="183" pos:column="30">string_pos<pos:position pos:line="183" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="183" pos:column="42">&amp;<pos:position pos:line="183" pos:column="47"/></operator><name pos:line="183" pos:column="43">href_text<pos:position pos:line="183" pos:column="52"/></name></expr></argument>)<pos:position pos:line="183" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="54"/></expr_stmt>     <comment type="block" pos:line="183" pos:column="59">/* href text could
                                                             be here instead */</comment>
	    }<pos:position pos:line="185" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="186" pos:column="13">redirect<pos:position pos:line="186" pos:column="21"/></name> <operator pos:line="186" pos:column="22">=<pos:position pos:line="186" pos:column="23"/></operator> <call><name pos:line="186" pos:column="24">imap_url<pos:position pos:line="186" pos:column="32"/></name><argument_list pos:line="186" pos:column="32">(<argument><expr><name pos:line="186" pos:column="33">r<pos:position pos:line="186" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="36">base<pos:position pos:line="186" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="42">value<pos:position pos:line="186" pos:column="47"/></name></expr></argument>)<pos:position pos:line="186" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="49"/></expr_stmt>
	    <if pos:line="187" pos:column="13">if <condition pos:line="187" pos:column="16">(<expr><operator pos:line="187" pos:column="17">!<pos:position pos:line="187" pos:column="18"/></operator><name pos:line="187" pos:column="18">redirect<pos:position pos:line="187" pos:column="26"/></name></expr>)<pos:position pos:line="187" pos:column="27"/></condition><then pos:line="187" pos:column="27"> <block pos:line="187" pos:column="28">{
		<goto pos:line="188" pos:column="17">goto <name pos:line="188" pos:column="22">menu_bail<pos:position pos:line="188" pos:column="31"/></name>;<pos:position pos:line="188" pos:column="32"/></goto>
	    }<pos:position pos:line="189" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="190" pos:column="13">menu_directive<pos:position pos:line="190" pos:column="27"/></name><argument_list pos:line="190" pos:column="27">(<argument><expr><name pos:line="190" pos:column="28">r<pos:position pos:line="190" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="31">imap_menu<pos:position pos:line="190" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="42">redirect<pos:position pos:line="190" pos:column="50"/></name></expr></argument>,
                           <argument><expr><ternary><condition><expr><name pos:line="191" pos:column="28">href_text<pos:position pos:line="191" pos:column="37"/></name></expr> ?<pos:position pos:line="191" pos:column="39"/></condition><then pos:line="191" pos:column="39"> <expr><name pos:line="191" pos:column="40">href_text<pos:position pos:line="191" pos:column="49"/></name></expr> <pos:position pos:line="191" pos:column="50"/></then><else pos:line="191" pos:column="50">: <expr><name pos:line="191" pos:column="52">value<pos:position pos:line="191" pos:column="57"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="191" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="59"/></expr_stmt>
            <continue pos:line="192" pos:column="13">continue;<pos:position pos:line="192" pos:column="22"/></continue>
        }<pos:position pos:line="193" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="194" pos:column="9">/* note that we don't make it past here if we are making a menu */</comment>

        <if pos:line="196" pos:column="9">if <condition pos:line="196" pos:column="12">(<expr><name><name pos:line="196" pos:column="13">testpoint<pos:position pos:line="196" pos:column="22"/></name><index pos:line="196" pos:column="22">[<expr><name pos:line="196" pos:column="23">X<pos:position pos:line="196" pos:column="24"/></name></expr>]<pos:position pos:line="196" pos:column="25"/></index></name> <operator pos:line="196" pos:column="26">==<pos:position pos:line="196" pos:column="28"/></operator> <operator pos:line="196" pos:column="29">-<pos:position pos:line="196" pos:column="30"/></operator><literal type="number" pos:line="196" pos:column="30">1<pos:position pos:line="196" pos:column="31"/></literal> <operator pos:line="196" pos:column="32">||<pos:position pos:line="196" pos:column="34"/></operator> <name><name pos:line="196" pos:column="35">pointarray<pos:position pos:line="196" pos:column="45"/></name><index pos:line="196" pos:column="45">[<expr><literal type="number" pos:line="196" pos:column="46">0<pos:position pos:line="196" pos:column="47"/></literal></expr>]<pos:position pos:line="196" pos:column="48"/></index><index pos:line="196" pos:column="48">[<expr><name pos:line="196" pos:column="49">X<pos:position pos:line="196" pos:column="50"/></name></expr>]<pos:position pos:line="196" pos:column="51"/></index></name> <operator pos:line="196" pos:column="52">==<pos:position pos:line="196" pos:column="54"/></operator> <operator pos:line="196" pos:column="55">-<pos:position pos:line="196" pos:column="56"/></operator><literal type="number" pos:line="196" pos:column="56">1<pos:position pos:line="196" pos:column="57"/></literal></expr>)<pos:position pos:line="196" pos:column="58"/></condition><then pos:line="196" pos:column="58"> <block pos:line="196" pos:column="59">{
            <continue pos:line="197" pos:column="13">continue;<pos:position pos:line="197" pos:column="22"/></continue>           <comment type="block" pos:line="197" pos:column="33">/* don't try the following tests if testpoints
                                   are invalid, or if there are no
                                   coordinates */</comment>
	}<pos:position pos:line="200" pos:column="10"/></block></then></if>

        <if pos:line="202" pos:column="9">if <condition pos:line="202" pos:column="12">(<expr><operator pos:line="202" pos:column="13">!<pos:position pos:line="202" pos:column="14"/></operator><call><name pos:line="202" pos:column="14">strcasecmp<pos:position pos:line="202" pos:column="24"/></name><argument_list pos:line="202" pos:column="24">(<argument><expr><name pos:line="202" pos:column="25">directive<pos:position pos:line="202" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="202" pos:column="36">"poly"<pos:position pos:line="202" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="202" pos:column="44"/></condition><then pos:line="202" pos:column="44"> <block pos:line="202" pos:column="45">{   <comment type="block" pos:line="202" pos:column="49">/* poly */</comment>

            <if pos:line="204" pos:column="13">if <condition pos:line="204" pos:column="16">(<expr><call><name pos:line="204" pos:column="17">pointinpoly<pos:position pos:line="204" pos:column="28"/></name><argument_list pos:line="204" pos:column="28">(<argument><expr><name pos:line="204" pos:column="29">testpoint<pos:position pos:line="204" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="40">pointarray<pos:position pos:line="204" pos:column="50"/></name></expr></argument>)<pos:position pos:line="204" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="204" pos:column="52"/></condition><then pos:line="204" pos:column="52"> <block pos:line="204" pos:column="53">{
		<expr_stmt><expr><call><name pos:line="205" pos:column="17">ap_cfg_closefile<pos:position pos:line="205" pos:column="33"/></name><argument_list pos:line="205" pos:column="33">(<argument><expr><name pos:line="205" pos:column="34">imap<pos:position pos:line="205" pos:column="38"/></name></expr></argument>)<pos:position pos:line="205" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name pos:line="206" pos:column="17">redirect<pos:position pos:line="206" pos:column="25"/></name> <operator pos:line="206" pos:column="26">=<pos:position pos:line="206" pos:column="27"/></operator> <call><name pos:line="206" pos:column="28">imap_url<pos:position pos:line="206" pos:column="36"/></name><argument_list pos:line="206" pos:column="36">(<argument><expr><name pos:line="206" pos:column="37">r<pos:position pos:line="206" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="40">base<pos:position pos:line="206" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="46">value<pos:position pos:line="206" pos:column="51"/></name></expr></argument>)<pos:position pos:line="206" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="53"/></expr_stmt>
		<if pos:line="207" pos:column="17">if <condition pos:line="207" pos:column="20">(<expr><operator pos:line="207" pos:column="21">!<pos:position pos:line="207" pos:column="22"/></operator><name pos:line="207" pos:column="22">redirect<pos:position pos:line="207" pos:column="30"/></name></expr>)<pos:position pos:line="207" pos:column="31"/></condition><then pos:line="207" pos:column="31"> <block pos:line="207" pos:column="32">{
		    <return pos:line="208" pos:column="21">return <expr><name pos:line="208" pos:column="28">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="208" pos:column="54"/></name></expr>;<pos:position pos:line="208" pos:column="55"/></return>
		}<pos:position pos:line="209" pos:column="18"/></block></then></if>
                <return pos:line="210" pos:column="17">return <expr><operator pos:line="210" pos:column="24">(<pos:position pos:line="210" pos:column="25"/></operator><call><name pos:line="210" pos:column="25">imap_reply<pos:position pos:line="210" pos:column="35"/></name><argument_list pos:line="210" pos:column="35">(<argument><expr><name pos:line="210" pos:column="36">r<pos:position pos:line="210" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="39">redirect<pos:position pos:line="210" pos:column="47"/></name></expr></argument>)<pos:position pos:line="210" pos:column="48"/></argument_list></call><operator pos:line="210" pos:column="48">)<pos:position pos:line="210" pos:column="49"/></operator></expr>;<pos:position pos:line="210" pos:column="50"/></return>
            }<pos:position pos:line="211" pos:column="14"/></block></then></if>
            <continue pos:line="212" pos:column="13">continue;<pos:position pos:line="212" pos:column="22"/></continue>
        }<pos:position pos:line="213" pos:column="10"/></block></then></if>

        <if pos:line="215" pos:column="9">if <condition pos:line="215" pos:column="12">(<expr><operator pos:line="215" pos:column="13">!<pos:position pos:line="215" pos:column="14"/></operator><call><name pos:line="215" pos:column="14">strcasecmp<pos:position pos:line="215" pos:column="24"/></name><argument_list pos:line="215" pos:column="24">(<argument><expr><name pos:line="215" pos:column="25">directive<pos:position pos:line="215" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="215" pos:column="36">"circle"<pos:position pos:line="215" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="215" pos:column="46"/></condition><then pos:line="215" pos:column="46"> <block pos:line="215" pos:column="47">{         <comment type="block" pos:line="215" pos:column="57">/* circle */</comment>

            <if pos:line="217" pos:column="13">if <condition pos:line="217" pos:column="16">(<expr><call><name pos:line="217" pos:column="17">pointincircle<pos:position pos:line="217" pos:column="30"/></name><argument_list pos:line="217" pos:column="30">(<argument><expr><name pos:line="217" pos:column="31">testpoint<pos:position pos:line="217" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="42">pointarray<pos:position pos:line="217" pos:column="52"/></name></expr></argument>)<pos:position pos:line="217" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="217" pos:column="54"/></condition><then pos:line="217" pos:column="54"> <block pos:line="217" pos:column="55">{
		<expr_stmt><expr><call><name pos:line="218" pos:column="17">ap_cfg_closefile<pos:position pos:line="218" pos:column="33"/></name><argument_list pos:line="218" pos:column="33">(<argument><expr><name pos:line="218" pos:column="34">imap<pos:position pos:line="218" pos:column="38"/></name></expr></argument>)<pos:position pos:line="218" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name pos:line="219" pos:column="17">redirect<pos:position pos:line="219" pos:column="25"/></name> <operator pos:line="219" pos:column="26">=<pos:position pos:line="219" pos:column="27"/></operator> <call><name pos:line="219" pos:column="28">imap_url<pos:position pos:line="219" pos:column="36"/></name><argument_list pos:line="219" pos:column="36">(<argument><expr><name pos:line="219" pos:column="37">r<pos:position pos:line="219" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="40">base<pos:position pos:line="219" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="46">value<pos:position pos:line="219" pos:column="51"/></name></expr></argument>)<pos:position pos:line="219" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="53"/></expr_stmt>
		<if pos:line="220" pos:column="17">if <condition pos:line="220" pos:column="20">(<expr><operator pos:line="220" pos:column="21">!<pos:position pos:line="220" pos:column="22"/></operator><name pos:line="220" pos:column="22">redirect<pos:position pos:line="220" pos:column="30"/></name></expr>)<pos:position pos:line="220" pos:column="31"/></condition><then pos:line="220" pos:column="31"> <block pos:line="220" pos:column="32">{
		    <return pos:line="221" pos:column="21">return <expr><name pos:line="221" pos:column="28">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="221" pos:column="54"/></name></expr>;<pos:position pos:line="221" pos:column="55"/></return>
		}<pos:position pos:line="222" pos:column="18"/></block></then></if>
                <return pos:line="223" pos:column="17">return <expr><operator pos:line="223" pos:column="24">(<pos:position pos:line="223" pos:column="25"/></operator><call><name pos:line="223" pos:column="25">imap_reply<pos:position pos:line="223" pos:column="35"/></name><argument_list pos:line="223" pos:column="35">(<argument><expr><name pos:line="223" pos:column="36">r<pos:position pos:line="223" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="223" pos:column="39">redirect<pos:position pos:line="223" pos:column="47"/></name></expr></argument>)<pos:position pos:line="223" pos:column="48"/></argument_list></call><operator pos:line="223" pos:column="48">)<pos:position pos:line="223" pos:column="49"/></operator></expr>;<pos:position pos:line="223" pos:column="50"/></return>
            }<pos:position pos:line="224" pos:column="14"/></block></then></if>
            <continue pos:line="225" pos:column="13">continue;<pos:position pos:line="225" pos:column="22"/></continue>
        }<pos:position pos:line="226" pos:column="10"/></block></then></if>

        <if pos:line="228" pos:column="9">if <condition pos:line="228" pos:column="12">(<expr><operator pos:line="228" pos:column="13">!<pos:position pos:line="228" pos:column="14"/></operator><call><name pos:line="228" pos:column="14">strcasecmp<pos:position pos:line="228" pos:column="24"/></name><argument_list pos:line="228" pos:column="24">(<argument><expr><name pos:line="228" pos:column="25">directive<pos:position pos:line="228" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="228" pos:column="36">"rect"<pos:position pos:line="228" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="228" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="228" pos:column="44"/></condition><then pos:line="228" pos:column="44"> <block pos:line="228" pos:column="45">{   <comment type="block" pos:line="228" pos:column="49">/* rect */</comment>

            <if pos:line="230" pos:column="13">if <condition pos:line="230" pos:column="16">(<expr><call><name pos:line="230" pos:column="17">pointinrect<pos:position pos:line="230" pos:column="28"/></name><argument_list pos:line="230" pos:column="28">(<argument><expr><name pos:line="230" pos:column="29">testpoint<pos:position pos:line="230" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="40">pointarray<pos:position pos:line="230" pos:column="50"/></name></expr></argument>)<pos:position pos:line="230" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="230" pos:column="52"/></condition><then pos:line="230" pos:column="52"> <block pos:line="230" pos:column="53">{
		<expr_stmt><expr><call><name pos:line="231" pos:column="17">ap_cfg_closefile<pos:position pos:line="231" pos:column="33"/></name><argument_list pos:line="231" pos:column="33">(<argument><expr><name pos:line="231" pos:column="34">imap<pos:position pos:line="231" pos:column="38"/></name></expr></argument>)<pos:position pos:line="231" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name pos:line="232" pos:column="17">redirect<pos:position pos:line="232" pos:column="25"/></name> <operator pos:line="232" pos:column="26">=<pos:position pos:line="232" pos:column="27"/></operator> <call><name pos:line="232" pos:column="28">imap_url<pos:position pos:line="232" pos:column="36"/></name><argument_list pos:line="232" pos:column="36">(<argument><expr><name pos:line="232" pos:column="37">r<pos:position pos:line="232" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="232" pos:column="40">base<pos:position pos:line="232" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="232" pos:column="46">value<pos:position pos:line="232" pos:column="51"/></name></expr></argument>)<pos:position pos:line="232" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="53"/></expr_stmt>
		<if pos:line="233" pos:column="17">if <condition pos:line="233" pos:column="20">(<expr><operator pos:line="233" pos:column="21">!<pos:position pos:line="233" pos:column="22"/></operator><name pos:line="233" pos:column="22">redirect<pos:position pos:line="233" pos:column="30"/></name></expr>)<pos:position pos:line="233" pos:column="31"/></condition><then pos:line="233" pos:column="31"> <block pos:line="233" pos:column="32">{
		    <return pos:line="234" pos:column="21">return <expr><name pos:line="234" pos:column="28">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="234" pos:column="54"/></name></expr>;<pos:position pos:line="234" pos:column="55"/></return>
		}<pos:position pos:line="235" pos:column="18"/></block></then></if>
                <return pos:line="236" pos:column="17">return <expr><operator pos:line="236" pos:column="24">(<pos:position pos:line="236" pos:column="25"/></operator><call><name pos:line="236" pos:column="25">imap_reply<pos:position pos:line="236" pos:column="35"/></name><argument_list pos:line="236" pos:column="35">(<argument><expr><name pos:line="236" pos:column="36">r<pos:position pos:line="236" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="236" pos:column="39">redirect<pos:position pos:line="236" pos:column="47"/></name></expr></argument>)<pos:position pos:line="236" pos:column="48"/></argument_list></call><operator pos:line="236" pos:column="48">)<pos:position pos:line="236" pos:column="49"/></operator></expr>;<pos:position pos:line="236" pos:column="50"/></return>
            }<pos:position pos:line="237" pos:column="14"/></block></then></if>
            <continue pos:line="238" pos:column="13">continue;<pos:position pos:line="238" pos:column="22"/></continue>
        }<pos:position pos:line="239" pos:column="10"/></block></then></if>

        <if pos:line="241" pos:column="9">if <condition pos:line="241" pos:column="12">(<expr><operator pos:line="241" pos:column="13">!<pos:position pos:line="241" pos:column="14"/></operator><call><name pos:line="241" pos:column="14">strcasecmp<pos:position pos:line="241" pos:column="24"/></name><argument_list pos:line="241" pos:column="24">(<argument><expr><name pos:line="241" pos:column="25">directive<pos:position pos:line="241" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="241" pos:column="36">"point"<pos:position pos:line="241" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="241" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="241" pos:column="45"/></condition><then pos:line="241" pos:column="45"> <block pos:line="241" pos:column="46">{  <comment type="block" pos:line="241" pos:column="49">/* point */</comment>

            <if pos:line="243" pos:column="13">if <condition pos:line="243" pos:column="16">(<expr><call><name pos:line="243" pos:column="17">is_closer<pos:position pos:line="243" pos:column="26"/></name><argument_list pos:line="243" pos:column="26">(<argument><expr><name pos:line="243" pos:column="27">testpoint<pos:position pos:line="243" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="38">pointarray<pos:position pos:line="243" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="243" pos:column="50">&amp;<pos:position pos:line="243" pos:column="55"/></operator><name pos:line="243" pos:column="51">closest_yet<pos:position pos:line="243" pos:column="62"/></name></expr></argument>)<pos:position pos:line="243" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="243" pos:column="64"/></condition><then pos:line="243" pos:column="64"> <block pos:line="243" pos:column="65">{
		<expr_stmt><expr><name pos:line="244" pos:column="17">closest<pos:position pos:line="244" pos:column="24"/></name> <operator pos:line="244" pos:column="25">=<pos:position pos:line="244" pos:column="26"/></operator> <call><name pos:line="244" pos:column="27">apr_pstrdup<pos:position pos:line="244" pos:column="38"/></name><argument_list pos:line="244" pos:column="38">(<argument><expr><name><name pos:line="244" pos:column="39">r<pos:position pos:line="244" pos:column="40"/></name><operator pos:line="244" pos:column="40">-&gt;<pos:position pos:line="244" pos:column="45"/></operator><name pos:line="244" pos:column="42">pool<pos:position pos:line="244" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="244" pos:column="48">value<pos:position pos:line="244" pos:column="53"/></name></expr></argument>)<pos:position pos:line="244" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="55"/></expr_stmt>
            }<pos:position pos:line="245" pos:column="14"/></block></then></if>

            <continue pos:line="247" pos:column="13">continue;<pos:position pos:line="247" pos:column="22"/></continue>
        }<pos:position pos:line="248" pos:column="10"/></block></then></if>                       <comment type="block" pos:line="248" pos:column="33">/* move on to next line whether it's
                                   closest or not */</comment>

    }<pos:position pos:line="251" pos:column="6"/></block></while>                           <comment type="block" pos:line="251" pos:column="33">/* nothing matched, so we get another line! */</comment>

    <expr_stmt><expr><call><name pos:line="253" pos:column="5">ap_cfg_closefile<pos:position pos:line="253" pos:column="21"/></name><argument_list pos:line="253" pos:column="21">(<argument><expr><name pos:line="253" pos:column="22">imap<pos:position pos:line="253" pos:column="26"/></name></expr></argument>)<pos:position pos:line="253" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="28"/></expr_stmt>        <comment type="block" pos:line="253" pos:column="36">/* we are done with the map file; close it */</comment>

    <if pos:line="255" pos:column="5">if <condition pos:line="255" pos:column="8">(<expr><name pos:line="255" pos:column="9">showmenu<pos:position pos:line="255" pos:column="17"/></name></expr>)<pos:position pos:line="255" pos:column="18"/></condition><then pos:line="255" pos:column="18"> <block pos:line="255" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="256" pos:column="9">menu_footer<pos:position pos:line="256" pos:column="20"/></name><argument_list pos:line="256" pos:column="20">(<argument><expr><name pos:line="256" pos:column="21">r<pos:position pos:line="256" pos:column="22"/></name></expr></argument>)<pos:position pos:line="256" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="24"/></expr_stmt>         <comment type="block" pos:line="256" pos:column="33">/* finish the menu and we are done */</comment>
        <return pos:line="257" pos:column="9">return <expr><name pos:line="257" pos:column="16">OK<pos:position pos:line="257" pos:column="18"/></name></expr>;<pos:position pos:line="257" pos:column="19"/></return>
    }<pos:position pos:line="258" pos:column="6"/></block></then></if>

    <if pos:line="260" pos:column="5">if <condition pos:line="260" pos:column="8">(<expr><name pos:line="260" pos:column="9">closest<pos:position pos:line="260" pos:column="16"/></name></expr>)<pos:position pos:line="260" pos:column="17"/></condition><then pos:line="260" pos:column="17"> <block pos:line="260" pos:column="18">{             <comment type="block" pos:line="260" pos:column="32">/* if a 'point' directive has been seen */</comment>
        <expr_stmt><expr><name pos:line="261" pos:column="9">redirect<pos:position pos:line="261" pos:column="17"/></name> <operator pos:line="261" pos:column="18">=<pos:position pos:line="261" pos:column="19"/></operator> <call><name pos:line="261" pos:column="20">imap_url<pos:position pos:line="261" pos:column="28"/></name><argument_list pos:line="261" pos:column="28">(<argument><expr><name pos:line="261" pos:column="29">r<pos:position pos:line="261" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="32">base<pos:position pos:line="261" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="38">closest<pos:position pos:line="261" pos:column="45"/></name></expr></argument>)<pos:position pos:line="261" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="47"/></expr_stmt>
	<if pos:line="262" pos:column="9">if <condition pos:line="262" pos:column="12">(<expr><operator pos:line="262" pos:column="13">!<pos:position pos:line="262" pos:column="14"/></operator><name pos:line="262" pos:column="14">redirect<pos:position pos:line="262" pos:column="22"/></name></expr>)<pos:position pos:line="262" pos:column="23"/></condition><then pos:line="262" pos:column="23"> <block pos:line="262" pos:column="24">{
	    <return pos:line="263" pos:column="13">return <expr><name pos:line="263" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="263" pos:column="46"/></name></expr>;<pos:position pos:line="263" pos:column="47"/></return>
	}<pos:position pos:line="264" pos:column="10"/></block></then></if>
        <return pos:line="265" pos:column="9">return <expr><operator pos:line="265" pos:column="16">(<pos:position pos:line="265" pos:column="17"/></operator><call><name pos:line="265" pos:column="17">imap_reply<pos:position pos:line="265" pos:column="27"/></name><argument_list pos:line="265" pos:column="27">(<argument><expr><name pos:line="265" pos:column="28">r<pos:position pos:line="265" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="31">redirect<pos:position pos:line="265" pos:column="39"/></name></expr></argument>)<pos:position pos:line="265" pos:column="40"/></argument_list></call><operator pos:line="265" pos:column="40">)<pos:position pos:line="265" pos:column="41"/></operator></expr>;<pos:position pos:line="265" pos:column="42"/></return>
    }<pos:position pos:line="266" pos:column="6"/></block></then></if>

    <if pos:line="268" pos:column="5">if <condition pos:line="268" pos:column="8">(<expr><name pos:line="268" pos:column="9">mapdflt<pos:position pos:line="268" pos:column="16"/></name></expr>)<pos:position pos:line="268" pos:column="17"/></condition><then pos:line="268" pos:column="17"> <block pos:line="268" pos:column="18">{             <comment type="block" pos:line="268" pos:column="32">/* a default should be defined, even if
                                  only 'nocontent' */</comment>
        <expr_stmt><expr><name pos:line="270" pos:column="9">redirect<pos:position pos:line="270" pos:column="17"/></name> <operator pos:line="270" pos:column="18">=<pos:position pos:line="270" pos:column="19"/></operator> <call><name pos:line="270" pos:column="20">imap_url<pos:position pos:line="270" pos:column="28"/></name><argument_list pos:line="270" pos:column="28">(<argument><expr><name pos:line="270" pos:column="29">r<pos:position pos:line="270" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="270" pos:column="32">base<pos:position pos:line="270" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="270" pos:column="38">mapdflt<pos:position pos:line="270" pos:column="45"/></name></expr></argument>)<pos:position pos:line="270" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="47"/></expr_stmt>
	<if pos:line="271" pos:column="9">if <condition pos:line="271" pos:column="12">(<expr><operator pos:line="271" pos:column="13">!<pos:position pos:line="271" pos:column="14"/></operator><name pos:line="271" pos:column="14">redirect<pos:position pos:line="271" pos:column="22"/></name></expr>)<pos:position pos:line="271" pos:column="23"/></condition><then pos:line="271" pos:column="23"> <block pos:line="271" pos:column="24">{
	    <return pos:line="272" pos:column="13">return <expr><name pos:line="272" pos:column="20">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="272" pos:column="46"/></name></expr>;<pos:position pos:line="272" pos:column="47"/></return>
	}<pos:position pos:line="273" pos:column="10"/></block></then></if>
        <return pos:line="274" pos:column="9">return <expr><operator pos:line="274" pos:column="16">(<pos:position pos:line="274" pos:column="17"/></operator><call><name pos:line="274" pos:column="17">imap_reply<pos:position pos:line="274" pos:column="27"/></name><argument_list pos:line="274" pos:column="27">(<argument><expr><name pos:line="274" pos:column="28">r<pos:position pos:line="274" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="274" pos:column="31">redirect<pos:position pos:line="274" pos:column="39"/></name></expr></argument>)<pos:position pos:line="274" pos:column="40"/></argument_list></call><operator pos:line="274" pos:column="40">)<pos:position pos:line="274" pos:column="41"/></operator></expr>;<pos:position pos:line="274" pos:column="42"/></return>
    }<pos:position pos:line="275" pos:column="6"/></block></then></if>

    <return pos:line="277" pos:column="5">return <expr><name pos:line="277" pos:column="12">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="277" pos:column="38"/></name></expr>;<pos:position pos:line="277" pos:column="39"/></return>        <comment type="block" pos:line="277" pos:column="47">/* If we make it this far,
                                                 we failed. They lose! */</comment>

<label><name pos:line="280" pos:column="1">need_2_fields<pos:position pos:line="280" pos:column="14"/></name>:<pos:position pos:line="280" pos:column="15"/></label>
    <expr_stmt><expr><call><name pos:line="281" pos:column="5">ap_log_rerror<pos:position pos:line="281" pos:column="18"/></name><argument_list pos:line="281" pos:column="18">(<argument><expr><name pos:line="281" pos:column="19">APLOG_MARK<pos:position pos:line="281" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="281" pos:column="31">APLOG_ERR<pos:position pos:line="281" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="281" pos:column="42">0<pos:position pos:line="281" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="281" pos:column="45">r<pos:position pos:line="281" pos:column="46"/></name></expr></argument>,
		<argument><expr><literal type="string" pos:line="282" pos:column="17">"map file %s, line %d syntax error: requires at "<pos:position pos:line="282" pos:column="66"/></literal>
                <literal type="string" pos:line="283" pos:column="17">"least two fields"<pos:position pos:line="283" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="283" pos:column="37">r<pos:position pos:line="283" pos:column="38"/></name><operator pos:line="283" pos:column="38">-&gt;<pos:position pos:line="283" pos:column="43"/></operator><name pos:line="283" pos:column="40">uri<pos:position pos:line="283" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="283" pos:column="45">imap<pos:position pos:line="283" pos:column="49"/></name><operator pos:line="283" pos:column="49">-&gt;<pos:position pos:line="283" pos:column="54"/></operator><name pos:line="283" pos:column="51">line_number<pos:position pos:line="283" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="283" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="64"/></expr_stmt>
    <comment type="block" pos:line="284" pos:column="5">/* fall through */</comment>
<label><name pos:line="285" pos:column="1">menu_bail<pos:position pos:line="285" pos:column="10"/></name>:<pos:position pos:line="285" pos:column="11"/></label>
    <expr_stmt><expr><call><name pos:line="286" pos:column="5">ap_cfg_closefile<pos:position pos:line="286" pos:column="21"/></name><argument_list pos:line="286" pos:column="21">(<argument><expr><name pos:line="286" pos:column="22">imap<pos:position pos:line="286" pos:column="26"/></name></expr></argument>)<pos:position pos:line="286" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="28"/></expr_stmt>
    <if pos:line="287" pos:column="5">if <condition pos:line="287" pos:column="8">(<expr><name pos:line="287" pos:column="9">showmenu<pos:position pos:line="287" pos:column="17"/></name></expr>)<pos:position pos:line="287" pos:column="18"/></condition><then pos:line="287" pos:column="18"> <block pos:line="287" pos:column="19">{
	<comment type="block" pos:line="288" pos:column="9">/* There's not much else we can do ... we've already sent the headers
	 * to the client.
	 */</comment>
	<expr_stmt><expr><call><name pos:line="291" pos:column="9">ap_rputs<pos:position pos:line="291" pos:column="17"/></name><argument_list pos:line="291" pos:column="17">(<argument><expr><literal type="string" pos:line="291" pos:column="18">"\n\n[an internal server error occured]\n"<pos:position pos:line="291" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="291" pos:column="62">r<pos:position pos:line="291" pos:column="63"/></name></expr></argument>)<pos:position pos:line="291" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="292" pos:column="9">menu_footer<pos:position pos:line="292" pos:column="20"/></name><argument_list pos:line="292" pos:column="20">(<argument><expr><name pos:line="292" pos:column="21">r<pos:position pos:line="292" pos:column="22"/></name></expr></argument>)<pos:position pos:line="292" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="24"/></expr_stmt>
	<return pos:line="293" pos:column="9">return <expr><name pos:line="293" pos:column="16">OK<pos:position pos:line="293" pos:column="18"/></name></expr>;<pos:position pos:line="293" pos:column="19"/></return>
    }<pos:position pos:line="294" pos:column="6"/></block></then></if>
    <return pos:line="295" pos:column="5">return <expr><name pos:line="295" pos:column="12">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="295" pos:column="38"/></name></expr>;<pos:position pos:line="295" pos:column="39"/></return>
}<pos:position pos:line="296" pos:column="2"/></block></function></unit>

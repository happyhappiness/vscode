<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_7423.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">truncate_and_write_error<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">rotate_status_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">status<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">buflen<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><call><name pos:line="3" pos:column="25">strlen<pos:position pos:line="3" pos:column="31"/></name><argument_list pos:line="3" pos:column="31">(<argument><expr><name><name pos:line="3" pos:column="32">status<pos:position pos:line="3" pos:column="38"/></name><operator pos:line="3" pos:column="38">-&gt;<pos:position pos:line="3" pos:column="43"/></operator><name pos:line="3" pos:column="40">errbuf<pos:position pos:line="3" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">apr_file_trunc<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name><name pos:line="5" pos:column="24">status<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">-&gt;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="32">current<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">.<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">fd<pos:position pos:line="5" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="44">0<pos:position pos:line="5" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call> <operator pos:line="5" pos:column="47">!=<pos:position pos:line="5" pos:column="49"/></operator> <name pos:line="5" pos:column="50">APR_SUCCESS<pos:position pos:line="5" pos:column="61"/></name></expr>)<pos:position pos:line="5" pos:column="62"/></condition><then pos:line="5" pos:column="62"> <block pos:line="5" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">fprintf<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">stderr<pos:position pos:line="6" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="25">"Error truncating the file %s\n"<pos:position pos:line="6" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="59">status<pos:position pos:line="6" pos:column="65"/></name><operator pos:line="6" pos:column="65">-&gt;<pos:position pos:line="6" pos:column="70"/></operator><name pos:line="6" pos:column="67">current<pos:position pos:line="6" pos:column="74"/></name><operator pos:line="6" pos:column="74">.<pos:position pos:line="6" pos:column="75"/></operator><name pos:line="6" pos:column="75">name<pos:position pos:line="6" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">exit<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><literal type="number" pos:line="7" pos:column="14">2<pos:position pos:line="7" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">apr_file_write_full<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name><name pos:line="9" pos:column="29">status<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">current<pos:position pos:line="9" pos:column="44"/></name><operator pos:line="9" pos:column="44">.<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="45">fd<pos:position pos:line="9" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="49">status<pos:position pos:line="9" pos:column="55"/></name><operator pos:line="9" pos:column="55">-&gt;<pos:position pos:line="9" pos:column="60"/></operator><name pos:line="9" pos:column="57">errbuf<pos:position pos:line="9" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="65">buflen<pos:position pos:line="9" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="73">NULL<pos:position pos:line="9" pos:column="77"/></name></expr></argument>)<pos:position pos:line="9" pos:column="78"/></argument_list></call> <operator pos:line="9" pos:column="79">!=<pos:position pos:line="9" pos:column="81"/></operator> <name pos:line="9" pos:column="82">APR_SUCCESS<pos:position pos:line="9" pos:column="93"/></name></expr>)<pos:position pos:line="9" pos:column="94"/></condition><then pos:line="9" pos:column="94"> <block pos:line="9" pos:column="95">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">fprintf<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name pos:line="10" pos:column="17">stderr<pos:position pos:line="10" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="25">"Error writing error (%s) to the file %s\n"<pos:position pos:line="10" pos:column="68"/></literal></expr></argument>, 
                <argument><expr><name><name pos:line="11" pos:column="17">status<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">errbuf<pos:position pos:line="11" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="33">status<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">-&gt;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="41">current<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">.<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="49">name<pos:position pos:line="11" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">exit<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><literal type="number" pos:line="12" pos:column="14">2<pos:position pos:line="12" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

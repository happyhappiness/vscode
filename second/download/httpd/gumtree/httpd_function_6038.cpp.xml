<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6038.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_push_diary_digest_get<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">h2_push_diary<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">diary<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">apr_pool_t<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">pool<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>, 
                                      <parameter><decl><type><name pos:line="2" pos:column="39">apr_uint32_t<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">maxP<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="58">const<pos:position pos:line="2" pos:column="63"/></specifier> <name pos:line="2" pos:column="64">char<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type><name pos:line="2" pos:column="70">authority<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>, 
                                      <parameter><decl><type><specifier pos:line="3" pos:column="39">const<pos:position pos:line="3" pos:column="44"/></specifier> <name pos:line="3" pos:column="45">char<pos:position pos:line="3" pos:column="49"/></name> <modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier><modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier></type><name pos:line="3" pos:column="52">pdata<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="59">apr_size_t<pos:position pos:line="3" pos:column="69"/></name> <modifier pos:line="3" pos:column="70">*<pos:position pos:line="3" pos:column="71"/></modifier></type><name pos:line="3" pos:column="71">plen<pos:position pos:line="3" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="76"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">nelts<pos:position pos:line="5" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="23">N<pos:position pos:line="5" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="26">i<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">char<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">log2n<pos:position pos:line="6" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="26">log2pmax<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">gset_encoder<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">encoder<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_uint64_t<pos:position pos:line="8" pos:column="17"/></name> <modifier pos:line="8" pos:column="18">*<pos:position pos:line="8" pos:column="19"/></modifier></type><name pos:line="8" pos:column="19">hashes<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">hash_count<pos:position pos:line="9" pos:column="26"/></name></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
    
    <expr_stmt><expr><name pos:line="11" pos:column="5">nelts<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <name><name pos:line="11" pos:column="13">diary<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">entries<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">nelts<pos:position pos:line="11" pos:column="34"/></name></name></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>
    
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">nelts<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">&gt;<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="17">APR_UINT32_MAX<pos:position pos:line="13" pos:column="31"/></name></expr>)<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32"> <block pos:line="13" pos:column="33">{
        <comment type="block" pos:line="14" pos:column="9">/* should not happen */</comment>
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">APR_ENOTIMPL<pos:position pos:line="15" pos:column="28"/></name></expr>;<pos:position pos:line="15" pos:column="29"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="17" pos:column="5">N<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name pos:line="17" pos:column="9">ceil_power_of_2<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">nelts<pos:position pos:line="17" pos:column="30"/></name></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">log2n<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <call><name pos:line="18" pos:column="13">h2_log2<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">N<pos:position pos:line="18" pos:column="22"/></name></expr></argument>)<pos:position pos:line="18" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
    
    <comment type="block" pos:line="20" pos:column="5">/* Now log2p is the max number of relevant bits, so that
     * log2p + log2n == mask_bits. We can uise a lower log2p
     * and have a shorter set encoding...
     */</comment>
    <expr_stmt><expr><name pos:line="24" pos:column="5">log2pmax<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <call><name pos:line="24" pos:column="16">h2_log2<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><call><name pos:line="24" pos:column="24">ceil_power_of_2<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><name pos:line="24" pos:column="40">maxP<pos:position pos:line="24" pos:column="44"/></name></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">memset<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><operator pos:line="26" pos:column="12">&amp;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="13">encoder<pos:position pos:line="26" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="22">0<pos:position pos:line="26" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="25">sizeof<argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">encoder<pos:position pos:line="26" pos:column="39"/></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">encoder<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">.<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">diary<pos:position pos:line="27" pos:column="18"/></name></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">diary<pos:position pos:line="27" pos:column="26"/></name></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">encoder<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">.<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">log2p<pos:position pos:line="28" pos:column="18"/></name></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <call><name pos:line="28" pos:column="21">H2MIN<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><name><name pos:line="28" pos:column="27">diary<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">mask_bits<pos:position pos:line="28" pos:column="43"/></name></name> <operator pos:line="28" pos:column="44">-<pos:position pos:line="28" pos:column="45"/></operator> <name pos:line="28" pos:column="46">log2n<pos:position pos:line="28" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="53">log2pmax<pos:position pos:line="28" pos:column="61"/></name></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">encoder<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">.<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">mask_bits<pos:position pos:line="29" pos:column="22"/></name></name> <operator pos:line="29" pos:column="23">=<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="25">log2n<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">+<pos:position pos:line="29" pos:column="32"/></operator> <name><name pos:line="29" pos:column="33">encoder<pos:position pos:line="29" pos:column="40"/></name><operator pos:line="29" pos:column="40">.<pos:position pos:line="29" pos:column="41"/></operator><name pos:line="29" pos:column="41">log2p<pos:position pos:line="29" pos:column="46"/></name></name></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">encoder<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">.<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="13">delta_bits<pos:position pos:line="30" pos:column="23"/></name></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <name><name pos:line="30" pos:column="26">diary<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">-&gt;<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="33">mask_bits<pos:position pos:line="30" pos:column="42"/></name></name> <operator pos:line="30" pos:column="43">-<pos:position pos:line="30" pos:column="44"/></operator> <name><name pos:line="30" pos:column="45">encoder<pos:position pos:line="30" pos:column="52"/></name><operator pos:line="30" pos:column="52">.<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="53">mask_bits<pos:position pos:line="30" pos:column="62"/></name></name></expr>;<pos:position pos:line="30" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">encoder<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">.<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">fixed_bits<pos:position pos:line="31" pos:column="23"/></name></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <name><name pos:line="31" pos:column="26">encoder<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">.<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="34">log2p<pos:position pos:line="31" pos:column="39"/></name></name></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">encoder<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">.<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">fixed_mask<pos:position pos:line="32" pos:column="23"/></name></name> <operator pos:line="32" pos:column="24">=<pos:position pos:line="32" pos:column="25"/></operator> <literal type="number" pos:line="32" pos:column="26">1<pos:position pos:line="32" pos:column="27"/></literal></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">encoder<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">.<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="13">fixed_mask<pos:position pos:line="33" pos:column="23"/></name></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <operator pos:line="33" pos:column="26">(<pos:position pos:line="33" pos:column="27"/></operator><name><name pos:line="33" pos:column="27">encoder<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">.<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="35">fixed_mask<pos:position pos:line="33" pos:column="45"/></name></name> <operator pos:line="33" pos:column="46">&lt;&lt;<pos:position pos:line="33" pos:column="54"/></operator> <name><name pos:line="33" pos:column="49">encoder<pos:position pos:line="33" pos:column="56"/></name><operator pos:line="33" pos:column="56">.<pos:position pos:line="33" pos:column="57"/></operator><name pos:line="33" pos:column="57">fixed_bits<pos:position pos:line="33" pos:column="67"/></name></name><operator pos:line="33" pos:column="67">)<pos:position pos:line="33" pos:column="68"/></operator> <operator pos:line="33" pos:column="69">-<pos:position pos:line="33" pos:column="70"/></operator> <literal type="number" pos:line="33" pos:column="71">1<pos:position pos:line="33" pos:column="72"/></literal></expr>;<pos:position pos:line="33" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">encoder<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">.<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="13">pool<pos:position pos:line="34" pos:column="17"/></name></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">pool<pos:position pos:line="34" pos:column="24"/></name></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">encoder<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">.<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="13">datalen<pos:position pos:line="35" pos:column="20"/></name></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <literal type="number" pos:line="35" pos:column="23">512<pos:position pos:line="35" pos:column="26"/></literal></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">encoder<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">.<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="13">data<pos:position pos:line="36" pos:column="17"/></name></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <call><name pos:line="36" pos:column="20">apr_pcalloc<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name><name pos:line="36" pos:column="32">encoder<pos:position pos:line="36" pos:column="39"/></name><operator pos:line="36" pos:column="39">.<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="40">pool<pos:position pos:line="36" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="46">encoder<pos:position pos:line="36" pos:column="53"/></name><operator pos:line="36" pos:column="53">.<pos:position pos:line="36" pos:column="54"/></operator><name pos:line="36" pos:column="54">datalen<pos:position pos:line="36" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="63"/></expr_stmt>
    
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">encoder<pos:position pos:line="38" pos:column="12"/></name><operator pos:line="38" pos:column="12">.<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="13">data<pos:position pos:line="38" pos:column="17"/></name><index pos:line="38" pos:column="17">[<expr><literal type="number" pos:line="38" pos:column="18">0<pos:position pos:line="38" pos:column="19"/></literal></expr>]<pos:position pos:line="38" pos:column="20"/></index></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="23">log2n<pos:position pos:line="38" pos:column="28"/></name></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">encoder<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">.<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="13">data<pos:position pos:line="39" pos:column="17"/></name><index pos:line="39" pos:column="17">[<expr><literal type="number" pos:line="39" pos:column="18">1<pos:position pos:line="39" pos:column="19"/></literal></expr>]<pos:position pos:line="39" pos:column="20"/></index></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <name><name pos:line="39" pos:column="23">encoder<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">.<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="31">log2p<pos:position pos:line="39" pos:column="36"/></name></name></expr>;<pos:position pos:line="39" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">encoder<pos:position pos:line="40" pos:column="12"/></name><operator pos:line="40" pos:column="12">.<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="13">offset<pos:position pos:line="40" pos:column="19"/></name></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <literal type="number" pos:line="40" pos:column="22">1<pos:position pos:line="40" pos:column="23"/></literal></expr>;<pos:position pos:line="40" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">encoder<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">.<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="13">bit<pos:position pos:line="41" pos:column="16"/></name></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <literal type="number" pos:line="41" pos:column="19">8<pos:position pos:line="41" pos:column="20"/></literal></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">encoder<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">.<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="13">last<pos:position pos:line="42" pos:column="17"/></name></name> <operator pos:line="42" pos:column="18">=<pos:position pos:line="42" pos:column="19"/></operator> <literal type="number" pos:line="42" pos:column="20">0<pos:position pos:line="42" pos:column="21"/></literal></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt>
    
    <comment type="block" pos:line="44" pos:column="5">/* Intentional no APLOGNO */</comment>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">ap_log_perror<pos:position pos:line="45" pos:column="18"/></name><argument_list pos:line="45" pos:column="18">(<argument><expr><name pos:line="45" pos:column="19">APLOG_MARK<pos:position pos:line="45" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="31">GCSLOG_LEVEL<pos:position pos:line="45" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="45">0<pos:position pos:line="45" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="48">pool<pos:position pos:line="45" pos:column="52"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="46" pos:column="19">"h2_push_diary_digest_get: %d entries, N=%d, log2n=%d, "<pos:position pos:line="46" pos:column="75"/></literal>
                  <literal type="string" pos:line="47" pos:column="19">"mask_bits=%d, enc.mask_bits=%d, delta_bits=%d, enc.log2p=%d, authority=%s"<pos:position pos:line="47" pos:column="94"/></literal></expr></argument>, 
                  <argument><expr><operator pos:line="48" pos:column="19">(<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">int<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">)<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="24">nelts<pos:position pos:line="48" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="31">(<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="32">int<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">)<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="36">N<pos:position pos:line="48" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="39">(<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="40">int<pos:position pos:line="48" pos:column="43"/></name><operator pos:line="48" pos:column="43">)<pos:position pos:line="48" pos:column="44"/></operator><name pos:line="48" pos:column="44">log2n<pos:position pos:line="48" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="51">diary<pos:position pos:line="48" pos:column="56"/></name><operator pos:line="48" pos:column="56">-&gt;<pos:position pos:line="48" pos:column="61"/></operator><name pos:line="48" pos:column="58">mask_bits<pos:position pos:line="48" pos:column="67"/></name></name></expr></argument>, 
                  <argument><expr><operator pos:line="49" pos:column="19">(<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="20">int<pos:position pos:line="49" pos:column="23"/></name><operator pos:line="49" pos:column="23">)<pos:position pos:line="49" pos:column="24"/></operator><name><name pos:line="49" pos:column="24">encoder<pos:position pos:line="49" pos:column="31"/></name><operator pos:line="49" pos:column="31">.<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="32">mask_bits<pos:position pos:line="49" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="43">(<pos:position pos:line="49" pos:column="44"/></operator><name pos:line="49" pos:column="44">int<pos:position pos:line="49" pos:column="47"/></name><operator pos:line="49" pos:column="47">)<pos:position pos:line="49" pos:column="48"/></operator><name><name pos:line="49" pos:column="48">encoder<pos:position pos:line="49" pos:column="55"/></name><operator pos:line="49" pos:column="55">.<pos:position pos:line="49" pos:column="56"/></operator><name pos:line="49" pos:column="56">delta_bits<pos:position pos:line="49" pos:column="66"/></name></name></expr></argument>, 
                  <argument><expr><operator pos:line="50" pos:column="19">(<pos:position pos:line="50" pos:column="20"/></operator><name pos:line="50" pos:column="20">int<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">)<pos:position pos:line="50" pos:column="24"/></operator><name><name pos:line="50" pos:column="24">encoder<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">.<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="32">log2p<pos:position pos:line="50" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="39">authority<pos:position pos:line="50" pos:column="48"/></name></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="50"/></expr_stmt>
                  
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><operator pos:line="52" pos:column="9">!<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">authority<pos:position pos:line="52" pos:column="19"/></name> <operator pos:line="52" pos:column="20">||<pos:position pos:line="52" pos:column="22"/></operator> <operator pos:line="52" pos:column="23">!<pos:position pos:line="52" pos:column="24"/></operator><name><name pos:line="52" pos:column="24">diary<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">-&gt;<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="31">authority<pos:position pos:line="52" pos:column="40"/></name></name> 
        <operator pos:line="53" pos:column="9">||<pos:position pos:line="53" pos:column="11"/></operator> <operator pos:line="53" pos:column="12">!<pos:position pos:line="53" pos:column="13"/></operator><call><name pos:line="53" pos:column="13">strcmp<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><literal type="string" pos:line="53" pos:column="20">"*"<pos:position pos:line="53" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="25">authority<pos:position pos:line="53" pos:column="34"/></name></expr></argument>)<pos:position pos:line="53" pos:column="35"/></argument_list></call> <operator pos:line="53" pos:column="36">||<pos:position pos:line="53" pos:column="38"/></operator> <operator pos:line="53" pos:column="39">!<pos:position pos:line="53" pos:column="40"/></operator><call><name pos:line="53" pos:column="40">strcmp<pos:position pos:line="53" pos:column="46"/></name><argument_list pos:line="53" pos:column="46">(<argument><expr><name><name pos:line="53" pos:column="47">diary<pos:position pos:line="53" pos:column="52"/></name><operator pos:line="53" pos:column="52">-&gt;<pos:position pos:line="53" pos:column="57"/></operator><name pos:line="53" pos:column="54">authority<pos:position pos:line="53" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="65">authority<pos:position pos:line="53" pos:column="74"/></name></expr></argument>)<pos:position pos:line="53" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="76"/></condition><then pos:line="53" pos:column="76"> <block pos:line="53" pos:column="77">{
        <expr_stmt><expr><name pos:line="54" pos:column="9">hash_count<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <name><name pos:line="54" pos:column="22">diary<pos:position pos:line="54" pos:column="27"/></name><operator pos:line="54" pos:column="27">-&gt;<pos:position pos:line="54" pos:column="32"/></operator><name pos:line="54" pos:column="29">entries<pos:position pos:line="54" pos:column="36"/></name><operator pos:line="54" pos:column="36">-&gt;<pos:position pos:line="54" pos:column="41"/></operator><name pos:line="54" pos:column="38">nelts<pos:position pos:line="54" pos:column="43"/></name></name></expr>;<pos:position pos:line="54" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name pos:line="55" pos:column="9">hashes<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">=<pos:position pos:line="55" pos:column="17"/></operator> <call><name pos:line="55" pos:column="18">apr_pcalloc<pos:position pos:line="55" pos:column="29"/></name><argument_list pos:line="55" pos:column="29">(<argument><expr><name><name pos:line="55" pos:column="30">encoder<pos:position pos:line="55" pos:column="37"/></name><operator pos:line="55" pos:column="37">.<pos:position pos:line="55" pos:column="38"/></operator><name pos:line="55" pos:column="38">pool<pos:position pos:line="55" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="44">hash_count<pos:position pos:line="55" pos:column="54"/></name></expr></argument>)<pos:position pos:line="55" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="56"/></expr_stmt>
        <for pos:line="56" pos:column="9">for <control pos:line="56" pos:column="13">(<init><expr><name pos:line="56" pos:column="14">i<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <literal type="number" pos:line="56" pos:column="18">0<pos:position pos:line="56" pos:column="19"/></literal></expr>;<pos:position pos:line="56" pos:column="20"/></init> <condition><expr><name pos:line="56" pos:column="21">i<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">&lt;<pos:position pos:line="56" pos:column="27"/></operator> <name pos:line="56" pos:column="25">hash_count<pos:position pos:line="56" pos:column="35"/></name></expr>;<pos:position pos:line="56" pos:column="36"/></condition> <incr><expr><operator pos:line="56" pos:column="37">++<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="39">i<pos:position pos:line="56" pos:column="40"/></name></expr></incr>)<pos:position pos:line="56" pos:column="41"/></control> <block pos:line="56" pos:column="42">{
            <expr_stmt><expr><name><name pos:line="57" pos:column="13">hashes<pos:position pos:line="57" pos:column="19"/></name><index pos:line="57" pos:column="19">[<expr><name pos:line="57" pos:column="20">i<pos:position pos:line="57" pos:column="21"/></name></expr>]<pos:position pos:line="57" pos:column="22"/></index></name> <operator pos:line="57" pos:column="23">=<pos:position pos:line="57" pos:column="24"/></operator> <operator pos:line="57" pos:column="25">(<pos:position pos:line="57" pos:column="26"/></operator><operator pos:line="57" pos:column="26">(<pos:position pos:line="57" pos:column="27"/></operator><operator pos:line="57" pos:column="27">&amp;<pos:position pos:line="57" pos:column="32"/></operator><call><name pos:line="57" pos:column="28">APR_ARRAY_IDX<pos:position pos:line="57" pos:column="41"/></name><argument_list pos:line="57" pos:column="41">(<argument><expr><name><name pos:line="57" pos:column="42">diary<pos:position pos:line="57" pos:column="47"/></name><operator pos:line="57" pos:column="47">-&gt;<pos:position pos:line="57" pos:column="52"/></operator><name pos:line="57" pos:column="49">entries<pos:position pos:line="57" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="58">i<pos:position pos:line="57" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="61">h2_push_diary_entry<pos:position pos:line="57" pos:column="80"/></name></expr></argument>)<pos:position pos:line="57" pos:column="81"/></argument_list></call><operator pos:line="57" pos:column="81">)<pos:position pos:line="57" pos:column="82"/></operator><operator pos:line="57" pos:column="82">-&gt;<pos:position pos:line="57" pos:column="87"/></operator><name pos:line="57" pos:column="84">hash<pos:position pos:line="57" pos:column="88"/></name> 
                         <operator pos:line="58" pos:column="26">&gt;&gt;<pos:position pos:line="58" pos:column="31"/></operator> <name><name pos:line="58" pos:column="29">encoder<pos:position pos:line="58" pos:column="36"/></name><operator pos:line="58" pos:column="36">.<pos:position pos:line="58" pos:column="37"/></operator><name pos:line="58" pos:column="37">delta_bits<pos:position pos:line="58" pos:column="47"/></name></name><operator pos:line="58" pos:column="47">)<pos:position pos:line="58" pos:column="48"/></operator></expr>;<pos:position pos:line="58" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></for>
        
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">qsort<pos:position pos:line="61" pos:column="14"/></name><argument_list pos:line="61" pos:column="14">(<argument><expr><name pos:line="61" pos:column="15">hashes<pos:position pos:line="61" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="23">hash_count<pos:position pos:line="61" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="35">sizeof<argument_list pos:line="61" pos:column="41">(<argument><expr><name pos:line="61" pos:column="42">apr_uint64_t<pos:position pos:line="61" pos:column="54"/></name></expr></argument>)<pos:position pos:line="61" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="61" pos:column="57">cmp_puint64<pos:position pos:line="61" pos:column="68"/></name></expr></argument>)<pos:position pos:line="61" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="70"/></expr_stmt>
        <for pos:line="62" pos:column="9">for <control pos:line="62" pos:column="13">(<init><expr><name pos:line="62" pos:column="14">i<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <literal type="number" pos:line="62" pos:column="18">0<pos:position pos:line="62" pos:column="19"/></literal></expr>;<pos:position pos:line="62" pos:column="20"/></init> <condition><expr><name pos:line="62" pos:column="21">i<pos:position pos:line="62" pos:column="22"/></name> <operator pos:line="62" pos:column="23">&lt;<pos:position pos:line="62" pos:column="27"/></operator> <name pos:line="62" pos:column="25">hash_count<pos:position pos:line="62" pos:column="35"/></name></expr>;<pos:position pos:line="62" pos:column="36"/></condition> <incr><expr><operator pos:line="62" pos:column="37">++<pos:position pos:line="62" pos:column="39"/></operator><name pos:line="62" pos:column="39">i<pos:position pos:line="62" pos:column="40"/></name></expr></incr>)<pos:position pos:line="62" pos:column="41"/></control> <block pos:line="62" pos:column="42">{
            <if pos:line="63" pos:column="13">if <condition pos:line="63" pos:column="16">(<expr><operator pos:line="63" pos:column="17">!<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="18">i<pos:position pos:line="63" pos:column="19"/></name> <operator pos:line="63" pos:column="20">||<pos:position pos:line="63" pos:column="22"/></operator> <operator pos:line="63" pos:column="23">(<pos:position pos:line="63" pos:column="24"/></operator><name><name pos:line="63" pos:column="24">hashes<pos:position pos:line="63" pos:column="30"/></name><index pos:line="63" pos:column="30">[<expr><name pos:line="63" pos:column="31">i<pos:position pos:line="63" pos:column="32"/></name></expr>]<pos:position pos:line="63" pos:column="33"/></index></name> <operator pos:line="63" pos:column="34">!=<pos:position pos:line="63" pos:column="36"/></operator> <name><name pos:line="63" pos:column="37">hashes<pos:position pos:line="63" pos:column="43"/></name><index pos:line="63" pos:column="43">[<expr><name pos:line="63" pos:column="44">i<pos:position pos:line="63" pos:column="45"/></name><operator pos:line="63" pos:column="45">-<pos:position pos:line="63" pos:column="46"/></operator><literal type="number" pos:line="63" pos:column="46">1<pos:position pos:line="63" pos:column="47"/></literal></expr>]<pos:position pos:line="63" pos:column="48"/></index></name><operator pos:line="63" pos:column="48">)<pos:position pos:line="63" pos:column="49"/></operator></expr>)<pos:position pos:line="63" pos:column="50"/></condition><then pos:line="63" pos:column="50"> <block pos:line="63" pos:column="51">{
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">gset_encode_next<pos:position pos:line="64" pos:column="33"/></name><argument_list pos:line="64" pos:column="33">(<argument><expr><operator pos:line="64" pos:column="34">&amp;<pos:position pos:line="64" pos:column="39"/></operator><name pos:line="64" pos:column="35">encoder<pos:position pos:line="64" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="44">hashes<pos:position pos:line="64" pos:column="50"/></name><index pos:line="64" pos:column="50">[<expr><name pos:line="64" pos:column="51">i<pos:position pos:line="64" pos:column="52"/></name></expr>]<pos:position pos:line="64" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="64" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="55"/></expr_stmt>
            }<pos:position pos:line="65" pos:column="14"/></block></then></if>
        }<pos:position pos:line="66" pos:column="10"/></block></for>
        <comment type="block" pos:line="67" pos:column="9">/* Intentional no APLOGNO */</comment>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">ap_log_perror<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">(<argument><expr><name pos:line="68" pos:column="23">APLOG_MARK<pos:position pos:line="68" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="35">GCSLOG_LEVEL<pos:position pos:line="68" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="49">0<pos:position pos:line="68" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="52">pool<pos:position pos:line="68" pos:column="56"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="69" pos:column="23">"h2_push_diary_digest_get: golomb compressed hashes, %d bytes"<pos:position pos:line="69" pos:column="85"/></literal></expr></argument>,
                      <argument><expr><operator pos:line="70" pos:column="23">(<pos:position pos:line="70" pos:column="24"/></operator><name pos:line="70" pos:column="24">int<pos:position pos:line="70" pos:column="27"/></name><operator pos:line="70" pos:column="27">)<pos:position pos:line="70" pos:column="28"/></operator><name><name pos:line="70" pos:column="28">encoder<pos:position pos:line="70" pos:column="35"/></name><operator pos:line="70" pos:column="35">.<pos:position pos:line="70" pos:column="36"/></operator><name pos:line="70" pos:column="36">offset<pos:position pos:line="70" pos:column="42"/></name></name> <operator pos:line="70" pos:column="43">+<pos:position pos:line="70" pos:column="44"/></operator> <literal type="number" pos:line="70" pos:column="45">1<pos:position pos:line="70" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="72" pos:column="5">*<pos:position pos:line="72" pos:column="6"/></operator><name pos:line="72" pos:column="6">pdata<pos:position pos:line="72" pos:column="11"/></name> <operator pos:line="72" pos:column="12">=<pos:position pos:line="72" pos:column="13"/></operator> <operator pos:line="72" pos:column="14">(<pos:position pos:line="72" pos:column="15"/></operator><specifier pos:line="72" pos:column="15">const<pos:position pos:line="72" pos:column="20"/></specifier> <name pos:line="72" pos:column="21">char<pos:position pos:line="72" pos:column="25"/></name> <operator pos:line="72" pos:column="26">*<pos:position pos:line="72" pos:column="27"/></operator><operator pos:line="72" pos:column="27">)<pos:position pos:line="72" pos:column="28"/></operator><name><name pos:line="72" pos:column="28">encoder<pos:position pos:line="72" pos:column="35"/></name><operator pos:line="72" pos:column="35">.<pos:position pos:line="72" pos:column="36"/></operator><name pos:line="72" pos:column="36">data<pos:position pos:line="72" pos:column="40"/></name></name></expr>;<pos:position pos:line="72" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="73" pos:column="5">*<pos:position pos:line="73" pos:column="6"/></operator><name pos:line="73" pos:column="6">plen<pos:position pos:line="73" pos:column="10"/></name> <operator pos:line="73" pos:column="11">=<pos:position pos:line="73" pos:column="12"/></operator> <name><name pos:line="73" pos:column="13">encoder<pos:position pos:line="73" pos:column="20"/></name><operator pos:line="73" pos:column="20">.<pos:position pos:line="73" pos:column="21"/></operator><name pos:line="73" pos:column="21">offset<pos:position pos:line="73" pos:column="27"/></name></name> <operator pos:line="73" pos:column="28">+<pos:position pos:line="73" pos:column="29"/></operator> <literal type="number" pos:line="73" pos:column="30">1<pos:position pos:line="73" pos:column="31"/></literal></expr>;<pos:position pos:line="73" pos:column="32"/></expr_stmt>
    
    <return pos:line="75" pos:column="5">return <expr><name pos:line="75" pos:column="12">APR_SUCCESS<pos:position pos:line="75" pos:column="23"/></name></expr>;<pos:position pos:line="75" pos:column="24"/></return>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

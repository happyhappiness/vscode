<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_460_httpd-2.4.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">make_forensic_log_scfg<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">apr_pool_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">p<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">server_rec<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">s<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">fcfg<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">cfg<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><call><name pos:line="3" pos:column="17">apr_pcalloc<pos:position pos:line="3" pos:column="28"/></name><argument_list pos:line="3" pos:column="28">(<argument><expr><name pos:line="3" pos:column="29">p<pos:position pos:line="3" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="32">sizeof <name><pos:position pos:line="3" pos:column="39"/></name></sizeof>*<name pos:line="3" pos:column="40">cfg<pos:position pos:line="3" pos:column="43"/></name></expr></argument>)<pos:position pos:line="3" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="5" pos:column="5">cfg<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">-&gt;<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="10">logname<pos:position pos:line="5" pos:column="17"/></name></name> <operator pos:line="5" pos:column="18">=<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr>;<pos:position pos:line="5" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">cfg<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">-&gt;<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="10">fd<pos:position pos:line="6" pos:column="12"/></name></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <name pos:line="6" pos:column="15">NULL<pos:position pos:line="6" pos:column="19"/></name></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>

    <return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">cfg<pos:position pos:line="8" pos:column="15"/></name></expr>;<pos:position pos:line="8" pos:column="16"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

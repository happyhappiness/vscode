<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_357_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">dav_error<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">dav_insert_coreprop<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">dav_propdb<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">propdb<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">propid<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier> <name pos:line="2" pos:column="58">char<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">name<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="3" pos:column="40">dav_prop_insert<pos:position pos:line="3" pos:column="55"/></name></type> <name pos:line="3" pos:column="56">what<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="4" pos:column="40">apr_text_header<pos:position pos:line="4" pos:column="55"/></name> <modifier pos:line="4" pos:column="56">*<pos:position pos:line="4" pos:column="57"/></modifier></type><name pos:line="4" pos:column="57">phdr<pos:position pos:line="4" pos:column="61"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="5" pos:column="40">dav_prop_insert<pos:position pos:line="5" pos:column="55"/></name> <modifier pos:line="5" pos:column="56">*<pos:position pos:line="5" pos:column="57"/></modifier></type><name pos:line="5" pos:column="57">inserted<pos:position pos:line="5" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="66"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">value<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">NULL<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">dav_error<pos:position pos:line="8" pos:column="14"/></name> <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type><name pos:line="8" pos:column="16">err<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="10" pos:column="5">*<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">inserted<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">DAV_PROP_INSERT_NOTDEF<pos:position pos:line="10" pos:column="39"/></name></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* fast-path the common case */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">propid<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">==<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">DAV_PROPID_CORE_UNKNOWN<pos:position pos:line="13" pos:column="42"/></name></expr>)<pos:position pos:line="13" pos:column="43"/></condition><then pos:line="13" pos:column="43">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></return></block></then></if>

    <switch pos:line="16" pos:column="5">switch <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">propid<pos:position pos:line="16" pos:column="19"/></name></expr>)<pos:position pos:line="16" pos:column="20"/></condition> <block pos:line="16" pos:column="21">{

    <case pos:line="18" pos:column="5">case <expr><name pos:line="18" pos:column="10">DAV_PROPID_CORE_lockdiscovery<pos:position pos:line="18" pos:column="39"/></name></expr>:<pos:position pos:line="18" pos:column="40"/></case>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">propdb<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">lockdb<pos:position pos:line="19" pos:column="27"/></name></name> <operator pos:line="19" pos:column="28">!=<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="31">NULL<pos:position pos:line="19" pos:column="35"/></name></expr>)<pos:position pos:line="19" pos:column="36"/></condition><then pos:line="19" pos:column="36"> <block pos:line="19" pos:column="37">{
            <decl_stmt><decl><type><name pos:line="20" pos:column="13">dav_lock<pos:position pos:line="20" pos:column="21"/></name> <modifier pos:line="20" pos:column="22">*<pos:position pos:line="20" pos:column="23"/></modifier></type><name pos:line="20" pos:column="23">locks<pos:position pos:line="20" pos:column="28"/></name></decl>;<pos:position pos:line="20" pos:column="29"/></decl_stmt>

            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><operator pos:line="22" pos:column="17">(<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">err<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <call><name pos:line="22" pos:column="24">dav_lock_query<pos:position pos:line="22" pos:column="38"/></name><argument_list pos:line="22" pos:column="38">(<argument><expr><name><name pos:line="22" pos:column="39">propdb<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">-&gt;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="47">lockdb<pos:position pos:line="22" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="55">propdb<pos:position pos:line="22" pos:column="61"/></name><operator pos:line="22" pos:column="61">-&gt;<pos:position pos:line="22" pos:column="66"/></operator><name pos:line="22" pos:column="63">resource<pos:position pos:line="22" pos:column="71"/></name></name></expr></argument>,
                                      <argument><expr><operator pos:line="23" pos:column="39">&amp;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="40">locks<pos:position pos:line="23" pos:column="45"/></name></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call><operator pos:line="23" pos:column="46">)<pos:position pos:line="23" pos:column="47"/></operator> <operator pos:line="23" pos:column="48">!=<pos:position pos:line="23" pos:column="50"/></operator> <name pos:line="23" pos:column="51">NULL<pos:position pos:line="23" pos:column="55"/></name></expr>)<pos:position pos:line="23" pos:column="56"/></condition><then pos:line="23" pos:column="56"> <block pos:line="23" pos:column="57">{
                <return pos:line="24" pos:column="17">return <expr><call><name pos:line="24" pos:column="24">dav_push_error<pos:position pos:line="24" pos:column="38"/></name><argument_list pos:line="24" pos:column="38">(<argument><expr><name><name pos:line="24" pos:column="39">propdb<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">-&gt;<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="47">p<pos:position pos:line="24" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="50">err<pos:position pos:line="24" pos:column="53"/></name><operator pos:line="24" pos:column="53">-&gt;<pos:position pos:line="24" pos:column="58"/></operator><name pos:line="24" pos:column="55">status<pos:position pos:line="24" pos:column="61"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="63">0<pos:position pos:line="24" pos:column="64"/></literal></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="25" pos:column="39">"DAV:lockdiscovery could not be "<pos:position pos:line="25" pos:column="72"/></literal>
                                      <literal type="string" pos:line="26" pos:column="39">"determined due to a problem fetching "<pos:position pos:line="26" pos:column="78"/></literal>
                                      <literal type="string" pos:line="27" pos:column="39">"the locks for this resource."<pos:position pos:line="27" pos:column="69"/></literal></expr></argument>,
                                      <argument><expr><name pos:line="28" pos:column="39">err<pos:position pos:line="28" pos:column="42"/></name></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="44"/></return>
            }<pos:position pos:line="29" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="31" pos:column="13">/* fast-path the no-locks case */</comment>
            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><name pos:line="32" pos:column="17">locks<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">==<pos:position pos:line="32" pos:column="25"/></operator> <name pos:line="32" pos:column="26">NULL<pos:position pos:line="32" pos:column="30"/></name></expr>)<pos:position pos:line="32" pos:column="31"/></condition><then pos:line="32" pos:column="31"> <block pos:line="32" pos:column="32">{
                <expr_stmt><expr><name pos:line="33" pos:column="17">value<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <literal type="string" pos:line="33" pos:column="25">""<pos:position pos:line="33" pos:column="27"/></literal></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="34" pos:column="14"/></block></then>
            <else pos:line="35" pos:column="13">else <block pos:line="35" pos:column="18">{
                <comment type="block" pos:line="36" pos:column="17">/*
                ** This may modify the buffer. value may point to
                ** wb_lock.pbuf or a string constant.
                */</comment>
                <expr_stmt><expr><name pos:line="40" pos:column="17">value<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <call><name pos:line="40" pos:column="25">dav_lock_get_activelock<pos:position pos:line="40" pos:column="48"/></name><argument_list pos:line="40" pos:column="48">(<argument><expr><name><name pos:line="40" pos:column="49">propdb<pos:position pos:line="40" pos:column="55"/></name><operator pos:line="40" pos:column="55">-&gt;<pos:position pos:line="40" pos:column="60"/></operator><name pos:line="40" pos:column="57">r<pos:position pos:line="40" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="60">locks<pos:position pos:line="40" pos:column="65"/></name></expr></argument>,
                                                <argument><expr><operator pos:line="41" pos:column="49">&amp;<pos:position pos:line="41" pos:column="54"/></operator><name><name pos:line="41" pos:column="50">propdb<pos:position pos:line="41" pos:column="56"/></name><operator pos:line="41" pos:column="56">-&gt;<pos:position pos:line="41" pos:column="61"/></operator><name pos:line="41" pos:column="58">wb_lock<pos:position pos:line="41" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="67"/></expr_stmt>

                <comment type="block" pos:line="43" pos:column="17">/* make a copy to isolate it from changes to wb_lock */</comment>
                <expr_stmt><expr><name pos:line="44" pos:column="17">value<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">=<pos:position pos:line="44" pos:column="24"/></operator> <call><name pos:line="44" pos:column="25">apr_pstrdup<pos:position pos:line="44" pos:column="36"/></name><argument_list pos:line="44" pos:column="36">(<argument><expr><name><name pos:line="44" pos:column="37">propdb<pos:position pos:line="44" pos:column="43"/></name><operator pos:line="44" pos:column="43">-&gt;<pos:position pos:line="44" pos:column="48"/></operator><name pos:line="44" pos:column="45">p<pos:position pos:line="44" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="48">propdb<pos:position pos:line="44" pos:column="54"/></name><operator pos:line="44" pos:column="54">-&gt;<pos:position pos:line="44" pos:column="59"/></operator><name pos:line="44" pos:column="56">wb_lock<pos:position pos:line="44" pos:column="63"/></name><operator pos:line="44" pos:column="63">.<pos:position pos:line="44" pos:column="64"/></operator><name pos:line="44" pos:column="64">buf<pos:position pos:line="44" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="69"/></expr_stmt>
            }<pos:position pos:line="45" pos:column="14"/></block></else></if>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
        <break pos:line="47" pos:column="9">break;<pos:position pos:line="47" pos:column="15"/></break>

    <case pos:line="49" pos:column="5">case <expr><name pos:line="49" pos:column="10">DAV_PROPID_CORE_supportedlock<pos:position pos:line="49" pos:column="39"/></name></expr>:<pos:position pos:line="49" pos:column="40"/></case>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name><name pos:line="50" pos:column="13">propdb<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">-&gt;<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="21">lockdb<pos:position pos:line="50" pos:column="27"/></name></name> <operator pos:line="50" pos:column="28">!=<pos:position pos:line="50" pos:column="30"/></operator> <name pos:line="50" pos:column="31">NULL<pos:position pos:line="50" pos:column="35"/></name></expr>)<pos:position pos:line="50" pos:column="36"/></condition><then pos:line="50" pos:column="36"> <block pos:line="50" pos:column="37">{
            <expr_stmt><expr><name pos:line="51" pos:column="13">value<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">=<pos:position pos:line="51" pos:column="20"/></operator> <call pos:line="51" pos:column="21">(<modifier pos:line="51" pos:column="22">*<pos:position pos:line="51" pos:column="23"/></modifier><name><name pos:line="51" pos:column="23">propdb<pos:position pos:line="51" pos:column="29"/></name><operator pos:line="51" pos:column="29">-&gt;<pos:position pos:line="51" pos:column="34"/></operator><name pos:line="51" pos:column="31">lockdb<pos:position pos:line="51" pos:column="37"/></name><operator pos:line="51" pos:column="37">-&gt;<pos:position pos:line="51" pos:column="42"/></operator><name pos:line="51" pos:column="39">hooks<pos:position pos:line="51" pos:column="44"/></name><operator pos:line="51" pos:column="44">-&gt;<pos:position pos:line="51" pos:column="49"/></operator><name pos:line="51" pos:column="46">get_supportedlock<pos:position pos:line="51" pos:column="63"/></name></name>)<argument_list pos:line="51" pos:column="64">(<argument><expr><name><name pos:line="51" pos:column="65">propdb<pos:position pos:line="51" pos:column="71"/></name><operator pos:line="51" pos:column="71">-&gt;<pos:position pos:line="51" pos:column="76"/></operator><name pos:line="51" pos:column="73">resource<pos:position pos:line="51" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="83"/></expr_stmt>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>
        <break pos:line="53" pos:column="9">break;<pos:position pos:line="53" pos:column="15"/></break>

    <case pos:line="55" pos:column="5">case <expr><name pos:line="55" pos:column="10">DAV_PROPID_CORE_getcontenttype<pos:position pos:line="55" pos:column="40"/></name></expr>:<pos:position pos:line="55" pos:column="41"/></case>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">propdb<pos:position pos:line="56" pos:column="19"/></name><operator pos:line="56" pos:column="19">-&gt;<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="21">subreq<pos:position pos:line="56" pos:column="27"/></name></name> <operator pos:line="56" pos:column="28">==<pos:position pos:line="56" pos:column="30"/></operator> <name pos:line="56" pos:column="31">NULL<pos:position pos:line="56" pos:column="35"/></name></expr>)<pos:position pos:line="56" pos:column="36"/></condition><then pos:line="56" pos:column="36"> <block pos:line="56" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">dav_do_prop_subreq<pos:position pos:line="57" pos:column="31"/></name><argument_list pos:line="57" pos:column="31">(<argument><expr><name pos:line="57" pos:column="32">propdb<pos:position pos:line="57" pos:column="38"/></name></expr></argument>)<pos:position pos:line="57" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>
        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name><name pos:line="59" pos:column="13">propdb<pos:position pos:line="59" pos:column="19"/></name><operator pos:line="59" pos:column="19">-&gt;<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="21">subreq<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">-&gt;<pos:position pos:line="59" pos:column="32"/></operator><name pos:line="59" pos:column="29">content_type<pos:position pos:line="59" pos:column="41"/></name></name> <operator pos:line="59" pos:column="42">!=<pos:position pos:line="59" pos:column="44"/></operator> <name pos:line="59" pos:column="45">NULL<pos:position pos:line="59" pos:column="49"/></name></expr>)<pos:position pos:line="59" pos:column="50"/></condition><then pos:line="59" pos:column="50"> <block pos:line="59" pos:column="51">{
            <expr_stmt><expr><name pos:line="60" pos:column="13">value<pos:position pos:line="60" pos:column="18"/></name> <operator pos:line="60" pos:column="19">=<pos:position pos:line="60" pos:column="20"/></operator> <name><name pos:line="60" pos:column="21">propdb<pos:position pos:line="60" pos:column="27"/></name><operator pos:line="60" pos:column="27">-&gt;<pos:position pos:line="60" pos:column="32"/></operator><name pos:line="60" pos:column="29">subreq<pos:position pos:line="60" pos:column="35"/></name><operator pos:line="60" pos:column="35">-&gt;<pos:position pos:line="60" pos:column="40"/></operator><name pos:line="60" pos:column="37">content_type<pos:position pos:line="60" pos:column="49"/></name></name></expr>;<pos:position pos:line="60" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>
        <break pos:line="62" pos:column="9">break;<pos:position pos:line="62" pos:column="15"/></break>

    <case pos:line="64" pos:column="5">case <expr><name pos:line="64" pos:column="10">DAV_PROPID_CORE_getcontentlanguage<pos:position pos:line="64" pos:column="44"/></name></expr>:<pos:position pos:line="64" pos:column="45"/></case>
    <block pos:line="65" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="66" pos:column="9">const<pos:position pos:line="66" pos:column="14"/></specifier> <name pos:line="66" pos:column="15">char<pos:position pos:line="66" pos:column="19"/></name> <modifier pos:line="66" pos:column="20">*<pos:position pos:line="66" pos:column="21"/></modifier></type><name pos:line="66" pos:column="21">lang<pos:position pos:line="66" pos:column="25"/></name></decl>;<pos:position pos:line="66" pos:column="26"/></decl_stmt>

        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name><name pos:line="68" pos:column="13">propdb<pos:position pos:line="68" pos:column="19"/></name><operator pos:line="68" pos:column="19">-&gt;<pos:position pos:line="68" pos:column="24"/></operator><name pos:line="68" pos:column="21">subreq<pos:position pos:line="68" pos:column="27"/></name></name> <operator pos:line="68" pos:column="28">==<pos:position pos:line="68" pos:column="30"/></operator> <name pos:line="68" pos:column="31">NULL<pos:position pos:line="68" pos:column="35"/></name></expr>)<pos:position pos:line="68" pos:column="36"/></condition><then pos:line="68" pos:column="36"> <block pos:line="68" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">dav_do_prop_subreq<pos:position pos:line="69" pos:column="31"/></name><argument_list pos:line="69" pos:column="31">(<argument><expr><name pos:line="69" pos:column="32">propdb<pos:position pos:line="69" pos:column="38"/></name></expr></argument>)<pos:position pos:line="69" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if>
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><operator pos:line="71" pos:column="13">(<pos:position pos:line="71" pos:column="14"/></operator><name pos:line="71" pos:column="14">lang<pos:position pos:line="71" pos:column="18"/></name> <operator pos:line="71" pos:column="19">=<pos:position pos:line="71" pos:column="20"/></operator> <call><name pos:line="71" pos:column="21">apr_table_get<pos:position pos:line="71" pos:column="34"/></name><argument_list pos:line="71" pos:column="34">(<argument><expr><name><name pos:line="71" pos:column="35">propdb<pos:position pos:line="71" pos:column="41"/></name><operator pos:line="71" pos:column="41">-&gt;<pos:position pos:line="71" pos:column="46"/></operator><name pos:line="71" pos:column="43">subreq<pos:position pos:line="71" pos:column="49"/></name><operator pos:line="71" pos:column="49">-&gt;<pos:position pos:line="71" pos:column="54"/></operator><name pos:line="71" pos:column="51">headers_out<pos:position pos:line="71" pos:column="62"/></name></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="72" pos:column="34">"Content-Language"<pos:position pos:line="72" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="53"/></argument_list></call><operator pos:line="72" pos:column="53">)<pos:position pos:line="72" pos:column="54"/></operator> <operator pos:line="72" pos:column="55">!=<pos:position pos:line="72" pos:column="57"/></operator> <name pos:line="72" pos:column="58">NULL<pos:position pos:line="72" pos:column="62"/></name></expr>)<pos:position pos:line="72" pos:column="63"/></condition><then pos:line="72" pos:column="63"> <block pos:line="72" pos:column="64">{
            <expr_stmt><expr><name pos:line="73" pos:column="13">value<pos:position pos:line="73" pos:column="18"/></name> <operator pos:line="73" pos:column="19">=<pos:position pos:line="73" pos:column="20"/></operator> <name pos:line="73" pos:column="21">lang<pos:position pos:line="73" pos:column="25"/></name></expr>;<pos:position pos:line="73" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if>
        <break pos:line="75" pos:column="9">break;<pos:position pos:line="75" pos:column="15"/></break>
    }<pos:position pos:line="76" pos:column="6"/></block>

    <default pos:line="78" pos:column="5">default:<pos:position pos:line="78" pos:column="13"/></default>
        <comment type="block" pos:line="79" pos:column="9">/* fall through to interpret as a dead property */</comment>
        <break pos:line="80" pos:column="9">break;<pos:position pos:line="80" pos:column="15"/></break>
    }<pos:position pos:line="81" pos:column="6"/></block></switch>

    <comment type="block" pos:line="83" pos:column="5">/* if something was supplied, then insert it */</comment>
    <if pos:line="84" pos:column="5">if <condition pos:line="84" pos:column="8">(<expr><name pos:line="84" pos:column="9">value<pos:position pos:line="84" pos:column="14"/></name> <operator pos:line="84" pos:column="15">!=<pos:position pos:line="84" pos:column="17"/></operator> <name pos:line="84" pos:column="18">NULL<pos:position pos:line="84" pos:column="22"/></name></expr>)<pos:position pos:line="84" pos:column="23"/></condition><then pos:line="84" pos:column="23"> <block pos:line="84" pos:column="24">{
        <decl_stmt><decl><type><specifier pos:line="85" pos:column="9">const<pos:position pos:line="85" pos:column="14"/></specifier> <name pos:line="85" pos:column="15">char<pos:position pos:line="85" pos:column="19"/></name> <modifier pos:line="85" pos:column="20">*<pos:position pos:line="85" pos:column="21"/></modifier></type><name pos:line="85" pos:column="21">s<pos:position pos:line="85" pos:column="22"/></name></decl>;<pos:position pos:line="85" pos:column="23"/></decl_stmt>

        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><name pos:line="87" pos:column="13">what<pos:position pos:line="87" pos:column="17"/></name> <operator pos:line="87" pos:column="18">==<pos:position pos:line="87" pos:column="20"/></operator> <name pos:line="87" pos:column="21">DAV_PROP_INSERT_SUPPORTED<pos:position pos:line="87" pos:column="46"/></name></expr>)<pos:position pos:line="87" pos:column="47"/></condition><then pos:line="87" pos:column="47"> <block pos:line="87" pos:column="48">{
            <comment type="block" pos:line="88" pos:column="13">/* use D: prefix to refer to the DAV: namespace URI,
             * and let the namespace attribute default to "DAV:"
             */</comment>
            <expr_stmt><expr><name pos:line="91" pos:column="13">s<pos:position pos:line="91" pos:column="14"/></name> <operator pos:line="91" pos:column="15">=<pos:position pos:line="91" pos:column="16"/></operator> <call><name pos:line="91" pos:column="17">apr_psprintf<pos:position pos:line="91" pos:column="29"/></name><argument_list pos:line="91" pos:column="29">(<argument><expr><name><name pos:line="91" pos:column="30">propdb<pos:position pos:line="91" pos:column="36"/></name><operator pos:line="91" pos:column="36">-&gt;<pos:position pos:line="91" pos:column="41"/></operator><name pos:line="91" pos:column="38">p<pos:position pos:line="91" pos:column="39"/></name></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="92" pos:column="29">"&lt;D:supported-live-property D:name=\"%s\"/&gt;"<pos:position pos:line="92" pos:column="79"/></literal> <name pos:line="92" pos:column="74">DEBUG_CR<pos:position pos:line="92" pos:column="82"/></name></expr></argument>,
                            <argument><expr><name pos:line="93" pos:column="29">name<pos:position pos:line="93" pos:column="33"/></name></expr></argument>)<pos:position pos:line="93" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="94" pos:column="10"/></block></then>
        <elseif pos:line="95" pos:column="9">else <if pos:line="95" pos:column="14">if <condition pos:line="95" pos:column="17">(<expr><name pos:line="95" pos:column="18">what<pos:position pos:line="95" pos:column="22"/></name> <operator pos:line="95" pos:column="23">==<pos:position pos:line="95" pos:column="25"/></operator> <name pos:line="95" pos:column="26">DAV_PROP_INSERT_VALUE<pos:position pos:line="95" pos:column="47"/></name> <operator pos:line="95" pos:column="48">&amp;&amp;<pos:position pos:line="95" pos:column="58"/></operator> <operator pos:line="95" pos:column="51">*<pos:position pos:line="95" pos:column="52"/></operator><name pos:line="95" pos:column="52">value<pos:position pos:line="95" pos:column="57"/></name> <operator pos:line="95" pos:column="58">!=<pos:position pos:line="95" pos:column="60"/></operator> <literal type="char" pos:line="95" pos:column="61">'\0'<pos:position pos:line="95" pos:column="65"/></literal></expr>)<pos:position pos:line="95" pos:column="66"/></condition><then pos:line="95" pos:column="66"> <block pos:line="95" pos:column="67">{
            <comment type="block" pos:line="96" pos:column="13">/* use D: prefix to refer to the DAV: namespace URI */</comment>
            <expr_stmt><expr><name pos:line="97" pos:column="13">s<pos:position pos:line="97" pos:column="14"/></name> <operator pos:line="97" pos:column="15">=<pos:position pos:line="97" pos:column="16"/></operator> <call><name pos:line="97" pos:column="17">apr_psprintf<pos:position pos:line="97" pos:column="29"/></name><argument_list pos:line="97" pos:column="29">(<argument><expr><name><name pos:line="97" pos:column="30">propdb<pos:position pos:line="97" pos:column="36"/></name><operator pos:line="97" pos:column="36">-&gt;<pos:position pos:line="97" pos:column="41"/></operator><name pos:line="97" pos:column="38">p<pos:position pos:line="97" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="41">"&lt;D:%s&gt;%s&lt;/D:%s&gt;"<pos:position pos:line="97" pos:column="70"/></literal> <name pos:line="97" pos:column="59">DEBUG_CR<pos:position pos:line="97" pos:column="67"/></name></expr></argument>,
                            <argument><expr><name pos:line="98" pos:column="29">name<pos:position pos:line="98" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="35">value<pos:position pos:line="98" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="42">name<pos:position pos:line="98" pos:column="46"/></name></expr></argument>)<pos:position pos:line="98" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="99" pos:column="10"/></block></then></if></elseif>
        <else pos:line="100" pos:column="9">else <block pos:line="100" pos:column="14">{
            <comment type="block" pos:line="101" pos:column="13">/* use D: prefix to refer to the DAV: namespace URI */</comment>
            <expr_stmt><expr><name pos:line="102" pos:column="13">s<pos:position pos:line="102" pos:column="14"/></name> <operator pos:line="102" pos:column="15">=<pos:position pos:line="102" pos:column="16"/></operator> <call><name pos:line="102" pos:column="17">apr_psprintf<pos:position pos:line="102" pos:column="29"/></name><argument_list pos:line="102" pos:column="29">(<argument><expr><name><name pos:line="102" pos:column="30">propdb<pos:position pos:line="102" pos:column="36"/></name><operator pos:line="102" pos:column="36">-&gt;<pos:position pos:line="102" pos:column="41"/></operator><name pos:line="102" pos:column="38">p<pos:position pos:line="102" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="41">"&lt;D:%s/&gt;"<pos:position pos:line="102" pos:column="56"/></literal> <name pos:line="102" pos:column="51">DEBUG_CR<pos:position pos:line="102" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="61">name<pos:position pos:line="102" pos:column="65"/></name></expr></argument>)<pos:position pos:line="102" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="103" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="104" pos:column="9">apr_text_append<pos:position pos:line="104" pos:column="24"/></name><argument_list pos:line="104" pos:column="24">(<argument><expr><name><name pos:line="104" pos:column="25">propdb<pos:position pos:line="104" pos:column="31"/></name><operator pos:line="104" pos:column="31">-&gt;<pos:position pos:line="104" pos:column="36"/></operator><name pos:line="104" pos:column="33">p<pos:position pos:line="104" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="36">phdr<pos:position pos:line="104" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="42">s<pos:position pos:line="104" pos:column="43"/></name></expr></argument>)<pos:position pos:line="104" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="45"/></expr_stmt>

        <expr_stmt><expr><operator pos:line="106" pos:column="9">*<pos:position pos:line="106" pos:column="10"/></operator><name pos:line="106" pos:column="10">inserted<pos:position pos:line="106" pos:column="18"/></name> <operator pos:line="106" pos:column="19">=<pos:position pos:line="106" pos:column="20"/></operator> <name pos:line="106" pos:column="21">what<pos:position pos:line="106" pos:column="25"/></name></expr>;<pos:position pos:line="106" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="107" pos:column="6"/></block></then></if>

    <return pos:line="109" pos:column="5">return <expr><name pos:line="109" pos:column="12">NULL<pos:position pos:line="109" pos:column="16"/></name></expr>;<pos:position pos:line="109" pos:column="17"/></return>
}<pos:position pos:line="110" pos:column="2"/></block></function></unit>

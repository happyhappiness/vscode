<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1379_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">enum<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">header_state<pos:position pos:line="1" pos:column="25"/></name></name></type> <name pos:line="1" pos:column="26">get_header_line<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">buffer<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">len<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">apr_file_t<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">map<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">buf_end<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">buffer<pos:position pos:line="3" pos:column="27"/></name> <operator pos:line="3" pos:column="28">+<pos:position pos:line="3" pos:column="29"/></operator> <name pos:line="3" pos:column="30">len<pos:position pos:line="3" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">cp<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">c<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* Get a noncommented line */</comment>

    <do pos:line="9" pos:column="5">do <block pos:line="9" pos:column="8">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">apr_file_gets<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">buffer<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="35">MAX_STRING_LEN<pos:position pos:line="10" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="51">map<pos:position pos:line="10" pos:column="54"/></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call> <operator pos:line="10" pos:column="56">!=<pos:position pos:line="10" pos:column="58"/></operator> <name pos:line="10" pos:column="59">APR_SUCCESS<pos:position pos:line="10" pos:column="70"/></name></expr>)<pos:position pos:line="10" pos:column="71"/></condition><then pos:line="10" pos:column="71"> <block pos:line="10" pos:column="72">{
            <return pos:line="11" pos:column="13">return <expr><name pos:line="11" pos:column="20">header_eof<pos:position pos:line="11" pos:column="30"/></name></expr>;<pos:position pos:line="11" pos:column="31"/></return>
        }<pos:position pos:line="12" pos:column="10"/></block></then></if>
    }<pos:position pos:line="13" pos:column="6"/></block> while <condition pos:line="13" pos:column="13">(<expr><name><name pos:line="13" pos:column="14">buffer<pos:position pos:line="13" pos:column="20"/></name><index pos:line="13" pos:column="20">[<expr><literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal></expr>]<pos:position pos:line="13" pos:column="23"/></index></name> <operator pos:line="13" pos:column="24">==<pos:position pos:line="13" pos:column="26"/></operator> <literal type="char" pos:line="13" pos:column="27">'#'<pos:position pos:line="13" pos:column="30"/></literal></expr>)<pos:position pos:line="13" pos:column="31"/></condition>;<pos:position pos:line="13" pos:column="32"/></do>

    <comment type="block" pos:line="15" pos:column="5">/* If blank, just return it --- this ends information on this variant */</comment>

    <for pos:line="17" pos:column="5">for <control pos:line="17" pos:column="9">(<init><expr><name pos:line="17" pos:column="10">cp<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <name pos:line="17" pos:column="15">buffer<pos:position pos:line="17" pos:column="21"/></name></expr>;<pos:position pos:line="17" pos:column="22"/></init> <condition><expr><operator pos:line="17" pos:column="23">(<pos:position pos:line="17" pos:column="24"/></operator><operator pos:line="17" pos:column="24">*<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">cp<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">&amp;&amp;<pos:position pos:line="17" pos:column="38"/></operator> <call><name pos:line="17" pos:column="31">apr_isspace<pos:position pos:line="17" pos:column="42"/></name><argument_list pos:line="17" pos:column="42">(<argument><expr><operator pos:line="17" pos:column="43">*<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="44">cp<pos:position pos:line="17" pos:column="46"/></name></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></call><operator pos:line="17" pos:column="47">)<pos:position pos:line="17" pos:column="48"/></operator></expr>;<pos:position pos:line="17" pos:column="49"/></condition> <incr><expr><operator pos:line="17" pos:column="50">++<pos:position pos:line="17" pos:column="52"/></operator><name pos:line="17" pos:column="52">cp<pos:position pos:line="17" pos:column="54"/></name></expr></incr>)<pos:position pos:line="17" pos:column="55"/></control> <block pos:line="17" pos:column="56">{
        <continue pos:line="18" pos:column="9">continue;<pos:position pos:line="18" pos:column="18"/></continue>
    }<pos:position pos:line="19" pos:column="6"/></block></for>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">*<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">cp<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">==<pos:position pos:line="21" pos:column="15"/></operator> <literal type="char" pos:line="21" pos:column="16">'\0'<pos:position pos:line="21" pos:column="20"/></literal></expr>)<pos:position pos:line="21" pos:column="21"/></condition><then pos:line="21" pos:column="21"> <block pos:line="21" pos:column="22">{
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">header_sep<pos:position pos:line="22" pos:column="26"/></name></expr>;<pos:position pos:line="22" pos:column="27"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* If non-blank, go looking for header lines, but note that we still
     * have to treat comments specially...
     */</comment>

    <expr_stmt><expr><name pos:line="29" pos:column="5">cp<pos:position pos:line="29" pos:column="7"/></name> <operator pos:line="29" pos:column="8">+=<pos:position pos:line="29" pos:column="10"/></operator> <call><name pos:line="29" pos:column="11">strlen<pos:position pos:line="29" pos:column="17"/></name><argument_list pos:line="29" pos:column="17">(<argument><expr><name pos:line="29" pos:column="18">cp<pos:position pos:line="29" pos:column="20"/></name></expr></argument>)<pos:position pos:line="29" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="31" pos:column="5">/* We need to shortcut the rest of this block following the Body:
     * tag - we will not look for continutation after this line.
     */</comment>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">!<pos:position pos:line="34" pos:column="10"/></operator><call><name pos:line="34" pos:column="10">strncasecmp<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name pos:line="34" pos:column="22">buffer<pos:position pos:line="34" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="30">"Body:"<pos:position pos:line="34" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="39">5<pos:position pos:line="34" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="42"/></condition><then pos:line="34" pos:column="42">
        <block type="pseudo"><return pos:line="35" pos:column="9">return <expr><name pos:line="35" pos:column="16">header_seen<pos:position pos:line="35" pos:column="27"/></name></expr>;<pos:position pos:line="35" pos:column="28"/></return></block></then></if>

    <while pos:line="37" pos:column="5">while <condition pos:line="37" pos:column="11">(<expr><call><name pos:line="37" pos:column="12">apr_file_getc<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><operator pos:line="37" pos:column="26">&amp;<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="27">c<pos:position pos:line="37" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="30">map<pos:position pos:line="37" pos:column="33"/></name></expr></argument>)<pos:position pos:line="37" pos:column="34"/></argument_list></call> <operator pos:line="37" pos:column="35">!=<pos:position pos:line="37" pos:column="37"/></operator> <name pos:line="37" pos:column="38">APR_EOF<pos:position pos:line="37" pos:column="45"/></name></expr>)<pos:position pos:line="37" pos:column="46"/></condition> <block pos:line="37" pos:column="47">{
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">c<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">==<pos:position pos:line="38" pos:column="17"/></operator> <literal type="char" pos:line="38" pos:column="18">'#'<pos:position pos:line="38" pos:column="21"/></literal></expr>)<pos:position pos:line="38" pos:column="22"/></condition><then pos:line="38" pos:column="22"> <block pos:line="38" pos:column="23">{
            <comment type="block" pos:line="39" pos:column="13">/* Comment line */</comment>
            <while pos:line="40" pos:column="13">while <condition pos:line="40" pos:column="19">(<expr><call><name pos:line="40" pos:column="20">apr_file_getc<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><operator pos:line="40" pos:column="34">&amp;<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="35">c<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="38">map<pos:position pos:line="40" pos:column="41"/></name></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></call> <operator pos:line="40" pos:column="43">!=<pos:position pos:line="40" pos:column="45"/></operator> <name pos:line="40" pos:column="46">APR_EOF<pos:position pos:line="40" pos:column="53"/></name> <operator pos:line="40" pos:column="54">&amp;&amp;<pos:position pos:line="40" pos:column="64"/></operator> <name pos:line="40" pos:column="57">c<pos:position pos:line="40" pos:column="58"/></name> <operator pos:line="40" pos:column="59">!=<pos:position pos:line="40" pos:column="61"/></operator> <literal type="char" pos:line="40" pos:column="62">'\n'<pos:position pos:line="40" pos:column="66"/></literal></expr>)<pos:position pos:line="40" pos:column="67"/></condition> <block pos:line="40" pos:column="68">{
                <continue pos:line="41" pos:column="17">continue;<pos:position pos:line="41" pos:column="26"/></continue>
            }<pos:position pos:line="42" pos:column="14"/></block></while>
        }<pos:position pos:line="43" pos:column="10"/></block></then>
        <elseif pos:line="44" pos:column="9">else <if pos:line="44" pos:column="14">if <condition pos:line="44" pos:column="17">(<expr><call><name pos:line="44" pos:column="18">apr_isspace<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><name pos:line="44" pos:column="30">c<pos:position pos:line="44" pos:column="31"/></name></expr></argument>)<pos:position pos:line="44" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="33"/></condition><then pos:line="44" pos:column="33"> <block pos:line="44" pos:column="34">{
            <comment type="block" pos:line="45" pos:column="13">/* Leading whitespace.  POSSIBLE continuation line
             * Also, possibly blank --- if so, we ungetc() the final newline
             * so that we will pick up the blank line the next time 'round.
             */</comment>

            <while pos:line="50" pos:column="13">while <condition pos:line="50" pos:column="19">(<expr><name pos:line="50" pos:column="20">c<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">!=<pos:position pos:line="50" pos:column="24"/></operator> <literal type="char" pos:line="50" pos:column="25">'\n'<pos:position pos:line="50" pos:column="29"/></literal> <operator pos:line="50" pos:column="30">&amp;&amp;<pos:position pos:line="50" pos:column="40"/></operator> <call><name pos:line="50" pos:column="33">apr_isspace<pos:position pos:line="50" pos:column="44"/></name><argument_list pos:line="50" pos:column="44">(<argument><expr><name pos:line="50" pos:column="45">c<pos:position pos:line="50" pos:column="46"/></name></expr></argument>)<pos:position pos:line="50" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="48"/></condition> <block pos:line="50" pos:column="49">{
                <if pos:line="51" pos:column="17">if<condition pos:line="51" pos:column="19">(<expr><call><name pos:line="51" pos:column="20">apr_file_getc<pos:position pos:line="51" pos:column="33"/></name><argument_list pos:line="51" pos:column="33">(<argument><expr><operator pos:line="51" pos:column="34">&amp;<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="35">c<pos:position pos:line="51" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="38">map<pos:position pos:line="51" pos:column="41"/></name></expr></argument>)<pos:position pos:line="51" pos:column="42"/></argument_list></call> <operator pos:line="51" pos:column="43">!=<pos:position pos:line="51" pos:column="45"/></operator> <name pos:line="51" pos:column="46">APR_SUCCESS<pos:position pos:line="51" pos:column="57"/></name></expr>)<pos:position pos:line="51" pos:column="58"/></condition><then pos:line="51" pos:column="58">
                    <block type="pseudo"><break pos:line="52" pos:column="21">break;<pos:position pos:line="52" pos:column="27"/></break></block></then></if>
            }<pos:position pos:line="53" pos:column="14"/></block></while>

            <expr_stmt><expr><call><name pos:line="55" pos:column="13">apr_file_ungetc<pos:position pos:line="55" pos:column="28"/></name><argument_list pos:line="55" pos:column="28">(<argument><expr><name pos:line="55" pos:column="29">c<pos:position pos:line="55" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="32">map<pos:position pos:line="55" pos:column="35"/></name></expr></argument>)<pos:position pos:line="55" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="37"/></expr_stmt>

            <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><name pos:line="57" pos:column="17">c<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">==<pos:position pos:line="57" pos:column="21"/></operator> <literal type="char" pos:line="57" pos:column="22">'\n'<pos:position pos:line="57" pos:column="26"/></literal></expr>)<pos:position pos:line="57" pos:column="27"/></condition><then pos:line="57" pos:column="27"> <block pos:line="57" pos:column="28">{
                <return pos:line="58" pos:column="17">return <expr><name pos:line="58" pos:column="24">header_seen<pos:position pos:line="58" pos:column="35"/></name></expr>;<pos:position pos:line="58" pos:column="36"/></return>     <comment type="block" pos:line="58" pos:column="41">/* Blank line */</comment>
            }<pos:position pos:line="59" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="61" pos:column="13">/* Continuation */</comment>

            <while pos:line="63" pos:column="13">while <condition pos:line="63" pos:column="19">(   <expr><name pos:line="63" pos:column="23">cp<pos:position pos:line="63" pos:column="25"/></name> <operator pos:line="63" pos:column="26">&lt;<pos:position pos:line="63" pos:column="30"/></operator> <name pos:line="63" pos:column="28">buf_end<pos:position pos:line="63" pos:column="35"/></name> <operator pos:line="63" pos:column="36">-<pos:position pos:line="63" pos:column="37"/></operator> <literal type="number" pos:line="63" pos:column="38">2<pos:position pos:line="63" pos:column="39"/></literal>
                   <operator pos:line="64" pos:column="20">&amp;&amp;<pos:position pos:line="64" pos:column="30"/></operator> <operator pos:line="64" pos:column="23">(<pos:position pos:line="64" pos:column="24"/></operator><call><name pos:line="64" pos:column="24">apr_file_getc<pos:position pos:line="64" pos:column="37"/></name><argument_list pos:line="64" pos:column="37">(<argument><expr><operator pos:line="64" pos:column="38">&amp;<pos:position pos:line="64" pos:column="43"/></operator><name pos:line="64" pos:column="39">c<pos:position pos:line="64" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="42">map<pos:position pos:line="64" pos:column="45"/></name></expr></argument>)<pos:position pos:line="64" pos:column="46"/></argument_list></call><operator pos:line="64" pos:column="46">)<pos:position pos:line="64" pos:column="47"/></operator> <operator pos:line="64" pos:column="48">!=<pos:position pos:line="64" pos:column="50"/></operator> <name pos:line="64" pos:column="51">APR_EOF<pos:position pos:line="64" pos:column="58"/></name>
                   <operator pos:line="65" pos:column="20">&amp;&amp;<pos:position pos:line="65" pos:column="30"/></operator> <name pos:line="65" pos:column="23">c<pos:position pos:line="65" pos:column="24"/></name> <operator pos:line="65" pos:column="25">!=<pos:position pos:line="65" pos:column="27"/></operator> <literal type="char" pos:line="65" pos:column="28">'\n'<pos:position pos:line="65" pos:column="32"/></literal></expr>)<pos:position pos:line="65" pos:column="33"/></condition> <block pos:line="65" pos:column="34">{
                <expr_stmt><expr><operator pos:line="66" pos:column="17">*<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="18">cp<pos:position pos:line="66" pos:column="20"/></name><operator pos:line="66" pos:column="20">++<pos:position pos:line="66" pos:column="22"/></operator> <operator pos:line="66" pos:column="23">=<pos:position pos:line="66" pos:column="24"/></operator> <name pos:line="66" pos:column="25">c<pos:position pos:line="66" pos:column="26"/></name></expr>;<pos:position pos:line="66" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="67" pos:column="14"/></block></while>

            <expr_stmt><expr><operator pos:line="69" pos:column="13">*<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="14">cp<pos:position pos:line="69" pos:column="16"/></name><operator pos:line="69" pos:column="16">++<pos:position pos:line="69" pos:column="18"/></operator> <operator pos:line="69" pos:column="19">=<pos:position pos:line="69" pos:column="20"/></operator> <literal type="char" pos:line="69" pos:column="21">'\n'<pos:position pos:line="69" pos:column="25"/></literal></expr>;<pos:position pos:line="69" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="70" pos:column="13">*<pos:position pos:line="70" pos:column="14"/></operator><name pos:line="70" pos:column="14">cp<pos:position pos:line="70" pos:column="16"/></name> <operator pos:line="70" pos:column="17">=<pos:position pos:line="70" pos:column="18"/></operator> <literal type="char" pos:line="70" pos:column="19">'\0'<pos:position pos:line="70" pos:column="23"/></literal></expr>;<pos:position pos:line="70" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if></elseif>
        <else pos:line="72" pos:column="9">else <block pos:line="72" pos:column="14">{

            <comment type="block" pos:line="74" pos:column="13">/* Line beginning with something other than whitespace */</comment>

            <expr_stmt><expr><call><name pos:line="76" pos:column="13">apr_file_ungetc<pos:position pos:line="76" pos:column="28"/></name><argument_list pos:line="76" pos:column="28">(<argument><expr><name pos:line="76" pos:column="29">c<pos:position pos:line="76" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="32">map<pos:position pos:line="76" pos:column="35"/></name></expr></argument>)<pos:position pos:line="76" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="37"/></expr_stmt>
            <return pos:line="77" pos:column="13">return <expr><name pos:line="77" pos:column="20">header_seen<pos:position pos:line="77" pos:column="31"/></name></expr>;<pos:position pos:line="77" pos:column="32"/></return>
        }<pos:position pos:line="78" pos:column="10"/></block></else></if>
    }<pos:position pos:line="79" pos:column="6"/></block></while>

    <return pos:line="81" pos:column="5">return <expr><name pos:line="81" pos:column="12">header_seen<pos:position pos:line="81" pos:column="23"/></name></expr>;<pos:position pos:line="81" pos:column="24"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4833.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BOOL<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ssl_scache_store<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">server_rec<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">s<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">UCHAR<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">id<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">idlen<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="2" pos:column="23">apr_time_t<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">expiry<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">SSL_SESSION<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">sess<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="3" pos:column="23">apr_pool_t<pos:position pos:line="3" pos:column="33"/></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">p<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="37"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SSLModConfigRec<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">mc<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><call><name pos:line="5" pos:column="27">myModConfig<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">s<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">char<pos:position pos:line="6" pos:column="18"/></name></type> <name><name pos:line="6" pos:column="19">encoded<pos:position pos:line="6" pos:column="26"/></name><index pos:line="6" pos:column="26">[<expr><name pos:line="6" pos:column="27">SSL_SESSION_MAX_DER<pos:position pos:line="6" pos:column="46"/></name></expr>]<pos:position pos:line="6" pos:column="47"/></index></name></decl>, <modifier pos:line="6" pos:column="49">*<pos:position pos:line="6" pos:column="50"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="50">ptr<pos:position pos:line="6" pos:column="53"/></name></decl>;<pos:position pos:line="6" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">int<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">len<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">rv<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* Serialise the session. */</comment>
    <expr_stmt><expr><name pos:line="11" pos:column="5">len<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <call><name pos:line="11" pos:column="11">i2d_SSL_SESSION<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">sess<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="33">NULL<pos:position pos:line="11" pos:column="37"/></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">len<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">&gt;<pos:position pos:line="12" pos:column="17"/></operator> <sizeof pos:line="12" pos:column="15">sizeof <name pos:line="12" pos:column="22">encoded<pos:position pos:line="12" pos:column="29"/></name></sizeof></expr>)<pos:position pos:line="12" pos:column="30"/></condition><then pos:line="12" pos:column="30"> <block pos:line="12" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ap_log_error<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">APLOG_MARK<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">APLOG_ERR<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="45">0<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">s<pos:position pos:line="13" pos:column="49"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="14" pos:column="22">"session is too big (%u bytes)"<pos:position pos:line="14" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="55">len<pos:position pos:line="14" pos:column="58"/></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">FALSE<pos:position pos:line="15" pos:column="21"/></name></expr>;<pos:position pos:line="15" pos:column="22"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">ptr<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <name pos:line="18" pos:column="11">encoded<pos:position pos:line="18" pos:column="18"/></name></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">len<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">=<pos:position pos:line="19" pos:column="10"/></operator> <call><name pos:line="19" pos:column="11">i2d_SSL_SESSION<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">sess<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="33">&amp;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="34">ptr<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">mc<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">sesscache<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">-&gt;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="24">flags<pos:position pos:line="21" pos:column="29"/></name></name> <operator pos:line="21" pos:column="30">&amp;<pos:position pos:line="21" pos:column="35"/></operator> <name pos:line="21" pos:column="32">AP_SOCACHE_FLAG_NOTMPSAFE<pos:position pos:line="21" pos:column="57"/></name></expr>)<pos:position pos:line="21" pos:column="58"/></condition><then pos:line="21" pos:column="58"> <block pos:line="21" pos:column="59">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">ssl_mutex_on<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">s<pos:position pos:line="22" pos:column="23"/></name></expr></argument>)<pos:position pos:line="22" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    
    <expr_stmt><expr><name pos:line="25" pos:column="5">rv<pos:position pos:line="25" pos:column="7"/></name> <operator pos:line="25" pos:column="8">=<pos:position pos:line="25" pos:column="9"/></operator> <call><name><name pos:line="25" pos:column="10">mc<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">sesscache<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">store<pos:position pos:line="25" pos:column="30"/></name></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name><name pos:line="25" pos:column="31">mc<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">sesscache_context<pos:position pos:line="25" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="54">s<pos:position pos:line="25" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="57">id<pos:position pos:line="25" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="61">idlen<pos:position pos:line="25" pos:column="66"/></name></expr></argument>, 
                              <argument><expr><name pos:line="26" pos:column="31">expiry<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="39">encoded<pos:position pos:line="26" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="48">len<pos:position pos:line="26" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="53">p<pos:position pos:line="26" pos:column="54"/></name></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="56"/></expr_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">mc<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">sesscache<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">flags<pos:position pos:line="28" pos:column="29"/></name></name> <operator pos:line="28" pos:column="30">&amp;<pos:position pos:line="28" pos:column="35"/></operator> <name pos:line="28" pos:column="32">AP_SOCACHE_FLAG_NOTMPSAFE<pos:position pos:line="28" pos:column="57"/></name></expr>)<pos:position pos:line="28" pos:column="58"/></condition><then pos:line="28" pos:column="58"> <block pos:line="28" pos:column="59">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">ssl_mutex_off<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">s<pos:position pos:line="29" pos:column="24"/></name></expr></argument>)<pos:position pos:line="29" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <return pos:line="32" pos:column="5">return <expr><ternary><condition><expr><name pos:line="32" pos:column="12">rv<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">==<pos:position pos:line="32" pos:column="17"/></operator> <name pos:line="32" pos:column="18">APR_SUCCESS<pos:position pos:line="32" pos:column="29"/></name></expr> ?<pos:position pos:line="32" pos:column="31"/></condition><then pos:line="32" pos:column="31"> <expr><name pos:line="32" pos:column="32">TRUE<pos:position pos:line="32" pos:column="36"/></name></expr> <pos:position pos:line="32" pos:column="37"/></then><else pos:line="32" pos:column="37">: <expr><name pos:line="32" pos:column="39">FALSE<pos:position pos:line="32" pos:column="44"/></name></expr></else></ternary></expr>;<pos:position pos:line="32" pos:column="45"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cache_in_filter<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">ap_filter_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">f<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">apr_bucket_brigade<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">in<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">rv<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">request_rec<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">r<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name><name pos:line="4" pos:column="22">f<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">-&gt;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="25">r<pos:position pos:line="4" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">url<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><name><name pos:line="5" pos:column="17">r<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">unparsed_uri<pos:position pos:line="5" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">cc_out<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><call><name pos:line="6" pos:column="26">apr_table_get<pos:position pos:line="6" pos:column="39"/></name><argument_list pos:line="6" pos:column="39">(<argument><expr><name><name pos:line="6" pos:column="40">r<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">-&gt;<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="43">headers_out<pos:position pos:line="6" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="56">"Cache-Control"<pos:position pos:line="6" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="73"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">exps<pos:position pos:line="7" pos:column="21"/></name></decl>, <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="24">lastmods<pos:position pos:line="7" pos:column="32"/></name></decl>, <modifier pos:line="7" pos:column="34">*<pos:position pos:line="7" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="35">dates<pos:position pos:line="7" pos:column="40"/></name></decl>, <modifier pos:line="7" pos:column="42">*<pos:position pos:line="7" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="43">etag<pos:position pos:line="7" pos:column="47"/></name></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_time_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">exp<pos:position pos:line="8" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="21">date<pos:position pos:line="8" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="27">lastmod<pos:position pos:line="8" pos:column="34"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="36">now<pos:position pos:line="8" pos:column="39"/></name></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_off_t<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">size<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">cache_info<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">info<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">void<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">sconf<pos:position pos:line="11" pos:column="16"/></name> <init pos:line="11" pos:column="17">= <expr><name><name pos:line="11" pos:column="19">r<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">server<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">module_config<pos:position pos:line="11" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">cache_server_conf<pos:position pos:line="12" pos:column="22"/></name> <modifier pos:line="12" pos:column="23">*<pos:position pos:line="12" pos:column="24"/></modifier></type><name pos:line="12" pos:column="24">conf<pos:position pos:line="12" pos:column="28"/></name> <init pos:line="12" pos:column="29">=
        <expr><operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">cache_server_conf<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></operator><operator pos:line="13" pos:column="29">)<pos:position pos:line="13" pos:column="30"/></operator> <call><name pos:line="13" pos:column="31">ap_get_module_config<pos:position pos:line="13" pos:column="51"/></name><argument_list pos:line="13" pos:column="51">(<argument><expr><name pos:line="13" pos:column="52">sconf<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="59">&amp;<pos:position pos:line="13" pos:column="64"/></operator><name pos:line="13" pos:column="60">cache_module<pos:position pos:line="13" pos:column="72"/></name></expr></argument>)<pos:position pos:line="13" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="74"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">void<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">scache<pos:position pos:line="14" pos:column="17"/></name> <init pos:line="14" pos:column="18">= <expr><name><name pos:line="14" pos:column="20">r<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">-&gt;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="23">request_config<pos:position pos:line="14" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">cache_request_rec<pos:position pos:line="15" pos:column="22"/></name> <modifier pos:line="15" pos:column="23">*<pos:position pos:line="15" pos:column="24"/></modifier></type><name pos:line="15" pos:column="24">cache<pos:position pos:line="15" pos:column="29"/></name> <init pos:line="15" pos:column="30">=
        <expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">cache_request_rec<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></operator><operator pos:line="16" pos:column="29">)<pos:position pos:line="16" pos:column="30"/></operator> <call><name pos:line="16" pos:column="31">ap_get_module_config<pos:position pos:line="16" pos:column="51"/></name><argument_list pos:line="16" pos:column="51">(<argument><expr><name pos:line="16" pos:column="52">scache<pos:position pos:line="16" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="60">&amp;<pos:position pos:line="16" pos:column="65"/></operator><name pos:line="16" pos:column="61">cache_module<pos:position pos:line="16" pos:column="73"/></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="75"/></decl_stmt>


    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ap_log_error<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">APLOG_MARK<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="30">APLOG_DEBUG<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="43">0<pos:position pos:line="19" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="46">f<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">r<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">-&gt;<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="52">server<pos:position pos:line="19" pos:column="58"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="20" pos:column="18">"cache: running CACHE_IN filter"<pos:position pos:line="20" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* check first whether running this filter has any point or not */</comment>
    <if pos:line="23" pos:column="5">if<condition pos:line="23" pos:column="7">(<expr><name><name pos:line="23" pos:column="8">r<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">no_cache<pos:position pos:line="23" pos:column="19"/></name></name></expr>)<pos:position pos:line="23" pos:column="20"/></condition><then pos:line="23" pos:column="20"> <block pos:line="23" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">ap_remove_output_filter<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">f<pos:position pos:line="24" pos:column="34"/></name></expr></argument>)<pos:position pos:line="24" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt>
        <return pos:line="25" pos:column="9">return <expr><call><name pos:line="25" pos:column="16">ap_pass_brigade<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><name><name pos:line="25" pos:column="32">f<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">next<pos:position pos:line="25" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="41">in<pos:position pos:line="25" pos:column="43"/></name></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="28" pos:column="5">/* make space for the per request config 
     * We hit this code path when CACHE_IN has been installed by someone
     * other than the cache handler
     */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><operator pos:line="32" pos:column="9">!<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">cache<pos:position pos:line="32" pos:column="15"/></name></expr>)<pos:position pos:line="32" pos:column="16"/></condition><then pos:line="32" pos:column="16"> <block pos:line="32" pos:column="17">{
        <expr_stmt><expr><name pos:line="33" pos:column="9">cache<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">=<pos:position pos:line="33" pos:column="16"/></operator> <call><name pos:line="33" pos:column="17">apr_pcalloc<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><name><name pos:line="33" pos:column="29">r<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">-&gt;<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="32">pool<pos:position pos:line="33" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="38">sizeof<argument_list pos:line="33" pos:column="44">(<argument><expr><name pos:line="33" pos:column="45">cache_request_rec<pos:position pos:line="33" pos:column="62"/></name></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">ap_set_module_config<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name><name pos:line="34" pos:column="30">r<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">-&gt;<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="33">request_config<pos:position pos:line="34" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="49">&amp;<pos:position pos:line="34" pos:column="54"/></operator><name pos:line="34" pos:column="50">cache_module<pos:position pos:line="34" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="64">cache<pos:position pos:line="34" pos:column="69"/></name></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="37" pos:column="5">/*
     * Pass Data to Cache
     * ------------------
     * This section passes the brigades into the cache modules, but only
     * if the setup section (see below) is complete.
     */</comment>

    <comment type="block" pos:line="44" pos:column="5">/* have we already run the cachability check and set up the cached file 
     * handle? 
     */</comment>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name><name pos:line="47" pos:column="9">cache<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">in_checked<pos:position pos:line="47" pos:column="26"/></name></name></expr>)<pos:position pos:line="47" pos:column="27"/></condition><then pos:line="47" pos:column="27"> <block pos:line="47" pos:column="28">{
        <comment type="block" pos:line="48" pos:column="9">/* pass the brigades into the cache, then pass them
         * up the filter stack
         */</comment>
        <expr_stmt><expr><name pos:line="51" pos:column="9">rv<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">=<pos:position pos:line="51" pos:column="13"/></operator> <call><name pos:line="51" pos:column="14">cache_write_entity_body<pos:position pos:line="51" pos:column="37"/></name><argument_list pos:line="51" pos:column="37">(<argument><expr><name><name pos:line="51" pos:column="38">cache<pos:position pos:line="51" pos:column="43"/></name><operator pos:line="51" pos:column="43">-&gt;<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="45">handle<pos:position pos:line="51" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="53">r<pos:position pos:line="51" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="56">in<pos:position pos:line="51" pos:column="58"/></name></expr></argument>)<pos:position pos:line="51" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="60"/></expr_stmt>
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">rv<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">!=<pos:position pos:line="52" pos:column="18"/></operator> <name pos:line="52" pos:column="19">APR_SUCCESS<pos:position pos:line="52" pos:column="30"/></name></expr>)<pos:position pos:line="52" pos:column="31"/></condition><then pos:line="52" pos:column="31"> <block pos:line="52" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">ap_remove_output_filter<pos:position pos:line="53" pos:column="36"/></name><argument_list pos:line="53" pos:column="36">(<argument><expr><name pos:line="53" pos:column="37">f<pos:position pos:line="53" pos:column="38"/></name></expr></argument>)<pos:position pos:line="53" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>
        <return pos:line="55" pos:column="9">return <expr><call><name pos:line="55" pos:column="16">ap_pass_brigade<pos:position pos:line="55" pos:column="31"/></name><argument_list pos:line="55" pos:column="31">(<argument><expr><name><name pos:line="55" pos:column="32">f<pos:position pos:line="55" pos:column="33"/></name><operator pos:line="55" pos:column="33">-&gt;<pos:position pos:line="55" pos:column="38"/></operator><name pos:line="55" pos:column="35">next<pos:position pos:line="55" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="41">in<pos:position pos:line="55" pos:column="43"/></name></expr></argument>)<pos:position pos:line="55" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="45"/></return>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="58" pos:column="5">/*
     * Setup Data in Cache
     * -------------------
     * This section opens the cache entity and sets various caching parameters,
     * and decides whether this URL should be cached at all. This section is
     * run before the above section.
     */</comment>
    <expr_stmt><expr><name pos:line="65" pos:column="5">info<pos:position pos:line="65" pos:column="9"/></name> <operator pos:line="65" pos:column="10">=<pos:position pos:line="65" pos:column="11"/></operator> <call><name pos:line="65" pos:column="12">apr_pcalloc<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">(<argument><expr><name><name pos:line="65" pos:column="24">r<pos:position pos:line="65" pos:column="25"/></name><operator pos:line="65" pos:column="25">-&gt;<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="27">pool<pos:position pos:line="65" pos:column="31"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="33">sizeof<argument_list pos:line="65" pos:column="39">(<argument><expr><name pos:line="65" pos:column="40">cache_info<pos:position pos:line="65" pos:column="50"/></name></expr></argument>)<pos:position pos:line="65" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="67" pos:column="5">/* read expiry date; if a bad date, then leave it so the client can
     * read it 
     */</comment>
    <expr_stmt><expr><name pos:line="70" pos:column="5">exps<pos:position pos:line="70" pos:column="9"/></name> <operator pos:line="70" pos:column="10">=<pos:position pos:line="70" pos:column="11"/></operator> <call><name pos:line="70" pos:column="12">apr_table_get<pos:position pos:line="70" pos:column="25"/></name><argument_list pos:line="70" pos:column="25">(<argument><expr><name><name pos:line="70" pos:column="26">r<pos:position pos:line="70" pos:column="27"/></name><operator pos:line="70" pos:column="27">-&gt;<pos:position pos:line="70" pos:column="32"/></operator><name pos:line="70" pos:column="29">headers_out<pos:position pos:line="70" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="42">"Expires"<pos:position pos:line="70" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="53"/></expr_stmt>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name pos:line="71" pos:column="9">exps<pos:position pos:line="71" pos:column="13"/></name> <operator pos:line="71" pos:column="14">!=<pos:position pos:line="71" pos:column="16"/></operator> <name pos:line="71" pos:column="17">NULL<pos:position pos:line="71" pos:column="21"/></name></expr>)<pos:position pos:line="71" pos:column="22"/></condition><then pos:line="71" pos:column="22"> <block pos:line="71" pos:column="23">{
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name pos:line="72" pos:column="13">APR_DATE_BAD<pos:position pos:line="72" pos:column="25"/></name> <operator pos:line="72" pos:column="26">==<pos:position pos:line="72" pos:column="28"/></operator> <operator pos:line="72" pos:column="29">(<pos:position pos:line="72" pos:column="30"/></operator><name pos:line="72" pos:column="30">exp<pos:position pos:line="72" pos:column="33"/></name> <operator pos:line="72" pos:column="34">=<pos:position pos:line="72" pos:column="35"/></operator> <call><name pos:line="72" pos:column="36">apr_date_parse_http<pos:position pos:line="72" pos:column="55"/></name><argument_list pos:line="72" pos:column="55">(<argument><expr><name pos:line="72" pos:column="56">exps<pos:position pos:line="72" pos:column="60"/></name></expr></argument>)<pos:position pos:line="72" pos:column="61"/></argument_list></call><operator pos:line="72" pos:column="61">)<pos:position pos:line="72" pos:column="62"/></operator></expr>)<pos:position pos:line="72" pos:column="63"/></condition><then pos:line="72" pos:column="63"> <block pos:line="72" pos:column="64">{
            <expr_stmt><expr><name pos:line="73" pos:column="13">exps<pos:position pos:line="73" pos:column="17"/></name> <operator pos:line="73" pos:column="18">=<pos:position pos:line="73" pos:column="19"/></operator> <name pos:line="73" pos:column="20">NULL<pos:position pos:line="73" pos:column="24"/></name></expr>;<pos:position pos:line="73" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if>
    }<pos:position pos:line="75" pos:column="6"/></block></then>
    <else pos:line="76" pos:column="5">else <block pos:line="76" pos:column="10">{
        <expr_stmt><expr><name pos:line="77" pos:column="9">exp<pos:position pos:line="77" pos:column="12"/></name> <operator pos:line="77" pos:column="13">=<pos:position pos:line="77" pos:column="14"/></operator> <name pos:line="77" pos:column="15">APR_DATE_BAD<pos:position pos:line="77" pos:column="27"/></name></expr>;<pos:position pos:line="77" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="78" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="80" pos:column="5">/* read the last-modified date; if the date is bad, then delete it */</comment>
    <expr_stmt><expr><name pos:line="81" pos:column="5">lastmods<pos:position pos:line="81" pos:column="13"/></name> <operator pos:line="81" pos:column="14">=<pos:position pos:line="81" pos:column="15"/></operator> <call><name pos:line="81" pos:column="16">apr_table_get<pos:position pos:line="81" pos:column="29"/></name><argument_list pos:line="81" pos:column="29">(<argument><expr><name><name pos:line="81" pos:column="30">r<pos:position pos:line="81" pos:column="31"/></name><operator pos:line="81" pos:column="31">-&gt;<pos:position pos:line="81" pos:column="36"/></operator><name pos:line="81" pos:column="33">headers_out<pos:position pos:line="81" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="46">"Last-Modified"<pos:position pos:line="81" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="63"/></expr_stmt>
    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><name pos:line="82" pos:column="9">lastmods<pos:position pos:line="82" pos:column="17"/></name> <operator pos:line="82" pos:column="18">!=<pos:position pos:line="82" pos:column="20"/></operator> <name pos:line="82" pos:column="21">NULL<pos:position pos:line="82" pos:column="25"/></name></expr>)<pos:position pos:line="82" pos:column="26"/></condition><then pos:line="82" pos:column="26"> <block pos:line="82" pos:column="27">{
        <if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name pos:line="83" pos:column="13">APR_DATE_BAD<pos:position pos:line="83" pos:column="25"/></name> <operator pos:line="83" pos:column="26">==<pos:position pos:line="83" pos:column="28"/></operator> <operator pos:line="83" pos:column="29">(<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="30">lastmod<pos:position pos:line="83" pos:column="37"/></name> <operator pos:line="83" pos:column="38">=<pos:position pos:line="83" pos:column="39"/></operator> <call><name pos:line="83" pos:column="40">apr_date_parse_http<pos:position pos:line="83" pos:column="59"/></name><argument_list pos:line="83" pos:column="59">(<argument><expr><name pos:line="83" pos:column="60">lastmods<pos:position pos:line="83" pos:column="68"/></name></expr></argument>)<pos:position pos:line="83" pos:column="69"/></argument_list></call><operator pos:line="83" pos:column="69">)<pos:position pos:line="83" pos:column="70"/></operator></expr>)<pos:position pos:line="83" pos:column="71"/></condition><then pos:line="83" pos:column="71"> <block pos:line="83" pos:column="72">{
            <expr_stmt><expr><name pos:line="84" pos:column="13">lastmods<pos:position pos:line="84" pos:column="21"/></name> <operator pos:line="84" pos:column="22">=<pos:position pos:line="84" pos:column="23"/></operator> <name pos:line="84" pos:column="24">NULL<pos:position pos:line="84" pos:column="28"/></name></expr>;<pos:position pos:line="84" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="85" pos:column="10"/></block></then></if>
    }<pos:position pos:line="86" pos:column="6"/></block></then>
    <else pos:line="87" pos:column="5">else <block pos:line="87" pos:column="10">{
        <expr_stmt><expr><name pos:line="88" pos:column="9">lastmod<pos:position pos:line="88" pos:column="16"/></name> <operator pos:line="88" pos:column="17">=<pos:position pos:line="88" pos:column="18"/></operator> <name pos:line="88" pos:column="19">APR_DATE_BAD<pos:position pos:line="88" pos:column="31"/></name></expr>;<pos:position pos:line="88" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="89" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="91" pos:column="5">/* read the etag from the entity */</comment>
    <expr_stmt><expr><name pos:line="92" pos:column="5">etag<pos:position pos:line="92" pos:column="9"/></name> <operator pos:line="92" pos:column="10">=<pos:position pos:line="92" pos:column="11"/></operator> <call><name pos:line="92" pos:column="12">apr_table_get<pos:position pos:line="92" pos:column="25"/></name><argument_list pos:line="92" pos:column="25">(<argument><expr><name><name pos:line="92" pos:column="26">r<pos:position pos:line="92" pos:column="27"/></name><operator pos:line="92" pos:column="27">-&gt;<pos:position pos:line="92" pos:column="32"/></operator><name pos:line="92" pos:column="29">headers_out<pos:position pos:line="92" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="42">"Etag"<pos:position pos:line="92" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="94" pos:column="5">/*
     * what responses should we not cache?
     *
     * At this point we decide based on the response headers whether it
     * is appropriate _NOT_ to cache the data from the server. There are
     * a whole lot of conditions that prevent us from caching this data.
     * They are tested here one by one to be clear and unambiguous. 
     */</comment>

    <comment type="block" pos:line="103" pos:column="5">/* RFC2616 13.4 we are allowed to cache 200, 203, 206, 300, 301 or 410
     * We don't cache 206, because we don't (yet) cache partial responses.
     * We include 304 Not Modified here too as this is the origin server
     * telling us to serve the cached copy.
     */</comment>
    <if pos:line="108" pos:column="5">if <condition pos:line="108" pos:column="8">(<expr><operator pos:line="108" pos:column="9">(<pos:position pos:line="108" pos:column="10"/></operator><name><name pos:line="108" pos:column="10">r<pos:position pos:line="108" pos:column="11"/></name><operator pos:line="108" pos:column="11">-&gt;<pos:position pos:line="108" pos:column="16"/></operator><name pos:line="108" pos:column="13">status<pos:position pos:line="108" pos:column="19"/></name></name> <operator pos:line="108" pos:column="20">!=<pos:position pos:line="108" pos:column="22"/></operator> <name pos:line="108" pos:column="23">HTTP_OK<pos:position pos:line="108" pos:column="30"/></name> <operator pos:line="108" pos:column="31">&amp;&amp;<pos:position pos:line="108" pos:column="41"/></operator> <name><name pos:line="108" pos:column="34">r<pos:position pos:line="108" pos:column="35"/></name><operator pos:line="108" pos:column="35">-&gt;<pos:position pos:line="108" pos:column="40"/></operator><name pos:line="108" pos:column="37">status<pos:position pos:line="108" pos:column="43"/></name></name> <operator pos:line="108" pos:column="44">!=<pos:position pos:line="108" pos:column="46"/></operator> <name pos:line="108" pos:column="47">HTTP_NON_AUTHORITATIVE<pos:position pos:line="108" pos:column="69"/></name>
         <operator pos:line="109" pos:column="10">&amp;&amp;<pos:position pos:line="109" pos:column="20"/></operator> <name><name pos:line="109" pos:column="13">r<pos:position pos:line="109" pos:column="14"/></name><operator pos:line="109" pos:column="14">-&gt;<pos:position pos:line="109" pos:column="19"/></operator><name pos:line="109" pos:column="16">status<pos:position pos:line="109" pos:column="22"/></name></name> <operator pos:line="109" pos:column="23">!=<pos:position pos:line="109" pos:column="25"/></operator> <name pos:line="109" pos:column="26">HTTP_MULTIPLE_CHOICES<pos:position pos:line="109" pos:column="47"/></name>
         <operator pos:line="110" pos:column="10">&amp;&amp;<pos:position pos:line="110" pos:column="20"/></operator> <name><name pos:line="110" pos:column="13">r<pos:position pos:line="110" pos:column="14"/></name><operator pos:line="110" pos:column="14">-&gt;<pos:position pos:line="110" pos:column="19"/></operator><name pos:line="110" pos:column="16">status<pos:position pos:line="110" pos:column="22"/></name></name> <operator pos:line="110" pos:column="23">!=<pos:position pos:line="110" pos:column="25"/></operator> <name pos:line="110" pos:column="26">HTTP_MOVED_PERMANENTLY<pos:position pos:line="110" pos:column="48"/></name>
         <operator pos:line="111" pos:column="10">&amp;&amp;<pos:position pos:line="111" pos:column="20"/></operator> <name><name pos:line="111" pos:column="13">r<pos:position pos:line="111" pos:column="14"/></name><operator pos:line="111" pos:column="14">-&gt;<pos:position pos:line="111" pos:column="19"/></operator><name pos:line="111" pos:column="16">status<pos:position pos:line="111" pos:column="22"/></name></name> <operator pos:line="111" pos:column="23">!=<pos:position pos:line="111" pos:column="25"/></operator> <name pos:line="111" pos:column="26">HTTP_NOT_MODIFIED<pos:position pos:line="111" pos:column="43"/></name><operator pos:line="111" pos:column="43">)<pos:position pos:line="111" pos:column="44"/></operator>
        <comment type="block" pos:line="112" pos:column="9">/* if a broken Expires header is present, don't cache it */</comment>
        <operator pos:line="113" pos:column="9">||<pos:position pos:line="113" pos:column="11"/></operator> <operator pos:line="113" pos:column="12">(<pos:position pos:line="113" pos:column="13"/></operator><name pos:line="113" pos:column="13">exps<pos:position pos:line="113" pos:column="17"/></name> <operator pos:line="113" pos:column="18">!=<pos:position pos:line="113" pos:column="20"/></operator> <name pos:line="113" pos:column="21">NULL<pos:position pos:line="113" pos:column="25"/></name> <operator pos:line="113" pos:column="26">&amp;&amp;<pos:position pos:line="113" pos:column="36"/></operator> <name pos:line="113" pos:column="29">exp<pos:position pos:line="113" pos:column="32"/></name> <operator pos:line="113" pos:column="33">==<pos:position pos:line="113" pos:column="35"/></operator> <name pos:line="113" pos:column="36">APR_DATE_BAD<pos:position pos:line="113" pos:column="48"/></name><operator pos:line="113" pos:column="48">)<pos:position pos:line="113" pos:column="49"/></operator>
        <comment type="block" pos:line="114" pos:column="9">/* if the server said 304 Not Modified but we have no cache
         * file - pass this untouched to the user agent, it's not for us.
         */</comment>
        <operator pos:line="117" pos:column="9">||<pos:position pos:line="117" pos:column="11"/></operator> <operator pos:line="117" pos:column="12">(<pos:position pos:line="117" pos:column="13"/></operator><name><name pos:line="117" pos:column="13">r<pos:position pos:line="117" pos:column="14"/></name><operator pos:line="117" pos:column="14">-&gt;<pos:position pos:line="117" pos:column="19"/></operator><name pos:line="117" pos:column="16">status<pos:position pos:line="117" pos:column="22"/></name></name> <operator pos:line="117" pos:column="23">==<pos:position pos:line="117" pos:column="25"/></operator> <name pos:line="117" pos:column="26">HTTP_NOT_MODIFIED<pos:position pos:line="117" pos:column="43"/></name> <operator pos:line="117" pos:column="44">&amp;&amp;<pos:position pos:line="117" pos:column="54"/></operator> <operator pos:line="117" pos:column="47">(<pos:position pos:line="117" pos:column="48"/></operator><name pos:line="117" pos:column="48">NULL<pos:position pos:line="117" pos:column="52"/></name> <operator pos:line="117" pos:column="53">==<pos:position pos:line="117" pos:column="55"/></operator> <name><name pos:line="117" pos:column="56">cache<pos:position pos:line="117" pos:column="61"/></name><operator pos:line="117" pos:column="61">-&gt;<pos:position pos:line="117" pos:column="66"/></operator><name pos:line="117" pos:column="63">handle<pos:position pos:line="117" pos:column="69"/></name></name><operator pos:line="117" pos:column="69">)<pos:position pos:line="117" pos:column="70"/></operator><operator pos:line="117" pos:column="70">)<pos:position pos:line="117" pos:column="71"/></operator>
        <comment type="block" pos:line="118" pos:column="9">/* 200 OK response from HTTP/1.0 and up without a Last-Modified
         * header/Etag 
         */</comment>
        <comment type="block" pos:line="121" pos:column="9">/* XXX mod-include clears last_modified/expires/etags - this
         * is why we have an optional function for a key-gen ;-) 
         */</comment>
        <operator pos:line="124" pos:column="9">||<pos:position pos:line="124" pos:column="11"/></operator> <operator pos:line="124" pos:column="12">(<pos:position pos:line="124" pos:column="13"/></operator><name><name pos:line="124" pos:column="13">r<pos:position pos:line="124" pos:column="14"/></name><operator pos:line="124" pos:column="14">-&gt;<pos:position pos:line="124" pos:column="19"/></operator><name pos:line="124" pos:column="16">status<pos:position pos:line="124" pos:column="22"/></name></name> <operator pos:line="124" pos:column="23">==<pos:position pos:line="124" pos:column="25"/></operator> <name pos:line="124" pos:column="26">HTTP_OK<pos:position pos:line="124" pos:column="33"/></name> <operator pos:line="124" pos:column="34">&amp;&amp;<pos:position pos:line="124" pos:column="44"/></operator> <name pos:line="124" pos:column="37">lastmods<pos:position pos:line="124" pos:column="45"/></name> <operator pos:line="124" pos:column="46">==<pos:position pos:line="124" pos:column="48"/></operator> <name pos:line="124" pos:column="49">NULL<pos:position pos:line="124" pos:column="53"/></name> <operator pos:line="124" pos:column="54">&amp;&amp;<pos:position pos:line="124" pos:column="64"/></operator> <name pos:line="124" pos:column="57">etag<pos:position pos:line="124" pos:column="61"/></name> <operator pos:line="124" pos:column="62">==<pos:position pos:line="124" pos:column="64"/></operator> <name pos:line="124" pos:column="65">NULL<pos:position pos:line="124" pos:column="69"/></name> 
            <operator pos:line="125" pos:column="13">&amp;&amp;<pos:position pos:line="125" pos:column="23"/></operator> <operator pos:line="125" pos:column="16">(<pos:position pos:line="125" pos:column="17"/></operator><name><name pos:line="125" pos:column="17">conf<pos:position pos:line="125" pos:column="21"/></name><operator pos:line="125" pos:column="21">-&gt;<pos:position pos:line="125" pos:column="26"/></operator><name pos:line="125" pos:column="23">no_last_mod_ignore<pos:position pos:line="125" pos:column="41"/></name></name> <operator pos:line="125" pos:column="42">==<pos:position pos:line="125" pos:column="44"/></operator><literal type="number" pos:line="125" pos:column="44">0<pos:position pos:line="125" pos:column="45"/></literal><operator pos:line="125" pos:column="45">)<pos:position pos:line="125" pos:column="46"/></operator><operator pos:line="125" pos:column="46">)<pos:position pos:line="125" pos:column="47"/></operator>
        <comment type="block" pos:line="126" pos:column="9">/* HEAD requests */</comment>
        <operator pos:line="127" pos:column="9">||<pos:position pos:line="127" pos:column="11"/></operator> <name><name pos:line="127" pos:column="12">r<pos:position pos:line="127" pos:column="13"/></name><operator pos:line="127" pos:column="13">-&gt;<pos:position pos:line="127" pos:column="18"/></operator><name pos:line="127" pos:column="15">header_only<pos:position pos:line="127" pos:column="26"/></name></name>
        <comment type="block" pos:line="128" pos:column="9">/* RFC2616 14.9.2 Cache-Control: no-store response indicating do not
         * cache, or stop now if you are trying to cache it */</comment>
        <operator pos:line="130" pos:column="9">||<pos:position pos:line="130" pos:column="11"/></operator> <call><name pos:line="130" pos:column="12">ap_cache_liststr<pos:position pos:line="130" pos:column="28"/></name><argument_list pos:line="130" pos:column="28">(<argument><expr><name pos:line="130" pos:column="29">cc_out<pos:position pos:line="130" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="37">"no-store"<pos:position pos:line="130" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="130" pos:column="49">NULL<pos:position pos:line="130" pos:column="53"/></name></expr></argument>)<pos:position pos:line="130" pos:column="54"/></argument_list></call>
        <comment type="block" pos:line="131" pos:column="9">/* RFC2616 14.9.1 Cache-Control: private
         * this object is marked for this user's eyes only. Behave
         * as a tunnel.
         */</comment>
        <operator pos:line="135" pos:column="9">||<pos:position pos:line="135" pos:column="11"/></operator> <call><name pos:line="135" pos:column="12">ap_cache_liststr<pos:position pos:line="135" pos:column="28"/></name><argument_list pos:line="135" pos:column="28">(<argument><expr><name pos:line="135" pos:column="29">cc_out<pos:position pos:line="135" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="37">"private"<pos:position pos:line="135" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="135" pos:column="48">NULL<pos:position pos:line="135" pos:column="52"/></name></expr></argument>)<pos:position pos:line="135" pos:column="53"/></argument_list></call>
        <comment type="block" pos:line="136" pos:column="9">/* RFC2616 14.8 Authorisation:
         * if authorisation is included in the request, we don't cache,
         * but we can cache if the following exceptions are true:
         * 1) If Cache-Control: s-maxage is included
         * 2) If Cache-Control: must-revalidate is included
         * 3) If Cache-Control: public is included
         */</comment>
        <operator pos:line="143" pos:column="9">||<pos:position pos:line="143" pos:column="11"/></operator> <operator pos:line="143" pos:column="12">(<pos:position pos:line="143" pos:column="13"/></operator><call><name pos:line="143" pos:column="13">apr_table_get<pos:position pos:line="143" pos:column="26"/></name><argument_list pos:line="143" pos:column="26">(<argument><expr><name><name pos:line="143" pos:column="27">r<pos:position pos:line="143" pos:column="28"/></name><operator pos:line="143" pos:column="28">-&gt;<pos:position pos:line="143" pos:column="33"/></operator><name pos:line="143" pos:column="30">headers_in<pos:position pos:line="143" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="42">"Authorization"<pos:position pos:line="143" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="58"/></argument_list></call> <operator pos:line="143" pos:column="59">!=<pos:position pos:line="143" pos:column="61"/></operator> <name pos:line="143" pos:column="62">NULL<pos:position pos:line="143" pos:column="66"/></name>
            <operator pos:line="144" pos:column="13">&amp;&amp;<pos:position pos:line="144" pos:column="23"/></operator> <operator pos:line="144" pos:column="16">!<pos:position pos:line="144" pos:column="17"/></operator><operator pos:line="144" pos:column="17">(<pos:position pos:line="144" pos:column="18"/></operator><call><name pos:line="144" pos:column="18">ap_cache_liststr<pos:position pos:line="144" pos:column="34"/></name><argument_list pos:line="144" pos:column="34">(<argument><expr><name pos:line="144" pos:column="35">cc_out<pos:position pos:line="144" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="43">"s-maxage"<pos:position pos:line="144" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="144" pos:column="55">NULL<pos:position pos:line="144" pos:column="59"/></name></expr></argument>)<pos:position pos:line="144" pos:column="60"/></argument_list></call>
                 <operator pos:line="145" pos:column="18">||<pos:position pos:line="145" pos:column="20"/></operator> <call><name pos:line="145" pos:column="21">ap_cache_liststr<pos:position pos:line="145" pos:column="37"/></name><argument_list pos:line="145" pos:column="37">(<argument><expr><name pos:line="145" pos:column="38">cc_out<pos:position pos:line="145" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="46">"must-revalidate"<pos:position pos:line="145" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="145" pos:column="65">NULL<pos:position pos:line="145" pos:column="69"/></name></expr></argument>)<pos:position pos:line="145" pos:column="70"/></argument_list></call>
                 <operator pos:line="146" pos:column="18">||<pos:position pos:line="146" pos:column="20"/></operator> <call><name pos:line="146" pos:column="21">ap_cache_liststr<pos:position pos:line="146" pos:column="37"/></name><argument_list pos:line="146" pos:column="37">(<argument><expr><name pos:line="146" pos:column="38">cc_out<pos:position pos:line="146" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="46">"public"<pos:position pos:line="146" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="146" pos:column="56">NULL<pos:position pos:line="146" pos:column="60"/></name></expr></argument>)<pos:position pos:line="146" pos:column="61"/></argument_list></call><operator pos:line="146" pos:column="61">)<pos:position pos:line="146" pos:column="62"/></operator><operator pos:line="146" pos:column="62">)<pos:position pos:line="146" pos:column="63"/></operator>
        <comment type="block" pos:line="147" pos:column="9">/* or we've been asked not to cache it above */</comment>
        <operator pos:line="148" pos:column="9">||<pos:position pos:line="148" pos:column="11"/></operator> <name><name pos:line="148" pos:column="12">r<pos:position pos:line="148" pos:column="13"/></name><operator pos:line="148" pos:column="13">-&gt;<pos:position pos:line="148" pos:column="18"/></operator><name pos:line="148" pos:column="15">no_cache<pos:position pos:line="148" pos:column="23"/></name></name></expr>)<pos:position pos:line="148" pos:column="24"/></condition><then pos:line="148" pos:column="24"> <block pos:line="148" pos:column="25">{

        <expr_stmt><expr><call><name pos:line="150" pos:column="9">ap_log_error<pos:position pos:line="150" pos:column="21"/></name><argument_list pos:line="150" pos:column="21">(<argument><expr><name pos:line="150" pos:column="22">APLOG_MARK<pos:position pos:line="150" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="34">APLOG_DEBUG<pos:position pos:line="150" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="150" pos:column="47">0<pos:position pos:line="150" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="150" pos:column="50">r<pos:position pos:line="150" pos:column="51"/></name><operator pos:line="150" pos:column="51">-&gt;<pos:position pos:line="150" pos:column="56"/></operator><name pos:line="150" pos:column="53">server<pos:position pos:line="150" pos:column="59"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="151" pos:column="18">"cache: response is not cachable"<pos:position pos:line="151" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="53"/></expr_stmt>

        <comment type="block" pos:line="153" pos:column="9">/* remove this object from the cache 
         * BillS Asks.. Why do we need to make this call to remove_url?
         * leave it in for now..
         */</comment>
        <expr_stmt><expr><call><name pos:line="157" pos:column="9">cache_remove_url<pos:position pos:line="157" pos:column="25"/></name><argument_list pos:line="157" pos:column="25">(<argument><expr><name pos:line="157" pos:column="26">r<pos:position pos:line="157" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="157" pos:column="29">cache<pos:position pos:line="157" pos:column="34"/></name><operator pos:line="157" pos:column="34">-&gt;<pos:position pos:line="157" pos:column="39"/></operator><name pos:line="157" pos:column="36">types<pos:position pos:line="157" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="43">url<pos:position pos:line="157" pos:column="46"/></name></expr></argument>)<pos:position pos:line="157" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="48"/></expr_stmt>

        <comment type="block" pos:line="159" pos:column="9">/* remove this filter from the chain */</comment>
        <expr_stmt><expr><call><name pos:line="160" pos:column="9">ap_remove_output_filter<pos:position pos:line="160" pos:column="32"/></name><argument_list pos:line="160" pos:column="32">(<argument><expr><name pos:line="160" pos:column="33">f<pos:position pos:line="160" pos:column="34"/></name></expr></argument>)<pos:position pos:line="160" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="36"/></expr_stmt>

        <comment type="block" pos:line="162" pos:column="9">/* ship the data up the stack */</comment>
        <return pos:line="163" pos:column="9">return <expr><call><name pos:line="163" pos:column="16">ap_pass_brigade<pos:position pos:line="163" pos:column="31"/></name><argument_list pos:line="163" pos:column="31">(<argument><expr><name><name pos:line="163" pos:column="32">f<pos:position pos:line="163" pos:column="33"/></name><operator pos:line="163" pos:column="33">-&gt;<pos:position pos:line="163" pos:column="38"/></operator><name pos:line="163" pos:column="35">next<pos:position pos:line="163" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="41">in<pos:position pos:line="163" pos:column="43"/></name></expr></argument>)<pos:position pos:line="163" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="45"/></return>
    }<pos:position pos:line="164" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="165" pos:column="5">cache<pos:position pos:line="165" pos:column="10"/></name><operator pos:line="165" pos:column="10">-&gt;<pos:position pos:line="165" pos:column="15"/></operator><name pos:line="165" pos:column="12">in_checked<pos:position pos:line="165" pos:column="22"/></name></name> <operator pos:line="165" pos:column="23">=<pos:position pos:line="165" pos:column="24"/></operator> <literal type="number" pos:line="165" pos:column="25">1<pos:position pos:line="165" pos:column="26"/></literal></expr>;<pos:position pos:line="165" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="167" pos:column="5">/* Set the content length if known.  We almost certainly do NOT want to
     * cache streams with unknown content lengths in the in-memory cache.
     * Streams with unknown content length should be first cached in the
     * file system. If they are withing acceptable limits, then they can be 
     * moved to the in-memory cache.
     */</comment>
    <block pos:line="173" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="174" pos:column="9">const<pos:position pos:line="174" pos:column="14"/></specifier> <name pos:line="174" pos:column="15">char<pos:position pos:line="174" pos:column="19"/></name><modifier pos:line="174" pos:column="19">*<pos:position pos:line="174" pos:column="20"/></modifier></type> <name pos:line="174" pos:column="21">cl<pos:position pos:line="174" pos:column="23"/></name></decl>;<pos:position pos:line="174" pos:column="24"/></decl_stmt>
        <expr_stmt><expr><name pos:line="175" pos:column="9">cl<pos:position pos:line="175" pos:column="11"/></name> <operator pos:line="175" pos:column="12">=<pos:position pos:line="175" pos:column="13"/></operator> <call><name pos:line="175" pos:column="14">apr_table_get<pos:position pos:line="175" pos:column="27"/></name><argument_list pos:line="175" pos:column="27">(<argument><expr><name><name pos:line="175" pos:column="28">r<pos:position pos:line="175" pos:column="29"/></name><operator pos:line="175" pos:column="29">-&gt;<pos:position pos:line="175" pos:column="34"/></operator><name pos:line="175" pos:column="31">headers_out<pos:position pos:line="175" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="44">"Content-Length"<pos:position pos:line="175" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="62"/></expr_stmt>
        <if pos:line="176" pos:column="9">if <condition pos:line="176" pos:column="12">(<expr><name pos:line="176" pos:column="13">cl<pos:position pos:line="176" pos:column="15"/></name></expr>)<pos:position pos:line="176" pos:column="16"/></condition><then pos:line="176" pos:column="16"> <block pos:line="176" pos:column="17">{
            <expr_stmt><expr><name pos:line="177" pos:column="13">size<pos:position pos:line="177" pos:column="17"/></name> <operator pos:line="177" pos:column="18">=<pos:position pos:line="177" pos:column="19"/></operator> <call><name pos:line="177" pos:column="20">apr_atoi64<pos:position pos:line="177" pos:column="30"/></name><argument_list pos:line="177" pos:column="30">(<argument><expr><name pos:line="177" pos:column="31">cl<pos:position pos:line="177" pos:column="33"/></name></expr></argument>)<pos:position pos:line="177" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="178" pos:column="10"/></block></then>
        <else pos:line="179" pos:column="9">else <block pos:line="179" pos:column="14">{

            <comment type="block" pos:line="181" pos:column="13">/* if we don't get the content-length, see if we have all the 
             * buckets and use their length to calculate the size 
             */</comment>
            <decl_stmt><decl><type><name pos:line="184" pos:column="13">apr_bucket<pos:position pos:line="184" pos:column="23"/></name> <modifier pos:line="184" pos:column="24">*<pos:position pos:line="184" pos:column="25"/></modifier></type><name pos:line="184" pos:column="25">e<pos:position pos:line="184" pos:column="26"/></name></decl>;<pos:position pos:line="184" pos:column="27"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="185" pos:column="13">int<pos:position pos:line="185" pos:column="16"/></name></type> <name pos:line="185" pos:column="17">all_buckets_here<pos:position pos:line="185" pos:column="33"/></name><init pos:line="185" pos:column="33">=<expr><literal type="number" pos:line="185" pos:column="34">0<pos:position pos:line="185" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="185" pos:column="36"/></decl_stmt>
            <expr_stmt><expr><name pos:line="186" pos:column="13">size<pos:position pos:line="186" pos:column="17"/></name><operator pos:line="186" pos:column="17">=<pos:position pos:line="186" pos:column="18"/></operator><literal type="number" pos:line="186" pos:column="18">0<pos:position pos:line="186" pos:column="19"/></literal></expr>;<pos:position pos:line="186" pos:column="20"/></expr_stmt>
            <macro><name pos:line="187" pos:column="13">APR_BRIGADE_FOREACH<pos:position pos:line="187" pos:column="32"/></name><argument_list pos:line="187" pos:column="32">(<argument pos:line="187" pos:column="33">e<pos:position pos:line="187" pos:column="34"/></argument>, <argument pos:line="187" pos:column="36">in<pos:position pos:line="187" pos:column="38"/></argument>)<pos:position pos:line="187" pos:column="39"/></argument_list></macro> <block pos:line="187" pos:column="40">{
                <if pos:line="188" pos:column="17">if <condition pos:line="188" pos:column="20">(<expr><call><name pos:line="188" pos:column="21">APR_BUCKET_IS_EOS<pos:position pos:line="188" pos:column="38"/></name><argument_list pos:line="188" pos:column="38">(<argument><expr><name pos:line="188" pos:column="39">e<pos:position pos:line="188" pos:column="40"/></name></expr></argument>)<pos:position pos:line="188" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="188" pos:column="42"/></condition><then pos:line="188" pos:column="42"> <block pos:line="188" pos:column="43">{
                    <expr_stmt><expr><name pos:line="189" pos:column="21">all_buckets_here<pos:position pos:line="189" pos:column="37"/></name><operator pos:line="189" pos:column="37">=<pos:position pos:line="189" pos:column="38"/></operator><literal type="number" pos:line="189" pos:column="38">1<pos:position pos:line="189" pos:column="39"/></literal></expr>;<pos:position pos:line="189" pos:column="40"/></expr_stmt>
                    <break pos:line="190" pos:column="21">break;<pos:position pos:line="190" pos:column="27"/></break>
                }<pos:position pos:line="191" pos:column="18"/></block></then></if>
                <if pos:line="192" pos:column="17">if <condition pos:line="192" pos:column="20">(<expr><call><name pos:line="192" pos:column="21">APR_BUCKET_IS_FLUSH<pos:position pos:line="192" pos:column="40"/></name><argument_list pos:line="192" pos:column="40">(<argument><expr><name pos:line="192" pos:column="41">e<pos:position pos:line="192" pos:column="42"/></name></expr></argument>)<pos:position pos:line="192" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="192" pos:column="44"/></condition><then pos:line="192" pos:column="44"> <block pos:line="192" pos:column="45">{
                    <continue pos:line="193" pos:column="21">continue;<pos:position pos:line="193" pos:column="30"/></continue>
                }<pos:position pos:line="194" pos:column="18"/></block></then></if>
                <if pos:line="195" pos:column="17">if <condition pos:line="195" pos:column="20">(<expr><name><name pos:line="195" pos:column="21">e<pos:position pos:line="195" pos:column="22"/></name><operator pos:line="195" pos:column="22">-&gt;<pos:position pos:line="195" pos:column="27"/></operator><name pos:line="195" pos:column="24">length<pos:position pos:line="195" pos:column="30"/></name></name> <operator pos:line="195" pos:column="31">&lt;<pos:position pos:line="195" pos:column="35"/></operator> <literal type="number" pos:line="195" pos:column="33">0<pos:position pos:line="195" pos:column="34"/></literal></expr>)<pos:position pos:line="195" pos:column="35"/></condition><then pos:line="195" pos:column="35"> <block pos:line="195" pos:column="36">{
                    <break pos:line="196" pos:column="21">break;<pos:position pos:line="196" pos:column="27"/></break>
                }<pos:position pos:line="197" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="198" pos:column="17">size<pos:position pos:line="198" pos:column="21"/></name> <operator pos:line="198" pos:column="22">+=<pos:position pos:line="198" pos:column="24"/></operator> <name><name pos:line="198" pos:column="25">e<pos:position pos:line="198" pos:column="26"/></name><operator pos:line="198" pos:column="26">-&gt;<pos:position pos:line="198" pos:column="31"/></operator><name pos:line="198" pos:column="28">length<pos:position pos:line="198" pos:column="34"/></name></name></expr>;<pos:position pos:line="198" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="199" pos:column="14"/></block>

            <if pos:line="201" pos:column="13">if <condition pos:line="201" pos:column="16">(<expr><operator pos:line="201" pos:column="17">!<pos:position pos:line="201" pos:column="18"/></operator><name pos:line="201" pos:column="18">all_buckets_here<pos:position pos:line="201" pos:column="34"/></name></expr>)<pos:position pos:line="201" pos:column="35"/></condition><then pos:line="201" pos:column="35"> <block pos:line="201" pos:column="36">{
                <expr_stmt><expr><name pos:line="202" pos:column="17">size<pos:position pos:line="202" pos:column="21"/></name> <operator pos:line="202" pos:column="22">=<pos:position pos:line="202" pos:column="23"/></operator> <operator pos:line="202" pos:column="24">-<pos:position pos:line="202" pos:column="25"/></operator><literal type="number" pos:line="202" pos:column="25">1<pos:position pos:line="202" pos:column="26"/></literal></expr>;<pos:position pos:line="202" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="203" pos:column="14"/></block></then></if>
        }<pos:position pos:line="204" pos:column="10"/></block></else></if>
    }<pos:position pos:line="205" pos:column="6"/></block>

    <comment type="block" pos:line="207" pos:column="5">/* It's safe to cache the response.
     *
     * There are two possiblities at this point:
     * - cache-&gt;handle == NULL. In this case there is no previously
     * cached entity anywhere on the system. We must create a brand
     * new entity and store the response in it.
     * - cache-&gt;handle != NULL. In this case there is a stale
     * entity in the system which needs to be replaced by new
     * content (unless the result was 304 Not Modified, which means
     * the cached entity is actually fresh, and we should update
     * the headers).
     */</comment>
    <comment type="block" pos:line="219" pos:column="5">/* no cache handle, create a new entity */</comment>
    <if pos:line="220" pos:column="5">if <condition pos:line="220" pos:column="8">(<expr><operator pos:line="220" pos:column="9">!<pos:position pos:line="220" pos:column="10"/></operator><name><name pos:line="220" pos:column="10">cache<pos:position pos:line="220" pos:column="15"/></name><operator pos:line="220" pos:column="15">-&gt;<pos:position pos:line="220" pos:column="20"/></operator><name pos:line="220" pos:column="17">handle<pos:position pos:line="220" pos:column="23"/></name></name></expr>)<pos:position pos:line="220" pos:column="24"/></condition><then pos:line="220" pos:column="24"> <block pos:line="220" pos:column="25">{
        <expr_stmt><expr><name pos:line="221" pos:column="9">rv<pos:position pos:line="221" pos:column="11"/></name> <operator pos:line="221" pos:column="12">=<pos:position pos:line="221" pos:column="13"/></operator> <call><name pos:line="221" pos:column="14">cache_create_entity<pos:position pos:line="221" pos:column="33"/></name><argument_list pos:line="221" pos:column="33">(<argument><expr><name pos:line="221" pos:column="34">r<pos:position pos:line="221" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="221" pos:column="37">cache<pos:position pos:line="221" pos:column="42"/></name><operator pos:line="221" pos:column="42">-&gt;<pos:position pos:line="221" pos:column="47"/></operator><name pos:line="221" pos:column="44">types<pos:position pos:line="221" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="221" pos:column="51">url<pos:position pos:line="221" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="221" pos:column="56">size<pos:position pos:line="221" pos:column="60"/></name></expr></argument>)<pos:position pos:line="221" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="222" pos:column="6"/></block></then>
    <comment type="block" pos:line="223" pos:column="5">/* pre-existing cache handle and 304, make entity fresh */</comment>
    <elseif pos:line="224" pos:column="5">else <if pos:line="224" pos:column="10">if <condition pos:line="224" pos:column="13">(<expr><name><name pos:line="224" pos:column="14">r<pos:position pos:line="224" pos:column="15"/></name><operator pos:line="224" pos:column="15">-&gt;<pos:position pos:line="224" pos:column="20"/></operator><name pos:line="224" pos:column="17">status<pos:position pos:line="224" pos:column="23"/></name></name> <operator pos:line="224" pos:column="24">==<pos:position pos:line="224" pos:column="26"/></operator> <name pos:line="224" pos:column="27">HTTP_NOT_MODIFIED<pos:position pos:line="224" pos:column="44"/></name></expr>)<pos:position pos:line="224" pos:column="45"/></condition><then pos:line="224" pos:column="45"> <block pos:line="224" pos:column="46">{
        <comment type="block" pos:line="225" pos:column="9">/* update headers */</comment>

        <comment type="block" pos:line="227" pos:column="9">/* remove this filter ??? */</comment>

        <comment type="block" pos:line="229" pos:column="9">/* XXX is this right?  we must set rv to something other than OK 
         * in this path
         */</comment>
        <expr_stmt><expr><name pos:line="232" pos:column="9">rv<pos:position pos:line="232" pos:column="11"/></name> <operator pos:line="232" pos:column="12">=<pos:position pos:line="232" pos:column="13"/></operator> <name pos:line="232" pos:column="14">HTTP_NOT_MODIFIED<pos:position pos:line="232" pos:column="31"/></name></expr>;<pos:position pos:line="232" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="233" pos:column="6"/></block></then></if></elseif>
    <comment type="block" pos:line="234" pos:column="5">/* pre-existing cache handle and new entity, replace entity
     * with this one
     */</comment>
    <else pos:line="237" pos:column="5">else <block pos:line="237" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="238" pos:column="9">cache_remove_entity<pos:position pos:line="238" pos:column="28"/></name><argument_list pos:line="238" pos:column="28">(<argument><expr><name pos:line="238" pos:column="29">r<pos:position pos:line="238" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="238" pos:column="32">cache<pos:position pos:line="238" pos:column="37"/></name><operator pos:line="238" pos:column="37">-&gt;<pos:position pos:line="238" pos:column="42"/></operator><name pos:line="238" pos:column="39">types<pos:position pos:line="238" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="238" pos:column="46">cache<pos:position pos:line="238" pos:column="51"/></name><operator pos:line="238" pos:column="51">-&gt;<pos:position pos:line="238" pos:column="56"/></operator><name pos:line="238" pos:column="53">handle<pos:position pos:line="238" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="238" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name pos:line="239" pos:column="9">rv<pos:position pos:line="239" pos:column="11"/></name> <operator pos:line="239" pos:column="12">=<pos:position pos:line="239" pos:column="13"/></operator> <call><name pos:line="239" pos:column="14">cache_create_entity<pos:position pos:line="239" pos:column="33"/></name><argument_list pos:line="239" pos:column="33">(<argument><expr><name pos:line="239" pos:column="34">r<pos:position pos:line="239" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="239" pos:column="37">cache<pos:position pos:line="239" pos:column="42"/></name><operator pos:line="239" pos:column="42">-&gt;<pos:position pos:line="239" pos:column="47"/></operator><name pos:line="239" pos:column="44">types<pos:position pos:line="239" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="239" pos:column="51">url<pos:position pos:line="239" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="239" pos:column="56">size<pos:position pos:line="239" pos:column="60"/></name></expr></argument>)<pos:position pos:line="239" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="240" pos:column="6"/></block></else></if>
    
    <if pos:line="242" pos:column="5">if <condition pos:line="242" pos:column="8">(<expr><name pos:line="242" pos:column="9">rv<pos:position pos:line="242" pos:column="11"/></name> <operator pos:line="242" pos:column="12">!=<pos:position pos:line="242" pos:column="14"/></operator> <name pos:line="242" pos:column="15">OK<pos:position pos:line="242" pos:column="17"/></name></expr>)<pos:position pos:line="242" pos:column="18"/></condition><then pos:line="242" pos:column="18"> <block pos:line="242" pos:column="19">{
        <comment type="block" pos:line="243" pos:column="9">/* Caching layer declined the opportunity to cache the response */</comment>
        <expr_stmt><expr><call><name pos:line="244" pos:column="9">ap_remove_output_filter<pos:position pos:line="244" pos:column="32"/></name><argument_list pos:line="244" pos:column="32">(<argument><expr><name pos:line="244" pos:column="33">f<pos:position pos:line="244" pos:column="34"/></name></expr></argument>)<pos:position pos:line="244" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="36"/></expr_stmt>
        <return pos:line="245" pos:column="9">return <expr><call><name pos:line="245" pos:column="16">ap_pass_brigade<pos:position pos:line="245" pos:column="31"/></name><argument_list pos:line="245" pos:column="31">(<argument><expr><name><name pos:line="245" pos:column="32">f<pos:position pos:line="245" pos:column="33"/></name><operator pos:line="245" pos:column="33">-&gt;<pos:position pos:line="245" pos:column="38"/></operator><name pos:line="245" pos:column="35">next<pos:position pos:line="245" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="245" pos:column="41">in<pos:position pos:line="245" pos:column="43"/></name></expr></argument>)<pos:position pos:line="245" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="45"/></return>
    }<pos:position pos:line="246" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="248" pos:column="5">ap_log_error<pos:position pos:line="248" pos:column="17"/></name><argument_list pos:line="248" pos:column="17">(<argument><expr><name pos:line="248" pos:column="18">APLOG_MARK<pos:position pos:line="248" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="30">APLOG_DEBUG<pos:position pos:line="248" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="248" pos:column="43">0<pos:position pos:line="248" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="248" pos:column="46">r<pos:position pos:line="248" pos:column="47"/></name><operator pos:line="248" pos:column="47">-&gt;<pos:position pos:line="248" pos:column="52"/></operator><name pos:line="248" pos:column="49">server<pos:position pos:line="248" pos:column="55"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="249" pos:column="18">"cache: Caching url: %s"<pos:position pos:line="249" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="249" pos:column="44">url<pos:position pos:line="249" pos:column="47"/></name></expr></argument>)<pos:position pos:line="249" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="49"/></expr_stmt>

    <comment type="block" pos:line="251" pos:column="5">/*
     * We now want to update the cache file header information with
     * the new date, last modified, expire and content length and write
     * it away to our cache file. First, we determine these values from
     * the response, using heuristics if appropriate.
     *
     * In addition, we make HTTP/1.1 age calculations and write them away
     * too.
     */</comment>

    <comment type="block" pos:line="261" pos:column="5">/* Read the date. Generate one if one is not supplied */</comment>
    <expr_stmt><expr><name pos:line="262" pos:column="5">dates<pos:position pos:line="262" pos:column="10"/></name> <operator pos:line="262" pos:column="11">=<pos:position pos:line="262" pos:column="12"/></operator> <call><name pos:line="262" pos:column="13">apr_table_get<pos:position pos:line="262" pos:column="26"/></name><argument_list pos:line="262" pos:column="26">(<argument><expr><name><name pos:line="262" pos:column="27">r<pos:position pos:line="262" pos:column="28"/></name><operator pos:line="262" pos:column="28">-&gt;<pos:position pos:line="262" pos:column="33"/></operator><name pos:line="262" pos:column="30">headers_out<pos:position pos:line="262" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="262" pos:column="43">"Date"<pos:position pos:line="262" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="262" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="51"/></expr_stmt>
    <if pos:line="263" pos:column="5">if <condition pos:line="263" pos:column="8">(<expr><name pos:line="263" pos:column="9">dates<pos:position pos:line="263" pos:column="14"/></name> <operator pos:line="263" pos:column="15">!=<pos:position pos:line="263" pos:column="17"/></operator> <name pos:line="263" pos:column="18">NULL<pos:position pos:line="263" pos:column="22"/></name></expr>)<pos:position pos:line="263" pos:column="23"/></condition><then pos:line="263" pos:column="23"> <block pos:line="263" pos:column="24">{
        <expr_stmt><expr><name><name pos:line="264" pos:column="9">info<pos:position pos:line="264" pos:column="13"/></name><operator pos:line="264" pos:column="13">-&gt;<pos:position pos:line="264" pos:column="18"/></operator><name pos:line="264" pos:column="15">date<pos:position pos:line="264" pos:column="19"/></name></name> <operator pos:line="264" pos:column="20">=<pos:position pos:line="264" pos:column="21"/></operator> <call><name pos:line="264" pos:column="22">apr_date_parse_http<pos:position pos:line="264" pos:column="41"/></name><argument_list pos:line="264" pos:column="41">(<argument><expr><name pos:line="264" pos:column="42">dates<pos:position pos:line="264" pos:column="47"/></name></expr></argument>)<pos:position pos:line="264" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="265" pos:column="6"/></block></then>
    <else pos:line="266" pos:column="5">else <block pos:line="266" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="267" pos:column="9">info<pos:position pos:line="267" pos:column="13"/></name><operator pos:line="267" pos:column="13">-&gt;<pos:position pos:line="267" pos:column="18"/></operator><name pos:line="267" pos:column="15">date<pos:position pos:line="267" pos:column="19"/></name></name> <operator pos:line="267" pos:column="20">=<pos:position pos:line="267" pos:column="21"/></operator> <name pos:line="267" pos:column="22">APR_DATE_BAD<pos:position pos:line="267" pos:column="34"/></name></expr>;<pos:position pos:line="267" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="268" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="270" pos:column="5">now<pos:position pos:line="270" pos:column="8"/></name> <operator pos:line="270" pos:column="9">=<pos:position pos:line="270" pos:column="10"/></operator> <call><name pos:line="270" pos:column="11">apr_time_now<pos:position pos:line="270" pos:column="23"/></name><argument_list pos:line="270" pos:column="23">()<pos:position pos:line="270" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="26"/></expr_stmt>
    <if pos:line="271" pos:column="5">if <condition pos:line="271" pos:column="8">(<expr><name><name pos:line="271" pos:column="9">info<pos:position pos:line="271" pos:column="13"/></name><operator pos:line="271" pos:column="13">-&gt;<pos:position pos:line="271" pos:column="18"/></operator><name pos:line="271" pos:column="15">date<pos:position pos:line="271" pos:column="19"/></name></name> <operator pos:line="271" pos:column="20">==<pos:position pos:line="271" pos:column="22"/></operator> <name pos:line="271" pos:column="23">APR_DATE_BAD<pos:position pos:line="271" pos:column="35"/></name></expr>)<pos:position pos:line="271" pos:column="36"/></condition><then pos:line="271" pos:column="36"> <block pos:line="271" pos:column="37">{  <comment type="block" pos:line="271" pos:column="40">/* No, or bad date */</comment>
        <decl_stmt><decl><type><name pos:line="272" pos:column="9">char<pos:position pos:line="272" pos:column="13"/></name> <modifier pos:line="272" pos:column="14">*<pos:position pos:line="272" pos:column="15"/></modifier></type><name pos:line="272" pos:column="15">dates<pos:position pos:line="272" pos:column="20"/></name></decl>;<pos:position pos:line="272" pos:column="21"/></decl_stmt>
        <comment type="block" pos:line="273" pos:column="9">/* no date header! */</comment>
        <comment type="block" pos:line="274" pos:column="9">/* add one; N.B. use the time _now_ rather than when we were checking
         * the cache 
         */</comment>
        <expr_stmt><expr><name pos:line="277" pos:column="9">date<pos:position pos:line="277" pos:column="13"/></name> <operator pos:line="277" pos:column="14">=<pos:position pos:line="277" pos:column="15"/></operator> <name pos:line="277" pos:column="16">now<pos:position pos:line="277" pos:column="19"/></name></expr>;<pos:position pos:line="277" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="278" pos:column="9">dates<pos:position pos:line="278" pos:column="14"/></name> <operator pos:line="278" pos:column="15">=<pos:position pos:line="278" pos:column="16"/></operator> <call><name pos:line="278" pos:column="17">apr_pcalloc<pos:position pos:line="278" pos:column="28"/></name><argument_list pos:line="278" pos:column="28">(<argument><expr><name><name pos:line="278" pos:column="29">r<pos:position pos:line="278" pos:column="30"/></name><operator pos:line="278" pos:column="30">-&gt;<pos:position pos:line="278" pos:column="35"/></operator><name pos:line="278" pos:column="32">pool<pos:position pos:line="278" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="38">MAX_STRING_LEN<pos:position pos:line="278" pos:column="52"/></name></expr></argument>)<pos:position pos:line="278" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="279" pos:column="9">apr_rfc822_date<pos:position pos:line="279" pos:column="24"/></name><argument_list pos:line="279" pos:column="24">(<argument><expr><name pos:line="279" pos:column="25">dates<pos:position pos:line="279" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="279" pos:column="32">now<pos:position pos:line="279" pos:column="35"/></name></expr></argument>)<pos:position pos:line="279" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="280" pos:column="9">apr_table_set<pos:position pos:line="280" pos:column="22"/></name><argument_list pos:line="280" pos:column="22">(<argument><expr><name><name pos:line="280" pos:column="23">r<pos:position pos:line="280" pos:column="24"/></name><operator pos:line="280" pos:column="24">-&gt;<pos:position pos:line="280" pos:column="29"/></operator><name pos:line="280" pos:column="26">headers_out<pos:position pos:line="280" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="280" pos:column="39">"Date"<pos:position pos:line="280" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="280" pos:column="47">dates<pos:position pos:line="280" pos:column="52"/></name></expr></argument>)<pos:position pos:line="280" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="280" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="281" pos:column="9">ap_log_error<pos:position pos:line="281" pos:column="21"/></name><argument_list pos:line="281" pos:column="21">(<argument><expr><name pos:line="281" pos:column="22">APLOG_MARK<pos:position pos:line="281" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="281" pos:column="34">APLOG_DEBUG<pos:position pos:line="281" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="281" pos:column="47">0<pos:position pos:line="281" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="281" pos:column="50">r<pos:position pos:line="281" pos:column="51"/></name><operator pos:line="281" pos:column="51">-&gt;<pos:position pos:line="281" pos:column="56"/></operator><name pos:line="281" pos:column="53">server<pos:position pos:line="281" pos:column="59"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="282" pos:column="22">"cache: Added date header"<pos:position pos:line="282" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="282" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="283" pos:column="9">info<pos:position pos:line="283" pos:column="13"/></name><operator pos:line="283" pos:column="13">-&gt;<pos:position pos:line="283" pos:column="18"/></operator><name pos:line="283" pos:column="15">date<pos:position pos:line="283" pos:column="19"/></name></name> <operator pos:line="283" pos:column="20">=<pos:position pos:line="283" pos:column="21"/></operator> <name pos:line="283" pos:column="22">date<pos:position pos:line="283" pos:column="26"/></name></expr>;<pos:position pos:line="283" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="284" pos:column="6"/></block></then>
    <else pos:line="285" pos:column="5">else <block pos:line="285" pos:column="10">{
        <expr_stmt><expr><name pos:line="286" pos:column="9">date<pos:position pos:line="286" pos:column="13"/></name> <operator pos:line="286" pos:column="14">=<pos:position pos:line="286" pos:column="15"/></operator> <name><name pos:line="286" pos:column="16">info<pos:position pos:line="286" pos:column="20"/></name><operator pos:line="286" pos:column="20">-&gt;<pos:position pos:line="286" pos:column="25"/></operator><name pos:line="286" pos:column="22">date<pos:position pos:line="286" pos:column="26"/></name></name></expr>;<pos:position pos:line="286" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="287" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="289" pos:column="5">/* set response_time for HTTP/1.1 age calculations */</comment>
    <expr_stmt><expr><name><name pos:line="290" pos:column="5">info<pos:position pos:line="290" pos:column="9"/></name><operator pos:line="290" pos:column="9">-&gt;<pos:position pos:line="290" pos:column="14"/></operator><name pos:line="290" pos:column="11">response_time<pos:position pos:line="290" pos:column="24"/></name></name> <operator pos:line="290" pos:column="25">=<pos:position pos:line="290" pos:column="26"/></operator> <name pos:line="290" pos:column="27">now<pos:position pos:line="290" pos:column="30"/></name></expr>;<pos:position pos:line="290" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="292" pos:column="5">/* get the request time */</comment>
    <expr_stmt><expr><name><name pos:line="293" pos:column="5">info<pos:position pos:line="293" pos:column="9"/></name><operator pos:line="293" pos:column="9">-&gt;<pos:position pos:line="293" pos:column="14"/></operator><name pos:line="293" pos:column="11">request_time<pos:position pos:line="293" pos:column="23"/></name></name> <operator pos:line="293" pos:column="24">=<pos:position pos:line="293" pos:column="25"/></operator> <name><name pos:line="293" pos:column="26">r<pos:position pos:line="293" pos:column="27"/></name><operator pos:line="293" pos:column="27">-&gt;<pos:position pos:line="293" pos:column="32"/></operator><name pos:line="293" pos:column="29">request_time<pos:position pos:line="293" pos:column="41"/></name></name></expr>;<pos:position pos:line="293" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="295" pos:column="5">/* check last-modified date */</comment>
    <comment type="block" pos:line="296" pos:column="5">/* XXX FIXME we're referencing date on a path where we didn't set it */</comment>
    <if pos:line="297" pos:column="5">if <condition pos:line="297" pos:column="8">(<expr><name pos:line="297" pos:column="9">lastmod<pos:position pos:line="297" pos:column="16"/></name> <operator pos:line="297" pos:column="17">!=<pos:position pos:line="297" pos:column="19"/></operator> <name pos:line="297" pos:column="20">APR_DATE_BAD<pos:position pos:line="297" pos:column="32"/></name> <operator pos:line="297" pos:column="33">&amp;&amp;<pos:position pos:line="297" pos:column="43"/></operator> <name pos:line="297" pos:column="36">lastmod<pos:position pos:line="297" pos:column="43"/></name> <operator pos:line="297" pos:column="44">&gt;<pos:position pos:line="297" pos:column="48"/></operator> <name pos:line="297" pos:column="46">date<pos:position pos:line="297" pos:column="50"/></name></expr>)<pos:position pos:line="297" pos:column="51"/></condition><then pos:line="297" pos:column="51"> <block pos:line="297" pos:column="52">{
        <comment type="block" pos:line="298" pos:column="9">/* if it's in the future, then replace by date */</comment>
        <expr_stmt><expr><name pos:line="299" pos:column="9">lastmod<pos:position pos:line="299" pos:column="16"/></name> <operator pos:line="299" pos:column="17">=<pos:position pos:line="299" pos:column="18"/></operator> <name pos:line="299" pos:column="19">date<pos:position pos:line="299" pos:column="23"/></name></expr>;<pos:position pos:line="299" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="300" pos:column="9">lastmods<pos:position pos:line="300" pos:column="17"/></name> <operator pos:line="300" pos:column="18">=<pos:position pos:line="300" pos:column="19"/></operator> <name pos:line="300" pos:column="20">dates<pos:position pos:line="300" pos:column="25"/></name></expr>;<pos:position pos:line="300" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="301" pos:column="9">ap_log_error<pos:position pos:line="301" pos:column="21"/></name><argument_list pos:line="301" pos:column="21">(<argument><expr><name pos:line="301" pos:column="22">APLOG_MARK<pos:position pos:line="301" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="301" pos:column="34">APLOG_DEBUG<pos:position pos:line="301" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="301" pos:column="47">0<pos:position pos:line="301" pos:column="48"/></literal></expr></argument>, 
                     <argument><expr><name><name pos:line="302" pos:column="22">r<pos:position pos:line="302" pos:column="23"/></name><operator pos:line="302" pos:column="23">-&gt;<pos:position pos:line="302" pos:column="28"/></operator><name pos:line="302" pos:column="25">server<pos:position pos:line="302" pos:column="31"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="303" pos:column="22">"cache: Last modified is in the future, "<pos:position pos:line="303" pos:column="63"/></literal>
                     <literal type="string" pos:line="304" pos:column="22">"replacing with now"<pos:position pos:line="304" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="304" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="305" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="306" pos:column="5">info<pos:position pos:line="306" pos:column="9"/></name><operator pos:line="306" pos:column="9">-&gt;<pos:position pos:line="306" pos:column="14"/></operator><name pos:line="306" pos:column="11">lastmod<pos:position pos:line="306" pos:column="18"/></name></name> <operator pos:line="306" pos:column="19">=<pos:position pos:line="306" pos:column="20"/></operator> <name pos:line="306" pos:column="21">lastmod<pos:position pos:line="306" pos:column="28"/></name></expr>;<pos:position pos:line="306" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="308" pos:column="5">/* if no expiry date then
     *   if lastmod
     *      expiry date = now + min((date - lastmod) * factor, maxexpire)
     *   else
     *      expire date = now + defaultexpire
     */</comment>
    <if pos:line="314" pos:column="5">if <condition pos:line="314" pos:column="8">(<expr><name pos:line="314" pos:column="9">exp<pos:position pos:line="314" pos:column="12"/></name> <operator pos:line="314" pos:column="13">==<pos:position pos:line="314" pos:column="15"/></operator> <name pos:line="314" pos:column="16">APR_DATE_BAD<pos:position pos:line="314" pos:column="28"/></name></expr>)<pos:position pos:line="314" pos:column="29"/></condition><then pos:line="314" pos:column="29"> <block pos:line="314" pos:column="30">{
        <if pos:line="315" pos:column="9">if <condition pos:line="315" pos:column="12">(<expr><name pos:line="315" pos:column="13">lastmod<pos:position pos:line="315" pos:column="20"/></name> <operator pos:line="315" pos:column="21">!=<pos:position pos:line="315" pos:column="23"/></operator> <name pos:line="315" pos:column="24">APR_DATE_BAD<pos:position pos:line="315" pos:column="36"/></name></expr>)<pos:position pos:line="315" pos:column="37"/></condition><then pos:line="315" pos:column="37"> <block pos:line="315" pos:column="38">{
            <decl_stmt><decl><type><name pos:line="316" pos:column="13">apr_time_t<pos:position pos:line="316" pos:column="23"/></name></type> <name pos:line="316" pos:column="24">x<pos:position pos:line="316" pos:column="25"/></name> <init pos:line="316" pos:column="26">= <expr><call pos:line="316" pos:column="28">(<name pos:line="316" pos:column="29">apr_time_t<pos:position pos:line="316" pos:column="39"/></name>) <argument_list pos:line="316" pos:column="41">(<argument><expr><operator pos:line="316" pos:column="42">(<pos:position pos:line="316" pos:column="43"/></operator><name pos:line="316" pos:column="43">date<pos:position pos:line="316" pos:column="47"/></name> <operator pos:line="316" pos:column="48">-<pos:position pos:line="316" pos:column="49"/></operator> <name pos:line="316" pos:column="50">lastmod<pos:position pos:line="316" pos:column="57"/></name><operator pos:line="316" pos:column="57">)<pos:position pos:line="316" pos:column="58"/></operator> <operator pos:line="316" pos:column="59">*<pos:position pos:line="316" pos:column="60"/></operator> <name><name pos:line="316" pos:column="61">conf<pos:position pos:line="316" pos:column="65"/></name><operator pos:line="316" pos:column="65">-&gt;<pos:position pos:line="316" pos:column="70"/></operator><name pos:line="316" pos:column="67">factor<pos:position pos:line="316" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="316" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="316" pos:column="75"/></decl_stmt>
            <if pos:line="317" pos:column="13">if <condition pos:line="317" pos:column="16">(<expr><name pos:line="317" pos:column="17">x<pos:position pos:line="317" pos:column="18"/></name> <operator pos:line="317" pos:column="19">&gt;<pos:position pos:line="317" pos:column="23"/></operator> <name><name pos:line="317" pos:column="21">conf<pos:position pos:line="317" pos:column="25"/></name><operator pos:line="317" pos:column="25">-&gt;<pos:position pos:line="317" pos:column="30"/></operator><name pos:line="317" pos:column="27">maxex<pos:position pos:line="317" pos:column="32"/></name></name></expr>)<pos:position pos:line="317" pos:column="33"/></condition><then pos:line="317" pos:column="33"> <block pos:line="317" pos:column="34">{
                <expr_stmt><expr><name pos:line="318" pos:column="17">x<pos:position pos:line="318" pos:column="18"/></name> <operator pos:line="318" pos:column="19">=<pos:position pos:line="318" pos:column="20"/></operator> <name><name pos:line="318" pos:column="21">conf<pos:position pos:line="318" pos:column="25"/></name><operator pos:line="318" pos:column="25">-&gt;<pos:position pos:line="318" pos:column="30"/></operator><name pos:line="318" pos:column="27">maxex<pos:position pos:line="318" pos:column="32"/></name></name></expr>;<pos:position pos:line="318" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="319" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="320" pos:column="13">exp<pos:position pos:line="320" pos:column="16"/></name> <operator pos:line="320" pos:column="17">=<pos:position pos:line="320" pos:column="18"/></operator> <name pos:line="320" pos:column="19">now<pos:position pos:line="320" pos:column="22"/></name> <operator pos:line="320" pos:column="23">+<pos:position pos:line="320" pos:column="24"/></operator> <name pos:line="320" pos:column="25">x<pos:position pos:line="320" pos:column="26"/></name></expr>;<pos:position pos:line="320" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="321" pos:column="10"/></block></then>
        <else pos:line="322" pos:column="9">else <block pos:line="322" pos:column="14">{
            <expr_stmt><expr><name pos:line="323" pos:column="13">exp<pos:position pos:line="323" pos:column="16"/></name> <operator pos:line="323" pos:column="17">=<pos:position pos:line="323" pos:column="18"/></operator> <name pos:line="323" pos:column="19">now<pos:position pos:line="323" pos:column="22"/></name> <operator pos:line="323" pos:column="23">+<pos:position pos:line="323" pos:column="24"/></operator> <name><name pos:line="323" pos:column="25">conf<pos:position pos:line="323" pos:column="29"/></name><operator pos:line="323" pos:column="29">-&gt;<pos:position pos:line="323" pos:column="34"/></operator><name pos:line="323" pos:column="31">defex<pos:position pos:line="323" pos:column="36"/></name></name></expr>;<pos:position pos:line="323" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="324" pos:column="10"/></block></else></if>
    }<pos:position pos:line="325" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="326" pos:column="5">info<pos:position pos:line="326" pos:column="9"/></name><operator pos:line="326" pos:column="9">-&gt;<pos:position pos:line="326" pos:column="14"/></operator><name pos:line="326" pos:column="11">expire<pos:position pos:line="326" pos:column="17"/></name></name> <operator pos:line="326" pos:column="18">=<pos:position pos:line="326" pos:column="19"/></operator> <name pos:line="326" pos:column="20">exp<pos:position pos:line="326" pos:column="23"/></name></expr>;<pos:position pos:line="326" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="328" pos:column="5">info<pos:position pos:line="328" pos:column="9"/></name><operator pos:line="328" pos:column="9">-&gt;<pos:position pos:line="328" pos:column="14"/></operator><name pos:line="328" pos:column="11">content_type<pos:position pos:line="328" pos:column="23"/></name></name> <operator pos:line="328" pos:column="24">=<pos:position pos:line="328" pos:column="25"/></operator> <call><name pos:line="328" pos:column="26">apr_pstrdup<pos:position pos:line="328" pos:column="37"/></name><argument_list pos:line="328" pos:column="37">(<argument><expr><name><name pos:line="328" pos:column="38">r<pos:position pos:line="328" pos:column="39"/></name><operator pos:line="328" pos:column="39">-&gt;<pos:position pos:line="328" pos:column="44"/></operator><name pos:line="328" pos:column="41">pool<pos:position pos:line="328" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="328" pos:column="47">r<pos:position pos:line="328" pos:column="48"/></name><operator pos:line="328" pos:column="48">-&gt;<pos:position pos:line="328" pos:column="53"/></operator><name pos:line="328" pos:column="50">content_type<pos:position pos:line="328" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="328" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="329" pos:column="5">info<pos:position pos:line="329" pos:column="9"/></name><operator pos:line="329" pos:column="9">-&gt;<pos:position pos:line="329" pos:column="14"/></operator><name pos:line="329" pos:column="11">filename<pos:position pos:line="329" pos:column="19"/></name></name> <operator pos:line="329" pos:column="20">=<pos:position pos:line="329" pos:column="21"/></operator> <call><name pos:line="329" pos:column="22">apr_pstrdup<pos:position pos:line="329" pos:column="33"/></name><argument_list pos:line="329" pos:column="33">(<argument><expr><name><name pos:line="329" pos:column="34">r<pos:position pos:line="329" pos:column="35"/></name><operator pos:line="329" pos:column="35">-&gt;<pos:position pos:line="329" pos:column="40"/></operator><name pos:line="329" pos:column="37">pool<pos:position pos:line="329" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="329" pos:column="43">r<pos:position pos:line="329" pos:column="44"/></name><operator pos:line="329" pos:column="44">-&gt;<pos:position pos:line="329" pos:column="49"/></operator><name pos:line="329" pos:column="46">filename<pos:position pos:line="329" pos:column="54"/></name></name></expr></argument> )<pos:position pos:line="329" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="329" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="331" pos:column="5">/*
     * Write away header information to cache.
     */</comment>
    <expr_stmt><expr><name pos:line="334" pos:column="5">rv<pos:position pos:line="334" pos:column="7"/></name> <operator pos:line="334" pos:column="8">=<pos:position pos:line="334" pos:column="9"/></operator> <call><name pos:line="334" pos:column="10">cache_write_entity_headers<pos:position pos:line="334" pos:column="36"/></name><argument_list pos:line="334" pos:column="36">(<argument><expr><name><name pos:line="334" pos:column="37">cache<pos:position pos:line="334" pos:column="42"/></name><operator pos:line="334" pos:column="42">-&gt;<pos:position pos:line="334" pos:column="47"/></operator><name pos:line="334" pos:column="44">handle<pos:position pos:line="334" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="334" pos:column="52">r<pos:position pos:line="334" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="334" pos:column="55">info<pos:position pos:line="334" pos:column="59"/></name></expr></argument>)<pos:position pos:line="334" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="61"/></expr_stmt>
    <if pos:line="335" pos:column="5">if <condition pos:line="335" pos:column="8">(<expr><name pos:line="335" pos:column="9">rv<pos:position pos:line="335" pos:column="11"/></name> <operator pos:line="335" pos:column="12">==<pos:position pos:line="335" pos:column="14"/></operator> <name pos:line="335" pos:column="15">APR_SUCCESS<pos:position pos:line="335" pos:column="26"/></name></expr>)<pos:position pos:line="335" pos:column="27"/></condition><then pos:line="335" pos:column="27"> <block pos:line="335" pos:column="28">{
        <expr_stmt><expr><name pos:line="336" pos:column="9">rv<pos:position pos:line="336" pos:column="11"/></name> <operator pos:line="336" pos:column="12">=<pos:position pos:line="336" pos:column="13"/></operator> <call><name pos:line="336" pos:column="14">cache_write_entity_body<pos:position pos:line="336" pos:column="37"/></name><argument_list pos:line="336" pos:column="37">(<argument><expr><name><name pos:line="336" pos:column="38">cache<pos:position pos:line="336" pos:column="43"/></name><operator pos:line="336" pos:column="43">-&gt;<pos:position pos:line="336" pos:column="48"/></operator><name pos:line="336" pos:column="45">handle<pos:position pos:line="336" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="336" pos:column="53">r<pos:position pos:line="336" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="336" pos:column="56">in<pos:position pos:line="336" pos:column="58"/></name></expr></argument>)<pos:position pos:line="336" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="336" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="337" pos:column="6"/></block></then></if>
    <if pos:line="338" pos:column="5">if <condition pos:line="338" pos:column="8">(<expr><name pos:line="338" pos:column="9">rv<pos:position pos:line="338" pos:column="11"/></name> <operator pos:line="338" pos:column="12">!=<pos:position pos:line="338" pos:column="14"/></operator> <name pos:line="338" pos:column="15">APR_SUCCESS<pos:position pos:line="338" pos:column="26"/></name></expr>)<pos:position pos:line="338" pos:column="27"/></condition><then pos:line="338" pos:column="27"> <block pos:line="338" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="339" pos:column="9">ap_remove_output_filter<pos:position pos:line="339" pos:column="32"/></name><argument_list pos:line="339" pos:column="32">(<argument><expr><name pos:line="339" pos:column="33">f<pos:position pos:line="339" pos:column="34"/></name></expr></argument>)<pos:position pos:line="339" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="340" pos:column="6"/></block></then></if>
    <return pos:line="341" pos:column="5">return <expr><call><name pos:line="341" pos:column="12">ap_pass_brigade<pos:position pos:line="341" pos:column="27"/></name><argument_list pos:line="341" pos:column="27">(<argument><expr><name><name pos:line="341" pos:column="28">f<pos:position pos:line="341" pos:column="29"/></name><operator pos:line="341" pos:column="29">-&gt;<pos:position pos:line="341" pos:column="34"/></operator><name pos:line="341" pos:column="31">next<pos:position pos:line="341" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="37">in<pos:position pos:line="341" pos:column="39"/></name></expr></argument>)<pos:position pos:line="341" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="341" pos:column="41"/></return>
}<pos:position pos:line="342" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2270_httpd-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">command<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">sed_eval_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">eval<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">sed_reptr_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">ipc<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">step_vars_storage<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">step_vars<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type>    <name pos:line="4" pos:column="12">i<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name>   <modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier></type><name pos:line="5" pos:column="13">p1<pos:position pos:line="5" pos:column="15"/></name></decl>, <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="18">p2<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">p3<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">length<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">sz<pos:position pos:line="8" pos:column="12"/></name><index pos:line="8" pos:column="12">[<expr><literal type="number" pos:line="8" pos:column="13">32<pos:position pos:line="8" pos:column="15"/></literal></expr>]<pos:position pos:line="8" pos:column="16"/></index></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt> <comment type="block" pos:line="8" pos:column="18">/* 32 bytes enough to store 64 bit integer in decimal */</comment>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_status_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">rv<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><name pos:line="9" pos:column="23">APR_SUCCESS<pos:position pos:line="9" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>


    <switch pos:line="12" pos:column="5">switch<condition pos:line="12" pos:column="11">(<expr><name><name pos:line="12" pos:column="12">ipc<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">command<pos:position pos:line="12" pos:column="24"/></name></name></expr>)<pos:position pos:line="12" pos:column="25"/></condition> <block pos:line="12" pos:column="26">{

        <case pos:line="14" pos:column="9">case <expr><name pos:line="14" pos:column="14">ACOM<pos:position pos:line="14" pos:column="18"/></name></expr>:<pos:position pos:line="14" pos:column="19"/></case>
            <if pos:line="15" pos:column="13">if<condition pos:line="15" pos:column="15">(<expr><name><name pos:line="15" pos:column="16">eval<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">aptr<pos:position pos:line="15" pos:column="26"/></name></name> <operator pos:line="15" pos:column="27">&gt;=<pos:position pos:line="15" pos:column="32"/></operator> <operator pos:line="15" pos:column="30">&amp;<pos:position pos:line="15" pos:column="35"/></operator><name><name pos:line="15" pos:column="31">eval<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">abuf<pos:position pos:line="15" pos:column="41"/></name><index pos:line="15" pos:column="41">[<expr><name pos:line="15" pos:column="42">SED_ABUFSIZE<pos:position pos:line="15" pos:column="54"/></name></expr>]<pos:position pos:line="15" pos:column="55"/></index></name></expr>)<pos:position pos:line="15" pos:column="56"/></condition><then pos:line="15" pos:column="56"> <block pos:line="15" pos:column="57">{
                <expr_stmt><expr><call><name pos:line="16" pos:column="17">eval_errf<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">eval<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">SEDERR_TMAMES<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="48">eval<pos:position pos:line="16" pos:column="52"/></name><operator pos:line="16" pos:column="52">-&gt;<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="54">lnum<pos:position pos:line="16" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="60"/></expr_stmt>
            }<pos:position pos:line="17" pos:column="14"/></block></then> <else pos:line="17" pos:column="15">else <block pos:line="17" pos:column="20">{
                <expr_stmt><expr><operator pos:line="18" pos:column="17">*<pos:position pos:line="18" pos:column="18"/></operator><name><name pos:line="18" pos:column="18">eval<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">aptr<pos:position pos:line="18" pos:column="28"/></name></name><operator pos:line="18" pos:column="28">++<pos:position pos:line="18" pos:column="30"/></operator> <operator pos:line="18" pos:column="31">=<pos:position pos:line="18" pos:column="32"/></operator> <name pos:line="18" pos:column="33">ipc<pos:position pos:line="18" pos:column="36"/></name></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></operator><name><name pos:line="19" pos:column="18">eval<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">aptr<pos:position pos:line="19" pos:column="28"/></name></name> <operator pos:line="19" pos:column="29">=<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="31">NULL<pos:position pos:line="19" pos:column="35"/></name></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="20" pos:column="14"/></block></else></if>
            <break pos:line="21" pos:column="13">break;<pos:position pos:line="21" pos:column="19"/></break>

        <case pos:line="23" pos:column="9">case <expr><name pos:line="23" pos:column="14">CCOM<pos:position pos:line="23" pos:column="18"/></name></expr>:<pos:position pos:line="23" pos:column="19"/></case>
            <expr_stmt><expr><name><name pos:line="24" pos:column="13">eval<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">delflag<pos:position pos:line="24" pos:column="26"/></name></name> <operator pos:line="24" pos:column="27">=<pos:position pos:line="24" pos:column="28"/></operator> <literal type="number" pos:line="24" pos:column="29">1<pos:position pos:line="24" pos:column="30"/></literal></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
            <if pos:line="25" pos:column="13">if<condition pos:line="25" pos:column="15">(<expr><operator pos:line="25" pos:column="16">!<pos:position pos:line="25" pos:column="17"/></operator><name><name pos:line="25" pos:column="17">eval<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">-&gt;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="23">inar<pos:position pos:line="25" pos:column="27"/></name><index pos:line="25" pos:column="27">[<expr><name><name pos:line="25" pos:column="28">ipc<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">-&gt;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="33">nrep<pos:position pos:line="25" pos:column="37"/></name></name></expr>]<pos:position pos:line="25" pos:column="38"/></index></name> <operator pos:line="25" pos:column="39">||<pos:position pos:line="25" pos:column="41"/></operator> <name><name pos:line="25" pos:column="42">eval<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">-&gt;<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="48">dolflag<pos:position pos:line="25" pos:column="55"/></name></name></expr>)<pos:position pos:line="25" pos:column="56"/></condition><then pos:line="25" pos:column="56"> <block pos:line="25" pos:column="57">{
                <for pos:line="26" pos:column="17">for <control pos:line="26" pos:column="21">(<init><expr><name pos:line="26" pos:column="22">p1<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <name><name pos:line="26" pos:column="27">ipc<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">-&gt;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="32">re1<pos:position pos:line="26" pos:column="35"/></name></name></expr>;<pos:position pos:line="26" pos:column="36"/></init> <condition><expr><operator pos:line="26" pos:column="37">*<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="38">p1<pos:position pos:line="26" pos:column="40"/></name></expr>;<pos:position pos:line="26" pos:column="41"/></condition> <incr><expr><name pos:line="26" pos:column="42">p1<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">++<pos:position pos:line="26" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="47"/></control>
                    <block type="pseudo"><empty_stmt pos:line="27" pos:column="21">;<pos:position pos:line="27" pos:column="22"/></empty_stmt></block></for>
                <expr_stmt><expr><name pos:line="28" pos:column="17">rv<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <call><name pos:line="28" pos:column="22">wline<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">eval<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="34">ipc<pos:position pos:line="28" pos:column="37"/></name><operator pos:line="28" pos:column="37">-&gt;<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="39">re1<pos:position pos:line="28" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="44">p1<pos:position pos:line="28" pos:column="46"/></name> <operator pos:line="28" pos:column="47">-<pos:position pos:line="28" pos:column="48"/></operator> <name><name pos:line="28" pos:column="49">ipc<pos:position pos:line="28" pos:column="52"/></name><operator pos:line="28" pos:column="52">-&gt;<pos:position pos:line="28" pos:column="57"/></operator><name pos:line="28" pos:column="54">re1<pos:position pos:line="28" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="29" pos:column="14"/></block></then></if>
            <break pos:line="30" pos:column="13">break;<pos:position pos:line="30" pos:column="19"/></break>
        <case pos:line="31" pos:column="9">case <expr><name pos:line="31" pos:column="14">DCOM<pos:position pos:line="31" pos:column="18"/></name></expr>:<pos:position pos:line="31" pos:column="19"/></case>
            <expr_stmt><expr><name><name pos:line="32" pos:column="13">eval<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">delflag<pos:position pos:line="32" pos:column="26"/></name></name><operator pos:line="32" pos:column="26">++<pos:position pos:line="32" pos:column="28"/></operator></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>
            <break pos:line="33" pos:column="13">break;<pos:position pos:line="33" pos:column="19"/></break>
        <case pos:line="34" pos:column="9">case <expr><name pos:line="34" pos:column="14">CDCOM<pos:position pos:line="34" pos:column="19"/></name></expr>:<pos:position pos:line="34" pos:column="20"/></case>
            <expr_stmt><expr><name pos:line="35" pos:column="13">p1<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <name><name pos:line="35" pos:column="18">eval<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">-&gt;<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="24">linebuf<pos:position pos:line="35" pos:column="31"/></name></name></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>

            <while pos:line="37" pos:column="13">while<condition pos:line="37" pos:column="18">(<expr><operator pos:line="37" pos:column="19">*<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="20">p1<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">!=<pos:position pos:line="37" pos:column="25"/></operator> <literal type="char" pos:line="37" pos:column="26">'\n'<pos:position pos:line="37" pos:column="30"/></literal></expr>)<pos:position pos:line="37" pos:column="31"/></condition> <block pos:line="37" pos:column="32">{
                <if pos:line="38" pos:column="17">if<condition pos:line="38" pos:column="19">(<expr><operator pos:line="38" pos:column="20">*<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">p1<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">++<pos:position pos:line="38" pos:column="25"/></operator> <operator pos:line="38" pos:column="26">==<pos:position pos:line="38" pos:column="28"/></operator> <literal type="number" pos:line="38" pos:column="29">0<pos:position pos:line="38" pos:column="30"/></literal></expr>)<pos:position pos:line="38" pos:column="31"/></condition><then pos:line="38" pos:column="31"> <block pos:line="38" pos:column="32">{
                    <expr_stmt><expr><name><name pos:line="39" pos:column="21">eval<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">-&gt;<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="27">delflag<pos:position pos:line="39" pos:column="34"/></name></name><operator pos:line="39" pos:column="34">++<pos:position pos:line="39" pos:column="36"/></operator></expr>;<pos:position pos:line="39" pos:column="37"/></expr_stmt>
                    <return pos:line="40" pos:column="21">return <expr><name pos:line="40" pos:column="28">APR_SUCCESS<pos:position pos:line="40" pos:column="39"/></name></expr>;<pos:position pos:line="40" pos:column="40"/></return>
                }<pos:position pos:line="41" pos:column="18"/></block></then></if>
            }<pos:position pos:line="42" pos:column="14"/></block></while>

            <expr_stmt><expr><name pos:line="44" pos:column="13">p1<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">++<pos:position pos:line="44" pos:column="17"/></operator></expr>;<pos:position pos:line="44" pos:column="18"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">copy_to_linebuf<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><name pos:line="45" pos:column="29">eval<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="35">p1<pos:position pos:line="45" pos:column="37"/></name></expr></argument>)<pos:position pos:line="45" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="46" pos:column="13">eval<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">-&gt;<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="19">jflag<pos:position pos:line="46" pos:column="24"/></name></name><operator pos:line="46" pos:column="24">++<pos:position pos:line="46" pos:column="26"/></operator></expr>;<pos:position pos:line="46" pos:column="27"/></expr_stmt>
            <break pos:line="47" pos:column="13">break;<pos:position pos:line="47" pos:column="19"/></break>

        <case pos:line="49" pos:column="9">case <expr><name pos:line="49" pos:column="14">EQCOM<pos:position pos:line="49" pos:column="19"/></name></expr>:<pos:position pos:line="49" pos:column="20"/></case>
            <expr_stmt><expr><name pos:line="50" pos:column="13">length<pos:position pos:line="50" pos:column="19"/></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <call><name pos:line="50" pos:column="22">apr_snprintf<pos:position pos:line="50" pos:column="34"/></name><argument_list pos:line="50" pos:column="34">(<argument><expr><name pos:line="50" pos:column="35">sz<pos:position pos:line="50" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="39">sizeof<argument_list pos:line="50" pos:column="45">(<argument><expr><name pos:line="50" pos:column="46">sz<pos:position pos:line="50" pos:column="48"/></name></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="51">"%d"<pos:position pos:line="50" pos:column="55"/></literal></expr></argument>, <argument><expr><operator pos:line="50" pos:column="57">(<pos:position pos:line="50" pos:column="58"/></operator><name pos:line="50" pos:column="58">int<pos:position pos:line="50" pos:column="61"/></name><operator pos:line="50" pos:column="61">)<pos:position pos:line="50" pos:column="62"/></operator> <name><name pos:line="50" pos:column="63">eval<pos:position pos:line="50" pos:column="67"/></name><operator pos:line="50" pos:column="67">-&gt;<pos:position pos:line="50" pos:column="72"/></operator><name pos:line="50" pos:column="69">lnum<pos:position pos:line="50" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><name pos:line="51" pos:column="13">rv<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <call><name pos:line="51" pos:column="18">wline<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><name pos:line="51" pos:column="24">eval<pos:position pos:line="51" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="30">sz<pos:position pos:line="51" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="34">length<pos:position pos:line="51" pos:column="40"/></name></expr></argument>)<pos:position pos:line="51" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="42"/></expr_stmt>
            <break pos:line="52" pos:column="13">break;<pos:position pos:line="52" pos:column="19"/></break>

        <case pos:line="54" pos:column="9">case <expr><name pos:line="54" pos:column="14">GCOM<pos:position pos:line="54" pos:column="18"/></name></expr>:<pos:position pos:line="54" pos:column="19"/></case>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">copy_to_linebuf<pos:position pos:line="55" pos:column="28"/></name><argument_list pos:line="55" pos:column="28">(<argument><expr><name pos:line="55" pos:column="29">eval<pos:position pos:line="55" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="35">eval<pos:position pos:line="55" pos:column="39"/></name><operator pos:line="55" pos:column="39">-&gt;<pos:position pos:line="55" pos:column="44"/></operator><name pos:line="55" pos:column="41">holdbuf<pos:position pos:line="55" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="50"/></expr_stmt>
            <break pos:line="56" pos:column="13">break;<pos:position pos:line="56" pos:column="19"/></break>

        <case pos:line="58" pos:column="9">case <expr><name pos:line="58" pos:column="14">CGCOM<pos:position pos:line="58" pos:column="19"/></name></expr>:<pos:position pos:line="58" pos:column="20"/></case>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">append_to_linebuf<pos:position pos:line="59" pos:column="30"/></name><argument_list pos:line="59" pos:column="30">(<argument><expr><name pos:line="59" pos:column="31">eval<pos:position pos:line="59" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="37">"\n"<pos:position pos:line="59" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">append_to_linebuf<pos:position pos:line="60" pos:column="30"/></name><argument_list pos:line="60" pos:column="30">(<argument><expr><name pos:line="60" pos:column="31">eval<pos:position pos:line="60" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="37">eval<pos:position pos:line="60" pos:column="41"/></name><operator pos:line="60" pos:column="41">-&gt;<pos:position pos:line="60" pos:column="46"/></operator><name pos:line="60" pos:column="43">holdbuf<pos:position pos:line="60" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="52"/></expr_stmt>
            <break pos:line="61" pos:column="13">break;<pos:position pos:line="61" pos:column="19"/></break>

        <case pos:line="63" pos:column="9">case <expr><name pos:line="63" pos:column="14">HCOM<pos:position pos:line="63" pos:column="18"/></name></expr>:<pos:position pos:line="63" pos:column="19"/></case>
            <expr_stmt><expr><call><name pos:line="64" pos:column="13">copy_to_holdbuf<pos:position pos:line="64" pos:column="28"/></name><argument_list pos:line="64" pos:column="28">(<argument><expr><name pos:line="64" pos:column="29">eval<pos:position pos:line="64" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="35">eval<pos:position pos:line="64" pos:column="39"/></name><operator pos:line="64" pos:column="39">-&gt;<pos:position pos:line="64" pos:column="44"/></operator><name pos:line="64" pos:column="41">linebuf<pos:position pos:line="64" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="50"/></expr_stmt>
            <break pos:line="65" pos:column="13">break;<pos:position pos:line="65" pos:column="19"/></break>

        <case pos:line="67" pos:column="9">case <expr><name pos:line="67" pos:column="14">CHCOM<pos:position pos:line="67" pos:column="19"/></name></expr>:<pos:position pos:line="67" pos:column="20"/></case>
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">append_to_holdbuf<pos:position pos:line="68" pos:column="30"/></name><argument_list pos:line="68" pos:column="30">(<argument><expr><name pos:line="68" pos:column="31">eval<pos:position pos:line="68" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="37">"\n"<pos:position pos:line="68" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">append_to_holdbuf<pos:position pos:line="69" pos:column="30"/></name><argument_list pos:line="69" pos:column="30">(<argument><expr><name pos:line="69" pos:column="31">eval<pos:position pos:line="69" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="37">eval<pos:position pos:line="69" pos:column="41"/></name><operator pos:line="69" pos:column="41">-&gt;<pos:position pos:line="69" pos:column="46"/></operator><name pos:line="69" pos:column="43">linebuf<pos:position pos:line="69" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="52"/></expr_stmt>
            <break pos:line="70" pos:column="13">break;<pos:position pos:line="70" pos:column="19"/></break>

        <case pos:line="72" pos:column="9">case <expr><name pos:line="72" pos:column="14">ICOM<pos:position pos:line="72" pos:column="18"/></name></expr>:<pos:position pos:line="72" pos:column="19"/></case>
            <for pos:line="73" pos:column="13">for <control pos:line="73" pos:column="17">(<init><expr><name pos:line="73" pos:column="18">p1<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">=<pos:position pos:line="73" pos:column="22"/></operator> <name><name pos:line="73" pos:column="23">ipc<pos:position pos:line="73" pos:column="26"/></name><operator pos:line="73" pos:column="26">-&gt;<pos:position pos:line="73" pos:column="31"/></operator><name pos:line="73" pos:column="28">re1<pos:position pos:line="73" pos:column="31"/></name></name></expr>;<pos:position pos:line="73" pos:column="32"/></init> <condition><expr><operator pos:line="73" pos:column="33">*<pos:position pos:line="73" pos:column="34"/></operator><name pos:line="73" pos:column="34">p1<pos:position pos:line="73" pos:column="36"/></name></expr>;<pos:position pos:line="73" pos:column="37"/></condition> <incr><expr><name pos:line="73" pos:column="38">p1<pos:position pos:line="73" pos:column="40"/></name><operator pos:line="73" pos:column="40">++<pos:position pos:line="73" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="73" pos:column="43"/></control><block type="pseudo"><empty_stmt pos:line="73" pos:column="43">;<pos:position pos:line="73" pos:column="44"/></empty_stmt></block></for>
            <expr_stmt><expr><name pos:line="74" pos:column="13">rv<pos:position pos:line="74" pos:column="15"/></name> <operator pos:line="74" pos:column="16">=<pos:position pos:line="74" pos:column="17"/></operator> <call><name pos:line="74" pos:column="18">wline<pos:position pos:line="74" pos:column="23"/></name><argument_list pos:line="74" pos:column="23">(<argument><expr><name pos:line="74" pos:column="24">eval<pos:position pos:line="74" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="30">ipc<pos:position pos:line="74" pos:column="33"/></name><operator pos:line="74" pos:column="33">-&gt;<pos:position pos:line="74" pos:column="38"/></operator><name pos:line="74" pos:column="35">re1<pos:position pos:line="74" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="40">p1<pos:position pos:line="74" pos:column="42"/></name> <operator pos:line="74" pos:column="43">-<pos:position pos:line="74" pos:column="44"/></operator> <name><name pos:line="74" pos:column="45">ipc<pos:position pos:line="74" pos:column="48"/></name><operator pos:line="74" pos:column="48">-&gt;<pos:position pos:line="74" pos:column="53"/></operator><name pos:line="74" pos:column="50">re1<pos:position pos:line="74" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="55"/></expr_stmt>
            <break pos:line="75" pos:column="13">break;<pos:position pos:line="75" pos:column="19"/></break>

        <case pos:line="77" pos:column="9">case <expr><name pos:line="77" pos:column="14">BCOM<pos:position pos:line="77" pos:column="18"/></name></expr>:<pos:position pos:line="77" pos:column="19"/></case>
            <expr_stmt><expr><name><name pos:line="78" pos:column="13">eval<pos:position pos:line="78" pos:column="17"/></name><operator pos:line="78" pos:column="17">-&gt;<pos:position pos:line="78" pos:column="22"/></operator><name pos:line="78" pos:column="19">jflag<pos:position pos:line="78" pos:column="24"/></name></name> <operator pos:line="78" pos:column="25">=<pos:position pos:line="78" pos:column="26"/></operator> <literal type="number" pos:line="78" pos:column="27">1<pos:position pos:line="78" pos:column="28"/></literal></expr>;<pos:position pos:line="78" pos:column="29"/></expr_stmt>
            <break pos:line="79" pos:column="13">break;<pos:position pos:line="79" pos:column="19"/></break>


        <case pos:line="82" pos:column="9">case <expr><name pos:line="82" pos:column="14">LCOM<pos:position pos:line="82" pos:column="18"/></name></expr>:<pos:position pos:line="82" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="83" pos:column="13">p1<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">=<pos:position pos:line="83" pos:column="17"/></operator> <name><name pos:line="83" pos:column="18">eval<pos:position pos:line="83" pos:column="22"/></name><operator pos:line="83" pos:column="22">-&gt;<pos:position pos:line="83" pos:column="27"/></operator><name pos:line="83" pos:column="24">linebuf<pos:position pos:line="83" pos:column="31"/></name></name></expr>;<pos:position pos:line="83" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><name pos:line="84" pos:column="13">p2<pos:position pos:line="84" pos:column="15"/></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <name><name pos:line="84" pos:column="18">eval<pos:position pos:line="84" pos:column="22"/></name><operator pos:line="84" pos:column="22">-&gt;<pos:position pos:line="84" pos:column="27"/></operator><name pos:line="84" pos:column="24">genbuf<pos:position pos:line="84" pos:column="30"/></name></name></expr>;<pos:position pos:line="84" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="85" pos:column="13">eval<pos:position pos:line="85" pos:column="17"/></name><operator pos:line="85" pos:column="17">-&gt;<pos:position pos:line="85" pos:column="22"/></operator><name pos:line="85" pos:column="19">genbuf<pos:position pos:line="85" pos:column="25"/></name><index pos:line="85" pos:column="25">[<expr><literal type="number" pos:line="85" pos:column="26">72<pos:position pos:line="85" pos:column="28"/></literal></expr>]<pos:position pos:line="85" pos:column="29"/></index></name> <operator pos:line="85" pos:column="30">=<pos:position pos:line="85" pos:column="31"/></operator> <literal type="number" pos:line="85" pos:column="32">0<pos:position pos:line="85" pos:column="33"/></literal></expr>;<pos:position pos:line="85" pos:column="34"/></expr_stmt>
            <while pos:line="86" pos:column="13">while<condition pos:line="86" pos:column="18">(<expr><operator pos:line="86" pos:column="19">*<pos:position pos:line="86" pos:column="20"/></operator><name pos:line="86" pos:column="20">p1<pos:position pos:line="86" pos:column="22"/></name></expr>)<pos:position pos:line="86" pos:column="23"/></condition>
                <block type="pseudo"><if pos:line="87" pos:column="17">if<condition pos:line="87" pos:column="19">(<expr><operator pos:line="87" pos:column="20">(<pos:position pos:line="87" pos:column="21"/></operator><name pos:line="87" pos:column="21">unsigned<pos:position pos:line="87" pos:column="29"/></name> <name pos:line="87" pos:column="30">char<pos:position pos:line="87" pos:column="34"/></name><operator pos:line="87" pos:column="34">)<pos:position pos:line="87" pos:column="35"/></operator><operator pos:line="87" pos:column="35">*<pos:position pos:line="87" pos:column="36"/></operator><name pos:line="87" pos:column="36">p1<pos:position pos:line="87" pos:column="38"/></name> <operator pos:line="87" pos:column="39">&gt;=<pos:position pos:line="87" pos:column="44"/></operator> <literal type="number" pos:line="87" pos:column="42">040<pos:position pos:line="87" pos:column="45"/></literal></expr>)<pos:position pos:line="87" pos:column="46"/></condition><then pos:line="87" pos:column="46"> <block pos:line="87" pos:column="47">{
                    <if pos:line="88" pos:column="21">if<condition pos:line="88" pos:column="23">(<expr><operator pos:line="88" pos:column="24">*<pos:position pos:line="88" pos:column="25"/></operator><name pos:line="88" pos:column="25">p1<pos:position pos:line="88" pos:column="27"/></name> <operator pos:line="88" pos:column="28">==<pos:position pos:line="88" pos:column="30"/></operator> <literal type="number" pos:line="88" pos:column="31">0177<pos:position pos:line="88" pos:column="35"/></literal></expr>)<pos:position pos:line="88" pos:column="36"/></condition><then pos:line="88" pos:column="36"> <block pos:line="88" pos:column="37">{
                        <expr_stmt><expr><name pos:line="89" pos:column="25">p3<pos:position pos:line="89" pos:column="27"/></name> <operator pos:line="89" pos:column="28">=<pos:position pos:line="89" pos:column="29"/></operator> <name pos:line="89" pos:column="30">rub<pos:position pos:line="89" pos:column="33"/></name></expr>;<pos:position pos:line="89" pos:column="34"/></expr_stmt>
                        <while pos:line="90" pos:column="25">while <condition pos:line="90" pos:column="31">(<expr><operator pos:line="90" pos:column="32">(<pos:position pos:line="90" pos:column="33"/></operator><operator pos:line="90" pos:column="33">*<pos:position pos:line="90" pos:column="34"/></operator><name pos:line="90" pos:column="34">p2<pos:position pos:line="90" pos:column="36"/></name><operator pos:line="90" pos:column="36">++<pos:position pos:line="90" pos:column="38"/></operator> <operator pos:line="90" pos:column="39">=<pos:position pos:line="90" pos:column="40"/></operator> <operator pos:line="90" pos:column="41">*<pos:position pos:line="90" pos:column="42"/></operator><name pos:line="90" pos:column="42">p3<pos:position pos:line="90" pos:column="44"/></name><operator pos:line="90" pos:column="44">++<pos:position pos:line="90" pos:column="46"/></operator><operator pos:line="90" pos:column="46">)<pos:position pos:line="90" pos:column="47"/></operator> <operator pos:line="90" pos:column="48">!=<pos:position pos:line="90" pos:column="50"/></operator> <literal type="number" pos:line="90" pos:column="51">0<pos:position pos:line="90" pos:column="52"/></literal></expr>)<pos:position pos:line="90" pos:column="53"/></condition>
                            <block type="pseudo"><if pos:line="91" pos:column="29">if<condition pos:line="91" pos:column="31">(<expr><name pos:line="91" pos:column="32">p2<pos:position pos:line="91" pos:column="34"/></name> <operator pos:line="91" pos:column="35">&gt;=<pos:position pos:line="91" pos:column="40"/></operator> <name><name pos:line="91" pos:column="38">eval<pos:position pos:line="91" pos:column="42"/></name><operator pos:line="91" pos:column="42">-&gt;<pos:position pos:line="91" pos:column="47"/></operator><name pos:line="91" pos:column="44">lcomend<pos:position pos:line="91" pos:column="51"/></name></name></expr>)<pos:position pos:line="91" pos:column="52"/></condition><then pos:line="91" pos:column="52"> <block pos:line="91" pos:column="53">{
                                <expr_stmt><expr><operator pos:line="92" pos:column="33">*<pos:position pos:line="92" pos:column="34"/></operator><name pos:line="92" pos:column="34">p2<pos:position pos:line="92" pos:column="36"/></name> <operator pos:line="92" pos:column="37">=<pos:position pos:line="92" pos:column="38"/></operator> <literal type="char" pos:line="92" pos:column="39">'\\'<pos:position pos:line="92" pos:column="43"/></literal></expr>;<pos:position pos:line="92" pos:column="44"/></expr_stmt>
                                <expr_stmt><expr><name pos:line="93" pos:column="33">rv<pos:position pos:line="93" pos:column="35"/></name> <operator pos:line="93" pos:column="36">=<pos:position pos:line="93" pos:column="37"/></operator> <call><name pos:line="93" pos:column="38">wline<pos:position pos:line="93" pos:column="43"/></name><argument_list pos:line="93" pos:column="43">(<argument><expr><name pos:line="93" pos:column="44">eval<pos:position pos:line="93" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="50">eval<pos:position pos:line="93" pos:column="54"/></name><operator pos:line="93" pos:column="54">-&gt;<pos:position pos:line="93" pos:column="59"/></operator><name pos:line="93" pos:column="56">genbuf<pos:position pos:line="93" pos:column="62"/></name></name></expr></argument>,
                                           <argument><expr><call><name pos:line="94" pos:column="44">strlen<pos:position pos:line="94" pos:column="50"/></name><argument_list pos:line="94" pos:column="50">(<argument><expr><name><name pos:line="94" pos:column="51">eval<pos:position pos:line="94" pos:column="55"/></name><operator pos:line="94" pos:column="55">-&gt;<pos:position pos:line="94" pos:column="60"/></operator><name pos:line="94" pos:column="57">genbuf<pos:position pos:line="94" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="66"/></expr_stmt>
                                <if pos:line="95" pos:column="33">if <condition pos:line="95" pos:column="36">(<expr><name pos:line="95" pos:column="37">rv<pos:position pos:line="95" pos:column="39"/></name> <operator pos:line="95" pos:column="40">!=<pos:position pos:line="95" pos:column="42"/></operator> <name pos:line="95" pos:column="43">APR_SUCCESS<pos:position pos:line="95" pos:column="54"/></name></expr>)<pos:position pos:line="95" pos:column="55"/></condition><then pos:line="95" pos:column="55">
                                    <block type="pseudo"><return pos:line="96" pos:column="37">return <expr><name pos:line="96" pos:column="44">rv<pos:position pos:line="96" pos:column="46"/></name></expr>;<pos:position pos:line="96" pos:column="47"/></return></block></then></if>
                                <expr_stmt><expr><name pos:line="97" pos:column="33">p2<pos:position pos:line="97" pos:column="35"/></name> <operator pos:line="97" pos:column="36">=<pos:position pos:line="97" pos:column="37"/></operator> <name><name pos:line="97" pos:column="38">eval<pos:position pos:line="97" pos:column="42"/></name><operator pos:line="97" pos:column="42">-&gt;<pos:position pos:line="97" pos:column="47"/></operator><name pos:line="97" pos:column="44">genbuf<pos:position pos:line="97" pos:column="50"/></name></name></expr>;<pos:position pos:line="97" pos:column="51"/></expr_stmt>
                            }<pos:position pos:line="98" pos:column="30"/></block></then></if></block></while>
                        <expr_stmt><expr><name pos:line="99" pos:column="25">p2<pos:position pos:line="99" pos:column="27"/></name><operator pos:line="99" pos:column="27">--<pos:position pos:line="99" pos:column="29"/></operator></expr>;<pos:position pos:line="99" pos:column="30"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="100" pos:column="25">p1<pos:position pos:line="100" pos:column="27"/></name><operator pos:line="100" pos:column="27">++<pos:position pos:line="100" pos:column="29"/></operator></expr>;<pos:position pos:line="100" pos:column="30"/></expr_stmt>
                        <continue pos:line="101" pos:column="25">continue;<pos:position pos:line="101" pos:column="34"/></continue>
                    }<pos:position pos:line="102" pos:column="22"/></block></then></if>
                    <if pos:line="103" pos:column="21">if<condition pos:line="103" pos:column="23">(<expr><operator pos:line="103" pos:column="24">!<pos:position pos:line="103" pos:column="25"/></operator><call><name pos:line="103" pos:column="25">isprint<pos:position pos:line="103" pos:column="32"/></name><argument_list pos:line="103" pos:column="32">(<argument><expr><operator pos:line="103" pos:column="33">*<pos:position pos:line="103" pos:column="34"/></operator><name pos:line="103" pos:column="34">p1<pos:position pos:line="103" pos:column="36"/></name> <operator pos:line="103" pos:column="37">&amp;<pos:position pos:line="103" pos:column="42"/></operator> <literal type="number" pos:line="103" pos:column="39">0377<pos:position pos:line="103" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="103" pos:column="45"/></condition><then pos:line="103" pos:column="45"> <block pos:line="103" pos:column="46">{
                        <expr_stmt><expr><operator pos:line="104" pos:column="25">*<pos:position pos:line="104" pos:column="26"/></operator><name pos:line="104" pos:column="26">p2<pos:position pos:line="104" pos:column="28"/></name><operator pos:line="104" pos:column="28">++<pos:position pos:line="104" pos:column="30"/></operator> <operator pos:line="104" pos:column="31">=<pos:position pos:line="104" pos:column="32"/></operator> <literal type="char" pos:line="104" pos:column="33">'\\'<pos:position pos:line="104" pos:column="37"/></literal></expr>;<pos:position pos:line="104" pos:column="38"/></expr_stmt>
                        <if pos:line="105" pos:column="25">if<condition pos:line="105" pos:column="27">(<expr><name pos:line="105" pos:column="28">p2<pos:position pos:line="105" pos:column="30"/></name> <operator pos:line="105" pos:column="31">&gt;=<pos:position pos:line="105" pos:column="36"/></operator> <name><name pos:line="105" pos:column="34">eval<pos:position pos:line="105" pos:column="38"/></name><operator pos:line="105" pos:column="38">-&gt;<pos:position pos:line="105" pos:column="43"/></operator><name pos:line="105" pos:column="40">lcomend<pos:position pos:line="105" pos:column="47"/></name></name></expr>)<pos:position pos:line="105" pos:column="48"/></condition><then pos:line="105" pos:column="48"> <block pos:line="105" pos:column="49">{
                            <expr_stmt><expr><operator pos:line="106" pos:column="29">*<pos:position pos:line="106" pos:column="30"/></operator><name pos:line="106" pos:column="30">p2<pos:position pos:line="106" pos:column="32"/></name> <operator pos:line="106" pos:column="33">=<pos:position pos:line="106" pos:column="34"/></operator> <literal type="char" pos:line="106" pos:column="35">'\\'<pos:position pos:line="106" pos:column="39"/></literal></expr>;<pos:position pos:line="106" pos:column="40"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="107" pos:column="29">rv<pos:position pos:line="107" pos:column="31"/></name> <operator pos:line="107" pos:column="32">=<pos:position pos:line="107" pos:column="33"/></operator> <call><name pos:line="107" pos:column="34">wline<pos:position pos:line="107" pos:column="39"/></name><argument_list pos:line="107" pos:column="39">(<argument><expr><name pos:line="107" pos:column="40">eval<pos:position pos:line="107" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="46">eval<pos:position pos:line="107" pos:column="50"/></name><operator pos:line="107" pos:column="50">-&gt;<pos:position pos:line="107" pos:column="55"/></operator><name pos:line="107" pos:column="52">genbuf<pos:position pos:line="107" pos:column="58"/></name></name></expr></argument>,
                                       <argument><expr><call><name pos:line="108" pos:column="40">strlen<pos:position pos:line="108" pos:column="46"/></name><argument_list pos:line="108" pos:column="46">(<argument><expr><name><name pos:line="108" pos:column="47">eval<pos:position pos:line="108" pos:column="51"/></name><operator pos:line="108" pos:column="51">-&gt;<pos:position pos:line="108" pos:column="56"/></operator><name pos:line="108" pos:column="53">genbuf<pos:position pos:line="108" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="108" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="62"/></expr_stmt>
                            <if pos:line="109" pos:column="29">if <condition pos:line="109" pos:column="32">(<expr><name pos:line="109" pos:column="33">rv<pos:position pos:line="109" pos:column="35"/></name> <operator pos:line="109" pos:column="36">!=<pos:position pos:line="109" pos:column="38"/></operator> <name pos:line="109" pos:column="39">APR_SUCCESS<pos:position pos:line="109" pos:column="50"/></name></expr>)<pos:position pos:line="109" pos:column="51"/></condition><then pos:line="109" pos:column="51">
                                <block type="pseudo"><return pos:line="110" pos:column="33">return <expr><name pos:line="110" pos:column="40">rv<pos:position pos:line="110" pos:column="42"/></name></expr>;<pos:position pos:line="110" pos:column="43"/></return></block></then></if>
                            <expr_stmt><expr><name pos:line="111" pos:column="29">p2<pos:position pos:line="111" pos:column="31"/></name> <operator pos:line="111" pos:column="32">=<pos:position pos:line="111" pos:column="33"/></operator> <name><name pos:line="111" pos:column="34">eval<pos:position pos:line="111" pos:column="38"/></name><operator pos:line="111" pos:column="38">-&gt;<pos:position pos:line="111" pos:column="43"/></operator><name pos:line="111" pos:column="40">genbuf<pos:position pos:line="111" pos:column="46"/></name></name></expr>;<pos:position pos:line="111" pos:column="47"/></expr_stmt>
                        }<pos:position pos:line="112" pos:column="26"/></block></then></if>
                        <expr_stmt><expr><operator pos:line="113" pos:column="25">*<pos:position pos:line="113" pos:column="26"/></operator><name pos:line="113" pos:column="26">p2<pos:position pos:line="113" pos:column="28"/></name><operator pos:line="113" pos:column="28">++<pos:position pos:line="113" pos:column="30"/></operator> <operator pos:line="113" pos:column="31">=<pos:position pos:line="113" pos:column="32"/></operator> <operator pos:line="113" pos:column="33">(<pos:position pos:line="113" pos:column="34"/></operator><operator pos:line="113" pos:column="34">*<pos:position pos:line="113" pos:column="35"/></operator><name pos:line="113" pos:column="35">p1<pos:position pos:line="113" pos:column="37"/></name> <operator pos:line="113" pos:column="38">&gt;&gt;<pos:position pos:line="113" pos:column="43"/></operator> <literal type="number" pos:line="113" pos:column="41">6<pos:position pos:line="113" pos:column="42"/></literal><operator pos:line="113" pos:column="42">)<pos:position pos:line="113" pos:column="43"/></operator> <operator pos:line="113" pos:column="44">+<pos:position pos:line="113" pos:column="45"/></operator> <literal type="char" pos:line="113" pos:column="46">'0'<pos:position pos:line="113" pos:column="49"/></literal></expr>;<pos:position pos:line="113" pos:column="50"/></expr_stmt>
                        <if pos:line="114" pos:column="25">if<condition pos:line="114" pos:column="27">(<expr><name pos:line="114" pos:column="28">p2<pos:position pos:line="114" pos:column="30"/></name> <operator pos:line="114" pos:column="31">&gt;=<pos:position pos:line="114" pos:column="36"/></operator> <name><name pos:line="114" pos:column="34">eval<pos:position pos:line="114" pos:column="38"/></name><operator pos:line="114" pos:column="38">-&gt;<pos:position pos:line="114" pos:column="43"/></operator><name pos:line="114" pos:column="40">lcomend<pos:position pos:line="114" pos:column="47"/></name></name></expr>)<pos:position pos:line="114" pos:column="48"/></condition><then pos:line="114" pos:column="48"> <block pos:line="114" pos:column="49">{
                            <expr_stmt><expr><operator pos:line="115" pos:column="29">*<pos:position pos:line="115" pos:column="30"/></operator><name pos:line="115" pos:column="30">p2<pos:position pos:line="115" pos:column="32"/></name> <operator pos:line="115" pos:column="33">=<pos:position pos:line="115" pos:column="34"/></operator> <literal type="char" pos:line="115" pos:column="35">'\\'<pos:position pos:line="115" pos:column="39"/></literal></expr>;<pos:position pos:line="115" pos:column="40"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="116" pos:column="29">rv<pos:position pos:line="116" pos:column="31"/></name> <operator pos:line="116" pos:column="32">=<pos:position pos:line="116" pos:column="33"/></operator> <call><name pos:line="116" pos:column="34">wline<pos:position pos:line="116" pos:column="39"/></name><argument_list pos:line="116" pos:column="39">(<argument><expr><name pos:line="116" pos:column="40">eval<pos:position pos:line="116" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="46">eval<pos:position pos:line="116" pos:column="50"/></name><operator pos:line="116" pos:column="50">-&gt;<pos:position pos:line="116" pos:column="55"/></operator><name pos:line="116" pos:column="52">genbuf<pos:position pos:line="116" pos:column="58"/></name></name></expr></argument>,
                                       <argument><expr><call><name pos:line="117" pos:column="40">strlen<pos:position pos:line="117" pos:column="46"/></name><argument_list pos:line="117" pos:column="46">(<argument><expr><name><name pos:line="117" pos:column="47">eval<pos:position pos:line="117" pos:column="51"/></name><operator pos:line="117" pos:column="51">-&gt;<pos:position pos:line="117" pos:column="56"/></operator><name pos:line="117" pos:column="53">genbuf<pos:position pos:line="117" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="117" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="62"/></expr_stmt>
                            <if pos:line="118" pos:column="29">if <condition pos:line="118" pos:column="32">(<expr><name pos:line="118" pos:column="33">rv<pos:position pos:line="118" pos:column="35"/></name> <operator pos:line="118" pos:column="36">!=<pos:position pos:line="118" pos:column="38"/></operator> <name pos:line="118" pos:column="39">APR_SUCCESS<pos:position pos:line="118" pos:column="50"/></name></expr>)<pos:position pos:line="118" pos:column="51"/></condition><then pos:line="118" pos:column="51">
                                <block type="pseudo"><return pos:line="119" pos:column="33">return <expr><name pos:line="119" pos:column="40">rv<pos:position pos:line="119" pos:column="42"/></name></expr>;<pos:position pos:line="119" pos:column="43"/></return></block></then></if>
                            <expr_stmt><expr><name pos:line="120" pos:column="29">p2<pos:position pos:line="120" pos:column="31"/></name> <operator pos:line="120" pos:column="32">=<pos:position pos:line="120" pos:column="33"/></operator> <name><name pos:line="120" pos:column="34">eval<pos:position pos:line="120" pos:column="38"/></name><operator pos:line="120" pos:column="38">-&gt;<pos:position pos:line="120" pos:column="43"/></operator><name pos:line="120" pos:column="40">genbuf<pos:position pos:line="120" pos:column="46"/></name></name></expr>;<pos:position pos:line="120" pos:column="47"/></expr_stmt>
                        }<pos:position pos:line="121" pos:column="26"/></block></then></if>
                        <expr_stmt><expr><operator pos:line="122" pos:column="25">*<pos:position pos:line="122" pos:column="26"/></operator><name pos:line="122" pos:column="26">p2<pos:position pos:line="122" pos:column="28"/></name><operator pos:line="122" pos:column="28">++<pos:position pos:line="122" pos:column="30"/></operator> <operator pos:line="122" pos:column="31">=<pos:position pos:line="122" pos:column="32"/></operator> <operator pos:line="122" pos:column="33">(<pos:position pos:line="122" pos:column="34"/></operator><operator pos:line="122" pos:column="34">(<pos:position pos:line="122" pos:column="35"/></operator><operator pos:line="122" pos:column="35">*<pos:position pos:line="122" pos:column="36"/></operator><name pos:line="122" pos:column="36">p1<pos:position pos:line="122" pos:column="38"/></name> <operator pos:line="122" pos:column="39">&gt;&gt;<pos:position pos:line="122" pos:column="44"/></operator> <literal type="number" pos:line="122" pos:column="42">3<pos:position pos:line="122" pos:column="43"/></literal><operator pos:line="122" pos:column="43">)<pos:position pos:line="122" pos:column="44"/></operator> <operator pos:line="122" pos:column="45">&amp;<pos:position pos:line="122" pos:column="50"/></operator> <literal type="number" pos:line="122" pos:column="47">07<pos:position pos:line="122" pos:column="49"/></literal><operator pos:line="122" pos:column="49">)<pos:position pos:line="122" pos:column="50"/></operator> <operator pos:line="122" pos:column="51">+<pos:position pos:line="122" pos:column="52"/></operator> <literal type="char" pos:line="122" pos:column="53">'0'<pos:position pos:line="122" pos:column="56"/></literal></expr>;<pos:position pos:line="122" pos:column="57"/></expr_stmt>
                        <if pos:line="123" pos:column="25">if<condition pos:line="123" pos:column="27">(<expr><name pos:line="123" pos:column="28">p2<pos:position pos:line="123" pos:column="30"/></name> <operator pos:line="123" pos:column="31">&gt;=<pos:position pos:line="123" pos:column="36"/></operator> <name><name pos:line="123" pos:column="34">eval<pos:position pos:line="123" pos:column="38"/></name><operator pos:line="123" pos:column="38">-&gt;<pos:position pos:line="123" pos:column="43"/></operator><name pos:line="123" pos:column="40">lcomend<pos:position pos:line="123" pos:column="47"/></name></name></expr>)<pos:position pos:line="123" pos:column="48"/></condition><then pos:line="123" pos:column="48"> <block pos:line="123" pos:column="49">{
                            <expr_stmt><expr><operator pos:line="124" pos:column="29">*<pos:position pos:line="124" pos:column="30"/></operator><name pos:line="124" pos:column="30">p2<pos:position pos:line="124" pos:column="32"/></name> <operator pos:line="124" pos:column="33">=<pos:position pos:line="124" pos:column="34"/></operator> <literal type="char" pos:line="124" pos:column="35">'\\'<pos:position pos:line="124" pos:column="39"/></literal></expr>;<pos:position pos:line="124" pos:column="40"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="125" pos:column="29">rv<pos:position pos:line="125" pos:column="31"/></name> <operator pos:line="125" pos:column="32">=<pos:position pos:line="125" pos:column="33"/></operator> <call><name pos:line="125" pos:column="34">wline<pos:position pos:line="125" pos:column="39"/></name><argument_list pos:line="125" pos:column="39">(<argument><expr><name pos:line="125" pos:column="40">eval<pos:position pos:line="125" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="46">eval<pos:position pos:line="125" pos:column="50"/></name><operator pos:line="125" pos:column="50">-&gt;<pos:position pos:line="125" pos:column="55"/></operator><name pos:line="125" pos:column="52">genbuf<pos:position pos:line="125" pos:column="58"/></name></name></expr></argument>,
                                       <argument><expr><call><name pos:line="126" pos:column="40">strlen<pos:position pos:line="126" pos:column="46"/></name><argument_list pos:line="126" pos:column="46">(<argument><expr><name><name pos:line="126" pos:column="47">eval<pos:position pos:line="126" pos:column="51"/></name><operator pos:line="126" pos:column="51">-&gt;<pos:position pos:line="126" pos:column="56"/></operator><name pos:line="126" pos:column="53">genbuf<pos:position pos:line="126" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="126" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="62"/></expr_stmt>
                            <if pos:line="127" pos:column="29">if <condition pos:line="127" pos:column="32">(<expr><name pos:line="127" pos:column="33">rv<pos:position pos:line="127" pos:column="35"/></name> <operator pos:line="127" pos:column="36">!=<pos:position pos:line="127" pos:column="38"/></operator> <name pos:line="127" pos:column="39">APR_SUCCESS<pos:position pos:line="127" pos:column="50"/></name></expr>)<pos:position pos:line="127" pos:column="51"/></condition><then pos:line="127" pos:column="51">
                                <block type="pseudo"><return pos:line="128" pos:column="33">return <expr><name pos:line="128" pos:column="40">rv<pos:position pos:line="128" pos:column="42"/></name></expr>;<pos:position pos:line="128" pos:column="43"/></return></block></then></if>
                            <expr_stmt><expr><name pos:line="129" pos:column="29">p2<pos:position pos:line="129" pos:column="31"/></name> <operator pos:line="129" pos:column="32">=<pos:position pos:line="129" pos:column="33"/></operator> <name><name pos:line="129" pos:column="34">eval<pos:position pos:line="129" pos:column="38"/></name><operator pos:line="129" pos:column="38">-&gt;<pos:position pos:line="129" pos:column="43"/></operator><name pos:line="129" pos:column="40">genbuf<pos:position pos:line="129" pos:column="46"/></name></name></expr>;<pos:position pos:line="129" pos:column="47"/></expr_stmt>
                        }<pos:position pos:line="130" pos:column="26"/></block></then></if>
                        <expr_stmt><expr><operator pos:line="131" pos:column="25">*<pos:position pos:line="131" pos:column="26"/></operator><name pos:line="131" pos:column="26">p2<pos:position pos:line="131" pos:column="28"/></name><operator pos:line="131" pos:column="28">++<pos:position pos:line="131" pos:column="30"/></operator> <operator pos:line="131" pos:column="31">=<pos:position pos:line="131" pos:column="32"/></operator> <operator pos:line="131" pos:column="33">(<pos:position pos:line="131" pos:column="34"/></operator><operator pos:line="131" pos:column="34">*<pos:position pos:line="131" pos:column="35"/></operator><name pos:line="131" pos:column="35">p1<pos:position pos:line="131" pos:column="37"/></name><operator pos:line="131" pos:column="37">++<pos:position pos:line="131" pos:column="39"/></operator> <operator pos:line="131" pos:column="40">&amp;<pos:position pos:line="131" pos:column="45"/></operator> <literal type="number" pos:line="131" pos:column="42">07<pos:position pos:line="131" pos:column="44"/></literal><operator pos:line="131" pos:column="44">)<pos:position pos:line="131" pos:column="45"/></operator> <operator pos:line="131" pos:column="46">+<pos:position pos:line="131" pos:column="47"/></operator> <literal type="char" pos:line="131" pos:column="48">'0'<pos:position pos:line="131" pos:column="51"/></literal></expr>;<pos:position pos:line="131" pos:column="52"/></expr_stmt>
                        <if pos:line="132" pos:column="25">if<condition pos:line="132" pos:column="27">(<expr><name pos:line="132" pos:column="28">p2<pos:position pos:line="132" pos:column="30"/></name> <operator pos:line="132" pos:column="31">&gt;=<pos:position pos:line="132" pos:column="36"/></operator> <name><name pos:line="132" pos:column="34">eval<pos:position pos:line="132" pos:column="38"/></name><operator pos:line="132" pos:column="38">-&gt;<pos:position pos:line="132" pos:column="43"/></operator><name pos:line="132" pos:column="40">lcomend<pos:position pos:line="132" pos:column="47"/></name></name></expr>)<pos:position pos:line="132" pos:column="48"/></condition><then pos:line="132" pos:column="48"> <block pos:line="132" pos:column="49">{
                            <expr_stmt><expr><operator pos:line="133" pos:column="29">*<pos:position pos:line="133" pos:column="30"/></operator><name pos:line="133" pos:column="30">p2<pos:position pos:line="133" pos:column="32"/></name> <operator pos:line="133" pos:column="33">=<pos:position pos:line="133" pos:column="34"/></operator> <literal type="char" pos:line="133" pos:column="35">'\\'<pos:position pos:line="133" pos:column="39"/></literal></expr>;<pos:position pos:line="133" pos:column="40"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="134" pos:column="29">rv<pos:position pos:line="134" pos:column="31"/></name> <operator pos:line="134" pos:column="32">=<pos:position pos:line="134" pos:column="33"/></operator> <call><name pos:line="134" pos:column="34">wline<pos:position pos:line="134" pos:column="39"/></name><argument_list pos:line="134" pos:column="39">(<argument><expr><name pos:line="134" pos:column="40">eval<pos:position pos:line="134" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="134" pos:column="46">eval<pos:position pos:line="134" pos:column="50"/></name><operator pos:line="134" pos:column="50">-&gt;<pos:position pos:line="134" pos:column="55"/></operator><name pos:line="134" pos:column="52">genbuf<pos:position pos:line="134" pos:column="58"/></name></name></expr></argument>,
                                       <argument><expr><call><name pos:line="135" pos:column="40">strlen<pos:position pos:line="135" pos:column="46"/></name><argument_list pos:line="135" pos:column="46">(<argument><expr><name><name pos:line="135" pos:column="47">eval<pos:position pos:line="135" pos:column="51"/></name><operator pos:line="135" pos:column="51">-&gt;<pos:position pos:line="135" pos:column="56"/></operator><name pos:line="135" pos:column="53">genbuf<pos:position pos:line="135" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="135" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="62"/></expr_stmt>
                            <if pos:line="136" pos:column="29">if <condition pos:line="136" pos:column="32">(<expr><name pos:line="136" pos:column="33">rv<pos:position pos:line="136" pos:column="35"/></name> <operator pos:line="136" pos:column="36">!=<pos:position pos:line="136" pos:column="38"/></operator> <name pos:line="136" pos:column="39">APR_SUCCESS<pos:position pos:line="136" pos:column="50"/></name></expr>)<pos:position pos:line="136" pos:column="51"/></condition><then pos:line="136" pos:column="51">
                                <block type="pseudo"><return pos:line="137" pos:column="33">return <expr><name pos:line="137" pos:column="40">rv<pos:position pos:line="137" pos:column="42"/></name></expr>;<pos:position pos:line="137" pos:column="43"/></return></block></then></if>
                            <expr_stmt><expr><name pos:line="138" pos:column="29">p2<pos:position pos:line="138" pos:column="31"/></name> <operator pos:line="138" pos:column="32">=<pos:position pos:line="138" pos:column="33"/></operator> <name><name pos:line="138" pos:column="34">eval<pos:position pos:line="138" pos:column="38"/></name><operator pos:line="138" pos:column="38">-&gt;<pos:position pos:line="138" pos:column="43"/></operator><name pos:line="138" pos:column="40">genbuf<pos:position pos:line="138" pos:column="46"/></name></name></expr>;<pos:position pos:line="138" pos:column="47"/></expr_stmt>
                        }<pos:position pos:line="139" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="140" pos:column="22"/></block></then> <else pos:line="140" pos:column="23">else <block pos:line="140" pos:column="28">{
                        <expr_stmt><expr><operator pos:line="141" pos:column="25">*<pos:position pos:line="141" pos:column="26"/></operator><name pos:line="141" pos:column="26">p2<pos:position pos:line="141" pos:column="28"/></name><operator pos:line="141" pos:column="28">++<pos:position pos:line="141" pos:column="30"/></operator> <operator pos:line="141" pos:column="31">=<pos:position pos:line="141" pos:column="32"/></operator> <operator pos:line="141" pos:column="33">*<pos:position pos:line="141" pos:column="34"/></operator><name pos:line="141" pos:column="34">p1<pos:position pos:line="141" pos:column="36"/></name><operator pos:line="141" pos:column="36">++<pos:position pos:line="141" pos:column="38"/></operator></expr>;<pos:position pos:line="141" pos:column="39"/></expr_stmt>
                        <if pos:line="142" pos:column="25">if<condition pos:line="142" pos:column="27">(<expr><name pos:line="142" pos:column="28">p2<pos:position pos:line="142" pos:column="30"/></name> <operator pos:line="142" pos:column="31">&gt;=<pos:position pos:line="142" pos:column="36"/></operator> <name><name pos:line="142" pos:column="34">eval<pos:position pos:line="142" pos:column="38"/></name><operator pos:line="142" pos:column="38">-&gt;<pos:position pos:line="142" pos:column="43"/></operator><name pos:line="142" pos:column="40">lcomend<pos:position pos:line="142" pos:column="47"/></name></name></expr>)<pos:position pos:line="142" pos:column="48"/></condition><then pos:line="142" pos:column="48"> <block pos:line="142" pos:column="49">{
                            <expr_stmt><expr><operator pos:line="143" pos:column="29">*<pos:position pos:line="143" pos:column="30"/></operator><name pos:line="143" pos:column="30">p2<pos:position pos:line="143" pos:column="32"/></name> <operator pos:line="143" pos:column="33">=<pos:position pos:line="143" pos:column="34"/></operator> <literal type="char" pos:line="143" pos:column="35">'\\'<pos:position pos:line="143" pos:column="39"/></literal></expr>;<pos:position pos:line="143" pos:column="40"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="144" pos:column="29">rv<pos:position pos:line="144" pos:column="31"/></name> <operator pos:line="144" pos:column="32">=<pos:position pos:line="144" pos:column="33"/></operator> <call><name pos:line="144" pos:column="34">wline<pos:position pos:line="144" pos:column="39"/></name><argument_list pos:line="144" pos:column="39">(<argument><expr><name pos:line="144" pos:column="40">eval<pos:position pos:line="144" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="144" pos:column="46">eval<pos:position pos:line="144" pos:column="50"/></name><operator pos:line="144" pos:column="50">-&gt;<pos:position pos:line="144" pos:column="55"/></operator><name pos:line="144" pos:column="52">genbuf<pos:position pos:line="144" pos:column="58"/></name></name></expr></argument>,
                                       <argument><expr><call><name pos:line="145" pos:column="40">strlen<pos:position pos:line="145" pos:column="46"/></name><argument_list pos:line="145" pos:column="46">(<argument><expr><name><name pos:line="145" pos:column="47">eval<pos:position pos:line="145" pos:column="51"/></name><operator pos:line="145" pos:column="51">-&gt;<pos:position pos:line="145" pos:column="56"/></operator><name pos:line="145" pos:column="53">genbuf<pos:position pos:line="145" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="145" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="62"/></expr_stmt>
                            <if pos:line="146" pos:column="29">if <condition pos:line="146" pos:column="32">(<expr><name pos:line="146" pos:column="33">rv<pos:position pos:line="146" pos:column="35"/></name> <operator pos:line="146" pos:column="36">!=<pos:position pos:line="146" pos:column="38"/></operator> <name pos:line="146" pos:column="39">APR_SUCCESS<pos:position pos:line="146" pos:column="50"/></name></expr>)<pos:position pos:line="146" pos:column="51"/></condition><then pos:line="146" pos:column="51">
                                <block type="pseudo"><return pos:line="147" pos:column="33">return <expr><name pos:line="147" pos:column="40">rv<pos:position pos:line="147" pos:column="42"/></name></expr>;<pos:position pos:line="147" pos:column="43"/></return></block></then></if>
                            <expr_stmt><expr><name pos:line="148" pos:column="29">p2<pos:position pos:line="148" pos:column="31"/></name> <operator pos:line="148" pos:column="32">=<pos:position pos:line="148" pos:column="33"/></operator> <name><name pos:line="148" pos:column="34">eval<pos:position pos:line="148" pos:column="38"/></name><operator pos:line="148" pos:column="38">-&gt;<pos:position pos:line="148" pos:column="43"/></operator><name pos:line="148" pos:column="40">genbuf<pos:position pos:line="148" pos:column="46"/></name></name></expr>;<pos:position pos:line="148" pos:column="47"/></expr_stmt>
                        }<pos:position pos:line="149" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="150" pos:column="22"/></block></else></if>
                }<pos:position pos:line="151" pos:column="18"/></block></then> <else pos:line="151" pos:column="19">else <block pos:line="151" pos:column="24">{
                    <expr_stmt><expr><name pos:line="152" pos:column="21">p3<pos:position pos:line="152" pos:column="23"/></name> <operator pos:line="152" pos:column="24">=<pos:position pos:line="152" pos:column="25"/></operator> <name><name pos:line="152" pos:column="26">trans<pos:position pos:line="152" pos:column="31"/></name><index pos:line="152" pos:column="31">[<expr><operator pos:line="152" pos:column="32">(<pos:position pos:line="152" pos:column="33"/></operator><name pos:line="152" pos:column="33">unsigned<pos:position pos:line="152" pos:column="41"/></name> <name pos:line="152" pos:column="42">char<pos:position pos:line="152" pos:column="46"/></name><operator pos:line="152" pos:column="46">)<pos:position pos:line="152" pos:column="47"/></operator><operator pos:line="152" pos:column="47">*<pos:position pos:line="152" pos:column="48"/></operator><name pos:line="152" pos:column="48">p1<pos:position pos:line="152" pos:column="50"/></name><operator pos:line="152" pos:column="50">-<pos:position pos:line="152" pos:column="51"/></operator><literal type="number" pos:line="152" pos:column="51">1<pos:position pos:line="152" pos:column="52"/></literal></expr>]<pos:position pos:line="152" pos:column="53"/></index></name></expr>;<pos:position pos:line="152" pos:column="54"/></expr_stmt>
                    <while pos:line="153" pos:column="21">while <condition pos:line="153" pos:column="27">(<expr><operator pos:line="153" pos:column="28">(<pos:position pos:line="153" pos:column="29"/></operator><operator pos:line="153" pos:column="29">*<pos:position pos:line="153" pos:column="30"/></operator><name pos:line="153" pos:column="30">p2<pos:position pos:line="153" pos:column="32"/></name><operator pos:line="153" pos:column="32">++<pos:position pos:line="153" pos:column="34"/></operator> <operator pos:line="153" pos:column="35">=<pos:position pos:line="153" pos:column="36"/></operator> <operator pos:line="153" pos:column="37">*<pos:position pos:line="153" pos:column="38"/></operator><name pos:line="153" pos:column="38">p3<pos:position pos:line="153" pos:column="40"/></name><operator pos:line="153" pos:column="40">++<pos:position pos:line="153" pos:column="42"/></operator><operator pos:line="153" pos:column="42">)<pos:position pos:line="153" pos:column="43"/></operator> <operator pos:line="153" pos:column="44">!=<pos:position pos:line="153" pos:column="46"/></operator> <literal type="number" pos:line="153" pos:column="47">0<pos:position pos:line="153" pos:column="48"/></literal></expr>)<pos:position pos:line="153" pos:column="49"/></condition>
                        <block type="pseudo"><if pos:line="154" pos:column="25">if<condition pos:line="154" pos:column="27">(<expr><name pos:line="154" pos:column="28">p2<pos:position pos:line="154" pos:column="30"/></name> <operator pos:line="154" pos:column="31">&gt;=<pos:position pos:line="154" pos:column="36"/></operator> <name><name pos:line="154" pos:column="34">eval<pos:position pos:line="154" pos:column="38"/></name><operator pos:line="154" pos:column="38">-&gt;<pos:position pos:line="154" pos:column="43"/></operator><name pos:line="154" pos:column="40">lcomend<pos:position pos:line="154" pos:column="47"/></name></name></expr>)<pos:position pos:line="154" pos:column="48"/></condition><then pos:line="154" pos:column="48"> <block pos:line="154" pos:column="49">{
                            <expr_stmt><expr><operator pos:line="155" pos:column="29">*<pos:position pos:line="155" pos:column="30"/></operator><name pos:line="155" pos:column="30">p2<pos:position pos:line="155" pos:column="32"/></name> <operator pos:line="155" pos:column="33">=<pos:position pos:line="155" pos:column="34"/></operator> <literal type="char" pos:line="155" pos:column="35">'\\'<pos:position pos:line="155" pos:column="39"/></literal></expr>;<pos:position pos:line="155" pos:column="40"/></expr_stmt>
                            <expr_stmt><expr><name pos:line="156" pos:column="29">rv<pos:position pos:line="156" pos:column="31"/></name> <operator pos:line="156" pos:column="32">=<pos:position pos:line="156" pos:column="33"/></operator> <call><name pos:line="156" pos:column="34">wline<pos:position pos:line="156" pos:column="39"/></name><argument_list pos:line="156" pos:column="39">(<argument><expr><name pos:line="156" pos:column="40">eval<pos:position pos:line="156" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="156" pos:column="46">eval<pos:position pos:line="156" pos:column="50"/></name><operator pos:line="156" pos:column="50">-&gt;<pos:position pos:line="156" pos:column="55"/></operator><name pos:line="156" pos:column="52">genbuf<pos:position pos:line="156" pos:column="58"/></name></name></expr></argument>,
                                       <argument><expr><call><name pos:line="157" pos:column="40">strlen<pos:position pos:line="157" pos:column="46"/></name><argument_list pos:line="157" pos:column="46">(<argument><expr><name><name pos:line="157" pos:column="47">eval<pos:position pos:line="157" pos:column="51"/></name><operator pos:line="157" pos:column="51">-&gt;<pos:position pos:line="157" pos:column="56"/></operator><name pos:line="157" pos:column="53">genbuf<pos:position pos:line="157" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="157" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="157" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="62"/></expr_stmt>
                            <if pos:line="158" pos:column="29">if <condition pos:line="158" pos:column="32">(<expr><name pos:line="158" pos:column="33">rv<pos:position pos:line="158" pos:column="35"/></name> <operator pos:line="158" pos:column="36">!=<pos:position pos:line="158" pos:column="38"/></operator> <name pos:line="158" pos:column="39">APR_SUCCESS<pos:position pos:line="158" pos:column="50"/></name></expr>)<pos:position pos:line="158" pos:column="51"/></condition><then pos:line="158" pos:column="51">
                                <block type="pseudo"><return pos:line="159" pos:column="33">return <expr><name pos:line="159" pos:column="40">rv<pos:position pos:line="159" pos:column="42"/></name></expr>;<pos:position pos:line="159" pos:column="43"/></return></block></then></if>
                            <expr_stmt><expr><name pos:line="160" pos:column="29">p2<pos:position pos:line="160" pos:column="31"/></name> <operator pos:line="160" pos:column="32">=<pos:position pos:line="160" pos:column="33"/></operator> <name><name pos:line="160" pos:column="34">eval<pos:position pos:line="160" pos:column="38"/></name><operator pos:line="160" pos:column="38">-&gt;<pos:position pos:line="160" pos:column="43"/></operator><name pos:line="160" pos:column="40">genbuf<pos:position pos:line="160" pos:column="46"/></name></name></expr>;<pos:position pos:line="160" pos:column="47"/></expr_stmt>
                        }<pos:position pos:line="161" pos:column="26"/></block></then></if></block></while>
                    <expr_stmt><expr><name pos:line="162" pos:column="21">p2<pos:position pos:line="162" pos:column="23"/></name><operator pos:line="162" pos:column="23">--<pos:position pos:line="162" pos:column="25"/></operator></expr>;<pos:position pos:line="162" pos:column="26"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="163" pos:column="21">p1<pos:position pos:line="163" pos:column="23"/></name><operator pos:line="163" pos:column="23">++<pos:position pos:line="163" pos:column="25"/></operator></expr>;<pos:position pos:line="163" pos:column="26"/></expr_stmt>
                }<pos:position pos:line="164" pos:column="18"/></block></else></if></block></while>
            <expr_stmt><expr><operator pos:line="165" pos:column="13">*<pos:position pos:line="165" pos:column="14"/></operator><name pos:line="165" pos:column="14">p2<pos:position pos:line="165" pos:column="16"/></name> <operator pos:line="165" pos:column="17">=<pos:position pos:line="165" pos:column="18"/></operator> <literal type="number" pos:line="165" pos:column="19">0<pos:position pos:line="165" pos:column="20"/></literal></expr>;<pos:position pos:line="165" pos:column="21"/></expr_stmt>
            <expr_stmt><expr><name pos:line="166" pos:column="13">rv<pos:position pos:line="166" pos:column="15"/></name> <operator pos:line="166" pos:column="16">=<pos:position pos:line="166" pos:column="17"/></operator> <call><name pos:line="166" pos:column="18">wline<pos:position pos:line="166" pos:column="23"/></name><argument_list pos:line="166" pos:column="23">(<argument><expr><name pos:line="166" pos:column="24">eval<pos:position pos:line="166" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="166" pos:column="30">eval<pos:position pos:line="166" pos:column="34"/></name><operator pos:line="166" pos:column="34">-&gt;<pos:position pos:line="166" pos:column="39"/></operator><name pos:line="166" pos:column="36">genbuf<pos:position pos:line="166" pos:column="42"/></name></name></expr></argument>, <argument><expr><call><name pos:line="166" pos:column="44">strlen<pos:position pos:line="166" pos:column="50"/></name><argument_list pos:line="166" pos:column="50">(<argument><expr><name><name pos:line="166" pos:column="51">eval<pos:position pos:line="166" pos:column="55"/></name><operator pos:line="166" pos:column="55">-&gt;<pos:position pos:line="166" pos:column="60"/></operator><name pos:line="166" pos:column="57">genbuf<pos:position pos:line="166" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="166" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="166" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="66"/></expr_stmt>
            <break pos:line="167" pos:column="13">break;<pos:position pos:line="167" pos:column="19"/></break>

        <case pos:line="169" pos:column="9">case <expr><name pos:line="169" pos:column="14">NCOM<pos:position pos:line="169" pos:column="18"/></name></expr>:<pos:position pos:line="169" pos:column="19"/></case>
            <if pos:line="170" pos:column="13">if<condition pos:line="170" pos:column="15">(<expr><operator pos:line="170" pos:column="16">!<pos:position pos:line="170" pos:column="17"/></operator><name><name pos:line="170" pos:column="17">eval<pos:position pos:line="170" pos:column="21"/></name><operator pos:line="170" pos:column="21">-&gt;<pos:position pos:line="170" pos:column="26"/></operator><name pos:line="170" pos:column="23">commands<pos:position pos:line="170" pos:column="31"/></name><operator pos:line="170" pos:column="31">-&gt;<pos:position pos:line="170" pos:column="36"/></operator><name pos:line="170" pos:column="33">nflag<pos:position pos:line="170" pos:column="38"/></name></name></expr>)<pos:position pos:line="170" pos:column="39"/></condition><then pos:line="170" pos:column="39"> <block pos:line="170" pos:column="40">{
                <expr_stmt><expr><name pos:line="171" pos:column="17">rv<pos:position pos:line="171" pos:column="19"/></name> <operator pos:line="171" pos:column="20">=<pos:position pos:line="171" pos:column="21"/></operator> <call><name pos:line="171" pos:column="22">wline<pos:position pos:line="171" pos:column="27"/></name><argument_list pos:line="171" pos:column="27">(<argument><expr><name pos:line="171" pos:column="28">eval<pos:position pos:line="171" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="171" pos:column="34">eval<pos:position pos:line="171" pos:column="38"/></name><operator pos:line="171" pos:column="38">-&gt;<pos:position pos:line="171" pos:column="43"/></operator><name pos:line="171" pos:column="40">linebuf<pos:position pos:line="171" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="171" pos:column="49">eval<pos:position pos:line="171" pos:column="53"/></name><operator pos:line="171" pos:column="53">-&gt;<pos:position pos:line="171" pos:column="58"/></operator><name pos:line="171" pos:column="55">lspend<pos:position pos:line="171" pos:column="61"/></name></name> <operator pos:line="171" pos:column="62">-<pos:position pos:line="171" pos:column="63"/></operator> <name><name pos:line="171" pos:column="64">eval<pos:position pos:line="171" pos:column="68"/></name><operator pos:line="171" pos:column="68">-&gt;<pos:position pos:line="171" pos:column="73"/></operator><name pos:line="171" pos:column="70">linebuf<pos:position pos:line="171" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="171" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="79"/></expr_stmt>
                <if pos:line="172" pos:column="17">if <condition pos:line="172" pos:column="20">(<expr><name pos:line="172" pos:column="21">rv<pos:position pos:line="172" pos:column="23"/></name> <operator pos:line="172" pos:column="24">!=<pos:position pos:line="172" pos:column="26"/></operator> <name pos:line="172" pos:column="27">APR_SUCCESS<pos:position pos:line="172" pos:column="38"/></name></expr>)<pos:position pos:line="172" pos:column="39"/></condition><then pos:line="172" pos:column="39">
                    <block type="pseudo"><return pos:line="173" pos:column="21">return <expr><name pos:line="173" pos:column="28">rv<pos:position pos:line="173" pos:column="30"/></name></expr>;<pos:position pos:line="173" pos:column="31"/></return></block></then></if>
            }<pos:position pos:line="174" pos:column="14"/></block></then></if>

            <if pos:line="176" pos:column="13">if<condition pos:line="176" pos:column="15">(<expr><name><name pos:line="176" pos:column="16">eval<pos:position pos:line="176" pos:column="20"/></name><operator pos:line="176" pos:column="20">-&gt;<pos:position pos:line="176" pos:column="25"/></operator><name pos:line="176" pos:column="22">aptr<pos:position pos:line="176" pos:column="26"/></name></name> <operator pos:line="176" pos:column="27">&gt;<pos:position pos:line="176" pos:column="31"/></operator> <name><name pos:line="176" pos:column="29">eval<pos:position pos:line="176" pos:column="33"/></name><operator pos:line="176" pos:column="33">-&gt;<pos:position pos:line="176" pos:column="38"/></operator><name pos:line="176" pos:column="35">abuf<pos:position pos:line="176" pos:column="39"/></name></name></expr>)<pos:position pos:line="176" pos:column="40"/></condition><then pos:line="176" pos:column="40"> <block pos:line="176" pos:column="41">{
                <expr_stmt><expr><name pos:line="177" pos:column="17">rv<pos:position pos:line="177" pos:column="19"/></name> <operator pos:line="177" pos:column="20">=<pos:position pos:line="177" pos:column="21"/></operator> <call><name pos:line="177" pos:column="22">arout<pos:position pos:line="177" pos:column="27"/></name><argument_list pos:line="177" pos:column="27">(<argument><expr><name pos:line="177" pos:column="28">eval<pos:position pos:line="177" pos:column="32"/></name></expr></argument>)<pos:position pos:line="177" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="34"/></expr_stmt>
                <if pos:line="178" pos:column="17">if <condition pos:line="178" pos:column="20">(<expr><name pos:line="178" pos:column="21">rv<pos:position pos:line="178" pos:column="23"/></name> <operator pos:line="178" pos:column="24">!=<pos:position pos:line="178" pos:column="26"/></operator> <name pos:line="178" pos:column="27">APR_SUCCESS<pos:position pos:line="178" pos:column="38"/></name></expr>)<pos:position pos:line="178" pos:column="39"/></condition><then pos:line="178" pos:column="39">
                    <block type="pseudo"><return pos:line="179" pos:column="21">return <expr><name pos:line="179" pos:column="28">rv<pos:position pos:line="179" pos:column="30"/></name></expr>;<pos:position pos:line="179" pos:column="31"/></return></block></then></if>
            }<pos:position pos:line="180" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="181" pos:column="13">eval<pos:position pos:line="181" pos:column="17"/></name><operator pos:line="181" pos:column="17">-&gt;<pos:position pos:line="181" pos:column="22"/></operator><name pos:line="181" pos:column="19">lspend<pos:position pos:line="181" pos:column="25"/></name></name> <operator pos:line="181" pos:column="26">=<pos:position pos:line="181" pos:column="27"/></operator> <name><name pos:line="181" pos:column="28">eval<pos:position pos:line="181" pos:column="32"/></name><operator pos:line="181" pos:column="32">-&gt;<pos:position pos:line="181" pos:column="37"/></operator><name pos:line="181" pos:column="34">linebuf<pos:position pos:line="181" pos:column="41"/></name></name></expr>;<pos:position pos:line="181" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="182" pos:column="13">eval<pos:position pos:line="182" pos:column="17"/></name><operator pos:line="182" pos:column="17">-&gt;<pos:position pos:line="182" pos:column="22"/></operator><name pos:line="182" pos:column="19">pending<pos:position pos:line="182" pos:column="26"/></name></name> <operator pos:line="182" pos:column="27">=<pos:position pos:line="182" pos:column="28"/></operator> <name><name pos:line="182" pos:column="29">ipc<pos:position pos:line="182" pos:column="32"/></name><operator pos:line="182" pos:column="32">-&gt;<pos:position pos:line="182" pos:column="37"/></operator><name pos:line="182" pos:column="34">next<pos:position pos:line="182" pos:column="38"/></name></name></expr>;<pos:position pos:line="182" pos:column="39"/></expr_stmt>

            <break pos:line="184" pos:column="13">break;<pos:position pos:line="184" pos:column="19"/></break>
        <case pos:line="185" pos:column="9">case <expr><name pos:line="185" pos:column="14">CNCOM<pos:position pos:line="185" pos:column="19"/></name></expr>:<pos:position pos:line="185" pos:column="20"/></case>
            <if pos:line="186" pos:column="13">if<condition pos:line="186" pos:column="15">(<expr><name><name pos:line="186" pos:column="16">eval<pos:position pos:line="186" pos:column="20"/></name><operator pos:line="186" pos:column="20">-&gt;<pos:position pos:line="186" pos:column="25"/></operator><name pos:line="186" pos:column="22">aptr<pos:position pos:line="186" pos:column="26"/></name></name> <operator pos:line="186" pos:column="27">&gt;<pos:position pos:line="186" pos:column="31"/></operator> <name><name pos:line="186" pos:column="29">eval<pos:position pos:line="186" pos:column="33"/></name><operator pos:line="186" pos:column="33">-&gt;<pos:position pos:line="186" pos:column="38"/></operator><name pos:line="186" pos:column="35">abuf<pos:position pos:line="186" pos:column="39"/></name></name></expr>)<pos:position pos:line="186" pos:column="40"/></condition><then pos:line="186" pos:column="40"> <block pos:line="186" pos:column="41">{
                <expr_stmt><expr><name pos:line="187" pos:column="17">rv<pos:position pos:line="187" pos:column="19"/></name> <operator pos:line="187" pos:column="20">=<pos:position pos:line="187" pos:column="21"/></operator> <call><name pos:line="187" pos:column="22">arout<pos:position pos:line="187" pos:column="27"/></name><argument_list pos:line="187" pos:column="27">(<argument><expr><name pos:line="187" pos:column="28">eval<pos:position pos:line="187" pos:column="32"/></name></expr></argument>)<pos:position pos:line="187" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="34"/></expr_stmt>
                <if pos:line="188" pos:column="17">if <condition pos:line="188" pos:column="20">(<expr><name pos:line="188" pos:column="21">rv<pos:position pos:line="188" pos:column="23"/></name> <operator pos:line="188" pos:column="24">!=<pos:position pos:line="188" pos:column="26"/></operator> <name pos:line="188" pos:column="27">APR_SUCCESS<pos:position pos:line="188" pos:column="38"/></name></expr>)<pos:position pos:line="188" pos:column="39"/></condition><then pos:line="188" pos:column="39">
                    <block type="pseudo"><return pos:line="189" pos:column="21">return <expr><name pos:line="189" pos:column="28">rv<pos:position pos:line="189" pos:column="30"/></name></expr>;<pos:position pos:line="189" pos:column="31"/></return></block></then></if>
            }<pos:position pos:line="190" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="191" pos:column="13">append_to_linebuf<pos:position pos:line="191" pos:column="30"/></name><argument_list pos:line="191" pos:column="30">(<argument><expr><name pos:line="191" pos:column="31">eval<pos:position pos:line="191" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="37">"\n"<pos:position pos:line="191" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="191" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="192" pos:column="13">eval<pos:position pos:line="192" pos:column="17"/></name><operator pos:line="192" pos:column="17">-&gt;<pos:position pos:line="192" pos:column="22"/></operator><name pos:line="192" pos:column="19">pending<pos:position pos:line="192" pos:column="26"/></name></name> <operator pos:line="192" pos:column="27">=<pos:position pos:line="192" pos:column="28"/></operator> <name><name pos:line="192" pos:column="29">ipc<pos:position pos:line="192" pos:column="32"/></name><operator pos:line="192" pos:column="32">-&gt;<pos:position pos:line="192" pos:column="37"/></operator><name pos:line="192" pos:column="34">next<pos:position pos:line="192" pos:column="38"/></name></name></expr>;<pos:position pos:line="192" pos:column="39"/></expr_stmt>
            <break pos:line="193" pos:column="13">break;<pos:position pos:line="193" pos:column="19"/></break>

        <case pos:line="195" pos:column="9">case <expr><name pos:line="195" pos:column="14">PCOM<pos:position pos:line="195" pos:column="18"/></name></expr>:<pos:position pos:line="195" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="196" pos:column="13">rv<pos:position pos:line="196" pos:column="15"/></name> <operator pos:line="196" pos:column="16">=<pos:position pos:line="196" pos:column="17"/></operator> <call><name pos:line="196" pos:column="18">wline<pos:position pos:line="196" pos:column="23"/></name><argument_list pos:line="196" pos:column="23">(<argument><expr><name pos:line="196" pos:column="24">eval<pos:position pos:line="196" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="196" pos:column="30">eval<pos:position pos:line="196" pos:column="34"/></name><operator pos:line="196" pos:column="34">-&gt;<pos:position pos:line="196" pos:column="39"/></operator><name pos:line="196" pos:column="36">linebuf<pos:position pos:line="196" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="196" pos:column="45">eval<pos:position pos:line="196" pos:column="49"/></name><operator pos:line="196" pos:column="49">-&gt;<pos:position pos:line="196" pos:column="54"/></operator><name pos:line="196" pos:column="51">lspend<pos:position pos:line="196" pos:column="57"/></name></name> <operator pos:line="196" pos:column="58">-<pos:position pos:line="196" pos:column="59"/></operator> <name><name pos:line="196" pos:column="60">eval<pos:position pos:line="196" pos:column="64"/></name><operator pos:line="196" pos:column="64">-&gt;<pos:position pos:line="196" pos:column="69"/></operator><name pos:line="196" pos:column="66">linebuf<pos:position pos:line="196" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="196" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="75"/></expr_stmt>
            <break pos:line="197" pos:column="13">break;<pos:position pos:line="197" pos:column="19"/></break>
        <case pos:line="198" pos:column="9">case <expr><name pos:line="198" pos:column="14">CPCOM<pos:position pos:line="198" pos:column="19"/></name></expr>:<pos:position pos:line="198" pos:column="20"/></case>
            <for pos:line="199" pos:column="13">for <control pos:line="199" pos:column="17">(<init><expr><name pos:line="199" pos:column="18">p1<pos:position pos:line="199" pos:column="20"/></name> <operator pos:line="199" pos:column="21">=<pos:position pos:line="199" pos:column="22"/></operator> <name><name pos:line="199" pos:column="23">eval<pos:position pos:line="199" pos:column="27"/></name><operator pos:line="199" pos:column="27">-&gt;<pos:position pos:line="199" pos:column="32"/></operator><name pos:line="199" pos:column="29">linebuf<pos:position pos:line="199" pos:column="36"/></name></name></expr>;<pos:position pos:line="199" pos:column="37"/></init> <condition><expr><operator pos:line="199" pos:column="38">*<pos:position pos:line="199" pos:column="39"/></operator><name pos:line="199" pos:column="39">p1<pos:position pos:line="199" pos:column="41"/></name> <operator pos:line="199" pos:column="42">!=<pos:position pos:line="199" pos:column="44"/></operator> <literal type="char" pos:line="199" pos:column="45">'\n'<pos:position pos:line="199" pos:column="49"/></literal> <operator pos:line="199" pos:column="50">&amp;&amp;<pos:position pos:line="199" pos:column="60"/></operator> <operator pos:line="199" pos:column="53">*<pos:position pos:line="199" pos:column="54"/></operator><name pos:line="199" pos:column="54">p1<pos:position pos:line="199" pos:column="56"/></name> <operator pos:line="199" pos:column="57">!=<pos:position pos:line="199" pos:column="59"/></operator> <literal type="char" pos:line="199" pos:column="60">'\0'<pos:position pos:line="199" pos:column="64"/></literal></expr>;<pos:position pos:line="199" pos:column="65"/></condition> <incr><expr><name pos:line="199" pos:column="66">p1<pos:position pos:line="199" pos:column="68"/></name><operator pos:line="199" pos:column="68">++<pos:position pos:line="199" pos:column="70"/></operator></expr></incr>)<pos:position pos:line="199" pos:column="71"/></control><block type="pseudo"><empty_stmt pos:line="199" pos:column="71">;<pos:position pos:line="199" pos:column="72"/></empty_stmt></block></for>
            <expr_stmt><expr><name pos:line="200" pos:column="13">rv<pos:position pos:line="200" pos:column="15"/></name> <operator pos:line="200" pos:column="16">=<pos:position pos:line="200" pos:column="17"/></operator> <call><name pos:line="200" pos:column="18">wline<pos:position pos:line="200" pos:column="23"/></name><argument_list pos:line="200" pos:column="23">(<argument><expr><name pos:line="200" pos:column="24">eval<pos:position pos:line="200" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="200" pos:column="30">eval<pos:position pos:line="200" pos:column="34"/></name><operator pos:line="200" pos:column="34">-&gt;<pos:position pos:line="200" pos:column="39"/></operator><name pos:line="200" pos:column="36">linebuf<pos:position pos:line="200" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="200" pos:column="45">p1<pos:position pos:line="200" pos:column="47"/></name> <operator pos:line="200" pos:column="48">-<pos:position pos:line="200" pos:column="49"/></operator> <name><name pos:line="200" pos:column="50">eval<pos:position pos:line="200" pos:column="54"/></name><operator pos:line="200" pos:column="54">-&gt;<pos:position pos:line="200" pos:column="59"/></operator><name pos:line="200" pos:column="56">linebuf<pos:position pos:line="200" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="200" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="65"/></expr_stmt>
            <break pos:line="201" pos:column="13">break;<pos:position pos:line="201" pos:column="19"/></break>

        <case pos:line="203" pos:column="9">case <expr><name pos:line="203" pos:column="14">QCOM<pos:position pos:line="203" pos:column="18"/></name></expr>:<pos:position pos:line="203" pos:column="19"/></case>
            <if pos:line="204" pos:column="13">if <condition pos:line="204" pos:column="16">(<expr><operator pos:line="204" pos:column="17">!<pos:position pos:line="204" pos:column="18"/></operator><name><name pos:line="204" pos:column="18">eval<pos:position pos:line="204" pos:column="22"/></name><operator pos:line="204" pos:column="22">-&gt;<pos:position pos:line="204" pos:column="27"/></operator><name pos:line="204" pos:column="24">commands<pos:position pos:line="204" pos:column="32"/></name><operator pos:line="204" pos:column="32">-&gt;<pos:position pos:line="204" pos:column="37"/></operator><name pos:line="204" pos:column="34">nflag<pos:position pos:line="204" pos:column="39"/></name></name></expr>)<pos:position pos:line="204" pos:column="40"/></condition><then pos:line="204" pos:column="40"> <block pos:line="204" pos:column="41">{
                <expr_stmt><expr><name pos:line="205" pos:column="17">rv<pos:position pos:line="205" pos:column="19"/></name> <operator pos:line="205" pos:column="20">=<pos:position pos:line="205" pos:column="21"/></operator> <call><name pos:line="205" pos:column="22">wline<pos:position pos:line="205" pos:column="27"/></name><argument_list pos:line="205" pos:column="27">(<argument><expr><name pos:line="205" pos:column="28">eval<pos:position pos:line="205" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="205" pos:column="34">eval<pos:position pos:line="205" pos:column="38"/></name><operator pos:line="205" pos:column="38">-&gt;<pos:position pos:line="205" pos:column="43"/></operator><name pos:line="205" pos:column="40">linebuf<pos:position pos:line="205" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="205" pos:column="49">eval<pos:position pos:line="205" pos:column="53"/></name><operator pos:line="205" pos:column="53">-&gt;<pos:position pos:line="205" pos:column="58"/></operator><name pos:line="205" pos:column="55">lspend<pos:position pos:line="205" pos:column="61"/></name></name> <operator pos:line="205" pos:column="62">-<pos:position pos:line="205" pos:column="63"/></operator> <name><name pos:line="205" pos:column="64">eval<pos:position pos:line="205" pos:column="68"/></name><operator pos:line="205" pos:column="68">-&gt;<pos:position pos:line="205" pos:column="73"/></operator><name pos:line="205" pos:column="70">linebuf<pos:position pos:line="205" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="205" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="79"/></expr_stmt>
                <if pos:line="206" pos:column="17">if <condition pos:line="206" pos:column="20">(<expr><name pos:line="206" pos:column="21">rv<pos:position pos:line="206" pos:column="23"/></name> <operator pos:line="206" pos:column="24">!=<pos:position pos:line="206" pos:column="26"/></operator> <name pos:line="206" pos:column="27">APR_SUCCESS<pos:position pos:line="206" pos:column="38"/></name></expr>)<pos:position pos:line="206" pos:column="39"/></condition><then pos:line="206" pos:column="39">
                    <block type="pseudo"><break pos:line="207" pos:column="21">break;<pos:position pos:line="207" pos:column="27"/></break></block></then></if>
            }<pos:position pos:line="208" pos:column="14"/></block></then></if>

            <if pos:line="210" pos:column="13">if<condition pos:line="210" pos:column="15">(<expr><name><name pos:line="210" pos:column="16">eval<pos:position pos:line="210" pos:column="20"/></name><operator pos:line="210" pos:column="20">-&gt;<pos:position pos:line="210" pos:column="25"/></operator><name pos:line="210" pos:column="22">aptr<pos:position pos:line="210" pos:column="26"/></name></name> <operator pos:line="210" pos:column="27">&gt;<pos:position pos:line="210" pos:column="31"/></operator> <name><name pos:line="210" pos:column="29">eval<pos:position pos:line="210" pos:column="33"/></name><operator pos:line="210" pos:column="33">-&gt;<pos:position pos:line="210" pos:column="38"/></operator><name pos:line="210" pos:column="35">abuf<pos:position pos:line="210" pos:column="39"/></name></name></expr>)<pos:position pos:line="210" pos:column="40"/></condition><then pos:line="210" pos:column="40"> <block pos:line="210" pos:column="41">{
                <expr_stmt><expr><name pos:line="211" pos:column="17">rv<pos:position pos:line="211" pos:column="19"/></name> <operator pos:line="211" pos:column="20">=<pos:position pos:line="211" pos:column="21"/></operator> <call><name pos:line="211" pos:column="22">arout<pos:position pos:line="211" pos:column="27"/></name><argument_list pos:line="211" pos:column="27">(<argument><expr><name pos:line="211" pos:column="28">eval<pos:position pos:line="211" pos:column="32"/></name></expr></argument>)<pos:position pos:line="211" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="34"/></expr_stmt>
                <if pos:line="212" pos:column="17">if <condition pos:line="212" pos:column="20">(<expr><name pos:line="212" pos:column="21">rv<pos:position pos:line="212" pos:column="23"/></name> <operator pos:line="212" pos:column="24">!=<pos:position pos:line="212" pos:column="26"/></operator> <name pos:line="212" pos:column="27">APR_SUCCESS<pos:position pos:line="212" pos:column="38"/></name></expr>)<pos:position pos:line="212" pos:column="39"/></condition><then pos:line="212" pos:column="39">
                    <block type="pseudo"><return pos:line="213" pos:column="21">return <expr><name pos:line="213" pos:column="28">rv<pos:position pos:line="213" pos:column="30"/></name></expr>;<pos:position pos:line="213" pos:column="31"/></return></block></then></if>
            }<pos:position pos:line="214" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name><name pos:line="216" pos:column="13">eval<pos:position pos:line="216" pos:column="17"/></name><operator pos:line="216" pos:column="17">-&gt;<pos:position pos:line="216" pos:column="22"/></operator><name pos:line="216" pos:column="19">quitflag<pos:position pos:line="216" pos:column="27"/></name></name> <operator pos:line="216" pos:column="28">=<pos:position pos:line="216" pos:column="29"/></operator> <literal type="number" pos:line="216" pos:column="30">1<pos:position pos:line="216" pos:column="31"/></literal></expr>;<pos:position pos:line="216" pos:column="32"/></expr_stmt>
            <break pos:line="217" pos:column="13">break;<pos:position pos:line="217" pos:column="19"/></break>
        <case pos:line="218" pos:column="9">case <expr><name pos:line="218" pos:column="14">RCOM<pos:position pos:line="218" pos:column="18"/></name></expr>:<pos:position pos:line="218" pos:column="19"/></case>
            <if pos:line="219" pos:column="13">if<condition pos:line="219" pos:column="15">(<expr><name><name pos:line="219" pos:column="16">eval<pos:position pos:line="219" pos:column="20"/></name><operator pos:line="219" pos:column="20">-&gt;<pos:position pos:line="219" pos:column="25"/></operator><name pos:line="219" pos:column="22">aptr<pos:position pos:line="219" pos:column="26"/></name></name> <operator pos:line="219" pos:column="27">&gt;=<pos:position pos:line="219" pos:column="32"/></operator> <operator pos:line="219" pos:column="30">&amp;<pos:position pos:line="219" pos:column="35"/></operator><name><name pos:line="219" pos:column="31">eval<pos:position pos:line="219" pos:column="35"/></name><operator pos:line="219" pos:column="35">-&gt;<pos:position pos:line="219" pos:column="40"/></operator><name pos:line="219" pos:column="37">abuf<pos:position pos:line="219" pos:column="41"/></name><index pos:line="219" pos:column="41">[<expr><name pos:line="219" pos:column="42">SED_ABUFSIZE<pos:position pos:line="219" pos:column="54"/></name></expr>]<pos:position pos:line="219" pos:column="55"/></index></name></expr>)<pos:position pos:line="219" pos:column="56"/></condition><then pos:line="219" pos:column="56"> <block pos:line="219" pos:column="57">{
                <expr_stmt><expr><call><name pos:line="220" pos:column="17">eval_errf<pos:position pos:line="220" pos:column="26"/></name><argument_list pos:line="220" pos:column="26">(<argument><expr><name pos:line="220" pos:column="27">eval<pos:position pos:line="220" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="220" pos:column="33">SEDERR_TMRMES<pos:position pos:line="220" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="220" pos:column="48">eval<pos:position pos:line="220" pos:column="52"/></name><operator pos:line="220" pos:column="52">-&gt;<pos:position pos:line="220" pos:column="57"/></operator><name pos:line="220" pos:column="54">lnum<pos:position pos:line="220" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="220" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="60"/></expr_stmt>
            }<pos:position pos:line="221" pos:column="14"/></block></then> <else pos:line="221" pos:column="15">else <block pos:line="221" pos:column="20">{
                <expr_stmt><expr><operator pos:line="222" pos:column="17">*<pos:position pos:line="222" pos:column="18"/></operator><name><name pos:line="222" pos:column="18">eval<pos:position pos:line="222" pos:column="22"/></name><operator pos:line="222" pos:column="22">-&gt;<pos:position pos:line="222" pos:column="27"/></operator><name pos:line="222" pos:column="24">aptr<pos:position pos:line="222" pos:column="28"/></name></name><operator pos:line="222" pos:column="28">++<pos:position pos:line="222" pos:column="30"/></operator> <operator pos:line="222" pos:column="31">=<pos:position pos:line="222" pos:column="32"/></operator> <name pos:line="222" pos:column="33">ipc<pos:position pos:line="222" pos:column="36"/></name></expr>;<pos:position pos:line="222" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="223" pos:column="17">*<pos:position pos:line="223" pos:column="18"/></operator><name><name pos:line="223" pos:column="18">eval<pos:position pos:line="223" pos:column="22"/></name><operator pos:line="223" pos:column="22">-&gt;<pos:position pos:line="223" pos:column="27"/></operator><name pos:line="223" pos:column="24">aptr<pos:position pos:line="223" pos:column="28"/></name></name> <operator pos:line="223" pos:column="29">=<pos:position pos:line="223" pos:column="30"/></operator> <name pos:line="223" pos:column="31">NULL<pos:position pos:line="223" pos:column="35"/></name></expr>;<pos:position pos:line="223" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="224" pos:column="14"/></block></else></if>
            <break pos:line="225" pos:column="13">break;<pos:position pos:line="225" pos:column="19"/></break>

        <case pos:line="227" pos:column="9">case <expr><name pos:line="227" pos:column="14">SCOM<pos:position pos:line="227" pos:column="18"/></name></expr>:<pos:position pos:line="227" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="228" pos:column="13">i<pos:position pos:line="228" pos:column="14"/></name> <operator pos:line="228" pos:column="15">=<pos:position pos:line="228" pos:column="16"/></operator> <call><name pos:line="228" pos:column="17">substitute<pos:position pos:line="228" pos:column="27"/></name><argument_list pos:line="228" pos:column="27">(<argument><expr><name pos:line="228" pos:column="28">eval<pos:position pos:line="228" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="228" pos:column="34">ipc<pos:position pos:line="228" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="228" pos:column="39">step_vars<pos:position pos:line="228" pos:column="48"/></name></expr></argument>)<pos:position pos:line="228" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="50"/></expr_stmt>
            <if pos:line="229" pos:column="13">if <condition pos:line="229" pos:column="16">(<expr><name pos:line="229" pos:column="17">i<pos:position pos:line="229" pos:column="18"/></name> <operator pos:line="229" pos:column="19">==<pos:position pos:line="229" pos:column="21"/></operator> <operator pos:line="229" pos:column="22">-<pos:position pos:line="229" pos:column="23"/></operator><literal type="number" pos:line="229" pos:column="23">1<pos:position pos:line="229" pos:column="24"/></literal></expr>)<pos:position pos:line="229" pos:column="25"/></condition><then pos:line="229" pos:column="25"> <block pos:line="229" pos:column="26">{
                <return pos:line="230" pos:column="17">return <expr><name pos:line="230" pos:column="24">APR_EGENERAL<pos:position pos:line="230" pos:column="36"/></name></expr>;<pos:position pos:line="230" pos:column="37"/></return>
            }<pos:position pos:line="231" pos:column="14"/></block></then></if>
            <if pos:line="232" pos:column="13">if<condition pos:line="232" pos:column="15">(<expr><name><name pos:line="232" pos:column="16">ipc<pos:position pos:line="232" pos:column="19"/></name><operator pos:line="232" pos:column="19">-&gt;<pos:position pos:line="232" pos:column="24"/></operator><name pos:line="232" pos:column="21">pfl<pos:position pos:line="232" pos:column="24"/></name></name> <operator pos:line="232" pos:column="25">&amp;&amp;<pos:position pos:line="232" pos:column="35"/></operator> <name><name pos:line="232" pos:column="28">eval<pos:position pos:line="232" pos:column="32"/></name><operator pos:line="232" pos:column="32">-&gt;<pos:position pos:line="232" pos:column="37"/></operator><name pos:line="232" pos:column="34">commands<pos:position pos:line="232" pos:column="42"/></name><operator pos:line="232" pos:column="42">-&gt;<pos:position pos:line="232" pos:column="47"/></operator><name pos:line="232" pos:column="44">nflag<pos:position pos:line="232" pos:column="49"/></name></name> <operator pos:line="232" pos:column="50">&amp;&amp;<pos:position pos:line="232" pos:column="60"/></operator> <name pos:line="232" pos:column="53">i<pos:position pos:line="232" pos:column="54"/></name></expr>)<pos:position pos:line="232" pos:column="55"/></condition><then pos:line="232" pos:column="55"> <block pos:line="232" pos:column="56">{
                <if pos:line="233" pos:column="17">if<condition pos:line="233" pos:column="19">(<expr><name><name pos:line="233" pos:column="20">ipc<pos:position pos:line="233" pos:column="23"/></name><operator pos:line="233" pos:column="23">-&gt;<pos:position pos:line="233" pos:column="28"/></operator><name pos:line="233" pos:column="25">pfl<pos:position pos:line="233" pos:column="28"/></name></name> <operator pos:line="233" pos:column="29">==<pos:position pos:line="233" pos:column="31"/></operator> <literal type="number" pos:line="233" pos:column="32">1<pos:position pos:line="233" pos:column="33"/></literal></expr>)<pos:position pos:line="233" pos:column="34"/></condition><then pos:line="233" pos:column="34"> <block pos:line="233" pos:column="35">{
                    <expr_stmt><expr><name pos:line="234" pos:column="21">rv<pos:position pos:line="234" pos:column="23"/></name> <operator pos:line="234" pos:column="24">=<pos:position pos:line="234" pos:column="25"/></operator> <call><name pos:line="234" pos:column="26">wline<pos:position pos:line="234" pos:column="31"/></name><argument_list pos:line="234" pos:column="31">(<argument><expr><name pos:line="234" pos:column="32">eval<pos:position pos:line="234" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="234" pos:column="38">eval<pos:position pos:line="234" pos:column="42"/></name><operator pos:line="234" pos:column="42">-&gt;<pos:position pos:line="234" pos:column="47"/></operator><name pos:line="234" pos:column="44">linebuf<pos:position pos:line="234" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="234" pos:column="53">eval<pos:position pos:line="234" pos:column="57"/></name><operator pos:line="234" pos:column="57">-&gt;<pos:position pos:line="234" pos:column="62"/></operator><name pos:line="234" pos:column="59">lspend<pos:position pos:line="234" pos:column="65"/></name></name> <operator pos:line="234" pos:column="66">-<pos:position pos:line="234" pos:column="67"/></operator>
                               <name><name pos:line="235" pos:column="32">eval<pos:position pos:line="235" pos:column="36"/></name><operator pos:line="235" pos:column="36">-&gt;<pos:position pos:line="235" pos:column="41"/></operator><name pos:line="235" pos:column="38">linebuf<pos:position pos:line="235" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="235" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="47"/></expr_stmt>
                    <if pos:line="236" pos:column="21">if <condition pos:line="236" pos:column="24">(<expr><name pos:line="236" pos:column="25">rv<pos:position pos:line="236" pos:column="27"/></name> <operator pos:line="236" pos:column="28">!=<pos:position pos:line="236" pos:column="30"/></operator> <name pos:line="236" pos:column="31">APR_SUCCESS<pos:position pos:line="236" pos:column="42"/></name></expr>)<pos:position pos:line="236" pos:column="43"/></condition><then pos:line="236" pos:column="43">
                        <block type="pseudo"><return pos:line="237" pos:column="25">return <expr><name pos:line="237" pos:column="32">rv<pos:position pos:line="237" pos:column="34"/></name></expr>;<pos:position pos:line="237" pos:column="35"/></return></block></then></if>
                }<pos:position pos:line="238" pos:column="18"/></block></then> <else pos:line="238" pos:column="19">else <block pos:line="238" pos:column="24">{
                    <for pos:line="239" pos:column="21">for <control pos:line="239" pos:column="25">(<init><expr><name pos:line="239" pos:column="26">p1<pos:position pos:line="239" pos:column="28"/></name> <operator pos:line="239" pos:column="29">=<pos:position pos:line="239" pos:column="30"/></operator> <name><name pos:line="239" pos:column="31">eval<pos:position pos:line="239" pos:column="35"/></name><operator pos:line="239" pos:column="35">-&gt;<pos:position pos:line="239" pos:column="40"/></operator><name pos:line="239" pos:column="37">linebuf<pos:position pos:line="239" pos:column="44"/></name></name></expr>;<pos:position pos:line="239" pos:column="45"/></init> <condition><expr><operator pos:line="239" pos:column="46">*<pos:position pos:line="239" pos:column="47"/></operator><name pos:line="239" pos:column="47">p1<pos:position pos:line="239" pos:column="49"/></name> <operator pos:line="239" pos:column="50">!=<pos:position pos:line="239" pos:column="52"/></operator> <literal type="char" pos:line="239" pos:column="53">'\n'<pos:position pos:line="239" pos:column="57"/></literal> <operator pos:line="239" pos:column="58">&amp;&amp;<pos:position pos:line="239" pos:column="68"/></operator> <operator pos:line="239" pos:column="61">*<pos:position pos:line="239" pos:column="62"/></operator><name pos:line="239" pos:column="62">p1<pos:position pos:line="239" pos:column="64"/></name> <operator pos:line="239" pos:column="65">!=<pos:position pos:line="239" pos:column="67"/></operator> <literal type="char" pos:line="239" pos:column="68">'\0'<pos:position pos:line="239" pos:column="72"/></literal></expr>;<pos:position pos:line="239" pos:column="73"/></condition> <incr><expr><name pos:line="239" pos:column="74">p1<pos:position pos:line="239" pos:column="76"/></name><operator pos:line="239" pos:column="76">++<pos:position pos:line="239" pos:column="78"/></operator></expr></incr>)<pos:position pos:line="239" pos:column="79"/></control><block type="pseudo"><empty_stmt pos:line="239" pos:column="79">;<pos:position pos:line="239" pos:column="80"/></empty_stmt></block></for>
                    <expr_stmt><expr><name pos:line="240" pos:column="21">rv<pos:position pos:line="240" pos:column="23"/></name> <operator pos:line="240" pos:column="24">=<pos:position pos:line="240" pos:column="25"/></operator> <call><name pos:line="240" pos:column="26">wline<pos:position pos:line="240" pos:column="31"/></name><argument_list pos:line="240" pos:column="31">(<argument><expr><name pos:line="240" pos:column="32">eval<pos:position pos:line="240" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="240" pos:column="38">eval<pos:position pos:line="240" pos:column="42"/></name><operator pos:line="240" pos:column="42">-&gt;<pos:position pos:line="240" pos:column="47"/></operator><name pos:line="240" pos:column="44">linebuf<pos:position pos:line="240" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="240" pos:column="53">p1<pos:position pos:line="240" pos:column="55"/></name> <operator pos:line="240" pos:column="56">-<pos:position pos:line="240" pos:column="57"/></operator> <name><name pos:line="240" pos:column="58">eval<pos:position pos:line="240" pos:column="62"/></name><operator pos:line="240" pos:column="62">-&gt;<pos:position pos:line="240" pos:column="67"/></operator><name pos:line="240" pos:column="64">linebuf<pos:position pos:line="240" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="240" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="73"/></expr_stmt>
                    <if pos:line="241" pos:column="21">if <condition pos:line="241" pos:column="24">(<expr><name pos:line="241" pos:column="25">rv<pos:position pos:line="241" pos:column="27"/></name> <operator pos:line="241" pos:column="28">!=<pos:position pos:line="241" pos:column="30"/></operator> <name pos:line="241" pos:column="31">APR_SUCCESS<pos:position pos:line="241" pos:column="42"/></name></expr>)<pos:position pos:line="241" pos:column="43"/></condition><then pos:line="241" pos:column="43">
                        <block type="pseudo"><return pos:line="242" pos:column="25">return <expr><name pos:line="242" pos:column="32">rv<pos:position pos:line="242" pos:column="34"/></name></expr>;<pos:position pos:line="242" pos:column="35"/></return></block></then></if>
                }<pos:position pos:line="243" pos:column="18"/></block></else></if>
            }<pos:position pos:line="244" pos:column="14"/></block></then></if>
            <if pos:line="245" pos:column="13">if <condition pos:line="245" pos:column="16">(<expr><name pos:line="245" pos:column="17">i<pos:position pos:line="245" pos:column="18"/></name> <operator pos:line="245" pos:column="19">&amp;&amp;<pos:position pos:line="245" pos:column="29"/></operator> <operator pos:line="245" pos:column="22">(<pos:position pos:line="245" pos:column="23"/></operator><name><name pos:line="245" pos:column="23">ipc<pos:position pos:line="245" pos:column="26"/></name><operator pos:line="245" pos:column="26">-&gt;<pos:position pos:line="245" pos:column="31"/></operator><name pos:line="245" pos:column="28">findex<pos:position pos:line="245" pos:column="34"/></name></name> <operator pos:line="245" pos:column="35">&gt;=<pos:position pos:line="245" pos:column="40"/></operator> <literal type="number" pos:line="245" pos:column="38">0<pos:position pos:line="245" pos:column="39"/></literal><operator pos:line="245" pos:column="39">)<pos:position pos:line="245" pos:column="40"/></operator> <operator pos:line="245" pos:column="41">&amp;&amp;<pos:position pos:line="245" pos:column="51"/></operator> <name><name pos:line="245" pos:column="44">eval<pos:position pos:line="245" pos:column="48"/></name><operator pos:line="245" pos:column="48">-&gt;<pos:position pos:line="245" pos:column="53"/></operator><name pos:line="245" pos:column="50">fcode<pos:position pos:line="245" pos:column="55"/></name><index pos:line="245" pos:column="55">[<expr><name><name pos:line="245" pos:column="56">ipc<pos:position pos:line="245" pos:column="59"/></name><operator pos:line="245" pos:column="59">-&gt;<pos:position pos:line="245" pos:column="64"/></operator><name pos:line="245" pos:column="61">findex<pos:position pos:line="245" pos:column="67"/></name></name></expr>]<pos:position pos:line="245" pos:column="68"/></index></name></expr>)<pos:position pos:line="245" pos:column="69"/></condition><then pos:line="245" pos:column="69">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="246" pos:column="17">apr_file_printf<pos:position pos:line="246" pos:column="32"/></name><argument_list pos:line="246" pos:column="32">(<argument><expr><name><name pos:line="246" pos:column="33">eval<pos:position pos:line="246" pos:column="37"/></name><operator pos:line="246" pos:column="37">-&gt;<pos:position pos:line="246" pos:column="42"/></operator><name pos:line="246" pos:column="39">fcode<pos:position pos:line="246" pos:column="44"/></name><index pos:line="246" pos:column="44">[<expr><name><name pos:line="246" pos:column="45">ipc<pos:position pos:line="246" pos:column="48"/></name><operator pos:line="246" pos:column="48">-&gt;<pos:position pos:line="246" pos:column="53"/></operator><name pos:line="246" pos:column="50">findex<pos:position pos:line="246" pos:column="56"/></name></name></expr>]<pos:position pos:line="246" pos:column="57"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="246" pos:column="59">"%s\n"<pos:position pos:line="246" pos:column="65"/></literal></expr></argument>,
                                <argument><expr><name><name pos:line="247" pos:column="33">eval<pos:position pos:line="247" pos:column="37"/></name><operator pos:line="247" pos:column="37">-&gt;<pos:position pos:line="247" pos:column="42"/></operator><name pos:line="247" pos:column="39">linebuf<pos:position pos:line="247" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="247" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="48"/></expr_stmt></block></then></if>
            <break pos:line="248" pos:column="13">break;<pos:position pos:line="248" pos:column="19"/></break>

        <case pos:line="250" pos:column="9">case <expr><name pos:line="250" pos:column="14">TCOM<pos:position pos:line="250" pos:column="18"/></name></expr>:<pos:position pos:line="250" pos:column="19"/></case>
            <if pos:line="251" pos:column="13">if<condition pos:line="251" pos:column="15">(<expr><name><name pos:line="251" pos:column="16">eval<pos:position pos:line="251" pos:column="20"/></name><operator pos:line="251" pos:column="20">-&gt;<pos:position pos:line="251" pos:column="25"/></operator><name pos:line="251" pos:column="22">sflag<pos:position pos:line="251" pos:column="27"/></name></name> <operator pos:line="251" pos:column="28">==<pos:position pos:line="251" pos:column="30"/></operator> <literal type="number" pos:line="251" pos:column="31">0<pos:position pos:line="251" pos:column="32"/></literal></expr>)<pos:position pos:line="251" pos:column="33"/></condition><then pos:line="251" pos:column="33">  <block type="pseudo"><break pos:line="251" pos:column="35">break;<pos:position pos:line="251" pos:column="41"/></break></block></then></if>
            <expr_stmt><expr><name><name pos:line="252" pos:column="13">eval<pos:position pos:line="252" pos:column="17"/></name><operator pos:line="252" pos:column="17">-&gt;<pos:position pos:line="252" pos:column="22"/></operator><name pos:line="252" pos:column="19">sflag<pos:position pos:line="252" pos:column="24"/></name></name> <operator pos:line="252" pos:column="25">=<pos:position pos:line="252" pos:column="26"/></operator> <literal type="number" pos:line="252" pos:column="27">0<pos:position pos:line="252" pos:column="28"/></literal></expr>;<pos:position pos:line="252" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="253" pos:column="13">eval<pos:position pos:line="253" pos:column="17"/></name><operator pos:line="253" pos:column="17">-&gt;<pos:position pos:line="253" pos:column="22"/></operator><name pos:line="253" pos:column="19">jflag<pos:position pos:line="253" pos:column="24"/></name></name> <operator pos:line="253" pos:column="25">=<pos:position pos:line="253" pos:column="26"/></operator> <literal type="number" pos:line="253" pos:column="27">1<pos:position pos:line="253" pos:column="28"/></literal></expr>;<pos:position pos:line="253" pos:column="29"/></expr_stmt>
            <break pos:line="254" pos:column="13">break;<pos:position pos:line="254" pos:column="19"/></break>

        <case pos:line="256" pos:column="9">case <expr><name pos:line="256" pos:column="14">WCOM<pos:position pos:line="256" pos:column="18"/></name></expr>:<pos:position pos:line="256" pos:column="19"/></case>
            <if pos:line="257" pos:column="13">if <condition pos:line="257" pos:column="16">(<expr><name><name pos:line="257" pos:column="17">ipc<pos:position pos:line="257" pos:column="20"/></name><operator pos:line="257" pos:column="20">-&gt;<pos:position pos:line="257" pos:column="25"/></operator><name pos:line="257" pos:column="22">findex<pos:position pos:line="257" pos:column="28"/></name></name> <operator pos:line="257" pos:column="29">&gt;=<pos:position pos:line="257" pos:column="34"/></operator> <literal type="number" pos:line="257" pos:column="32">0<pos:position pos:line="257" pos:column="33"/></literal></expr>)<pos:position pos:line="257" pos:column="34"/></condition><then pos:line="257" pos:column="34">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="258" pos:column="17">apr_file_printf<pos:position pos:line="258" pos:column="32"/></name><argument_list pos:line="258" pos:column="32">(<argument><expr><name><name pos:line="258" pos:column="33">eval<pos:position pos:line="258" pos:column="37"/></name><operator pos:line="258" pos:column="37">-&gt;<pos:position pos:line="258" pos:column="42"/></operator><name pos:line="258" pos:column="39">fcode<pos:position pos:line="258" pos:column="44"/></name><index pos:line="258" pos:column="44">[<expr><name><name pos:line="258" pos:column="45">ipc<pos:position pos:line="258" pos:column="48"/></name><operator pos:line="258" pos:column="48">-&gt;<pos:position pos:line="258" pos:column="53"/></operator><name pos:line="258" pos:column="50">findex<pos:position pos:line="258" pos:column="56"/></name></name></expr>]<pos:position pos:line="258" pos:column="57"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="258" pos:column="59">"%s\n"<pos:position pos:line="258" pos:column="65"/></literal></expr></argument>,
                                <argument><expr><name><name pos:line="259" pos:column="33">eval<pos:position pos:line="259" pos:column="37"/></name><operator pos:line="259" pos:column="37">-&gt;<pos:position pos:line="259" pos:column="42"/></operator><name pos:line="259" pos:column="39">linebuf<pos:position pos:line="259" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="259" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="48"/></expr_stmt></block></then></if>
            <break pos:line="260" pos:column="13">break;<pos:position pos:line="260" pos:column="19"/></break>
        <case pos:line="261" pos:column="9">case <expr><name pos:line="261" pos:column="14">XCOM<pos:position pos:line="261" pos:column="18"/></name></expr>:<pos:position pos:line="261" pos:column="19"/></case>
            <expr_stmt><expr><call><name pos:line="262" pos:column="13">copy_to_genbuf<pos:position pos:line="262" pos:column="27"/></name><argument_list pos:line="262" pos:column="27">(<argument><expr><name pos:line="262" pos:column="28">eval<pos:position pos:line="262" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="262" pos:column="34">eval<pos:position pos:line="262" pos:column="38"/></name><operator pos:line="262" pos:column="38">-&gt;<pos:position pos:line="262" pos:column="43"/></operator><name pos:line="262" pos:column="40">linebuf<pos:position pos:line="262" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="262" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="263" pos:column="13">copy_to_linebuf<pos:position pos:line="263" pos:column="28"/></name><argument_list pos:line="263" pos:column="28">(<argument><expr><name pos:line="263" pos:column="29">eval<pos:position pos:line="263" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="263" pos:column="35">eval<pos:position pos:line="263" pos:column="39"/></name><operator pos:line="263" pos:column="39">-&gt;<pos:position pos:line="263" pos:column="44"/></operator><name pos:line="263" pos:column="41">holdbuf<pos:position pos:line="263" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="263" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="264" pos:column="13">copy_to_holdbuf<pos:position pos:line="264" pos:column="28"/></name><argument_list pos:line="264" pos:column="28">(<argument><expr><name pos:line="264" pos:column="29">eval<pos:position pos:line="264" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="264" pos:column="35">eval<pos:position pos:line="264" pos:column="39"/></name><operator pos:line="264" pos:column="39">-&gt;<pos:position pos:line="264" pos:column="44"/></operator><name pos:line="264" pos:column="41">genbuf<pos:position pos:line="264" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="264" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="49"/></expr_stmt>
            <break pos:line="265" pos:column="13">break;<pos:position pos:line="265" pos:column="19"/></break>

        <case pos:line="267" pos:column="9">case <expr><name pos:line="267" pos:column="14">YCOM<pos:position pos:line="267" pos:column="18"/></name></expr>:<pos:position pos:line="267" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="268" pos:column="13">p1<pos:position pos:line="268" pos:column="15"/></name> <operator pos:line="268" pos:column="16">=<pos:position pos:line="268" pos:column="17"/></operator> <name><name pos:line="268" pos:column="18">eval<pos:position pos:line="268" pos:column="22"/></name><operator pos:line="268" pos:column="22">-&gt;<pos:position pos:line="268" pos:column="27"/></operator><name pos:line="268" pos:column="24">linebuf<pos:position pos:line="268" pos:column="31"/></name></name></expr>;<pos:position pos:line="268" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><name pos:line="269" pos:column="13">p2<pos:position pos:line="269" pos:column="15"/></name> <operator pos:line="269" pos:column="16">=<pos:position pos:line="269" pos:column="17"/></operator> <name><name pos:line="269" pos:column="18">ipc<pos:position pos:line="269" pos:column="21"/></name><operator pos:line="269" pos:column="21">-&gt;<pos:position pos:line="269" pos:column="26"/></operator><name pos:line="269" pos:column="23">re1<pos:position pos:line="269" pos:column="26"/></name></name></expr>;<pos:position pos:line="269" pos:column="27"/></expr_stmt>
            <while pos:line="270" pos:column="13">while<condition pos:line="270" pos:column="18">(<expr><operator pos:line="270" pos:column="19">(<pos:position pos:line="270" pos:column="20"/></operator><operator pos:line="270" pos:column="20">*<pos:position pos:line="270" pos:column="21"/></operator><name pos:line="270" pos:column="21">p1<pos:position pos:line="270" pos:column="23"/></name> <operator pos:line="270" pos:column="24">=<pos:position pos:line="270" pos:column="25"/></operator> <name><name pos:line="270" pos:column="26">p2<pos:position pos:line="270" pos:column="28"/></name><index pos:line="270" pos:column="28">[<expr><operator pos:line="270" pos:column="29">(<pos:position pos:line="270" pos:column="30"/></operator><name pos:line="270" pos:column="30">unsigned<pos:position pos:line="270" pos:column="38"/></name> <name pos:line="270" pos:column="39">char<pos:position pos:line="270" pos:column="43"/></name><operator pos:line="270" pos:column="43">)<pos:position pos:line="270" pos:column="44"/></operator><operator pos:line="270" pos:column="44">*<pos:position pos:line="270" pos:column="45"/></operator><name pos:line="270" pos:column="45">p1<pos:position pos:line="270" pos:column="47"/></name></expr>]<pos:position pos:line="270" pos:column="48"/></index></name><operator pos:line="270" pos:column="48">)<pos:position pos:line="270" pos:column="49"/></operator> <operator pos:line="270" pos:column="50">!=<pos:position pos:line="270" pos:column="52"/></operator> <literal type="number" pos:line="270" pos:column="53">0<pos:position pos:line="270" pos:column="54"/></literal></expr>)<pos:position pos:line="270" pos:column="55"/></condition>    <block type="pseudo"><expr_stmt><expr><name pos:line="270" pos:column="59">p1<pos:position pos:line="270" pos:column="61"/></name><operator pos:line="270" pos:column="61">++<pos:position pos:line="270" pos:column="63"/></operator></expr>;<pos:position pos:line="270" pos:column="64"/></expr_stmt></block></while>
            <break pos:line="271" pos:column="13">break;<pos:position pos:line="271" pos:column="19"/></break>
    }<pos:position pos:line="272" pos:column="6"/></block></switch>
    <return pos:line="273" pos:column="5">return <expr><name pos:line="273" pos:column="12">rv<pos:position pos:line="273" pos:column="14"/></name></expr>;<pos:position pos:line="273" pos:column="15"/></return>
}<pos:position pos:line="274" pos:column="2"/></block></function></unit>

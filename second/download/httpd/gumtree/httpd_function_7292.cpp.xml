<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_7292.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">lua_State<pos:position pos:line="1" pos:column="10"/></name> <modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type><name pos:line="1" pos:column="12">ap_lua_get_lua_state<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">apr_pool_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">lifecycle_pool<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                                               <parameter><decl><type><name pos:line="2" pos:column="48">ap_lua_vm_spec<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">spec<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="70">request_rec<pos:position pos:line="2" pos:column="81"/></name><modifier pos:line="2" pos:column="81">*<pos:position pos:line="2" pos:column="82"/></modifier></type> <name pos:line="2" pos:column="83">r<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="85"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">lua_State<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">L<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><name pos:line="4" pos:column="20">NULL<pos:position pos:line="4" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ap_lua_finfo<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">cache_info<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name pos:line="5" pos:column="32">NULL<pos:position pos:line="5" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">tryCache<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><literal type="number" pos:line="6" pos:column="20">0<pos:position pos:line="6" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">spec<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">scope<pos:position pos:line="8" pos:column="20"/></name></name> <operator pos:line="8" pos:column="21">==<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="24">AP_LUA_SCOPE_SERVER<pos:position pos:line="8" pos:column="43"/></name></expr>)<pos:position pos:line="8" pos:column="44"/></condition><then pos:line="8" pos:column="44"> <block pos:line="8" pos:column="45">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">hash<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">apr_reslist_t<pos:position pos:line="10" pos:column="22"/></name><modifier pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></modifier></type> <name pos:line="10" pos:column="24">reslist<pos:position pos:line="10" pos:column="31"/></name> <init pos:line="10" pos:column="32">= <expr><name pos:line="10" pos:column="34">NULL<pos:position pos:line="10" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="39"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">ap_lua_server_spec<pos:position pos:line="11" pos:column="27"/></name><modifier pos:line="11" pos:column="27">*<pos:position pos:line="11" pos:column="28"/></modifier></type> <name pos:line="11" pos:column="29">sspec<pos:position pos:line="11" pos:column="34"/></name> <init pos:line="11" pos:column="35">= <expr><name pos:line="11" pos:column="37">NULL<pos:position pos:line="11" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="42"/></decl_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">hash<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <call><name pos:line="12" pos:column="16">apr_psprintf<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name><name pos:line="12" pos:column="29">r<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">pool<pos:position pos:line="12" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="38">"reslist:%s"<pos:position pos:line="12" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="52">spec<pos:position pos:line="12" pos:column="56"/></name><operator pos:line="12" pos:column="56">-&gt;<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="58">file<pos:position pos:line="12" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="64"/></expr_stmt>
<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><name pos:line="13" pos:column="5">APR_HAS_THREADS<pos:position pos:line="13" pos:column="20"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">apr_thread_mutex_lock<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">ap_lua_mutex<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">apr_pool_userdata_get<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><operator pos:line="16" pos:column="35">(<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="36">void<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">*<pos:position pos:line="16" pos:column="42"/></operator><operator pos:line="16" pos:column="42">*<pos:position pos:line="16" pos:column="43"/></operator><operator pos:line="16" pos:column="43">)<pos:position pos:line="16" pos:column="44"/></operator><operator pos:line="16" pos:column="44">&amp;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="45">reslist<pos:position pos:line="16" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="54">hash<pos:position pos:line="16" pos:column="58"/></name></expr></argument>,
                                  <argument><expr><name><name pos:line="17" pos:column="35">r<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="38">server<pos:position pos:line="17" pos:column="44"/></name><operator pos:line="17" pos:column="44">-&gt;<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="46">process<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">-&gt;<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="55">pool<pos:position pos:line="17" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call> <operator pos:line="17" pos:column="61">==<pos:position pos:line="17" pos:column="63"/></operator> <name pos:line="17" pos:column="64">APR_SUCCESS<pos:position pos:line="17" pos:column="75"/></name></expr>)<pos:position pos:line="17" pos:column="76"/></condition><then pos:line="17" pos:column="76"> <block pos:line="17" pos:column="77">{
            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><name pos:line="18" pos:column="17">reslist<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">!=<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="28">NULL<pos:position pos:line="18" pos:column="32"/></name></expr>)<pos:position pos:line="18" pos:column="33"/></condition><then pos:line="18" pos:column="33"> <block pos:line="18" pos:column="34">{
                <if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><call><name pos:line="19" pos:column="21">apr_reslist_acquire<pos:position pos:line="19" pos:column="40"/></name><argument_list pos:line="19" pos:column="40">(<argument><expr><name pos:line="19" pos:column="41">reslist<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="50">(<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">void<pos:position pos:line="19" pos:column="55"/></name><operator pos:line="19" pos:column="55">*<pos:position pos:line="19" pos:column="56"/></operator><operator pos:line="19" pos:column="56">*<pos:position pos:line="19" pos:column="57"/></operator><operator pos:line="19" pos:column="57">)<pos:position pos:line="19" pos:column="58"/></operator> <operator pos:line="19" pos:column="59">&amp;<pos:position pos:line="19" pos:column="64"/></operator><name pos:line="19" pos:column="60">sspec<pos:position pos:line="19" pos:column="65"/></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call> <operator pos:line="19" pos:column="67">==<pos:position pos:line="19" pos:column="69"/></operator> <name pos:line="19" pos:column="70">APR_SUCCESS<pos:position pos:line="19" pos:column="81"/></name></expr>)<pos:position pos:line="19" pos:column="82"/></condition><then pos:line="19" pos:column="82"> <block pos:line="19" pos:column="83">{
                    <expr_stmt><expr><name pos:line="20" pos:column="21">L<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <name><name pos:line="20" pos:column="25">sspec<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">-&gt;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="32">L<pos:position pos:line="20" pos:column="33"/></name></name></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="21" pos:column="21">cache_info<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">=<pos:position pos:line="21" pos:column="33"/></operator> <name><name pos:line="21" pos:column="34">sspec<pos:position pos:line="21" pos:column="39"/></name><operator pos:line="21" pos:column="39">-&gt;<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="41">finfo<pos:position pos:line="21" pos:column="46"/></name></name></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
                }<pos:position pos:line="22" pos:column="18"/></block></then></if>
            }<pos:position pos:line="23" pos:column="14"/></block></then></if>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">L<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">==<pos:position pos:line="25" pos:column="17"/></operator> <name pos:line="25" pos:column="18">NULL<pos:position pos:line="25" pos:column="22"/></name></expr>)<pos:position pos:line="25" pos:column="23"/></condition><then pos:line="25" pos:column="23"> <block pos:line="25" pos:column="24">{
            <decl_stmt><decl><type><name pos:line="26" pos:column="13">ap_lua_vm_spec<pos:position pos:line="26" pos:column="27"/></name><modifier pos:line="26" pos:column="27">*<pos:position pos:line="26" pos:column="28"/></modifier></type> <name pos:line="26" pos:column="29">server_spec<pos:position pos:line="26" pos:column="40"/></name> <init pos:line="26" pos:column="41">= <expr><call><name pos:line="26" pos:column="43">copy_vm_spec<pos:position pos:line="26" pos:column="55"/></name><argument_list pos:line="26" pos:column="55">(<argument><expr><name><name pos:line="26" pos:column="56">r<pos:position pos:line="26" pos:column="57"/></name><operator pos:line="26" pos:column="57">-&gt;<pos:position pos:line="26" pos:column="62"/></operator><name pos:line="26" pos:column="59">server<pos:position pos:line="26" pos:column="65"/></name><operator pos:line="26" pos:column="65">-&gt;<pos:position pos:line="26" pos:column="70"/></operator><name pos:line="26" pos:column="67">process<pos:position pos:line="26" pos:column="74"/></name><operator pos:line="26" pos:column="74">-&gt;<pos:position pos:line="26" pos:column="79"/></operator><name pos:line="26" pos:column="76">pool<pos:position pos:line="26" pos:column="80"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="82">spec<pos:position pos:line="26" pos:column="86"/></name></expr></argument>)<pos:position pos:line="26" pos:column="87"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="88"/></decl_stmt>
            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">(
                    <expr><call><name pos:line="28" pos:column="21">apr_reslist_create<pos:position pos:line="28" pos:column="39"/></name><argument_list pos:line="28" pos:column="39">(<argument><expr><operator pos:line="28" pos:column="40">&amp;<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="41">reslist<pos:position pos:line="28" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="50">spec<pos:position pos:line="28" pos:column="54"/></name><operator pos:line="28" pos:column="54">-&gt;<pos:position pos:line="28" pos:column="59"/></operator><name pos:line="28" pos:column="56">vm_min<pos:position pos:line="28" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="64">spec<pos:position pos:line="28" pos:column="68"/></name><operator pos:line="28" pos:column="68">-&gt;<pos:position pos:line="28" pos:column="73"/></operator><name pos:line="28" pos:column="70">vm_max<pos:position pos:line="28" pos:column="76"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="78">spec<pos:position pos:line="28" pos:column="82"/></name><operator pos:line="28" pos:column="82">-&gt;<pos:position pos:line="28" pos:column="87"/></operator><name pos:line="28" pos:column="84">vm_max<pos:position pos:line="28" pos:column="90"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="92">0<pos:position pos:line="28" pos:column="93"/></literal></expr></argument>, 
                                <argument><expr><operator pos:line="29" pos:column="33">(<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="34">apr_reslist_constructor<pos:position pos:line="29" pos:column="57"/></name><operator pos:line="29" pos:column="57">)<pos:position pos:line="29" pos:column="58"/></operator> <name pos:line="29" pos:column="59">server_vm_construct<pos:position pos:line="29" pos:column="78"/></name></expr></argument>, 
                                <argument><expr><operator pos:line="30" pos:column="33">(<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="34">apr_reslist_destructor<pos:position pos:line="30" pos:column="56"/></name><operator pos:line="30" pos:column="56">)<pos:position pos:line="30" pos:column="57"/></operator> <name pos:line="30" pos:column="58">server_cleanup_lua<pos:position pos:line="30" pos:column="76"/></name></expr></argument>, 
                                <argument><expr><name pos:line="31" pos:column="33">server_spec<pos:position pos:line="31" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="46">r<pos:position pos:line="31" pos:column="47"/></name><operator pos:line="31" pos:column="47">-&gt;<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="49">server<pos:position pos:line="31" pos:column="55"/></name><operator pos:line="31" pos:column="55">-&gt;<pos:position pos:line="31" pos:column="60"/></operator><name pos:line="31" pos:column="57">process<pos:position pos:line="31" pos:column="64"/></name><operator pos:line="31" pos:column="64">-&gt;<pos:position pos:line="31" pos:column="69"/></operator><name pos:line="31" pos:column="66">pool<pos:position pos:line="31" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="71"/></argument_list></call>
                    <operator pos:line="32" pos:column="21">==<pos:position pos:line="32" pos:column="23"/></operator> <name pos:line="32" pos:column="24">APR_SUCCESS<pos:position pos:line="32" pos:column="35"/></name> <operator pos:line="32" pos:column="36">&amp;&amp;<pos:position pos:line="32" pos:column="46"/></operator> <name pos:line="32" pos:column="39">reslist<pos:position pos:line="32" pos:column="46"/></name> <operator pos:line="32" pos:column="47">!=<pos:position pos:line="32" pos:column="49"/></operator> <name pos:line="32" pos:column="50">NULL<pos:position pos:line="32" pos:column="54"/></name></expr>)<pos:position pos:line="32" pos:column="55"/></condition><then pos:line="32" pos:column="55"> <block pos:line="32" pos:column="56">{
                <expr_stmt><expr><call><name pos:line="33" pos:column="17">apr_pool_userdata_set<pos:position pos:line="33" pos:column="38"/></name><argument_list pos:line="33" pos:column="38">(<argument><expr><name pos:line="33" pos:column="39">reslist<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="48">hash<pos:position pos:line="33" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="54">NULL<pos:position pos:line="33" pos:column="58"/></name></expr></argument>,
                                            <argument><expr><name><name pos:line="34" pos:column="45">r<pos:position pos:line="34" pos:column="46"/></name><operator pos:line="34" pos:column="46">-&gt;<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="48">server<pos:position pos:line="34" pos:column="54"/></name><operator pos:line="34" pos:column="54">-&gt;<pos:position pos:line="34" pos:column="59"/></operator><name pos:line="34" pos:column="56">process<pos:position pos:line="34" pos:column="63"/></name><operator pos:line="34" pos:column="63">-&gt;<pos:position pos:line="34" pos:column="68"/></operator><name pos:line="34" pos:column="65">pool<pos:position pos:line="34" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="71"/></expr_stmt>
                <if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><call><name pos:line="35" pos:column="21">apr_reslist_acquire<pos:position pos:line="35" pos:column="40"/></name><argument_list pos:line="35" pos:column="40">(<argument><expr><name pos:line="35" pos:column="41">reslist<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="50">(<pos:position pos:line="35" pos:column="51"/></operator><name pos:line="35" pos:column="51">void<pos:position pos:line="35" pos:column="55"/></name><operator pos:line="35" pos:column="55">*<pos:position pos:line="35" pos:column="56"/></operator><operator pos:line="35" pos:column="56">*<pos:position pos:line="35" pos:column="57"/></operator><operator pos:line="35" pos:column="57">)<pos:position pos:line="35" pos:column="58"/></operator> <operator pos:line="35" pos:column="59">&amp;<pos:position pos:line="35" pos:column="64"/></operator><name pos:line="35" pos:column="60">sspec<pos:position pos:line="35" pos:column="65"/></name></expr></argument>)<pos:position pos:line="35" pos:column="66"/></argument_list></call> <operator pos:line="35" pos:column="67">==<pos:position pos:line="35" pos:column="69"/></operator> <name pos:line="35" pos:column="70">APR_SUCCESS<pos:position pos:line="35" pos:column="81"/></name></expr>)<pos:position pos:line="35" pos:column="82"/></condition><then pos:line="35" pos:column="82"> <block pos:line="35" pos:column="83">{
                    <expr_stmt><expr><name pos:line="36" pos:column="21">L<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">=<pos:position pos:line="36" pos:column="24"/></operator> <name><name pos:line="36" pos:column="25">sspec<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">-&gt;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="32">L<pos:position pos:line="36" pos:column="33"/></name></name></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="37" pos:column="21">cache_info<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">=<pos:position pos:line="37" pos:column="33"/></operator> <name><name pos:line="37" pos:column="34">sspec<pos:position pos:line="37" pos:column="39"/></name><operator pos:line="37" pos:column="39">-&gt;<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="41">finfo<pos:position pos:line="37" pos:column="46"/></name></name></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>
                }<pos:position pos:line="38" pos:column="18"/></block></then>
                <else pos:line="39" pos:column="17">else <block pos:line="39" pos:column="22">{
                    <return pos:line="40" pos:column="21">return <expr><name pos:line="40" pos:column="28">NULL<pos:position pos:line="40" pos:column="32"/></name></expr>;<pos:position pos:line="40" pos:column="33"/></return>
                }<pos:position pos:line="41" pos:column="18"/></block></else></if>
            }<pos:position pos:line="42" pos:column="14"/></block></then></if>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>
<cpp:if pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">if<pos:position pos:line="44" pos:column="4"/></cpp:directive> <expr><name pos:line="44" pos:column="5">APR_HAS_THREADS<pos:position pos:line="44" pos:column="20"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="45" pos:column="32"/></name><argument_list pos:line="45" pos:column="32">(<argument><expr><name pos:line="45" pos:column="33">ap_lua_mutex<pos:position pos:line="45" pos:column="45"/></name></expr></argument>)<pos:position pos:line="45" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="47" pos:column="6"/></block></then>
    <else pos:line="48" pos:column="5">else <block pos:line="48" pos:column="10">{
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><call><name pos:line="49" pos:column="13">apr_pool_userdata_get<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><operator pos:line="49" pos:column="35">(<pos:position pos:line="49" pos:column="36"/></operator><name pos:line="49" pos:column="36">void<pos:position pos:line="49" pos:column="40"/></name> <operator pos:line="49" pos:column="41">*<pos:position pos:line="49" pos:column="42"/></operator><operator pos:line="49" pos:column="42">*<pos:position pos:line="49" pos:column="43"/></operator><operator pos:line="49" pos:column="43">)<pos:position pos:line="49" pos:column="44"/></operator><operator pos:line="49" pos:column="44">&amp;<pos:position pos:line="49" pos:column="49"/></operator><name pos:line="49" pos:column="45">L<pos:position pos:line="49" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="48">spec<pos:position pos:line="49" pos:column="52"/></name><operator pos:line="49" pos:column="52">-&gt;<pos:position pos:line="49" pos:column="57"/></operator><name pos:line="49" pos:column="54">file<pos:position pos:line="49" pos:column="58"/></name></name></expr></argument>,
                              <argument><expr><name pos:line="50" pos:column="31">lifecycle_pool<pos:position pos:line="50" pos:column="45"/></name></expr></argument>)<pos:position pos:line="50" pos:column="46"/></argument_list></call> <operator pos:line="50" pos:column="47">!=<pos:position pos:line="50" pos:column="49"/></operator> <name pos:line="50" pos:column="50">APR_SUCCESS<pos:position pos:line="50" pos:column="61"/></name></expr>)<pos:position pos:line="50" pos:column="62"/></condition><then pos:line="50" pos:column="62"> <block pos:line="50" pos:column="63">{
            <expr_stmt><expr><name pos:line="51" pos:column="13">L<pos:position pos:line="51" pos:column="14"/></name> <operator pos:line="51" pos:column="15">=<pos:position pos:line="51" pos:column="16"/></operator> <name pos:line="51" pos:column="17">NULL<pos:position pos:line="51" pos:column="21"/></name></expr>;<pos:position pos:line="51" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>
    }<pos:position pos:line="53" pos:column="6"/></block></else></if>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">L<pos:position pos:line="54" pos:column="10"/></name> <operator pos:line="54" pos:column="11">==<pos:position pos:line="54" pos:column="13"/></operator> <name pos:line="54" pos:column="14">NULL<pos:position pos:line="54" pos:column="18"/></name></expr>)<pos:position pos:line="54" pos:column="19"/></condition><then pos:line="54" pos:column="19"> <block pos:line="54" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">ap_log_perror<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">(<argument><expr><name pos:line="55" pos:column="23">APLOG_MARK<pos:position pos:line="55" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="35">APLOG_DEBUG<pos:position pos:line="55" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="48">0<pos:position pos:line="55" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="51">lifecycle_pool<pos:position pos:line="55" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="67">APLOGNO<pos:position pos:line="55" pos:column="74"/></name><argument_list pos:line="55" pos:column="74">(<argument><expr><literal type="number" pos:line="55" pos:column="75">01483<pos:position pos:line="55" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="81"/></argument_list></call>
                        <literal type="string" pos:line="56" pos:column="25">"creating lua_State with file %s"<pos:position pos:line="56" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="60">spec<pos:position pos:line="56" pos:column="64"/></name><operator pos:line="56" pos:column="64">-&gt;<pos:position pos:line="56" pos:column="69"/></operator><name pos:line="56" pos:column="66">file<pos:position pos:line="56" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="72"/></expr_stmt>
        <comment type="block" pos:line="57" pos:column="9">/* not available, so create */</comment>

        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><operator pos:line="59" pos:column="13">!<pos:position pos:line="59" pos:column="14"/></operator><call><name pos:line="59" pos:column="14">vm_construct<pos:position pos:line="59" pos:column="26"/></name><argument_list pos:line="59" pos:column="26">(<argument><expr><operator pos:line="59" pos:column="27">&amp;<pos:position pos:line="59" pos:column="32"/></operator><name pos:line="59" pos:column="28">L<pos:position pos:line="59" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="31">spec<pos:position pos:line="59" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="37">lifecycle_pool<pos:position pos:line="59" pos:column="51"/></name></expr></argument>)<pos:position pos:line="59" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="53"/></condition><then pos:line="59" pos:column="53"> <block pos:line="59" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">AP_DEBUG_ASSERT<pos:position pos:line="60" pos:column="28"/></name><argument_list pos:line="60" pos:column="28">(<argument><expr><name pos:line="60" pos:column="29">L<pos:position pos:line="60" pos:column="30"/></name> <operator pos:line="60" pos:column="31">!=<pos:position pos:line="60" pos:column="33"/></operator> <name pos:line="60" pos:column="34">NULL<pos:position pos:line="60" pos:column="38"/></name></expr></argument>)<pos:position pos:line="60" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">apr_pool_userdata_set<pos:position pos:line="61" pos:column="34"/></name><argument_list pos:line="61" pos:column="34">(<argument><expr><name pos:line="61" pos:column="35">L<pos:position pos:line="61" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="38">spec<pos:position pos:line="61" pos:column="42"/></name><operator pos:line="61" pos:column="42">-&gt;<pos:position pos:line="61" pos:column="47"/></operator><name pos:line="61" pos:column="44">file<pos:position pos:line="61" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="50">cleanup_lua<pos:position pos:line="61" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="63">lifecycle_pool<pos:position pos:line="61" pos:column="77"/></name></expr></argument>)<pos:position pos:line="61" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="62" pos:column="10"/></block></then></if>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name><name pos:line="65" pos:column="9">spec<pos:position pos:line="65" pos:column="13"/></name><operator pos:line="65" pos:column="13">-&gt;<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="15">codecache<pos:position pos:line="65" pos:column="24"/></name></name> <operator pos:line="65" pos:column="25">==<pos:position pos:line="65" pos:column="27"/></operator> <name pos:line="65" pos:column="28">AP_LUA_CACHE_FOREVER<pos:position pos:line="65" pos:column="48"/></name> <operator pos:line="65" pos:column="49">||<pos:position pos:line="65" pos:column="51"/></operator> <operator pos:line="65" pos:column="52">(<pos:position pos:line="65" pos:column="53"/></operator><name><name pos:line="65" pos:column="53">spec<pos:position pos:line="65" pos:column="57"/></name><operator pos:line="65" pos:column="57">-&gt;<pos:position pos:line="65" pos:column="62"/></operator><name pos:line="65" pos:column="59">bytecode<pos:position pos:line="65" pos:column="67"/></name></name> <operator pos:line="65" pos:column="68">&amp;&amp;<pos:position pos:line="65" pos:column="78"/></operator> <name><name pos:line="65" pos:column="71">spec<pos:position pos:line="65" pos:column="75"/></name><operator pos:line="65" pos:column="75">-&gt;<pos:position pos:line="65" pos:column="80"/></operator><name pos:line="65" pos:column="77">bytecode_len<pos:position pos:line="65" pos:column="89"/></name></name> <operator pos:line="65" pos:column="90">&gt;<pos:position pos:line="65" pos:column="94"/></operator> <literal type="number" pos:line="65" pos:column="92">0<pos:position pos:line="65" pos:column="93"/></literal><operator pos:line="65" pos:column="93">)<pos:position pos:line="65" pos:column="94"/></operator></expr>)<pos:position pos:line="65" pos:column="95"/></condition><then pos:line="65" pos:column="95"> <block pos:line="65" pos:column="96">{
        <expr_stmt><expr><name pos:line="66" pos:column="9">tryCache<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">=<pos:position pos:line="66" pos:column="19"/></operator> <literal type="number" pos:line="66" pos:column="20">1<pos:position pos:line="66" pos:column="21"/></literal></expr>;<pos:position pos:line="66" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></then>
    <else pos:line="68" pos:column="5">else <block pos:line="68" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="69" pos:column="9">char<pos:position pos:line="69" pos:column="13"/></name><modifier pos:line="69" pos:column="13">*<pos:position pos:line="69" pos:column="14"/></modifier></type> <name pos:line="69" pos:column="15">mkey<pos:position pos:line="69" pos:column="19"/></name></decl>;<pos:position pos:line="69" pos:column="20"/></decl_stmt>
        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name><name pos:line="70" pos:column="13">spec<pos:position pos:line="70" pos:column="17"/></name><operator pos:line="70" pos:column="17">-&gt;<pos:position pos:line="70" pos:column="22"/></operator><name pos:line="70" pos:column="19">scope<pos:position pos:line="70" pos:column="24"/></name></name> <operator pos:line="70" pos:column="25">!=<pos:position pos:line="70" pos:column="27"/></operator> <name pos:line="70" pos:column="28">AP_LUA_SCOPE_SERVER<pos:position pos:line="70" pos:column="47"/></name></expr>)<pos:position pos:line="70" pos:column="48"/></condition><then pos:line="70" pos:column="48"> <block pos:line="70" pos:column="49">{
            <expr_stmt><expr><name pos:line="71" pos:column="13">mkey<pos:position pos:line="71" pos:column="17"/></name> <operator pos:line="71" pos:column="18">=<pos:position pos:line="71" pos:column="19"/></operator> <call><name pos:line="71" pos:column="20">apr_psprintf<pos:position pos:line="71" pos:column="32"/></name><argument_list pos:line="71" pos:column="32">(<argument><expr><name><name pos:line="71" pos:column="33">r<pos:position pos:line="71" pos:column="34"/></name><operator pos:line="71" pos:column="34">-&gt;<pos:position pos:line="71" pos:column="39"/></operator><name pos:line="71" pos:column="36">pool<pos:position pos:line="71" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="42">"ap_lua_modified:%s"<pos:position pos:line="71" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="64">spec<pos:position pos:line="71" pos:column="68"/></name><operator pos:line="71" pos:column="68">-&gt;<pos:position pos:line="71" pos:column="73"/></operator><name pos:line="71" pos:column="70">file<pos:position pos:line="71" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="72" pos:column="13">apr_pool_userdata_get<pos:position pos:line="72" pos:column="34"/></name><argument_list pos:line="72" pos:column="34">(<argument><expr><operator pos:line="72" pos:column="35">(<pos:position pos:line="72" pos:column="36"/></operator><name pos:line="72" pos:column="36">void<pos:position pos:line="72" pos:column="40"/></name> <operator pos:line="72" pos:column="41">*<pos:position pos:line="72" pos:column="42"/></operator><operator pos:line="72" pos:column="42">*<pos:position pos:line="72" pos:column="43"/></operator><operator pos:line="72" pos:column="43">)<pos:position pos:line="72" pos:column="44"/></operator><operator pos:line="72" pos:column="44">&amp;<pos:position pos:line="72" pos:column="49"/></operator><name pos:line="72" pos:column="45">cache_info<pos:position pos:line="72" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="57">mkey<pos:position pos:line="72" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="63">lifecycle_pool<pos:position pos:line="72" pos:column="77"/></name></expr></argument>)<pos:position pos:line="72" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="79"/></expr_stmt>
            <if pos:line="73" pos:column="13">if <condition pos:line="73" pos:column="16">(<expr><name pos:line="73" pos:column="17">cache_info<pos:position pos:line="73" pos:column="27"/></name> <operator pos:line="73" pos:column="28">==<pos:position pos:line="73" pos:column="30"/></operator> <name pos:line="73" pos:column="31">NULL<pos:position pos:line="73" pos:column="35"/></name></expr>)<pos:position pos:line="73" pos:column="36"/></condition><then pos:line="73" pos:column="36"> <block pos:line="73" pos:column="37">{
                <expr_stmt><expr><name pos:line="74" pos:column="17">cache_info<pos:position pos:line="74" pos:column="27"/></name> <operator pos:line="74" pos:column="28">=<pos:position pos:line="74" pos:column="29"/></operator> <call><name pos:line="74" pos:column="30">apr_pcalloc<pos:position pos:line="74" pos:column="41"/></name><argument_list pos:line="74" pos:column="41">(<argument><expr><name pos:line="74" pos:column="42">lifecycle_pool<pos:position pos:line="74" pos:column="56"/></name></expr></argument>, <argument><expr><sizeof pos:line="74" pos:column="58">sizeof<argument_list pos:line="74" pos:column="64">(<argument><expr><name pos:line="74" pos:column="65">ap_lua_finfo<pos:position pos:line="74" pos:column="77"/></name></expr></argument>)<pos:position pos:line="74" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="74" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="80"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="75" pos:column="17">apr_pool_userdata_set<pos:position pos:line="75" pos:column="38"/></name><argument_list pos:line="75" pos:column="38">(<argument><expr><operator pos:line="75" pos:column="39">(<pos:position pos:line="75" pos:column="40"/></operator><name pos:line="75" pos:column="40">void<pos:position pos:line="75" pos:column="44"/></name><operator pos:line="75" pos:column="44">*<pos:position pos:line="75" pos:column="45"/></operator><operator pos:line="75" pos:column="45">)<pos:position pos:line="75" pos:column="46"/></operator> <name pos:line="75" pos:column="47">cache_info<pos:position pos:line="75" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="59">mkey<pos:position pos:line="75" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="65">NULL<pos:position pos:line="75" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="71">lifecycle_pool<pos:position pos:line="75" pos:column="85"/></name></expr></argument>)<pos:position pos:line="75" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="87"/></expr_stmt>
            }<pos:position pos:line="76" pos:column="14"/></block></then></if>
        }<pos:position pos:line="77" pos:column="10"/></block></then></if>
        <if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name><name pos:line="78" pos:column="13">spec<pos:position pos:line="78" pos:column="17"/></name><operator pos:line="78" pos:column="17">-&gt;<pos:position pos:line="78" pos:column="22"/></operator><name pos:line="78" pos:column="19">codecache<pos:position pos:line="78" pos:column="28"/></name></name> <operator pos:line="78" pos:column="29">==<pos:position pos:line="78" pos:column="31"/></operator> <name pos:line="78" pos:column="32">AP_LUA_CACHE_STAT<pos:position pos:line="78" pos:column="49"/></name></expr>)<pos:position pos:line="78" pos:column="50"/></condition><then pos:line="78" pos:column="50"> <block pos:line="78" pos:column="51">{
            <decl_stmt><decl><type><name pos:line="79" pos:column="13">apr_finfo_t<pos:position pos:line="79" pos:column="24"/></name></type> <name pos:line="79" pos:column="25">lua_finfo<pos:position pos:line="79" pos:column="34"/></name></decl>;<pos:position pos:line="79" pos:column="35"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="80" pos:column="13">apr_stat<pos:position pos:line="80" pos:column="21"/></name><argument_list pos:line="80" pos:column="21">(<argument><expr><operator pos:line="80" pos:column="22">&amp;<pos:position pos:line="80" pos:column="27"/></operator><name pos:line="80" pos:column="23">lua_finfo<pos:position pos:line="80" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="34">spec<pos:position pos:line="80" pos:column="38"/></name><operator pos:line="80" pos:column="38">-&gt;<pos:position pos:line="80" pos:column="43"/></operator><name pos:line="80" pos:column="40">file<pos:position pos:line="80" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="46">APR_FINFO_MTIME<pos:position pos:line="80" pos:column="61"/></name><operator pos:line="80" pos:column="61">|<pos:position pos:line="80" pos:column="62"/></operator><name pos:line="80" pos:column="62">APR_FINFO_SIZE<pos:position pos:line="80" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="78">lifecycle_pool<pos:position pos:line="80" pos:column="92"/></name></expr></argument>)<pos:position pos:line="80" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="94"/></expr_stmt>

            <comment type="block" pos:line="82" pos:column="13">/* On first visit, modified will be zero, but that's fine - The file is 
            loaded in the vm_construct function.
            */</comment>
            <if pos:line="85" pos:column="13">if <condition pos:line="85" pos:column="16">(<expr><operator pos:line="85" pos:column="17">(<pos:position pos:line="85" pos:column="18"/></operator><name><name pos:line="85" pos:column="18">cache_info<pos:position pos:line="85" pos:column="28"/></name><operator pos:line="85" pos:column="28">-&gt;<pos:position pos:line="85" pos:column="33"/></operator><name pos:line="85" pos:column="30">modified<pos:position pos:line="85" pos:column="38"/></name></name> <operator pos:line="85" pos:column="39">==<pos:position pos:line="85" pos:column="41"/></operator> <name><name pos:line="85" pos:column="42">lua_finfo<pos:position pos:line="85" pos:column="51"/></name><operator pos:line="85" pos:column="51">.<pos:position pos:line="85" pos:column="52"/></operator><name pos:line="85" pos:column="52">mtime<pos:position pos:line="85" pos:column="57"/></name></name> <operator pos:line="85" pos:column="58">&amp;&amp;<pos:position pos:line="85" pos:column="68"/></operator> <name><name pos:line="85" pos:column="61">cache_info<pos:position pos:line="85" pos:column="71"/></name><operator pos:line="85" pos:column="71">-&gt;<pos:position pos:line="85" pos:column="76"/></operator><name pos:line="85" pos:column="73">size<pos:position pos:line="85" pos:column="77"/></name></name> <operator pos:line="85" pos:column="78">==<pos:position pos:line="85" pos:column="80"/></operator> <name><name pos:line="85" pos:column="81">lua_finfo<pos:position pos:line="85" pos:column="90"/></name><operator pos:line="85" pos:column="90">.<pos:position pos:line="85" pos:column="91"/></operator><name pos:line="85" pos:column="91">size<pos:position pos:line="85" pos:column="95"/></name></name><operator pos:line="85" pos:column="95">)<pos:position pos:line="85" pos:column="96"/></operator>
                    <operator pos:line="86" pos:column="21">||<pos:position pos:line="86" pos:column="23"/></operator> <name><name pos:line="86" pos:column="24">cache_info<pos:position pos:line="86" pos:column="34"/></name><operator pos:line="86" pos:column="34">-&gt;<pos:position pos:line="86" pos:column="39"/></operator><name pos:line="86" pos:column="36">modified<pos:position pos:line="86" pos:column="44"/></name></name> <operator pos:line="86" pos:column="45">==<pos:position pos:line="86" pos:column="47"/></operator> <literal type="number" pos:line="86" pos:column="48">0<pos:position pos:line="86" pos:column="49"/></literal></expr>)<pos:position pos:line="86" pos:column="50"/></condition><then pos:line="86" pos:column="50"> <block pos:line="86" pos:column="51">{
                <expr_stmt><expr><name pos:line="87" pos:column="17">tryCache<pos:position pos:line="87" pos:column="25"/></name> <operator pos:line="87" pos:column="26">=<pos:position pos:line="87" pos:column="27"/></operator> <literal type="number" pos:line="87" pos:column="28">1<pos:position pos:line="87" pos:column="29"/></literal></expr>;<pos:position pos:line="87" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="88" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="89" pos:column="13">cache_info<pos:position pos:line="89" pos:column="23"/></name><operator pos:line="89" pos:column="23">-&gt;<pos:position pos:line="89" pos:column="28"/></operator><name pos:line="89" pos:column="25">modified<pos:position pos:line="89" pos:column="33"/></name></name> <operator pos:line="89" pos:column="34">=<pos:position pos:line="89" pos:column="35"/></operator> <name><name pos:line="89" pos:column="36">lua_finfo<pos:position pos:line="89" pos:column="45"/></name><operator pos:line="89" pos:column="45">.<pos:position pos:line="89" pos:column="46"/></operator><name pos:line="89" pos:column="46">mtime<pos:position pos:line="89" pos:column="51"/></name></name></expr>;<pos:position pos:line="89" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="90" pos:column="13">cache_info<pos:position pos:line="90" pos:column="23"/></name><operator pos:line="90" pos:column="23">-&gt;<pos:position pos:line="90" pos:column="28"/></operator><name pos:line="90" pos:column="25">size<pos:position pos:line="90" pos:column="29"/></name></name> <operator pos:line="90" pos:column="30">=<pos:position pos:line="90" pos:column="31"/></operator> <name><name pos:line="90" pos:column="32">lua_finfo<pos:position pos:line="90" pos:column="41"/></name><operator pos:line="90" pos:column="41">.<pos:position pos:line="90" pos:column="42"/></operator><name pos:line="90" pos:column="42">size<pos:position pos:line="90" pos:column="46"/></name></name></expr>;<pos:position pos:line="90" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="91" pos:column="10"/></block></then>
        <elseif pos:line="92" pos:column="9">else <if pos:line="92" pos:column="14">if <condition pos:line="92" pos:column="17">(<expr><name><name pos:line="92" pos:column="18">spec<pos:position pos:line="92" pos:column="22"/></name><operator pos:line="92" pos:column="22">-&gt;<pos:position pos:line="92" pos:column="27"/></operator><name pos:line="92" pos:column="24">codecache<pos:position pos:line="92" pos:column="33"/></name></name> <operator pos:line="92" pos:column="34">==<pos:position pos:line="92" pos:column="36"/></operator> <name pos:line="92" pos:column="37">AP_LUA_CACHE_NEVER<pos:position pos:line="92" pos:column="55"/></name></expr>)<pos:position pos:line="92" pos:column="56"/></condition><then pos:line="92" pos:column="56"> <block pos:line="92" pos:column="57">{
            <if pos:line="93" pos:column="13">if <condition pos:line="93" pos:column="16">(<expr><name><name pos:line="93" pos:column="17">cache_info<pos:position pos:line="93" pos:column="27"/></name><operator pos:line="93" pos:column="27">-&gt;<pos:position pos:line="93" pos:column="32"/></operator><name pos:line="93" pos:column="29">runs<pos:position pos:line="93" pos:column="33"/></name></name> <operator pos:line="93" pos:column="34">==<pos:position pos:line="93" pos:column="36"/></operator> <literal type="number" pos:line="93" pos:column="37">0<pos:position pos:line="93" pos:column="38"/></literal></expr>)<pos:position pos:line="93" pos:column="39"/></condition><then pos:line="93" pos:column="39">
                <block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="17">tryCache<pos:position pos:line="94" pos:column="25"/></name> <operator pos:line="94" pos:column="26">=<pos:position pos:line="94" pos:column="27"/></operator> <literal type="number" pos:line="94" pos:column="28">1<pos:position pos:line="94" pos:column="29"/></literal></expr>;<pos:position pos:line="94" pos:column="30"/></expr_stmt></block></then></if>
        }<pos:position pos:line="95" pos:column="10"/></block></then></if></elseif></if>
        <expr_stmt><expr><name><name pos:line="96" pos:column="9">cache_info<pos:position pos:line="96" pos:column="19"/></name><operator pos:line="96" pos:column="19">-&gt;<pos:position pos:line="96" pos:column="24"/></operator><name pos:line="96" pos:column="21">runs<pos:position pos:line="96" pos:column="25"/></name></name><operator pos:line="96" pos:column="25">++<pos:position pos:line="96" pos:column="27"/></operator></expr>;<pos:position pos:line="96" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="97" pos:column="6"/></block></else></if>
    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><name pos:line="98" pos:column="9">tryCache<pos:position pos:line="98" pos:column="17"/></name> <operator pos:line="98" pos:column="18">==<pos:position pos:line="98" pos:column="20"/></operator> <literal type="number" pos:line="98" pos:column="21">0<pos:position pos:line="98" pos:column="22"/></literal> <operator pos:line="98" pos:column="23">&amp;&amp;<pos:position pos:line="98" pos:column="33"/></operator> <name><name pos:line="98" pos:column="26">spec<pos:position pos:line="98" pos:column="30"/></name><operator pos:line="98" pos:column="30">-&gt;<pos:position pos:line="98" pos:column="35"/></operator><name pos:line="98" pos:column="32">scope<pos:position pos:line="98" pos:column="37"/></name></name> <operator pos:line="98" pos:column="38">!=<pos:position pos:line="98" pos:column="40"/></operator> <name pos:line="98" pos:column="41">AP_LUA_SCOPE_ONCE<pos:position pos:line="98" pos:column="58"/></name></expr>)<pos:position pos:line="98" pos:column="59"/></condition><then pos:line="98" pos:column="59"> <block pos:line="98" pos:column="60">{
        <decl_stmt><decl><type><name pos:line="99" pos:column="9">int<pos:position pos:line="99" pos:column="12"/></name></type> <name pos:line="99" pos:column="13">rc<pos:position pos:line="99" pos:column="15"/></name></decl>;<pos:position pos:line="99" pos:column="16"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="100" pos:column="9">ap_log_perror<pos:position pos:line="100" pos:column="22"/></name><argument_list pos:line="100" pos:column="22">(<argument><expr><name pos:line="100" pos:column="23">APLOG_MARK<pos:position pos:line="100" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="35">APLOG_DEBUG<pos:position pos:line="100" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="100" pos:column="48">0<pos:position pos:line="100" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="51">lifecycle_pool<pos:position pos:line="100" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="100" pos:column="67">APLOGNO<pos:position pos:line="100" pos:column="74"/></name><argument_list pos:line="100" pos:column="74">(<argument><expr><literal type="number" pos:line="100" pos:column="75">02332<pos:position pos:line="100" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="81"/></argument_list></call>
            <literal type="string" pos:line="101" pos:column="13">"(re)loading lua file %s"<pos:position pos:line="101" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="40">spec<pos:position pos:line="101" pos:column="44"/></name><operator pos:line="101" pos:column="44">-&gt;<pos:position pos:line="101" pos:column="49"/></operator><name pos:line="101" pos:column="46">file<pos:position pos:line="101" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name pos:line="102" pos:column="9">rc<pos:position pos:line="102" pos:column="11"/></name> <operator pos:line="102" pos:column="12">=<pos:position pos:line="102" pos:column="13"/></operator> <call><name pos:line="102" pos:column="14">luaL_loadfile<pos:position pos:line="102" pos:column="27"/></name><argument_list pos:line="102" pos:column="27">(<argument><expr><name pos:line="102" pos:column="28">L<pos:position pos:line="102" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="31">spec<pos:position pos:line="102" pos:column="35"/></name><operator pos:line="102" pos:column="35">-&gt;<pos:position pos:line="102" pos:column="40"/></operator><name pos:line="102" pos:column="37">file<pos:position pos:line="102" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="43"/></expr_stmt>
        <if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><name pos:line="103" pos:column="13">rc<pos:position pos:line="103" pos:column="15"/></name> <operator pos:line="103" pos:column="16">!=<pos:position pos:line="103" pos:column="18"/></operator> <literal type="number" pos:line="103" pos:column="19">0<pos:position pos:line="103" pos:column="20"/></literal></expr>)<pos:position pos:line="103" pos:column="21"/></condition><then pos:line="103" pos:column="21"> <block pos:line="103" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="104" pos:column="13">ap_log_perror<pos:position pos:line="104" pos:column="26"/></name><argument_list pos:line="104" pos:column="26">(<argument><expr><name pos:line="104" pos:column="27">APLOG_MARK<pos:position pos:line="104" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="39">APLOG_ERR<pos:position pos:line="104" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="104" pos:column="50">0<pos:position pos:line="104" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="104" pos:column="53">lifecycle_pool<pos:position pos:line="104" pos:column="67"/></name></expr></argument>, <argument><expr><call><name pos:line="104" pos:column="69">APLOGNO<pos:position pos:line="104" pos:column="76"/></name><argument_list pos:line="104" pos:column="76">(<argument><expr><literal type="number" pos:line="104" pos:column="77">02333<pos:position pos:line="104" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="83"/></argument_list></call>
                          <literal type="string" pos:line="105" pos:column="27">"Error loading %s: %s"<pos:position pos:line="105" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="105" pos:column="51">spec<pos:position pos:line="105" pos:column="55"/></name><operator pos:line="105" pos:column="55">-&gt;<pos:position pos:line="105" pos:column="60"/></operator><name pos:line="105" pos:column="57">file<pos:position pos:line="105" pos:column="61"/></name></name></expr></argument>,
                          <argument><expr><ternary><condition><expr><name pos:line="106" pos:column="27">rc<pos:position pos:line="106" pos:column="29"/></name> <operator pos:line="106" pos:column="30">==<pos:position pos:line="106" pos:column="32"/></operator> <name pos:line="106" pos:column="33">LUA_ERRMEM<pos:position pos:line="106" pos:column="43"/></name></expr> ?<pos:position pos:line="106" pos:column="45"/></condition><then pos:line="106" pos:column="45"> <expr><literal type="string" pos:line="106" pos:column="46">"memory allocation error"<pos:position pos:line="106" pos:column="71"/></literal></expr>
                                           <pos:position pos:line="107" pos:column="44"/></then><else pos:line="107" pos:column="44">: <expr><call><name pos:line="107" pos:column="46">lua_tostring<pos:position pos:line="107" pos:column="58"/></name><argument_list pos:line="107" pos:column="58">(<argument><expr><name pos:line="107" pos:column="59">L<pos:position pos:line="107" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="62">0<pos:position pos:line="107" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="64"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="107" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="66"/></expr_stmt>
            <return pos:line="108" pos:column="13">return <expr><literal type="number" pos:line="108" pos:column="20">0<pos:position pos:line="108" pos:column="21"/></literal></expr>;<pos:position pos:line="108" pos:column="22"/></return>
        }<pos:position pos:line="109" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="110" pos:column="9">lua_pcall<pos:position pos:line="110" pos:column="18"/></name><argument_list pos:line="110" pos:column="18">(<argument><expr><name pos:line="110" pos:column="19">L<pos:position pos:line="110" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="110" pos:column="22">0<pos:position pos:line="110" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="110" pos:column="25">LUA_MULTRET<pos:position pos:line="110" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="110" pos:column="38">0<pos:position pos:line="110" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="111" pos:column="6"/></block></then></if>

    <return pos:line="113" pos:column="5">return <expr><name pos:line="113" pos:column="12">L<pos:position pos:line="113" pos:column="13"/></name></expr>;<pos:position pos:line="113" pos:column="14"/></return>
}<pos:position pos:line="114" pos:column="2"/></block></function></unit>

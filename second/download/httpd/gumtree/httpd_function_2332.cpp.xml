<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_2332.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">mpm_service_start<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">apr_pool_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ptemp<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">argc<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                               <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier> <specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type> <name pos:line="2" pos:column="53">argv<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">fprintf<pos:position pos:line="6" pos:column="12"/></name><argument_list pos:line="6" pos:column="12">(<argument><expr><name pos:line="6" pos:column="13">stderr<pos:position pos:line="6" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="6" pos:column="20">"Starting the %s service\n"<pos:position pos:line="6" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="49">mpm_display_name<pos:position pos:line="6" pos:column="65"/></name></expr></argument>)<pos:position pos:line="6" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="67"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">osver<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">dwPlatformId<pos:position pos:line="8" pos:column="27"/></name></name> <operator pos:line="8" pos:column="28">==<pos:position pos:line="8" pos:column="30"/></operator> <name pos:line="8" pos:column="31">VER_PLATFORM_WIN32_NT<pos:position pos:line="8" pos:column="52"/></name></expr>)<pos:position pos:line="8" pos:column="53"/></condition><then pos:line="8" pos:column="53">
    <block pos:line="9" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">SC_HANDLE<pos:position pos:line="10" pos:column="18"/></name></type>   <name pos:line="10" pos:column="21">schService<pos:position pos:line="10" pos:column="31"/></name></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">SC_HANDLE<pos:position pos:line="11" pos:column="18"/></name></type>   <name pos:line="11" pos:column="21">schSCManager<pos:position pos:line="11" pos:column="33"/></name></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>

        <expr_stmt><expr><name pos:line="13" pos:column="9">schSCManager<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <call><name pos:line="13" pos:column="24">OpenSCManager<pos:position pos:line="13" pos:column="37"/></name><argument_list pos:line="13" pos:column="37">(<argument><expr><name pos:line="13" pos:column="38">NULL<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="44">NULL<pos:position pos:line="13" pos:column="48"/></name></expr></argument>, <comment type="block" pos:line="13" pos:column="50">/* local, default database */</comment>
                                     <argument><expr><name pos:line="14" pos:column="38">SC_MANAGER_CONNECT<pos:position pos:line="14" pos:column="56"/></name></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="58"/></expr_stmt>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">schSCManager<pos:position pos:line="15" pos:column="26"/></name></expr>)<pos:position pos:line="15" pos:column="27"/></condition><then pos:line="15" pos:column="27"> <block pos:line="15" pos:column="28">{
            <expr_stmt><expr><name pos:line="16" pos:column="13">rv<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">apr_get_os_error<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">()<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">ap_log_error<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">APLOG_MARK<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">APLOG_ERR<pos:position pos:line="17" pos:column="47"/></name> <operator pos:line="17" pos:column="48">|<pos:position pos:line="17" pos:column="49"/></operator> <name pos:line="17" pos:column="50">APLOG_STARTUP<pos:position pos:line="17" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="65">rv<pos:position pos:line="17" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="69">NULL<pos:position pos:line="17" pos:column="73"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="18" pos:column="26">"Failed to open the WinNT service manager"<pos:position pos:line="18" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="70"/></expr_stmt>
            <return pos:line="19" pos:column="13">return <expr><operator pos:line="19" pos:column="20">(<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">rv<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">)<pos:position pos:line="19" pos:column="24"/></operator></expr>;<pos:position pos:line="19" pos:column="25"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>

<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><name pos:line="22" pos:column="5">APR_HAS_UNICODE_FS<pos:position pos:line="22" pos:column="23"/></name></expr></cpp:if>
        <macro><name pos:line="23" pos:column="9">IF_WIN_OS_IS_UNICODE<pos:position pos:line="23" pos:column="29"/></name></macro>
        <block pos:line="24" pos:column="9">{
            <expr_stmt><expr><name pos:line="25" pos:column="13">schService<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">=<pos:position pos:line="25" pos:column="25"/></operator> <call><name pos:line="25" pos:column="26">OpenServiceW<pos:position pos:line="25" pos:column="38"/></name><argument_list pos:line="25" pos:column="38">(<argument><expr><name pos:line="25" pos:column="39">schSCManager<pos:position pos:line="25" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="53">mpm_service_name_w<pos:position pos:line="25" pos:column="71"/></name></expr></argument>,
                                     <argument><expr><name pos:line="26" pos:column="38">SERVICE_START<pos:position pos:line="26" pos:column="51"/></name> <operator pos:line="26" pos:column="52">|<pos:position pos:line="26" pos:column="53"/></operator> <name pos:line="26" pos:column="54">SERVICE_QUERY_STATUS<pos:position pos:line="26" pos:column="74"/></name></expr></argument>)<pos:position pos:line="26" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="28" pos:column="8">/* APR_HAS_UNICODE_FS */</comment>
<cpp:if pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">if<pos:position pos:line="29" pos:column="4"/></cpp:directive> <expr><name pos:line="29" pos:column="5">APR_HAS_ANSI_FS<pos:position pos:line="29" pos:column="20"/></name></expr></cpp:if>
        <macro><name pos:line="30" pos:column="9">ELSE_WIN_OS_IS_ANSI<pos:position pos:line="30" pos:column="28"/></name></macro>
        <block pos:line="31" pos:column="9">{
            <expr_stmt><expr><name pos:line="32" pos:column="13">schService<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">=<pos:position pos:line="32" pos:column="25"/></operator> <call><name pos:line="32" pos:column="26">OpenService<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><name pos:line="32" pos:column="38">schSCManager<pos:position pos:line="32" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="52">mpm_service_name<pos:position pos:line="32" pos:column="68"/></name></expr></argument>,
                                     <argument><expr><name pos:line="33" pos:column="38">SERVICE_START<pos:position pos:line="33" pos:column="51"/></name> <operator pos:line="33" pos:column="52">|<pos:position pos:line="33" pos:column="53"/></operator> <name pos:line="33" pos:column="54">SERVICE_QUERY_STATUS<pos:position pos:line="33" pos:column="74"/></name></expr></argument>)<pos:position pos:line="33" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">schService<pos:position pos:line="36" pos:column="24"/></name></expr>)<pos:position pos:line="36" pos:column="25"/></condition><then pos:line="36" pos:column="25"> <block pos:line="36" pos:column="26">{
            <expr_stmt><expr><name pos:line="37" pos:column="13">rv<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <call><name pos:line="37" pos:column="18">apr_get_os_error<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">()<pos:position pos:line="37" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">ap_log_error<pos:position pos:line="38" pos:column="25"/></name><argument_list pos:line="38" pos:column="25">(<argument><expr><name pos:line="38" pos:column="26">APLOG_MARK<pos:position pos:line="38" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="38">APLOG_ERR<pos:position pos:line="38" pos:column="47"/></name> <operator pos:line="38" pos:column="48">|<pos:position pos:line="38" pos:column="49"/></operator> <name pos:line="38" pos:column="50">APLOG_STARTUP<pos:position pos:line="38" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="65">rv<pos:position pos:line="38" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="69">NULL<pos:position pos:line="38" pos:column="73"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="39" pos:column="26">"%s: Failed to open the service."<pos:position pos:line="39" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="61">mpm_display_name<pos:position pos:line="39" pos:column="77"/></name></expr></argument>)<pos:position pos:line="39" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">CloseServiceHandle<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">schSCManager<pos:position pos:line="40" pos:column="44"/></name></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>
            <return pos:line="41" pos:column="13">return <expr><operator pos:line="41" pos:column="20">(<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">rv<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">)<pos:position pos:line="41" pos:column="24"/></operator></expr>;<pos:position pos:line="41" pos:column="25"/></return>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>

        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><call><name pos:line="44" pos:column="13">QueryServiceStatus<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><name pos:line="44" pos:column="32">schService<pos:position pos:line="44" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="44">&amp;<pos:position pos:line="44" pos:column="49"/></operator><name><name pos:line="44" pos:column="45">globdat<pos:position pos:line="44" pos:column="52"/></name><operator pos:line="44" pos:column="52">.<pos:position pos:line="44" pos:column="53"/></operator><name pos:line="44" pos:column="53">ssStatus<pos:position pos:line="44" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="62"/></argument_list></call>
            <operator pos:line="45" pos:column="13">&amp;&amp;<pos:position pos:line="45" pos:column="23"/></operator> <operator pos:line="45" pos:column="16">(<pos:position pos:line="45" pos:column="17"/></operator><name><name pos:line="45" pos:column="17">globdat<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">.<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="25">ssStatus<pos:position pos:line="45" pos:column="33"/></name><operator pos:line="45" pos:column="33">.<pos:position pos:line="45" pos:column="34"/></operator><name pos:line="45" pos:column="34">dwCurrentState<pos:position pos:line="45" pos:column="48"/></name></name> <operator pos:line="45" pos:column="49">==<pos:position pos:line="45" pos:column="51"/></operator> <name pos:line="45" pos:column="52">SERVICE_RUNNING<pos:position pos:line="45" pos:column="67"/></name><operator pos:line="45" pos:column="67">)<pos:position pos:line="45" pos:column="68"/></operator></expr>)<pos:position pos:line="45" pos:column="69"/></condition><then pos:line="45" pos:column="69"> <block pos:line="45" pos:column="70">{
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">ap_log_error<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><name pos:line="46" pos:column="26">APLOG_MARK<pos:position pos:line="46" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="38">APLOG_ERR<pos:position pos:line="46" pos:column="47"/></name> <operator pos:line="46" pos:column="48">|<pos:position pos:line="46" pos:column="49"/></operator> <name pos:line="46" pos:column="50">APLOG_STARTUP<pos:position pos:line="46" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="65">0<pos:position pos:line="46" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="68">NULL<pos:position pos:line="46" pos:column="72"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="47" pos:column="26">"Service %s is already started!"<pos:position pos:line="47" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="60">mpm_display_name<pos:position pos:line="47" pos:column="76"/></name></expr></argument>)<pos:position pos:line="47" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="78"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">CloseServiceHandle<pos:position pos:line="48" pos:column="31"/></name><argument_list pos:line="48" pos:column="31">(<argument><expr><name pos:line="48" pos:column="32">schService<pos:position pos:line="48" pos:column="42"/></name></expr></argument>)<pos:position pos:line="48" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">CloseServiceHandle<pos:position pos:line="49" pos:column="31"/></name><argument_list pos:line="49" pos:column="31">(<argument><expr><name pos:line="49" pos:column="32">schSCManager<pos:position pos:line="49" pos:column="44"/></name></expr></argument>)<pos:position pos:line="49" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="46"/></expr_stmt>
            <return pos:line="50" pos:column="13">return <expr><literal type="number" pos:line="50" pos:column="20">0<pos:position pos:line="50" pos:column="21"/></literal></expr>;<pos:position pos:line="50" pos:column="22"/></return>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="53" pos:column="9">rv<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <name pos:line="53" pos:column="14">APR_EINIT<pos:position pos:line="53" pos:column="23"/></name></expr>;<pos:position pos:line="53" pos:column="24"/></expr_stmt>
<cpp:if pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">if<pos:position pos:line="54" pos:column="4"/></cpp:directive> <expr><name pos:line="54" pos:column="5">APR_HAS_UNICODE_FS<pos:position pos:line="54" pos:column="23"/></name></expr></cpp:if>
        <macro><name pos:line="55" pos:column="9">IF_WIN_OS_IS_UNICODE<pos:position pos:line="55" pos:column="29"/></name></macro>
        <block pos:line="56" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="57" pos:column="13">LPWSTR<pos:position pos:line="57" pos:column="19"/></name> <modifier pos:line="57" pos:column="20">*<pos:position pos:line="57" pos:column="21"/></modifier></type><name pos:line="57" pos:column="21">start_argv_w<pos:position pos:line="57" pos:column="33"/></name> <init pos:line="57" pos:column="34">= <expr><call><name pos:line="57" pos:column="36">malloc<pos:position pos:line="57" pos:column="42"/></name><argument_list pos:line="57" pos:column="42">(<argument><expr><operator pos:line="57" pos:column="43">(<pos:position pos:line="57" pos:column="44"/></operator><name pos:line="57" pos:column="44">argc<pos:position pos:line="57" pos:column="48"/></name> <operator pos:line="57" pos:column="49">+<pos:position pos:line="57" pos:column="50"/></operator> <literal type="number" pos:line="57" pos:column="51">1<pos:position pos:line="57" pos:column="52"/></literal><operator pos:line="57" pos:column="52">)<pos:position pos:line="57" pos:column="53"/></operator> <operator pos:line="57" pos:column="54">*<pos:position pos:line="57" pos:column="55"/></operator> <sizeof pos:line="57" pos:column="56">sizeof<argument_list pos:line="57" pos:column="62">(<argument><expr><name pos:line="57" pos:column="63">LPCWSTR<pos:position pos:line="57" pos:column="70"/></name></expr></argument>)<pos:position pos:line="57" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="57" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="57" pos:column="73"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="58" pos:column="13">int<pos:position pos:line="58" pos:column="16"/></name></type> <name pos:line="58" pos:column="17">i<pos:position pos:line="58" pos:column="18"/></name></decl>;<pos:position pos:line="58" pos:column="19"/></decl_stmt>

            <for pos:line="60" pos:column="13">for <control pos:line="60" pos:column="17">(<init><expr><name pos:line="60" pos:column="18">i<pos:position pos:line="60" pos:column="19"/></name> <operator pos:line="60" pos:column="20">=<pos:position pos:line="60" pos:column="21"/></operator> <literal type="number" pos:line="60" pos:column="22">0<pos:position pos:line="60" pos:column="23"/></literal></expr>;<pos:position pos:line="60" pos:column="24"/></init> <condition><expr><name pos:line="60" pos:column="25">i<pos:position pos:line="60" pos:column="26"/></name> <operator pos:line="60" pos:column="27">&lt;<pos:position pos:line="60" pos:column="31"/></operator> <name pos:line="60" pos:column="29">argc<pos:position pos:line="60" pos:column="33"/></name></expr>;<pos:position pos:line="60" pos:column="34"/></condition> <incr><expr><operator pos:line="60" pos:column="35">++<pos:position pos:line="60" pos:column="37"/></operator><name pos:line="60" pos:column="37">i<pos:position pos:line="60" pos:column="38"/></name></expr></incr>)<pos:position pos:line="60" pos:column="39"/></control>
            <block pos:line="61" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="62" pos:column="17">apr_size_t<pos:position pos:line="62" pos:column="27"/></name></type> <name pos:line="62" pos:column="28">slen<pos:position pos:line="62" pos:column="32"/></name> <init pos:line="62" pos:column="33">= <expr><call><name pos:line="62" pos:column="35">strlen<pos:position pos:line="62" pos:column="41"/></name><argument_list pos:line="62" pos:column="41">(<argument><expr><name><name pos:line="62" pos:column="42">argv<pos:position pos:line="62" pos:column="46"/></name><index pos:line="62" pos:column="46">[<expr><name pos:line="62" pos:column="47">i<pos:position pos:line="62" pos:column="48"/></name></expr>]<pos:position pos:line="62" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="62" pos:column="50"/></argument_list></call> <operator pos:line="62" pos:column="51">+<pos:position pos:line="62" pos:column="52"/></operator> <literal type="number" pos:line="62" pos:column="53">1<pos:position pos:line="62" pos:column="54"/></literal></expr></init></decl>;<pos:position pos:line="62" pos:column="55"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="63" pos:column="17">apr_size_t<pos:position pos:line="63" pos:column="27"/></name></type> <name pos:line="63" pos:column="28">wslen<pos:position pos:line="63" pos:column="33"/></name> <init pos:line="63" pos:column="34">= <expr><name pos:line="63" pos:column="36">slen<pos:position pos:line="63" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="63" pos:column="41"/></decl_stmt>
                <expr_stmt><expr><name><name pos:line="64" pos:column="17">start_argv_w<pos:position pos:line="64" pos:column="29"/></name><index pos:line="64" pos:column="29">[<expr><name pos:line="64" pos:column="30">i<pos:position pos:line="64" pos:column="31"/></name></expr>]<pos:position pos:line="64" pos:column="32"/></index></name> <operator pos:line="64" pos:column="33">=<pos:position pos:line="64" pos:column="34"/></operator> <call><name pos:line="64" pos:column="35">malloc<pos:position pos:line="64" pos:column="41"/></name><argument_list pos:line="64" pos:column="41">(<argument><expr><name pos:line="64" pos:column="42">wslen<pos:position pos:line="64" pos:column="47"/></name> <operator pos:line="64" pos:column="48">*<pos:position pos:line="64" pos:column="49"/></operator> <sizeof pos:line="64" pos:column="50">sizeof<argument_list pos:line="64" pos:column="56">(<argument><expr><name pos:line="64" pos:column="57">WCHAR<pos:position pos:line="64" pos:column="62"/></name></expr></argument>)<pos:position pos:line="64" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="64" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="65"/></expr_stmt>
                <expr_stmt><expr><name pos:line="65" pos:column="17">rv<pos:position pos:line="65" pos:column="19"/></name> <operator pos:line="65" pos:column="20">=<pos:position pos:line="65" pos:column="21"/></operator> <call><name pos:line="65" pos:column="22">apr_conv_utf8_to_ucs2<pos:position pos:line="65" pos:column="43"/></name><argument_list pos:line="65" pos:column="43">(<argument><expr><name><name pos:line="65" pos:column="44">argv<pos:position pos:line="65" pos:column="48"/></name><index pos:line="65" pos:column="48">[<expr><name pos:line="65" pos:column="49">i<pos:position pos:line="65" pos:column="50"/></name></expr>]<pos:position pos:line="65" pos:column="51"/></index></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="53">&amp;<pos:position pos:line="65" pos:column="58"/></operator><name pos:line="65" pos:column="54">slen<pos:position pos:line="65" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="60">start_argv_w<pos:position pos:line="65" pos:column="72"/></name><index pos:line="65" pos:column="72">[<expr><name pos:line="65" pos:column="73">i<pos:position pos:line="65" pos:column="74"/></name></expr>]<pos:position pos:line="65" pos:column="75"/></index></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="77">&amp;<pos:position pos:line="65" pos:column="82"/></operator><name pos:line="65" pos:column="78">wslen<pos:position pos:line="65" pos:column="83"/></name></expr></argument>)<pos:position pos:line="65" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="85"/></expr_stmt>
                <if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><name pos:line="66" pos:column="21">rv<pos:position pos:line="66" pos:column="23"/></name> <operator pos:line="66" pos:column="24">!=<pos:position pos:line="66" pos:column="26"/></operator> <name pos:line="66" pos:column="27">APR_SUCCESS<pos:position pos:line="66" pos:column="38"/></name></expr>)<pos:position pos:line="66" pos:column="39"/></condition><then pos:line="66" pos:column="39">
                    <block type="pseudo"><return pos:line="67" pos:column="21">return <expr><name pos:line="67" pos:column="28">rv<pos:position pos:line="67" pos:column="30"/></name></expr>;<pos:position pos:line="67" pos:column="31"/></return></block></then>
                <elseif pos:line="68" pos:column="17">else <if pos:line="68" pos:column="22">if <condition pos:line="68" pos:column="25">(<expr><name pos:line="68" pos:column="26">slen<pos:position pos:line="68" pos:column="30"/></name></expr>)<pos:position pos:line="68" pos:column="31"/></condition><then pos:line="68" pos:column="31">
                    <block type="pseudo"><return pos:line="69" pos:column="21">return <expr><name pos:line="69" pos:column="28">APR_ENAMETOOLONG<pos:position pos:line="69" pos:column="44"/></name></expr>;<pos:position pos:line="69" pos:column="45"/></return></block></then></if></elseif></if>
            }<pos:position pos:line="70" pos:column="14"/></block></for>
            <expr_stmt><expr><name><name pos:line="71" pos:column="13">start_argv_w<pos:position pos:line="71" pos:column="25"/></name><index pos:line="71" pos:column="25">[<expr><name pos:line="71" pos:column="26">argc<pos:position pos:line="71" pos:column="30"/></name></expr>]<pos:position pos:line="71" pos:column="31"/></index></name> <operator pos:line="71" pos:column="32">=<pos:position pos:line="71" pos:column="33"/></operator> <name pos:line="71" pos:column="34">NULL<pos:position pos:line="71" pos:column="38"/></name></expr>;<pos:position pos:line="71" pos:column="39"/></expr_stmt>

            <if pos:line="73" pos:column="13">if <condition pos:line="73" pos:column="16">(<expr><call><name pos:line="73" pos:column="17">StartServiceW<pos:position pos:line="73" pos:column="30"/></name><argument_list pos:line="73" pos:column="30">(<argument><expr><name pos:line="73" pos:column="31">schService<pos:position pos:line="73" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="43">argc<pos:position pos:line="73" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="49">start_argv_w<pos:position pos:line="73" pos:column="61"/></name></expr></argument>)<pos:position pos:line="73" pos:column="62"/></argument_list></call>
                <operator pos:line="74" pos:column="17">&amp;&amp;<pos:position pos:line="74" pos:column="27"/></operator> <call><name pos:line="74" pos:column="20">signal_service_transition<pos:position pos:line="74" pos:column="45"/></name><argument_list pos:line="74" pos:column="45">(<argument><expr><name pos:line="74" pos:column="46">schService<pos:position pos:line="74" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="58">0<pos:position pos:line="74" pos:column="59"/></literal></expr></argument>, <comment type="block" pos:line="74" pos:column="61">/* test only */</comment>
                                             <argument><expr><name pos:line="75" pos:column="46">SERVICE_START_PENDING<pos:position pos:line="75" pos:column="67"/></name></expr></argument>,
                                             <argument><expr><name pos:line="76" pos:column="46">SERVICE_RUNNING<pos:position pos:line="76" pos:column="61"/></name></expr></argument>)<pos:position pos:line="76" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="63"/></condition><then pos:line="76" pos:column="63">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="21">rv<pos:position pos:line="77" pos:column="23"/></name> <operator pos:line="77" pos:column="24">=<pos:position pos:line="77" pos:column="25"/></operator> <name pos:line="77" pos:column="26">APR_SUCCESS<pos:position pos:line="77" pos:column="37"/></name></expr>;<pos:position pos:line="77" pos:column="38"/></expr_stmt></block></then></if>
        }<pos:position pos:line="78" pos:column="10"/></block>
<cpp:endif pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">endif<pos:position pos:line="79" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="79" pos:column="8">/* APR_HAS_UNICODE_FS */</comment>
<cpp:if pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">if<pos:position pos:line="80" pos:column="4"/></cpp:directive> <expr><name pos:line="80" pos:column="5">APR_HAS_ANSI_FS<pos:position pos:line="80" pos:column="20"/></name></expr></cpp:if>
        <macro><name pos:line="81" pos:column="9">ELSE_WIN_OS_IS_ANSI<pos:position pos:line="81" pos:column="28"/></name></macro>
        <block pos:line="82" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="83" pos:column="13">char<pos:position pos:line="83" pos:column="17"/></name> <modifier pos:line="83" pos:column="18">*<pos:position pos:line="83" pos:column="19"/></modifier><modifier pos:line="83" pos:column="19">*<pos:position pos:line="83" pos:column="20"/></modifier></type><name pos:line="83" pos:column="20">start_argv<pos:position pos:line="83" pos:column="30"/></name> <init pos:line="83" pos:column="31">= <expr><call><name pos:line="83" pos:column="33">malloc<pos:position pos:line="83" pos:column="39"/></name><argument_list pos:line="83" pos:column="39">(<argument><expr><operator pos:line="83" pos:column="40">(<pos:position pos:line="83" pos:column="41"/></operator><name pos:line="83" pos:column="41">argc<pos:position pos:line="83" pos:column="45"/></name> <operator pos:line="83" pos:column="46">+<pos:position pos:line="83" pos:column="47"/></operator> <literal type="number" pos:line="83" pos:column="48">1<pos:position pos:line="83" pos:column="49"/></literal><operator pos:line="83" pos:column="49">)<pos:position pos:line="83" pos:column="50"/></operator> <operator pos:line="83" pos:column="51">*<pos:position pos:line="83" pos:column="52"/></operator> <sizeof pos:line="83" pos:column="53">sizeof<argument_list pos:line="83" pos:column="59">(<argument><expr><specifier pos:line="83" pos:column="60">const<pos:position pos:line="83" pos:column="65"/></specifier> <name pos:line="83" pos:column="66">char<pos:position pos:line="83" pos:column="70"/></name> <operator pos:line="83" pos:column="71">*<pos:position pos:line="83" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="83" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="83" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="83" pos:column="75"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="84" pos:column="13">memcpy<pos:position pos:line="84" pos:column="19"/></name><argument_list pos:line="84" pos:column="19">(<argument><expr><name pos:line="84" pos:column="20">start_argv<pos:position pos:line="84" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="32">argv<pos:position pos:line="84" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="38">argc<pos:position pos:line="84" pos:column="42"/></name> <operator pos:line="84" pos:column="43">*<pos:position pos:line="84" pos:column="44"/></operator> <sizeof pos:line="84" pos:column="45">sizeof<argument_list pos:line="84" pos:column="51">(<argument><expr><specifier pos:line="84" pos:column="52">const<pos:position pos:line="84" pos:column="57"/></specifier> <name pos:line="84" pos:column="58">char<pos:position pos:line="84" pos:column="62"/></name> <operator pos:line="84" pos:column="63">*<pos:position pos:line="84" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="84" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="84" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="85" pos:column="13">start_argv<pos:position pos:line="85" pos:column="23"/></name><index pos:line="85" pos:column="23">[<expr><name pos:line="85" pos:column="24">argc<pos:position pos:line="85" pos:column="28"/></name></expr>]<pos:position pos:line="85" pos:column="29"/></index></name> <operator pos:line="85" pos:column="30">=<pos:position pos:line="85" pos:column="31"/></operator> <name pos:line="85" pos:column="32">NULL<pos:position pos:line="85" pos:column="36"/></name></expr>;<pos:position pos:line="85" pos:column="37"/></expr_stmt>

            <if pos:line="87" pos:column="13">if <condition pos:line="87" pos:column="16">(<expr><call><name pos:line="87" pos:column="17">StartService<pos:position pos:line="87" pos:column="29"/></name><argument_list pos:line="87" pos:column="29">(<argument><expr><name pos:line="87" pos:column="30">schService<pos:position pos:line="87" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="42">argc<pos:position pos:line="87" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="48">start_argv<pos:position pos:line="87" pos:column="58"/></name></expr></argument>)<pos:position pos:line="87" pos:column="59"/></argument_list></call>
                <operator pos:line="88" pos:column="17">&amp;&amp;<pos:position pos:line="88" pos:column="27"/></operator> <call><name pos:line="88" pos:column="20">signal_service_transition<pos:position pos:line="88" pos:column="45"/></name><argument_list pos:line="88" pos:column="45">(<argument><expr><name pos:line="88" pos:column="46">schService<pos:position pos:line="88" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="58">0<pos:position pos:line="88" pos:column="59"/></literal></expr></argument>, <comment type="block" pos:line="88" pos:column="61">/* test only */</comment>
                                             <argument><expr><name pos:line="89" pos:column="46">SERVICE_START_PENDING<pos:position pos:line="89" pos:column="67"/></name></expr></argument>,
                                             <argument><expr><name pos:line="90" pos:column="46">SERVICE_RUNNING<pos:position pos:line="90" pos:column="61"/></name></expr></argument>)<pos:position pos:line="90" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="63"/></condition><then pos:line="90" pos:column="63">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="91" pos:column="21">rv<pos:position pos:line="91" pos:column="23"/></name> <operator pos:line="91" pos:column="24">=<pos:position pos:line="91" pos:column="25"/></operator> <name pos:line="91" pos:column="26">APR_SUCCESS<pos:position pos:line="91" pos:column="37"/></name></expr>;<pos:position pos:line="91" pos:column="38"/></expr_stmt></block></then></if>
        }<pos:position pos:line="92" pos:column="10"/></block>
<cpp:endif pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">endif<pos:position pos:line="93" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><name pos:line="94" pos:column="13">rv<pos:position pos:line="94" pos:column="15"/></name> <operator pos:line="94" pos:column="16">!=<pos:position pos:line="94" pos:column="18"/></operator> <name pos:line="94" pos:column="19">APR_SUCCESS<pos:position pos:line="94" pos:column="30"/></name></expr>)<pos:position pos:line="94" pos:column="31"/></condition><then pos:line="94" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="13">rv<pos:position pos:line="95" pos:column="15"/></name> <operator pos:line="95" pos:column="16">=<pos:position pos:line="95" pos:column="17"/></operator> <call><name pos:line="95" pos:column="18">apr_get_os_error<pos:position pos:line="95" pos:column="34"/></name><argument_list pos:line="95" pos:column="34">()<pos:position pos:line="95" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="37"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="97" pos:column="9">CloseServiceHandle<pos:position pos:line="97" pos:column="27"/></name><argument_list pos:line="97" pos:column="27">(<argument><expr><name pos:line="97" pos:column="28">schService<pos:position pos:line="97" pos:column="38"/></name></expr></argument>)<pos:position pos:line="97" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="98" pos:column="9">CloseServiceHandle<pos:position pos:line="98" pos:column="27"/></name><argument_list pos:line="98" pos:column="27">(<argument><expr><name pos:line="98" pos:column="28">schSCManager<pos:position pos:line="98" pos:column="40"/></name></expr></argument>)<pos:position pos:line="98" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="99" pos:column="6"/></block></then>
    <else pos:line="100" pos:column="5">else <comment type="block" pos:line="100" pos:column="10">/* osver.dwPlatformId != VER_PLATFORM_WIN32_NT */</comment>
    <block pos:line="101" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="102" pos:column="9">STARTUPINFO<pos:position pos:line="102" pos:column="20"/></name></type> <name pos:line="102" pos:column="21">si<pos:position pos:line="102" pos:column="23"/></name></decl>;<pos:position pos:line="102" pos:column="24"/></decl_stmt>           <comment type="block" pos:line="102" pos:column="35">/* Filled in prior to call to CreateProcess */</comment>
        <decl_stmt><decl><type><name pos:line="103" pos:column="9">PROCESS_INFORMATION<pos:position pos:line="103" pos:column="28"/></name></type> <name pos:line="103" pos:column="29">pi<pos:position pos:line="103" pos:column="31"/></name></decl>;<pos:position pos:line="103" pos:column="32"/></decl_stmt>   <comment type="block" pos:line="103" pos:column="35">/* filled in on call to CreateProcess */</comment>
        <decl_stmt><decl><type><name pos:line="104" pos:column="9">char<pos:position pos:line="104" pos:column="13"/></name></type> <name><name pos:line="104" pos:column="14">exe_path<pos:position pos:line="104" pos:column="22"/></name><index pos:line="104" pos:column="22">[<expr><name pos:line="104" pos:column="23">MAX_PATH<pos:position pos:line="104" pos:column="31"/></name></expr>]<pos:position pos:line="104" pos:column="32"/></index></name></decl>;<pos:position pos:line="104" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="105" pos:column="9">char<pos:position pos:line="105" pos:column="13"/></name></type> <name><name pos:line="105" pos:column="14">exe_cmd<pos:position pos:line="105" pos:column="21"/></name><index pos:line="105" pos:column="21">[<expr><name pos:line="105" pos:column="22">MAX_PATH<pos:position pos:line="105" pos:column="30"/></name> <operator pos:line="105" pos:column="31">*<pos:position pos:line="105" pos:column="32"/></operator> <literal type="number" pos:line="105" pos:column="33">4<pos:position pos:line="105" pos:column="34"/></literal></expr>]<pos:position pos:line="105" pos:column="35"/></index></name></decl>;<pos:position pos:line="105" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="106" pos:column="9">char<pos:position pos:line="106" pos:column="13"/></name> <modifier pos:line="106" pos:column="14">*<pos:position pos:line="106" pos:column="15"/></modifier></type><name pos:line="106" pos:column="15">next_arg<pos:position pos:line="106" pos:column="23"/></name></decl>;<pos:position pos:line="106" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="107" pos:column="9">int<pos:position pos:line="107" pos:column="12"/></name></type> <name pos:line="107" pos:column="13">i<pos:position pos:line="107" pos:column="14"/></name></decl>;<pos:position pos:line="107" pos:column="15"/></decl_stmt>

        <comment type="block" pos:line="109" pos:column="9">/* Locate the active top level window named service_name
         * provided the class is ApacheWin95ServiceMonitor
         */</comment>
        <if pos:line="112" pos:column="9">if <condition pos:line="112" pos:column="12">(<expr><call><name pos:line="112" pos:column="13">FindWindow<pos:position pos:line="112" pos:column="23"/></name><argument_list pos:line="112" pos:column="23">(<argument><expr><literal type="string" pos:line="112" pos:column="24">"ApacheWin95ServiceMonitor"<pos:position pos:line="112" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="53">mpm_service_name<pos:position pos:line="112" pos:column="69"/></name></expr></argument>)<pos:position pos:line="112" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="112" pos:column="71"/></condition><then pos:line="112" pos:column="71"> <block pos:line="112" pos:column="72">{
            <expr_stmt><expr><call><name pos:line="113" pos:column="13">ap_log_error<pos:position pos:line="113" pos:column="25"/></name><argument_list pos:line="113" pos:column="25">(<argument><expr><name pos:line="113" pos:column="26">APLOG_MARK<pos:position pos:line="113" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="38">APLOG_ERR<pos:position pos:line="113" pos:column="47"/></name> <operator pos:line="113" pos:column="48">|<pos:position pos:line="113" pos:column="49"/></operator> <name pos:line="113" pos:column="50">APLOG_STARTUP<pos:position pos:line="113" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="113" pos:column="65">0<pos:position pos:line="113" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="113" pos:column="68">NULL<pos:position pos:line="113" pos:column="72"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="114" pos:column="26">"Service %s is already started!"<pos:position pos:line="114" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="60">mpm_display_name<pos:position pos:line="114" pos:column="76"/></name></expr></argument>)<pos:position pos:line="114" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="78"/></expr_stmt>
            <return pos:line="115" pos:column="13">return <expr><literal type="number" pos:line="115" pos:column="20">0<pos:position pos:line="115" pos:column="21"/></literal></expr>;<pos:position pos:line="115" pos:column="22"/></return>
        }<pos:position pos:line="116" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="118" pos:column="9">/* This may not appear intuitive, but Win9x will not allow a process
         * to detach from the console without releasing the entire console.
         * Ergo, we must spawn a new process for the service to get back our
         * console window.
         * The config is pre-flighted, so there should be no danger of failure.
         */</comment>

        <if pos:line="125" pos:column="9">if <condition pos:line="125" pos:column="12">(<expr><call><name pos:line="125" pos:column="13">GetModuleFileName<pos:position pos:line="125" pos:column="30"/></name><argument_list pos:line="125" pos:column="30">(<argument><expr><name pos:line="125" pos:column="31">NULL<pos:position pos:line="125" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="37">exe_path<pos:position pos:line="125" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="125" pos:column="47">sizeof<argument_list pos:line="125" pos:column="53">(<argument><expr><name pos:line="125" pos:column="54">exe_path<pos:position pos:line="125" pos:column="62"/></name></expr></argument>)<pos:position pos:line="125" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="125" pos:column="64"/></argument_list></call> <operator pos:line="125" pos:column="65">==<pos:position pos:line="125" pos:column="67"/></operator> <literal type="number" pos:line="125" pos:column="68">0<pos:position pos:line="125" pos:column="69"/></literal></expr>)<pos:position pos:line="125" pos:column="70"/></condition><then pos:line="125" pos:column="70">
        <block pos:line="126" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="127" pos:column="13">apr_status_t<pos:position pos:line="127" pos:column="25"/></name></type> <name pos:line="127" pos:column="26">rv<pos:position pos:line="127" pos:column="28"/></name> <init pos:line="127" pos:column="29">= <expr><call><name pos:line="127" pos:column="31">apr_get_os_error<pos:position pos:line="127" pos:column="47"/></name><argument_list pos:line="127" pos:column="47">()<pos:position pos:line="127" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="127" pos:column="50"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="128" pos:column="13">ap_log_error<pos:position pos:line="128" pos:column="25"/></name><argument_list pos:line="128" pos:column="25">(<argument><expr><name pos:line="128" pos:column="26">APLOG_MARK<pos:position pos:line="128" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="38">APLOG_ERR<pos:position pos:line="128" pos:column="47"/></name> <operator pos:line="128" pos:column="48">|<pos:position pos:line="128" pos:column="49"/></operator> <name pos:line="128" pos:column="50">APLOG_STARTUP<pos:position pos:line="128" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="65">rv<pos:position pos:line="128" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="69">NULL<pos:position pos:line="128" pos:column="73"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="129" pos:column="26">"GetModuleFileName failed"<pos:position pos:line="129" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="54"/></expr_stmt>
            <return pos:line="130" pos:column="13">return <expr><name pos:line="130" pos:column="20">rv<pos:position pos:line="130" pos:column="22"/></name></expr>;<pos:position pos:line="130" pos:column="23"/></return>
        }<pos:position pos:line="131" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="133" pos:column="9">apr_snprintf<pos:position pos:line="133" pos:column="21"/></name><argument_list pos:line="133" pos:column="21">(<argument><expr><name pos:line="133" pos:column="22">exe_cmd<pos:position pos:line="133" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="133" pos:column="31">sizeof<argument_list pos:line="133" pos:column="37">(<argument><expr><name pos:line="133" pos:column="38">exe_cmd<pos:position pos:line="133" pos:column="45"/></name></expr></argument>)<pos:position pos:line="133" pos:column="46"/></argument_list></sizeof></expr></argument>,
                     <argument><expr><literal type="string" pos:line="134" pos:column="22">"\"%s\" -n %s -k runservice"<pos:position pos:line="134" pos:column="50"/></literal></expr></argument>,
                     <argument><expr><name pos:line="135" pos:column="22">exe_path<pos:position pos:line="135" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="32">mpm_service_name<pos:position pos:line="135" pos:column="48"/></name></expr></argument>)<pos:position pos:line="135" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="136" pos:column="9">next_arg<pos:position pos:line="136" pos:column="17"/></name> <operator pos:line="136" pos:column="18">=<pos:position pos:line="136" pos:column="19"/></operator> <call><name pos:line="136" pos:column="20">strchr<pos:position pos:line="136" pos:column="26"/></name><argument_list pos:line="136" pos:column="26">(<argument><expr><name pos:line="136" pos:column="27">exe_cmd<pos:position pos:line="136" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="136" pos:column="36">'\0'<pos:position pos:line="136" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="42"/></expr_stmt>
        <for pos:line="137" pos:column="9">for <control pos:line="137" pos:column="13">(<init><expr><name pos:line="137" pos:column="14">i<pos:position pos:line="137" pos:column="15"/></name> <operator pos:line="137" pos:column="16">=<pos:position pos:line="137" pos:column="17"/></operator> <literal type="number" pos:line="137" pos:column="18">0<pos:position pos:line="137" pos:column="19"/></literal></expr>;<pos:position pos:line="137" pos:column="20"/></init> <condition><expr><name pos:line="137" pos:column="21">i<pos:position pos:line="137" pos:column="22"/></name> <operator pos:line="137" pos:column="23">&lt;<pos:position pos:line="137" pos:column="27"/></operator> <name pos:line="137" pos:column="25">argc<pos:position pos:line="137" pos:column="29"/></name></expr>;<pos:position pos:line="137" pos:column="30"/></condition> <incr><expr><operator pos:line="137" pos:column="31">++<pos:position pos:line="137" pos:column="33"/></operator><name pos:line="137" pos:column="33">i<pos:position pos:line="137" pos:column="34"/></name></expr></incr>)<pos:position pos:line="137" pos:column="35"/></control> <block pos:line="137" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="138" pos:column="13">apr_snprintf<pos:position pos:line="138" pos:column="25"/></name><argument_list pos:line="138" pos:column="25">(<argument><expr><name pos:line="138" pos:column="26">next_arg<pos:position pos:line="138" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="138" pos:column="36">sizeof<argument_list pos:line="138" pos:column="42">(<argument><expr><name pos:line="138" pos:column="43">exe_cmd<pos:position pos:line="138" pos:column="50"/></name></expr></argument>)<pos:position pos:line="138" pos:column="51"/></argument_list></sizeof> <operator pos:line="138" pos:column="52">-<pos:position pos:line="138" pos:column="53"/></operator> <operator pos:line="138" pos:column="54">(<pos:position pos:line="138" pos:column="55"/></operator><name pos:line="138" pos:column="55">next_arg<pos:position pos:line="138" pos:column="63"/></name> <operator pos:line="138" pos:column="64">-<pos:position pos:line="138" pos:column="65"/></operator> <name pos:line="138" pos:column="66">exe_cmd<pos:position pos:line="138" pos:column="73"/></name><operator pos:line="138" pos:column="73">)<pos:position pos:line="138" pos:column="74"/></operator></expr></argument>,
                         <argument><expr><literal type="string" pos:line="139" pos:column="26">" \"%s\""<pos:position pos:line="139" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="139" pos:column="37">argv<pos:position pos:line="139" pos:column="41"/></name><index pos:line="139" pos:column="41">[<expr><name pos:line="139" pos:column="42">i<pos:position pos:line="139" pos:column="43"/></name></expr>]<pos:position pos:line="139" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="139" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name pos:line="140" pos:column="13">next_arg<pos:position pos:line="140" pos:column="21"/></name> <operator pos:line="140" pos:column="22">=<pos:position pos:line="140" pos:column="23"/></operator> <call><name pos:line="140" pos:column="24">strchr<pos:position pos:line="140" pos:column="30"/></name><argument_list pos:line="140" pos:column="30">(<argument><expr><name pos:line="140" pos:column="31">exe_cmd<pos:position pos:line="140" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="140" pos:column="40">'\0'<pos:position pos:line="140" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="141" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="143" pos:column="9">memset<pos:position pos:line="143" pos:column="15"/></name><argument_list pos:line="143" pos:column="15">(<argument><expr><operator pos:line="143" pos:column="16">&amp;<pos:position pos:line="143" pos:column="21"/></operator><name pos:line="143" pos:column="17">si<pos:position pos:line="143" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="143" pos:column="21">0<pos:position pos:line="143" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="143" pos:column="24">sizeof<argument_list pos:line="143" pos:column="30">(<argument><expr><name pos:line="143" pos:column="31">si<pos:position pos:line="143" pos:column="33"/></name></expr></argument>)<pos:position pos:line="143" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="143" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="144" pos:column="9">memset<pos:position pos:line="144" pos:column="15"/></name><argument_list pos:line="144" pos:column="15">(<argument><expr><operator pos:line="144" pos:column="16">&amp;<pos:position pos:line="144" pos:column="21"/></operator><name pos:line="144" pos:column="17">pi<pos:position pos:line="144" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="144" pos:column="21">0<pos:position pos:line="144" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="144" pos:column="24">sizeof<argument_list pos:line="144" pos:column="30">(<argument><expr><name pos:line="144" pos:column="31">pi<pos:position pos:line="144" pos:column="33"/></name></expr></argument>)<pos:position pos:line="144" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="144" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="145" pos:column="9">si<pos:position pos:line="145" pos:column="11"/></name><operator pos:line="145" pos:column="11">.<pos:position pos:line="145" pos:column="12"/></operator><name pos:line="145" pos:column="12">cb<pos:position pos:line="145" pos:column="14"/></name></name> <operator pos:line="145" pos:column="15">=<pos:position pos:line="145" pos:column="16"/></operator> <sizeof pos:line="145" pos:column="17">sizeof<argument_list pos:line="145" pos:column="23">(<argument><expr><name pos:line="145" pos:column="24">si<pos:position pos:line="145" pos:column="26"/></name></expr></argument>)<pos:position pos:line="145" pos:column="27"/></argument_list></sizeof></expr>;<pos:position pos:line="145" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="146" pos:column="9">si<pos:position pos:line="146" pos:column="11"/></name><operator pos:line="146" pos:column="11">.<pos:position pos:line="146" pos:column="12"/></operator><name pos:line="146" pos:column="12">dwFlags<pos:position pos:line="146" pos:column="19"/></name></name>     <operator pos:line="146" pos:column="24">=<pos:position pos:line="146" pos:column="25"/></operator> <name pos:line="146" pos:column="26">STARTF_USESHOWWINDOW<pos:position pos:line="146" pos:column="46"/></name></expr>;<pos:position pos:line="146" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="147" pos:column="9">si<pos:position pos:line="147" pos:column="11"/></name><operator pos:line="147" pos:column="11">.<pos:position pos:line="147" pos:column="12"/></operator><name pos:line="147" pos:column="12">wShowWindow<pos:position pos:line="147" pos:column="23"/></name></name> <operator pos:line="147" pos:column="24">=<pos:position pos:line="147" pos:column="25"/></operator> <name pos:line="147" pos:column="26">SW_HIDE<pos:position pos:line="147" pos:column="33"/></name></expr>;<pos:position pos:line="147" pos:column="34"/></expr_stmt>   <comment type="block" pos:line="147" pos:column="37">/* This might be redundant */</comment>

        <expr_stmt><expr><name pos:line="149" pos:column="9">rv<pos:position pos:line="149" pos:column="11"/></name> <operator pos:line="149" pos:column="12">=<pos:position pos:line="149" pos:column="13"/></operator> <name pos:line="149" pos:column="14">APR_EINIT<pos:position pos:line="149" pos:column="23"/></name></expr>;<pos:position pos:line="149" pos:column="24"/></expr_stmt>
        <if pos:line="150" pos:column="9">if <condition pos:line="150" pos:column="12">(<expr><call><name pos:line="150" pos:column="13">CreateProcess<pos:position pos:line="150" pos:column="26"/></name><argument_list pos:line="150" pos:column="26">(<argument><expr><name pos:line="150" pos:column="27">NULL<pos:position pos:line="150" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="33">exe_cmd<pos:position pos:line="150" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="42">NULL<pos:position pos:line="150" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="48">NULL<pos:position pos:line="150" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="54">FALSE<pos:position pos:line="150" pos:column="59"/></name></expr></argument>,
                           <argument><expr><name pos:line="151" pos:column="28">DETACHED_PROCESS<pos:position pos:line="151" pos:column="44"/></name></expr></argument>, <comment type="block" pos:line="151" pos:column="46">/* Creation flags */</comment>
                           <argument><expr><name pos:line="152" pos:column="28">NULL<pos:position pos:line="152" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="34">NULL<pos:position pos:line="152" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="152" pos:column="40">&amp;<pos:position pos:line="152" pos:column="45"/></operator><name pos:line="152" pos:column="41">si<pos:position pos:line="152" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="152" pos:column="45">&amp;<pos:position pos:line="152" pos:column="50"/></operator><name pos:line="152" pos:column="46">pi<pos:position pos:line="152" pos:column="48"/></name></expr></argument>)<pos:position pos:line="152" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="152" pos:column="50"/></condition><then pos:line="152" pos:column="50">
        <block pos:line="153" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="154" pos:column="13">DWORD<pos:position pos:line="154" pos:column="18"/></name></type> <name pos:line="154" pos:column="19">code<pos:position pos:line="154" pos:column="23"/></name></decl>;<pos:position pos:line="154" pos:column="24"/></decl_stmt>
            <while pos:line="155" pos:column="13">while <condition pos:line="155" pos:column="19">(<expr><call><name pos:line="155" pos:column="20">GetExitCodeProcess<pos:position pos:line="155" pos:column="38"/></name><argument_list pos:line="155" pos:column="38">(<argument><expr><name><name pos:line="155" pos:column="39">pi<pos:position pos:line="155" pos:column="41"/></name><operator pos:line="155" pos:column="41">.<pos:position pos:line="155" pos:column="42"/></operator><name pos:line="155" pos:column="42">hProcess<pos:position pos:line="155" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="155" pos:column="52">&amp;<pos:position pos:line="155" pos:column="57"/></operator><name pos:line="155" pos:column="53">code<pos:position pos:line="155" pos:column="57"/></name></expr></argument>)<pos:position pos:line="155" pos:column="58"/></argument_list></call> <operator pos:line="155" pos:column="59">==<pos:position pos:line="155" pos:column="61"/></operator> <name pos:line="155" pos:column="62">STILL_ACTIVE<pos:position pos:line="155" pos:column="74"/></name></expr>)<pos:position pos:line="155" pos:column="75"/></condition> <block pos:line="155" pos:column="76">{
                <if pos:line="156" pos:column="17">if <condition pos:line="156" pos:column="20">(<expr><call><name pos:line="156" pos:column="21">FindWindow<pos:position pos:line="156" pos:column="31"/></name><argument_list pos:line="156" pos:column="31">(<argument><expr><literal type="string" pos:line="156" pos:column="32">"ApacheWin95ServiceMonitor"<pos:position pos:line="156" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="156" pos:column="61">mpm_service_name<pos:position pos:line="156" pos:column="77"/></name></expr></argument>)<pos:position pos:line="156" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="156" pos:column="79"/></condition><then pos:line="156" pos:column="79"> <block pos:line="156" pos:column="80">{
                    <expr_stmt><expr><name pos:line="157" pos:column="21">rv<pos:position pos:line="157" pos:column="23"/></name> <operator pos:line="157" pos:column="24">=<pos:position pos:line="157" pos:column="25"/></operator> <name pos:line="157" pos:column="26">APR_SUCCESS<pos:position pos:line="157" pos:column="37"/></name></expr>;<pos:position pos:line="157" pos:column="38"/></expr_stmt>
                    <break pos:line="158" pos:column="21">break;<pos:position pos:line="158" pos:column="27"/></break>
                }<pos:position pos:line="159" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="160" pos:column="17">Sleep<pos:position pos:line="160" pos:column="22"/></name> <argument_list pos:line="160" pos:column="23">(<argument><expr><literal type="number" pos:line="160" pos:column="24">1000<pos:position pos:line="160" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="161" pos:column="14"/></block></while>
        }<pos:position pos:line="162" pos:column="10"/></block></then></if>

        <if pos:line="164" pos:column="9">if <condition pos:line="164" pos:column="12">(<expr><name pos:line="164" pos:column="13">rv<pos:position pos:line="164" pos:column="15"/></name> <operator pos:line="164" pos:column="16">!=<pos:position pos:line="164" pos:column="18"/></operator> <name pos:line="164" pos:column="19">APR_SUCCESS<pos:position pos:line="164" pos:column="30"/></name></expr>)<pos:position pos:line="164" pos:column="31"/></condition><then pos:line="164" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><name pos:line="165" pos:column="13">rv<pos:position pos:line="165" pos:column="15"/></name> <operator pos:line="165" pos:column="16">=<pos:position pos:line="165" pos:column="17"/></operator> <call><name pos:line="165" pos:column="18">apr_get_os_error<pos:position pos:line="165" pos:column="34"/></name><argument_list pos:line="165" pos:column="34">()<pos:position pos:line="165" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="37"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="167" pos:column="9">CloseHandle<pos:position pos:line="167" pos:column="20"/></name><argument_list pos:line="167" pos:column="20">(<argument><expr><name><name pos:line="167" pos:column="21">pi<pos:position pos:line="167" pos:column="23"/></name><operator pos:line="167" pos:column="23">.<pos:position pos:line="167" pos:column="24"/></operator><name pos:line="167" pos:column="24">hProcess<pos:position pos:line="167" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="167" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="168" pos:column="9">CloseHandle<pos:position pos:line="168" pos:column="20"/></name><argument_list pos:line="168" pos:column="20">(<argument><expr><name><name pos:line="168" pos:column="21">pi<pos:position pos:line="168" pos:column="23"/></name><operator pos:line="168" pos:column="23">.<pos:position pos:line="168" pos:column="24"/></operator><name pos:line="168" pos:column="24">hThread<pos:position pos:line="168" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="168" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="169" pos:column="6"/></block></else></if>

    <if pos:line="171" pos:column="5">if <condition pos:line="171" pos:column="8">(<expr><name pos:line="171" pos:column="9">rv<pos:position pos:line="171" pos:column="11"/></name> <operator pos:line="171" pos:column="12">==<pos:position pos:line="171" pos:column="14"/></operator> <name pos:line="171" pos:column="15">APR_SUCCESS<pos:position pos:line="171" pos:column="26"/></name></expr>)<pos:position pos:line="171" pos:column="27"/></condition><then pos:line="171" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="172" pos:column="9">fprintf<pos:position pos:line="172" pos:column="16"/></name><argument_list pos:line="172" pos:column="16">(<argument><expr><name pos:line="172" pos:column="17">stderr<pos:position pos:line="172" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="172" pos:column="24">"The %s service is running.\n"<pos:position pos:line="172" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="172" pos:column="56">mpm_display_name<pos:position pos:line="172" pos:column="72"/></name></expr></argument>)<pos:position pos:line="172" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="74"/></expr_stmt></block></then>
    <else pos:line="173" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="174" pos:column="9">ap_log_error<pos:position pos:line="174" pos:column="21"/></name><argument_list pos:line="174" pos:column="21">(<argument><expr><name pos:line="174" pos:column="22">APLOG_MARK<pos:position pos:line="174" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="34">APLOG_CRIT<pos:position pos:line="174" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="46">rv<pos:position pos:line="174" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="50">NULL<pos:position pos:line="174" pos:column="54"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="175" pos:column="22">"%s: Failed to start the service process."<pos:position pos:line="175" pos:column="64"/></literal></expr></argument>,
                     <argument><expr><name pos:line="176" pos:column="22">mpm_display_name<pos:position pos:line="176" pos:column="38"/></name></expr></argument>)<pos:position pos:line="176" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="40"/></expr_stmt></block></else></if>

    <return pos:line="178" pos:column="5">return <expr><name pos:line="178" pos:column="12">rv<pos:position pos:line="178" pos:column="14"/></name></expr>;<pos:position pos:line="178" pos:column="15"/></return>
}<pos:position pos:line="179" pos:column="2"/></block></function></unit>

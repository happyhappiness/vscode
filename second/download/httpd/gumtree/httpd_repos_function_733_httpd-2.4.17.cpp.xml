<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_733_httpd-2.4.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_otherName_value<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">apr_pool_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">p<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">ASN1_TYPE<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">value<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                                  <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">onf<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">apr_array_header_t<pos:position pos:line="2" pos:column="70"/></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier><modifier pos:line="2" pos:column="72">*<pos:position pos:line="2" pos:column="73"/></modifier></type><name pos:line="2" pos:column="73">entries<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="81"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">str<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">nid<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><ternary><condition><expr><name pos:line="5" pos:column="15">onf<pos:position pos:line="5" pos:column="18"/></name></expr> ?<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20"> <expr><call><name pos:line="5" pos:column="21">OBJ_txt2nid<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">onf<pos:position pos:line="5" pos:column="36"/></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr> <pos:position pos:line="5" pos:column="38"/></then><else pos:line="5" pos:column="38">: <expr><name pos:line="5" pos:column="40">NID_undef<pos:position pos:line="5" pos:column="49"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="50"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">value<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">||<pos:position pos:line="7" pos:column="18"/></operator> <operator pos:line="7" pos:column="19">(<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">nid<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">==<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="27">NID_undef<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">)<pos:position pos:line="7" pos:column="37"/></operator> <operator pos:line="7" pos:column="38">||<pos:position pos:line="7" pos:column="40"/></operator> <operator pos:line="7" pos:column="41">!<pos:position pos:line="7" pos:column="42"/></operator><operator pos:line="7" pos:column="42">*<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="43">entries<pos:position pos:line="7" pos:column="50"/></name></expr>)<pos:position pos:line="7" pos:column="51"/></condition><then pos:line="7" pos:column="51">
       <block type="pseudo"><return pos:line="8" pos:column="8">return;<pos:position pos:line="8" pos:column="15"/></return></block></then></if>

    <comment type="block" pos:line="10" pos:column="5">/* 
     * Currently supported otherName forms (values for "onf"):
     * "msUPN" (1.3.6.1.4.1.311.20.2.3): Microsoft User Principal Name
     * "id-on-dnsSRV" (1.3.6.1.5.5.7.8.7): SRVName, as specified in RFC 4985
     */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">nid<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">==<pos:position pos:line="15" pos:column="16"/></operator> <name pos:line="15" pos:column="17">NID_ms_upn<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">)<pos:position pos:line="15" pos:column="28"/></operator> <operator pos:line="15" pos:column="29">&amp;&amp;<pos:position pos:line="15" pos:column="39"/></operator> <operator pos:line="15" pos:column="32">(<pos:position pos:line="15" pos:column="33"/></operator><name><name pos:line="15" pos:column="33">value<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">-&gt;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="40">type<pos:position pos:line="15" pos:column="44"/></name></name> <operator pos:line="15" pos:column="45">==<pos:position pos:line="15" pos:column="47"/></operator> <name pos:line="15" pos:column="48">V_ASN1_UTF8STRING<pos:position pos:line="15" pos:column="65"/></name><operator pos:line="15" pos:column="65">)<pos:position pos:line="15" pos:column="66"/></operator> <operator pos:line="15" pos:column="67">&amp;&amp;<pos:position pos:line="15" pos:column="77"/></operator>
        <operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">str<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">asn1_string_to_utf8<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><name pos:line="16" pos:column="36">p<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="39">value<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">-&gt;<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="46">value<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">.<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="52">utf8string<pos:position pos:line="16" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call><operator pos:line="16" pos:column="63">)<pos:position pos:line="16" pos:column="64"/></operator></expr>)<pos:position pos:line="16" pos:column="65"/></condition><then pos:line="16" pos:column="65"> <block pos:line="16" pos:column="66">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">APR_ARRAY_PUSH<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><operator pos:line="17" pos:column="24">*<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">entries<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><specifier pos:line="17" pos:column="34">const<pos:position pos:line="17" pos:column="39"/></specifier> <name pos:line="17" pos:column="40">char<pos:position pos:line="17" pos:column="44"/></name> <operator pos:line="17" pos:column="45">*<pos:position pos:line="17" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></call> <operator pos:line="17" pos:column="48">=<pos:position pos:line="17" pos:column="49"/></operator> <name pos:line="17" pos:column="50">str<pos:position pos:line="17" pos:column="53"/></name></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then> <elseif pos:line="18" pos:column="7">else <if pos:line="18" pos:column="12">if <condition pos:line="18" pos:column="15">(<expr><call><name pos:line="18" pos:column="16">strEQ<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">onf<pos:position pos:line="18" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="27">"id-on-dnsSRV"<pos:position pos:line="18" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call> <operator pos:line="18" pos:column="43">&amp;&amp;<pos:position pos:line="18" pos:column="53"/></operator>
               <operator pos:line="19" pos:column="16">(<pos:position pos:line="19" pos:column="17"/></operator><name><name pos:line="19" pos:column="17">value<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">type<pos:position pos:line="19" pos:column="28"/></name></name> <operator pos:line="19" pos:column="29">==<pos:position pos:line="19" pos:column="31"/></operator> <name pos:line="19" pos:column="32">V_ASN1_IA5STRING<pos:position pos:line="19" pos:column="48"/></name><operator pos:line="19" pos:column="48">)<pos:position pos:line="19" pos:column="49"/></operator> <operator pos:line="19" pos:column="50">&amp;&amp;<pos:position pos:line="19" pos:column="60"/></operator>
               <operator pos:line="20" pos:column="16">(<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">str<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <call><name pos:line="20" pos:column="23">asn1_string_to_utf8<pos:position pos:line="20" pos:column="42"/></name><argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">p<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="46">value<pos:position pos:line="20" pos:column="51"/></name><operator pos:line="20" pos:column="51">-&gt;<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="53">value<pos:position pos:line="20" pos:column="58"/></name><operator pos:line="20" pos:column="58">.<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="59">ia5string<pos:position pos:line="20" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></call><operator pos:line="20" pos:column="69">)<pos:position pos:line="20" pos:column="70"/></operator></expr>)<pos:position pos:line="20" pos:column="71"/></condition><then pos:line="20" pos:column="71"> <block pos:line="20" pos:column="72">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">APR_ARRAY_PUSH<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><operator pos:line="21" pos:column="24">*<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">entries<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><specifier pos:line="21" pos:column="34">const<pos:position pos:line="21" pos:column="39"/></specifier> <name pos:line="21" pos:column="40">char<pos:position pos:line="21" pos:column="44"/></name> <operator pos:line="21" pos:column="45">*<pos:position pos:line="21" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call> <operator pos:line="21" pos:column="48">=<pos:position pos:line="21" pos:column="49"/></operator> <name pos:line="21" pos:column="50">str<pos:position pos:line="21" pos:column="53"/></name></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if></elseif></if>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

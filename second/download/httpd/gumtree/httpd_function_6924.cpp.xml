<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6924.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">fill_buffer<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">h2_stream<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">stream<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">apr_size_t<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">amount<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">conn_rec<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">c<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name><name pos:line="3" pos:column="19">stream<pos:position pos:line="3" pos:column="25"/></name><operator pos:line="3" pos:column="25">-&gt;<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="27">session<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">-&gt;<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="36">c<pos:position pos:line="3" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_bucket<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">b<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name><name pos:line="7" pos:column="10">stream<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">output<pos:position pos:line="7" pos:column="24"/></name></name></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25"> <block pos:line="7" pos:column="26">{
        <return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">APR_EOF<pos:position pos:line="8" pos:column="23"/></name></expr>;<pos:position pos:line="8" pos:column="24"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="10" pos:column="5">status<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">h2_beam_receive<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name><name pos:line="10" pos:column="30">stream<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">output<pos:position pos:line="10" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="46">stream<pos:position pos:line="10" pos:column="52"/></name><operator pos:line="10" pos:column="52">-&gt;<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="54">out_buffer<pos:position pos:line="10" pos:column="64"/></name></name></expr></argument>, 
                             <argument><expr><name pos:line="11" pos:column="30">APR_NONBLOCK_READ<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">amount<pos:position pos:line="11" pos:column="55"/></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ap_log_cerror<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">APLOG_MARK<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="31">APLOG_TRACE2<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="45">status<pos:position pos:line="12" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="53">stream<pos:position pos:line="12" pos:column="59"/></name><operator pos:line="12" pos:column="59">-&gt;<pos:position pos:line="12" pos:column="64"/></operator><name pos:line="12" pos:column="61">session<pos:position pos:line="12" pos:column="68"/></name><operator pos:line="12" pos:column="68">-&gt;<pos:position pos:line="12" pos:column="73"/></operator><name pos:line="12" pos:column="70">c<pos:position pos:line="12" pos:column="71"/></name></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="13" pos:column="19">"h2_stream(%ld-%d): beam_received"<pos:position pos:line="13" pos:column="53"/></literal></expr></argument>,
                  <argument><expr><name><name pos:line="14" pos:column="19">stream<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">-&gt;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="27">session<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">-&gt;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="36">id<pos:position pos:line="14" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="40">stream<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">-&gt;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="48">id<pos:position pos:line="14" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
    <comment type="block" pos:line="15" pos:column="5">/* The buckets we reveive are using the stream-&gt;out_buffer pool as
     * lifetime which is exactly what we want since this is stream-&gt;pool.
     *
     * However: when we send these buckets down the core output filters, the
     * filter might decide to setaside them into a pool of its own. And it
     * might decide, after having sent the buckets, to clear its pool.
     *
     * This is problematic for file buckets because it then closed the contained
     * file. Any split off buckets we sent afterwards will result in a 
     * APR_EBADF.
     */</comment>
    <for pos:line="26" pos:column="5">for <control pos:line="26" pos:column="9">(<init><expr><name pos:line="26" pos:column="10">b<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">APR_BRIGADE_FIRST<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name><name pos:line="26" pos:column="32">stream<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">-&gt;<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="40">out_buffer<pos:position pos:line="26" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></init>
         <condition><expr><name pos:line="27" pos:column="10">b<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">!=<pos:position pos:line="27" pos:column="14"/></operator> <call><name pos:line="27" pos:column="15">APR_BRIGADE_SENTINEL<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><name><name pos:line="27" pos:column="36">stream<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">out_buffer<pos:position pos:line="27" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="56"/></condition>
         <incr><expr><name pos:line="28" pos:column="10">b<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <call><name pos:line="28" pos:column="14">APR_BUCKET_NEXT<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">b<pos:position pos:line="28" pos:column="31"/></name></expr></argument>)<pos:position pos:line="28" pos:column="32"/></argument_list></call></expr></incr>)<pos:position pos:line="28" pos:column="33"/></control> <block pos:line="28" pos:column="34">{
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><call><name pos:line="29" pos:column="13">APR_BUCKET_IS_FILE<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><name pos:line="29" pos:column="32">b<pos:position pos:line="29" pos:column="33"/></name></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="35"/></condition><then pos:line="29" pos:column="35"> <block pos:line="29" pos:column="36">{
            <decl_stmt><decl><type><name pos:line="30" pos:column="13">apr_bucket_file<pos:position pos:line="30" pos:column="28"/></name> <modifier pos:line="30" pos:column="29">*<pos:position pos:line="30" pos:column="30"/></modifier></type><name pos:line="30" pos:column="30">f<pos:position pos:line="30" pos:column="31"/></name> <init pos:line="30" pos:column="32">= <expr><operator pos:line="30" pos:column="34">(<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="35">apr_bucket_file<pos:position pos:line="30" pos:column="50"/></name> <operator pos:line="30" pos:column="51">*<pos:position pos:line="30" pos:column="52"/></operator><operator pos:line="30" pos:column="52">)<pos:position pos:line="30" pos:column="53"/></operator><name><name pos:line="30" pos:column="53">b<pos:position pos:line="30" pos:column="54"/></name><operator pos:line="30" pos:column="54">-&gt;<pos:position pos:line="30" pos:column="59"/></operator><name pos:line="30" pos:column="56">data<pos:position pos:line="30" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="30" pos:column="61"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="31" pos:column="13">apr_pool_t<pos:position pos:line="31" pos:column="23"/></name> <modifier pos:line="31" pos:column="24">*<pos:position pos:line="31" pos:column="25"/></modifier></type><name pos:line="31" pos:column="25">fpool<pos:position pos:line="31" pos:column="30"/></name> <init pos:line="31" pos:column="31">= <expr><call><name pos:line="31" pos:column="33">apr_file_pool_get<pos:position pos:line="31" pos:column="50"/></name><argument_list pos:line="31" pos:column="50">(<argument><expr><name><name pos:line="31" pos:column="51">f<pos:position pos:line="31" pos:column="52"/></name><operator pos:line="31" pos:column="52">-&gt;<pos:position pos:line="31" pos:column="57"/></operator><name pos:line="31" pos:column="54">fd<pos:position pos:line="31" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="58"/></decl_stmt>
            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><name pos:line="32" pos:column="17">fpool<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">!=<pos:position pos:line="32" pos:column="25"/></operator> <name><name pos:line="32" pos:column="26">c<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">-&gt;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="29">pool<pos:position pos:line="32" pos:column="33"/></name></name></expr>)<pos:position pos:line="32" pos:column="34"/></condition><then pos:line="32" pos:column="34"> <block pos:line="32" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="33" pos:column="17">apr_bucket_setaside<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><name pos:line="33" pos:column="37">b<pos:position pos:line="33" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="40">c<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">-&gt;<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="43">pool<pos:position pos:line="33" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt>
                <if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><operator pos:line="34" pos:column="21">!<pos:position pos:line="34" pos:column="22"/></operator><name><name pos:line="34" pos:column="22">stream<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">-&gt;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="30">files<pos:position pos:line="34" pos:column="35"/></name></name></expr>)<pos:position pos:line="34" pos:column="36"/></condition><then pos:line="34" pos:column="36"> <block pos:line="34" pos:column="37">{
                    <expr_stmt><expr><name><name pos:line="35" pos:column="21">stream<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">-&gt;<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="29">files<pos:position pos:line="35" pos:column="34"/></name></name> <operator pos:line="35" pos:column="35">=<pos:position pos:line="35" pos:column="36"/></operator> <call><name pos:line="35" pos:column="37">apr_array_make<pos:position pos:line="35" pos:column="51"/></name><argument_list pos:line="35" pos:column="51">(<argument><expr><name><name pos:line="35" pos:column="52">stream<pos:position pos:line="35" pos:column="58"/></name><operator pos:line="35" pos:column="58">-&gt;<pos:position pos:line="35" pos:column="63"/></operator><name pos:line="35" pos:column="60">pool<pos:position pos:line="35" pos:column="64"/></name></name></expr></argument>, 
                                                   <argument><expr><literal type="number" pos:line="36" pos:column="52">5<pos:position pos:line="36" pos:column="53"/></literal></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="55">sizeof<argument_list pos:line="36" pos:column="61">(<argument><expr><name pos:line="36" pos:column="62">apr_file_t<pos:position pos:line="36" pos:column="72"/></name><operator pos:line="36" pos:column="72">*<pos:position pos:line="36" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="36" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="76"/></expr_stmt>
                }<pos:position pos:line="37" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="38" pos:column="17">APR_ARRAY_PUSH<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><name><name pos:line="38" pos:column="32">stream<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">-&gt;<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="40">files<pos:position pos:line="38" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="47">apr_file_t<pos:position pos:line="38" pos:column="57"/></name><operator pos:line="38" pos:column="57">*<pos:position pos:line="38" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="38" pos:column="59"/></argument_list></call> <operator pos:line="38" pos:column="60">=<pos:position pos:line="38" pos:column="61"/></operator> <name><name pos:line="38" pos:column="62">f<pos:position pos:line="38" pos:column="63"/></name><operator pos:line="38" pos:column="63">-&gt;<pos:position pos:line="38" pos:column="68"/></operator><name pos:line="38" pos:column="65">fd<pos:position pos:line="38" pos:column="67"/></name></name></expr>;<pos:position pos:line="38" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="39" pos:column="14"/></block></then></if>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
    }<pos:position pos:line="41" pos:column="6"/></block></for>
    <return pos:line="42" pos:column="5">return <expr><name pos:line="42" pos:column="12">status<pos:position pos:line="42" pos:column="18"/></name></expr>;<pos:position pos:line="42" pos:column="19"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2608_httpd-2.2.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dbd_sqlite3_query<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">apr_dbd_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">sql<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">nrows<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">query<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">sqlite3_stmt<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">stmt<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><name pos:line="3" pos:column="26">NULL<pos:position pos:line="3" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">tail<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">NULL<pos:position pos:line="4" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">ret<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><operator pos:line="5" pos:column="15">-<pos:position pos:line="5" pos:column="16"/></operator><literal type="number" pos:line="5" pos:column="16">1<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="19">length<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><literal type="number" pos:line="5" pos:column="28">0<pos:position pos:line="5" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">sql<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">trans<pos:position pos:line="7" pos:column="19"/></name></name> <operator pos:line="7" pos:column="20">&amp;&amp;<pos:position pos:line="7" pos:column="30"/></operator> <name><name pos:line="7" pos:column="23">sql<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">trans<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">-&gt;<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="35">errnum<pos:position pos:line="7" pos:column="41"/></name></name></expr>)<pos:position pos:line="7" pos:column="42"/></condition><then pos:line="7" pos:column="42"> <block pos:line="7" pos:column="43">{
        <return pos:line="8" pos:column="9">return <expr><name><name pos:line="8" pos:column="16">sql<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">-&gt;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="21">trans<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">errnum<pos:position pos:line="8" pos:column="34"/></name></name></expr>;<pos:position pos:line="8" pos:column="35"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="11" pos:column="5">length<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">strlen<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">query<pos:position pos:line="11" pos:column="26"/></name></expr></argument>)<pos:position pos:line="11" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
<cpp:if pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">if<pos:position pos:line="12" pos:column="4"/></cpp:directive> <expr><name pos:line="12" pos:column="5">APR_HAS_THREADS<pos:position pos:line="12" pos:column="20"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">apr_thread_mutex_lock<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name><name pos:line="13" pos:column="27">sql<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">mutex<pos:position pos:line="13" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>

    <do pos:line="16" pos:column="5">do <block pos:line="16" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">int<pos:position pos:line="17" pos:column="12"/></name></type> <name pos:line="17" pos:column="13">retry_count<pos:position pos:line="17" pos:column="24"/></name> <init pos:line="17" pos:column="25">= <expr><literal type="number" pos:line="17" pos:column="27">0<pos:position pos:line="17" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="29"/></decl_stmt>

        <expr_stmt><expr><name pos:line="19" pos:column="9">ret<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">sqlite3_prepare<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name><name pos:line="19" pos:column="31">sql<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">-&gt;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="36">conn<pos:position pos:line="19" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">query<pos:position pos:line="19" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="49">length<pos:position pos:line="19" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="57">&amp;<pos:position pos:line="19" pos:column="62"/></operator><name pos:line="19" pos:column="58">stmt<pos:position pos:line="19" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="64">&amp;<pos:position pos:line="19" pos:column="69"/></operator><name pos:line="19" pos:column="65">tail<pos:position pos:line="19" pos:column="69"/></name></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="71"/></expr_stmt>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">ret<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">!=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">SQLITE_OK<pos:position pos:line="20" pos:column="29"/></name></expr>)<pos:position pos:line="20" pos:column="30"/></condition><then pos:line="20" pos:column="30"> <block pos:line="20" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">sqlite3_finalize<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">stmt<pos:position pos:line="21" pos:column="34"/></name></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
            <break pos:line="22" pos:column="13">break;<pos:position pos:line="22" pos:column="19"/></break>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>

        <while pos:line="25" pos:column="9">while<condition pos:line="25" pos:column="14">(<expr><name pos:line="25" pos:column="15">retry_count<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">++<pos:position pos:line="25" pos:column="28"/></operator> <operator pos:line="25" pos:column="29">&lt;=<pos:position pos:line="25" pos:column="34"/></operator> <name pos:line="25" pos:column="32">MAX_RETRY_COUNT<pos:position pos:line="25" pos:column="47"/></name></expr>)<pos:position pos:line="25" pos:column="48"/></condition> <block pos:line="25" pos:column="49">{
            <expr_stmt><expr><name pos:line="26" pos:column="13">ret<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <call><name pos:line="26" pos:column="19">sqlite3_step<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">stmt<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">(<expr><name pos:line="27" pos:column="17">ret<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">!=<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="24">SQLITE_BUSY<pos:position pos:line="27" pos:column="35"/></name></expr>)<pos:position pos:line="27" pos:column="36"/></condition><then pos:line="27" pos:column="36">
                <block type="pseudo"><break pos:line="28" pos:column="17">break;<pos:position pos:line="28" pos:column="23"/></break></block></then></if>

<cpp:if pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">if<pos:position pos:line="30" pos:column="4"/></cpp:directive> <expr><name pos:line="30" pos:column="5">APR_HAS_THREADS<pos:position pos:line="30" pos:column="20"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">apr_thread_mutex_unlock<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><name><name pos:line="31" pos:column="37">sql<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">-&gt;<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="42">mutex<pos:position pos:line="31" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">apr_sleep<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">MAX_RETRY_SLEEP<pos:position pos:line="33" pos:column="38"/></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
<cpp:if pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">if<pos:position pos:line="34" pos:column="4"/></cpp:directive> <expr><name pos:line="34" pos:column="5">APR_HAS_THREADS<pos:position pos:line="34" pos:column="20"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">apr_thread_mutex_lock<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name><name pos:line="35" pos:column="35">sql<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">-&gt;<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="40">mutex<pos:position pos:line="35" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="37" pos:column="10"/></block></while>

        <expr_stmt><expr><operator pos:line="39" pos:column="9">*<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">nrows<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">sqlite3_changes<pos:position pos:line="39" pos:column="33"/></name><argument_list pos:line="39" pos:column="33">(<argument><expr><name><name pos:line="39" pos:column="34">sql<pos:position pos:line="39" pos:column="37"/></name><operator pos:line="39" pos:column="37">-&gt;<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="39">conn<pos:position pos:line="39" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">sqlite3_finalize<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">stmt<pos:position pos:line="40" pos:column="30"/></name></expr></argument>)<pos:position pos:line="40" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="41" pos:column="9">length<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">-=<pos:position pos:line="41" pos:column="18"/></operator> <operator pos:line="41" pos:column="19">(<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="20">tail<pos:position pos:line="41" pos:column="24"/></name> <operator pos:line="41" pos:column="25">-<pos:position pos:line="41" pos:column="26"/></operator> <name pos:line="41" pos:column="27">query<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">)<pos:position pos:line="41" pos:column="33"/></operator></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="42" pos:column="9">query<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <name pos:line="42" pos:column="17">tail<pos:position pos:line="42" pos:column="21"/></name></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block> while <condition pos:line="43" pos:column="13">(<expr><name pos:line="43" pos:column="14">length<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">&gt;<pos:position pos:line="43" pos:column="25"/></operator> <literal type="number" pos:line="43" pos:column="23">0<pos:position pos:line="43" pos:column="24"/></literal></expr>)<pos:position pos:line="43" pos:column="25"/></condition>;<pos:position pos:line="43" pos:column="26"/></do>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><call><name pos:line="45" pos:column="9">dbd_sqlite3_is_success<pos:position pos:line="45" pos:column="31"/></name><argument_list pos:line="45" pos:column="31">(<argument><expr><name pos:line="45" pos:column="32">ret<pos:position pos:line="45" pos:column="35"/></name></expr></argument>)<pos:position pos:line="45" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="37"/></condition><then pos:line="45" pos:column="37"> <block pos:line="45" pos:column="38">{
        <expr_stmt><expr><name pos:line="46" pos:column="9">ret<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <literal type="number" pos:line="46" pos:column="15">0<pos:position pos:line="46" pos:column="16"/></literal></expr>;<pos:position pos:line="46" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
<cpp:if pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">if<pos:position pos:line="48" pos:column="4"/></cpp:directive> <expr><name pos:line="48" pos:column="5">APR_HAS_THREADS<pos:position pos:line="48" pos:column="20"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">apr_thread_mutex_unlock<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><name><name pos:line="49" pos:column="29">sql<pos:position pos:line="49" pos:column="32"/></name><operator pos:line="49" pos:column="32">-&gt;<pos:position pos:line="49" pos:column="37"/></operator><name pos:line="49" pos:column="34">mutex<pos:position pos:line="49" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif<pos:position pos:line="50" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name><name pos:line="51" pos:column="9">sql<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">-&gt;<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="14">trans<pos:position pos:line="51" pos:column="19"/></name></name></expr>)<pos:position pos:line="51" pos:column="20"/></condition><then pos:line="51" pos:column="20"> <block pos:line="51" pos:column="21">{
        <expr_stmt><expr><name><name pos:line="52" pos:column="9">sql<pos:position pos:line="52" pos:column="12"/></name><operator pos:line="52" pos:column="12">-&gt;<pos:position pos:line="52" pos:column="17"/></operator><name pos:line="52" pos:column="14">trans<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">-&gt;<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="21">errnum<pos:position pos:line="52" pos:column="27"/></name></name> <operator pos:line="52" pos:column="28">=<pos:position pos:line="52" pos:column="29"/></operator> <name pos:line="52" pos:column="30">ret<pos:position pos:line="52" pos:column="33"/></name></expr>;<pos:position pos:line="52" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
    <return pos:line="54" pos:column="5">return <expr><name pos:line="54" pos:column="12">ret<pos:position pos:line="54" pos:column="15"/></name></expr>;<pos:position pos:line="54" pos:column="16"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

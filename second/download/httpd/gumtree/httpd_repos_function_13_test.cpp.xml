<function xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position"><specifier pos:line="310" pos:column="1">static<pos:position pos:line="310" pos:column="7"/></specifier> <type><name pos:line="310" pos:column="8">int<pos:position pos:line="310" pos:column="11"/></name></type> <name pos:line="310" pos:column="12">read_author_script<pos:position pos:line="310" pos:column="30"/></name><parameter_list pos:line="310" pos:column="30">(<parameter><decl><type><name><name pos:line="310" pos:column="31">struct<pos:position pos:line="310" pos:column="37"/></name> <name pos:line="310" pos:column="38">am_state<pos:position pos:line="310" pos:column="46"/></name></name> <modifier pos:line="310" pos:column="47">*<pos:position pos:line="310" pos:column="48"/></modifier></type><name pos:line="310" pos:column="48">state<pos:position pos:line="310" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="310" pos:column="54"/></parameter_list>
<block pos:line="311" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="312" pos:column="9">const<pos:position pos:line="312" pos:column="14"/></specifier> <name pos:line="312" pos:column="15">char<pos:position pos:line="312" pos:column="19"/></name> <modifier pos:line="312" pos:column="20">*<pos:position pos:line="312" pos:column="21"/></modifier></type><name pos:line="312" pos:column="21">filename<pos:position pos:line="312" pos:column="29"/></name> <init pos:line="312" pos:column="30">= <expr><call><name pos:line="312" pos:column="32">am_path<pos:position pos:line="312" pos:column="39"/></name><argument_list pos:line="312" pos:column="39">(<argument><expr><name pos:line="312" pos:column="40">state<pos:position pos:line="312" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="312" pos:column="47">"author-script"<pos:position pos:line="312" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="312" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="312" pos:column="64"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="313" pos:column="9">FILE<pos:position pos:line="313" pos:column="13"/></name> <modifier pos:line="313" pos:column="14">*<pos:position pos:line="313" pos:column="15"/></modifier></type><name pos:line="313" pos:column="15">fp<pos:position pos:line="313" pos:column="17"/></name></decl>;<pos:position pos:line="313" pos:column="18"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="315" pos:column="9">assert<pos:position pos:line="315" pos:column="15"/></name><argument_list pos:line="315" pos:column="15">(<argument><expr><operator pos:line="315" pos:column="16">!<pos:position pos:line="315" pos:column="17"/></operator><name><name pos:line="315" pos:column="17">state<pos:position pos:line="315" pos:column="22"/></name><operator pos:line="315" pos:column="22">-&gt;<pos:position pos:line="315" pos:column="27"/></operator><name pos:line="315" pos:column="24">author_name<pos:position pos:line="315" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="315" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="316" pos:column="9">assert<pos:position pos:line="316" pos:column="15"/></name><argument_list pos:line="316" pos:column="15">(<argument><expr><operator pos:line="316" pos:column="16">!<pos:position pos:line="316" pos:column="17"/></operator><name><name pos:line="316" pos:column="17">state<pos:position pos:line="316" pos:column="22"/></name><operator pos:line="316" pos:column="22">-&gt;<pos:position pos:line="316" pos:column="27"/></operator><name pos:line="316" pos:column="24">author_email<pos:position pos:line="316" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="316" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="317" pos:column="9">assert<pos:position pos:line="317" pos:column="15"/></name><argument_list pos:line="317" pos:column="15">(<argument><expr><operator pos:line="317" pos:column="16">!<pos:position pos:line="317" pos:column="17"/></operator><name><name pos:line="317" pos:column="17">state<pos:position pos:line="317" pos:column="22"/></name><operator pos:line="317" pos:column="22">-&gt;<pos:position pos:line="317" pos:column="27"/></operator><name pos:line="317" pos:column="24">author_date<pos:position pos:line="317" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="317" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="317" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><name pos:line="319" pos:column="9">fp<pos:position pos:line="319" pos:column="11"/></name> <operator pos:line="319" pos:column="12">=<pos:position pos:line="319" pos:column="13"/></operator> <call><name pos:line="319" pos:column="14">fopen<pos:position pos:line="319" pos:column="19"/></name><argument_list pos:line="319" pos:column="19">(<argument><expr><name pos:line="319" pos:column="20">filename<pos:position pos:line="319" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="319" pos:column="30">"r"<pos:position pos:line="319" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="319" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="319" pos:column="35"/></expr_stmt>
	<if pos:line="320" pos:column="9">if <condition pos:line="320" pos:column="12">(<expr><operator pos:line="320" pos:column="13">!<pos:position pos:line="320" pos:column="14"/></operator><name pos:line="320" pos:column="14">fp<pos:position pos:line="320" pos:column="16"/></name></expr>)<pos:position pos:line="320" pos:column="17"/></condition><then pos:line="320" pos:column="17"> <block pos:line="320" pos:column="18">{
		<if pos:line="321" pos:column="17">if <condition pos:line="321" pos:column="20">(<expr><name pos:line="321" pos:column="21">errno<pos:position pos:line="321" pos:column="26"/></name> <operator pos:line="321" pos:column="27">==<pos:position pos:line="321" pos:column="29"/></operator> <name pos:line="321" pos:column="30">ENOENT<pos:position pos:line="321" pos:column="36"/></name></expr>)<pos:position pos:line="321" pos:column="37"/></condition><then pos:line="321" pos:column="37">
			<block type="pseudo"><return pos:line="322" pos:column="25">return <expr><literal type="number" pos:line="322" pos:column="32">0<pos:position pos:line="322" pos:column="33"/></literal></expr>;<pos:position pos:line="322" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="323" pos:column="17">die_errno<pos:position pos:line="323" pos:column="26"/></name><argument_list pos:line="323" pos:column="26">(<argument><expr><call><name pos:line="323" pos:column="27">_<pos:position pos:line="323" pos:column="28"/></name><argument_list pos:line="323" pos:column="28">(<argument><expr><literal type="string" pos:line="323" pos:column="29">"could not open '%s' for reading"<pos:position pos:line="323" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="323" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="323" pos:column="65">filename<pos:position pos:line="323" pos:column="73"/></name></expr></argument>)<pos:position pos:line="323" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="324" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="326" pos:column="9">state<pos:position pos:line="326" pos:column="14"/></name><operator pos:line="326" pos:column="14">-&gt;<pos:position pos:line="326" pos:column="19"/></operator><name pos:line="326" pos:column="16">author_name<pos:position pos:line="326" pos:column="27"/></name></name> <operator pos:line="326" pos:column="28">=<pos:position pos:line="326" pos:column="29"/></operator> <call><name pos:line="326" pos:column="30">read_shell_var<pos:position pos:line="326" pos:column="44"/></name><argument_list pos:line="326" pos:column="44">(<argument><expr><name pos:line="326" pos:column="45">fp<pos:position pos:line="326" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="326" pos:column="49">"GIT_AUTHOR_NAME"<pos:position pos:line="326" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="326" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="68"/></expr_stmt>
	<if pos:line="327" pos:column="9">if <condition pos:line="327" pos:column="12">(<expr><operator pos:line="327" pos:column="13">!<pos:position pos:line="327" pos:column="14"/></operator><name><name pos:line="327" pos:column="14">state<pos:position pos:line="327" pos:column="19"/></name><operator pos:line="327" pos:column="19">-&gt;<pos:position pos:line="327" pos:column="24"/></operator><name pos:line="327" pos:column="21">author_name<pos:position pos:line="327" pos:column="32"/></name></name></expr>)<pos:position pos:line="327" pos:column="33"/></condition><then pos:line="327" pos:column="33"> <block pos:line="327" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="328" pos:column="17">fclose<pos:position pos:line="328" pos:column="23"/></name><argument_list pos:line="328" pos:column="23">(<argument><expr><name pos:line="328" pos:column="24">fp<pos:position pos:line="328" pos:column="26"/></name></expr></argument>)<pos:position pos:line="328" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="28"/></expr_stmt>
		<return pos:line="329" pos:column="17">return <expr><operator pos:line="329" pos:column="24">-<pos:position pos:line="329" pos:column="25"/></operator><literal type="number" pos:line="329" pos:column="25">1<pos:position pos:line="329" pos:column="26"/></literal></expr>;<pos:position pos:line="329" pos:column="27"/></return>
	}<pos:position pos:line="330" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="332" pos:column="9">state<pos:position pos:line="332" pos:column="14"/></name><operator pos:line="332" pos:column="14">-&gt;<pos:position pos:line="332" pos:column="19"/></operator><name pos:line="332" pos:column="16">author_email<pos:position pos:line="332" pos:column="28"/></name></name> <operator pos:line="332" pos:column="29">=<pos:position pos:line="332" pos:column="30"/></operator> <call><name pos:line="332" pos:column="31">read_shell_var<pos:position pos:line="332" pos:column="45"/></name><argument_list pos:line="332" pos:column="45">(<argument><expr><name pos:line="332" pos:column="46">fp<pos:position pos:line="332" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="332" pos:column="50">"GIT_AUTHOR_EMAIL"<pos:position pos:line="332" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="332" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="70"/></expr_stmt>
	<if pos:line="333" pos:column="9">if <condition pos:line="333" pos:column="12">(<expr><operator pos:line="333" pos:column="13">!<pos:position pos:line="333" pos:column="14"/></operator><name><name pos:line="333" pos:column="14">state<pos:position pos:line="333" pos:column="19"/></name><operator pos:line="333" pos:column="19">-&gt;<pos:position pos:line="333" pos:column="24"/></operator><name pos:line="333" pos:column="21">author_email<pos:position pos:line="333" pos:column="33"/></name></name></expr>)<pos:position pos:line="333" pos:column="34"/></condition><then pos:line="333" pos:column="34"> <block pos:line="333" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="334" pos:column="17">fclose<pos:position pos:line="334" pos:column="23"/></name><argument_list pos:line="334" pos:column="23">(<argument><expr><name pos:line="334" pos:column="24">fp<pos:position pos:line="334" pos:column="26"/></name></expr></argument>)<pos:position pos:line="334" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="28"/></expr_stmt>
		<return pos:line="335" pos:column="17">return <expr><operator pos:line="335" pos:column="24">-<pos:position pos:line="335" pos:column="25"/></operator><literal type="number" pos:line="335" pos:column="25">1<pos:position pos:line="335" pos:column="26"/></literal></expr>;<pos:position pos:line="335" pos:column="27"/></return>
	}<pos:position pos:line="336" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="338" pos:column="9">state<pos:position pos:line="338" pos:column="14"/></name><operator pos:line="338" pos:column="14">-&gt;<pos:position pos:line="338" pos:column="19"/></operator><name pos:line="338" pos:column="16">author_date<pos:position pos:line="338" pos:column="27"/></name></name> <operator pos:line="338" pos:column="28">=<pos:position pos:line="338" pos:column="29"/></operator> <call><name pos:line="338" pos:column="30">read_shell_var<pos:position pos:line="338" pos:column="44"/></name><argument_list pos:line="338" pos:column="44">(<argument><expr><name pos:line="338" pos:column="45">fp<pos:position pos:line="338" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="338" pos:column="49">"GIT_AUTHOR_DATE"<pos:position pos:line="338" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="338" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="338" pos:column="68"/></expr_stmt>
	<if pos:line="339" pos:column="9">if <condition pos:line="339" pos:column="12">(<expr><operator pos:line="339" pos:column="13">!<pos:position pos:line="339" pos:column="14"/></operator><name><name pos:line="339" pos:column="14">state<pos:position pos:line="339" pos:column="19"/></name><operator pos:line="339" pos:column="19">-&gt;<pos:position pos:line="339" pos:column="24"/></operator><name pos:line="339" pos:column="21">author_date<pos:position pos:line="339" pos:column="32"/></name></name></expr>)<pos:position pos:line="339" pos:column="33"/></condition><then pos:line="339" pos:column="33"> <block pos:line="339" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="340" pos:column="17">fclose<pos:position pos:line="340" pos:column="23"/></name><argument_list pos:line="340" pos:column="23">(<argument><expr><name pos:line="340" pos:column="24">fp<pos:position pos:line="340" pos:column="26"/></name></expr></argument>)<pos:position pos:line="340" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="340" pos:column="28"/></expr_stmt>
		<return pos:line="341" pos:column="17">return <expr><operator pos:line="341" pos:column="24">-<pos:position pos:line="341" pos:column="25"/></operator><literal type="number" pos:line="341" pos:column="25">1<pos:position pos:line="341" pos:column="26"/></literal></expr>;<pos:position pos:line="341" pos:column="27"/></return>
	}<pos:position pos:line="342" pos:column="10"/></block></then></if>

	<if pos:line="344" pos:column="9">if <condition pos:line="344" pos:column="12">(<expr><call><name pos:line="344" pos:column="13">fgetc<pos:position pos:line="344" pos:column="18"/></name><argument_list pos:line="344" pos:column="18">(<argument><expr><name pos:line="344" pos:column="19">fp<pos:position pos:line="344" pos:column="21"/></name></expr></argument>)<pos:position pos:line="344" pos:column="22"/></argument_list></call> <operator pos:line="344" pos:column="23">!=<pos:position pos:line="344" pos:column="25"/></operator> <name pos:line="344" pos:column="26">EOF<pos:position pos:line="344" pos:column="29"/></name></expr>)<pos:position pos:line="344" pos:column="30"/></condition><then pos:line="344" pos:column="30"> <block pos:line="344" pos:column="31">{
		<expr_stmt><expr><call><name pos:line="345" pos:column="17">fclose<pos:position pos:line="345" pos:column="23"/></name><argument_list pos:line="345" pos:column="23">(<argument><expr><name pos:line="345" pos:column="24">fp<pos:position pos:line="345" pos:column="26"/></name></expr></argument>)<pos:position pos:line="345" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="28"/></expr_stmt>
		<return pos:line="346" pos:column="17">return <expr><operator pos:line="346" pos:column="24">-<pos:position pos:line="346" pos:column="25"/></operator><literal type="number" pos:line="346" pos:column="25">1<pos:position pos:line="346" pos:column="26"/></literal></expr>;<pos:position pos:line="346" pos:column="27"/></return>
	}<pos:position pos:line="347" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="349" pos:column="9">fclose<pos:position pos:line="349" pos:column="15"/></name><argument_list pos:line="349" pos:column="15">(<argument><expr><name pos:line="349" pos:column="16">fp<pos:position pos:line="349" pos:column="18"/></name></expr></argument>)<pos:position pos:line="349" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="20"/></expr_stmt>
	<return pos:line="350" pos:column="9">return <expr><literal type="number" pos:line="350" pos:column="16">0<pos:position pos:line="350" pos:column="17"/></literal></expr>;<pos:position pos:line="350" pos:column="18"/></return>
}<pos:position pos:line="351" pos:column="2"/></block></function>


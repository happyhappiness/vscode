<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6869.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">h2_session_read<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">h2_session<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">session<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">int<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">block<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">status<pos:position pos:line="3" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="26">rstatus<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><name pos:line="3" pos:column="36">APR_EAGAIN<pos:position pos:line="3" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">conn_rec<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">c<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name><name pos:line="4" pos:column="19">session<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">-&gt;<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="28">c<pos:position pos:line="4" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_off_t<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">read_start<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">session<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">-&gt;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="37">io<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">.<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">bytes_read<pos:position pos:line="5" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="51"/></decl_stmt>
    
    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><literal type="number" pos:line="7" pos:column="12">1<pos:position pos:line="7" pos:column="13"/></literal></expr>)<pos:position pos:line="7" pos:column="14"/></condition> <block pos:line="7" pos:column="15">{
        <comment type="block" pos:line="8" pos:column="9">/* H2_IN filter handles all incoming data against the session.
         * We just pull at the filter chain to make it happen */</comment>
        <expr_stmt><expr><name pos:line="10" pos:column="9">status<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <call><name pos:line="10" pos:column="18">ap_get_brigade<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name><name pos:line="10" pos:column="33">c<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">input_filters<pos:position pos:line="10" pos:column="49"/></name></name></expr></argument>,
                                <argument><expr><name><name pos:line="11" pos:column="33">session<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">-&gt;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="42">bbtmp<pos:position pos:line="11" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">AP_MODE_READBYTES<pos:position pos:line="11" pos:column="66"/></name></expr></argument>,
                                <argument><expr><ternary><condition><expr><name pos:line="12" pos:column="33">block<pos:position pos:line="12" pos:column="38"/></name></expr>?<pos:position pos:line="12" pos:column="39"/></condition><then pos:line="12" pos:column="39"> <expr><name pos:line="12" pos:column="40">APR_BLOCK_READ<pos:position pos:line="12" pos:column="54"/></name></expr> <pos:position pos:line="12" pos:column="55"/></then><else pos:line="12" pos:column="55">: <expr><name pos:line="12" pos:column="57">APR_NONBLOCK_READ<pos:position pos:line="12" pos:column="74"/></name></expr></else></ternary></expr></argument>,
                                <argument><expr><name pos:line="13" pos:column="33">APR_BUCKET_BUFF_SIZE<pos:position pos:line="13" pos:column="53"/></name></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="55"/></expr_stmt>
        <comment type="block" pos:line="14" pos:column="9">/* get rid of any possible data we do not expect to get */</comment>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">apr_brigade_cleanup<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name><name pos:line="15" pos:column="29">session<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">-&gt;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="38">bbtmp<pos:position pos:line="15" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt> 

        <switch pos:line="17" pos:column="9">switch <condition pos:line="17" pos:column="16">(<expr><name pos:line="17" pos:column="17">status<pos:position pos:line="17" pos:column="23"/></name></expr>)<pos:position pos:line="17" pos:column="24"/></condition> <block pos:line="17" pos:column="25">{
            <case pos:line="18" pos:column="13">case <expr><name pos:line="18" pos:column="18">APR_SUCCESS<pos:position pos:line="18" pos:column="29"/></name></expr>:<pos:position pos:line="18" pos:column="30"/></case>
                <comment type="block" pos:line="19" pos:column="17">/* successful read, reset our idle timers */</comment>
                <expr_stmt><expr><name pos:line="20" pos:column="17">rstatus<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="27">APR_SUCCESS<pos:position pos:line="20" pos:column="38"/></name></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
                <if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">block<pos:position pos:line="21" pos:column="26"/></name></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27"> <block pos:line="21" pos:column="28">{
                    <comment type="block" pos:line="22" pos:column="21">/* successful blocked read, try unblocked to
                     * get more. */</comment>
                    <expr_stmt><expr><name pos:line="24" pos:column="21">block<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">=<pos:position pos:line="24" pos:column="28"/></operator> <literal type="number" pos:line="24" pos:column="29">0<pos:position pos:line="24" pos:column="30"/></literal></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
                }<pos:position pos:line="25" pos:column="18"/></block></then></if>
                <break pos:line="26" pos:column="17">break;<pos:position pos:line="26" pos:column="23"/></break>
            <case pos:line="27" pos:column="13">case <expr><name pos:line="27" pos:column="18">APR_EAGAIN<pos:position pos:line="27" pos:column="28"/></name></expr>:<pos:position pos:line="27" pos:column="29"/></case>
                <return pos:line="28" pos:column="17">return <expr><name pos:line="28" pos:column="24">rstatus<pos:position pos:line="28" pos:column="31"/></name></expr>;<pos:position pos:line="28" pos:column="32"/></return>
            <case pos:line="29" pos:column="13">case <expr><name pos:line="29" pos:column="18">APR_TIMEUP<pos:position pos:line="29" pos:column="28"/></name></expr>:<pos:position pos:line="29" pos:column="29"/></case>
                <return pos:line="30" pos:column="17">return <expr><name pos:line="30" pos:column="24">status<pos:position pos:line="30" pos:column="30"/></name></expr>;<pos:position pos:line="30" pos:column="31"/></return>
            <default pos:line="31" pos:column="13">default:<pos:position pos:line="31" pos:column="21"/></default>
                <if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name><name pos:line="32" pos:column="21">session<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">-&gt;<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="30">io<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">.<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="33">bytes_read<pos:position pos:line="32" pos:column="43"/></name></name> <operator pos:line="32" pos:column="44">==<pos:position pos:line="32" pos:column="46"/></operator> <name pos:line="32" pos:column="47">read_start<pos:position pos:line="32" pos:column="57"/></name></expr>)<pos:position pos:line="32" pos:column="58"/></condition><then pos:line="32" pos:column="58"> <block pos:line="32" pos:column="59">{
                    <comment type="block" pos:line="33" pos:column="21">/* first attempt failed */</comment>
                    <if pos:line="34" pos:column="21">if <condition pos:line="34" pos:column="24">(<expr><call><name pos:line="34" pos:column="25">APR_STATUS_IS_ETIMEDOUT<pos:position pos:line="34" pos:column="48"/></name><argument_list pos:line="34" pos:column="48">(<argument><expr><name pos:line="34" pos:column="49">status<pos:position pos:line="34" pos:column="55"/></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call>
                        <operator pos:line="35" pos:column="25">||<pos:position pos:line="35" pos:column="27"/></operator> <call><name pos:line="35" pos:column="28">APR_STATUS_IS_ECONNABORTED<pos:position pos:line="35" pos:column="54"/></name><argument_list pos:line="35" pos:column="54">(<argument><expr><name pos:line="35" pos:column="55">status<pos:position pos:line="35" pos:column="61"/></name></expr></argument>)<pos:position pos:line="35" pos:column="62"/></argument_list></call>
                        <operator pos:line="36" pos:column="25">||<pos:position pos:line="36" pos:column="27"/></operator> <call><name pos:line="36" pos:column="28">APR_STATUS_IS_ECONNRESET<pos:position pos:line="36" pos:column="52"/></name><argument_list pos:line="36" pos:column="52">(<argument><expr><name pos:line="36" pos:column="53">status<pos:position pos:line="36" pos:column="59"/></name></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call>
                        <operator pos:line="37" pos:column="25">||<pos:position pos:line="37" pos:column="27"/></operator> <call><name pos:line="37" pos:column="28">APR_STATUS_IS_EOF<pos:position pos:line="37" pos:column="45"/></name><argument_list pos:line="37" pos:column="45">(<argument><expr><name pos:line="37" pos:column="46">status<pos:position pos:line="37" pos:column="52"/></name></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call>
                        <operator pos:line="38" pos:column="25">||<pos:position pos:line="38" pos:column="27"/></operator> <call><name pos:line="38" pos:column="28">APR_STATUS_IS_EBADF<pos:position pos:line="38" pos:column="47"/></name><argument_list pos:line="38" pos:column="47">(<argument><expr><name pos:line="38" pos:column="48">status<pos:position pos:line="38" pos:column="54"/></name></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="56"/></condition><then pos:line="38" pos:column="56"> <block pos:line="38" pos:column="57">{
                        <comment type="block" pos:line="39" pos:column="25">/* common status for a client that has left */</comment>
                        <expr_stmt><expr><call><name pos:line="40" pos:column="25">ap_log_cerror<pos:position pos:line="40" pos:column="38"/></name><argument_list pos:line="40" pos:column="38">( <argument><expr><name pos:line="40" pos:column="40">APLOG_MARK<pos:position pos:line="40" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="52">APLOG_TRACE1<pos:position pos:line="40" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="66">status<pos:position pos:line="40" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="74">c<pos:position pos:line="40" pos:column="75"/></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="41" pos:column="39">"h2_session(%ld): input gone"<pos:position pos:line="41" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="70">session<pos:position pos:line="41" pos:column="77"/></name><operator pos:line="41" pos:column="77">-&gt;<pos:position pos:line="41" pos:column="82"/></operator><name pos:line="41" pos:column="79">id<pos:position pos:line="41" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="83"/></expr_stmt>
                    }<pos:position pos:line="42" pos:column="22"/></block></then>
                    <else pos:line="43" pos:column="21">else <block pos:line="43" pos:column="26">{
                        <comment type="block" pos:line="44" pos:column="25">/* uncommon status, log on INFO so that we see this */</comment>
                        <expr_stmt><expr><call><name pos:line="45" pos:column="25">ap_log_cerror<pos:position pos:line="45" pos:column="38"/></name><argument_list pos:line="45" pos:column="38">( <argument><expr><name pos:line="45" pos:column="40">APLOG_MARK<pos:position pos:line="45" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="52">APLOG_DEBUG<pos:position pos:line="45" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="65">status<pos:position pos:line="45" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="73">c<pos:position pos:line="45" pos:column="74"/></name></expr></argument>,
                                      <argument><expr><call><name pos:line="46" pos:column="39">APLOGNO<pos:position pos:line="46" pos:column="46"/></name><argument_list pos:line="46" pos:column="46">(<argument><expr><literal type="number" pos:line="46" pos:column="47">02950<pos:position pos:line="46" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="53"/></argument_list></call> 
                                      <literal type="string" pos:line="47" pos:column="39">"h2_session(%ld): error reading, terminating"<pos:position pos:line="47" pos:column="84"/></literal></expr></argument>,
                                      <argument><expr><name><name pos:line="48" pos:column="39">session<pos:position pos:line="48" pos:column="46"/></name><operator pos:line="48" pos:column="46">-&gt;<pos:position pos:line="48" pos:column="51"/></operator><name pos:line="48" pos:column="48">id<pos:position pos:line="48" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="52"/></expr_stmt>
                    }<pos:position pos:line="49" pos:column="22"/></block></else></if>
                    <return pos:line="50" pos:column="21">return <expr><name pos:line="50" pos:column="28">status<pos:position pos:line="50" pos:column="34"/></name></expr>;<pos:position pos:line="50" pos:column="35"/></return>
                }<pos:position pos:line="51" pos:column="18"/></block></then></if>
                <comment type="block" pos:line="52" pos:column="17">/* subsequent failure after success(es), return initial
                 * status. */</comment>
                <return pos:line="54" pos:column="17">return <expr><name pos:line="54" pos:column="24">rstatus<pos:position pos:line="54" pos:column="31"/></name></expr>;<pos:position pos:line="54" pos:column="32"/></return>
        }<pos:position pos:line="55" pos:column="10"/></block></switch>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">(<pos:position pos:line="56" pos:column="14"/></operator><name><name pos:line="56" pos:column="14">session<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">-&gt;<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="23">io<pos:position pos:line="56" pos:column="25"/></name><operator pos:line="56" pos:column="25">.<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="26">bytes_read<pos:position pos:line="56" pos:column="36"/></name></name> <operator pos:line="56" pos:column="37">-<pos:position pos:line="56" pos:column="38"/></operator> <name pos:line="56" pos:column="39">read_start<pos:position pos:line="56" pos:column="49"/></name><operator pos:line="56" pos:column="49">)<pos:position pos:line="56" pos:column="50"/></operator> <operator pos:line="56" pos:column="51">&gt;<pos:position pos:line="56" pos:column="55"/></operator> <operator pos:line="56" pos:column="53">(<pos:position pos:line="56" pos:column="54"/></operator><literal type="number" pos:line="56" pos:column="54">64<pos:position pos:line="56" pos:column="56"/></literal><operator pos:line="56" pos:column="56">*<pos:position pos:line="56" pos:column="57"/></operator><literal type="number" pos:line="56" pos:column="57">1024<pos:position pos:line="56" pos:column="61"/></literal><operator pos:line="56" pos:column="61">)<pos:position pos:line="56" pos:column="62"/></operator></expr>)<pos:position pos:line="56" pos:column="63"/></condition><then pos:line="56" pos:column="63"> <block pos:line="56" pos:column="64">{
            <comment type="block" pos:line="57" pos:column="13">/* read enough in one go, give write a chance */</comment>
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">ap_log_cerror<pos:position pos:line="58" pos:column="26"/></name><argument_list pos:line="58" pos:column="26">(<argument><expr><name pos:line="58" pos:column="27">APLOG_MARK<pos:position pos:line="58" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="39">APLOG_TRACE2<pos:position pos:line="58" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="53">status<pos:position pos:line="58" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="61">c<pos:position pos:line="58" pos:column="62"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="59" pos:column="27">"h2_session(%ld): read 64k, returning"<pos:position pos:line="59" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="67">session<pos:position pos:line="59" pos:column="74"/></name><operator pos:line="59" pos:column="74">-&gt;<pos:position pos:line="59" pos:column="79"/></operator><name pos:line="59" pos:column="76">id<pos:position pos:line="59" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="80"/></expr_stmt>
            <break pos:line="60" pos:column="13">break;<pos:position pos:line="60" pos:column="19"/></break>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>
    }<pos:position pos:line="62" pos:column="6"/></block></while>
    <return pos:line="63" pos:column="5">return <expr><name pos:line="63" pos:column="12">rstatus<pos:position pos:line="63" pos:column="19"/></name></expr>;<pos:position pos:line="63" pos:column="20"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

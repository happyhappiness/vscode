<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2887_httpd-2.2.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dbd_oracle_prepare<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">apr_pool_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">pool<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">apr_dbd_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">sql<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">query<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier> <name pos:line="2" pos:column="56">char<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">label<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="3" pos:column="31">int<pos:position pos:line="3" pos:column="34"/></name></type> <name pos:line="3" pos:column="35">nargs<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="42">int<pos:position pos:line="3" pos:column="45"/></name></type> <name pos:line="3" pos:column="46">nvals<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="53">apr_dbd_type_e<pos:position pos:line="3" pos:column="67"/></name> <modifier pos:line="3" pos:column="68">*<pos:position pos:line="3" pos:column="69"/></modifier></type><name pos:line="3" pos:column="69">types<pos:position pos:line="3" pos:column="74"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="4" pos:column="31">apr_dbd_prepared_t<pos:position pos:line="4" pos:column="49"/></name> <modifier pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></modifier><modifier pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></modifier></type><name pos:line="4" pos:column="52">statement<pos:position pos:line="4" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="62"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">ret<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><literal type="number" pos:line="6" pos:column="15">0<pos:position pos:line="6" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_dbd_prepared_t<pos:position pos:line="8" pos:column="23"/></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">stmt<pos:position pos:line="8" pos:column="29"/></name></decl> ;<pos:position pos:line="8" pos:column="31"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">statement<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">==<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">NULL<pos:position pos:line="10" pos:column="27"/></name></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28"> <block pos:line="10" pos:column="29">{
        <expr_stmt><expr><operator pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">statement<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <call><name pos:line="11" pos:column="22">apr_pcalloc<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">pool<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="40">sizeof<argument_list pos:line="11" pos:column="46">(<argument><expr><name pos:line="11" pos:column="47">apr_dbd_prepared_t<pos:position pos:line="11" pos:column="65"/></name></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="13" pos:column="5">stmt<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <operator pos:line="13" pos:column="12">*<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">statement<pos:position pos:line="13" pos:column="22"/></name></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">stmt<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">-&gt;<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="11">handle<pos:position pos:line="14" pos:column="17"/></name></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">sql<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">stmt<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">pool<pos:position pos:line="15" pos:column="15"/></name></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">pool<pos:position pos:line="15" pos:column="22"/></name></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">stmt<pos:position pos:line="16" pos:column="9"/></name><operator pos:line="16" pos:column="9">-&gt;<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="11">nargs<pos:position pos:line="16" pos:column="16"/></name></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">nargs<pos:position pos:line="16" pos:column="24"/></name></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">stmt<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">-&gt;<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="11">nvals<pos:position pos:line="17" pos:column="16"/></name></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">nvals<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* populate our own args, if any */</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">nargs<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">&gt;<pos:position pos:line="20" pos:column="19"/></operator> <literal type="number" pos:line="20" pos:column="17">0<pos:position pos:line="20" pos:column="18"/></literal></expr>)<pos:position pos:line="20" pos:column="19"/></condition><then pos:line="20" pos:column="19"> <block pos:line="20" pos:column="20">{
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">stmt<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">args<pos:position pos:line="21" pos:column="19"/></name></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <call><name pos:line="21" pos:column="22">apr_pcalloc<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">pool<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="40">nargs<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">*<pos:position pos:line="21" pos:column="46"/></operator><sizeof pos:line="21" pos:column="46">sizeof<argument_list pos:line="21" pos:column="52">(<argument><expr><name pos:line="21" pos:column="53">bind_arg<pos:position pos:line="21" pos:column="61"/></name></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="64"/></expr_stmt>
        <for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">i<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></init> <condition><expr><name pos:line="22" pos:column="21">i<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">&lt;<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="25">nargs<pos:position pos:line="22" pos:column="30"/></name></expr>;<pos:position pos:line="22" pos:column="31"/></condition> <incr><expr><name pos:line="22" pos:column="32">i<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">++<pos:position pos:line="22" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="36"/></control> <block pos:line="22" pos:column="37">{
            <expr_stmt><expr><name><name pos:line="23" pos:column="13">stmt<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">args<pos:position pos:line="23" pos:column="23"/></name><index pos:line="23" pos:column="23">[<expr><name pos:line="23" pos:column="24">i<pos:position pos:line="23" pos:column="25"/></name></expr>]<pos:position pos:line="23" pos:column="26"/></index></name><operator pos:line="23" pos:column="26">.<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">type<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">=<pos:position pos:line="23" pos:column="33"/></operator> <name><name pos:line="23" pos:column="34">types<pos:position pos:line="23" pos:column="39"/></name><index pos:line="23" pos:column="39">[<expr><name pos:line="23" pos:column="40">i<pos:position pos:line="23" pos:column="41"/></name></expr>]<pos:position pos:line="23" pos:column="42"/></index></name></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></for>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="27" pos:column="5">sql<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">-&gt;<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="10">status<pos:position pos:line="27" pos:column="16"/></name></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <call><name pos:line="27" pos:column="19">OCIHandleAlloc<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">dbd_oracle_env<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="50">(<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="51">dvoid<pos:position pos:line="27" pos:column="56"/></name><operator pos:line="27" pos:column="56">*<pos:position pos:line="27" pos:column="57"/></operator><operator pos:line="27" pos:column="57">*<pos:position pos:line="27" pos:column="58"/></operator><operator pos:line="27" pos:column="58">)<pos:position pos:line="27" pos:column="59"/></operator> <operator pos:line="27" pos:column="60">&amp;<pos:position pos:line="27" pos:column="65"/></operator><name><name pos:line="27" pos:column="61">stmt<pos:position pos:line="27" pos:column="65"/></name><operator pos:line="27" pos:column="65">-&gt;<pos:position pos:line="27" pos:column="70"/></operator><name pos:line="27" pos:column="67">stmt<pos:position pos:line="27" pos:column="71"/></name></name></expr></argument>,
                                 <argument><expr><name pos:line="28" pos:column="34">OCI_HTYPE_STMT<pos:position pos:line="28" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="50">0<pos:position pos:line="28" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="53">NULL<pos:position pos:line="28" pos:column="57"/></name></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="59"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">sql<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">status<pos:position pos:line="29" pos:column="20"/></name></name> <operator pos:line="29" pos:column="21">!=<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">OCI_SUCCESS<pos:position pos:line="29" pos:column="35"/></name></expr>)<pos:position pos:line="29" pos:column="36"/></condition><then pos:line="29" pos:column="36"> <block pos:line="29" pos:column="37">{
        <return pos:line="30" pos:column="9">return <expr><literal type="number" pos:line="30" pos:column="16">1<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="33" pos:column="5">sql<pos:position pos:line="33" pos:column="8"/></name><operator pos:line="33" pos:column="8">-&gt;<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="10">status<pos:position pos:line="33" pos:column="16"/></name></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <call><name pos:line="33" pos:column="19">OCIStmtPrepare<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><name><name pos:line="33" pos:column="34">stmt<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">-&gt;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="40">stmt<pos:position pos:line="33" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="46">sql<pos:position pos:line="33" pos:column="49"/></name><operator pos:line="33" pos:column="49">-&gt;<pos:position pos:line="33" pos:column="54"/></operator><name pos:line="33" pos:column="51">err<pos:position pos:line="33" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="56">(<pos:position pos:line="33" pos:column="57"/></operator><name pos:line="33" pos:column="57">text<pos:position pos:line="33" pos:column="61"/></name><operator pos:line="33" pos:column="61">*<pos:position pos:line="33" pos:column="62"/></operator><operator pos:line="33" pos:column="62">)<pos:position pos:line="33" pos:column="63"/></operator> <name pos:line="33" pos:column="64">query<pos:position pos:line="33" pos:column="69"/></name></expr></argument>,
                                 <argument><expr><call><name pos:line="34" pos:column="34">strlen<pos:position pos:line="34" pos:column="40"/></name><argument_list pos:line="34" pos:column="40">(<argument><expr><name pos:line="34" pos:column="41">query<pos:position pos:line="34" pos:column="46"/></name></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="34" pos:column="49">OCI_NTV_SYNTAX<pos:position pos:line="34" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="65">OCI_DEFAULT<pos:position pos:line="34" pos:column="76"/></name></expr></argument>)<pos:position pos:line="34" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="78"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name><name pos:line="35" pos:column="9">sql<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">status<pos:position pos:line="35" pos:column="20"/></name></name> <operator pos:line="35" pos:column="21">!=<pos:position pos:line="35" pos:column="23"/></operator> <name pos:line="35" pos:column="24">OCI_SUCCESS<pos:position pos:line="35" pos:column="35"/></name></expr>)<pos:position pos:line="35" pos:column="36"/></condition><then pos:line="35" pos:column="36"> <block pos:line="35" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">OCIHandleFree<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><name><name pos:line="36" pos:column="23">stmt<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">stmt<pos:position pos:line="36" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="35">OCI_HTYPE_STMT<pos:position pos:line="36" pos:column="49"/></name></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="51"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><literal type="number" pos:line="37" pos:column="16">1<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">pool<pos:position pos:line="40" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="37">stmt<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="43">freeStatement<pos:position pos:line="40" pos:column="56"/></name></expr></argument>,
                              <argument><expr><name pos:line="41" pos:column="31">apr_pool_cleanup_null<pos:position pos:line="41" pos:column="52"/></name></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt>

    <comment type="block" pos:line="43" pos:column="5">/* Perl gets statement type here */</comment>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">sql<pos:position pos:line="44" pos:column="8"/></name><operator pos:line="44" pos:column="8">-&gt;<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="10">status<pos:position pos:line="44" pos:column="16"/></name></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <call><name pos:line="44" pos:column="19">OCIAttrGet<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><name><name pos:line="44" pos:column="30">stmt<pos:position pos:line="44" pos:column="34"/></name><operator pos:line="44" pos:column="34">-&gt;<pos:position pos:line="44" pos:column="39"/></operator><name pos:line="44" pos:column="36">stmt<pos:position pos:line="44" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="42">OCI_HTYPE_STMT<pos:position pos:line="44" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="58">&amp;<pos:position pos:line="44" pos:column="63"/></operator><name><name pos:line="44" pos:column="59">stmt<pos:position pos:line="44" pos:column="63"/></name><operator pos:line="44" pos:column="63">-&gt;<pos:position pos:line="44" pos:column="68"/></operator><name pos:line="44" pos:column="65">type<pos:position pos:line="44" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="71">0<pos:position pos:line="44" pos:column="72"/></literal></expr></argument>,
                             <argument><expr><name pos:line="45" pos:column="30">OCI_ATTR_STMT_TYPE<pos:position pos:line="45" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="50">sql<pos:position pos:line="45" pos:column="53"/></name><operator pos:line="45" pos:column="53">-&gt;<pos:position pos:line="45" pos:column="58"/></operator><name pos:line="45" pos:column="55">err<pos:position pos:line="45" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="60"/></expr_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name><name pos:line="46" pos:column="9">sql<pos:position pos:line="46" pos:column="12"/></name><operator pos:line="46" pos:column="12">-&gt;<pos:position pos:line="46" pos:column="17"/></operator><name pos:line="46" pos:column="14">status<pos:position pos:line="46" pos:column="20"/></name></name> <operator pos:line="46" pos:column="21">!=<pos:position pos:line="46" pos:column="23"/></operator> <name pos:line="46" pos:column="24">OCI_SUCCESS<pos:position pos:line="46" pos:column="35"/></name></expr>)<pos:position pos:line="46" pos:column="36"/></condition><then pos:line="46" pos:column="36"> <block pos:line="46" pos:column="37">{
        <return pos:line="47" pos:column="9">return <expr><literal type="number" pos:line="47" pos:column="16">1<pos:position pos:line="47" pos:column="17"/></literal></expr>;<pos:position pos:line="47" pos:column="18"/></return>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

<comment type="block" pos:line="50" pos:column="1">/* Perl sets PREFETCH_MEMORY here, but the docs say there's a working default */</comment>
<cpp:if pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">if<pos:position pos:line="51" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="51" pos:column="5">0<pos:position pos:line="51" pos:column="6"/></literal></expr></cpp:if>
    sql-&gt;status = OCIAttrSet(stmt-&gt;stmt, OCI_HTYPE_STMT, &amp;prefetch_size,
                             sizeof(prefetch_size), OCI_ATTR_PREFETCH_MEMORY,
                             sql-&gt;err);
    if (sql-&gt;status != OCI_SUCCESS) {
        return 1;
    }
<cpp:endif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">endif<pos:position pos:line="58" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name><name pos:line="60" pos:column="9">stmt<pos:position pos:line="60" pos:column="13"/></name><operator pos:line="60" pos:column="13">-&gt;<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="15">type<pos:position pos:line="60" pos:column="19"/></name></name> <operator pos:line="60" pos:column="20">==<pos:position pos:line="60" pos:column="22"/></operator> <name pos:line="60" pos:column="23">OCI_STMT_SELECT<pos:position pos:line="60" pos:column="38"/></name></expr>)<pos:position pos:line="60" pos:column="39"/></condition><then pos:line="60" pos:column="39"> <block pos:line="60" pos:column="40">{
        <expr_stmt><expr><name pos:line="61" pos:column="9">ret<pos:position pos:line="61" pos:column="12"/></name> <operator pos:line="61" pos:column="13">=<pos:position pos:line="61" pos:column="14"/></operator> <call><name pos:line="61" pos:column="15">outputParams<pos:position pos:line="61" pos:column="27"/></name><argument_list pos:line="61" pos:column="27">(<argument><expr><name pos:line="61" pos:column="28">sql<pos:position pos:line="61" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="33">stmt<pos:position pos:line="61" pos:column="37"/></name></expr></argument>)<pos:position pos:line="61" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>
    <return pos:line="63" pos:column="5">return <expr><name pos:line="63" pos:column="12">ret<pos:position pos:line="63" pos:column="15"/></name></expr>;<pos:position pos:line="63" pos:column="16"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3991.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">add_alias_internal<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">cmd_parms<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">cmd<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">void<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">dummy<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                                      <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">f<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="54">const<pos:position pos:line="2" pos:column="59"/></specifier> <name pos:line="2" pos:column="60">char<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">r<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="3" pos:column="39">int<pos:position pos:line="3" pos:column="42"/></name></type> <name pos:line="3" pos:column="43">use_regex<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="53"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">server_rec<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">s<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name><name pos:line="5" pos:column="21">cmd<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">-&gt;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="26">server<pos:position pos:line="5" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">alias_server_conf<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">conf<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><call><name pos:line="6" pos:column="31">ap_get_module_config<pos:position pos:line="6" pos:column="51"/></name><argument_list pos:line="6" pos:column="51">(<argument><expr><name><name pos:line="6" pos:column="52">s<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">-&gt;<pos:position pos:line="6" pos:column="58"/></operator><name pos:line="6" pos:column="55">module_config<pos:position pos:line="6" pos:column="68"/></name></name></expr></argument>,
                                                   <argument><expr><operator pos:line="7" pos:column="52">&amp;<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="53">alias_module<pos:position pos:line="7" pos:column="65"/></name></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="67"/></decl_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">alias_entry<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></operator><operator pos:line="8" pos:column="18">new<pos:position pos:line="8" pos:column="21"/></operator> <operator pos:line="8" pos:column="22">=<pos:position pos:line="8" pos:column="23"/></operator> <call><name pos:line="8" pos:column="24">apr_array_push<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">(<argument><expr><name><name pos:line="8" pos:column="39">conf<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">-&gt;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="45">aliases<pos:position pos:line="8" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="54"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">alias_entry<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">entries<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><operator pos:line="9" pos:column="28">(<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">alias_entry<pos:position pos:line="9" pos:column="40"/></name> <operator pos:line="9" pos:column="41">*<pos:position pos:line="9" pos:column="42"/></operator><operator pos:line="9" pos:column="42">)<pos:position pos:line="9" pos:column="43"/></operator><name><name pos:line="9" pos:column="43">conf<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">-&gt;<pos:position pos:line="9" pos:column="52"/></operator><name pos:line="9" pos:column="49">aliases<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">-&gt;<pos:position pos:line="9" pos:column="61"/></operator><name pos:line="9" pos:column="58">elts<pos:position pos:line="9" pos:column="62"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="63"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">i<pos:position pos:line="10" pos:column="10"/></name></decl>;<pos:position pos:line="10" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* XX r can NOT be relative to DocumentRoot here... compat bug. */</comment>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">use_regex<pos:position pos:line="14" pos:column="18"/></name></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19"> <block pos:line="14" pos:column="20">{
        <expr_stmt><expr><operator pos:line="15" pos:column="9">new<pos:position pos:line="15" pos:column="12"/></operator><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">regexp<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <call><name pos:line="15" pos:column="23">ap_pregcomp<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name><name pos:line="15" pos:column="35">cmd<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">-&gt;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="40">pool<pos:position pos:line="15" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="46">f<pos:position pos:line="15" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="49">AP_REG_EXTENDED<pos:position pos:line="15" pos:column="64"/></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="66"/></expr_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">new<pos:position pos:line="16" pos:column="16"/></operator><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">regexp<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">==<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="28">NULL<pos:position pos:line="16" pos:column="32"/></name></expr>)<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33">
            <block type="pseudo"><return pos:line="17" pos:column="13">return <expr><literal type="string" pos:line="17" pos:column="20">"Regular expression could not be compiled."<pos:position pos:line="17" pos:column="63"/></literal></expr>;<pos:position pos:line="17" pos:column="64"/></return></block></then></if>
        <expr_stmt><expr><operator pos:line="18" pos:column="9">new<pos:position pos:line="18" pos:column="12"/></operator><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">real<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">r<pos:position pos:line="18" pos:column="22"/></name></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then>
    <else pos:line="20" pos:column="5">else <block pos:line="20" pos:column="10">{
        <comment type="block" pos:line="21" pos:column="9">/* XXX This may be optimized, but we must know that new-&gt;real
         * exists.  If so, we can dir merge later, trusing new-&gt;real
         * and just canonicalizing the remainder.  Not till I finish
         * cleaning out the old ap_canonical stuff first.
         */</comment>
        <expr_stmt><expr><operator pos:line="26" pos:column="9">new<pos:position pos:line="26" pos:column="12"/></operator><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">real<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <name pos:line="26" pos:column="21">r<pos:position pos:line="26" pos:column="22"/></name></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></else></if>
    <expr_stmt><expr><operator pos:line="28" pos:column="5">new<pos:position pos:line="28" pos:column="8"/></operator><operator pos:line="28" pos:column="8">-&gt;<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="10">fake<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <name pos:line="28" pos:column="17">f<pos:position pos:line="28" pos:column="18"/></name></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="29" pos:column="5">new<pos:position pos:line="29" pos:column="8"/></operator><operator pos:line="29" pos:column="8">-&gt;<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="10">handler<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <name><name pos:line="29" pos:column="20">cmd<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">-&gt;<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="25">info<pos:position pos:line="29" pos:column="29"/></name></name></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="31" pos:column="5">/* check for overlapping (Script)Alias directives
     * and throw a warning if found one
     */</comment>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">!<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">use_regex<pos:position pos:line="34" pos:column="19"/></name></expr>)<pos:position pos:line="34" pos:column="20"/></condition><then pos:line="34" pos:column="20"> <block pos:line="34" pos:column="21">{
        <for pos:line="35" pos:column="9">for <control pos:line="35" pos:column="13">(<init><expr><name pos:line="35" pos:column="14">i<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <literal type="number" pos:line="35" pos:column="18">0<pos:position pos:line="35" pos:column="19"/></literal></expr>;<pos:position pos:line="35" pos:column="20"/></init> <condition><expr><name pos:line="35" pos:column="21">i<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">&lt;<pos:position pos:line="35" pos:column="27"/></operator> <name><name pos:line="35" pos:column="25">conf<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">-&gt;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="31">aliases<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">-&gt;<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="40">nelts<pos:position pos:line="35" pos:column="45"/></name></name> <operator pos:line="35" pos:column="46">-<pos:position pos:line="35" pos:column="47"/></operator> <literal type="number" pos:line="35" pos:column="48">1<pos:position pos:line="35" pos:column="49"/></literal></expr>;<pos:position pos:line="35" pos:column="50"/></condition> <incr><expr><operator pos:line="35" pos:column="51">++<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="53">i<pos:position pos:line="35" pos:column="54"/></name></expr></incr>)<pos:position pos:line="35" pos:column="55"/></control> <block pos:line="35" pos:column="56">{
            <decl_stmt><decl><type><name pos:line="36" pos:column="13">alias_entry<pos:position pos:line="36" pos:column="24"/></name> <modifier pos:line="36" pos:column="25">*<pos:position pos:line="36" pos:column="26"/></modifier></type><name pos:line="36" pos:column="26">p<pos:position pos:line="36" pos:column="27"/></name> <init pos:line="36" pos:column="28">= <expr><operator pos:line="36" pos:column="30">&amp;<pos:position pos:line="36" pos:column="35"/></operator><name><name pos:line="36" pos:column="31">entries<pos:position pos:line="36" pos:column="38"/></name><index pos:line="36" pos:column="38">[<expr><name pos:line="36" pos:column="39">i<pos:position pos:line="36" pos:column="40"/></name></expr>]<pos:position pos:line="36" pos:column="41"/></index></name></expr></init></decl>;<pos:position pos:line="36" pos:column="42"/></decl_stmt>

            <if pos:line="38" pos:column="13">if <condition pos:line="38" pos:column="16">(  <expr><operator pos:line="38" pos:column="19">(<pos:position pos:line="38" pos:column="20"/></operator><operator pos:line="38" pos:column="20">!<pos:position pos:line="38" pos:column="21"/></operator><name><name pos:line="38" pos:column="21">p<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-&gt;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="24">regexp<pos:position pos:line="38" pos:column="30"/></name></name> <operator pos:line="38" pos:column="31">&amp;&amp;<pos:position pos:line="38" pos:column="41"/></operator>  <call><name pos:line="38" pos:column="35">alias_matches<pos:position pos:line="38" pos:column="48"/></name><argument_list pos:line="38" pos:column="48">(<argument><expr><name pos:line="38" pos:column="49">f<pos:position pos:line="38" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="52">p<pos:position pos:line="38" pos:column="53"/></name><operator pos:line="38" pos:column="53">-&gt;<pos:position pos:line="38" pos:column="58"/></operator><name pos:line="38" pos:column="55">fake<pos:position pos:line="38" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="60"/></argument_list></call> <operator pos:line="38" pos:column="61">&gt;<pos:position pos:line="38" pos:column="65"/></operator> <literal type="number" pos:line="38" pos:column="63">0<pos:position pos:line="38" pos:column="64"/></literal><operator pos:line="38" pos:column="64">)<pos:position pos:line="38" pos:column="65"/></operator>
                <operator pos:line="39" pos:column="17">||<pos:position pos:line="39" pos:column="19"/></operator> <operator pos:line="39" pos:column="20">(<pos:position pos:line="39" pos:column="21"/></operator><name><name pos:line="39" pos:column="21">p<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">-&gt;<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="24">regexp<pos:position pos:line="39" pos:column="30"/></name></name> <operator pos:line="39" pos:column="31">&amp;&amp;<pos:position pos:line="39" pos:column="41"/></operator> <operator pos:line="39" pos:column="34">!<pos:position pos:line="39" pos:column="35"/></operator><call><name pos:line="39" pos:column="35">ap_regexec<pos:position pos:line="39" pos:column="45"/></name><argument_list pos:line="39" pos:column="45">(<argument><expr><name><name pos:line="39" pos:column="46">p<pos:position pos:line="39" pos:column="47"/></name><operator pos:line="39" pos:column="47">-&gt;<pos:position pos:line="39" pos:column="52"/></operator><name pos:line="39" pos:column="49">regexp<pos:position pos:line="39" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="57">f<pos:position pos:line="39" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="60">0<pos:position pos:line="39" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="63">NULL<pos:position pos:line="39" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="69">0<pos:position pos:line="39" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="71"/></argument_list></call><operator pos:line="39" pos:column="71">)<pos:position pos:line="39" pos:column="72"/></operator></expr>)<pos:position pos:line="39" pos:column="73"/></condition><then pos:line="39" pos:column="73"> <block pos:line="39" pos:column="74">{
                <expr_stmt><expr><call><name pos:line="40" pos:column="17">ap_log_error<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">APLOG_MARK<pos:position pos:line="40" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="42">APLOG_WARNING<pos:position pos:line="40" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="57">0<pos:position pos:line="40" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="60">cmd<pos:position pos:line="40" pos:column="63"/></name><operator pos:line="40" pos:column="63">-&gt;<pos:position pos:line="40" pos:column="68"/></operator><name pos:line="40" pos:column="65">server<pos:position pos:line="40" pos:column="71"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="41" pos:column="30">"The %s directive in %s at line %d will probably "<pos:position pos:line="41" pos:column="80"/></literal>
                             <literal type="string" pos:line="42" pos:column="30">"never match because it overlaps an earlier "<pos:position pos:line="42" pos:column="75"/></literal>
                             <literal type="string" pos:line="43" pos:column="30">"%sAlias%s."<pos:position pos:line="43" pos:column="42"/></literal></expr></argument>,
                             <argument><expr><name><name pos:line="44" pos:column="30">cmd<pos:position pos:line="44" pos:column="33"/></name><operator pos:line="44" pos:column="33">-&gt;<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="35">cmd<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">-&gt;<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="40">name<pos:position pos:line="44" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="46">cmd<pos:position pos:line="44" pos:column="49"/></name><operator pos:line="44" pos:column="49">-&gt;<pos:position pos:line="44" pos:column="54"/></operator><name pos:line="44" pos:column="51">directive<pos:position pos:line="44" pos:column="60"/></name><operator pos:line="44" pos:column="60">-&gt;<pos:position pos:line="44" pos:column="65"/></operator><name pos:line="44" pos:column="62">filename<pos:position pos:line="44" pos:column="70"/></name></name></expr></argument>,
                             <argument><expr><name><name pos:line="45" pos:column="30">cmd<pos:position pos:line="45" pos:column="33"/></name><operator pos:line="45" pos:column="33">-&gt;<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="35">directive<pos:position pos:line="45" pos:column="44"/></name><operator pos:line="45" pos:column="44">-&gt;<pos:position pos:line="45" pos:column="49"/></operator><name pos:line="45" pos:column="46">line_num<pos:position pos:line="45" pos:column="54"/></name></name></expr></argument>,
                             <argument><expr><ternary><condition><expr><name><name pos:line="46" pos:column="30">p<pos:position pos:line="46" pos:column="31"/></name><operator pos:line="46" pos:column="31">-&gt;<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="33">handler<pos:position pos:line="46" pos:column="40"/></name></name></expr> ?<pos:position pos:line="46" pos:column="42"/></condition><then pos:line="46" pos:column="42"> <expr><literal type="string" pos:line="46" pos:column="43">"Script"<pos:position pos:line="46" pos:column="51"/></literal></expr> <pos:position pos:line="46" pos:column="52"/></then><else pos:line="46" pos:column="52">: <expr><literal type="string" pos:line="46" pos:column="54">""<pos:position pos:line="46" pos:column="56"/></literal></expr></else></ternary></expr></argument>,
                             <argument><expr><ternary><condition><expr><name><name pos:line="47" pos:column="30">p<pos:position pos:line="47" pos:column="31"/></name><operator pos:line="47" pos:column="31">-&gt;<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="33">regexp<pos:position pos:line="47" pos:column="39"/></name></name></expr> ?<pos:position pos:line="47" pos:column="41"/></condition><then pos:line="47" pos:column="41"> <expr><literal type="string" pos:line="47" pos:column="42">"Match"<pos:position pos:line="47" pos:column="49"/></literal></expr> <pos:position pos:line="47" pos:column="50"/></then><else pos:line="47" pos:column="50">: <expr><literal type="string" pos:line="47" pos:column="52">""<pos:position pos:line="47" pos:column="54"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="47" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="56"/></expr_stmt>

                <break pos:line="49" pos:column="17">break;<pos:position pos:line="49" pos:column="23"/></break> <comment type="block" pos:line="49" pos:column="24">/* one warning per alias should be sufficient */</comment>
            }<pos:position pos:line="50" pos:column="14"/></block></then></if>
        }<pos:position pos:line="51" pos:column="10"/></block></for>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <return pos:line="54" pos:column="5">return <expr><name pos:line="54" pos:column="12">NULL<pos:position pos:line="54" pos:column="16"/></name></expr>;<pos:position pos:line="54" pos:column="17"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2899_httpd-2.4.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ap_expr_t<pos:position pos:line="1" pos:column="10"/></name> <modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type><name pos:line="1" pos:column="12">ap_expr_str_func_make<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">name<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">ap_expr_t<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">arg<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="2" pos:column="32">ap_expr_parse_ctx_t<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">ctx<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ap_expr_t<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">info<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><call><name pos:line="4" pos:column="23">ap_expr_info_make<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">(<argument><expr><name pos:line="4" pos:column="41">AP_EXPR_FUNC_STRING<pos:position pos:line="4" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="62">name<pos:position pos:line="4" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="68">ctx<pos:position pos:line="4" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="73">arg<pos:position pos:line="4" pos:column="76"/></name></expr></argument>)<pos:position pos:line="4" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="78"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">info<pos:position pos:line="5" pos:column="14"/></name></expr>)<pos:position pos:line="5" pos:column="15"/></condition><then pos:line="5" pos:column="15">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr>;<pos:position pos:line="6" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="8" pos:column="5">info<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">-&gt;<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="11">node_op<pos:position pos:line="8" pos:column="18"/></name></name> <operator pos:line="8" pos:column="19">=<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="21">op_StringFuncInfo<pos:position pos:line="8" pos:column="38"/></name></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><call><name pos:line="9" pos:column="12">ap_expr_make<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">op_StringFuncCall<pos:position pos:line="9" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="44">info<pos:position pos:line="9" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="50">arg<pos:position pos:line="9" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="55">ctx<pos:position pos:line="9" pos:column="58"/></name></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="60"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

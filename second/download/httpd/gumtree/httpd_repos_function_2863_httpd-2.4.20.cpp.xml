<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2863_httpd-2.4.20.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">ycomp<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">sed_commands_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">commands<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">expbuf<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type>    <name pos:line="3" pos:column="13">c<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">cint<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt> <comment type="block" pos:line="4" pos:column="15">/* integer value of char c */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">ep<pos:position pos:line="5" pos:column="13"/></name></decl>, <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="16">tsp<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name>    <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">sp<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">ep<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator> <name pos:line="9" pos:column="10">expbuf<pos:position pos:line="9" pos:column="16"/></name></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>
    <if pos:line="10" pos:column="5">if<condition pos:line="10" pos:column="7">(<expr><name pos:line="10" pos:column="8">ep<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">+<pos:position pos:line="10" pos:column="12"/></operator> <literal type="number" pos:line="10" pos:column="13">0377<pos:position pos:line="10" pos:column="17"/></literal> <operator pos:line="10" pos:column="18">&gt;<pos:position pos:line="10" pos:column="22"/></operator> <operator pos:line="10" pos:column="20">&amp;<pos:position pos:line="10" pos:column="25"/></operator><name><name pos:line="10" pos:column="21">commands<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">respace<pos:position pos:line="10" pos:column="38"/></name><index pos:line="10" pos:column="38">[<expr><name pos:line="10" pos:column="39">RESIZE<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">-<pos:position pos:line="10" pos:column="46"/></operator><literal type="number" pos:line="10" pos:column="46">1<pos:position pos:line="10" pos:column="47"/></literal></expr>]<pos:position pos:line="10" pos:column="48"/></index></name></expr>)<pos:position pos:line="10" pos:column="49"/></condition><then pos:line="10" pos:column="49"> <block pos:line="10" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">command_errf<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">commands<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="32">SEDERR_TMMES<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="46">commands<pos:position pos:line="11" pos:column="54"/></name><operator pos:line="11" pos:column="54">-&gt;<pos:position pos:line="11" pos:column="59"/></operator><name pos:line="11" pos:column="56">linebuf<pos:position pos:line="11" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></expr_stmt>
        <return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">NULL<pos:position pos:line="12" pos:column="20"/></name></expr>;<pos:position pos:line="12" pos:column="21"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="14" pos:column="5">sp<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <name><name pos:line="14" pos:column="10">commands<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">cp<pos:position pos:line="14" pos:column="22"/></name></name></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>
    <for pos:line="15" pos:column="5">for<control pos:line="15" pos:column="8">(<init><expr><name pos:line="15" pos:column="9">tsp<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <name><name pos:line="15" pos:column="15">commands<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">-&gt;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="25">cp<pos:position pos:line="15" pos:column="27"/></name></name></expr>;<pos:position pos:line="15" pos:column="28"/></init> <condition><expr><operator pos:line="15" pos:column="29">(<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">c<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">=<pos:position pos:line="15" pos:column="33"/></operator> <operator pos:line="15" pos:column="34">*<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="35">tsp<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">)<pos:position pos:line="15" pos:column="39"/></operator> <operator pos:line="15" pos:column="40">!=<pos:position pos:line="15" pos:column="42"/></operator> <name><name pos:line="15" pos:column="43">commands<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">sseof<pos:position pos:line="15" pos:column="58"/></name></name></expr>;<pos:position pos:line="15" pos:column="59"/></condition> <incr><expr><name pos:line="15" pos:column="60">tsp<pos:position pos:line="15" pos:column="63"/></name><operator pos:line="15" pos:column="63">++<pos:position pos:line="15" pos:column="65"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="66"/></control> <block pos:line="15" pos:column="67">{
        <if pos:line="16" pos:column="9">if<condition pos:line="16" pos:column="11">(<expr><name pos:line="16" pos:column="12">c<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">==<pos:position pos:line="16" pos:column="16"/></operator> <literal type="char" pos:line="16" pos:column="17">'\\'<pos:position pos:line="16" pos:column="21"/></literal></expr>)<pos:position pos:line="16" pos:column="22"/></condition><then pos:line="16" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="13">tsp<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">++<pos:position pos:line="17" pos:column="18"/></operator></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt></block></then></if>
        <if pos:line="18" pos:column="9">if<condition pos:line="18" pos:column="11">(<expr><name pos:line="18" pos:column="12">c<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">==<pos:position pos:line="18" pos:column="16"/></operator> <literal type="char" pos:line="18" pos:column="17">'\0'<pos:position pos:line="18" pos:column="21"/></literal> <operator pos:line="18" pos:column="22">||<pos:position pos:line="18" pos:column="24"/></operator> <name pos:line="18" pos:column="25">c<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">==<pos:position pos:line="18" pos:column="29"/></operator> <literal type="char" pos:line="18" pos:column="30">'\n'<pos:position pos:line="18" pos:column="34"/></literal></expr>)<pos:position pos:line="18" pos:column="35"/></condition><then pos:line="18" pos:column="35"> <block pos:line="18" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">command_errf<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">commands<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="36">SEDERR_EDMOSTR<pos:position pos:line="19" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="52">commands<pos:position pos:line="19" pos:column="60"/></name><operator pos:line="19" pos:column="60">-&gt;<pos:position pos:line="19" pos:column="65"/></operator><name pos:line="19" pos:column="62">linebuf<pos:position pos:line="19" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="71"/></expr_stmt>
            <return pos:line="20" pos:column="13">return <expr><name pos:line="20" pos:column="20">NULL<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></return>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
    }<pos:position pos:line="22" pos:column="6"/></block></for>
    <expr_stmt><expr><name pos:line="23" pos:column="5">tsp<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">++<pos:position pos:line="23" pos:column="10"/></operator></expr>;<pos:position pos:line="23" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">memset<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name pos:line="24" pos:column="12">ep<pos:position pos:line="24" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="19">0400<pos:position pos:line="24" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>

    <while pos:line="26" pos:column="5">while<condition pos:line="26" pos:column="10">(<expr><operator pos:line="26" pos:column="11">(<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">c<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <operator pos:line="26" pos:column="16">*<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">sp<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">++<pos:position pos:line="26" pos:column="21"/></operator><operator pos:line="26" pos:column="21">)<pos:position pos:line="26" pos:column="22"/></operator> <operator pos:line="26" pos:column="23">!=<pos:position pos:line="26" pos:column="25"/></operator> <name><name pos:line="26" pos:column="26">commands<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">-&gt;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="36">sseof<pos:position pos:line="26" pos:column="41"/></name></name></expr>)<pos:position pos:line="26" pos:column="42"/></condition> <block pos:line="26" pos:column="43">{
        <expr_stmt><expr><name pos:line="27" pos:column="9">c<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">&amp;=<pos:position pos:line="27" pos:column="17"/></operator> <literal type="number" pos:line="27" pos:column="14">0377<pos:position pos:line="27" pos:column="18"/></literal></expr>;<pos:position pos:line="27" pos:column="19"/></expr_stmt>
        <if pos:line="28" pos:column="9">if<condition pos:line="28" pos:column="11">(<expr><name pos:line="28" pos:column="12">c<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">==<pos:position pos:line="28" pos:column="16"/></operator> <literal type="char" pos:line="28" pos:column="17">'\\'<pos:position pos:line="28" pos:column="21"/></literal> <operator pos:line="28" pos:column="22">&amp;&amp;<pos:position pos:line="28" pos:column="32"/></operator> <operator pos:line="28" pos:column="25">*<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="26">sp<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">==<pos:position pos:line="28" pos:column="31"/></operator> <literal type="char" pos:line="28" pos:column="32">'n'<pos:position pos:line="28" pos:column="35"/></literal></expr>)<pos:position pos:line="28" pos:column="36"/></condition><then pos:line="28" pos:column="36"> <block pos:line="28" pos:column="37">{
            <expr_stmt><expr><name pos:line="29" pos:column="13">sp<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">++<pos:position pos:line="29" pos:column="17"/></operator></expr>;<pos:position pos:line="29" pos:column="18"/></expr_stmt>
            <expr_stmt><expr><name pos:line="30" pos:column="13">c<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <literal type="char" pos:line="30" pos:column="17">'\n'<pos:position pos:line="30" pos:column="21"/></literal></expr>;<pos:position pos:line="30" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="32" pos:column="9">cint<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <operator pos:line="32" pos:column="16">(<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">int<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">)<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="22">c<pos:position pos:line="32" pos:column="23"/></name></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>
        <if pos:line="33" pos:column="9">if<condition pos:line="33" pos:column="11">(<expr><operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator><name><name pos:line="33" pos:column="13">ep<pos:position pos:line="33" pos:column="15"/></name><index pos:line="33" pos:column="15">[<expr><name pos:line="33" pos:column="16">cint<pos:position pos:line="33" pos:column="20"/></name></expr>]<pos:position pos:line="33" pos:column="21"/></index></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <operator pos:line="33" pos:column="24">*<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">tsp<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">++<pos:position pos:line="33" pos:column="30"/></operator><operator pos:line="33" pos:column="30">)<pos:position pos:line="33" pos:column="31"/></operator> <operator pos:line="33" pos:column="32">==<pos:position pos:line="33" pos:column="34"/></operator> <literal type="char" pos:line="33" pos:column="35">'\\'<pos:position pos:line="33" pos:column="39"/></literal> <operator pos:line="33" pos:column="40">&amp;&amp;<pos:position pos:line="33" pos:column="50"/></operator> <operator pos:line="33" pos:column="43">*<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="44">tsp<pos:position pos:line="33" pos:column="47"/></name> <operator pos:line="33" pos:column="48">==<pos:position pos:line="33" pos:column="50"/></operator> <literal type="char" pos:line="33" pos:column="51">'n'<pos:position pos:line="33" pos:column="54"/></literal></expr>)<pos:position pos:line="33" pos:column="55"/></condition><then pos:line="33" pos:column="55"> <block pos:line="33" pos:column="56">{
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">ep<pos:position pos:line="34" pos:column="15"/></name><index pos:line="34" pos:column="15">[<expr><name pos:line="34" pos:column="16">cint<pos:position pos:line="34" pos:column="20"/></name></expr>]<pos:position pos:line="34" pos:column="21"/></index></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <literal type="char" pos:line="34" pos:column="24">'\n'<pos:position pos:line="34" pos:column="28"/></literal></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name pos:line="35" pos:column="13">tsp<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">++<pos:position pos:line="35" pos:column="18"/></operator></expr>;<pos:position pos:line="35" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
        <if pos:line="37" pos:column="9">if<condition pos:line="37" pos:column="11">(<expr><name><name pos:line="37" pos:column="12">ep<pos:position pos:line="37" pos:column="14"/></name><index pos:line="37" pos:column="14">[<expr><name pos:line="37" pos:column="15">cint<pos:position pos:line="37" pos:column="19"/></name></expr>]<pos:position pos:line="37" pos:column="20"/></index></name> <operator pos:line="37" pos:column="21">==<pos:position pos:line="37" pos:column="23"/></operator> <name><name pos:line="37" pos:column="24">commands<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">-&gt;<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="34">sseof<pos:position pos:line="37" pos:column="39"/></name></name> <operator pos:line="37" pos:column="40">||<pos:position pos:line="37" pos:column="42"/></operator> <name><name pos:line="37" pos:column="43">ep<pos:position pos:line="37" pos:column="45"/></name><index pos:line="37" pos:column="45">[<expr><name pos:line="37" pos:column="46">cint<pos:position pos:line="37" pos:column="50"/></name></expr>]<pos:position pos:line="37" pos:column="51"/></index></name> <operator pos:line="37" pos:column="52">==<pos:position pos:line="37" pos:column="54"/></operator> <literal type="char" pos:line="37" pos:column="55">'\0'<pos:position pos:line="37" pos:column="59"/></literal></expr>)<pos:position pos:line="37" pos:column="60"/></condition><then pos:line="37" pos:column="60"> <block pos:line="37" pos:column="61">{
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">command_errf<pos:position pos:line="38" pos:column="25"/></name><argument_list pos:line="38" pos:column="25">(<argument><expr><name pos:line="38" pos:column="26">commands<pos:position pos:line="38" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="36">SEDERR_TSNTSS<pos:position pos:line="38" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="51">commands<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">-&gt;<pos:position pos:line="38" pos:column="64"/></operator><name pos:line="38" pos:column="61">linebuf<pos:position pos:line="38" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>
    }<pos:position pos:line="40" pos:column="6"/></block></while>
    <if pos:line="41" pos:column="5">if<condition pos:line="41" pos:column="7">(<expr><operator pos:line="41" pos:column="8">*<pos:position pos:line="41" pos:column="9"/></operator><name pos:line="41" pos:column="9">tsp<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">!=<pos:position pos:line="41" pos:column="15"/></operator> <name><name pos:line="41" pos:column="16">commands<pos:position pos:line="41" pos:column="24"/></name><operator pos:line="41" pos:column="24">-&gt;<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="26">sseof<pos:position pos:line="41" pos:column="31"/></name></name></expr>)<pos:position pos:line="41" pos:column="32"/></condition><then pos:line="41" pos:column="32"> <block pos:line="41" pos:column="33">{
        <if pos:line="42" pos:column="9">if<condition pos:line="42" pos:column="11">(<expr><operator pos:line="42" pos:column="12">*<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="13">tsp<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">==<pos:position pos:line="42" pos:column="19"/></operator> <literal type="char" pos:line="42" pos:column="20">'\0'<pos:position pos:line="42" pos:column="24"/></literal></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25"> <block pos:line="42" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">command_errf<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><name pos:line="43" pos:column="26">commands<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="36">SEDERR_EDMOSTR<pos:position pos:line="43" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="52">commands<pos:position pos:line="43" pos:column="60"/></name><operator pos:line="43" pos:column="60">-&gt;<pos:position pos:line="43" pos:column="65"/></operator><name pos:line="43" pos:column="62">linebuf<pos:position pos:line="43" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block></then>
        <else pos:line="45" pos:column="9">else <block pos:line="45" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">command_errf<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><name pos:line="46" pos:column="26">commands<pos:position pos:line="46" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="36">SEDERR_TSNTSS<pos:position pos:line="46" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="51">commands<pos:position pos:line="46" pos:column="59"/></name><operator pos:line="46" pos:column="59">-&gt;<pos:position pos:line="46" pos:column="64"/></operator><name pos:line="46" pos:column="61">linebuf<pos:position pos:line="46" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="47" pos:column="10"/></block></else></if>
        <return pos:line="48" pos:column="9">return <expr><name pos:line="48" pos:column="16">NULL<pos:position pos:line="48" pos:column="20"/></name></expr>;<pos:position pos:line="48" pos:column="21"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">commands<pos:position pos:line="50" pos:column="13"/></name><operator pos:line="50" pos:column="13">-&gt;<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="15">cp<pos:position pos:line="50" pos:column="17"/></name></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <operator pos:line="50" pos:column="20">++<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="22">tsp<pos:position pos:line="50" pos:column="25"/></name></expr>;<pos:position pos:line="50" pos:column="26"/></expr_stmt>

    <for pos:line="52" pos:column="5">for<control pos:line="52" pos:column="8">(<init><expr><name pos:line="52" pos:column="9">i<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">=<pos:position pos:line="52" pos:column="12"/></operator> <literal type="number" pos:line="52" pos:column="13">0<pos:position pos:line="52" pos:column="14"/></literal></expr>;<pos:position pos:line="52" pos:column="15"/></init> <condition><expr><name pos:line="52" pos:column="16">i<pos:position pos:line="52" pos:column="17"/></name> <operator pos:line="52" pos:column="18">&lt;<pos:position pos:line="52" pos:column="22"/></operator> <literal type="number" pos:line="52" pos:column="20">0400<pos:position pos:line="52" pos:column="24"/></literal></expr>;<pos:position pos:line="52" pos:column="25"/></condition> <incr><expr><name pos:line="52" pos:column="26">i<pos:position pos:line="52" pos:column="27"/></name><operator pos:line="52" pos:column="27">++<pos:position pos:line="52" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="52" pos:column="30"/></control>
        <block type="pseudo"><if pos:line="53" pos:column="9">if<condition pos:line="53" pos:column="11">(<expr><name><name pos:line="53" pos:column="12">ep<pos:position pos:line="53" pos:column="14"/></name><index pos:line="53" pos:column="14">[<expr><name pos:line="53" pos:column="15">i<pos:position pos:line="53" pos:column="16"/></name></expr>]<pos:position pos:line="53" pos:column="17"/></index></name> <operator pos:line="53" pos:column="18">==<pos:position pos:line="53" pos:column="20"/></operator> <literal type="number" pos:line="53" pos:column="21">0<pos:position pos:line="53" pos:column="22"/></literal></expr>)<pos:position pos:line="53" pos:column="23"/></condition><then pos:line="53" pos:column="23">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="54" pos:column="13">ep<pos:position pos:line="54" pos:column="15"/></name><index pos:line="54" pos:column="15">[<expr><name pos:line="54" pos:column="16">i<pos:position pos:line="54" pos:column="17"/></name></expr>]<pos:position pos:line="54" pos:column="18"/></index></name> <operator pos:line="54" pos:column="19">=<pos:position pos:line="54" pos:column="20"/></operator> <name pos:line="54" pos:column="21">i<pos:position pos:line="54" pos:column="22"/></name></expr>;<pos:position pos:line="54" pos:column="23"/></expr_stmt></block></then></if></block></for>

    <return pos:line="56" pos:column="5">return<expr><operator pos:line="56" pos:column="11">(<pos:position pos:line="56" pos:column="12"/></operator><name pos:line="56" pos:column="12">ep<pos:position pos:line="56" pos:column="14"/></name> <operator pos:line="56" pos:column="15">+<pos:position pos:line="56" pos:column="16"/></operator> <literal type="number" pos:line="56" pos:column="17">0400<pos:position pos:line="56" pos:column="21"/></literal><operator pos:line="56" pos:column="21">)<pos:position pos:line="56" pos:column="22"/></operator></expr>;<pos:position pos:line="56" pos:column="23"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_625_httpd-2.2.0.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">yyrestart<pos:position pos:line="1" pos:column="15"/></name><argument_list pos:line="1" pos:column="15">( <argument><expr><name pos:line="1" pos:column="17">input_file<pos:position pos:line="1" pos:column="27"/></name></expr></argument> )<pos:position pos:line="1" pos:column="29"/></argument_list>
<name pos:line="2" pos:column="1">FILE<pos:position pos:line="2" pos:column="5"/></name> <modifier pos:line="2" pos:column="6">*<pos:position pos:line="2" pos:column="7"/></modifier><name pos:line="2" pos:column="7">input_file<pos:position pos:line="2" pos:column="17"/></name></decl>;<pos:position pos:line="2" pos:column="18"/></decl_stmt>
<cpp:endif pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">endif<pos:position pos:line="3" pos:column="7"/></cpp:directive></cpp:endif>
        <block pos:line="4" pos:column="9">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">( <expr><operator pos:line="5" pos:column="14">!<pos:position pos:line="5" pos:column="15"/></operator> <name pos:line="5" pos:column="16">yy_current_buffer<pos:position pos:line="5" pos:column="33"/></name></expr> )<pos:position pos:line="5" pos:column="35"/></condition><then pos:line="5" pos:column="35">
                <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="17">yy_current_buffer<pos:position pos:line="6" pos:column="34"/></name> <operator pos:line="6" pos:column="35">=<pos:position pos:line="6" pos:column="36"/></operator> <call><name pos:line="6" pos:column="37">yy_create_buffer<pos:position pos:line="6" pos:column="53"/></name><argument_list pos:line="6" pos:column="53">( <argument><expr><name pos:line="6" pos:column="55">yyin<pos:position pos:line="6" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="61">YY_BUF_SIZE<pos:position pos:line="6" pos:column="72"/></name></expr></argument> )<pos:position pos:line="6" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="75"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="8" pos:column="9">yy_init_buffer<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">( <argument><expr><name pos:line="8" pos:column="25">yy_current_buffer<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="44">input_file<pos:position pos:line="8" pos:column="54"/></name></expr></argument> )<pos:position pos:line="8" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">yy_load_buffer_state<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">()<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="10" pos:column="10"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1173_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">include_cmd<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">include_ctx_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">ctx<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">apr_bucket_brigade<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier><modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">bb<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">char<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">command<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="2" pos:column="24">request_rec<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">r<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">ap_filter_t<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">f<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier><modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">env<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt> 
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">location<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt> 
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">sd<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_status_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">rc<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">APR_SUCCESS<pos:position pos:line="7" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt> 
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">retval<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_bucket_brigade<pos:position pos:line="9" pos:column="23"/></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">bcgi<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_bucket<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">b<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_file_t<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">tempsock<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><name pos:line="11" pos:column="28">NULL<pos:position pos:line="11" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">cgid_server_conf<pos:position pos:line="12" pos:column="21"/></name> <modifier pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></modifier></type><name pos:line="12" pos:column="23">conf<pos:position pos:line="12" pos:column="27"/></name> <init pos:line="12" pos:column="28">= <expr><call><name pos:line="12" pos:column="30">ap_get_module_config<pos:position pos:line="12" pos:column="50"/></name><argument_list pos:line="12" pos:column="50">(<argument><expr><name><name pos:line="12" pos:column="51">r<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">-&gt;<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="54">server<pos:position pos:line="12" pos:column="60"/></name><operator pos:line="12" pos:column="60">-&gt;<pos:position pos:line="12" pos:column="65"/></operator><name pos:line="12" pos:column="62">module_config<pos:position pos:line="12" pos:column="75"/></name></name></expr></argument>,
                                                  <argument><expr><operator pos:line="13" pos:column="51">&amp;<pos:position pos:line="13" pos:column="56"/></operator><name pos:line="13" pos:column="52">cgid_module<pos:position pos:line="13" pos:column="63"/></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="65"/></decl_stmt> 
    <decl_stmt><decl><type><name><name pos:line="14" pos:column="5">struct<pos:position pos:line="14" pos:column="11"/></name> <name pos:line="14" pos:column="12">cleanup_script_info<pos:position pos:line="14" pos:column="31"/></name></name> <modifier pos:line="14" pos:column="32">*<pos:position pos:line="14" pos:column="33"/></modifier></type><name pos:line="14" pos:column="33">info<pos:position pos:line="14" pos:column="37"/></name></decl>;<pos:position pos:line="14" pos:column="38"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">add_ssi_vars<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">r<pos:position pos:line="16" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="21">f<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">-&gt;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="24">next<pos:position pos:line="16" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">env<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <call><name pos:line="17" pos:column="11">ap_create_environment<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name><name pos:line="17" pos:column="33">r<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">-&gt;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="36">pool<pos:position pos:line="17" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="42">r<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">-&gt;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="45">subprocess_env<pos:position pos:line="17" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">retval<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <call><name pos:line="19" pos:column="19">connect_to_daemon<pos:position pos:line="19" pos:column="36"/></name><argument_list pos:line="19" pos:column="36">(<argument><expr><operator pos:line="19" pos:column="37">&amp;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="38">sd<pos:position pos:line="19" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">r<pos:position pos:line="19" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="45">conf<pos:position pos:line="19" pos:column="49"/></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call><operator pos:line="19" pos:column="50">)<pos:position pos:line="19" pos:column="51"/></operator> <operator pos:line="19" pos:column="52">!=<pos:position pos:line="19" pos:column="54"/></operator> <name pos:line="19" pos:column="55">OK<pos:position pos:line="19" pos:column="57"/></name></expr>)<pos:position pos:line="19" pos:column="58"/></condition><then pos:line="19" pos:column="58"> <block pos:line="19" pos:column="59">{
        <return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">retval<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">SPLIT_AND_PASS_PRETAG_BUCKETS<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><operator pos:line="23" pos:column="35">*<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="36">bb<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="40">ctx<pos:position pos:line="23" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="45">f<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">-&gt;<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="48">next<pos:position pos:line="23" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="54">rc<pos:position pos:line="23" pos:column="56"/></name></expr></argument>)<pos:position pos:line="23" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="58"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">rc<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">!=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">APR_SUCCESS<pos:position pos:line="24" pos:column="26"/></name></expr>)<pos:position pos:line="24" pos:column="27"/></condition><then pos:line="24" pos:column="27"> <block pos:line="24" pos:column="28">{
        <return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">rc<pos:position pos:line="25" pos:column="18"/></name></expr>;<pos:position pos:line="25" pos:column="19"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">send_req<pos:position pos:line="28" pos:column="13"/></name><argument_list pos:line="28" pos:column="13">(<argument><expr><name pos:line="28" pos:column="14">sd<pos:position pos:line="28" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="18">r<pos:position pos:line="28" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="21">command<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="30">env<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="35">SSI_REQ<pos:position pos:line="28" pos:column="42"/></name></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt> 

    <expr_stmt><expr><name pos:line="30" pos:column="5">info<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">=<pos:position pos:line="30" pos:column="11"/></operator> <call><name pos:line="30" pos:column="12">apr_palloc<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><name><name pos:line="30" pos:column="23">r<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">-&gt;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="26">pool<pos:position pos:line="30" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="32">sizeof<argument_list pos:line="30" pos:column="38">(<argument><expr pos:line="30" pos:column="39">struct <name pos:line="30" pos:column="46">cleanup_script_info<pos:position pos:line="30" pos:column="65"/></name></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">info<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">r<pos:position pos:line="31" pos:column="12"/></name></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <name pos:line="31" pos:column="15">r<pos:position pos:line="31" pos:column="16"/></name></expr>;<pos:position pos:line="31" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">info<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">-&gt;<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="11">conn_id<pos:position pos:line="32" pos:column="18"/></name></name> <operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator> <name><name pos:line="32" pos:column="21">r<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">-&gt;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="24">connection<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">-&gt;<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="36">id<pos:position pos:line="32" pos:column="38"/></name></name></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">info<pos:position pos:line="33" pos:column="9"/></name><operator pos:line="33" pos:column="9">-&gt;<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="11">conf<pos:position pos:line="33" pos:column="15"/></name></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <name pos:line="33" pos:column="18">conf<pos:position pos:line="33" pos:column="22"/></name></expr>;<pos:position pos:line="33" pos:column="23"/></expr_stmt>
    <comment type="block" pos:line="34" pos:column="5">/* for this type of request, the script is invoked through an
     * intermediate shell process...  cleanup_script is only able 
     * to knock out the shell process, not the actual script
     */</comment>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">(<argument><expr><name><name pos:line="38" pos:column="31">r<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">-&gt;<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="34">pool<pos:position pos:line="38" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="40">info<pos:position pos:line="38" pos:column="44"/></name></expr></argument>,
                              <argument><expr><name pos:line="39" pos:column="31">cleanup_script<pos:position pos:line="39" pos:column="45"/></name></expr></argument>,
                              <argument><expr><name pos:line="40" pos:column="31">apr_pool_cleanup_null<pos:position pos:line="40" pos:column="52"/></name></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt>
    <comment type="block" pos:line="41" pos:column="5">/* We are putting the socket discriptor into an apr_file_t so that we can
     * use a pipe bucket to send the data to the client.
     * Note that this does not register a cleanup for the socket.  We did
     * that explicitly right after we created the socket.
     */</comment>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">apr_os_pipe_put<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><operator pos:line="46" pos:column="21">&amp;<pos:position pos:line="46" pos:column="26"/></operator><name pos:line="46" pos:column="22">tempsock<pos:position pos:line="46" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="32">&amp;<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="33">sd<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="37">r<pos:position pos:line="46" pos:column="38"/></name><operator pos:line="46" pos:column="38">-&gt;<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="40">pool<pos:position pos:line="46" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="46"/></expr_stmt>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><operator pos:line="48" pos:column="9">(<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="10">retval<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <call><name pos:line="48" pos:column="19">ap_setup_client_block<pos:position pos:line="48" pos:column="40"/></name><argument_list pos:line="48" pos:column="40">(<argument><expr><name pos:line="48" pos:column="41">r<pos:position pos:line="48" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="44">REQUEST_CHUNKED_ERROR<pos:position pos:line="48" pos:column="65"/></name></expr></argument>)<pos:position pos:line="48" pos:column="66"/></argument_list></call><operator pos:line="48" pos:column="66">)<pos:position pos:line="48" pos:column="67"/></operator></expr>)<pos:position pos:line="48" pos:column="68"/></condition><then pos:line="48" pos:column="68"> 
        <block type="pseudo"><return pos:line="49" pos:column="9">return <expr><name pos:line="49" pos:column="16">retval<pos:position pos:line="49" pos:column="22"/></name></expr>;<pos:position pos:line="49" pos:column="23"/></return></block></then></if> 
    
    <expr_stmt><expr><name pos:line="51" pos:column="5">location<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <call><name pos:line="51" pos:column="16">apr_table_get<pos:position pos:line="51" pos:column="29"/></name><argument_list pos:line="51" pos:column="29">(<argument><expr><name><name pos:line="51" pos:column="30">r<pos:position pos:line="51" pos:column="31"/></name><operator pos:line="51" pos:column="31">-&gt;<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="33">headers_out<pos:position pos:line="51" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="46">"Location"<pos:position pos:line="51" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="58"/></expr_stmt> 

    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">location<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">&amp;&amp;<pos:position pos:line="53" pos:column="28"/></operator> <name><name pos:line="53" pos:column="21">location<pos:position pos:line="53" pos:column="29"/></name><index pos:line="53" pos:column="29">[<expr><literal type="number" pos:line="53" pos:column="30">0<pos:position pos:line="53" pos:column="31"/></literal></expr>]<pos:position pos:line="53" pos:column="32"/></index></name> <operator pos:line="53" pos:column="33">==<pos:position pos:line="53" pos:column="35"/></operator> <literal type="char" pos:line="53" pos:column="36">'/'<pos:position pos:line="53" pos:column="39"/></literal> <operator pos:line="53" pos:column="40">&amp;&amp;<pos:position pos:line="53" pos:column="50"/></operator> <name><name pos:line="53" pos:column="43">r<pos:position pos:line="53" pos:column="44"/></name><operator pos:line="53" pos:column="44">-&gt;<pos:position pos:line="53" pos:column="49"/></operator><name pos:line="53" pos:column="46">status<pos:position pos:line="53" pos:column="52"/></name></name> <operator pos:line="53" pos:column="53">==<pos:position pos:line="53" pos:column="55"/></operator> <literal type="number" pos:line="53" pos:column="56">200<pos:position pos:line="53" pos:column="59"/></literal></expr>)<pos:position pos:line="53" pos:column="60"/></condition><then pos:line="53" pos:column="60"> <block pos:line="53" pos:column="61">{ 
        <decl_stmt><decl><type><name pos:line="54" pos:column="9">char<pos:position pos:line="54" pos:column="13"/></name></type> <name><name pos:line="54" pos:column="14">argsbuffer<pos:position pos:line="54" pos:column="24"/></name><index pos:line="54" pos:column="24">[<expr><name pos:line="54" pos:column="25">HUGE_STRING_LEN<pos:position pos:line="54" pos:column="40"/></name></expr>]<pos:position pos:line="54" pos:column="41"/></index></name></decl>;<pos:position pos:line="54" pos:column="42"/></decl_stmt> 

        <comment type="block" pos:line="56" pos:column="9">/* Soak up all the script output */</comment> 
        <while pos:line="57" pos:column="9">while <condition pos:line="57" pos:column="15">(<expr><call><name pos:line="57" pos:column="16">apr_file_gets<pos:position pos:line="57" pos:column="29"/></name><argument_list pos:line="57" pos:column="29">(<argument><expr><name pos:line="57" pos:column="30">argsbuffer<pos:position pos:line="57" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="42">HUGE_STRING_LEN<pos:position pos:line="57" pos:column="57"/></name></expr></argument>, 
                             <argument><expr><name pos:line="58" pos:column="30">tempsock<pos:position pos:line="58" pos:column="38"/></name></expr></argument>)<pos:position pos:line="58" pos:column="39"/></argument_list></call> <operator pos:line="58" pos:column="40">==<pos:position pos:line="58" pos:column="42"/></operator> <name pos:line="58" pos:column="43">APR_SUCCESS<pos:position pos:line="58" pos:column="54"/></name></expr>)<pos:position pos:line="58" pos:column="55"/></condition> <block pos:line="58" pos:column="56">{ 
            <continue pos:line="59" pos:column="13">continue;<pos:position pos:line="59" pos:column="22"/></continue> 
        }<pos:position pos:line="60" pos:column="10"/></block></while> 
        <comment type="block" pos:line="61" pos:column="9">/* This redirect needs to be a GET no matter what the original 
         * method was. 
         */</comment> 
        <expr_stmt><expr><name><name pos:line="64" pos:column="9">r<pos:position pos:line="64" pos:column="10"/></name><operator pos:line="64" pos:column="10">-&gt;<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="12">method<pos:position pos:line="64" pos:column="18"/></name></name> <operator pos:line="64" pos:column="19">=<pos:position pos:line="64" pos:column="20"/></operator> <call><name pos:line="64" pos:column="21">apr_pstrdup<pos:position pos:line="64" pos:column="32"/></name><argument_list pos:line="64" pos:column="32">(<argument><expr><name><name pos:line="64" pos:column="33">r<pos:position pos:line="64" pos:column="34"/></name><operator pos:line="64" pos:column="34">-&gt;<pos:position pos:line="64" pos:column="39"/></operator><name pos:line="64" pos:column="36">pool<pos:position pos:line="64" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="42">"GET"<pos:position pos:line="64" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="49"/></expr_stmt> 
        <expr_stmt><expr><name><name pos:line="65" pos:column="9">r<pos:position pos:line="65" pos:column="10"/></name><operator pos:line="65" pos:column="10">-&gt;<pos:position pos:line="65" pos:column="15"/></operator><name pos:line="65" pos:column="12">method_number<pos:position pos:line="65" pos:column="25"/></name></name> <operator pos:line="65" pos:column="26">=<pos:position pos:line="65" pos:column="27"/></operator> <name pos:line="65" pos:column="28">M_GET<pos:position pos:line="65" pos:column="33"/></name></expr>;<pos:position pos:line="65" pos:column="34"/></expr_stmt> 

        <comment type="block" pos:line="67" pos:column="9">/* We already read the message body (if any), so don't allow 
         * the redirected request to think it has one. We can ignore 
         * Transfer-Encoding, since we used REQUEST_CHUNKED_ERROR. 
         */</comment> 
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">apr_table_unset<pos:position pos:line="71" pos:column="24"/></name><argument_list pos:line="71" pos:column="24">(<argument><expr><name><name pos:line="71" pos:column="25">r<pos:position pos:line="71" pos:column="26"/></name><operator pos:line="71" pos:column="26">-&gt;<pos:position pos:line="71" pos:column="31"/></operator><name pos:line="71" pos:column="28">headers_in<pos:position pos:line="71" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="40">"Content-Length"<pos:position pos:line="71" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="58"/></expr_stmt> 

        <expr_stmt><expr><call><name pos:line="73" pos:column="9">ap_internal_redirect_handler<pos:position pos:line="73" pos:column="37"/></name><argument_list pos:line="73" pos:column="37">(<argument><expr><name pos:line="73" pos:column="38">location<pos:position pos:line="73" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="48">r<pos:position pos:line="73" pos:column="49"/></name></expr></argument>)<pos:position pos:line="73" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="51"/></expr_stmt> 
        <return pos:line="74" pos:column="9">return <expr><name pos:line="74" pos:column="16">OK<pos:position pos:line="74" pos:column="18"/></name></expr>;<pos:position pos:line="74" pos:column="19"/></return> 
    }<pos:position pos:line="75" pos:column="6"/></block></then> 
    <elseif pos:line="76" pos:column="5">else <if pos:line="76" pos:column="10">if <condition pos:line="76" pos:column="13">(<expr><name pos:line="76" pos:column="14">location<pos:position pos:line="76" pos:column="22"/></name> <operator pos:line="76" pos:column="23">&amp;&amp;<pos:position pos:line="76" pos:column="33"/></operator> <name><name pos:line="76" pos:column="26">r<pos:position pos:line="76" pos:column="27"/></name><operator pos:line="76" pos:column="27">-&gt;<pos:position pos:line="76" pos:column="32"/></operator><name pos:line="76" pos:column="29">status<pos:position pos:line="76" pos:column="35"/></name></name> <operator pos:line="76" pos:column="36">==<pos:position pos:line="76" pos:column="38"/></operator> <literal type="number" pos:line="76" pos:column="39">200<pos:position pos:line="76" pos:column="42"/></literal></expr>)<pos:position pos:line="76" pos:column="43"/></condition><then pos:line="76" pos:column="43"> <block pos:line="76" pos:column="44">{ 
        <comment type="block" pos:line="77" pos:column="9">/* XX Note that if a script wants to produce its own Redirect 
         * body, it now has to explicitly *say* "Status: 302" 
         */</comment> 
        <return pos:line="80" pos:column="9">return <expr><name pos:line="80" pos:column="16">HTTP_MOVED_TEMPORARILY<pos:position pos:line="80" pos:column="38"/></name></expr>;<pos:position pos:line="80" pos:column="39"/></return> 
    }<pos:position pos:line="81" pos:column="6"/></block></then></if></elseif></if> 

    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><operator pos:line="83" pos:column="9">!<pos:position pos:line="83" pos:column="10"/></operator><name><name pos:line="83" pos:column="10">r<pos:position pos:line="83" pos:column="11"/></name><operator pos:line="83" pos:column="11">-&gt;<pos:position pos:line="83" pos:column="16"/></operator><name pos:line="83" pos:column="13">header_only<pos:position pos:line="83" pos:column="24"/></name></name></expr>)<pos:position pos:line="83" pos:column="25"/></condition><then pos:line="83" pos:column="25"> <block pos:line="83" pos:column="26">{ 
        <comment type="block" pos:line="84" pos:column="9">/* Passing our socket down the filter chain in a pipe bucket
         * gives up the responsibility of closing the socket, so
         * get rid of the cleanup.
         */</comment>
        <expr_stmt><expr><call><name pos:line="88" pos:column="9">apr_pool_cleanup_kill<pos:position pos:line="88" pos:column="30"/></name><argument_list pos:line="88" pos:column="30">(<argument><expr><name><name pos:line="88" pos:column="31">r<pos:position pos:line="88" pos:column="32"/></name><operator pos:line="88" pos:column="32">-&gt;<pos:position pos:line="88" pos:column="37"/></operator><name pos:line="88" pos:column="34">pool<pos:position pos:line="88" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="40">(<pos:position pos:line="88" pos:column="41"/></operator><name pos:line="88" pos:column="41">void<pos:position pos:line="88" pos:column="45"/></name> <operator pos:line="88" pos:column="46">*<pos:position pos:line="88" pos:column="47"/></operator><operator pos:line="88" pos:column="47">)<pos:position pos:line="88" pos:column="48"/></operator><name pos:line="88" pos:column="48">sd<pos:position pos:line="88" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="52">close_unix_socket<pos:position pos:line="88" pos:column="69"/></name></expr></argument>)<pos:position pos:line="88" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="71"/></expr_stmt>

        <expr_stmt><expr><name pos:line="90" pos:column="9">bcgi<pos:position pos:line="90" pos:column="13"/></name> <operator pos:line="90" pos:column="14">=<pos:position pos:line="90" pos:column="15"/></operator> <call><name pos:line="90" pos:column="16">apr_brigade_create<pos:position pos:line="90" pos:column="34"/></name><argument_list pos:line="90" pos:column="34">(<argument><expr><name><name pos:line="90" pos:column="35">r<pos:position pos:line="90" pos:column="36"/></name><operator pos:line="90" pos:column="36">-&gt;<pos:position pos:line="90" pos:column="41"/></operator><name pos:line="90" pos:column="38">pool<pos:position pos:line="90" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="44">r<pos:position pos:line="90" pos:column="45"/></name><operator pos:line="90" pos:column="45">-&gt;<pos:position pos:line="90" pos:column="50"/></operator><name pos:line="90" pos:column="47">connection<pos:position pos:line="90" pos:column="57"/></name><operator pos:line="90" pos:column="57">-&gt;<pos:position pos:line="90" pos:column="62"/></operator><name pos:line="90" pos:column="59">bucket_alloc<pos:position pos:line="90" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><name pos:line="91" pos:column="9">b<pos:position pos:line="91" pos:column="10"/></name>    <operator pos:line="91" pos:column="14">=<pos:position pos:line="91" pos:column="15"/></operator> <call><name pos:line="91" pos:column="16">apr_bucket_pipe_create<pos:position pos:line="91" pos:column="38"/></name><argument_list pos:line="91" pos:column="38">(<argument><expr><name pos:line="91" pos:column="39">tempsock<pos:position pos:line="91" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="49">r<pos:position pos:line="91" pos:column="50"/></name><operator pos:line="91" pos:column="50">-&gt;<pos:position pos:line="91" pos:column="55"/></operator><name pos:line="91" pos:column="52">connection<pos:position pos:line="91" pos:column="62"/></name><operator pos:line="91" pos:column="62">-&gt;<pos:position pos:line="91" pos:column="67"/></operator><name pos:line="91" pos:column="64">bucket_alloc<pos:position pos:line="91" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="78"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="92" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="92" pos:column="32"/></name><argument_list pos:line="92" pos:column="32">(<argument><expr><name pos:line="92" pos:column="33">bcgi<pos:position pos:line="92" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="39">b<pos:position pos:line="92" pos:column="40"/></name></expr></argument>)<pos:position pos:line="92" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="93" pos:column="9">ap_pass_brigade<pos:position pos:line="93" pos:column="24"/></name><argument_list pos:line="93" pos:column="24">(<argument><expr><name><name pos:line="93" pos:column="25">f<pos:position pos:line="93" pos:column="26"/></name><operator pos:line="93" pos:column="26">-&gt;<pos:position pos:line="93" pos:column="31"/></operator><name pos:line="93" pos:column="28">next<pos:position pos:line="93" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="34">bcgi<pos:position pos:line="93" pos:column="38"/></name></expr></argument>)<pos:position pos:line="93" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if> 

    <return pos:line="96" pos:column="5">return <expr><literal type="number" pos:line="96" pos:column="12">0<pos:position pos:line="96" pos:column="13"/></literal></expr>;<pos:position pos:line="96" pos:column="14"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

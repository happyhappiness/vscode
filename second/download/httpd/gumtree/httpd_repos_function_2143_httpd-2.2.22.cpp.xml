<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2143_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">copy_request<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">rbuf<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">apr_size_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">rbuflen<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">request_rec<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">r<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">p<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">r<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">-&gt;<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="12">the_request<pos:position pos:line="5" pos:column="23"/></name></name> <operator pos:line="5" pos:column="24">==<pos:position pos:line="5" pos:column="26"/></operator> <name pos:line="5" pos:column="27">NULL<pos:position pos:line="5" pos:column="31"/></name></expr>)<pos:position pos:line="5" pos:column="32"/></condition><then pos:line="5" pos:column="32"> <block pos:line="5" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">apr_cpystrn<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">rbuf<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="27">"NULL"<pos:position pos:line="6" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="35">rbuflen<pos:position pos:line="6" pos:column="42"/></name></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="44"/></expr_stmt>
        <return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return> <comment type="block" pos:line="7" pos:column="17">/* short circuit below */</comment>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">r<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">parsed_uri<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">.<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">password<pos:position pos:line="10" pos:column="31"/></name></name> <operator pos:line="10" pos:column="32">==<pos:position pos:line="10" pos:column="34"/></operator> <name pos:line="10" pos:column="35">NULL<pos:position pos:line="10" pos:column="39"/></name></expr>)<pos:position pos:line="10" pos:column="40"/></condition><then pos:line="10" pos:column="40"> <block pos:line="10" pos:column="41">{
        <expr_stmt><expr><name pos:line="11" pos:column="9">p<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <name><name pos:line="11" pos:column="13">r<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">the_request<pos:position pos:line="11" pos:column="27"/></name></name></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then>
    <else pos:line="13" pos:column="5">else <block pos:line="13" pos:column="10">{
        <comment type="block" pos:line="14" pos:column="9">/* Don't reveal the password in the server-status view */</comment>
        <expr_stmt><expr><name pos:line="15" pos:column="9">p<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <call><name pos:line="15" pos:column="13">apr_pstrcat<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name><name pos:line="15" pos:column="25">r<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">pool<pos:position pos:line="15" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="34">r<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">method<pos:position pos:line="15" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="45">" "<pos:position pos:line="15" pos:column="48"/></literal></expr></argument>,
                        <argument><expr><call><name pos:line="16" pos:column="25">apr_uri_unparse<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">(<argument><expr><name><name pos:line="16" pos:column="41">r<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">-&gt;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="44">pool<pos:position pos:line="16" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="50">&amp;<pos:position pos:line="16" pos:column="55"/></operator><name><name pos:line="16" pos:column="51">r<pos:position pos:line="16" pos:column="52"/></name><operator pos:line="16" pos:column="52">-&gt;<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="54">parsed_uri<pos:position pos:line="16" pos:column="64"/></name></name></expr></argument>,
                        <argument><expr><name pos:line="17" pos:column="25">APR_URI_UNP_OMITPASSWORD<pos:position pos:line="17" pos:column="49"/></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr></argument>,
                        <argument><expr><ternary><condition><expr><name><name pos:line="18" pos:column="25">r<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">-&gt;<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="28">assbackwards<pos:position pos:line="18" pos:column="40"/></name></name></expr> ?<pos:position pos:line="18" pos:column="42"/></condition><then pos:line="18" pos:column="42"> <expr><name pos:line="18" pos:column="43">NULL<pos:position pos:line="18" pos:column="47"/></name></expr> <pos:position pos:line="18" pos:column="48"/></then><else pos:line="18" pos:column="48">: <expr><literal type="string" pos:line="18" pos:column="50">" "<pos:position pos:line="18" pos:column="53"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="55">r<pos:position pos:line="18" pos:column="56"/></name><operator pos:line="18" pos:column="56">-&gt;<pos:position pos:line="18" pos:column="61"/></operator><name pos:line="18" pos:column="58">protocol<pos:position pos:line="18" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="68">NULL<pos:position pos:line="18" pos:column="72"/></name></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="21" pos:column="5">/* now figure out if we copy over the 1st rbuflen chars or the last */</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">ap_mod_status_reqtail<pos:position pos:line="22" pos:column="31"/></name></expr>)<pos:position pos:line="22" pos:column="32"/></condition><then pos:line="22" pos:column="32"> <block pos:line="22" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">apr_cpystrn<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">rbuf<pos:position pos:line="23" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="27">p<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="30">rbuflen<pos:position pos:line="23" pos:column="37"/></name></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then>
    <else pos:line="25" pos:column="5">else <block pos:line="25" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">apr_size_t<pos:position pos:line="26" pos:column="19"/></name></type> <name pos:line="26" pos:column="20">slen<pos:position pos:line="26" pos:column="24"/></name> <init pos:line="26" pos:column="25">= <expr><call><name pos:line="26" pos:column="27">strlen<pos:position pos:line="26" pos:column="33"/></name><argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">p<pos:position pos:line="26" pos:column="35"/></name></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="37"/></decl_stmt>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">slen<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">&lt;<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="20">rbuflen<pos:position pos:line="27" pos:column="27"/></name></expr>)<pos:position pos:line="27" pos:column="28"/></condition><then pos:line="27" pos:column="28"> <block pos:line="27" pos:column="29">{
            <comment type="block" pos:line="28" pos:column="13">/* it all fits anyway */</comment>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">apr_cpystrn<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">rbuf<pos:position pos:line="29" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="31">p<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="34">rbuflen<pos:position pos:line="29" pos:column="41"/></name></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then>
        <else pos:line="31" pos:column="9">else <block pos:line="31" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">apr_cpystrn<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">rbuf<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="31">p<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">+<pos:position pos:line="32" pos:column="33"/></operator><operator pos:line="32" pos:column="33">(<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="34">slen<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">-<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="39">rbuflen<pos:position pos:line="32" pos:column="46"/></name><operator pos:line="32" pos:column="46">+<pos:position pos:line="32" pos:column="47"/></operator><literal type="number" pos:line="32" pos:column="47">1<pos:position pos:line="32" pos:column="48"/></literal><operator pos:line="32" pos:column="48">)<pos:position pos:line="32" pos:column="49"/></operator></expr></argument>, <argument><expr><name pos:line="32" pos:column="51">rbuflen<pos:position pos:line="32" pos:column="58"/></name></expr></argument>)<pos:position pos:line="32" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></else></if>
    }<pos:position pos:line="34" pos:column="6"/></block></else></if>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

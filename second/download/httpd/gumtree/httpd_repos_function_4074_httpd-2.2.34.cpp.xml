<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_4074_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">rshash<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">p<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list> <block pos:line="1" pos:column="44">{
    <comment type="block" pos:line="2" pos:column="5">/* hash function from Robert Sedgwicks 'Algorithms in C' book */</comment>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">unsigned<pos:position pos:line="3" pos:column="13"/></name> <name pos:line="3" pos:column="14">int<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">b<pos:position pos:line="3" pos:column="19"/></name>    <init pos:line="3" pos:column="23">= <expr><literal type="number" pos:line="3" pos:column="25">378551<pos:position pos:line="3" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">a<pos:position pos:line="4" pos:column="19"/></name>    <init pos:line="4" pos:column="23">= <expr><literal type="number" pos:line="4" pos:column="25">63689<pos:position pos:line="4" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">int<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">retval<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><literal type="number" pos:line="5" pos:column="27">0<pos:position pos:line="5" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>

    <for pos:line="7" pos:column="5">for<control pos:line="7" pos:column="8">( <init pos:line="7" pos:column="10">;<pos:position pos:line="7" pos:column="11"/></init> <condition><expr><operator pos:line="7" pos:column="12">*<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">p<pos:position pos:line="7" pos:column="14"/></name></expr>;<pos:position pos:line="7" pos:column="15"/></condition> <incr><expr><name pos:line="7" pos:column="16">p<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">++<pos:position pos:line="7" pos:column="19"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="20"/></control> <block pos:line="7" pos:column="21">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">retval<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">retval<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></operator> <name pos:line="8" pos:column="27">a<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">+<pos:position pos:line="8" pos:column="30"/></operator> <operator pos:line="8" pos:column="31">(<pos:position pos:line="8" pos:column="32"/></operator><operator pos:line="8" pos:column="32">*<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">p<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">)<pos:position pos:line="8" pos:column="35"/></operator></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="9" pos:column="9">a<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">*=<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">b<pos:position pos:line="9" pos:column="15"/></name></expr>;<pos:position pos:line="9" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></for>

    <return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">retval<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

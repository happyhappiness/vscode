<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_891_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">ssl_var_lookup_ssl_compress_meth<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name pos:line="1" pos:column="47">SSL<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">ssl<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">result<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><literal type="string" pos:line="3" pos:column="20">"NULL"<pos:position pos:line="3" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">OPENSSL_VERSION_NUMBER<pos:position pos:line="4" pos:column="30"/></name></cpp:ifdef>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><operator pos:line="5" pos:column="5">(<pos:position pos:line="5" pos:column="6"/></operator><name pos:line="5" pos:column="6">OPENSSL_VERSION_NUMBER<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">&gt;=<pos:position pos:line="5" pos:column="34"/></operator> <literal type="number" pos:line="5" pos:column="32">0x00908000<pos:position pos:line="5" pos:column="42"/></literal><operator pos:line="5" pos:column="42">)<pos:position pos:line="5" pos:column="43"/></operator></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SSL_SESSION<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">pSession<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><call><name pos:line="6" pos:column="29">SSL_get_session<pos:position pos:line="6" pos:column="44"/></name><argument_list pos:line="6" pos:column="44">(<argument><expr><name pos:line="6" pos:column="45">ssl<pos:position pos:line="6" pos:column="48"/></name></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="50"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">pSession<pos:position pos:line="8" pos:column="17"/></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18"> <block pos:line="8" pos:column="19">{
        <switch pos:line="9" pos:column="9">switch <condition pos:line="9" pos:column="16">(<expr><name><name pos:line="9" pos:column="17">pSession<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">compress_meth<pos:position pos:line="9" pos:column="40"/></name></name></expr>)<pos:position pos:line="9" pos:column="41"/></condition> <block pos:line="9" pos:column="42">{
        <case pos:line="10" pos:column="9">case <expr><literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr>:<pos:position pos:line="10" pos:column="16"/></case>
            <comment type="block" pos:line="11" pos:column="13">/* default "NULL" already set */</comment>
            <break pos:line="12" pos:column="13">break;<pos:position pos:line="12" pos:column="19"/></break>

            <comment type="block" pos:line="14" pos:column="13">/* Defined by RFC 3749, deflate is coded by "1" */</comment>
        <case pos:line="15" pos:column="9">case <expr><literal type="number" pos:line="15" pos:column="14">1<pos:position pos:line="15" pos:column="15"/></literal></expr>:<pos:position pos:line="15" pos:column="16"/></case>
            <expr_stmt><expr><name pos:line="16" pos:column="13">result<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <literal type="string" pos:line="16" pos:column="22">"DEFLATE"<pos:position pos:line="16" pos:column="31"/></literal></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
            <break pos:line="17" pos:column="13">break;<pos:position pos:line="17" pos:column="19"/></break>

            <comment type="block" pos:line="19" pos:column="13">/* IANA assigned compression number for LZS */</comment>
        <case pos:line="20" pos:column="9">case <expr><literal type="number" pos:line="20" pos:column="14">0x40<pos:position pos:line="20" pos:column="18"/></literal></expr>:<pos:position pos:line="20" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="21" pos:column="13">result<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <literal type="string" pos:line="21" pos:column="22">"LZS"<pos:position pos:line="21" pos:column="27"/></literal></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
            <break pos:line="22" pos:column="13">break;<pos:position pos:line="22" pos:column="19"/></break>

        <default pos:line="24" pos:column="9">default:<pos:position pos:line="24" pos:column="17"/></default>
            <expr_stmt><expr><name pos:line="25" pos:column="13">result<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <literal type="string" pos:line="25" pos:column="22">"UNKNOWN"<pos:position pos:line="25" pos:column="31"/></literal></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
            <break pos:line="26" pos:column="13">break;<pos:position pos:line="26" pos:column="19"/></break>
        }<pos:position pos:line="27" pos:column="10"/></block></switch>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">result<pos:position pos:line="31" pos:column="18"/></name></expr>;<pos:position pos:line="31" pos:column="19"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

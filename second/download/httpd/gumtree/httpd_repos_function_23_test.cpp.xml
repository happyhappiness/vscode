<function xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position"><specifier pos:line="642" pos:column="1">static<pos:position pos:line="642" pos:column="7"/></specifier> <type><name pos:line="642" pos:column="8">int<pos:position pos:line="642" pos:column="11"/></name></type> <name pos:line="642" pos:column="12">detect_patch_format<pos:position pos:line="642" pos:column="31"/></name><parameter_list pos:line="642" pos:column="31">(<parameter><decl><type><specifier pos:line="642" pos:column="32">const<pos:position pos:line="642" pos:column="37"/></specifier> <name pos:line="642" pos:column="38">char<pos:position pos:line="642" pos:column="42"/></name> <modifier pos:line="642" pos:column="43">*<pos:position pos:line="642" pos:column="44"/></modifier><modifier pos:line="642" pos:column="44">*<pos:position pos:line="642" pos:column="45"/></modifier></type><name pos:line="642" pos:column="45">paths<pos:position pos:line="642" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="642" pos:column="51"/></parameter_list>
<block pos:line="643" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="644" pos:column="9">enum<pos:position pos:line="644" pos:column="13"/></name> <name pos:line="644" pos:column="14">patch_format<pos:position pos:line="644" pos:column="26"/></name></name></type> <name pos:line="644" pos:column="27">ret<pos:position pos:line="644" pos:column="30"/></name> <init pos:line="644" pos:column="31">= <expr><name pos:line="644" pos:column="33">PATCH_FORMAT_UNKNOWN<pos:position pos:line="644" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="644" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="645" pos:column="9">struct<pos:position pos:line="645" pos:column="15"/></name> <name pos:line="645" pos:column="16">strbuf<pos:position pos:line="645" pos:column="22"/></name></name></type> <name pos:line="645" pos:column="23">l1<pos:position pos:line="645" pos:column="25"/></name> <init pos:line="645" pos:column="26">= <expr><name pos:line="645" pos:column="28">STRBUF_INIT<pos:position pos:line="645" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="645" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="646" pos:column="9">struct<pos:position pos:line="646" pos:column="15"/></name> <name pos:line="646" pos:column="16">strbuf<pos:position pos:line="646" pos:column="22"/></name></name></type> <name pos:line="646" pos:column="23">l2<pos:position pos:line="646" pos:column="25"/></name> <init pos:line="646" pos:column="26">= <expr><name pos:line="646" pos:column="28">STRBUF_INIT<pos:position pos:line="646" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="646" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="647" pos:column="9">struct<pos:position pos:line="647" pos:column="15"/></name> <name pos:line="647" pos:column="16">strbuf<pos:position pos:line="647" pos:column="22"/></name></name></type> <name pos:line="647" pos:column="23">l3<pos:position pos:line="647" pos:column="25"/></name> <init pos:line="647" pos:column="26">= <expr><name pos:line="647" pos:column="28">STRBUF_INIT<pos:position pos:line="647" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="647" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="648" pos:column="9">FILE<pos:position pos:line="648" pos:column="13"/></name> <modifier pos:line="648" pos:column="14">*<pos:position pos:line="648" pos:column="15"/></modifier></type><name pos:line="648" pos:column="15">fp<pos:position pos:line="648" pos:column="17"/></name></decl>;<pos:position pos:line="648" pos:column="18"/></decl_stmt>

	<comment type="block" pos:line="650" pos:column="9">/*
	 * We default to mbox format if input is from stdin and for directories
	 */</comment>
	<if pos:line="653" pos:column="9">if <condition pos:line="653" pos:column="12">(<expr><operator pos:line="653" pos:column="13">!<pos:position pos:line="653" pos:column="14"/></operator><operator pos:line="653" pos:column="14">*<pos:position pos:line="653" pos:column="15"/></operator><name pos:line="653" pos:column="15">paths<pos:position pos:line="653" pos:column="20"/></name> <operator pos:line="653" pos:column="21">||<pos:position pos:line="653" pos:column="23"/></operator> <operator pos:line="653" pos:column="24">!<pos:position pos:line="653" pos:column="25"/></operator><call><name pos:line="653" pos:column="25">strcmp<pos:position pos:line="653" pos:column="31"/></name><argument_list pos:line="653" pos:column="31">(<argument><expr><operator pos:line="653" pos:column="32">*<pos:position pos:line="653" pos:column="33"/></operator><name pos:line="653" pos:column="33">paths<pos:position pos:line="653" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="653" pos:column="40">"-"<pos:position pos:line="653" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="653" pos:column="44"/></argument_list></call> <operator pos:line="653" pos:column="45">||<pos:position pos:line="653" pos:column="47"/></operator> <call><name pos:line="653" pos:column="48">is_directory<pos:position pos:line="653" pos:column="60"/></name><argument_list pos:line="653" pos:column="60">(<argument><expr><operator pos:line="653" pos:column="61">*<pos:position pos:line="653" pos:column="62"/></operator><name pos:line="653" pos:column="62">paths<pos:position pos:line="653" pos:column="67"/></name></expr></argument>)<pos:position pos:line="653" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="653" pos:column="69"/></condition><then pos:line="653" pos:column="69">
		<block type="pseudo"><return pos:line="654" pos:column="17">return <expr><name pos:line="654" pos:column="24">PATCH_FORMAT_MBOX<pos:position pos:line="654" pos:column="41"/></name></expr>;<pos:position pos:line="654" pos:column="42"/></return></block></then></if>

	<comment type="block" pos:line="656" pos:column="9">/*
	 * Otherwise, check the first few lines of the first patch, starting
	 * from the first non-blank line, to try to detect its format.
	 */</comment>

	<expr_stmt><expr><name pos:line="661" pos:column="9">fp<pos:position pos:line="661" pos:column="11"/></name> <operator pos:line="661" pos:column="12">=<pos:position pos:line="661" pos:column="13"/></operator> <call><name pos:line="661" pos:column="14">xfopen<pos:position pos:line="661" pos:column="20"/></name><argument_list pos:line="661" pos:column="20">(<argument><expr><operator pos:line="661" pos:column="21">*<pos:position pos:line="661" pos:column="22"/></operator><name pos:line="661" pos:column="22">paths<pos:position pos:line="661" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="661" pos:column="29">"r"<pos:position pos:line="661" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="661" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="661" pos:column="34"/></expr_stmt>

	<while pos:line="663" pos:column="9">while <condition pos:line="663" pos:column="15">(<expr><operator pos:line="663" pos:column="16">!<pos:position pos:line="663" pos:column="17"/></operator><call><name pos:line="663" pos:column="17">strbuf_getline<pos:position pos:line="663" pos:column="31"/></name><argument_list pos:line="663" pos:column="31">(<argument><expr><operator pos:line="663" pos:column="32">&amp;<pos:position pos:line="663" pos:column="37"/></operator><name pos:line="663" pos:column="33">l1<pos:position pos:line="663" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="663" pos:column="37">fp<pos:position pos:line="663" pos:column="39"/></name></expr></argument>)<pos:position pos:line="663" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="663" pos:column="41"/></condition> <block pos:line="663" pos:column="42">{
		<if pos:line="664" pos:column="17">if <condition pos:line="664" pos:column="20">(<expr><name><name pos:line="664" pos:column="21">l1<pos:position pos:line="664" pos:column="23"/></name><operator pos:line="664" pos:column="23">.<pos:position pos:line="664" pos:column="24"/></operator><name pos:line="664" pos:column="24">len<pos:position pos:line="664" pos:column="27"/></name></name></expr>)<pos:position pos:line="664" pos:column="28"/></condition><then pos:line="664" pos:column="28">
			<block type="pseudo"><break pos:line="665" pos:column="25">break;<pos:position pos:line="665" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="666" pos:column="10"/></block></while>

	<if pos:line="668" pos:column="9">if <condition pos:line="668" pos:column="12">(<expr><call><name pos:line="668" pos:column="13">starts_with<pos:position pos:line="668" pos:column="24"/></name><argument_list pos:line="668" pos:column="24">(<argument><expr><name><name pos:line="668" pos:column="25">l1<pos:position pos:line="668" pos:column="27"/></name><operator pos:line="668" pos:column="27">.<pos:position pos:line="668" pos:column="28"/></operator><name pos:line="668" pos:column="28">buf<pos:position pos:line="668" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="668" pos:column="33">"From "<pos:position pos:line="668" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="668" pos:column="41"/></argument_list></call> <operator pos:line="668" pos:column="42">||<pos:position pos:line="668" pos:column="44"/></operator> <call><name pos:line="668" pos:column="45">starts_with<pos:position pos:line="668" pos:column="56"/></name><argument_list pos:line="668" pos:column="56">(<argument><expr><name><name pos:line="668" pos:column="57">l1<pos:position pos:line="668" pos:column="59"/></name><operator pos:line="668" pos:column="59">.<pos:position pos:line="668" pos:column="60"/></operator><name pos:line="668" pos:column="60">buf<pos:position pos:line="668" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="668" pos:column="65">"From: "<pos:position pos:line="668" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="668" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="668" pos:column="75"/></condition><then pos:line="668" pos:column="75"> <block pos:line="668" pos:column="76">{
		<expr_stmt><expr><name pos:line="669" pos:column="17">ret<pos:position pos:line="669" pos:column="20"/></name> <operator pos:line="669" pos:column="21">=<pos:position pos:line="669" pos:column="22"/></operator> <name pos:line="669" pos:column="23">PATCH_FORMAT_MBOX<pos:position pos:line="669" pos:column="40"/></name></expr>;<pos:position pos:line="669" pos:column="41"/></expr_stmt>
		<goto pos:line="670" pos:column="17">goto <name pos:line="670" pos:column="22">done<pos:position pos:line="670" pos:column="26"/></name>;<pos:position pos:line="670" pos:column="27"/></goto>
	}<pos:position pos:line="671" pos:column="10"/></block></then></if>

	<if pos:line="673" pos:column="9">if <condition pos:line="673" pos:column="12">(<expr><call><name pos:line="673" pos:column="13">starts_with<pos:position pos:line="673" pos:column="24"/></name><argument_list pos:line="673" pos:column="24">(<argument><expr><name><name pos:line="673" pos:column="25">l1<pos:position pos:line="673" pos:column="27"/></name><operator pos:line="673" pos:column="27">.<pos:position pos:line="673" pos:column="28"/></operator><name pos:line="673" pos:column="28">buf<pos:position pos:line="673" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="673" pos:column="33">"# This series applies on GIT commit"<pos:position pos:line="673" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="673" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="673" pos:column="72"/></condition><then pos:line="673" pos:column="72"> <block pos:line="673" pos:column="73">{
		<expr_stmt><expr><name pos:line="674" pos:column="17">ret<pos:position pos:line="674" pos:column="20"/></name> <operator pos:line="674" pos:column="21">=<pos:position pos:line="674" pos:column="22"/></operator> <name pos:line="674" pos:column="23">PATCH_FORMAT_STGIT_SERIES<pos:position pos:line="674" pos:column="48"/></name></expr>;<pos:position pos:line="674" pos:column="49"/></expr_stmt>
		<goto pos:line="675" pos:column="17">goto <name pos:line="675" pos:column="22">done<pos:position pos:line="675" pos:column="26"/></name>;<pos:position pos:line="675" pos:column="27"/></goto>
	}<pos:position pos:line="676" pos:column="10"/></block></then></if>

	<if pos:line="678" pos:column="9">if <condition pos:line="678" pos:column="12">(<expr><operator pos:line="678" pos:column="13">!<pos:position pos:line="678" pos:column="14"/></operator><call><name pos:line="678" pos:column="14">strcmp<pos:position pos:line="678" pos:column="20"/></name><argument_list pos:line="678" pos:column="20">(<argument><expr><name><name pos:line="678" pos:column="21">l1<pos:position pos:line="678" pos:column="23"/></name><operator pos:line="678" pos:column="23">.<pos:position pos:line="678" pos:column="24"/></operator><name pos:line="678" pos:column="24">buf<pos:position pos:line="678" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="678" pos:column="29">"# HG changeset patch"<pos:position pos:line="678" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="678" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="678" pos:column="53"/></condition><then pos:line="678" pos:column="53"> <block pos:line="678" pos:column="54">{
		<expr_stmt><expr><name pos:line="679" pos:column="17">ret<pos:position pos:line="679" pos:column="20"/></name> <operator pos:line="679" pos:column="21">=<pos:position pos:line="679" pos:column="22"/></operator> <name pos:line="679" pos:column="23">PATCH_FORMAT_HG<pos:position pos:line="679" pos:column="38"/></name></expr>;<pos:position pos:line="679" pos:column="39"/></expr_stmt>
		<goto pos:line="680" pos:column="17">goto <name pos:line="680" pos:column="22">done<pos:position pos:line="680" pos:column="26"/></name>;<pos:position pos:line="680" pos:column="27"/></goto>
	}<pos:position pos:line="681" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="683" pos:column="9">strbuf_reset<pos:position pos:line="683" pos:column="21"/></name><argument_list pos:line="683" pos:column="21">(<argument><expr><operator pos:line="683" pos:column="22">&amp;<pos:position pos:line="683" pos:column="27"/></operator><name pos:line="683" pos:column="23">l2<pos:position pos:line="683" pos:column="25"/></name></expr></argument>)<pos:position pos:line="683" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="683" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="684" pos:column="9">strbuf_getline<pos:position pos:line="684" pos:column="23"/></name><argument_list pos:line="684" pos:column="23">(<argument><expr><operator pos:line="684" pos:column="24">&amp;<pos:position pos:line="684" pos:column="29"/></operator><name pos:line="684" pos:column="25">l2<pos:position pos:line="684" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="684" pos:column="29">fp<pos:position pos:line="684" pos:column="31"/></name></expr></argument>)<pos:position pos:line="684" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="684" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="685" pos:column="9">strbuf_reset<pos:position pos:line="685" pos:column="21"/></name><argument_list pos:line="685" pos:column="21">(<argument><expr><operator pos:line="685" pos:column="22">&amp;<pos:position pos:line="685" pos:column="27"/></operator><name pos:line="685" pos:column="23">l3<pos:position pos:line="685" pos:column="25"/></name></expr></argument>)<pos:position pos:line="685" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="685" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="686" pos:column="9">strbuf_getline<pos:position pos:line="686" pos:column="23"/></name><argument_list pos:line="686" pos:column="23">(<argument><expr><operator pos:line="686" pos:column="24">&amp;<pos:position pos:line="686" pos:column="29"/></operator><name pos:line="686" pos:column="25">l3<pos:position pos:line="686" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="686" pos:column="29">fp<pos:position pos:line="686" pos:column="31"/></name></expr></argument>)<pos:position pos:line="686" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="686" pos:column="33"/></expr_stmt>

	<comment type="block" pos:line="688" pos:column="9">/*
	 * If the second line is empty and the third is a From, Author or Date
	 * entry, this is likely an StGit patch.
	 */</comment>
	<if pos:line="692" pos:column="9">if <condition pos:line="692" pos:column="12">(<expr><name><name pos:line="692" pos:column="13">l1<pos:position pos:line="692" pos:column="15"/></name><operator pos:line="692" pos:column="15">.<pos:position pos:line="692" pos:column="16"/></operator><name pos:line="692" pos:column="16">len<pos:position pos:line="692" pos:column="19"/></name></name> <operator pos:line="692" pos:column="20">&amp;&amp;<pos:position pos:line="692" pos:column="30"/></operator> <operator pos:line="692" pos:column="23">!<pos:position pos:line="692" pos:column="24"/></operator><name><name pos:line="692" pos:column="24">l2<pos:position pos:line="692" pos:column="26"/></name><operator pos:line="692" pos:column="26">.<pos:position pos:line="692" pos:column="27"/></operator><name pos:line="692" pos:column="27">len<pos:position pos:line="692" pos:column="30"/></name></name> <operator pos:line="692" pos:column="31">&amp;&amp;<pos:position pos:line="692" pos:column="41"/></operator>
		<operator pos:line="693" pos:column="17">(<pos:position pos:line="693" pos:column="18"/></operator><call><name pos:line="693" pos:column="18">starts_with<pos:position pos:line="693" pos:column="29"/></name><argument_list pos:line="693" pos:column="29">(<argument><expr><name><name pos:line="693" pos:column="30">l3<pos:position pos:line="693" pos:column="32"/></name><operator pos:line="693" pos:column="32">.<pos:position pos:line="693" pos:column="33"/></operator><name pos:line="693" pos:column="33">buf<pos:position pos:line="693" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="693" pos:column="38">"From:"<pos:position pos:line="693" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="693" pos:column="46"/></argument_list></call> <operator pos:line="693" pos:column="47">||<pos:position pos:line="693" pos:column="49"/></operator>
		 <call><name pos:line="694" pos:column="18">starts_with<pos:position pos:line="694" pos:column="29"/></name><argument_list pos:line="694" pos:column="29">(<argument><expr><name><name pos:line="694" pos:column="30">l3<pos:position pos:line="694" pos:column="32"/></name><operator pos:line="694" pos:column="32">.<pos:position pos:line="694" pos:column="33"/></operator><name pos:line="694" pos:column="33">buf<pos:position pos:line="694" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="694" pos:column="38">"Author:"<pos:position pos:line="694" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="694" pos:column="48"/></argument_list></call> <operator pos:line="694" pos:column="49">||<pos:position pos:line="694" pos:column="51"/></operator>
		 <call><name pos:line="695" pos:column="18">starts_with<pos:position pos:line="695" pos:column="29"/></name><argument_list pos:line="695" pos:column="29">(<argument><expr><name><name pos:line="695" pos:column="30">l3<pos:position pos:line="695" pos:column="32"/></name><operator pos:line="695" pos:column="32">.<pos:position pos:line="695" pos:column="33"/></operator><name pos:line="695" pos:column="33">buf<pos:position pos:line="695" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="695" pos:column="38">"Date:"<pos:position pos:line="695" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="695" pos:column="46"/></argument_list></call><operator pos:line="695" pos:column="46">)<pos:position pos:line="695" pos:column="47"/></operator></expr>)<pos:position pos:line="695" pos:column="48"/></condition><then pos:line="695" pos:column="48"> <block pos:line="695" pos:column="49">{
		<expr_stmt><expr><name pos:line="696" pos:column="17">ret<pos:position pos:line="696" pos:column="20"/></name> <operator pos:line="696" pos:column="21">=<pos:position pos:line="696" pos:column="22"/></operator> <name pos:line="696" pos:column="23">PATCH_FORMAT_STGIT<pos:position pos:line="696" pos:column="41"/></name></expr>;<pos:position pos:line="696" pos:column="42"/></expr_stmt>
		<goto pos:line="697" pos:column="17">goto <name pos:line="697" pos:column="22">done<pos:position pos:line="697" pos:column="26"/></name>;<pos:position pos:line="697" pos:column="27"/></goto>
	}<pos:position pos:line="698" pos:column="10"/></block></then></if>

	<if pos:line="700" pos:column="9">if <condition pos:line="700" pos:column="12">(<expr><name><name pos:line="700" pos:column="13">l1<pos:position pos:line="700" pos:column="15"/></name><operator pos:line="700" pos:column="15">.<pos:position pos:line="700" pos:column="16"/></operator><name pos:line="700" pos:column="16">len<pos:position pos:line="700" pos:column="19"/></name></name> <operator pos:line="700" pos:column="20">&amp;&amp;<pos:position pos:line="700" pos:column="30"/></operator> <call><name pos:line="700" pos:column="23">is_mail<pos:position pos:line="700" pos:column="30"/></name><argument_list pos:line="700" pos:column="30">(<argument><expr><name pos:line="700" pos:column="31">fp<pos:position pos:line="700" pos:column="33"/></name></expr></argument>)<pos:position pos:line="700" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="700" pos:column="35"/></condition><then pos:line="700" pos:column="35"> <block pos:line="700" pos:column="36">{
		<expr_stmt><expr><name pos:line="701" pos:column="17">ret<pos:position pos:line="701" pos:column="20"/></name> <operator pos:line="701" pos:column="21">=<pos:position pos:line="701" pos:column="22"/></operator> <name pos:line="701" pos:column="23">PATCH_FORMAT_MBOX<pos:position pos:line="701" pos:column="40"/></name></expr>;<pos:position pos:line="701" pos:column="41"/></expr_stmt>
		<goto pos:line="702" pos:column="17">goto <name pos:line="702" pos:column="22">done<pos:position pos:line="702" pos:column="26"/></name>;<pos:position pos:line="702" pos:column="27"/></goto>
	}<pos:position pos:line="703" pos:column="10"/></block></then></if>

<label><name pos:line="705" pos:column="1">done<pos:position pos:line="705" pos:column="5"/></name>:<pos:position pos:line="705" pos:column="6"/></label>
	<expr_stmt><expr><call><name pos:line="706" pos:column="9">fclose<pos:position pos:line="706" pos:column="15"/></name><argument_list pos:line="706" pos:column="15">(<argument><expr><name pos:line="706" pos:column="16">fp<pos:position pos:line="706" pos:column="18"/></name></expr></argument>)<pos:position pos:line="706" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="706" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="707" pos:column="9">strbuf_release<pos:position pos:line="707" pos:column="23"/></name><argument_list pos:line="707" pos:column="23">(<argument><expr><operator pos:line="707" pos:column="24">&amp;<pos:position pos:line="707" pos:column="29"/></operator><name pos:line="707" pos:column="25">l1<pos:position pos:line="707" pos:column="27"/></name></expr></argument>)<pos:position pos:line="707" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="707" pos:column="29"/></expr_stmt>
	<return pos:line="708" pos:column="9">return <expr><name pos:line="708" pos:column="16">ret<pos:position pos:line="708" pos:column="19"/></name></expr>;<pos:position pos:line="708" pos:column="20"/></return>
}<pos:position pos:line="709" pos:column="2"/></block></function>


<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1575_httpd-2.4.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">cmd_rewritecond<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">cmd_parms<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">cmd<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">void<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">in_dconf<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                                   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">in_str<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">rewrite_perdir_conf<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">dconf<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><name pos:line="4" pos:column="34">in_dconf<pos:position pos:line="4" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">str<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><call><name pos:line="5" pos:column="17">apr_pstrdup<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><name><name pos:line="5" pos:column="29">cmd<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">pool<pos:position pos:line="5" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="40">in_str<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">rewrite_server_conf<pos:position pos:line="6" pos:column="24"/></name> <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier></type><name pos:line="6" pos:column="26">sconf<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">rewritecond_entry<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">newcond<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ap_regex_t<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">regexp<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">a1<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="23">a2<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><name pos:line="9" pos:column="28">NULL<pos:position pos:line="9" pos:column="32"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="34">*<pos:position pos:line="9" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="35">a3<pos:position pos:line="9" pos:column="37"/></name> <init pos:line="9" pos:column="38">= <expr><name pos:line="9" pos:column="40">NULL<pos:position pos:line="9" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">err<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="12" pos:column="5">sconf<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <call><name pos:line="12" pos:column="13">ap_get_module_config<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name><name pos:line="12" pos:column="34">cmd<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">server<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">-&gt;<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="47">module_config<pos:position pos:line="12" pos:column="60"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="62">&amp;<pos:position pos:line="12" pos:column="67"/></operator><name pos:line="12" pos:column="63">rewrite_module<pos:position pos:line="12" pos:column="77"/></name></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="79"/></expr_stmt>

    <comment type="block" pos:line="14" pos:column="5">/*  make a new entry in the internal temporary rewrite rule list */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">cmd<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">path<pos:position pos:line="15" pos:column="18"/></name></name> <operator pos:line="15" pos:column="19">==<pos:position pos:line="15" pos:column="21"/></operator> <name pos:line="15" pos:column="22">NULL<pos:position pos:line="15" pos:column="26"/></name></expr>)<pos:position pos:line="15" pos:column="27"/></condition><then pos:line="15" pos:column="27"> <block pos:line="15" pos:column="28">{   <comment type="block" pos:line="15" pos:column="32">/* is server command */</comment>
        <expr_stmt><expr><name pos:line="16" pos:column="9">newcond<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">apr_array_push<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><name><name pos:line="16" pos:column="34">sconf<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">rewriteconds<pos:position pos:line="16" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then>
    <else pos:line="18" pos:column="5">else <block pos:line="18" pos:column="10">{                     <comment type="block" pos:line="18" pos:column="32">/* is per-directory command */</comment>
        <expr_stmt><expr><name pos:line="19" pos:column="9">newcond<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <call><name pos:line="19" pos:column="19">apr_array_push<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><name><name pos:line="19" pos:column="34">dconf<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">rewriteconds<pos:position pos:line="19" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="22" pos:column="5">/* parse the argument line ourself
     * a1 .. a3 are substrings of str, which is a fresh copy
     * of the argument line. So we can use a1 .. a3 without
     * copying them again.
     */</comment>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><call><name pos:line="27" pos:column="9">parseargline<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">str<pos:position pos:line="27" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="27">&amp;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="28">a1<pos:position pos:line="27" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="32">&amp;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="33">a2<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="37">&amp;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="38">a3<pos:position pos:line="27" pos:column="40"/></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="42"/></condition><then pos:line="27" pos:column="42"> <block pos:line="27" pos:column="43">{
        <return pos:line="28" pos:column="9">return <expr><call><name pos:line="28" pos:column="16">apr_pstrcat<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name><name pos:line="28" pos:column="28">cmd<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">-&gt;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="33">pool<pos:position pos:line="28" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="39">"RewriteCond: bad argument line '"<pos:position pos:line="28" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="75">str<pos:position pos:line="28" pos:column="78"/></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="29" pos:column="28">"'"<pos:position pos:line="29" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="33">NULL<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="39"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="32" pos:column="5">/* arg1: the input string */</comment>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">newcond<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">input<pos:position pos:line="33" pos:column="19"/></name></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <name pos:line="33" pos:column="22">a1<pos:position pos:line="33" pos:column="24"/></name></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* arg3: optional flags field
     * (this has to be parsed first, because we need to
     *  know if the regex should be compiled with ICASE!)
     */</comment>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">newcond<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">-&gt;<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="14">flags<pos:position pos:line="39" pos:column="19"/></name></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <name pos:line="39" pos:column="22">CONDFLAG_NONE<pos:position pos:line="39" pos:column="35"/></name></expr>;<pos:position pos:line="39" pos:column="36"/></expr_stmt>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">a3<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">!=<pos:position pos:line="40" pos:column="14"/></operator> <name pos:line="40" pos:column="15">NULL<pos:position pos:line="40" pos:column="19"/></name></expr>)<pos:position pos:line="40" pos:column="20"/></condition><then pos:line="40" pos:column="20"> <block pos:line="40" pos:column="21">{
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">(<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">err<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <call><name pos:line="41" pos:column="20">cmd_parseflagfield<pos:position pos:line="41" pos:column="38"/></name><argument_list pos:line="41" pos:column="38">(<argument><expr><name><name pos:line="41" pos:column="39">cmd<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">-&gt;<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="44">pool<pos:position pos:line="41" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="50">newcond<pos:position pos:line="41" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="59">a3<pos:position pos:line="41" pos:column="61"/></name></expr></argument>,
                                      <argument><expr><name pos:line="42" pos:column="39">cmd_rewritecond_setflag<pos:position pos:line="42" pos:column="62"/></name></expr></argument>)<pos:position pos:line="42" pos:column="63"/></argument_list></call><operator pos:line="42" pos:column="63">)<pos:position pos:line="42" pos:column="64"/></operator> <operator pos:line="42" pos:column="65">!=<pos:position pos:line="42" pos:column="67"/></operator> <name pos:line="42" pos:column="68">NULL<pos:position pos:line="42" pos:column="72"/></name></expr>)<pos:position pos:line="42" pos:column="73"/></condition><then pos:line="42" pos:column="73"> <block pos:line="42" pos:column="74">{
            <return pos:line="43" pos:column="13">return <expr><call><name pos:line="43" pos:column="20">apr_pstrcat<pos:position pos:line="43" pos:column="31"/></name><argument_list pos:line="43" pos:column="31">(<argument><expr><name><name pos:line="43" pos:column="32">cmd<pos:position pos:line="43" pos:column="35"/></name><operator pos:line="43" pos:column="35">-&gt;<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="37">pool<pos:position pos:line="43" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="43">"RewriteCond: "<pos:position pos:line="43" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="60">err<pos:position pos:line="43" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="65">NULL<pos:position pos:line="43" pos:column="69"/></name></expr></argument>)<pos:position pos:line="43" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="71"/></return>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="47" pos:column="5">/* arg2: the pattern */</comment>
    <expr_stmt><expr><name><name pos:line="48" pos:column="5">newcond<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">-&gt;<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="14">pattern<pos:position pos:line="48" pos:column="21"/></name></name> <operator pos:line="48" pos:column="22">=<pos:position pos:line="48" pos:column="23"/></operator> <name pos:line="48" pos:column="24">a2<pos:position pos:line="48" pos:column="26"/></name></expr>;<pos:position pos:line="48" pos:column="27"/></expr_stmt>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><operator pos:line="49" pos:column="9">*<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">a2<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">==<pos:position pos:line="49" pos:column="15"/></operator> <literal type="char" pos:line="49" pos:column="16">'!'<pos:position pos:line="49" pos:column="19"/></literal></expr>)<pos:position pos:line="49" pos:column="20"/></condition><then pos:line="49" pos:column="20"> <block pos:line="49" pos:column="21">{
        <expr_stmt><expr><name><name pos:line="50" pos:column="9">newcond<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">flags<pos:position pos:line="50" pos:column="23"/></name></name> <operator pos:line="50" pos:column="24">|=<pos:position pos:line="50" pos:column="26"/></operator> <name pos:line="50" pos:column="27">CONDFLAG_NOTMATCH<pos:position pos:line="50" pos:column="44"/></name></expr>;<pos:position pos:line="50" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="51" pos:column="9">++<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="11">a2<pos:position pos:line="51" pos:column="13"/></name></expr>;<pos:position pos:line="51" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="54" pos:column="5">/* determine the pattern type */</comment>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">newcond<pos:position pos:line="55" pos:column="12"/></name><operator pos:line="55" pos:column="12">-&gt;<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="14">ptype<pos:position pos:line="55" pos:column="19"/></name></name> <operator pos:line="55" pos:column="20">=<pos:position pos:line="55" pos:column="21"/></operator> <name pos:line="55" pos:column="22">CONDPAT_REGEX<pos:position pos:line="55" pos:column="35"/></name></expr>;<pos:position pos:line="55" pos:column="36"/></expr_stmt>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><call><name pos:line="56" pos:column="9">strcasecmp<pos:position pos:line="56" pos:column="19"/></name><argument_list pos:line="56" pos:column="19">(<argument><expr><name pos:line="56" pos:column="20">a1<pos:position pos:line="56" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="24">"expr"<pos:position pos:line="56" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="31"/></argument_list></call> <operator pos:line="56" pos:column="32">==<pos:position pos:line="56" pos:column="34"/></operator> <literal type="number" pos:line="56" pos:column="35">0<pos:position pos:line="56" pos:column="36"/></literal></expr>)<pos:position pos:line="56" pos:column="37"/></condition><then pos:line="56" pos:column="37"> <block pos:line="56" pos:column="38">{
        <expr_stmt><expr><name><name pos:line="57" pos:column="9">newcond<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">-&gt;<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="18">ptype<pos:position pos:line="57" pos:column="23"/></name></name> <operator pos:line="57" pos:column="24">=<pos:position pos:line="57" pos:column="25"/></operator> <name pos:line="57" pos:column="26">CONDPAT_AP_EXPR<pos:position pos:line="57" pos:column="41"/></name></expr>;<pos:position pos:line="57" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></then>
    <elseif pos:line="59" pos:column="5">else <if pos:line="59" pos:column="10">if <condition pos:line="59" pos:column="13">(<expr><operator pos:line="59" pos:column="14">*<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">a2<pos:position pos:line="59" pos:column="17"/></name> <operator pos:line="59" pos:column="18">&amp;&amp;<pos:position pos:line="59" pos:column="28"/></operator> <name><name pos:line="59" pos:column="21">a2<pos:position pos:line="59" pos:column="23"/></name><index pos:line="59" pos:column="23">[<expr><literal type="number" pos:line="59" pos:column="24">1<pos:position pos:line="59" pos:column="25"/></literal></expr>]<pos:position pos:line="59" pos:column="26"/></index></name></expr>)<pos:position pos:line="59" pos:column="27"/></condition><then pos:line="59" pos:column="27"> <block pos:line="59" pos:column="28">{
        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><operator pos:line="60" pos:column="13">*<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="14">a2<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">==<pos:position pos:line="60" pos:column="19"/></operator> <literal type="char" pos:line="60" pos:column="20">'-'<pos:position pos:line="60" pos:column="23"/></literal></expr>)<pos:position pos:line="60" pos:column="24"/></condition><then pos:line="60" pos:column="24"> <block pos:line="60" pos:column="25">{
            <if pos:line="61" pos:column="13">if <condition pos:line="61" pos:column="16">(<expr><operator pos:line="61" pos:column="17">!<pos:position pos:line="61" pos:column="18"/></operator><name><name pos:line="61" pos:column="18">a2<pos:position pos:line="61" pos:column="20"/></name><index pos:line="61" pos:column="20">[<expr><literal type="number" pos:line="61" pos:column="21">2<pos:position pos:line="61" pos:column="22"/></literal></expr>]<pos:position pos:line="61" pos:column="23"/></index></name></expr>)<pos:position pos:line="61" pos:column="24"/></condition><then pos:line="61" pos:column="24"> <block pos:line="61" pos:column="25">{
                <switch pos:line="62" pos:column="17">switch <condition pos:line="62" pos:column="24">(<expr><name><name pos:line="62" pos:column="25">a2<pos:position pos:line="62" pos:column="27"/></name><index pos:line="62" pos:column="27">[<expr><literal type="number" pos:line="62" pos:column="28">1<pos:position pos:line="62" pos:column="29"/></literal></expr>]<pos:position pos:line="62" pos:column="30"/></index></name></expr>)<pos:position pos:line="62" pos:column="31"/></condition> <block pos:line="62" pos:column="32">{
                <case pos:line="63" pos:column="17">case <expr><literal type="char" pos:line="63" pos:column="22">'f'<pos:position pos:line="63" pos:column="25"/></literal></expr>:<pos:position pos:line="63" pos:column="26"/></case> <expr_stmt><expr><name><name pos:line="63" pos:column="27">newcond<pos:position pos:line="63" pos:column="34"/></name><operator pos:line="63" pos:column="34">-&gt;<pos:position pos:line="63" pos:column="39"/></operator><name pos:line="63" pos:column="36">ptype<pos:position pos:line="63" pos:column="41"/></name></name> <operator pos:line="63" pos:column="42">=<pos:position pos:line="63" pos:column="43"/></operator> <name pos:line="63" pos:column="44">CONDPAT_FILE_EXISTS<pos:position pos:line="63" pos:column="63"/></name></expr>;<pos:position pos:line="63" pos:column="64"/></expr_stmt> <break pos:line="63" pos:column="65">break;<pos:position pos:line="63" pos:column="71"/></break>
                <case pos:line="64" pos:column="17">case <expr><literal type="char" pos:line="64" pos:column="22">'s'<pos:position pos:line="64" pos:column="25"/></literal></expr>:<pos:position pos:line="64" pos:column="26"/></case> <expr_stmt><expr><name><name pos:line="64" pos:column="27">newcond<pos:position pos:line="64" pos:column="34"/></name><operator pos:line="64" pos:column="34">-&gt;<pos:position pos:line="64" pos:column="39"/></operator><name pos:line="64" pos:column="36">ptype<pos:position pos:line="64" pos:column="41"/></name></name> <operator pos:line="64" pos:column="42">=<pos:position pos:line="64" pos:column="43"/></operator> <name pos:line="64" pos:column="44">CONDPAT_FILE_SIZE<pos:position pos:line="64" pos:column="61"/></name></expr>;<pos:position pos:line="64" pos:column="62"/></expr_stmt>   <break pos:line="64" pos:column="65">break;<pos:position pos:line="64" pos:column="71"/></break>
                <case pos:line="65" pos:column="17">case <expr><literal type="char" pos:line="65" pos:column="22">'d'<pos:position pos:line="65" pos:column="25"/></literal></expr>:<pos:position pos:line="65" pos:column="26"/></case> <expr_stmt><expr><name><name pos:line="65" pos:column="27">newcond<pos:position pos:line="65" pos:column="34"/></name><operator pos:line="65" pos:column="34">-&gt;<pos:position pos:line="65" pos:column="39"/></operator><name pos:line="65" pos:column="36">ptype<pos:position pos:line="65" pos:column="41"/></name></name> <operator pos:line="65" pos:column="42">=<pos:position pos:line="65" pos:column="43"/></operator> <name pos:line="65" pos:column="44">CONDPAT_FILE_DIR<pos:position pos:line="65" pos:column="60"/></name></expr>;<pos:position pos:line="65" pos:column="61"/></expr_stmt>    <break pos:line="65" pos:column="65">break;<pos:position pos:line="65" pos:column="71"/></break>
                <case pos:line="66" pos:column="17">case <expr><literal type="char" pos:line="66" pos:column="22">'x'<pos:position pos:line="66" pos:column="25"/></literal></expr>:<pos:position pos:line="66" pos:column="26"/></case> <expr_stmt><expr><name><name pos:line="66" pos:column="27">newcond<pos:position pos:line="66" pos:column="34"/></name><operator pos:line="66" pos:column="34">-&gt;<pos:position pos:line="66" pos:column="39"/></operator><name pos:line="66" pos:column="36">ptype<pos:position pos:line="66" pos:column="41"/></name></name> <operator pos:line="66" pos:column="42">=<pos:position pos:line="66" pos:column="43"/></operator> <name pos:line="66" pos:column="44">CONDPAT_FILE_XBIT<pos:position pos:line="66" pos:column="61"/></name></expr>;<pos:position pos:line="66" pos:column="62"/></expr_stmt>   <break pos:line="66" pos:column="65">break;<pos:position pos:line="66" pos:column="71"/></break>
                <case pos:line="67" pos:column="17">case <expr><literal type="char" pos:line="67" pos:column="22">'h'<pos:position pos:line="67" pos:column="25"/></literal></expr>:<pos:position pos:line="67" pos:column="26"/></case> <expr_stmt><expr><name><name pos:line="67" pos:column="27">newcond<pos:position pos:line="67" pos:column="34"/></name><operator pos:line="67" pos:column="34">-&gt;<pos:position pos:line="67" pos:column="39"/></operator><name pos:line="67" pos:column="36">ptype<pos:position pos:line="67" pos:column="41"/></name></name> <operator pos:line="67" pos:column="42">=<pos:position pos:line="67" pos:column="43"/></operator> <name pos:line="67" pos:column="44">CONDPAT_FILE_LINK<pos:position pos:line="67" pos:column="61"/></name></expr>;<pos:position pos:line="67" pos:column="62"/></expr_stmt>   <break pos:line="67" pos:column="65">break;<pos:position pos:line="67" pos:column="71"/></break>
                <case pos:line="68" pos:column="17">case <expr><literal type="char" pos:line="68" pos:column="22">'L'<pos:position pos:line="68" pos:column="25"/></literal></expr>:<pos:position pos:line="68" pos:column="26"/></case> <expr_stmt><expr><name><name pos:line="68" pos:column="27">newcond<pos:position pos:line="68" pos:column="34"/></name><operator pos:line="68" pos:column="34">-&gt;<pos:position pos:line="68" pos:column="39"/></operator><name pos:line="68" pos:column="36">ptype<pos:position pos:line="68" pos:column="41"/></name></name> <operator pos:line="68" pos:column="42">=<pos:position pos:line="68" pos:column="43"/></operator> <name pos:line="68" pos:column="44">CONDPAT_FILE_LINK<pos:position pos:line="68" pos:column="61"/></name></expr>;<pos:position pos:line="68" pos:column="62"/></expr_stmt>   <break pos:line="68" pos:column="65">break;<pos:position pos:line="68" pos:column="71"/></break>
                <case pos:line="69" pos:column="17">case <expr><literal type="char" pos:line="69" pos:column="22">'l'<pos:position pos:line="69" pos:column="25"/></literal></expr>:<pos:position pos:line="69" pos:column="26"/></case> <expr_stmt><expr><name><name pos:line="69" pos:column="27">newcond<pos:position pos:line="69" pos:column="34"/></name><operator pos:line="69" pos:column="34">-&gt;<pos:position pos:line="69" pos:column="39"/></operator><name pos:line="69" pos:column="36">ptype<pos:position pos:line="69" pos:column="41"/></name></name> <operator pos:line="69" pos:column="42">=<pos:position pos:line="69" pos:column="43"/></operator> <name pos:line="69" pos:column="44">CONDPAT_FILE_LINK<pos:position pos:line="69" pos:column="61"/></name></expr>;<pos:position pos:line="69" pos:column="62"/></expr_stmt>   <break pos:line="69" pos:column="65">break;<pos:position pos:line="69" pos:column="71"/></break>
                <case pos:line="70" pos:column="17">case <expr><literal type="char" pos:line="70" pos:column="22">'U'<pos:position pos:line="70" pos:column="25"/></literal></expr>:<pos:position pos:line="70" pos:column="26"/></case> <expr_stmt><expr><name><name pos:line="70" pos:column="27">newcond<pos:position pos:line="70" pos:column="34"/></name><operator pos:line="70" pos:column="34">-&gt;<pos:position pos:line="70" pos:column="39"/></operator><name pos:line="70" pos:column="36">ptype<pos:position pos:line="70" pos:column="41"/></name></name> <operator pos:line="70" pos:column="42">=<pos:position pos:line="70" pos:column="43"/></operator> <name pos:line="70" pos:column="44">CONDPAT_LU_URL<pos:position pos:line="70" pos:column="58"/></name></expr>;<pos:position pos:line="70" pos:column="59"/></expr_stmt>      <break pos:line="70" pos:column="65">break;<pos:position pos:line="70" pos:column="71"/></break>
                <case pos:line="71" pos:column="17">case <expr><literal type="char" pos:line="71" pos:column="22">'F'<pos:position pos:line="71" pos:column="25"/></literal></expr>:<pos:position pos:line="71" pos:column="26"/></case> <expr_stmt><expr><name><name pos:line="71" pos:column="27">newcond<pos:position pos:line="71" pos:column="34"/></name><operator pos:line="71" pos:column="34">-&gt;<pos:position pos:line="71" pos:column="39"/></operator><name pos:line="71" pos:column="36">ptype<pos:position pos:line="71" pos:column="41"/></name></name> <operator pos:line="71" pos:column="42">=<pos:position pos:line="71" pos:column="43"/></operator> <name pos:line="71" pos:column="44">CONDPAT_LU_FILE<pos:position pos:line="71" pos:column="59"/></name></expr>;<pos:position pos:line="71" pos:column="60"/></expr_stmt>     <break pos:line="71" pos:column="65">break;<pos:position pos:line="71" pos:column="71"/></break>
                }<pos:position pos:line="72" pos:column="18"/></block></switch>
            }<pos:position pos:line="73" pos:column="14"/></block></then>
            <elseif pos:line="74" pos:column="13">else <if pos:line="74" pos:column="18">if <condition pos:line="74" pos:column="21">(<expr><name><name pos:line="74" pos:column="22">a2<pos:position pos:line="74" pos:column="24"/></name><index pos:line="74" pos:column="24">[<expr><literal type="number" pos:line="74" pos:column="25">3<pos:position pos:line="74" pos:column="26"/></literal></expr>]<pos:position pos:line="74" pos:column="27"/></index></name></expr>)<pos:position pos:line="74" pos:column="28"/></condition><then pos:line="74" pos:column="28"> <block pos:line="74" pos:column="29">{
                <switch pos:line="75" pos:column="17">switch <condition pos:line="75" pos:column="24">(<expr><name><name pos:line="75" pos:column="25">a2<pos:position pos:line="75" pos:column="27"/></name><index pos:line="75" pos:column="27">[<expr><literal type="number" pos:line="75" pos:column="28">1<pos:position pos:line="75" pos:column="29"/></literal></expr>]<pos:position pos:line="75" pos:column="30"/></index></name></expr>)<pos:position pos:line="75" pos:column="31"/></condition> <block pos:line="75" pos:column="32">{
                <case pos:line="76" pos:column="17">case <expr><literal type="char" pos:line="76" pos:column="22">'l'<pos:position pos:line="76" pos:column="25"/></literal></expr>:<pos:position pos:line="76" pos:column="26"/></case>
                    <if pos:line="77" pos:column="21">if <condition pos:line="77" pos:column="24">(<expr><name><name pos:line="77" pos:column="25">a2<pos:position pos:line="77" pos:column="27"/></name><index pos:line="77" pos:column="27">[<expr><literal type="number" pos:line="77" pos:column="28">2<pos:position pos:line="77" pos:column="29"/></literal></expr>]<pos:position pos:line="77" pos:column="30"/></index></name> <operator pos:line="77" pos:column="31">==<pos:position pos:line="77" pos:column="33"/></operator> <literal type="char" pos:line="77" pos:column="34">'t'<pos:position pos:line="77" pos:column="37"/></literal></expr>)<pos:position pos:line="77" pos:column="38"/></condition><then pos:line="77" pos:column="38"> <block pos:line="77" pos:column="39">{
                        <expr_stmt><expr><name pos:line="78" pos:column="25">a2<pos:position pos:line="78" pos:column="27"/></name> <operator pos:line="78" pos:column="28">+=<pos:position pos:line="78" pos:column="30"/></operator> <literal type="number" pos:line="78" pos:column="31">3<pos:position pos:line="78" pos:column="32"/></literal></expr>;<pos:position pos:line="78" pos:column="33"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="79" pos:column="25">newcond<pos:position pos:line="79" pos:column="32"/></name><operator pos:line="79" pos:column="32">-&gt;<pos:position pos:line="79" pos:column="37"/></operator><name pos:line="79" pos:column="34">ptype<pos:position pos:line="79" pos:column="39"/></name></name> <operator pos:line="79" pos:column="40">=<pos:position pos:line="79" pos:column="41"/></operator> <name pos:line="79" pos:column="42">CONDPAT_INT_LT<pos:position pos:line="79" pos:column="56"/></name></expr>;<pos:position pos:line="79" pos:column="57"/></expr_stmt>
                    }<pos:position pos:line="80" pos:column="22"/></block></then>
                    <elseif pos:line="81" pos:column="21">else <if pos:line="81" pos:column="26">if <condition pos:line="81" pos:column="29">(<expr><name><name pos:line="81" pos:column="30">a2<pos:position pos:line="81" pos:column="32"/></name><index pos:line="81" pos:column="32">[<expr><literal type="number" pos:line="81" pos:column="33">2<pos:position pos:line="81" pos:column="34"/></literal></expr>]<pos:position pos:line="81" pos:column="35"/></index></name> <operator pos:line="81" pos:column="36">==<pos:position pos:line="81" pos:column="38"/></operator> <literal type="char" pos:line="81" pos:column="39">'e'<pos:position pos:line="81" pos:column="42"/></literal></expr>)<pos:position pos:line="81" pos:column="43"/></condition><then pos:line="81" pos:column="43"> <block pos:line="81" pos:column="44">{
                        <expr_stmt><expr><name pos:line="82" pos:column="25">a2<pos:position pos:line="82" pos:column="27"/></name> <operator pos:line="82" pos:column="28">+=<pos:position pos:line="82" pos:column="30"/></operator> <literal type="number" pos:line="82" pos:column="31">3<pos:position pos:line="82" pos:column="32"/></literal></expr>;<pos:position pos:line="82" pos:column="33"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="83" pos:column="25">newcond<pos:position pos:line="83" pos:column="32"/></name><operator pos:line="83" pos:column="32">-&gt;<pos:position pos:line="83" pos:column="37"/></operator><name pos:line="83" pos:column="34">ptype<pos:position pos:line="83" pos:column="39"/></name></name> <operator pos:line="83" pos:column="40">=<pos:position pos:line="83" pos:column="41"/></operator> <name pos:line="83" pos:column="42">CONDPAT_INT_LE<pos:position pos:line="83" pos:column="56"/></name></expr>;<pos:position pos:line="83" pos:column="57"/></expr_stmt>
                    }<pos:position pos:line="84" pos:column="22"/></block></then></if></elseif></if>
                    <break pos:line="85" pos:column="21">break;<pos:position pos:line="85" pos:column="27"/></break>

                <case pos:line="87" pos:column="17">case <expr><literal type="char" pos:line="87" pos:column="22">'g'<pos:position pos:line="87" pos:column="25"/></literal></expr>:<pos:position pos:line="87" pos:column="26"/></case>
                    <if pos:line="88" pos:column="21">if <condition pos:line="88" pos:column="24">(<expr><name><name pos:line="88" pos:column="25">a2<pos:position pos:line="88" pos:column="27"/></name><index pos:line="88" pos:column="27">[<expr><literal type="number" pos:line="88" pos:column="28">2<pos:position pos:line="88" pos:column="29"/></literal></expr>]<pos:position pos:line="88" pos:column="30"/></index></name> <operator pos:line="88" pos:column="31">==<pos:position pos:line="88" pos:column="33"/></operator> <literal type="char" pos:line="88" pos:column="34">'t'<pos:position pos:line="88" pos:column="37"/></literal></expr>)<pos:position pos:line="88" pos:column="38"/></condition><then pos:line="88" pos:column="38"> <block pos:line="88" pos:column="39">{
                        <expr_stmt><expr><name pos:line="89" pos:column="25">a2<pos:position pos:line="89" pos:column="27"/></name> <operator pos:line="89" pos:column="28">+=<pos:position pos:line="89" pos:column="30"/></operator> <literal type="number" pos:line="89" pos:column="31">3<pos:position pos:line="89" pos:column="32"/></literal></expr>;<pos:position pos:line="89" pos:column="33"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="90" pos:column="25">newcond<pos:position pos:line="90" pos:column="32"/></name><operator pos:line="90" pos:column="32">-&gt;<pos:position pos:line="90" pos:column="37"/></operator><name pos:line="90" pos:column="34">ptype<pos:position pos:line="90" pos:column="39"/></name></name> <operator pos:line="90" pos:column="40">=<pos:position pos:line="90" pos:column="41"/></operator> <name pos:line="90" pos:column="42">CONDPAT_INT_GT<pos:position pos:line="90" pos:column="56"/></name></expr>;<pos:position pos:line="90" pos:column="57"/></expr_stmt>
                    }<pos:position pos:line="91" pos:column="22"/></block></then>
                    <elseif pos:line="92" pos:column="21">else <if pos:line="92" pos:column="26">if <condition pos:line="92" pos:column="29">(<expr><name><name pos:line="92" pos:column="30">a2<pos:position pos:line="92" pos:column="32"/></name><index pos:line="92" pos:column="32">[<expr><literal type="number" pos:line="92" pos:column="33">2<pos:position pos:line="92" pos:column="34"/></literal></expr>]<pos:position pos:line="92" pos:column="35"/></index></name> <operator pos:line="92" pos:column="36">==<pos:position pos:line="92" pos:column="38"/></operator> <literal type="char" pos:line="92" pos:column="39">'e'<pos:position pos:line="92" pos:column="42"/></literal></expr>)<pos:position pos:line="92" pos:column="43"/></condition><then pos:line="92" pos:column="43"> <block pos:line="92" pos:column="44">{
                        <expr_stmt><expr><name pos:line="93" pos:column="25">a2<pos:position pos:line="93" pos:column="27"/></name> <operator pos:line="93" pos:column="28">+=<pos:position pos:line="93" pos:column="30"/></operator> <literal type="number" pos:line="93" pos:column="31">3<pos:position pos:line="93" pos:column="32"/></literal></expr>;<pos:position pos:line="93" pos:column="33"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="94" pos:column="25">newcond<pos:position pos:line="94" pos:column="32"/></name><operator pos:line="94" pos:column="32">-&gt;<pos:position pos:line="94" pos:column="37"/></operator><name pos:line="94" pos:column="34">ptype<pos:position pos:line="94" pos:column="39"/></name></name> <operator pos:line="94" pos:column="40">=<pos:position pos:line="94" pos:column="41"/></operator> <name pos:line="94" pos:column="42">CONDPAT_INT_GE<pos:position pos:line="94" pos:column="56"/></name></expr>;<pos:position pos:line="94" pos:column="57"/></expr_stmt>
                    }<pos:position pos:line="95" pos:column="22"/></block></then></if></elseif></if>
                    <break pos:line="96" pos:column="21">break;<pos:position pos:line="96" pos:column="27"/></break>

                <case pos:line="98" pos:column="17">case <expr><literal type="char" pos:line="98" pos:column="22">'e'<pos:position pos:line="98" pos:column="25"/></literal></expr>:<pos:position pos:line="98" pos:column="26"/></case>
                    <if pos:line="99" pos:column="21">if <condition pos:line="99" pos:column="24">(<expr><name><name pos:line="99" pos:column="25">a2<pos:position pos:line="99" pos:column="27"/></name><index pos:line="99" pos:column="27">[<expr><literal type="number" pos:line="99" pos:column="28">2<pos:position pos:line="99" pos:column="29"/></literal></expr>]<pos:position pos:line="99" pos:column="30"/></index></name> <operator pos:line="99" pos:column="31">==<pos:position pos:line="99" pos:column="33"/></operator> <literal type="char" pos:line="99" pos:column="34">'q'<pos:position pos:line="99" pos:column="37"/></literal></expr>)<pos:position pos:line="99" pos:column="38"/></condition><then pos:line="99" pos:column="38"> <block pos:line="99" pos:column="39">{
                        <expr_stmt><expr><name pos:line="100" pos:column="25">a2<pos:position pos:line="100" pos:column="27"/></name> <operator pos:line="100" pos:column="28">+=<pos:position pos:line="100" pos:column="30"/></operator> <literal type="number" pos:line="100" pos:column="31">3<pos:position pos:line="100" pos:column="32"/></literal></expr>;<pos:position pos:line="100" pos:column="33"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="101" pos:column="25">newcond<pos:position pos:line="101" pos:column="32"/></name><operator pos:line="101" pos:column="32">-&gt;<pos:position pos:line="101" pos:column="37"/></operator><name pos:line="101" pos:column="34">ptype<pos:position pos:line="101" pos:column="39"/></name></name> <operator pos:line="101" pos:column="40">=<pos:position pos:line="101" pos:column="41"/></operator> <name pos:line="101" pos:column="42">CONDPAT_INT_EQ<pos:position pos:line="101" pos:column="56"/></name></expr>;<pos:position pos:line="101" pos:column="57"/></expr_stmt>
                    }<pos:position pos:line="102" pos:column="22"/></block></then></if>
                    <break pos:line="103" pos:column="21">break;<pos:position pos:line="103" pos:column="27"/></break>

                <case pos:line="105" pos:column="17">case <expr><literal type="char" pos:line="105" pos:column="22">'n'<pos:position pos:line="105" pos:column="25"/></literal></expr>:<pos:position pos:line="105" pos:column="26"/></case>
                    <if pos:line="106" pos:column="21">if <condition pos:line="106" pos:column="24">(<expr><name><name pos:line="106" pos:column="25">a2<pos:position pos:line="106" pos:column="27"/></name><index pos:line="106" pos:column="27">[<expr><literal type="number" pos:line="106" pos:column="28">2<pos:position pos:line="106" pos:column="29"/></literal></expr>]<pos:position pos:line="106" pos:column="30"/></index></name> <operator pos:line="106" pos:column="31">==<pos:position pos:line="106" pos:column="33"/></operator> <literal type="char" pos:line="106" pos:column="34">'e'<pos:position pos:line="106" pos:column="37"/></literal></expr>)<pos:position pos:line="106" pos:column="38"/></condition><then pos:line="106" pos:column="38"> <block pos:line="106" pos:column="39">{
                        <comment type="block" pos:line="107" pos:column="25">/* Inversion, ensure !-ne == -eq */</comment>
                        <expr_stmt><expr><name pos:line="108" pos:column="25">a2<pos:position pos:line="108" pos:column="27"/></name> <operator pos:line="108" pos:column="28">+=<pos:position pos:line="108" pos:column="30"/></operator> <literal type="number" pos:line="108" pos:column="31">3<pos:position pos:line="108" pos:column="32"/></literal></expr>;<pos:position pos:line="108" pos:column="33"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="109" pos:column="25">newcond<pos:position pos:line="109" pos:column="32"/></name><operator pos:line="109" pos:column="32">-&gt;<pos:position pos:line="109" pos:column="37"/></operator><name pos:line="109" pos:column="34">ptype<pos:position pos:line="109" pos:column="39"/></name></name> <operator pos:line="109" pos:column="40">=<pos:position pos:line="109" pos:column="41"/></operator> <name pos:line="109" pos:column="42">CONDPAT_INT_EQ<pos:position pos:line="109" pos:column="56"/></name></expr>;<pos:position pos:line="109" pos:column="57"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="110" pos:column="25">newcond<pos:position pos:line="110" pos:column="32"/></name><operator pos:line="110" pos:column="32">-&gt;<pos:position pos:line="110" pos:column="37"/></operator><name pos:line="110" pos:column="34">flags<pos:position pos:line="110" pos:column="39"/></name></name> <operator pos:line="110" pos:column="40">^=<pos:position pos:line="110" pos:column="42"/></operator> <name pos:line="110" pos:column="43">CONDFLAG_NOTMATCH<pos:position pos:line="110" pos:column="60"/></name></expr>;<pos:position pos:line="110" pos:column="61"/></expr_stmt>
                    }<pos:position pos:line="111" pos:column="22"/></block></then></if>
                    <break pos:line="112" pos:column="21">break;<pos:position pos:line="112" pos:column="27"/></break>
                }<pos:position pos:line="113" pos:column="18"/></block></switch>
            }<pos:position pos:line="114" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="115" pos:column="10"/></block></then>
        <else pos:line="116" pos:column="9">else <block pos:line="116" pos:column="14">{
            <switch pos:line="117" pos:column="13">switch <condition pos:line="117" pos:column="20">(<expr><operator pos:line="117" pos:column="21">*<pos:position pos:line="117" pos:column="22"/></operator><name pos:line="117" pos:column="22">a2<pos:position pos:line="117" pos:column="24"/></name></expr>)<pos:position pos:line="117" pos:column="25"/></condition> <block pos:line="117" pos:column="26">{
            <case pos:line="118" pos:column="13">case <expr><literal type="char" pos:line="118" pos:column="18">'&gt;'<pos:position pos:line="118" pos:column="24"/></literal></expr>:<pos:position pos:line="118" pos:column="22"/></case> <if pos:line="118" pos:column="23">if <condition pos:line="118" pos:column="26">(<expr><operator pos:line="118" pos:column="27">*<pos:position pos:line="118" pos:column="28"/></operator><operator pos:line="118" pos:column="28">++<pos:position pos:line="118" pos:column="30"/></operator><name pos:line="118" pos:column="30">a2<pos:position pos:line="118" pos:column="32"/></name> <operator pos:line="118" pos:column="33">==<pos:position pos:line="118" pos:column="35"/></operator> <literal type="char" pos:line="118" pos:column="36">'='<pos:position pos:line="118" pos:column="39"/></literal></expr>)<pos:position pos:line="118" pos:column="40"/></condition><then pos:line="118" pos:column="40">
                          <block type="pseudo"><expr_stmt><expr><operator pos:line="119" pos:column="27">++<pos:position pos:line="119" pos:column="29"/></operator><name pos:line="119" pos:column="29">a2<pos:position pos:line="119" pos:column="31"/></name></expr><operator pos:line="119" pos:column="31">,<pos:position pos:line="119" pos:column="32"/></operator> <expr><name><name pos:line="119" pos:column="33">newcond<pos:position pos:line="119" pos:column="40"/></name><operator pos:line="119" pos:column="40">-&gt;<pos:position pos:line="119" pos:column="45"/></operator><name pos:line="119" pos:column="42">ptype<pos:position pos:line="119" pos:column="47"/></name></name> <operator pos:line="119" pos:column="48">=<pos:position pos:line="119" pos:column="49"/></operator> <name pos:line="119" pos:column="50">CONDPAT_STR_GE<pos:position pos:line="119" pos:column="64"/></name></expr>;<pos:position pos:line="119" pos:column="65"/></expr_stmt></block></then>
                      <else pos:line="120" pos:column="23">else
                          <block type="pseudo"><expr_stmt><expr><name><name pos:line="121" pos:column="27">newcond<pos:position pos:line="121" pos:column="34"/></name><operator pos:line="121" pos:column="34">-&gt;<pos:position pos:line="121" pos:column="39"/></operator><name pos:line="121" pos:column="36">ptype<pos:position pos:line="121" pos:column="41"/></name></name> <operator pos:line="121" pos:column="42">=<pos:position pos:line="121" pos:column="43"/></operator> <name pos:line="121" pos:column="44">CONDPAT_STR_GT<pos:position pos:line="121" pos:column="58"/></name></expr>;<pos:position pos:line="121" pos:column="59"/></expr_stmt></block></else></if>
                      <break pos:line="122" pos:column="23">break;<pos:position pos:line="122" pos:column="29"/></break>

            <case pos:line="124" pos:column="13">case <expr><literal type="char" pos:line="124" pos:column="18">'&lt;'<pos:position pos:line="124" pos:column="24"/></literal></expr>:<pos:position pos:line="124" pos:column="22"/></case> <if pos:line="124" pos:column="23">if <condition pos:line="124" pos:column="26">(<expr><operator pos:line="124" pos:column="27">*<pos:position pos:line="124" pos:column="28"/></operator><operator pos:line="124" pos:column="28">++<pos:position pos:line="124" pos:column="30"/></operator><name pos:line="124" pos:column="30">a2<pos:position pos:line="124" pos:column="32"/></name> <operator pos:line="124" pos:column="33">==<pos:position pos:line="124" pos:column="35"/></operator> <literal type="char" pos:line="124" pos:column="36">'='<pos:position pos:line="124" pos:column="39"/></literal></expr>)<pos:position pos:line="124" pos:column="40"/></condition><then pos:line="124" pos:column="40">
                          <block type="pseudo"><expr_stmt><expr><operator pos:line="125" pos:column="27">++<pos:position pos:line="125" pos:column="29"/></operator><name pos:line="125" pos:column="29">a2<pos:position pos:line="125" pos:column="31"/></name></expr><operator pos:line="125" pos:column="31">,<pos:position pos:line="125" pos:column="32"/></operator> <expr><name><name pos:line="125" pos:column="33">newcond<pos:position pos:line="125" pos:column="40"/></name><operator pos:line="125" pos:column="40">-&gt;<pos:position pos:line="125" pos:column="45"/></operator><name pos:line="125" pos:column="42">ptype<pos:position pos:line="125" pos:column="47"/></name></name> <operator pos:line="125" pos:column="48">=<pos:position pos:line="125" pos:column="49"/></operator> <name pos:line="125" pos:column="50">CONDPAT_STR_LE<pos:position pos:line="125" pos:column="64"/></name></expr>;<pos:position pos:line="125" pos:column="65"/></expr_stmt></block></then>
                      <else pos:line="126" pos:column="23">else
                          <block type="pseudo"><expr_stmt><expr><name><name pos:line="127" pos:column="27">newcond<pos:position pos:line="127" pos:column="34"/></name><operator pos:line="127" pos:column="34">-&gt;<pos:position pos:line="127" pos:column="39"/></operator><name pos:line="127" pos:column="36">ptype<pos:position pos:line="127" pos:column="41"/></name></name> <operator pos:line="127" pos:column="42">=<pos:position pos:line="127" pos:column="43"/></operator> <name pos:line="127" pos:column="44">CONDPAT_STR_LT<pos:position pos:line="127" pos:column="58"/></name></expr>;<pos:position pos:line="127" pos:column="59"/></expr_stmt></block></else></if>
                      <break pos:line="128" pos:column="23">break;<pos:position pos:line="128" pos:column="29"/></break>

            <case pos:line="130" pos:column="13">case <expr><literal type="char" pos:line="130" pos:column="18">'='<pos:position pos:line="130" pos:column="21"/></literal></expr>:<pos:position pos:line="130" pos:column="22"/></case> <expr_stmt><expr><name><name pos:line="130" pos:column="23">newcond<pos:position pos:line="130" pos:column="30"/></name><operator pos:line="130" pos:column="30">-&gt;<pos:position pos:line="130" pos:column="35"/></operator><name pos:line="130" pos:column="32">ptype<pos:position pos:line="130" pos:column="37"/></name></name> <operator pos:line="130" pos:column="38">=<pos:position pos:line="130" pos:column="39"/></operator> <name pos:line="130" pos:column="40">CONDPAT_STR_EQ<pos:position pos:line="130" pos:column="54"/></name></expr>;<pos:position pos:line="130" pos:column="55"/></expr_stmt>
                      <comment type="block" pos:line="131" pos:column="23">/* "" represents an empty string */</comment>
                      <if pos:line="132" pos:column="23">if <condition pos:line="132" pos:column="26">(<expr><operator pos:line="132" pos:column="27">*<pos:position pos:line="132" pos:column="28"/></operator><operator pos:line="132" pos:column="28">++<pos:position pos:line="132" pos:column="30"/></operator><name pos:line="132" pos:column="30">a2<pos:position pos:line="132" pos:column="32"/></name> <operator pos:line="132" pos:column="33">==<pos:position pos:line="132" pos:column="35"/></operator> <literal type="char" pos:line="132" pos:column="36">'"'<pos:position pos:line="132" pos:column="39"/></literal> <operator pos:line="132" pos:column="40">&amp;&amp;<pos:position pos:line="132" pos:column="50"/></operator> <name><name pos:line="132" pos:column="43">a2<pos:position pos:line="132" pos:column="45"/></name><index pos:line="132" pos:column="45">[<expr><literal type="number" pos:line="132" pos:column="46">1<pos:position pos:line="132" pos:column="47"/></literal></expr>]<pos:position pos:line="132" pos:column="48"/></index></name> <operator pos:line="132" pos:column="49">==<pos:position pos:line="132" pos:column="51"/></operator> <literal type="char" pos:line="132" pos:column="52">'"'<pos:position pos:line="132" pos:column="55"/></literal> <operator pos:line="132" pos:column="56">&amp;&amp;<pos:position pos:line="132" pos:column="66"/></operator> <operator pos:line="132" pos:column="59">!<pos:position pos:line="132" pos:column="60"/></operator><name><name pos:line="132" pos:column="60">a2<pos:position pos:line="132" pos:column="62"/></name><index pos:line="132" pos:column="62">[<expr><literal type="number" pos:line="132" pos:column="63">2<pos:position pos:line="132" pos:column="64"/></literal></expr>]<pos:position pos:line="132" pos:column="65"/></index></name></expr>)<pos:position pos:line="132" pos:column="66"/></condition><then pos:line="132" pos:column="66">
                          <block type="pseudo"><expr_stmt><expr><name pos:line="133" pos:column="27">a2<pos:position pos:line="133" pos:column="29"/></name> <operator pos:line="133" pos:column="30">+=<pos:position pos:line="133" pos:column="32"/></operator> <literal type="number" pos:line="133" pos:column="33">2<pos:position pos:line="133" pos:column="34"/></literal></expr>;<pos:position pos:line="133" pos:column="35"/></expr_stmt></block></then></if>
                      <break pos:line="134" pos:column="23">break;<pos:position pos:line="134" pos:column="29"/></break>
            }<pos:position pos:line="135" pos:column="14"/></block></switch>
        }<pos:position pos:line="136" pos:column="10"/></block></else></if>
    }<pos:position pos:line="137" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="139" pos:column="5">if <condition pos:line="139" pos:column="8">(<expr><operator pos:line="139" pos:column="9">(<pos:position pos:line="139" pos:column="10"/></operator><name><name pos:line="139" pos:column="10">newcond<pos:position pos:line="139" pos:column="17"/></name><operator pos:line="139" pos:column="17">-&gt;<pos:position pos:line="139" pos:column="22"/></operator><name pos:line="139" pos:column="19">ptype<pos:position pos:line="139" pos:column="24"/></name></name> <operator pos:line="139" pos:column="25">!=<pos:position pos:line="139" pos:column="27"/></operator> <name pos:line="139" pos:column="28">CONDPAT_REGEX<pos:position pos:line="139" pos:column="41"/></name><operator pos:line="139" pos:column="41">)<pos:position pos:line="139" pos:column="42"/></operator> <operator pos:line="139" pos:column="43">&amp;&amp;<pos:position pos:line="139" pos:column="53"/></operator>
        <operator pos:line="140" pos:column="9">(<pos:position pos:line="140" pos:column="10"/></operator><name><name pos:line="140" pos:column="10">newcond<pos:position pos:line="140" pos:column="17"/></name><operator pos:line="140" pos:column="17">-&gt;<pos:position pos:line="140" pos:column="22"/></operator><name><name pos:line="140" pos:column="19">ptype<pos:position pos:line="140" pos:column="24"/></name> <argument_list type="generic" pos:line="140" pos:column="25">&lt; <argument><expr><name pos:line="140" pos:column="27">CONDPAT_STR_LT<pos:position pos:line="140" pos:column="41"/></name> <operator pos:line="140" pos:column="42">||<pos:position pos:line="140" pos:column="44"/></operator> <name><name pos:line="140" pos:column="45">newcond<pos:position pos:line="140" pos:column="52"/></name><operator pos:line="140" pos:column="52">-&gt;<pos:position pos:line="140" pos:column="57"/></operator><name pos:line="140" pos:column="54">ptype<pos:position pos:line="140" pos:column="59"/></name></name></expr></argument> &gt;<pos:position pos:line="140" pos:column="64"/></argument_list></name></name> <name pos:line="140" pos:column="62">CONDPAT_STR_GE<pos:position pos:line="140" pos:column="76"/></name><operator pos:line="140" pos:column="76">)<pos:position pos:line="140" pos:column="77"/></operator> <operator pos:line="140" pos:column="78">&amp;&amp;<pos:position pos:line="140" pos:column="88"/></operator>
        <operator pos:line="141" pos:column="9">(<pos:position pos:line="141" pos:column="10"/></operator><name><name pos:line="141" pos:column="10">newcond<pos:position pos:line="141" pos:column="17"/></name><operator pos:line="141" pos:column="17">-&gt;<pos:position pos:line="141" pos:column="22"/></operator><name pos:line="141" pos:column="19">flags<pos:position pos:line="141" pos:column="24"/></name></name> <operator pos:line="141" pos:column="25">&amp;<pos:position pos:line="141" pos:column="30"/></operator> <name pos:line="141" pos:column="27">CONDFLAG_NOCASE<pos:position pos:line="141" pos:column="42"/></name><operator pos:line="141" pos:column="42">)<pos:position pos:line="141" pos:column="43"/></operator></expr>)<pos:position pos:line="141" pos:column="44"/></condition><then pos:line="141" pos:column="44"> <block pos:line="141" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="142" pos:column="9">ap_log_error<pos:position pos:line="142" pos:column="21"/></name><argument_list pos:line="142" pos:column="21">(<argument><expr><name pos:line="142" pos:column="22">APLOG_MARK<pos:position pos:line="142" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="34">APLOG_WARNING<pos:position pos:line="142" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="142" pos:column="49">0<pos:position pos:line="142" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="52">cmd<pos:position pos:line="142" pos:column="55"/></name><operator pos:line="142" pos:column="55">-&gt;<pos:position pos:line="142" pos:column="60"/></operator><name pos:line="142" pos:column="57">server<pos:position pos:line="142" pos:column="63"/></name></name></expr></argument>, <argument><expr><call><name pos:line="142" pos:column="65">APLOGNO<pos:position pos:line="142" pos:column="72"/></name><argument_list pos:line="142" pos:column="72">(<argument><expr><literal type="number" pos:line="142" pos:column="73">00665<pos:position pos:line="142" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="79"/></argument_list></call>
                     <literal type="string" pos:line="143" pos:column="22">"RewriteCond: NoCase option for non-regex pattern '%s' "<pos:position pos:line="143" pos:column="78"/></literal>
                     <literal type="string" pos:line="144" pos:column="22">"is not supported and will be ignored. (%s:%d)"<pos:position pos:line="144" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="144" pos:column="71">a2<pos:position pos:line="144" pos:column="73"/></name></expr></argument>,
                     <argument><expr><name><name pos:line="145" pos:column="22">cmd<pos:position pos:line="145" pos:column="25"/></name><operator pos:line="145" pos:column="25">-&gt;<pos:position pos:line="145" pos:column="30"/></operator><name pos:line="145" pos:column="27">directive<pos:position pos:line="145" pos:column="36"/></name><operator pos:line="145" pos:column="36">-&gt;<pos:position pos:line="145" pos:column="41"/></operator><name pos:line="145" pos:column="38">filename<pos:position pos:line="145" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="48">cmd<pos:position pos:line="145" pos:column="51"/></name><operator pos:line="145" pos:column="51">-&gt;<pos:position pos:line="145" pos:column="56"/></operator><name pos:line="145" pos:column="53">directive<pos:position pos:line="145" pos:column="62"/></name><operator pos:line="145" pos:column="62">-&gt;<pos:position pos:line="145" pos:column="67"/></operator><name pos:line="145" pos:column="64">line_num<pos:position pos:line="145" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="146" pos:column="9">newcond<pos:position pos:line="146" pos:column="16"/></name><operator pos:line="146" pos:column="16">-&gt;<pos:position pos:line="146" pos:column="21"/></operator><name pos:line="146" pos:column="18">flags<pos:position pos:line="146" pos:column="23"/></name></name> <operator pos:line="146" pos:column="24">&amp;=<pos:position pos:line="146" pos:column="30"/></operator> <operator pos:line="146" pos:column="27">~<pos:position pos:line="146" pos:column="28"/></operator><name pos:line="146" pos:column="28">CONDFLAG_NOCASE<pos:position pos:line="146" pos:column="43"/></name></expr>;<pos:position pos:line="146" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="147" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="149" pos:column="5">newcond<pos:position pos:line="149" pos:column="12"/></name><operator pos:line="149" pos:column="12">-&gt;<pos:position pos:line="149" pos:column="17"/></operator><name pos:line="149" pos:column="14">pskip<pos:position pos:line="149" pos:column="19"/></name></name> <operator pos:line="149" pos:column="20">=<pos:position pos:line="149" pos:column="21"/></operator> <name pos:line="149" pos:column="22">a2<pos:position pos:line="149" pos:column="24"/></name> <operator pos:line="149" pos:column="25">-<pos:position pos:line="149" pos:column="26"/></operator> <name><name pos:line="149" pos:column="27">newcond<pos:position pos:line="149" pos:column="34"/></name><operator pos:line="149" pos:column="34">-&gt;<pos:position pos:line="149" pos:column="39"/></operator><name pos:line="149" pos:column="36">pattern<pos:position pos:line="149" pos:column="43"/></name></name></expr>;<pos:position pos:line="149" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="150" pos:column="5">newcond<pos:position pos:line="150" pos:column="12"/></name><operator pos:line="150" pos:column="12">-&gt;<pos:position pos:line="150" pos:column="17"/></operator><name pos:line="150" pos:column="14">pattern<pos:position pos:line="150" pos:column="21"/></name></name> <operator pos:line="150" pos:column="22">+=<pos:position pos:line="150" pos:column="24"/></operator> <name><name pos:line="150" pos:column="25">newcond<pos:position pos:line="150" pos:column="32"/></name><operator pos:line="150" pos:column="32">-&gt;<pos:position pos:line="150" pos:column="37"/></operator><name pos:line="150" pos:column="34">pskip<pos:position pos:line="150" pos:column="39"/></name></name></expr>;<pos:position pos:line="150" pos:column="40"/></expr_stmt>

    <if pos:line="152" pos:column="5">if <condition pos:line="152" pos:column="8">(<expr><name><name pos:line="152" pos:column="9">newcond<pos:position pos:line="152" pos:column="16"/></name><operator pos:line="152" pos:column="16">-&gt;<pos:position pos:line="152" pos:column="21"/></operator><name pos:line="152" pos:column="18">ptype<pos:position pos:line="152" pos:column="23"/></name></name> <operator pos:line="152" pos:column="24">==<pos:position pos:line="152" pos:column="26"/></operator> <name pos:line="152" pos:column="27">CONDPAT_REGEX<pos:position pos:line="152" pos:column="40"/></name></expr>)<pos:position pos:line="152" pos:column="41"/></condition><then pos:line="152" pos:column="41"> <block pos:line="152" pos:column="42">{
        <expr_stmt><expr><name pos:line="153" pos:column="9">regexp<pos:position pos:line="153" pos:column="15"/></name> <operator pos:line="153" pos:column="16">=<pos:position pos:line="153" pos:column="17"/></operator> <call><name pos:line="153" pos:column="18">ap_pregcomp<pos:position pos:line="153" pos:column="29"/></name><argument_list pos:line="153" pos:column="29">(<argument><expr><name><name pos:line="153" pos:column="30">cmd<pos:position pos:line="153" pos:column="33"/></name><operator pos:line="153" pos:column="33">-&gt;<pos:position pos:line="153" pos:column="38"/></operator><name pos:line="153" pos:column="35">pool<pos:position pos:line="153" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="41">a2<pos:position pos:line="153" pos:column="43"/></name></expr></argument>,
                             <argument><expr><name pos:line="154" pos:column="30">AP_REG_EXTENDED<pos:position pos:line="154" pos:column="45"/></name> <operator pos:line="154" pos:column="46">|<pos:position pos:line="154" pos:column="47"/></operator> <operator pos:line="154" pos:column="48">(<pos:position pos:line="154" pos:column="49"/></operator><ternary><condition><expr><operator pos:line="154" pos:column="49">(<pos:position pos:line="154" pos:column="50"/></operator><name><name pos:line="154" pos:column="50">newcond<pos:position pos:line="154" pos:column="57"/></name><operator pos:line="154" pos:column="57">-&gt;<pos:position pos:line="154" pos:column="62"/></operator><name pos:line="154" pos:column="59">flags<pos:position pos:line="154" pos:column="64"/></name></name> <operator pos:line="154" pos:column="65">&amp;<pos:position pos:line="154" pos:column="70"/></operator> <name pos:line="154" pos:column="67">CONDFLAG_NOCASE<pos:position pos:line="154" pos:column="82"/></name><operator pos:line="154" pos:column="82">)<pos:position pos:line="154" pos:column="83"/></operator></expr>
                                             ?<pos:position pos:line="155" pos:column="47"/></condition><then pos:line="155" pos:column="47"> <expr><name pos:line="155" pos:column="48">AP_REG_ICASE<pos:position pos:line="155" pos:column="60"/></name></expr> <pos:position pos:line="155" pos:column="61"/></then><else pos:line="155" pos:column="61">: <expr><literal type="number" pos:line="155" pos:column="63">0<pos:position pos:line="155" pos:column="64"/></literal></expr></else></ternary><operator pos:line="155" pos:column="64">)<pos:position pos:line="155" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="155" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="67"/></expr_stmt>
        <if pos:line="156" pos:column="9">if <condition pos:line="156" pos:column="12">(<expr><operator pos:line="156" pos:column="13">!<pos:position pos:line="156" pos:column="14"/></operator><name pos:line="156" pos:column="14">regexp<pos:position pos:line="156" pos:column="20"/></name></expr>)<pos:position pos:line="156" pos:column="21"/></condition><then pos:line="156" pos:column="21"> <block pos:line="156" pos:column="22">{
            <return pos:line="157" pos:column="13">return <expr><call><name pos:line="157" pos:column="20">apr_pstrcat<pos:position pos:line="157" pos:column="31"/></name><argument_list pos:line="157" pos:column="31">(<argument><expr><name><name pos:line="157" pos:column="32">cmd<pos:position pos:line="157" pos:column="35"/></name><operator pos:line="157" pos:column="35">-&gt;<pos:position pos:line="157" pos:column="40"/></operator><name pos:line="157" pos:column="37">pool<pos:position pos:line="157" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="43">"RewriteCond: cannot compile regular "<pos:position pos:line="157" pos:column="81"/></literal>
                               <literal type="string" pos:line="158" pos:column="32">"expression '"<pos:position pos:line="158" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="158" pos:column="48">a2<pos:position pos:line="158" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="158" pos:column="52">"'"<pos:position pos:line="158" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="158" pos:column="57">NULL<pos:position pos:line="158" pos:column="61"/></name></expr></argument>)<pos:position pos:line="158" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="63"/></return>
        }<pos:position pos:line="159" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="161" pos:column="9">newcond<pos:position pos:line="161" pos:column="16"/></name><operator pos:line="161" pos:column="16">-&gt;<pos:position pos:line="161" pos:column="21"/></operator><name pos:line="161" pos:column="18">regexp<pos:position pos:line="161" pos:column="24"/></name></name>  <operator pos:line="161" pos:column="26">=<pos:position pos:line="161" pos:column="27"/></operator> <name pos:line="161" pos:column="28">regexp<pos:position pos:line="161" pos:column="34"/></name></expr>;<pos:position pos:line="161" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="162" pos:column="6"/></block></then>
    <elseif pos:line="163" pos:column="5">else <if pos:line="163" pos:column="10">if <condition pos:line="163" pos:column="13">(<expr><name><name pos:line="163" pos:column="14">newcond<pos:position pos:line="163" pos:column="21"/></name><operator pos:line="163" pos:column="21">-&gt;<pos:position pos:line="163" pos:column="26"/></operator><name pos:line="163" pos:column="23">ptype<pos:position pos:line="163" pos:column="28"/></name></name> <operator pos:line="163" pos:column="29">==<pos:position pos:line="163" pos:column="31"/></operator> <name pos:line="163" pos:column="32">CONDPAT_AP_EXPR<pos:position pos:line="163" pos:column="47"/></name></expr>)<pos:position pos:line="163" pos:column="48"/></condition><then pos:line="163" pos:column="48"> <block pos:line="163" pos:column="49">{
        <decl_stmt><decl><type><name pos:line="164" pos:column="9">unsigned<pos:position pos:line="164" pos:column="17"/></name> <name pos:line="164" pos:column="18">int<pos:position pos:line="164" pos:column="21"/></name></type> <name pos:line="164" pos:column="22">flags<pos:position pos:line="164" pos:column="27"/></name> <init pos:line="164" pos:column="28">= <expr><ternary><condition><expr><name><name pos:line="164" pos:column="30">newcond<pos:position pos:line="164" pos:column="37"/></name><operator pos:line="164" pos:column="37">-&gt;<pos:position pos:line="164" pos:column="42"/></operator><name pos:line="164" pos:column="39">flags<pos:position pos:line="164" pos:column="44"/></name></name> <operator pos:line="164" pos:column="45">&amp;<pos:position pos:line="164" pos:column="50"/></operator> <name pos:line="164" pos:column="47">CONDFLAG_NOVARY<pos:position pos:line="164" pos:column="62"/></name></expr> ?<pos:position pos:line="164" pos:column="64"/></condition><then pos:line="164" pos:column="64">
                             <expr><name pos:line="165" pos:column="30">AP_EXPR_FLAG_DONT_VARY<pos:position pos:line="165" pos:column="52"/></name></expr> <pos:position pos:line="165" pos:column="53"/></then><else pos:line="165" pos:column="53">: <expr><literal type="number" pos:line="165" pos:column="55">0<pos:position pos:line="165" pos:column="56"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="165" pos:column="57"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="166" pos:column="9">newcond<pos:position pos:line="166" pos:column="16"/></name><operator pos:line="166" pos:column="16">-&gt;<pos:position pos:line="166" pos:column="21"/></operator><name pos:line="166" pos:column="18">expr<pos:position pos:line="166" pos:column="22"/></name></name> <operator pos:line="166" pos:column="23">=<pos:position pos:line="166" pos:column="24"/></operator> <call><name pos:line="166" pos:column="25">ap_expr_parse_cmd<pos:position pos:line="166" pos:column="42"/></name><argument_list pos:line="166" pos:column="42">(<argument><expr><name pos:line="166" pos:column="43">cmd<pos:position pos:line="166" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="48">a2<pos:position pos:line="166" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="52">flags<pos:position pos:line="166" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="166" pos:column="59">&amp;<pos:position pos:line="166" pos:column="64"/></operator><name pos:line="166" pos:column="60">err<pos:position pos:line="166" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="65">NULL<pos:position pos:line="166" pos:column="69"/></name></expr></argument>)<pos:position pos:line="166" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="71"/></expr_stmt>
        <if pos:line="167" pos:column="9">if <condition pos:line="167" pos:column="12">(<expr><name pos:line="167" pos:column="13">err<pos:position pos:line="167" pos:column="16"/></name></expr>)<pos:position pos:line="167" pos:column="17"/></condition><then pos:line="167" pos:column="17">
            <block type="pseudo"><return pos:line="168" pos:column="13">return <expr><call><name pos:line="168" pos:column="20">apr_psprintf<pos:position pos:line="168" pos:column="32"/></name><argument_list pos:line="168" pos:column="32">(<argument><expr><name><name pos:line="168" pos:column="33">cmd<pos:position pos:line="168" pos:column="36"/></name><operator pos:line="168" pos:column="36">-&gt;<pos:position pos:line="168" pos:column="41"/></operator><name pos:line="168" pos:column="38">pool<pos:position pos:line="168" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="44">"RewriteCond: cannot compile "<pos:position pos:line="168" pos:column="74"/></literal>
                                <literal type="string" pos:line="169" pos:column="33">"expression \"%s\": %s"<pos:position pos:line="169" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="169" pos:column="58">a2<pos:position pos:line="169" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="62">err<pos:position pos:line="169" pos:column="65"/></name></expr></argument>)<pos:position pos:line="169" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="67"/></return></block></then></if>
    }<pos:position pos:line="170" pos:column="6"/></block></then></if></elseif></if>

    <return pos:line="172" pos:column="5">return <expr><name pos:line="172" pos:column="12">NULL<pos:position pos:line="172" pos:column="16"/></name></expr>;<pos:position pos:line="172" pos:column="17"/></return>
}<pos:position pos:line="173" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1180_httpd-2.0.55.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">display_info<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">request_rec<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">r<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">module<pos:position pos:line="3" pos:column="11"/></name> <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type><name pos:line="3" pos:column="13">modp<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><name pos:line="3" pos:column="20">NULL<pos:position pos:line="3" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">more_info<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">command_rec<pos:position pos:line="5" pos:column="22"/></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">cmd<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><name pos:line="5" pos:column="30">NULL<pos:position pos:line="5" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">NEVERMORE<pos:position pos:line="6" pos:column="17"/></name></cpp:ifdef>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">handler_rec<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">hand<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><name pos:line="7" pos:column="31">NULL<pos:position pos:line="7" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">server_rec<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">serv<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><name><name pos:line="9" pos:column="24">r<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">server<pos:position pos:line="9" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">comma<pos:position pos:line="10" pos:column="14"/></name> <init pos:line="10" pos:column="15">= <expr><literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">strcmp<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name><name pos:line="12" pos:column="16">r<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">handler<pos:position pos:line="12" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="28">"server-info"<pos:position pos:line="12" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="43"/></condition><then pos:line="12" pos:column="43">
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">DECLINED<pos:position pos:line="13" pos:column="24"/></name></expr>;<pos:position pos:line="13" pos:column="25"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="15" pos:column="5">r<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">allowed<pos:position pos:line="15" pos:column="15"/></name></name> <operator pos:line="15" pos:column="16">|=<pos:position pos:line="15" pos:column="18"/></operator> <operator pos:line="15" pos:column="19">(<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">AP_METHOD_BIT<pos:position pos:line="15" pos:column="33"/></name> <operator pos:line="15" pos:column="34">&lt;&lt;<pos:position pos:line="15" pos:column="42"/></operator> <name pos:line="15" pos:column="37">M_GET<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">)<pos:position pos:line="15" pos:column="43"/></operator></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">r<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">method_number<pos:position pos:line="16" pos:column="25"/></name></name> <operator pos:line="16" pos:column="26">!=<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="29">M_GET<pos:position pos:line="16" pos:column="34"/></name></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35">
	<block type="pseudo"><return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">DECLINED<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ap_set_content_type<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">r<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="28">"text/html"<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">ap_rputs<pos:position pos:line="21" pos:column="13"/></name><argument_list pos:line="21" pos:column="13">(<argument><expr><name pos:line="21" pos:column="14">DOCTYPE_HTML_3_2<pos:position pos:line="21" pos:column="30"/></name>
	     <literal type="string" pos:line="22" pos:column="14">"&lt;html&gt;&lt;head&gt;&lt;title&gt;Server Information&lt;/title&gt;&lt;/head&gt;\n"<pos:position pos:line="22" pos:column="100"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="72">r<pos:position pos:line="22" pos:column="73"/></name></expr></argument>)<pos:position pos:line="22" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ap_rputs<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><literal type="string" pos:line="23" pos:column="14">"&lt;body&gt;&lt;h1 align=\"center\"&gt;Apache Server Information&lt;/h1&gt;\n"<pos:position pos:line="23" pos:column="93"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="77">r<pos:position pos:line="23" pos:column="78"/></name></expr></argument>)<pos:position pos:line="23" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="80"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><name><name pos:line="24" pos:column="10">r<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">args<pos:position pos:line="24" pos:column="17"/></name></name> <operator pos:line="24" pos:column="18">||<pos:position pos:line="24" pos:column="20"/></operator> <call><name pos:line="24" pos:column="21">strcasecmp<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><name><name pos:line="24" pos:column="32">r<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">-&gt;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="35">args<pos:position pos:line="24" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="41">"list"<pos:position pos:line="24" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="49"/></condition><then pos:line="24" pos:column="49"> <block pos:line="24" pos:column="50">{
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><name><name pos:line="25" pos:column="14">r<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">args<pos:position pos:line="25" pos:column="21"/></name></name></expr>)<pos:position pos:line="25" pos:column="22"/></condition><then pos:line="25" pos:column="22"> <block pos:line="25" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">ap_rputs<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><literal type="string" pos:line="26" pos:column="22">"&lt;dl&gt;&lt;dt&gt;&lt;tt&gt;&lt;a href=\"#server\"&gt;Server Settings&lt;/a&gt;, "<pos:position pos:line="26" pos:column="107"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="79">r<pos:position pos:line="26" pos:column="80"/></name></expr></argument>)<pos:position pos:line="26" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="82"/></expr_stmt>
            <for pos:line="27" pos:column="13">for <control pos:line="27" pos:column="17">(<init><expr><name pos:line="27" pos:column="18">modp<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <name pos:line="27" pos:column="25">ap_top_module<pos:position pos:line="27" pos:column="38"/></name></expr>;<pos:position pos:line="27" pos:column="39"/></init> <condition><expr><name pos:line="27" pos:column="40">modp<pos:position pos:line="27" pos:column="44"/></name></expr>;<pos:position pos:line="27" pos:column="45"/></condition> <incr><expr><name pos:line="27" pos:column="46">modp<pos:position pos:line="27" pos:column="50"/></name> <operator pos:line="27" pos:column="51">=<pos:position pos:line="27" pos:column="52"/></operator> <name><name pos:line="27" pos:column="53">modp<pos:position pos:line="27" pos:column="57"/></name><operator pos:line="27" pos:column="57">-&gt;<pos:position pos:line="27" pos:column="62"/></operator><name pos:line="27" pos:column="59">next<pos:position pos:line="27" pos:column="63"/></name></name></expr></incr>)<pos:position pos:line="27" pos:column="64"/></control> <block pos:line="27" pos:column="65">{
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">ap_rprintf<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">r<pos:position pos:line="28" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="31">"&lt;a href=\"#%s\"&gt;%s&lt;/a&gt;"<pos:position pos:line="28" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="57">modp<pos:position pos:line="28" pos:column="61"/></name><operator pos:line="28" pos:column="61">-&gt;<pos:position pos:line="28" pos:column="66"/></operator><name pos:line="28" pos:column="63">name<pos:position pos:line="28" pos:column="67"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="69">modp<pos:position pos:line="28" pos:column="73"/></name><operator pos:line="28" pos:column="73">-&gt;<pos:position pos:line="28" pos:column="78"/></operator><name pos:line="28" pos:column="75">name<pos:position pos:line="28" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="81"/></expr_stmt>
                <if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name><name pos:line="29" pos:column="21">modp<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">next<pos:position pos:line="29" pos:column="31"/></name></name></expr>)<pos:position pos:line="29" pos:column="32"/></condition><then pos:line="29" pos:column="32"> <block pos:line="29" pos:column="33">{
                    <expr_stmt><expr><call><name pos:line="30" pos:column="21">ap_rputs<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><literal type="string" pos:line="30" pos:column="30">", "<pos:position pos:line="30" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="36">r<pos:position pos:line="30" pos:column="37"/></name></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
                }<pos:position pos:line="31" pos:column="18"/></block></then></if>
            }<pos:position pos:line="32" pos:column="14"/></block></for>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">ap_rputs<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><literal type="string" pos:line="33" pos:column="22">"&lt;/tt&gt;&lt;/dt&gt;&lt;/dl&gt;&lt;hr /&gt;"<pos:position pos:line="33" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="47">r<pos:position pos:line="33" pos:column="48"/></name></expr></argument>)<pos:position pos:line="33" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="50"/></expr_stmt>

        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><name><name pos:line="36" pos:column="14">r<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">args<pos:position pos:line="36" pos:column="21"/></name></name> <operator pos:line="36" pos:column="22">||<pos:position pos:line="36" pos:column="24"/></operator> <operator pos:line="36" pos:column="25">!<pos:position pos:line="36" pos:column="26"/></operator><call><name pos:line="36" pos:column="26">strcasecmp<pos:position pos:line="36" pos:column="36"/></name><argument_list pos:line="36" pos:column="36">(<argument><expr><name><name pos:line="36" pos:column="37">r<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">-&gt;<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="40">args<pos:position pos:line="36" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="46">"server"<pos:position pos:line="36" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="56"/></condition><then pos:line="36" pos:column="56"> <block pos:line="36" pos:column="57">{
            <decl_stmt><decl><type><name pos:line="37" pos:column="13">int<pos:position pos:line="37" pos:column="16"/></name></type> <name pos:line="37" pos:column="17">max_daemons<pos:position pos:line="37" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="37" pos:column="30">forked<pos:position pos:line="37" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="37" pos:column="38">threaded<pos:position pos:line="37" pos:column="46"/></name></decl>;<pos:position pos:line="37" pos:column="47"/></decl_stmt>

            <expr_stmt><expr><call><name pos:line="39" pos:column="13">ap_rprintf<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><name pos:line="39" pos:column="24">r<pos:position pos:line="39" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="27">"&lt;dl&gt;&lt;dt&gt;&lt;a name=\"server\"&gt;&lt;strong&gt;Server Version:&lt;/strong&gt; "<pos:position pos:line="39" pos:column="119"/></literal>
                        <literal type="string" pos:line="40" pos:column="25">"&lt;font size=\"+1\"&gt;&lt;tt&gt;%s&lt;/tt&gt;&lt;/font&gt;&lt;/a&gt;&lt;/dt&gt;\n"<pos:position pos:line="40" pos:column="110"/></literal></expr></argument>,
                        <argument><expr><call><name pos:line="41" pos:column="25">ap_get_server_version<pos:position pos:line="41" pos:column="46"/></name><argument_list pos:line="41" pos:column="46">()<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">ap_rprintf<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><name pos:line="42" pos:column="24">r<pos:position pos:line="42" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="27">"&lt;dt&gt;&lt;strong&gt;Server Built:&lt;/strong&gt; "<pos:position pos:line="42" pos:column="82"/></literal>
                        <literal type="string" pos:line="43" pos:column="25">"&lt;font size=\"+1\"&gt;&lt;tt&gt;%s&lt;/tt&gt;&lt;/font&gt;&lt;/dt&gt;\n"<pos:position pos:line="43" pos:column="100"/></literal></expr></argument>,
                        <argument><expr><call><name pos:line="44" pos:column="25">ap_get_server_built<pos:position pos:line="44" pos:column="44"/></name><argument_list pos:line="44" pos:column="44">()<pos:position pos:line="44" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">ap_rprintf<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><name pos:line="45" pos:column="24">r<pos:position pos:line="45" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="27">"&lt;dt&gt;&lt;strong&gt;API Version:&lt;/strong&gt; "<pos:position pos:line="45" pos:column="81"/></literal>
                        <literal type="string" pos:line="46" pos:column="25">"&lt;tt&gt;%d:%d&lt;/tt&gt;&lt;/dt&gt;\n"<pos:position pos:line="46" pos:column="66"/></literal></expr></argument>,
                        <argument><expr><name pos:line="47" pos:column="25">MODULE_MAGIC_NUMBER_MAJOR<pos:position pos:line="47" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="52">MODULE_MAGIC_NUMBER_MINOR<pos:position pos:line="47" pos:column="77"/></name></expr></argument>)<pos:position pos:line="47" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">ap_rprintf<pos:position pos:line="48" pos:column="23"/></name><argument_list pos:line="48" pos:column="23">(<argument><expr><name pos:line="48" pos:column="24">r<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="27">"&lt;dt&gt;&lt;strong&gt;Hostname/port:&lt;/strong&gt; "<pos:position pos:line="48" pos:column="83"/></literal>
                        <literal type="string" pos:line="49" pos:column="25">"&lt;tt&gt;%s:%u&lt;/tt&gt;&lt;/dt&gt;\n"<pos:position pos:line="49" pos:column="66"/></literal></expr></argument>,
                        <argument><expr><call><name pos:line="50" pos:column="25">ap_get_server_name<pos:position pos:line="50" pos:column="43"/></name><argument_list pos:line="50" pos:column="43">(<argument><expr><name pos:line="50" pos:column="44">r<pos:position pos:line="50" pos:column="45"/></name></expr></argument>)<pos:position pos:line="50" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="48">ap_get_server_port<pos:position pos:line="50" pos:column="66"/></name><argument_list pos:line="50" pos:column="66">(<argument><expr><name pos:line="50" pos:column="67">r<pos:position pos:line="50" pos:column="68"/></name></expr></argument>)<pos:position pos:line="50" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">ap_rprintf<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><name pos:line="51" pos:column="24">r<pos:position pos:line="51" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="27">"&lt;dt&gt;&lt;strong&gt;Timeouts:&lt;/strong&gt; "<pos:position pos:line="51" pos:column="78"/></literal>
                        <literal type="string" pos:line="52" pos:column="25">"&lt;tt&gt;connection: %d &amp;nbsp;&amp;nbsp; "<pos:position pos:line="52" pos:column="73"/></literal>
                        <literal type="string" pos:line="53" pos:column="25">"keep-alive: %d&lt;/tt&gt;&lt;/dt&gt;"<pos:position pos:line="53" pos:column="63"/></literal></expr></argument>,
                        <argument><expr><call pos:line="54" pos:column="25">(<name pos:line="54" pos:column="26">int<pos:position pos:line="54" pos:column="29"/></name>)<argument_list pos:line="54" pos:column="30">(<argument><expr><call><name pos:line="54" pos:column="31">apr_time_sec<pos:position pos:line="54" pos:column="43"/></name><argument_list pos:line="54" pos:column="43">(<argument><expr><name><name pos:line="54" pos:column="44">serv<pos:position pos:line="54" pos:column="48"/></name><operator pos:line="54" pos:column="48">-&gt;<pos:position pos:line="54" pos:column="53"/></operator><name pos:line="54" pos:column="50">timeout<pos:position pos:line="54" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="59"/></argument_list></call></expr></argument>, 
                        <argument><expr><call pos:line="55" pos:column="25">(<name pos:line="55" pos:column="26">int<pos:position pos:line="55" pos:column="29"/></name>)<argument_list pos:line="55" pos:column="30">(<argument><expr><call><name pos:line="55" pos:column="31">apr_time_sec<pos:position pos:line="55" pos:column="43"/></name><argument_list pos:line="55" pos:column="43">(<argument><expr><name><name pos:line="55" pos:column="44">serv<pos:position pos:line="55" pos:column="48"/></name><operator pos:line="55" pos:column="48">-&gt;<pos:position pos:line="55" pos:column="53"/></operator><name pos:line="55" pos:column="50">timeout<pos:position pos:line="55" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">ap_mpm_query<pos:position pos:line="56" pos:column="25"/></name><argument_list pos:line="56" pos:column="25">(<argument><expr><name pos:line="56" pos:column="26">AP_MPMQ_MAX_DAEMON_USED<pos:position pos:line="56" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="51">&amp;<pos:position pos:line="56" pos:column="56"/></operator><name pos:line="56" pos:column="52">max_daemons<pos:position pos:line="56" pos:column="63"/></name></expr></argument>)<pos:position pos:line="56" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">ap_mpm_query<pos:position pos:line="57" pos:column="25"/></name><argument_list pos:line="57" pos:column="25">(<argument><expr><name pos:line="57" pos:column="26">AP_MPMQ_IS_THREADED<pos:position pos:line="57" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="47">&amp;<pos:position pos:line="57" pos:column="52"/></operator><name pos:line="57" pos:column="48">threaded<pos:position pos:line="57" pos:column="56"/></name></expr></argument>)<pos:position pos:line="57" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">ap_mpm_query<pos:position pos:line="58" pos:column="25"/></name><argument_list pos:line="58" pos:column="25">(<argument><expr><name pos:line="58" pos:column="26">AP_MPMQ_IS_FORKED<pos:position pos:line="58" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="45">&amp;<pos:position pos:line="58" pos:column="50"/></operator><name pos:line="58" pos:column="46">forked<pos:position pos:line="58" pos:column="52"/></name></expr></argument>)<pos:position pos:line="58" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">ap_rprintf<pos:position pos:line="59" pos:column="23"/></name><argument_list pos:line="59" pos:column="23">(<argument><expr><name pos:line="59" pos:column="24">r<pos:position pos:line="59" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="27">"&lt;dt&gt;&lt;strong&gt;MPM Name:&lt;/strong&gt; &lt;tt&gt;%s&lt;/tt&gt;&lt;/dt&gt;\n"<pos:position pos:line="59" pos:column="114"/></literal></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="80">ap_show_mpm<pos:position pos:line="59" pos:column="91"/></name><argument_list pos:line="59" pos:column="91">()<pos:position pos:line="59" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="95"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">ap_rprintf<pos:position pos:line="60" pos:column="23"/></name><argument_list pos:line="60" pos:column="23">(<argument><expr><name pos:line="60" pos:column="24">r<pos:position pos:line="60" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="27">"&lt;dt&gt;&lt;strong&gt;MPM Information:&lt;/strong&gt; "<pos:position pos:line="60" pos:column="85"/></literal>
		       <literal type="string" pos:line="61" pos:column="24">"&lt;tt&gt;Max Daemons: %d Threaded: %s Forked: %s&lt;/tt&gt;&lt;/dt&gt;\n"<pos:position pos:line="61" pos:column="99"/></literal></expr></argument>,
                       <argument><expr><name pos:line="62" pos:column="24">max_daemons<pos:position pos:line="62" pos:column="35"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="62" pos:column="37">threaded<pos:position pos:line="62" pos:column="45"/></name></expr> ?<pos:position pos:line="62" pos:column="47"/></condition><then pos:line="62" pos:column="47"> <expr><literal type="string" pos:line="62" pos:column="48">"yes"<pos:position pos:line="62" pos:column="53"/></literal></expr> <pos:position pos:line="62" pos:column="54"/></then><else pos:line="62" pos:column="54">: <expr><literal type="string" pos:line="62" pos:column="56">"no"<pos:position pos:line="62" pos:column="60"/></literal></expr></else></ternary></expr></argument>,
                       <argument><expr><ternary><condition><expr><name pos:line="63" pos:column="24">forked<pos:position pos:line="63" pos:column="30"/></name></expr> ?<pos:position pos:line="63" pos:column="32"/></condition><then pos:line="63" pos:column="32"> <expr><literal type="string" pos:line="63" pos:column="33">"yes"<pos:position pos:line="63" pos:column="38"/></literal></expr> <pos:position pos:line="63" pos:column="39"/></then><else pos:line="63" pos:column="39">: <expr><literal type="string" pos:line="63" pos:column="41">"no"<pos:position pos:line="63" pos:column="45"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="63" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="64" pos:column="13">ap_rprintf<pos:position pos:line="64" pos:column="23"/></name><argument_list pos:line="64" pos:column="23">(<argument><expr><name pos:line="64" pos:column="24">r<pos:position pos:line="64" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="27">"&lt;dt&gt;&lt;strong&gt;Server Root:&lt;/strong&gt; "<pos:position pos:line="64" pos:column="81"/></literal>
                        <literal type="string" pos:line="65" pos:column="25">"&lt;tt&gt;%s&lt;/tt&gt;&lt;/dt&gt;\n"<pos:position pos:line="65" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="47">ap_server_root<pos:position pos:line="65" pos:column="61"/></name></expr></argument>)<pos:position pos:line="65" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">ap_rprintf<pos:position pos:line="66" pos:column="23"/></name><argument_list pos:line="66" pos:column="23">(<argument><expr><name pos:line="66" pos:column="24">r<pos:position pos:line="66" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="27">"&lt;dt&gt;&lt;strong&gt;Config File:&lt;/strong&gt; "<pos:position pos:line="66" pos:column="81"/></literal>
		       <literal type="string" pos:line="67" pos:column="24">"&lt;tt&gt;%s&lt;/tt&gt;&lt;/dt&gt;\n"<pos:position pos:line="67" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="46">ap_conftree<pos:position pos:line="67" pos:column="57"/></name><operator pos:line="67" pos:column="57">-&gt;<pos:position pos:line="67" pos:column="62"/></operator><name pos:line="67" pos:column="59">filename<pos:position pos:line="67" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">ap_rputs<pos:position pos:line="68" pos:column="21"/></name><argument_list pos:line="68" pos:column="21">(<argument><expr><literal type="string" pos:line="68" pos:column="22">"&lt;/dl&gt;&lt;hr /&gt;"<pos:position pos:line="68" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="37">r<pos:position pos:line="68" pos:column="38"/></name></expr></argument>)<pos:position pos:line="68" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if>
        <for pos:line="70" pos:column="9">for <control pos:line="70" pos:column="13">(<init><expr><name pos:line="70" pos:column="14">modp<pos:position pos:line="70" pos:column="18"/></name> <operator pos:line="70" pos:column="19">=<pos:position pos:line="70" pos:column="20"/></operator> <name pos:line="70" pos:column="21">ap_top_module<pos:position pos:line="70" pos:column="34"/></name></expr>;<pos:position pos:line="70" pos:column="35"/></init> <condition><expr><name pos:line="70" pos:column="36">modp<pos:position pos:line="70" pos:column="40"/></name></expr>;<pos:position pos:line="70" pos:column="41"/></condition> <incr><expr><name pos:line="70" pos:column="42">modp<pos:position pos:line="70" pos:column="46"/></name> <operator pos:line="70" pos:column="47">=<pos:position pos:line="70" pos:column="48"/></operator> <name><name pos:line="70" pos:column="49">modp<pos:position pos:line="70" pos:column="53"/></name><operator pos:line="70" pos:column="53">-&gt;<pos:position pos:line="70" pos:column="58"/></operator><name pos:line="70" pos:column="55">next<pos:position pos:line="70" pos:column="59"/></name></name></expr></incr>)<pos:position pos:line="70" pos:column="60"/></control> <block pos:line="70" pos:column="61">{
            <if pos:line="71" pos:column="13">if <condition pos:line="71" pos:column="16">(<expr><operator pos:line="71" pos:column="17">!<pos:position pos:line="71" pos:column="18"/></operator><name><name pos:line="71" pos:column="18">r<pos:position pos:line="71" pos:column="19"/></name><operator pos:line="71" pos:column="19">-&gt;<pos:position pos:line="71" pos:column="24"/></operator><name pos:line="71" pos:column="21">args<pos:position pos:line="71" pos:column="25"/></name></name> <operator pos:line="71" pos:column="26">||<pos:position pos:line="71" pos:column="28"/></operator> <operator pos:line="71" pos:column="29">!<pos:position pos:line="71" pos:column="30"/></operator><call><name pos:line="71" pos:column="30">strcasecmp<pos:position pos:line="71" pos:column="40"/></name><argument_list pos:line="71" pos:column="40">(<argument><expr><name><name pos:line="71" pos:column="41">modp<pos:position pos:line="71" pos:column="45"/></name><operator pos:line="71" pos:column="45">-&gt;<pos:position pos:line="71" pos:column="50"/></operator><name pos:line="71" pos:column="47">name<pos:position pos:line="71" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="53">r<pos:position pos:line="71" pos:column="54"/></name><operator pos:line="71" pos:column="54">-&gt;<pos:position pos:line="71" pos:column="59"/></operator><name pos:line="71" pos:column="56">args<pos:position pos:line="71" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="62"/></condition><then pos:line="71" pos:column="62"> <block pos:line="71" pos:column="63">{
                <expr_stmt><expr><call><name pos:line="72" pos:column="17">ap_rprintf<pos:position pos:line="72" pos:column="27"/></name><argument_list pos:line="72" pos:column="27">(<argument><expr><name pos:line="72" pos:column="28">r<pos:position pos:line="72" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="31">"&lt;dl&gt;&lt;dt&gt;&lt;a name=\"%s\"&gt;&lt;strong&gt;Module Name:&lt;/strong&gt; "<pos:position pos:line="72" pos:column="116"/></literal>
                            <literal type="string" pos:line="73" pos:column="29">"&lt;font size=\"+1\"&gt;&lt;tt&gt;%s&lt;/tt&gt;&lt;/font&gt;&lt;/a&gt;&lt;/dt&gt;\n"<pos:position pos:line="73" pos:column="114"/></literal></expr></argument>,
                            <argument><expr><name><name pos:line="74" pos:column="29">modp<pos:position pos:line="74" pos:column="33"/></name><operator pos:line="74" pos:column="33">-&gt;<pos:position pos:line="74" pos:column="38"/></operator><name pos:line="74" pos:column="35">name<pos:position pos:line="74" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="41">modp<pos:position pos:line="74" pos:column="45"/></name><operator pos:line="74" pos:column="45">-&gt;<pos:position pos:line="74" pos:column="50"/></operator><name pos:line="74" pos:column="47">name<pos:position pos:line="74" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="75" pos:column="17">ap_rputs<pos:position pos:line="75" pos:column="25"/></name><argument_list pos:line="75" pos:column="25">(<argument><expr><literal type="string" pos:line="75" pos:column="26">"&lt;dt&gt;&lt;strong&gt;Content handlers:&lt;/strong&gt; "<pos:position pos:line="75" pos:column="85"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="69">r<pos:position pos:line="75" pos:column="70"/></name></expr></argument>)<pos:position pos:line="75" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="72"/></expr_stmt>
<cpp:ifdef pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">ifdef<pos:position pos:line="76" pos:column="7"/></cpp:directive> <name pos:line="76" pos:column="8">NEVERMORE<pos:position pos:line="76" pos:column="17"/></name></cpp:ifdef>
                <expr_stmt><expr><name pos:line="77" pos:column="17">hand<pos:position pos:line="77" pos:column="21"/></name> <operator pos:line="77" pos:column="22">=<pos:position pos:line="77" pos:column="23"/></operator> <name><name pos:line="77" pos:column="24">modp<pos:position pos:line="77" pos:column="28"/></name><operator pos:line="77" pos:column="28">-&gt;<pos:position pos:line="77" pos:column="33"/></operator><name pos:line="77" pos:column="30">handlers<pos:position pos:line="77" pos:column="38"/></name></name></expr>;<pos:position pos:line="77" pos:column="39"/></expr_stmt>
                <if pos:line="78" pos:column="17">if <condition pos:line="78" pos:column="20">(<expr><name pos:line="78" pos:column="21">hand<pos:position pos:line="78" pos:column="25"/></name></expr>)<pos:position pos:line="78" pos:column="26"/></condition><then pos:line="78" pos:column="26"> <block pos:line="78" pos:column="27">{
                    <while pos:line="79" pos:column="21">while <condition pos:line="79" pos:column="27">(<expr><name pos:line="79" pos:column="28">hand<pos:position pos:line="79" pos:column="32"/></name></expr>)<pos:position pos:line="79" pos:column="33"/></condition> <block pos:line="79" pos:column="34">{
                        <if pos:line="80" pos:column="25">if <condition pos:line="80" pos:column="28">(<expr><name><name pos:line="80" pos:column="29">hand<pos:position pos:line="80" pos:column="33"/></name><operator pos:line="80" pos:column="33">-&gt;<pos:position pos:line="80" pos:column="38"/></operator><name pos:line="80" pos:column="35">content_type<pos:position pos:line="80" pos:column="47"/></name></name></expr>)<pos:position pos:line="80" pos:column="48"/></condition><then pos:line="80" pos:column="48"> <block pos:line="80" pos:column="49">{
                            <expr_stmt><expr><call><name pos:line="81" pos:column="29">ap_rprintf<pos:position pos:line="81" pos:column="39"/></name><argument_list pos:line="81" pos:column="39">(<argument><expr><name pos:line="81" pos:column="40">r<pos:position pos:line="81" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="43">" &lt;tt&gt;%s&lt;/tt&gt;\n"<pos:position pos:line="81" pos:column="71"/></literal></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="61">hand<pos:position pos:line="81" pos:column="65"/></name><operator pos:line="81" pos:column="65">-&gt;<pos:position pos:line="81" pos:column="70"/></operator><name pos:line="81" pos:column="67">content_type<pos:position pos:line="81" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="81"/></expr_stmt>
                        }<pos:position pos:line="82" pos:column="26"/></block></then>
                        <else pos:line="83" pos:column="25">else <block pos:line="83" pos:column="30">{
                            <break pos:line="84" pos:column="29">break;<pos:position pos:line="84" pos:column="35"/></break>
                        }<pos:position pos:line="85" pos:column="26"/></block></else></if>
                        <expr_stmt><expr><name pos:line="86" pos:column="25">hand<pos:position pos:line="86" pos:column="29"/></name><operator pos:line="86" pos:column="29">++<pos:position pos:line="86" pos:column="31"/></operator></expr>;<pos:position pos:line="86" pos:column="32"/></expr_stmt>
                        <if pos:line="87" pos:column="25">if <condition pos:line="87" pos:column="28">(<expr><name pos:line="87" pos:column="29">hand<pos:position pos:line="87" pos:column="33"/></name> <operator pos:line="87" pos:column="34">&amp;&amp;<pos:position pos:line="87" pos:column="44"/></operator> <name><name pos:line="87" pos:column="37">hand<pos:position pos:line="87" pos:column="41"/></name><operator pos:line="87" pos:column="41">-&gt;<pos:position pos:line="87" pos:column="46"/></operator><name pos:line="87" pos:column="43">content_type<pos:position pos:line="87" pos:column="55"/></name></name></expr>)<pos:position pos:line="87" pos:column="56"/></condition><then pos:line="87" pos:column="56"> <block pos:line="87" pos:column="57">{
                            <expr_stmt><expr><call><name pos:line="88" pos:column="29">ap_rputs<pos:position pos:line="88" pos:column="37"/></name><argument_list pos:line="88" pos:column="37">(<argument><expr><literal type="string" pos:line="88" pos:column="38">","<pos:position pos:line="88" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="43">r<pos:position pos:line="88" pos:column="44"/></name></expr></argument>)<pos:position pos:line="88" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="46"/></expr_stmt>
                        }<pos:position pos:line="89" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="90" pos:column="22"/></block></while>
                }<pos:position pos:line="91" pos:column="18"/></block></then>
                <else pos:line="92" pos:column="17">else <block pos:line="92" pos:column="22">{<pos:position pos:line="92" pos:column="23"/></block></else></if></block></then></if></block></for></block></then></if></block></function>
      </unit>

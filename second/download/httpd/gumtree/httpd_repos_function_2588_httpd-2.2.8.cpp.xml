<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2588_httpd-2.2.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">should_test_run<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">testname<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <block pos:line="1" pos:column="50">{
    <decl_stmt><decl><type><name pos:line="2" pos:column="5">int<pos:position pos:line="2" pos:column="8"/></name></type> <name pos:line="2" pos:column="9">found<pos:position pos:line="2" pos:column="14"/></name> <init pos:line="2" pos:column="15">= <expr><literal type="number" pos:line="2" pos:column="17">0<pos:position pos:line="2" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="19"/></decl_stmt>
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">list_tests<pos:position pos:line="3" pos:column="19"/></name> <operator pos:line="3" pos:column="20">==<pos:position pos:line="3" pos:column="22"/></operator> <literal type="number" pos:line="3" pos:column="23">1<pos:position pos:line="3" pos:column="24"/></literal></expr>)<pos:position pos:line="3" pos:column="25"/></condition><then pos:line="3" pos:column="25"> <block pos:line="3" pos:column="26">{
        <return pos:line="4" pos:column="9">return <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr>;<pos:position pos:line="4" pos:column="18"/></return>
    }<pos:position pos:line="5" pos:column="6"/></block></then></if>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">testlist<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">==<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr>)<pos:position pos:line="6" pos:column="26"/></condition><then pos:line="6" pos:column="26"> <block pos:line="6" pos:column="27">{
        <return pos:line="7" pos:column="9">return <expr><literal type="number" pos:line="7" pos:column="16">1<pos:position pos:line="7" pos:column="17"/></literal></expr>;<pos:position pos:line="7" pos:column="18"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="9" pos:column="5">found<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <call><name pos:line="9" pos:column="13">find_test_name<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">testname<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">found<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">&amp;&amp;<pos:position pos:line="10" pos:column="26"/></operator> <operator pos:line="10" pos:column="19">!<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="20">exclude<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator> <operator pos:line="10" pos:column="29">||<pos:position pos:line="10" pos:column="31"/></operator> <operator pos:line="10" pos:column="32">(<pos:position pos:line="10" pos:column="33"/></operator><operator pos:line="10" pos:column="33">!<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="34">found<pos:position pos:line="10" pos:column="39"/></name> <operator pos:line="10" pos:column="40">&amp;&amp;<pos:position pos:line="10" pos:column="50"/></operator> <name pos:line="10" pos:column="43">exclude<pos:position pos:line="10" pos:column="50"/></name><operator pos:line="10" pos:column="50">)<pos:position pos:line="10" pos:column="51"/></operator></expr>)<pos:position pos:line="10" pos:column="52"/></condition><then pos:line="10" pos:column="52"> <block pos:line="10" pos:column="53">{
        <return pos:line="11" pos:column="9">return <expr><literal type="number" pos:line="11" pos:column="16">1<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <return pos:line="13" pos:column="5">return <expr><literal type="number" pos:line="13" pos:column="12">0<pos:position pos:line="13" pos:column="13"/></literal></expr>;<pos:position pos:line="13" pos:column="14"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

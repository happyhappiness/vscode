<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3631_httpd-2.2.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">apr__SHA384_End<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">SHA384_CTX<pos:position pos:line="1" pos:column="33"/></name><modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type> <name pos:line="1" pos:column="35">context<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name></type> <name><name pos:line="1" pos:column="49">buffer<pos:position pos:line="1" pos:column="55"/></name><index pos:line="1" pos:column="55">[]<pos:position pos:line="1" pos:column="57"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list> <block pos:line="1" pos:column="59">{
        <decl_stmt><decl><type><name pos:line="2" pos:column="9">sha2_byte<pos:position pos:line="2" pos:column="18"/></name></type>       <name><name pos:line="2" pos:column="25">digest<pos:position pos:line="2" pos:column="31"/></name><index pos:line="2" pos:column="31">[<expr><name pos:line="2" pos:column="32">SHA384_DIGEST_LENGTH<pos:position pos:line="2" pos:column="52"/></name></expr>]<pos:position pos:line="2" pos:column="53"/></index></name></decl>, <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="56">d<pos:position pos:line="2" pos:column="57"/></name> <init pos:line="2" pos:column="58">= <expr><name pos:line="2" pos:column="60">digest<pos:position pos:line="2" pos:column="66"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="67"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type>             <name pos:line="3" pos:column="25">i<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>

        <comment type="block" pos:line="5" pos:column="9">/* Sanity check: */</comment>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">assert<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">context<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">!=<pos:position pos:line="6" pos:column="26"/></operator> <operator pos:line="6" pos:column="27">(<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">SHA384_CTX<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">*<pos:position pos:line="6" pos:column="39"/></operator><operator pos:line="6" pos:column="39">)<pos:position pos:line="6" pos:column="40"/></operator><literal type="number" pos:line="6" pos:column="40">0<pos:position pos:line="6" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt>

        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">buffer<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">!=<pos:position pos:line="8" pos:column="22"/></operator> <operator pos:line="8" pos:column="23">(<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">char<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></operator><operator pos:line="8" pos:column="29">)<pos:position pos:line="8" pos:column="30"/></operator><literal type="number" pos:line="8" pos:column="30">0<pos:position pos:line="8" pos:column="31"/></literal></expr>)<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32"> <block pos:line="8" pos:column="33">{
                <expr_stmt><expr><call><name pos:line="9" pos:column="17">apr__SHA384_Final<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">digest<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="43">context<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>

                <for pos:line="11" pos:column="17">for <control pos:line="11" pos:column="21">(<init><expr><name pos:line="11" pos:column="22">i<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="26">0<pos:position pos:line="11" pos:column="27"/></literal></expr>;<pos:position pos:line="11" pos:column="28"/></init> <condition><expr><name pos:line="11" pos:column="29">i<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">&lt;<pos:position pos:line="11" pos:column="35"/></operator> <name pos:line="11" pos:column="33">SHA384_DIGEST_LENGTH<pos:position pos:line="11" pos:column="53"/></name></expr>;<pos:position pos:line="11" pos:column="54"/></condition> <incr><expr><name pos:line="11" pos:column="55">i<pos:position pos:line="11" pos:column="56"/></name><operator pos:line="11" pos:column="56">++<pos:position pos:line="11" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="59"/></control> <block pos:line="11" pos:column="60">{
                        <expr_stmt><expr><operator pos:line="12" pos:column="25">*<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">buffer<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">++<pos:position pos:line="12" pos:column="34"/></operator> <operator pos:line="12" pos:column="35">=<pos:position pos:line="12" pos:column="36"/></operator> <name><name pos:line="12" pos:column="37">sha2_hex_digits<pos:position pos:line="12" pos:column="52"/></name><index pos:line="12" pos:column="52">[<expr><operator pos:line="12" pos:column="53">(<pos:position pos:line="12" pos:column="54"/></operator><operator pos:line="12" pos:column="54">*<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="55">d<pos:position pos:line="12" pos:column="56"/></name> <operator pos:line="12" pos:column="57">&amp;<pos:position pos:line="12" pos:column="62"/></operator> <literal type="number" pos:line="12" pos:column="59">0xf0<pos:position pos:line="12" pos:column="63"/></literal><operator pos:line="12" pos:column="63">)<pos:position pos:line="12" pos:column="64"/></operator> <operator pos:line="12" pos:column="65">&gt;&gt;<pos:position pos:line="12" pos:column="70"/></operator> <literal type="number" pos:line="12" pos:column="68">4<pos:position pos:line="12" pos:column="69"/></literal></expr>]<pos:position pos:line="12" pos:column="70"/></index></name></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt>
                        <expr_stmt><expr><operator pos:line="13" pos:column="25">*<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">buffer<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">++<pos:position pos:line="13" pos:column="34"/></operator> <operator pos:line="13" pos:column="35">=<pos:position pos:line="13" pos:column="36"/></operator> <name><name pos:line="13" pos:column="37">sha2_hex_digits<pos:position pos:line="13" pos:column="52"/></name><index pos:line="13" pos:column="52">[<expr><operator pos:line="13" pos:column="53">*<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="54">d<pos:position pos:line="13" pos:column="55"/></name> <operator pos:line="13" pos:column="56">&amp;<pos:position pos:line="13" pos:column="61"/></operator> <literal type="number" pos:line="13" pos:column="58">0x0f<pos:position pos:line="13" pos:column="62"/></literal></expr>]<pos:position pos:line="13" pos:column="63"/></index></name></expr>;<pos:position pos:line="13" pos:column="64"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="14" pos:column="25">d<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">++<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
                }<pos:position pos:line="15" pos:column="18"/></block></for>
                <expr_stmt><expr><operator pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">buffer<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <operator pos:line="16" pos:column="27">(<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="28">char<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">)<pos:position pos:line="16" pos:column="33"/></operator><literal type="number" pos:line="16" pos:column="33">0<pos:position pos:line="16" pos:column="34"/></literal></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></then> <else pos:line="17" pos:column="11">else <block pos:line="17" pos:column="16">{
                <expr_stmt><expr><call><name pos:line="18" pos:column="17">MEMSET_BZERO<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">context<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="39">sizeof<argument_list pos:line="18" pos:column="45">(<argument><expr><name pos:line="18" pos:column="46">context<pos:position pos:line="18" pos:column="53"/></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">MEMSET_BZERO<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">digest<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="30">SHA384_DIGEST_LENGTH<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">buffer<pos:position pos:line="21" pos:column="22"/></name></expr>;<pos:position pos:line="21" pos:column="23"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

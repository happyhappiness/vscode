<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_847.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">ssl_filter_write<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">ap_filter_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">f<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
                                     <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">data<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="3" pos:column="38">apr_size_t<pos:position pos:line="3" pos:column="48"/></name></type> <name pos:line="3" pos:column="49">len<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="53"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ssl_filter_ctx_t<pos:position pos:line="5" pos:column="21"/></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">filter_ctx<pos:position pos:line="5" pos:column="33"/></name> <init pos:line="5" pos:column="34">= <expr><name><name pos:line="5" pos:column="36">f<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">-&gt;<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="39">ctx<pos:position pos:line="5" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">bio_filter_out_ctx_t<pos:position pos:line="6" pos:column="25"/></name> <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier></type><name pos:line="6" pos:column="27">outctx<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">res<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* write SSL */</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">filter_ctx<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">pssl<pos:position pos:line="10" pos:column="25"/></name></name> <operator pos:line="10" pos:column="26">==<pos:position pos:line="10" pos:column="28"/></operator> <name pos:line="10" pos:column="29">NULL<pos:position pos:line="10" pos:column="33"/></name></expr>)<pos:position pos:line="10" pos:column="34"/></condition><then pos:line="10" pos:column="34"> <block pos:line="10" pos:column="35">{
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">APR_EGENERAL<pos:position pos:line="11" pos:column="28"/></name></expr>;<pos:position pos:line="11" pos:column="29"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="14" pos:column="5">outctx<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">bio_filter_out_ctx_t<pos:position pos:line="14" pos:column="35"/></name> <operator pos:line="14" pos:column="36">*<pos:position pos:line="14" pos:column="37"/></operator><operator pos:line="14" pos:column="37">)<pos:position pos:line="14" pos:column="38"/></operator><name><name pos:line="14" pos:column="38">filter_ctx<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">-&gt;<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="50">pbioWrite<pos:position pos:line="14" pos:column="59"/></name><operator pos:line="14" pos:column="59">-&gt;<pos:position pos:line="14" pos:column="64"/></operator><name pos:line="14" pos:column="61">ptr<pos:position pos:line="14" pos:column="64"/></name></name></expr>;<pos:position pos:line="14" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">res<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <call><name pos:line="15" pos:column="11">SSL_write<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name><name pos:line="15" pos:column="21">filter_ctx<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">pssl<pos:position pos:line="15" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="39">(<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="40">unsigned<pos:position pos:line="15" pos:column="48"/></name> <name pos:line="15" pos:column="49">char<pos:position pos:line="15" pos:column="53"/></name> <operator pos:line="15" pos:column="54">*<pos:position pos:line="15" pos:column="55"/></operator><operator pos:line="15" pos:column="55">)<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="56">data<pos:position pos:line="15" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="62">len<pos:position pos:line="15" pos:column="65"/></name></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">res<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">&lt;<pos:position pos:line="17" pos:column="17"/></operator> <literal type="number" pos:line="17" pos:column="15">0<pos:position pos:line="17" pos:column="16"/></literal></expr>)<pos:position pos:line="17" pos:column="17"/></condition><then pos:line="17" pos:column="17"> <block pos:line="17" pos:column="18">{
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">int<pos:position pos:line="18" pos:column="12"/></name></type> <name pos:line="18" pos:column="13">ssl_err<pos:position pos:line="18" pos:column="20"/></name> <init pos:line="18" pos:column="21">= <expr><call><name pos:line="18" pos:column="23">SSL_get_error<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name><name pos:line="18" pos:column="37">filter_ctx<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">-&gt;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="49">pssl<pos:position pos:line="18" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="55">res<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="60"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">conn_rec<pos:position pos:line="19" pos:column="17"/></name> <modifier pos:line="19" pos:column="18">*<pos:position pos:line="19" pos:column="19"/></modifier></type><name pos:line="19" pos:column="19">c<pos:position pos:line="19" pos:column="20"/></name> <init pos:line="19" pos:column="21">= <expr><operator pos:line="19" pos:column="23">(<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">conn_rec<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">*<pos:position pos:line="19" pos:column="33"/></operator><operator pos:line="19" pos:column="33">)<pos:position pos:line="19" pos:column="34"/></operator><call><name pos:line="19" pos:column="34">SSL_get_app_data<pos:position pos:line="19" pos:column="50"/></name><argument_list pos:line="19" pos:column="50">(<argument><expr><name><name pos:line="19" pos:column="51">outctx<pos:position pos:line="19" pos:column="57"/></name><operator pos:line="19" pos:column="57">-&gt;<pos:position pos:line="19" pos:column="62"/></operator><name pos:line="19" pos:column="59">filter_ctx<pos:position pos:line="19" pos:column="69"/></name><operator pos:line="19" pos:column="69">-&gt;<pos:position pos:line="19" pos:column="74"/></operator><name pos:line="19" pos:column="71">pssl<pos:position pos:line="19" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="77"/></decl_stmt>

        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">ssl_err<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">==<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="24">SSL_ERROR_WANT_WRITE<pos:position pos:line="21" pos:column="44"/></name></expr>)<pos:position pos:line="21" pos:column="45"/></condition><then pos:line="21" pos:column="45"> <block pos:line="21" pos:column="46">{
            <comment type="block" pos:line="22" pos:column="13">/*
             * If OpenSSL wants to write more, and we were nonblocking,
             * report as an EAGAIN.  Otherwise loop, pushing more
             * data at the network filter.
             *
             * (This is usually the case when the client forces an SSL
             * renegotation which is handled implicitly by OpenSSL.)
             */</comment>
            <expr_stmt><expr><name><name pos:line="30" pos:column="13">outctx<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">rc<pos:position pos:line="30" pos:column="23"/></name></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <name pos:line="30" pos:column="26">APR_EAGAIN<pos:position pos:line="30" pos:column="36"/></name></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then>
        <elseif pos:line="32" pos:column="9">else <if pos:line="32" pos:column="14">if <condition pos:line="32" pos:column="17">(<expr><name pos:line="32" pos:column="18">ssl_err<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">==<pos:position pos:line="32" pos:column="28"/></operator> <name pos:line="32" pos:column="29">SSL_ERROR_SYSCALL<pos:position pos:line="32" pos:column="46"/></name></expr>)<pos:position pos:line="32" pos:column="47"/></condition><then pos:line="32" pos:column="47"> <block pos:line="32" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">ap_log_error<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">APLOG_MARK<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="38">APLOG_INFO<pos:position pos:line="33" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="50">outctx<pos:position pos:line="33" pos:column="56"/></name><operator pos:line="33" pos:column="56">-&gt;<pos:position pos:line="33" pos:column="61"/></operator><name pos:line="33" pos:column="58">rc<pos:position pos:line="33" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="62">c<pos:position pos:line="33" pos:column="63"/></name><operator pos:line="33" pos:column="63">-&gt;<pos:position pos:line="33" pos:column="68"/></operator><name pos:line="33" pos:column="65">base_server<pos:position pos:line="33" pos:column="76"/></name></name></expr></argument>,
                        <argument><expr><literal type="string" pos:line="34" pos:column="25">"SSL output filter write failed."<pos:position pos:line="34" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if></elseif>
        <else pos:line="36" pos:column="9">else <comment type="block" pos:line="36" pos:column="14">/* if (ssl_err == SSL_ERROR_SSL) */</comment> <block pos:line="36" pos:column="50">{
            <comment type="block" pos:line="37" pos:column="13">/*
             * Log SSL errors
             */</comment>
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">ap_log_error<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">APLOG_MARK<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="38">APLOG_INFO<pos:position pos:line="40" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="50">outctx<pos:position pos:line="40" pos:column="56"/></name><operator pos:line="40" pos:column="56">-&gt;<pos:position pos:line="40" pos:column="61"/></operator><name pos:line="40" pos:column="58">rc<pos:position pos:line="40" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="62">c<pos:position pos:line="40" pos:column="63"/></name><operator pos:line="40" pos:column="63">-&gt;<pos:position pos:line="40" pos:column="68"/></operator><name pos:line="40" pos:column="65">base_server<pos:position pos:line="40" pos:column="76"/></name></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="41" pos:column="26">"SSL library error %d writing data"<pos:position pos:line="41" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="63">ssl_err<pos:position pos:line="41" pos:column="70"/></name></expr></argument>)<pos:position pos:line="41" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">ssl_log_ssl_error<pos:position pos:line="42" pos:column="30"/></name><argument_list pos:line="42" pos:column="30">(<argument><expr><name pos:line="42" pos:column="31">APLOG_MARK<pos:position pos:line="42" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="43">APLOG_INFO<pos:position pos:line="42" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="55">c<pos:position pos:line="42" pos:column="56"/></name><operator pos:line="42" pos:column="56">-&gt;<pos:position pos:line="42" pos:column="61"/></operator><name pos:line="42" pos:column="58">base_server<pos:position pos:line="42" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></else></if>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name><name pos:line="44" pos:column="13">outctx<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">-&gt;<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="21">rc<pos:position pos:line="44" pos:column="23"/></name></name> <operator pos:line="44" pos:column="24">==<pos:position pos:line="44" pos:column="26"/></operator> <name pos:line="44" pos:column="27">APR_SUCCESS<pos:position pos:line="44" pos:column="38"/></name></expr>)<pos:position pos:line="44" pos:column="39"/></condition><then pos:line="44" pos:column="39"> <block pos:line="44" pos:column="40">{
            <expr_stmt><expr><name><name pos:line="45" pos:column="13">outctx<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">-&gt;<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="21">rc<pos:position pos:line="45" pos:column="23"/></name></name> <operator pos:line="45" pos:column="24">=<pos:position pos:line="45" pos:column="25"/></operator> <name pos:line="45" pos:column="26">APR_EGENERAL<pos:position pos:line="45" pos:column="38"/></name></expr>;<pos:position pos:line="45" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
    }<pos:position pos:line="47" pos:column="6"/></block></then>
    <elseif pos:line="48" pos:column="5">else <if pos:line="48" pos:column="10">if <condition pos:line="48" pos:column="13">(<expr><operator pos:line="48" pos:column="14">(<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="15">apr_size_t<pos:position pos:line="48" pos:column="25"/></name><operator pos:line="48" pos:column="25">)<pos:position pos:line="48" pos:column="26"/></operator><name pos:line="48" pos:column="26">res<pos:position pos:line="48" pos:column="29"/></name> <operator pos:line="48" pos:column="30">!=<pos:position pos:line="48" pos:column="32"/></operator> <name pos:line="48" pos:column="33">len<pos:position pos:line="48" pos:column="36"/></name></expr>)<pos:position pos:line="48" pos:column="37"/></condition><then pos:line="48" pos:column="37"> <block pos:line="48" pos:column="38">{
        <decl_stmt><decl><type><name pos:line="49" pos:column="9">conn_rec<pos:position pos:line="49" pos:column="17"/></name> <modifier pos:line="49" pos:column="18">*<pos:position pos:line="49" pos:column="19"/></modifier></type><name pos:line="49" pos:column="19">c<pos:position pos:line="49" pos:column="20"/></name> <init pos:line="49" pos:column="21">= <expr><name><name pos:line="49" pos:column="23">f<pos:position pos:line="49" pos:column="24"/></name><operator pos:line="49" pos:column="24">-&gt;<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="26">c<pos:position pos:line="49" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="49" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="50" pos:column="9">char<pos:position pos:line="50" pos:column="13"/></name> <modifier pos:line="50" pos:column="14">*<pos:position pos:line="50" pos:column="15"/></modifier></type><name pos:line="50" pos:column="15">reason<pos:position pos:line="50" pos:column="21"/></name> <init pos:line="50" pos:column="22">= <expr><literal type="string" pos:line="50" pos:column="24">"reason unknown"<pos:position pos:line="50" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="50" pos:column="41"/></decl_stmt>

        <comment type="block" pos:line="52" pos:column="9">/* XXX: probably a better way to determine this */</comment>
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><call><name pos:line="53" pos:column="13">SSL_total_renegotiations<pos:position pos:line="53" pos:column="37"/></name><argument_list pos:line="53" pos:column="37">(<argument><expr><name><name pos:line="53" pos:column="38">filter_ctx<pos:position pos:line="53" pos:column="48"/></name><operator pos:line="53" pos:column="48">-&gt;<pos:position pos:line="53" pos:column="53"/></operator><name pos:line="53" pos:column="50">pssl<pos:position pos:line="53" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="56"/></condition><then pos:line="53" pos:column="56"> <block pos:line="53" pos:column="57">{
            <expr_stmt><expr><name pos:line="54" pos:column="13">reason<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <literal type="string" pos:line="54" pos:column="22">"likely due to failed renegotiation"<pos:position pos:line="54" pos:column="58"/></literal></expr>;<pos:position pos:line="54" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="57" pos:column="9">ap_log_error<pos:position pos:line="57" pos:column="21"/></name><argument_list pos:line="57" pos:column="21">(<argument><expr><name pos:line="57" pos:column="22">APLOG_MARK<pos:position pos:line="57" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="34">APLOG_INFO<pos:position pos:line="57" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="46">outctx<pos:position pos:line="57" pos:column="52"/></name><operator pos:line="57" pos:column="52">-&gt;<pos:position pos:line="57" pos:column="57"/></operator><name pos:line="57" pos:column="54">rc<pos:position pos:line="57" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="58">c<pos:position pos:line="57" pos:column="59"/></name><operator pos:line="57" pos:column="59">-&gt;<pos:position pos:line="57" pos:column="64"/></operator><name pos:line="57" pos:column="61">base_server<pos:position pos:line="57" pos:column="72"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="58" pos:column="22">"failed to write %d of %d bytes (%s)"<pos:position pos:line="58" pos:column="59"/></literal></expr></argument>,
                     <argument><expr><name pos:line="59" pos:column="22">len<pos:position pos:line="59" pos:column="25"/></name> <operator pos:line="59" pos:column="26">-<pos:position pos:line="59" pos:column="27"/></operator> <operator pos:line="59" pos:column="28">(<pos:position pos:line="59" pos:column="29"/></operator><name pos:line="59" pos:column="29">apr_size_t<pos:position pos:line="59" pos:column="39"/></name><operator pos:line="59" pos:column="39">)<pos:position pos:line="59" pos:column="40"/></operator><name pos:line="59" pos:column="40">res<pos:position pos:line="59" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="45">len<pos:position pos:line="59" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="50">reason<pos:position pos:line="59" pos:column="56"/></name></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="58"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="61" pos:column="9">outctx<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">-&gt;<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="17">rc<pos:position pos:line="61" pos:column="19"/></name></name> <operator pos:line="61" pos:column="20">=<pos:position pos:line="61" pos:column="21"/></operator> <name pos:line="61" pos:column="22">APR_EGENERAL<pos:position pos:line="61" pos:column="34"/></name></expr>;<pos:position pos:line="61" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if></elseif></if>
    <return pos:line="63" pos:column="5">return <expr><name><name pos:line="63" pos:column="12">outctx<pos:position pos:line="63" pos:column="18"/></name><operator pos:line="63" pos:column="18">-&gt;<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="20">rc<pos:position pos:line="63" pos:column="22"/></name></name></expr>;<pos:position pos:line="63" pos:column="23"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3943_httpd-2.2.22.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_socket_sendfile<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">apr_socket_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type> <name pos:line="1" pos:column="49">sock<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">apr_file_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type> <name pos:line="1" pos:column="68">file<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">apr_hdtr_t<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type> <name pos:line="2" pos:column="47">hdtr<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">apr_off_t<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type> <name pos:line="2" pos:column="65">offset<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="3" pos:column="34">apr_size_t<pos:position pos:line="3" pos:column="44"/></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type> <name pos:line="3" pos:column="47">len<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="52">apr_int32_t<pos:position pos:line="3" pos:column="63"/></name></type> <name pos:line="3" pos:column="64">flags<pos:position pos:line="3" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="70"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="12">ptr<pos:position pos:line="5" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="17">rv<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">void<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type> <name pos:line="6" pos:column="12">hbuf<pos:position pos:line="6" pos:column="16"/></name><init pos:line="6" pos:column="16">=<expr><name pos:line="6" pos:column="17">NULL<pos:position pos:line="6" pos:column="21"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier> <decl><type ref="prev"/><name pos:line="6" pos:column="25">tbuf<pos:position pos:line="6" pos:column="29"/></name><init pos:line="6" pos:column="29">=<expr><name pos:line="6" pos:column="30">NULL<pos:position pos:line="6" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_status_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">arv<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">sf_parms<pos:position pos:line="8" pos:column="20"/></name></name></type> <name pos:line="8" pos:column="21">parms<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">hdtr<pos:position pos:line="10" pos:column="14"/></name></expr>)<pos:position pos:line="10" pos:column="15"/></condition><then pos:line="10" pos:column="15"> <block pos:line="10" pos:column="16">{
        <expr_stmt><expr><name pos:line="11" pos:column="9">hdtr<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <operator pos:line="11" pos:column="16">&amp;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="17">no_hdtr<pos:position pos:line="11" pos:column="24"/></name></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="14" pos:column="5">/* Ignore flags for now. */</comment>
    <expr_stmt><expr><name pos:line="15" pos:column="5">flags<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <literal type="number" pos:line="15" pos:column="13">0<pos:position pos:line="15" pos:column="14"/></literal></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* word to the wise: by default, AIX stores files sent by send_file()
     * in the network buffer cache...  there are supposedly scenarios
     * where the most recent copy of the file won't be sent, but I can't
     * recreate the potential problem, perhaps because of the way we
     * use send_file()...  if you suspect such a problem, try turning
     * on the SF_SYNC_CACHE flag
     */</comment>

    <comment type="block" pos:line="25" pos:column="5">/* AIX can also send the headers/footers as part of the system call */</comment>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">parms<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">.<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">header_length<pos:position pos:line="26" pos:column="24"/></name></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <literal type="number" pos:line="26" pos:column="27">0<pos:position pos:line="26" pos:column="28"/></literal></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">hdtr<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">&amp;&amp;<pos:position pos:line="27" pos:column="24"/></operator> <name><name pos:line="27" pos:column="17">hdtr<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">numheaders<pos:position pos:line="27" pos:column="33"/></name></name></expr>)<pos:position pos:line="27" pos:column="34"/></condition><then pos:line="27" pos:column="34"> <block pos:line="27" pos:column="35">{
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">hdtr<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">numheaders<pos:position pos:line="28" pos:column="29"/></name></name> <operator pos:line="28" pos:column="30">==<pos:position pos:line="28" pos:column="32"/></operator> <literal type="number" pos:line="28" pos:column="33">1<pos:position pos:line="28" pos:column="34"/></literal></expr>)<pos:position pos:line="28" pos:column="35"/></condition><then pos:line="28" pos:column="35"> <block pos:line="28" pos:column="36">{
            <expr_stmt><expr><name><name pos:line="29" pos:column="13">parms<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">.<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="19">header_data<pos:position pos:line="29" pos:column="30"/></name></name> <operator pos:line="29" pos:column="31">=<pos:position pos:line="29" pos:column="32"/></operator> <name><name pos:line="29" pos:column="33">hdtr<pos:position pos:line="29" pos:column="37"/></name><operator pos:line="29" pos:column="37">-&gt;<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="39">headers<pos:position pos:line="29" pos:column="46"/></name><index pos:line="29" pos:column="46">[<expr><literal type="number" pos:line="29" pos:column="47">0<pos:position pos:line="29" pos:column="48"/></literal></expr>]<pos:position pos:line="29" pos:column="49"/></index></name><operator pos:line="29" pos:column="49">.<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="50">iov_base<pos:position pos:line="29" pos:column="58"/></name></expr>;<pos:position pos:line="29" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="30" pos:column="13">parms<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">.<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="19">header_length<pos:position pos:line="30" pos:column="32"/></name></name> <operator pos:line="30" pos:column="33">=<pos:position pos:line="30" pos:column="34"/></operator> <name><name pos:line="30" pos:column="35">hdtr<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">-&gt;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="41">headers<pos:position pos:line="30" pos:column="48"/></name><index pos:line="30" pos:column="48">[<expr><literal type="number" pos:line="30" pos:column="49">0<pos:position pos:line="30" pos:column="50"/></literal></expr>]<pos:position pos:line="30" pos:column="51"/></index></name><operator pos:line="30" pos:column="51">.<pos:position pos:line="30" pos:column="52"/></operator><name pos:line="30" pos:column="52">iov_len<pos:position pos:line="30" pos:column="59"/></name></expr>;<pos:position pos:line="30" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then>
        <else pos:line="32" pos:column="9">else <block pos:line="32" pos:column="14">{
            <for pos:line="33" pos:column="13">for <control pos:line="33" pos:column="17">(<init><expr><name pos:line="33" pos:column="18">i<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <literal type="number" pos:line="33" pos:column="22">0<pos:position pos:line="33" pos:column="23"/></literal></expr>;<pos:position pos:line="33" pos:column="24"/></init> <condition><expr><name pos:line="33" pos:column="25">i<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">&lt;<pos:position pos:line="33" pos:column="31"/></operator> <name><name pos:line="33" pos:column="29">hdtr<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">-&gt;<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="35">numheaders<pos:position pos:line="33" pos:column="45"/></name></name></expr>;<pos:position pos:line="33" pos:column="46"/></condition> <incr><expr><name pos:line="33" pos:column="47">i<pos:position pos:line="33" pos:column="48"/></name><operator pos:line="33" pos:column="48">++<pos:position pos:line="33" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="51"/></control> <block pos:line="33" pos:column="52">{
                <expr_stmt><expr><name><name pos:line="34" pos:column="17">parms<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">.<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="23">header_length<pos:position pos:line="34" pos:column="36"/></name></name> <operator pos:line="34" pos:column="37">+=<pos:position pos:line="34" pos:column="39"/></operator> <name><name pos:line="34" pos:column="40">hdtr<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">-&gt;<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="46">headers<pos:position pos:line="34" pos:column="53"/></name><index pos:line="34" pos:column="53">[<expr><name pos:line="34" pos:column="54">i<pos:position pos:line="34" pos:column="55"/></name></expr>]<pos:position pos:line="34" pos:column="56"/></index></name><operator pos:line="34" pos:column="56">.<pos:position pos:line="34" pos:column="57"/></operator><name pos:line="34" pos:column="57">iov_len<pos:position pos:line="34" pos:column="64"/></name></expr>;<pos:position pos:line="34" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="35" pos:column="14"/></block></for>
<cpp:if pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">if<pos:position pos:line="36" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="36" pos:column="5">0<pos:position pos:line="36" pos:column="6"/></literal></expr></cpp:if>
            <comment type="block" pos:line="37" pos:column="13">/* Keepalives make apr_palloc a bad idea */</comment>
            hbuf = malloc(parms.header_length);
<cpp:else pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">else<pos:position pos:line="39" pos:column="6"/></cpp:directive></cpp:else>
            <comment type="block" pos:line="40" pos:column="13">/* but headers are small, so maybe we can hold on to the
             * memory for the life of the socket...
             */</comment>
            <expr_stmt><expr><name pos:line="43" pos:column="13">hbuf<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">=<pos:position pos:line="43" pos:column="19"/></operator> <call><name pos:line="43" pos:column="20">apr_palloc<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name><name pos:line="43" pos:column="31">sock<pos:position pos:line="43" pos:column="35"/></name><operator pos:line="43" pos:column="35">-&gt;<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="37">pool<pos:position pos:line="43" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="43">parms<pos:position pos:line="43" pos:column="48"/></name><operator pos:line="43" pos:column="48">.<pos:position pos:line="43" pos:column="49"/></operator><name pos:line="43" pos:column="49">header_length<pos:position pos:line="43" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="64"/></expr_stmt>
<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif<pos:position pos:line="44" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name pos:line="45" pos:column="13">ptr<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <literal type="number" pos:line="45" pos:column="19">0<pos:position pos:line="45" pos:column="20"/></literal></expr>;<pos:position pos:line="45" pos:column="21"/></expr_stmt>
            <for pos:line="46" pos:column="13">for <control pos:line="46" pos:column="17">(<init><expr><name pos:line="46" pos:column="18">i<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">=<pos:position pos:line="46" pos:column="21"/></operator> <literal type="number" pos:line="46" pos:column="22">0<pos:position pos:line="46" pos:column="23"/></literal></expr>;<pos:position pos:line="46" pos:column="24"/></init> <condition><expr><name pos:line="46" pos:column="25">i<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">&lt;<pos:position pos:line="46" pos:column="31"/></operator> <name><name pos:line="46" pos:column="29">hdtr<pos:position pos:line="46" pos:column="33"/></name><operator pos:line="46" pos:column="33">-&gt;<pos:position pos:line="46" pos:column="38"/></operator><name pos:line="46" pos:column="35">numheaders<pos:position pos:line="46" pos:column="45"/></name></name></expr>;<pos:position pos:line="46" pos:column="46"/></condition> <incr><expr><name pos:line="46" pos:column="47">i<pos:position pos:line="46" pos:column="48"/></name><operator pos:line="46" pos:column="48">++<pos:position pos:line="46" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="46" pos:column="51"/></control> <block pos:line="46" pos:column="52">{
                <expr_stmt><expr><call><name pos:line="47" pos:column="17">memcpy<pos:position pos:line="47" pos:column="23"/></name><argument_list pos:line="47" pos:column="23">(<argument><expr><operator pos:line="47" pos:column="24">(<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="25">char<pos:position pos:line="47" pos:column="29"/></name> <operator pos:line="47" pos:column="30">*<pos:position pos:line="47" pos:column="31"/></operator><operator pos:line="47" pos:column="31">)<pos:position pos:line="47" pos:column="32"/></operator><name pos:line="47" pos:column="32">hbuf<pos:position pos:line="47" pos:column="36"/></name> <operator pos:line="47" pos:column="37">+<pos:position pos:line="47" pos:column="38"/></operator> <name pos:line="47" pos:column="39">ptr<pos:position pos:line="47" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="44">hdtr<pos:position pos:line="47" pos:column="48"/></name><operator pos:line="47" pos:column="48">-&gt;<pos:position pos:line="47" pos:column="53"/></operator><name pos:line="47" pos:column="50">headers<pos:position pos:line="47" pos:column="57"/></name><index pos:line="47" pos:column="57">[<expr><name pos:line="47" pos:column="58">i<pos:position pos:line="47" pos:column="59"/></name></expr>]<pos:position pos:line="47" pos:column="60"/></index></name><operator pos:line="47" pos:column="60">.<pos:position pos:line="47" pos:column="61"/></operator><name pos:line="47" pos:column="61">iov_base<pos:position pos:line="47" pos:column="69"/></name></expr></argument>,
                       <argument><expr><name><name pos:line="48" pos:column="24">hdtr<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">-&gt;<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="30">headers<pos:position pos:line="48" pos:column="37"/></name><index pos:line="48" pos:column="37">[<expr><name pos:line="48" pos:column="38">i<pos:position pos:line="48" pos:column="39"/></name></expr>]<pos:position pos:line="48" pos:column="40"/></index></name><operator pos:line="48" pos:column="40">.<pos:position pos:line="48" pos:column="41"/></operator><name pos:line="48" pos:column="41">iov_len<pos:position pos:line="48" pos:column="48"/></name></expr></argument>)<pos:position pos:line="48" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="50"/></expr_stmt>
                <expr_stmt><expr><name pos:line="49" pos:column="17">ptr<pos:position pos:line="49" pos:column="20"/></name> <operator pos:line="49" pos:column="21">+=<pos:position pos:line="49" pos:column="23"/></operator> <name><name pos:line="49" pos:column="24">hdtr<pos:position pos:line="49" pos:column="28"/></name><operator pos:line="49" pos:column="28">-&gt;<pos:position pos:line="49" pos:column="33"/></operator><name pos:line="49" pos:column="30">headers<pos:position pos:line="49" pos:column="37"/></name><index pos:line="49" pos:column="37">[<expr><name pos:line="49" pos:column="38">i<pos:position pos:line="49" pos:column="39"/></name></expr>]<pos:position pos:line="49" pos:column="40"/></index></name><operator pos:line="49" pos:column="40">.<pos:position pos:line="49" pos:column="41"/></operator><name pos:line="49" pos:column="41">iov_len<pos:position pos:line="49" pos:column="48"/></name></expr>;<pos:position pos:line="49" pos:column="49"/></expr_stmt>
            }<pos:position pos:line="50" pos:column="14"/></block></for>
            <expr_stmt><expr><name><name pos:line="51" pos:column="13">parms<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">.<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="19">header_data<pos:position pos:line="51" pos:column="30"/></name></name> <operator pos:line="51" pos:column="31">=<pos:position pos:line="51" pos:column="32"/></operator> <name pos:line="51" pos:column="33">hbuf<pos:position pos:line="51" pos:column="37"/></name></expr>;<pos:position pos:line="51" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="52" pos:column="10"/></block></else></if>
    }<pos:position pos:line="53" pos:column="6"/></block></then>
    <else pos:line="54" pos:column="5">else <block type="pseudo"><expr_stmt><expr><name><name pos:line="54" pos:column="10">parms<pos:position pos:line="54" pos:column="15"/></name><operator pos:line="54" pos:column="15">.<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="16">header_data<pos:position pos:line="54" pos:column="27"/></name></name> <operator pos:line="54" pos:column="28">=<pos:position pos:line="54" pos:column="29"/></operator> <name pos:line="54" pos:column="30">NULL<pos:position pos:line="54" pos:column="34"/></name></expr>;<pos:position pos:line="54" pos:column="35"/></expr_stmt></block></else></if>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">parms<pos:position pos:line="55" pos:column="10"/></name><operator pos:line="55" pos:column="10">.<pos:position pos:line="55" pos:column="11"/></operator><name pos:line="55" pos:column="11">trailer_length<pos:position pos:line="55" pos:column="25"/></name></name> <operator pos:line="55" pos:column="26">=<pos:position pos:line="55" pos:column="27"/></operator> <literal type="number" pos:line="55" pos:column="28">0<pos:position pos:line="55" pos:column="29"/></literal></expr>;<pos:position pos:line="55" pos:column="30"/></expr_stmt>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">hdtr<pos:position pos:line="56" pos:column="13"/></name> <operator pos:line="56" pos:column="14">&amp;&amp;<pos:position pos:line="56" pos:column="24"/></operator> <name><name pos:line="56" pos:column="17">hdtr<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">-&gt;<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="23">numtrailers<pos:position pos:line="56" pos:column="34"/></name></name></expr>)<pos:position pos:line="56" pos:column="35"/></condition><then pos:line="56" pos:column="35"> <block pos:line="56" pos:column="36">{
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name><name pos:line="57" pos:column="13">hdtr<pos:position pos:line="57" pos:column="17"/></name><operator pos:line="57" pos:column="17">-&gt;<pos:position pos:line="57" pos:column="22"/></operator><name pos:line="57" pos:column="19">numtrailers<pos:position pos:line="57" pos:column="30"/></name></name> <operator pos:line="57" pos:column="31">==<pos:position pos:line="57" pos:column="33"/></operator> <literal type="number" pos:line="57" pos:column="34">1<pos:position pos:line="57" pos:column="35"/></literal></expr>)<pos:position pos:line="57" pos:column="36"/></condition><then pos:line="57" pos:column="36"> <block pos:line="57" pos:column="37">{
            <expr_stmt><expr><name><name pos:line="58" pos:column="13">parms<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">.<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="19">trailer_data<pos:position pos:line="58" pos:column="31"/></name></name> <operator pos:line="58" pos:column="32">=<pos:position pos:line="58" pos:column="33"/></operator> <name><name pos:line="58" pos:column="34">hdtr<pos:position pos:line="58" pos:column="38"/></name><operator pos:line="58" pos:column="38">-&gt;<pos:position pos:line="58" pos:column="43"/></operator><name pos:line="58" pos:column="40">trailers<pos:position pos:line="58" pos:column="48"/></name><index pos:line="58" pos:column="48">[<expr><literal type="number" pos:line="58" pos:column="49">0<pos:position pos:line="58" pos:column="50"/></literal></expr>]<pos:position pos:line="58" pos:column="51"/></index></name><operator pos:line="58" pos:column="51">.<pos:position pos:line="58" pos:column="52"/></operator><name pos:line="58" pos:column="52">iov_base<pos:position pos:line="58" pos:column="60"/></name></expr>;<pos:position pos:line="58" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="59" pos:column="13">parms<pos:position pos:line="59" pos:column="18"/></name><operator pos:line="59" pos:column="18">.<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="19">trailer_length<pos:position pos:line="59" pos:column="33"/></name></name> <operator pos:line="59" pos:column="34">=<pos:position pos:line="59" pos:column="35"/></operator> <name><name pos:line="59" pos:column="36">hdtr<pos:position pos:line="59" pos:column="40"/></name><operator pos:line="59" pos:column="40">-&gt;<pos:position pos:line="59" pos:column="45"/></operator><name pos:line="59" pos:column="42">trailers<pos:position pos:line="59" pos:column="50"/></name><index pos:line="59" pos:column="50">[<expr><literal type="number" pos:line="59" pos:column="51">0<pos:position pos:line="59" pos:column="52"/></literal></expr>]<pos:position pos:line="59" pos:column="53"/></index></name><operator pos:line="59" pos:column="53">.<pos:position pos:line="59" pos:column="54"/></operator><name pos:line="59" pos:column="54">iov_len<pos:position pos:line="59" pos:column="61"/></name></expr>;<pos:position pos:line="59" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></then>
        <else pos:line="61" pos:column="9">else <block pos:line="61" pos:column="14">{
            <for pos:line="62" pos:column="13">for <control pos:line="62" pos:column="17">(<init><expr><name pos:line="62" pos:column="18">i<pos:position pos:line="62" pos:column="19"/></name> <operator pos:line="62" pos:column="20">=<pos:position pos:line="62" pos:column="21"/></operator> <literal type="number" pos:line="62" pos:column="22">0<pos:position pos:line="62" pos:column="23"/></literal></expr>;<pos:position pos:line="62" pos:column="24"/></init> <condition><expr><name pos:line="62" pos:column="25">i<pos:position pos:line="62" pos:column="26"/></name> <operator pos:line="62" pos:column="27">&lt;<pos:position pos:line="62" pos:column="31"/></operator> <name><name pos:line="62" pos:column="29">hdtr<pos:position pos:line="62" pos:column="33"/></name><operator pos:line="62" pos:column="33">-&gt;<pos:position pos:line="62" pos:column="38"/></operator><name pos:line="62" pos:column="35">numtrailers<pos:position pos:line="62" pos:column="46"/></name></name></expr>;<pos:position pos:line="62" pos:column="47"/></condition> <incr><expr><name pos:line="62" pos:column="48">i<pos:position pos:line="62" pos:column="49"/></name><operator pos:line="62" pos:column="49">++<pos:position pos:line="62" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="62" pos:column="52"/></control> <block pos:line="62" pos:column="53">{
                <expr_stmt><expr><name><name pos:line="63" pos:column="17">parms<pos:position pos:line="63" pos:column="22"/></name><operator pos:line="63" pos:column="22">.<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="23">trailer_length<pos:position pos:line="63" pos:column="37"/></name></name> <operator pos:line="63" pos:column="38">+=<pos:position pos:line="63" pos:column="40"/></operator> <name><name pos:line="63" pos:column="41">hdtr<pos:position pos:line="63" pos:column="45"/></name><operator pos:line="63" pos:column="45">-&gt;<pos:position pos:line="63" pos:column="50"/></operator><name pos:line="63" pos:column="47">trailers<pos:position pos:line="63" pos:column="55"/></name><index pos:line="63" pos:column="55">[<expr><name pos:line="63" pos:column="56">i<pos:position pos:line="63" pos:column="57"/></name></expr>]<pos:position pos:line="63" pos:column="58"/></index></name><operator pos:line="63" pos:column="58">.<pos:position pos:line="63" pos:column="59"/></operator><name pos:line="63" pos:column="59">iov_len<pos:position pos:line="63" pos:column="66"/></name></expr>;<pos:position pos:line="63" pos:column="67"/></expr_stmt>
            }<pos:position pos:line="64" pos:column="14"/></block></for>
<cpp:if pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">if<pos:position pos:line="65" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="65" pos:column="5">0<pos:position pos:line="65" pos:column="6"/></literal></expr></cpp:if>
            <comment type="block" pos:line="66" pos:column="13">/* Keepalives make apr_palloc a bad idea */</comment>
            tbuf = malloc(parms.trailer_length);
<cpp:else pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">else<pos:position pos:line="68" pos:column="6"/></cpp:directive></cpp:else>
            <expr_stmt><expr><name pos:line="69" pos:column="13">tbuf<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">=<pos:position pos:line="69" pos:column="19"/></operator> <call><name pos:line="69" pos:column="20">apr_palloc<pos:position pos:line="69" pos:column="30"/></name><argument_list pos:line="69" pos:column="30">(<argument><expr><name><name pos:line="69" pos:column="31">sock<pos:position pos:line="69" pos:column="35"/></name><operator pos:line="69" pos:column="35">-&gt;<pos:position pos:line="69" pos:column="40"/></operator><name pos:line="69" pos:column="37">pool<pos:position pos:line="69" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="43">parms<pos:position pos:line="69" pos:column="48"/></name><operator pos:line="69" pos:column="48">.<pos:position pos:line="69" pos:column="49"/></operator><name pos:line="69" pos:column="49">trailer_length<pos:position pos:line="69" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="65"/></expr_stmt>
<cpp:endif pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">endif<pos:position pos:line="70" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name pos:line="71" pos:column="13">ptr<pos:position pos:line="71" pos:column="16"/></name> <operator pos:line="71" pos:column="17">=<pos:position pos:line="71" pos:column="18"/></operator> <literal type="number" pos:line="71" pos:column="19">0<pos:position pos:line="71" pos:column="20"/></literal></expr>;<pos:position pos:line="71" pos:column="21"/></expr_stmt>
            <for pos:line="72" pos:column="13">for <control pos:line="72" pos:column="17">(<init><expr><name pos:line="72" pos:column="18">i<pos:position pos:line="72" pos:column="19"/></name> <operator pos:line="72" pos:column="20">=<pos:position pos:line="72" pos:column="21"/></operator> <literal type="number" pos:line="72" pos:column="22">0<pos:position pos:line="72" pos:column="23"/></literal></expr>;<pos:position pos:line="72" pos:column="24"/></init> <condition><expr><name pos:line="72" pos:column="25">i<pos:position pos:line="72" pos:column="26"/></name> <operator pos:line="72" pos:column="27">&lt;<pos:position pos:line="72" pos:column="31"/></operator> <name><name pos:line="72" pos:column="29">hdtr<pos:position pos:line="72" pos:column="33"/></name><operator pos:line="72" pos:column="33">-&gt;<pos:position pos:line="72" pos:column="38"/></operator><name pos:line="72" pos:column="35">numtrailers<pos:position pos:line="72" pos:column="46"/></name></name></expr>;<pos:position pos:line="72" pos:column="47"/></condition> <incr><expr><name pos:line="72" pos:column="48">i<pos:position pos:line="72" pos:column="49"/></name><operator pos:line="72" pos:column="49">++<pos:position pos:line="72" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="72" pos:column="52"/></control> <block pos:line="72" pos:column="53">{
                <expr_stmt><expr><call><name pos:line="73" pos:column="17">memcpy<pos:position pos:line="73" pos:column="23"/></name><argument_list pos:line="73" pos:column="23">(<argument><expr><operator pos:line="73" pos:column="24">(<pos:position pos:line="73" pos:column="25"/></operator><name pos:line="73" pos:column="25">char<pos:position pos:line="73" pos:column="29"/></name> <operator pos:line="73" pos:column="30">*<pos:position pos:line="73" pos:column="31"/></operator><operator pos:line="73" pos:column="31">)<pos:position pos:line="73" pos:column="32"/></operator><name pos:line="73" pos:column="32">tbuf<pos:position pos:line="73" pos:column="36"/></name> <operator pos:line="73" pos:column="37">+<pos:position pos:line="73" pos:column="38"/></operator> <name pos:line="73" pos:column="39">ptr<pos:position pos:line="73" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="44">hdtr<pos:position pos:line="73" pos:column="48"/></name><operator pos:line="73" pos:column="48">-&gt;<pos:position pos:line="73" pos:column="53"/></operator><name pos:line="73" pos:column="50">trailers<pos:position pos:line="73" pos:column="58"/></name><index pos:line="73" pos:column="58">[<expr><name pos:line="73" pos:column="59">i<pos:position pos:line="73" pos:column="60"/></name></expr>]<pos:position pos:line="73" pos:column="61"/></index></name><operator pos:line="73" pos:column="61">.<pos:position pos:line="73" pos:column="62"/></operator><name pos:line="73" pos:column="62">iov_base<pos:position pos:line="73" pos:column="70"/></name></expr></argument>,
                       <argument><expr><name><name pos:line="74" pos:column="24">hdtr<pos:position pos:line="74" pos:column="28"/></name><operator pos:line="74" pos:column="28">-&gt;<pos:position pos:line="74" pos:column="33"/></operator><name pos:line="74" pos:column="30">trailers<pos:position pos:line="74" pos:column="38"/></name><index pos:line="74" pos:column="38">[<expr><name pos:line="74" pos:column="39">i<pos:position pos:line="74" pos:column="40"/></name></expr>]<pos:position pos:line="74" pos:column="41"/></index></name><operator pos:line="74" pos:column="41">.<pos:position pos:line="74" pos:column="42"/></operator><name pos:line="74" pos:column="42">iov_len<pos:position pos:line="74" pos:column="49"/></name></expr></argument>)<pos:position pos:line="74" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><name pos:line="75" pos:column="17">ptr<pos:position pos:line="75" pos:column="20"/></name> <operator pos:line="75" pos:column="21">+=<pos:position pos:line="75" pos:column="23"/></operator> <name><name pos:line="75" pos:column="24">hdtr<pos:position pos:line="75" pos:column="28"/></name><operator pos:line="75" pos:column="28">-&gt;<pos:position pos:line="75" pos:column="33"/></operator><name pos:line="75" pos:column="30">trailers<pos:position pos:line="75" pos:column="38"/></name><index pos:line="75" pos:column="38">[<expr><name pos:line="75" pos:column="39">i<pos:position pos:line="75" pos:column="40"/></name></expr>]<pos:position pos:line="75" pos:column="41"/></index></name><operator pos:line="75" pos:column="41">.<pos:position pos:line="75" pos:column="42"/></operator><name pos:line="75" pos:column="42">iov_len<pos:position pos:line="75" pos:column="49"/></name></expr>;<pos:position pos:line="75" pos:column="50"/></expr_stmt>
            }<pos:position pos:line="76" pos:column="14"/></block></for>
            <expr_stmt><expr><name><name pos:line="77" pos:column="13">parms<pos:position pos:line="77" pos:column="18"/></name><operator pos:line="77" pos:column="18">.<pos:position pos:line="77" pos:column="19"/></operator><name pos:line="77" pos:column="19">trailer_data<pos:position pos:line="77" pos:column="31"/></name></name> <operator pos:line="77" pos:column="32">=<pos:position pos:line="77" pos:column="33"/></operator> <name pos:line="77" pos:column="34">tbuf<pos:position pos:line="77" pos:column="38"/></name></expr>;<pos:position pos:line="77" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="78" pos:column="10"/></block></else></if>
    }<pos:position pos:line="79" pos:column="6"/></block></then>
    <else pos:line="80" pos:column="5">else <block pos:line="80" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="81" pos:column="9">parms<pos:position pos:line="81" pos:column="14"/></name><operator pos:line="81" pos:column="14">.<pos:position pos:line="81" pos:column="15"/></operator><name pos:line="81" pos:column="15">trailer_data<pos:position pos:line="81" pos:column="27"/></name></name> <operator pos:line="81" pos:column="28">=<pos:position pos:line="81" pos:column="29"/></operator> <name pos:line="81" pos:column="30">NULL<pos:position pos:line="81" pos:column="34"/></name></expr>;<pos:position pos:line="81" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="82" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="84" pos:column="5">/* Whew! Headers and trailers set up. Now for the file data */</comment>

    <expr_stmt><expr><name><name pos:line="86" pos:column="5">parms<pos:position pos:line="86" pos:column="10"/></name><operator pos:line="86" pos:column="10">.<pos:position pos:line="86" pos:column="11"/></operator><name pos:line="86" pos:column="11">file_descriptor<pos:position pos:line="86" pos:column="26"/></name></name> <operator pos:line="86" pos:column="27">=<pos:position pos:line="86" pos:column="28"/></operator> <name><name pos:line="86" pos:column="29">file<pos:position pos:line="86" pos:column="33"/></name><operator pos:line="86" pos:column="33">-&gt;<pos:position pos:line="86" pos:column="38"/></operator><name pos:line="86" pos:column="35">filedes<pos:position pos:line="86" pos:column="42"/></name></name></expr>;<pos:position pos:line="86" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="87" pos:column="5">parms<pos:position pos:line="87" pos:column="10"/></name><operator pos:line="87" pos:column="10">.<pos:position pos:line="87" pos:column="11"/></operator><name pos:line="87" pos:column="11">file_offset<pos:position pos:line="87" pos:column="22"/></name></name> <operator pos:line="87" pos:column="23">=<pos:position pos:line="87" pos:column="24"/></operator> <operator pos:line="87" pos:column="25">*<pos:position pos:line="87" pos:column="26"/></operator><name pos:line="87" pos:column="26">offset<pos:position pos:line="87" pos:column="32"/></name></expr>;<pos:position pos:line="87" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="88" pos:column="5">parms<pos:position pos:line="88" pos:column="10"/></name><operator pos:line="88" pos:column="10">.<pos:position pos:line="88" pos:column="11"/></operator><name pos:line="88" pos:column="11">file_bytes<pos:position pos:line="88" pos:column="21"/></name></name> <operator pos:line="88" pos:column="22">=<pos:position pos:line="88" pos:column="23"/></operator> <operator pos:line="88" pos:column="24">*<pos:position pos:line="88" pos:column="25"/></operator><name pos:line="88" pos:column="25">len<pos:position pos:line="88" pos:column="28"/></name></expr>;<pos:position pos:line="88" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="90" pos:column="5">/* O.K. All set up now. Let's go to town */</comment>

    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><name><name pos:line="92" pos:column="9">sock<pos:position pos:line="92" pos:column="13"/></name><operator pos:line="92" pos:column="13">-&gt;<pos:position pos:line="92" pos:column="18"/></operator><name pos:line="92" pos:column="15">options<pos:position pos:line="92" pos:column="22"/></name></name> <operator pos:line="92" pos:column="23">&amp;<pos:position pos:line="92" pos:column="28"/></operator> <name pos:line="92" pos:column="25">APR_INCOMPLETE_WRITE<pos:position pos:line="92" pos:column="45"/></name></expr>)<pos:position pos:line="92" pos:column="46"/></condition><then pos:line="92" pos:column="46"> <block pos:line="92" pos:column="47">{
        <expr_stmt><expr><name><name pos:line="93" pos:column="9">sock<pos:position pos:line="93" pos:column="13"/></name><operator pos:line="93" pos:column="13">-&gt;<pos:position pos:line="93" pos:column="18"/></operator><name pos:line="93" pos:column="15">options<pos:position pos:line="93" pos:column="22"/></name></name> <operator pos:line="93" pos:column="23">&amp;=<pos:position pos:line="93" pos:column="29"/></operator> <operator pos:line="93" pos:column="26">~<pos:position pos:line="93" pos:column="27"/></operator><name pos:line="93" pos:column="27">APR_INCOMPLETE_WRITE<pos:position pos:line="93" pos:column="47"/></name></expr>;<pos:position pos:line="93" pos:column="48"/></expr_stmt>
        <goto pos:line="94" pos:column="9">goto <name pos:line="94" pos:column="14">do_select<pos:position pos:line="94" pos:column="23"/></name>;<pos:position pos:line="94" pos:column="24"/></goto>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>

    <do pos:line="97" pos:column="5">do <block pos:line="97" pos:column="8">{
        <expr_stmt><expr><name pos:line="98" pos:column="9">rv<pos:position pos:line="98" pos:column="11"/></name> <operator pos:line="98" pos:column="12">=<pos:position pos:line="98" pos:column="13"/></operator> <call><name pos:line="98" pos:column="14">send_file<pos:position pos:line="98" pos:column="23"/></name><argument_list pos:line="98" pos:column="23">(<argument><expr><operator pos:line="98" pos:column="24">&amp;<pos:position pos:line="98" pos:column="29"/></operator><operator pos:line="98" pos:column="25">(<pos:position pos:line="98" pos:column="26"/></operator><name><name pos:line="98" pos:column="26">sock<pos:position pos:line="98" pos:column="30"/></name><operator pos:line="98" pos:column="30">-&gt;<pos:position pos:line="98" pos:column="35"/></operator><name pos:line="98" pos:column="32">socketdes<pos:position pos:line="98" pos:column="41"/></name></name><operator pos:line="98" pos:column="41">)<pos:position pos:line="98" pos:column="42"/></operator></expr></argument>, <comment type="block" pos:line="98" pos:column="44">/* socket */</comment>
                       <argument><expr><operator pos:line="99" pos:column="24">&amp;<pos:position pos:line="99" pos:column="29"/></operator><operator pos:line="99" pos:column="25">(<pos:position pos:line="99" pos:column="26"/></operator><name pos:line="99" pos:column="26">parms<pos:position pos:line="99" pos:column="31"/></name><operator pos:line="99" pos:column="31">)<pos:position pos:line="99" pos:column="32"/></operator></expr></argument>,           <comment type="block" pos:line="99" pos:column="44">/* all data */</comment>
                       <argument><expr><name pos:line="100" pos:column="24">flags<pos:position pos:line="100" pos:column="29"/></name></expr></argument>)<pos:position pos:line="100" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="31"/></expr_stmt>             <comment type="block" pos:line="100" pos:column="44">/* flags */</comment>
    }<pos:position pos:line="101" pos:column="6"/></block> while <condition pos:line="101" pos:column="13">(<expr><name pos:line="101" pos:column="14">rv<pos:position pos:line="101" pos:column="16"/></name> <operator pos:line="101" pos:column="17">==<pos:position pos:line="101" pos:column="19"/></operator> <operator pos:line="101" pos:column="20">-<pos:position pos:line="101" pos:column="21"/></operator><literal type="number" pos:line="101" pos:column="21">1<pos:position pos:line="101" pos:column="22"/></literal> <operator pos:line="101" pos:column="23">&amp;&amp;<pos:position pos:line="101" pos:column="33"/></operator> <name pos:line="101" pos:column="26">errno<pos:position pos:line="101" pos:column="31"/></name> <operator pos:line="101" pos:column="32">==<pos:position pos:line="101" pos:column="34"/></operator> <name pos:line="101" pos:column="35">EINTR<pos:position pos:line="101" pos:column="40"/></name></expr>)<pos:position pos:line="101" pos:column="41"/></condition>;<pos:position pos:line="101" pos:column="42"/></do>

    <while pos:line="103" pos:column="5">while <condition pos:line="103" pos:column="11">(<expr><operator pos:line="103" pos:column="12">(<pos:position pos:line="103" pos:column="13"/></operator><name pos:line="103" pos:column="13">rv<pos:position pos:line="103" pos:column="15"/></name> <operator pos:line="103" pos:column="16">==<pos:position pos:line="103" pos:column="18"/></operator> <operator pos:line="103" pos:column="19">-<pos:position pos:line="103" pos:column="20"/></operator><literal type="number" pos:line="103" pos:column="20">1<pos:position pos:line="103" pos:column="21"/></literal><operator pos:line="103" pos:column="21">)<pos:position pos:line="103" pos:column="22"/></operator> <operator pos:line="103" pos:column="23">&amp;&amp;<pos:position pos:line="103" pos:column="33"/></operator> <operator pos:line="103" pos:column="26">(<pos:position pos:line="103" pos:column="27"/></operator><name pos:line="103" pos:column="27">errno<pos:position pos:line="103" pos:column="32"/></name> <operator pos:line="103" pos:column="33">==<pos:position pos:line="103" pos:column="35"/></operator> <name pos:line="103" pos:column="36">EAGAIN<pos:position pos:line="103" pos:column="42"/></name> <operator pos:line="103" pos:column="43">||<pos:position pos:line="103" pos:column="45"/></operator> <name pos:line="103" pos:column="46">errno<pos:position pos:line="103" pos:column="51"/></name> <operator pos:line="103" pos:column="52">==<pos:position pos:line="103" pos:column="54"/></operator> <name pos:line="103" pos:column="55">EWOULDBLOCK<pos:position pos:line="103" pos:column="66"/></name><operator pos:line="103" pos:column="66">)<pos:position pos:line="103" pos:column="67"/></operator> 
                      <operator pos:line="104" pos:column="23">&amp;&amp;<pos:position pos:line="104" pos:column="33"/></operator> <operator pos:line="104" pos:column="26">(<pos:position pos:line="104" pos:column="27"/></operator><name><name pos:line="104" pos:column="27">sock<pos:position pos:line="104" pos:column="31"/></name><operator pos:line="104" pos:column="31">-&gt;<pos:position pos:line="104" pos:column="36"/></operator><name pos:line="104" pos:column="33">timeout<pos:position pos:line="104" pos:column="40"/></name></name> <operator pos:line="104" pos:column="41">&gt;<pos:position pos:line="104" pos:column="45"/></operator> <literal type="number" pos:line="104" pos:column="43">0<pos:position pos:line="104" pos:column="44"/></literal><operator pos:line="104" pos:column="44">)<pos:position pos:line="104" pos:column="45"/></operator></expr>)<pos:position pos:line="104" pos:column="46"/></condition> <block pos:line="104" pos:column="47">{
<label><name pos:line="105" pos:column="1">do_select<pos:position pos:line="105" pos:column="10"/></name>:<pos:position pos:line="105" pos:column="11"/></label>
        <expr_stmt><expr><name pos:line="106" pos:column="9">arv<pos:position pos:line="106" pos:column="12"/></name> <operator pos:line="106" pos:column="13">=<pos:position pos:line="106" pos:column="14"/></operator> <call><name pos:line="106" pos:column="15">apr_wait_for_io_or_timeout<pos:position pos:line="106" pos:column="41"/></name><argument_list pos:line="106" pos:column="41">(<argument><expr><name pos:line="106" pos:column="42">NULL<pos:position pos:line="106" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="48">sock<pos:position pos:line="106" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="106" pos:column="54">0<pos:position pos:line="106" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="57"/></expr_stmt>
        <if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><name pos:line="107" pos:column="13">arv<pos:position pos:line="107" pos:column="16"/></name> <operator pos:line="107" pos:column="17">!=<pos:position pos:line="107" pos:column="19"/></operator> <name pos:line="107" pos:column="20">APR_SUCCESS<pos:position pos:line="107" pos:column="31"/></name></expr>)<pos:position pos:line="107" pos:column="32"/></condition><then pos:line="107" pos:column="32"> <block pos:line="107" pos:column="33">{
            <expr_stmt><expr><operator pos:line="108" pos:column="13">*<pos:position pos:line="108" pos:column="14"/></operator><name pos:line="108" pos:column="14">len<pos:position pos:line="108" pos:column="17"/></name> <operator pos:line="108" pos:column="18">=<pos:position pos:line="108" pos:column="19"/></operator> <literal type="number" pos:line="108" pos:column="20">0<pos:position pos:line="108" pos:column="21"/></literal></expr>;<pos:position pos:line="108" pos:column="22"/></expr_stmt>
            <return pos:line="109" pos:column="13">return <expr><name pos:line="109" pos:column="20">arv<pos:position pos:line="109" pos:column="23"/></name></expr>;<pos:position pos:line="109" pos:column="24"/></return>
        }<pos:position pos:line="110" pos:column="10"/></block></then>
        <else pos:line="111" pos:column="9">else <block pos:line="111" pos:column="14">{
            <do pos:line="112" pos:column="13">do <block pos:line="112" pos:column="16">{
                <expr_stmt><expr><name pos:line="113" pos:column="17">rv<pos:position pos:line="113" pos:column="19"/></name> <operator pos:line="113" pos:column="20">=<pos:position pos:line="113" pos:column="21"/></operator> <call><name pos:line="113" pos:column="22">send_file<pos:position pos:line="113" pos:column="31"/></name><argument_list pos:line="113" pos:column="31">(<argument><expr><operator pos:line="113" pos:column="32">&amp;<pos:position pos:line="113" pos:column="37"/></operator><operator pos:line="113" pos:column="33">(<pos:position pos:line="113" pos:column="34"/></operator><name><name pos:line="113" pos:column="34">sock<pos:position pos:line="113" pos:column="38"/></name><operator pos:line="113" pos:column="38">-&gt;<pos:position pos:line="113" pos:column="43"/></operator><name pos:line="113" pos:column="40">socketdes<pos:position pos:line="113" pos:column="49"/></name></name><operator pos:line="113" pos:column="49">)<pos:position pos:line="113" pos:column="50"/></operator></expr></argument>, <comment type="block" pos:line="113" pos:column="52">/* socket */</comment>
                               <argument><expr><operator pos:line="114" pos:column="32">&amp;<pos:position pos:line="114" pos:column="37"/></operator><operator pos:line="114" pos:column="33">(<pos:position pos:line="114" pos:column="34"/></operator><name pos:line="114" pos:column="34">parms<pos:position pos:line="114" pos:column="39"/></name><operator pos:line="114" pos:column="39">)<pos:position pos:line="114" pos:column="40"/></operator></expr></argument>,           <comment type="block" pos:line="114" pos:column="52">/* all data */</comment>
                               <argument><expr><name pos:line="115" pos:column="32">flags<pos:position pos:line="115" pos:column="37"/></name></expr></argument>)<pos:position pos:line="115" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="39"/></expr_stmt>             <comment type="block" pos:line="115" pos:column="52">/* flags */</comment>
            }<pos:position pos:line="116" pos:column="14"/></block> while <condition pos:line="116" pos:column="21">(<expr><name pos:line="116" pos:column="22">rv<pos:position pos:line="116" pos:column="24"/></name> <operator pos:line="116" pos:column="25">==<pos:position pos:line="116" pos:column="27"/></operator> <operator pos:line="116" pos:column="28">-<pos:position pos:line="116" pos:column="29"/></operator><literal type="number" pos:line="116" pos:column="29">1<pos:position pos:line="116" pos:column="30"/></literal> <operator pos:line="116" pos:column="31">&amp;&amp;<pos:position pos:line="116" pos:column="41"/></operator> <name pos:line="116" pos:column="34">errno<pos:position pos:line="116" pos:column="39"/></name> <operator pos:line="116" pos:column="40">==<pos:position pos:line="116" pos:column="42"/></operator> <name pos:line="116" pos:column="43">EINTR<pos:position pos:line="116" pos:column="48"/></name></expr>)<pos:position pos:line="116" pos:column="49"/></condition>;<pos:position pos:line="116" pos:column="50"/></do>
        }<pos:position pos:line="117" pos:column="10"/></block></else></if>
    }<pos:position pos:line="118" pos:column="6"/></block></while>

    <expr_stmt><expr><operator pos:line="120" pos:column="5">(<pos:position pos:line="120" pos:column="6"/></operator><operator pos:line="120" pos:column="6">*<pos:position pos:line="120" pos:column="7"/></operator><name pos:line="120" pos:column="7">len<pos:position pos:line="120" pos:column="10"/></name><operator pos:line="120" pos:column="10">)<pos:position pos:line="120" pos:column="11"/></operator> <operator pos:line="120" pos:column="12">=<pos:position pos:line="120" pos:column="13"/></operator> <name><name pos:line="120" pos:column="14">parms<pos:position pos:line="120" pos:column="19"/></name><operator pos:line="120" pos:column="19">.<pos:position pos:line="120" pos:column="20"/></operator><name pos:line="120" pos:column="20">bytes_sent<pos:position pos:line="120" pos:column="30"/></name></name></expr>;<pos:position pos:line="120" pos:column="31"/></expr_stmt>

<cpp:if pos:line="122" pos:column="1">#<cpp:directive pos:line="122" pos:column="2">if<pos:position pos:line="122" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="122" pos:column="5">0<pos:position pos:line="122" pos:column="6"/></literal></expr></cpp:if>
    <comment type="block" pos:line="123" pos:column="5">/* Clean up after ourselves */</comment>
    if(hbuf) free(hbuf);
    if(tbuf) free(tbuf);
<cpp:endif pos:line="126" pos:column="1">#<cpp:directive pos:line="126" pos:column="2">endif<pos:position pos:line="126" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="128" pos:column="5">if <condition pos:line="128" pos:column="8">(<expr><name pos:line="128" pos:column="9">rv<pos:position pos:line="128" pos:column="11"/></name> <operator pos:line="128" pos:column="12">==<pos:position pos:line="128" pos:column="14"/></operator> <operator pos:line="128" pos:column="15">-<pos:position pos:line="128" pos:column="16"/></operator><literal type="number" pos:line="128" pos:column="16">1<pos:position pos:line="128" pos:column="17"/></literal></expr>)<pos:position pos:line="128" pos:column="18"/></condition><then pos:line="128" pos:column="18"> <block pos:line="128" pos:column="19">{
        <return pos:line="129" pos:column="9">return <expr><name pos:line="129" pos:column="16">errno<pos:position pos:line="129" pos:column="21"/></name></expr>;<pos:position pos:line="129" pos:column="22"/></return>
    }<pos:position pos:line="130" pos:column="6"/></block></then></if>

    <if pos:line="132" pos:column="5">if <condition pos:line="132" pos:column="8">(<expr><operator pos:line="132" pos:column="9">(<pos:position pos:line="132" pos:column="10"/></operator><name><name pos:line="132" pos:column="10">sock<pos:position pos:line="132" pos:column="14"/></name><operator pos:line="132" pos:column="14">-&gt;<pos:position pos:line="132" pos:column="19"/></operator><name pos:line="132" pos:column="16">timeout<pos:position pos:line="132" pos:column="23"/></name></name> <operator pos:line="132" pos:column="24">&gt;<pos:position pos:line="132" pos:column="28"/></operator> <literal type="number" pos:line="132" pos:column="26">0<pos:position pos:line="132" pos:column="27"/></literal><operator pos:line="132" pos:column="27">)<pos:position pos:line="132" pos:column="28"/></operator>
          <operator pos:line="133" pos:column="11">&amp;&amp;<pos:position pos:line="133" pos:column="21"/></operator> <operator pos:line="133" pos:column="14">(<pos:position pos:line="133" pos:column="15"/></operator><name><name pos:line="133" pos:column="15">parms<pos:position pos:line="133" pos:column="20"/></name><operator pos:line="133" pos:column="20">.<pos:position pos:line="133" pos:column="21"/></operator><name pos:line="133" pos:column="21">bytes_sent<pos:position pos:line="133" pos:column="31"/></name></name> 
                <operator pos:line="134" pos:column="17">&lt;<pos:position pos:line="134" pos:column="21"/></operator> <operator pos:line="134" pos:column="19">(<pos:position pos:line="134" pos:column="20"/></operator><name><name pos:line="134" pos:column="20">parms<pos:position pos:line="134" pos:column="25"/></name><operator pos:line="134" pos:column="25">.<pos:position pos:line="134" pos:column="26"/></operator><name pos:line="134" pos:column="26">file_bytes<pos:position pos:line="134" pos:column="36"/></name></name> <operator pos:line="134" pos:column="37">+<pos:position pos:line="134" pos:column="38"/></operator> <name><name pos:line="134" pos:column="39">parms<pos:position pos:line="134" pos:column="44"/></name><operator pos:line="134" pos:column="44">.<pos:position pos:line="134" pos:column="45"/></operator><name pos:line="134" pos:column="45">header_length<pos:position pos:line="134" pos:column="58"/></name></name> <operator pos:line="134" pos:column="59">+<pos:position pos:line="134" pos:column="60"/></operator> <name><name pos:line="134" pos:column="61">parms<pos:position pos:line="134" pos:column="66"/></name><operator pos:line="134" pos:column="66">.<pos:position pos:line="134" pos:column="67"/></operator><name pos:line="134" pos:column="67">trailer_length<pos:position pos:line="134" pos:column="81"/></name></name><operator pos:line="134" pos:column="81">)<pos:position pos:line="134" pos:column="82"/></operator><operator pos:line="134" pos:column="82">)<pos:position pos:line="134" pos:column="83"/></operator></expr>)<pos:position pos:line="134" pos:column="84"/></condition><then pos:line="134" pos:column="84"> <block pos:line="134" pos:column="85">{
        <expr_stmt><expr><name><name pos:line="135" pos:column="9">sock<pos:position pos:line="135" pos:column="13"/></name><operator pos:line="135" pos:column="13">-&gt;<pos:position pos:line="135" pos:column="18"/></operator><name pos:line="135" pos:column="15">options<pos:position pos:line="135" pos:column="22"/></name></name> <operator pos:line="135" pos:column="23">|=<pos:position pos:line="135" pos:column="25"/></operator> <name pos:line="135" pos:column="26">APR_INCOMPLETE_WRITE<pos:position pos:line="135" pos:column="46"/></name></expr>;<pos:position pos:line="135" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="136" pos:column="6"/></block></then></if>

    <return pos:line="138" pos:column="5">return <expr><name pos:line="138" pos:column="12">APR_SUCCESS<pos:position pos:line="138" pos:column="23"/></name></expr>;<pos:position pos:line="138" pos:column="24"/></return>
}<pos:position pos:line="139" pos:column="2"/></block></function></unit>

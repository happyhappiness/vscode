<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3569_httpd-2.4.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">start_lingering_close_common<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">event_conn_state_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">cs<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">timeout_queue<pos:position pos:line="4" pos:column="25"/></name></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">q<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_socket_t<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">csd<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><name><name pos:line="5" pos:column="25">cs<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">pfd<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">.<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">desc<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">.<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="38">s<pos:position pos:line="5" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">AP_DEBUG<pos:position pos:line="6" pos:column="16"/></name></cpp:ifdef>
    <block pos:line="7" pos:column="5">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">rv<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">apr_socket_timeout_set<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><name pos:line="8" pos:column="37">csd<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="42">0<pos:position pos:line="8" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">AP_DEBUG_ASSERT<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">rv<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">==<pos:position pos:line="9" pos:column="30"/></operator> <name pos:line="9" pos:column="31">APR_SUCCESS<pos:position pos:line="9" pos:column="42"/></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block>
<cpp:else pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">else<pos:position pos:line="11" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">apr_socket_timeout_set<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">csd<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="33">0<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
    <comment type="block" pos:line="14" pos:column="5">/*
     * If some module requested a shortened waiting period, only wait for
     * 2s (SECONDS_TO_LINGER). This is useful for mitigating certain
     * DoS attacks.
     */</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">apr_table_get<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name><name pos:line="19" pos:column="23">cs<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">-&gt;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="27">c<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">notes<pos:position pos:line="19" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="37">"short-lingering-close"<pos:position pos:line="19" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="62"/></condition><then pos:line="19" pos:column="62"> <block pos:line="19" pos:column="63">{
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">cs<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">expiration_time<pos:position pos:line="20" pos:column="28"/></name></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator>
            <call><name pos:line="21" pos:column="13">apr_time_now<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">()<pos:position pos:line="21" pos:column="27"/></argument_list></call> <operator pos:line="21" pos:column="28">+<pos:position pos:line="21" pos:column="29"/></operator> <call><name pos:line="21" pos:column="30">apr_time_from_sec<pos:position pos:line="21" pos:column="47"/></name><argument_list pos:line="21" pos:column="47">(<argument><expr><name pos:line="21" pos:column="48">SECONDS_TO_LINGER<pos:position pos:line="21" pos:column="65"/></name></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="22" pos:column="9">q<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <operator pos:line="22" pos:column="13">&amp;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="14">short_linger_q<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">cs<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">pub<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">.<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">state<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">CONN_STATE_LINGER_SHORT<pos:position pos:line="23" pos:column="48"/></name></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then>
    <else pos:line="25" pos:column="5">else <block pos:line="25" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">cs<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">expiration_time<pos:position pos:line="26" pos:column="28"/></name></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator>
            <call><name pos:line="27" pos:column="13">apr_time_now<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">()<pos:position pos:line="27" pos:column="27"/></argument_list></call> <operator pos:line="27" pos:column="28">+<pos:position pos:line="27" pos:column="29"/></operator> <call><name pos:line="27" pos:column="30">apr_time_from_sec<pos:position pos:line="27" pos:column="47"/></name><argument_list pos:line="27" pos:column="47">(<argument><expr><name pos:line="27" pos:column="48">MAX_SECS_TO_LINGER<pos:position pos:line="27" pos:column="66"/></name></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">q<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <operator pos:line="28" pos:column="13">&amp;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="14">linger_q<pos:position pos:line="28" pos:column="22"/></name></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">cs<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">-&gt;<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="13">pub<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">.<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">state<pos:position pos:line="29" pos:column="22"/></name></name> <operator pos:line="29" pos:column="23">=<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="25">CONN_STATE_LINGER_NORMAL<pos:position pos:line="29" pos:column="49"/></name></expr>;<pos:position pos:line="29" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">apr_atomic_inc32<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><operator pos:line="31" pos:column="22">&amp;<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="23">lingering_count<pos:position pos:line="31" pos:column="38"/></name></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">apr_thread_mutex_lock<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">timeout_mutex<pos:position pos:line="32" pos:column="40"/></name></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">TO_QUEUE_APPEND<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><operator pos:line="33" pos:column="21">*<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">q<pos:position pos:line="33" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="25">cs<pos:position pos:line="33" pos:column="27"/></name></expr></argument>)<pos:position pos:line="33" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">cs<pos:position pos:line="34" pos:column="7"/></name><operator pos:line="34" pos:column="7">-&gt;<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="9">pfd<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">.<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="13">reqevents<pos:position pos:line="34" pos:column="22"/></name></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <name pos:line="34" pos:column="25">APR_POLLIN<pos:position pos:line="34" pos:column="35"/></name> <operator pos:line="34" pos:column="36">|<pos:position pos:line="34" pos:column="37"/></operator> <name pos:line="34" pos:column="38">APR_POLLHUP<pos:position pos:line="34" pos:column="49"/></name> <operator pos:line="34" pos:column="50">|<pos:position pos:line="34" pos:column="51"/></operator> <name pos:line="34" pos:column="52">APR_POLLERR<pos:position pos:line="34" pos:column="63"/></name></expr>;<pos:position pos:line="34" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">rv<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <call><name pos:line="35" pos:column="10">apr_pollset_add<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">event_pollset<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="41">&amp;<pos:position pos:line="35" pos:column="46"/></operator><name><name pos:line="35" pos:column="42">cs<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">-&gt;<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="46">pfd<pos:position pos:line="35" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">apr_thread_mutex_unlock<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><name pos:line="36" pos:column="29">timeout_mutex<pos:position pos:line="36" pos:column="42"/></name></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">rv<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">!=<pos:position pos:line="37" pos:column="14"/></operator> <name pos:line="37" pos:column="15">APR_SUCCESS<pos:position pos:line="37" pos:column="26"/></name> <operator pos:line="37" pos:column="27">&amp;&amp;<pos:position pos:line="37" pos:column="37"/></operator> <operator pos:line="37" pos:column="30">!<pos:position pos:line="37" pos:column="31"/></operator><call><name pos:line="37" pos:column="31">APR_STATUS_IS_EEXIST<pos:position pos:line="37" pos:column="51"/></name><argument_list pos:line="37" pos:column="51">(<argument><expr><name pos:line="37" pos:column="52">rv<pos:position pos:line="37" pos:column="54"/></name></expr></argument>)<pos:position pos:line="37" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="56"/></condition><then pos:line="37" pos:column="56"> <block pos:line="37" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">ap_log_error<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">APLOG_MARK<pos:position pos:line="38" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="34">APLOG_ERR<pos:position pos:line="38" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="45">rv<pos:position pos:line="38" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="49">ap_server_conf<pos:position pos:line="38" pos:column="63"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="39" pos:column="22">"start_lingering_close: apr_pollset_add failure"<pos:position pos:line="39" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">apr_thread_mutex_lock<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">timeout_mutex<pos:position pos:line="40" pos:column="44"/></name></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">TO_QUEUE_REMOVE<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><operator pos:line="41" pos:column="25">*<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="26">q<pos:position pos:line="41" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="29">cs<pos:position pos:line="41" pos:column="31"/></name></expr></argument>)<pos:position pos:line="41" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="42" pos:column="32"/></name><argument_list pos:line="42" pos:column="32">(<argument><expr><name pos:line="42" pos:column="33">timeout_mutex<pos:position pos:line="42" pos:column="46"/></name></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">apr_socket_close<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><name><name pos:line="43" pos:column="26">cs<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">-&gt;<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="30">pfd<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">.<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="34">desc<pos:position pos:line="43" pos:column="38"/></name><operator pos:line="43" pos:column="38">.<pos:position pos:line="43" pos:column="39"/></operator><name pos:line="43" pos:column="39">s<pos:position pos:line="43" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">apr_pool_clear<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><name><name pos:line="44" pos:column="24">cs<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">-&gt;<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="28">p<pos:position pos:line="44" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">ap_push_pool<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">worker_queue_info<pos:position pos:line="45" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="41">cs<pos:position pos:line="45" pos:column="43"/></name><operator pos:line="45" pos:column="43">-&gt;<pos:position pos:line="45" pos:column="48"/></operator><name pos:line="45" pos:column="45">p<pos:position pos:line="45" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="48"/></expr_stmt>
        <return pos:line="46" pos:column="9">return <expr><literal type="number" pos:line="46" pos:column="16">0<pos:position pos:line="46" pos:column="17"/></literal></expr>;<pos:position pos:line="46" pos:column="18"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
    <return pos:line="48" pos:column="5">return <expr><literal type="number" pos:line="48" pos:column="12">1<pos:position pos:line="48" pos:column="13"/></literal></expr>;<pos:position pos:line="48" pos:column="14"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

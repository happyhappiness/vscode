<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1589_httpd-2.4.20.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">cmd_rewriteoptions<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">cmd_parms<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">cmd<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="2" pos:column="39">void<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">in_dconf<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier> <name pos:line="2" pos:column="61">char<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">option<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="74"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">options<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

    <while pos:line="6" pos:column="5">while <condition pos:line="6" pos:column="11">(<expr><operator pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">option<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition> <block pos:line="6" pos:column="21">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">w<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><call><name pos:line="7" pos:column="19">ap_getword_conf<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument><expr><name><name pos:line="7" pos:column="35">cmd<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">-&gt;<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="40">temp_pool<pos:position pos:line="7" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="51">&amp;<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="52">option<pos:position pos:line="7" pos:column="58"/></name></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="60"/></decl_stmt>

        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><call><name pos:line="9" pos:column="14">strcasecmp<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">w<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="28">"inherit"<pos:position pos:line="9" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39"> <block pos:line="9" pos:column="40">{
            <expr_stmt><expr><name pos:line="10" pos:column="13">options<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">|=<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">OPTION_INHERIT<pos:position pos:line="10" pos:column="38"/></name></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="11" pos:column="10"/></block></then>
        <elseif pos:line="12" pos:column="9">else <if pos:line="12" pos:column="14">if <condition pos:line="12" pos:column="17">(<expr><operator pos:line="12" pos:column="18">!<pos:position pos:line="12" pos:column="19"/></operator><call><name pos:line="12" pos:column="19">strcasecmp<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">w<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="33">"inheritbefore"<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="50"/></condition><then pos:line="12" pos:column="50"> <block pos:line="12" pos:column="51">{
            <expr_stmt><expr><name pos:line="13" pos:column="13">options<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">|=<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">OPTION_INHERIT_BEFORE<pos:position pos:line="13" pos:column="45"/></name></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="15" pos:column="9">else <if pos:line="15" pos:column="14">if <condition pos:line="15" pos:column="17">(<expr><operator pos:line="15" pos:column="18">!<pos:position pos:line="15" pos:column="19"/></operator><call><name pos:line="15" pos:column="19">strcasecmp<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">w<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="33">"inheritdown"<pos:position pos:line="15" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="48"/></condition><then pos:line="15" pos:column="48"> <block pos:line="15" pos:column="49">{
            <expr_stmt><expr><name pos:line="16" pos:column="13">options<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">|=<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="24">OPTION_INHERIT_DOWN<pos:position pos:line="16" pos:column="43"/></name></expr>;<pos:position pos:line="16" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="18" pos:column="9">else <if pos:line="18" pos:column="14">if<condition pos:line="18" pos:column="16">(<expr><operator pos:line="18" pos:column="17">!<pos:position pos:line="18" pos:column="18"/></operator><call><name pos:line="18" pos:column="18">strcasecmp<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">w<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="32">"inheritdownbefore"<pos:position pos:line="18" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="53"/></condition><then pos:line="18" pos:column="53"> <block pos:line="18" pos:column="54">{
            <expr_stmt><expr><name pos:line="19" pos:column="13">options<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">|=<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="24">OPTION_INHERIT_DOWN_BEFORE<pos:position pos:line="19" pos:column="50"/></name></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="21" pos:column="9">else <if pos:line="21" pos:column="14">if <condition pos:line="21" pos:column="17">(<expr><operator pos:line="21" pos:column="18">!<pos:position pos:line="21" pos:column="19"/></operator><call><name pos:line="21" pos:column="19">strcasecmp<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">w<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="33">"ignoreinherit"<pos:position pos:line="21" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="50"/></condition><then pos:line="21" pos:column="50"> <block pos:line="21" pos:column="51">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">options<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">|=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">OPTION_IGNORE_INHERIT<pos:position pos:line="22" pos:column="45"/></name></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="24" pos:column="9">else <if pos:line="24" pos:column="14">if <condition pos:line="24" pos:column="17">(<expr><operator pos:line="24" pos:column="18">!<pos:position pos:line="24" pos:column="19"/></operator><call><name pos:line="24" pos:column="19">strcasecmp<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">w<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="33">"allownoslash"<pos:position pos:line="24" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="49"/></condition><then pos:line="24" pos:column="49"> <block pos:line="24" pos:column="50">{
            <expr_stmt><expr><name pos:line="25" pos:column="13">options<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">|=<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="24">OPTION_NOSLASH<pos:position pos:line="25" pos:column="38"/></name></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="27" pos:column="9">else <if pos:line="27" pos:column="14">if <condition pos:line="27" pos:column="17">(<expr><operator pos:line="27" pos:column="18">!<pos:position pos:line="27" pos:column="19"/></operator><call><name pos:line="27" pos:column="19">strncasecmp<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">w<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="34">"MaxRedirects="<pos:position pos:line="27" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="51">13<pos:position pos:line="27" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="55"/></condition><then pos:line="27" pos:column="55"> <block pos:line="27" pos:column="56">{
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">ap_log_error<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">APLOG_MARK<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="38">APLOG_WARNING<pos:position pos:line="28" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="53">0<pos:position pos:line="28" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="56">cmd<pos:position pos:line="28" pos:column="59"/></name><operator pos:line="28" pos:column="59">-&gt;<pos:position pos:line="28" pos:column="64"/></operator><name pos:line="28" pos:column="61">server<pos:position pos:line="28" pos:column="67"/></name></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="69">APLOGNO<pos:position pos:line="28" pos:column="76"/></name><argument_list pos:line="28" pos:column="76">(<argument><expr><literal type="number" pos:line="28" pos:column="77">00664<pos:position pos:line="28" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="83"/></argument_list></call>
                         <literal type="string" pos:line="29" pos:column="26">"RewriteOptions: MaxRedirects option has been "<pos:position pos:line="29" pos:column="73"/></literal>
                         <literal type="string" pos:line="30" pos:column="26">"removed in favor of the global "<pos:position pos:line="30" pos:column="59"/></literal>
                         <literal type="string" pos:line="31" pos:column="26">"LimitInternalRecursion directive and will be "<pos:position pos:line="31" pos:column="73"/></literal>
                         <literal type="string" pos:line="32" pos:column="26">"ignored."<pos:position pos:line="32" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="34" pos:column="9">else <if pos:line="34" pos:column="14">if <condition pos:line="34" pos:column="17">(<expr><operator pos:line="34" pos:column="18">!<pos:position pos:line="34" pos:column="19"/></operator><call><name pos:line="34" pos:column="19">strcasecmp<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">w<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="33">"allowanyuri"<pos:position pos:line="34" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="48"/></condition><then pos:line="34" pos:column="48"> <block pos:line="34" pos:column="49">{
            <expr_stmt><expr><name pos:line="35" pos:column="13">options<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">|=<pos:position pos:line="35" pos:column="23"/></operator> <name pos:line="35" pos:column="24">OPTION_ANYURI<pos:position pos:line="35" pos:column="37"/></name></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="37" pos:column="9">else <if pos:line="37" pos:column="14">if <condition pos:line="37" pos:column="17">(<expr><operator pos:line="37" pos:column="18">!<pos:position pos:line="37" pos:column="19"/></operator><call><name pos:line="37" pos:column="19">strcasecmp<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name pos:line="37" pos:column="30">w<pos:position pos:line="37" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="33">"mergebase"<pos:position pos:line="37" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="46"/></condition><then pos:line="37" pos:column="46"> <block pos:line="37" pos:column="47">{
            <expr_stmt><expr><name pos:line="38" pos:column="13">options<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">|=<pos:position pos:line="38" pos:column="23"/></operator> <name pos:line="38" pos:column="24">OPTION_MERGEBASE<pos:position pos:line="38" pos:column="40"/></name></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="40" pos:column="9">else <if pos:line="40" pos:column="14">if <condition pos:line="40" pos:column="17">(<expr><operator pos:line="40" pos:column="18">!<pos:position pos:line="40" pos:column="19"/></operator><call><name pos:line="40" pos:column="19">strcasecmp<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">w<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="33">"ignorecontextinfo"<pos:position pos:line="40" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="54"/></condition><then pos:line="40" pos:column="54"> <block pos:line="40" pos:column="55">{
            <expr_stmt><expr><name pos:line="41" pos:column="13">options<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">|=<pos:position pos:line="41" pos:column="23"/></operator> <name pos:line="41" pos:column="24">OPTION_IGNORE_CONTEXT_INFO<pos:position pos:line="41" pos:column="50"/></name></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if></elseif>
        <else pos:line="43" pos:column="9">else <block pos:line="43" pos:column="14">{
            <return pos:line="44" pos:column="13">return <expr><call><name pos:line="44" pos:column="20">apr_pstrcat<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><name><name pos:line="44" pos:column="32">cmd<pos:position pos:line="44" pos:column="35"/></name><operator pos:line="44" pos:column="35">-&gt;<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="37">pool<pos:position pos:line="44" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="43">"RewriteOptions: unknown option '"<pos:position pos:line="44" pos:column="77"/></literal></expr></argument>,
                               <argument><expr><name pos:line="45" pos:column="32">w<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="35">"'"<pos:position pos:line="45" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="40">NULL<pos:position pos:line="45" pos:column="44"/></name></expr></argument>)<pos:position pos:line="45" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="46"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></else></if>
    }<pos:position pos:line="47" pos:column="6"/></block></while>

    <comment type="block" pos:line="49" pos:column="5">/* server command? set both global scope and base directory scope */</comment>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name><name pos:line="50" pos:column="9">cmd<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">-&gt;<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="14">path<pos:position pos:line="50" pos:column="18"/></name></name> <operator pos:line="50" pos:column="19">==<pos:position pos:line="50" pos:column="21"/></operator> <name pos:line="50" pos:column="22">NULL<pos:position pos:line="50" pos:column="26"/></name></expr>)<pos:position pos:line="50" pos:column="27"/></condition><then pos:line="50" pos:column="27"> <block pos:line="50" pos:column="28">{ <comment type="block" pos:line="50" pos:column="30">/* is server command */</comment>
        <decl_stmt><decl><type><name pos:line="51" pos:column="9">rewrite_perdir_conf<pos:position pos:line="51" pos:column="28"/></name> <modifier pos:line="51" pos:column="29">*<pos:position pos:line="51" pos:column="30"/></modifier></type><name pos:line="51" pos:column="30">dconf<pos:position pos:line="51" pos:column="35"/></name> <init pos:line="51" pos:column="36">= <expr><name pos:line="51" pos:column="38">in_dconf<pos:position pos:line="51" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="51" pos:column="47"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="52" pos:column="9">rewrite_server_conf<pos:position pos:line="52" pos:column="28"/></name> <modifier pos:line="52" pos:column="29">*<pos:position pos:line="52" pos:column="30"/></modifier></type><name pos:line="52" pos:column="30">sconf<pos:position pos:line="52" pos:column="35"/></name> <init pos:line="52" pos:column="36">=
            <expr><call><name pos:line="53" pos:column="13">ap_get_module_config<pos:position pos:line="53" pos:column="33"/></name><argument_list pos:line="53" pos:column="33">(<argument><expr><name><name pos:line="53" pos:column="34">cmd<pos:position pos:line="53" pos:column="37"/></name><operator pos:line="53" pos:column="37">-&gt;<pos:position pos:line="53" pos:column="42"/></operator><name pos:line="53" pos:column="39">server<pos:position pos:line="53" pos:column="45"/></name><operator pos:line="53" pos:column="45">-&gt;<pos:position pos:line="53" pos:column="50"/></operator><name pos:line="53" pos:column="47">module_config<pos:position pos:line="53" pos:column="60"/></name></name></expr></argument>,
                                 <argument><expr><operator pos:line="54" pos:column="34">&amp;<pos:position pos:line="54" pos:column="39"/></operator><name pos:line="54" pos:column="35">rewrite_module<pos:position pos:line="54" pos:column="49"/></name></expr></argument>)<pos:position pos:line="54" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="54" pos:column="51"/></decl_stmt>

        <expr_stmt><expr><name><name pos:line="56" pos:column="9">sconf<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">options<pos:position pos:line="56" pos:column="23"/></name></name> <operator pos:line="56" pos:column="24">|=<pos:position pos:line="56" pos:column="26"/></operator> <name pos:line="56" pos:column="27">options<pos:position pos:line="56" pos:column="34"/></name></expr>;<pos:position pos:line="56" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="57" pos:column="9">sconf<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">-&gt;<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="16">options_set<pos:position pos:line="57" pos:column="27"/></name></name> <operator pos:line="57" pos:column="28">=<pos:position pos:line="57" pos:column="29"/></operator> <literal type="number" pos:line="57" pos:column="30">1<pos:position pos:line="57" pos:column="31"/></literal></expr>;<pos:position pos:line="57" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="58" pos:column="9">dconf<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">-&gt;<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="16">options<pos:position pos:line="58" pos:column="23"/></name></name> <operator pos:line="58" pos:column="24">|=<pos:position pos:line="58" pos:column="26"/></operator> <name pos:line="58" pos:column="27">options<pos:position pos:line="58" pos:column="34"/></name></expr>;<pos:position pos:line="58" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="59" pos:column="9">dconf<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">-&gt;<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="16">options_set<pos:position pos:line="59" pos:column="27"/></name></name> <operator pos:line="59" pos:column="28">=<pos:position pos:line="59" pos:column="29"/></operator> <literal type="number" pos:line="59" pos:column="30">1<pos:position pos:line="59" pos:column="31"/></literal></expr>;<pos:position pos:line="59" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then>
    <comment type="block" pos:line="61" pos:column="5">/* directory command? set directory scope only */</comment>
    <else pos:line="62" pos:column="5">else <block pos:line="62" pos:column="10">{                  <comment type="block" pos:line="62" pos:column="29">/* is per-directory command */</comment>
        <decl_stmt><decl><type><name pos:line="63" pos:column="9">rewrite_perdir_conf<pos:position pos:line="63" pos:column="28"/></name> <modifier pos:line="63" pos:column="29">*<pos:position pos:line="63" pos:column="30"/></modifier></type><name pos:line="63" pos:column="30">dconf<pos:position pos:line="63" pos:column="35"/></name> <init pos:line="63" pos:column="36">= <expr><name pos:line="63" pos:column="38">in_dconf<pos:position pos:line="63" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="63" pos:column="47"/></decl_stmt>

        <expr_stmt><expr><name><name pos:line="65" pos:column="9">dconf<pos:position pos:line="65" pos:column="14"/></name><operator pos:line="65" pos:column="14">-&gt;<pos:position pos:line="65" pos:column="19"/></operator><name pos:line="65" pos:column="16">options<pos:position pos:line="65" pos:column="23"/></name></name> <operator pos:line="65" pos:column="24">|=<pos:position pos:line="65" pos:column="26"/></operator> <name pos:line="65" pos:column="27">options<pos:position pos:line="65" pos:column="34"/></name></expr>;<pos:position pos:line="65" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="66" pos:column="9">dconf<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">options_set<pos:position pos:line="66" pos:column="27"/></name></name> <operator pos:line="66" pos:column="28">=<pos:position pos:line="66" pos:column="29"/></operator> <literal type="number" pos:line="66" pos:column="30">1<pos:position pos:line="66" pos:column="31"/></literal></expr>;<pos:position pos:line="66" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></else></if>

    <return pos:line="69" pos:column="5">return <expr><name pos:line="69" pos:column="12">NULL<pos:position pos:line="69" pos:column="16"/></name></expr>;<pos:position pos:line="69" pos:column="17"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

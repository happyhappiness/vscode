<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2813_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">merge_ct_filters<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">apr_pool_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">p<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">void<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">key<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="3" pos:column="31">apr_ssize_t<pos:position pos:line="3" pos:column="42"/></name></type> <name pos:line="3" pos:column="43">klen<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="4" pos:column="31">const<pos:position pos:line="4" pos:column="36"/></specifier> <name pos:line="4" pos:column="37">void<pos:position pos:line="4" pos:column="41"/></name> <modifier pos:line="4" pos:column="42">*<pos:position pos:line="4" pos:column="43"/></modifier></type><name pos:line="4" pos:column="43">overlay_val<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="5" pos:column="31">const<pos:position pos:line="5" pos:column="36"/></specifier> <name pos:line="5" pos:column="37">void<pos:position pos:line="5" pos:column="41"/></name> <modifier pos:line="5" pos:column="42">*<pos:position pos:line="5" pos:column="43"/></modifier></type><name pos:line="5" pos:column="43">base_val<pos:position pos:line="5" pos:column="51"/></name></decl></parameter>,
                              <parameter><decl><type><specifier pos:line="6" pos:column="31">const<pos:position pos:line="6" pos:column="36"/></specifier> <name pos:line="6" pos:column="37">void<pos:position pos:line="6" pos:column="41"/></name> <modifier pos:line="6" pos:column="42">*<pos:position pos:line="6" pos:column="43"/></modifier></type><name pos:line="6" pos:column="43">data<pos:position pos:line="6" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="48"/></parameter_list>
<block pos:line="7" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ap_filter_rec_t<pos:position pos:line="8" pos:column="20"/></name> <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type><name pos:line="8" pos:column="22">cur<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">ap_filter_rec_t<pos:position pos:line="9" pos:column="26"/></name> <modifier pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></modifier></type><name pos:line="9" pos:column="28">overlay_info<pos:position pos:line="9" pos:column="40"/></name> <init pos:line="9" pos:column="41">= <expr><operator pos:line="9" pos:column="43">(<pos:position pos:line="9" pos:column="44"/></operator><specifier pos:line="9" pos:column="44">const<pos:position pos:line="9" pos:column="49"/></specifier> <name pos:line="9" pos:column="50">ap_filter_rec_t<pos:position pos:line="9" pos:column="65"/></name> <operator pos:line="9" pos:column="66">*<pos:position pos:line="9" pos:column="67"/></operator><operator pos:line="9" pos:column="67">)<pos:position pos:line="9" pos:column="68"/></operator><name pos:line="9" pos:column="68">overlay_val<pos:position pos:line="9" pos:column="79"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="80"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">ap_filter_rec_t<pos:position pos:line="10" pos:column="26"/></name> <modifier pos:line="10" pos:column="27">*<pos:position pos:line="10" pos:column="28"/></modifier></type><name pos:line="10" pos:column="28">base_info<pos:position pos:line="10" pos:column="37"/></name> <init pos:line="10" pos:column="38">= <expr><operator pos:line="10" pos:column="40">(<pos:position pos:line="10" pos:column="41"/></operator><specifier pos:line="10" pos:column="41">const<pos:position pos:line="10" pos:column="46"/></specifier> <name pos:line="10" pos:column="47">ap_filter_rec_t<pos:position pos:line="10" pos:column="62"/></name> <operator pos:line="10" pos:column="63">*<pos:position pos:line="10" pos:column="64"/></operator><operator pos:line="10" pos:column="64">)<pos:position pos:line="10" pos:column="65"/></operator><name pos:line="10" pos:column="65">base_val<pos:position pos:line="10" pos:column="73"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="74"/></decl_stmt>

    <expr_stmt><expr><name pos:line="12" pos:column="5">cur<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <name pos:line="12" pos:column="11">NULL<pos:position pos:line="12" pos:column="15"/></name></expr>;<pos:position pos:line="12" pos:column="16"/></expr_stmt>

    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">overlay_info<pos:position pos:line="14" pos:column="24"/></name></expr>)<pos:position pos:line="14" pos:column="25"/></condition> <block pos:line="14" pos:column="26">{
        <expr_stmt><expr><name pos:line="15" pos:column="9">ap_filter_rec_t<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">*<pos:position pos:line="15" pos:column="26"/></operator><operator pos:line="15" pos:column="26">new<pos:position pos:line="15" pos:column="29"/></operator></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>

        <expr_stmt><expr><operator pos:line="17" pos:column="9">new<pos:position pos:line="17" pos:column="12"/></operator> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">apr_pcalloc<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">p<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="30">sizeof<argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">ap_filter_rec_t<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="18" pos:column="9">new<pos:position pos:line="18" pos:column="12"/></operator><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">name<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <call><name pos:line="18" pos:column="21">apr_pstrdup<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">p<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="36">overlay_info<pos:position pos:line="18" pos:column="48"/></name><operator pos:line="18" pos:column="48">-&gt;<pos:position pos:line="18" pos:column="53"/></operator><name pos:line="18" pos:column="50">name<pos:position pos:line="18" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="19" pos:column="9">new<pos:position pos:line="19" pos:column="12"/></operator><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">next<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <name pos:line="19" pos:column="21">cur<pos:position pos:line="19" pos:column="24"/></name></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">cur<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <operator pos:line="20" pos:column="15">new<pos:position pos:line="20" pos:column="18"/></operator></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">overlay_info<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <name><name pos:line="21" pos:column="24">overlay_info<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">-&gt;<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="38">next<pos:position pos:line="21" pos:column="42"/></name></name></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></while>

    <while pos:line="24" pos:column="5">while <condition pos:line="24" pos:column="11">(<expr><name pos:line="24" pos:column="12">base_info<pos:position pos:line="24" pos:column="21"/></name></expr>)<pos:position pos:line="24" pos:column="22"/></condition> <block pos:line="24" pos:column="23">{
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">ap_filter_rec_t<pos:position pos:line="25" pos:column="24"/></name> <modifier pos:line="25" pos:column="25">*<pos:position pos:line="25" pos:column="26"/></modifier></type><name pos:line="25" pos:column="26">f<pos:position pos:line="25" pos:column="27"/></name></decl>;<pos:position pos:line="25" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">int<pos:position pos:line="26" pos:column="12"/></name></type> <name pos:line="26" pos:column="13">found<pos:position pos:line="26" pos:column="18"/></name> <init pos:line="26" pos:column="19">= <expr><literal type="number" pos:line="26" pos:column="21">0<pos:position pos:line="26" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="23"/></decl_stmt>

        <comment type="block" pos:line="28" pos:column="9">/* We can't have dups. */</comment>
        <expr_stmt><expr><name pos:line="29" pos:column="9">f<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <name pos:line="29" pos:column="13">cur<pos:position pos:line="29" pos:column="16"/></name></expr>;<pos:position pos:line="29" pos:column="17"/></expr_stmt>
        <while pos:line="30" pos:column="9">while <condition pos:line="30" pos:column="15">(<expr><name pos:line="30" pos:column="16">f<pos:position pos:line="30" pos:column="17"/></name></expr>)<pos:position pos:line="30" pos:column="18"/></condition> <block pos:line="30" pos:column="19">{
            <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><operator pos:line="31" pos:column="17">!<pos:position pos:line="31" pos:column="18"/></operator><call><name pos:line="31" pos:column="18">strcasecmp<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><name><name pos:line="31" pos:column="29">base_info<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">-&gt;<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="40">name<pos:position pos:line="31" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="46">f<pos:position pos:line="31" pos:column="47"/></name><operator pos:line="31" pos:column="47">-&gt;<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="49">name<pos:position pos:line="31" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="55"/></condition><then pos:line="31" pos:column="55"> <block pos:line="31" pos:column="56">{
                <expr_stmt><expr><name pos:line="32" pos:column="17">found<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <literal type="number" pos:line="32" pos:column="25">1<pos:position pos:line="32" pos:column="26"/></literal></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt>
                <break pos:line="33" pos:column="17">break;<pos:position pos:line="33" pos:column="23"/></break>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="36" pos:column="13">f<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <name><name pos:line="36" pos:column="17">f<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">-&gt;<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="20">next<pos:position pos:line="36" pos:column="24"/></name></name></expr>;<pos:position pos:line="36" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></while>

        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><operator pos:line="39" pos:column="13">!<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">found<pos:position pos:line="39" pos:column="19"/></name></expr>)<pos:position pos:line="39" pos:column="20"/></condition><then pos:line="39" pos:column="20"> <block pos:line="39" pos:column="21">{
            <expr_stmt><expr><name pos:line="40" pos:column="13">f<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">=<pos:position pos:line="40" pos:column="16"/></operator> <call><name pos:line="40" pos:column="17">apr_pcalloc<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><name pos:line="40" pos:column="29">p<pos:position pos:line="40" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="32">sizeof<argument_list pos:line="40" pos:column="38">(<argument><expr><name pos:line="40" pos:column="39">ap_filter_rec_t<pos:position pos:line="40" pos:column="54"/></name></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="41" pos:column="13">f<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">-&gt;<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="16">name<pos:position pos:line="41" pos:column="20"/></name></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <call><name pos:line="41" pos:column="23">apr_pstrdup<pos:position pos:line="41" pos:column="34"/></name><argument_list pos:line="41" pos:column="34">(<argument><expr><name pos:line="41" pos:column="35">p<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="38">base_info<pos:position pos:line="41" pos:column="47"/></name><operator pos:line="41" pos:column="47">-&gt;<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="49">name<pos:position pos:line="41" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="42" pos:column="13">f<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">-&gt;<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="16">next<pos:position pos:line="42" pos:column="20"/></name></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <name pos:line="42" pos:column="23">cur<pos:position pos:line="42" pos:column="26"/></name></expr>;<pos:position pos:line="42" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><name pos:line="43" pos:column="13">cur<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <name pos:line="43" pos:column="19">f<pos:position pos:line="43" pos:column="20"/></name></expr>;<pos:position pos:line="43" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="46" pos:column="9">base_info<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <name><name pos:line="46" pos:column="21">base_info<pos:position pos:line="46" pos:column="30"/></name><operator pos:line="46" pos:column="30">-&gt;<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="32">next<pos:position pos:line="46" pos:column="36"/></name></name></expr>;<pos:position pos:line="46" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></while>

    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">cur<pos:position pos:line="49" pos:column="15"/></name></expr>;<pos:position pos:line="49" pos:column="16"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_311_httpd-2.2.16.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">dav_error<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">dav_validate_resource_state<pos:position pos:line="1" pos:column="47"/></name><parameter_list pos:line="1" pos:column="47">(<parameter><decl><type><name pos:line="1" pos:column="48">apr_pool_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">p<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                                               <parameter><decl><type><specifier pos:line="2" pos:column="48">const<pos:position pos:line="2" pos:column="53"/></specifier> <name pos:line="2" pos:column="54">dav_resource<pos:position pos:line="2" pos:column="66"/></name> <modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">resource<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>,
                                               <parameter><decl><type><name pos:line="3" pos:column="48">dav_lockdb<pos:position pos:line="3" pos:column="58"/></name> <modifier pos:line="3" pos:column="59">*<pos:position pos:line="3" pos:column="60"/></modifier></type><name pos:line="3" pos:column="60">lockdb<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>,
                                               <parameter><decl><type><specifier pos:line="4" pos:column="48">const<pos:position pos:line="4" pos:column="53"/></specifier> <name pos:line="4" pos:column="54">dav_if_header<pos:position pos:line="4" pos:column="67"/></name> <modifier pos:line="4" pos:column="68">*<pos:position pos:line="4" pos:column="69"/></modifier></type><name pos:line="4" pos:column="69">if_header<pos:position pos:line="4" pos:column="78"/></name></decl></parameter>,
                                               <parameter><decl><type><name pos:line="5" pos:column="48">int<pos:position pos:line="5" pos:column="51"/></name></type> <name pos:line="5" pos:column="52">flags<pos:position pos:line="5" pos:column="57"/></name></decl></parameter>,
                                               <parameter><decl><type><name pos:line="6" pos:column="48">dav_buffer<pos:position pos:line="6" pos:column="58"/></name> <modifier pos:line="6" pos:column="59">*<pos:position pos:line="6" pos:column="60"/></modifier></type><name pos:line="6" pos:column="60">pbuf<pos:position pos:line="6" pos:column="64"/></name></decl></parameter>,
                                               <parameter><decl><type><name pos:line="7" pos:column="48">request_rec<pos:position pos:line="7" pos:column="59"/></name> <modifier pos:line="7" pos:column="60">*<pos:position pos:line="7" pos:column="61"/></modifier></type><name pos:line="7" pos:column="61">r<pos:position pos:line="7" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="63"/></parameter_list>
<block pos:line="8" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">dav_error<pos:position pos:line="9" pos:column="14"/></name> <modifier pos:line="9" pos:column="15">*<pos:position pos:line="9" pos:column="16"/></modifier></type><name pos:line="9" pos:column="16">err<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">uri<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">etag<pos:position pos:line="11" pos:column="21"/></name></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">dav_hooks_locks<pos:position pos:line="12" pos:column="26"/></name> <modifier pos:line="12" pos:column="27">*<pos:position pos:line="12" pos:column="28"/></modifier></type><name pos:line="12" pos:column="28">locks_hooks<pos:position pos:line="12" pos:column="39"/></name> <init pos:line="12" pos:column="40">= <expr><operator pos:line="12" pos:column="42">(<pos:position pos:line="12" pos:column="43"/></operator><ternary><condition><expr><name pos:line="12" pos:column="43">lockdb<pos:position pos:line="12" pos:column="49"/></name></expr> ?<pos:position pos:line="12" pos:column="51"/></condition><then pos:line="12" pos:column="51"> <expr><name><name pos:line="12" pos:column="52">lockdb<pos:position pos:line="12" pos:column="58"/></name><operator pos:line="12" pos:column="58">-&gt;<pos:position pos:line="12" pos:column="63"/></operator><name pos:line="12" pos:column="60">hooks<pos:position pos:line="12" pos:column="65"/></name></name></expr> <pos:position pos:line="12" pos:column="66"/></then><else pos:line="12" pos:column="66">: <expr><name pos:line="12" pos:column="68">NULL<pos:position pos:line="12" pos:column="72"/></name></expr></else></ternary><operator pos:line="12" pos:column="72">)<pos:position pos:line="12" pos:column="73"/></operator></expr></init></decl>;<pos:position pos:line="12" pos:column="74"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">dav_if_header<pos:position pos:line="13" pos:column="24"/></name> <modifier pos:line="13" pos:column="25">*<pos:position pos:line="13" pos:column="26"/></modifier></type><name pos:line="13" pos:column="26">ifhdr_scan<pos:position pos:line="13" pos:column="36"/></name></decl>;<pos:position pos:line="13" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">dav_if_state_list<pos:position pos:line="14" pos:column="22"/></name> <modifier pos:line="14" pos:column="23">*<pos:position pos:line="14" pos:column="24"/></modifier></type><name pos:line="14" pos:column="24">state_list<pos:position pos:line="14" pos:column="34"/></name></decl>;<pos:position pos:line="14" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">dav_lock<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">lock_list<pos:position pos:line="15" pos:column="24"/></name></decl>;<pos:position pos:line="15" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">dav_lock<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">lock<pos:position pos:line="16" pos:column="19"/></name></decl>;<pos:position pos:line="16" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">num_matched<pos:position pos:line="17" pos:column="20"/></name></decl>;<pos:position pos:line="17" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">num_that_apply<pos:position pos:line="18" pos:column="23"/></name></decl>;<pos:position pos:line="18" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">seen_locktoken<pos:position pos:line="19" pos:column="23"/></name></decl>;<pos:position pos:line="19" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">apr_size_t<pos:position pos:line="20" pos:column="15"/></name></type> <name pos:line="20" pos:column="16">uri_len<pos:position pos:line="20" pos:column="23"/></name></decl>;<pos:position pos:line="20" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="21" pos:column="5">const<pos:position pos:line="21" pos:column="10"/></specifier> <name pos:line="21" pos:column="11">char<pos:position pos:line="21" pos:column="15"/></name> <modifier pos:line="21" pos:column="16">*<pos:position pos:line="21" pos:column="17"/></modifier></type><name pos:line="21" pos:column="17">reason<pos:position pos:line="21" pos:column="23"/></name> <init pos:line="21" pos:column="24">= <expr><name pos:line="21" pos:column="26">NULL<pos:position pos:line="21" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="31"/></decl_stmt>

    <comment type="block" pos:line="23" pos:column="5">/* DBG1("validate: &lt;%s&gt;", resource-&gt;uri); */</comment>

    <comment type="block" pos:line="25" pos:column="5">/*
    ** The resource will have one of three states:
    **
    ** 1) No locks. We have no special requirements that the user supply
    **    specific locktokens. One of the state lists must match, and
    **    we're done.
    **
    ** 2) One exclusive lock. The locktoken must appear *anywhere* in the
    **    If: header. Of course, asserting the token in a "Not" term will
    **    quickly fail that state list :-). If the locktoken appears in
    **    one of the state lists *and* one state list matches, then we're
    **    done.
    **
    ** 3) One or more shared locks. One of the locktokens must appear
    **    *anywhere* in the If: header. If one of the locktokens appears,
    **    and we match one state list, then we are done.
    **
    ** The &lt;seen_locktoken&gt; variable determines whether we have seen one
    ** of this resource's locktokens in the If: header.
    */</comment>

    <comment type="block" pos:line="46" pos:column="5">/*
    ** If this is a new lock request, &lt;flags&gt; will contain the requested
    ** lock scope.  Three rules apply:
    **
    ** 1) Do not require a (shared) locktoken to be seen (when we are
    **    applying another shared lock)
    ** 2) If the scope is exclusive and we see any locks, fail.
    ** 3) If the scope is shared and we see an exclusive lock, fail.
    */</comment>

    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">lockdb<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">==<pos:position pos:line="56" pos:column="18"/></operator> <name pos:line="56" pos:column="19">NULL<pos:position pos:line="56" pos:column="23"/></name></expr>)<pos:position pos:line="56" pos:column="24"/></condition><then pos:line="56" pos:column="24"> <block pos:line="56" pos:column="25">{
        <comment type="block" pos:line="57" pos:column="9">/* we're in State 1. no locks. */</comment>
        <expr_stmt><expr><name pos:line="58" pos:column="9">lock_list<pos:position pos:line="58" pos:column="18"/></name> <operator pos:line="58" pos:column="19">=<pos:position pos:line="58" pos:column="20"/></operator> <name pos:line="58" pos:column="21">NULL<pos:position pos:line="58" pos:column="25"/></name></expr>;<pos:position pos:line="58" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then>
    <else pos:line="60" pos:column="5">else <block pos:line="60" pos:column="10">{
        <comment type="block" pos:line="61" pos:column="9">/*
        ** ### hrm... we don't need to have these fully
        ** ### resolved since we're only looking at the
        ** ### locktokens...
        **
        ** ### use get_locks w/ calltype=PARTIAL
        */</comment>
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><operator pos:line="68" pos:column="13">(<pos:position pos:line="68" pos:column="14"/></operator><name pos:line="68" pos:column="14">err<pos:position pos:line="68" pos:column="17"/></name> <operator pos:line="68" pos:column="18">=<pos:position pos:line="68" pos:column="19"/></operator> <call><name pos:line="68" pos:column="20">dav_lock_query<pos:position pos:line="68" pos:column="34"/></name><argument_list pos:line="68" pos:column="34">(<argument><expr><name pos:line="68" pos:column="35">lockdb<pos:position pos:line="68" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="43">resource<pos:position pos:line="68" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="53">&amp;<pos:position pos:line="68" pos:column="58"/></operator><name pos:line="68" pos:column="54">lock_list<pos:position pos:line="68" pos:column="63"/></name></expr></argument>)<pos:position pos:line="68" pos:column="64"/></argument_list></call><operator pos:line="68" pos:column="64">)<pos:position pos:line="68" pos:column="65"/></operator> <operator pos:line="68" pos:column="66">!=<pos:position pos:line="68" pos:column="68"/></operator> <name pos:line="68" pos:column="69">NULL<pos:position pos:line="68" pos:column="73"/></name></expr>)<pos:position pos:line="68" pos:column="74"/></condition><then pos:line="68" pos:column="74"> <block pos:line="68" pos:column="75">{
            <return pos:line="69" pos:column="13">return <expr><call><name pos:line="69" pos:column="20">dav_push_error<pos:position pos:line="69" pos:column="34"/></name><argument_list pos:line="69" pos:column="34">(<argument><expr><name pos:line="69" pos:column="35">p<pos:position pos:line="69" pos:column="36"/></name></expr></argument>,
                                  <argument><expr><name pos:line="70" pos:column="35">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="70" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="63">0<pos:position pos:line="70" pos:column="64"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="71" pos:column="35">"The locks could not be queried for "<pos:position pos:line="71" pos:column="72"/></literal>
                                  <literal type="string" pos:line="72" pos:column="35">"verification against a possible \"If:\" "<pos:position pos:line="72" pos:column="77"/></literal>
                                  <literal type="string" pos:line="73" pos:column="35">"header."<pos:position pos:line="73" pos:column="44"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="74" pos:column="35">err<pos:position pos:line="74" pos:column="38"/></name></expr></argument>)<pos:position pos:line="74" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="40"/></return>
        }<pos:position pos:line="75" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="77" pos:column="9">/* lock_list now determines whether we're in State 1, 2, or 3. */</comment>
    }<pos:position pos:line="78" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="80" pos:column="5">/*
    ** For a new, exclusive lock: if any locks exist, fail.
    ** For a new, shared lock:    if an exclusive lock exists, fail.
    **                            else, do not require a token to be seen.
    */</comment>
    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><name pos:line="85" pos:column="9">flags<pos:position pos:line="85" pos:column="14"/></name> <operator pos:line="85" pos:column="15">&amp;<pos:position pos:line="85" pos:column="20"/></operator> <name pos:line="85" pos:column="17">DAV_LOCKSCOPE_EXCLUSIVE<pos:position pos:line="85" pos:column="40"/></name></expr>)<pos:position pos:line="85" pos:column="41"/></condition><then pos:line="85" pos:column="41"> <block pos:line="85" pos:column="42">{
        <if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><name pos:line="86" pos:column="13">lock_list<pos:position pos:line="86" pos:column="22"/></name> <operator pos:line="86" pos:column="23">!=<pos:position pos:line="86" pos:column="25"/></operator> <name pos:line="86" pos:column="26">NULL<pos:position pos:line="86" pos:column="30"/></name></expr>)<pos:position pos:line="86" pos:column="31"/></condition><then pos:line="86" pos:column="31"> <block pos:line="86" pos:column="32">{
            <return pos:line="87" pos:column="13">return <expr><call><name pos:line="87" pos:column="20">dav_new_error<pos:position pos:line="87" pos:column="33"/></name><argument_list pos:line="87" pos:column="33">(<argument><expr><name pos:line="87" pos:column="34">p<pos:position pos:line="87" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="37">HTTP_LOCKED<pos:position pos:line="87" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="50">0<pos:position pos:line="87" pos:column="51"/></literal></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="88" pos:column="34">"Existing lock(s) on the requested resource "<pos:position pos:line="88" pos:column="79"/></literal>
                                 <literal type="string" pos:line="89" pos:column="34">"prevent an exclusive lock."<pos:position pos:line="89" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="64"/></return>
        }<pos:position pos:line="90" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="92" pos:column="9">/*
        ** There are no locks, so we can pretend that we've already met
        ** any requirement to find the resource's locks in an If: header.
        */</comment>
        <expr_stmt><expr><name pos:line="96" pos:column="9">seen_locktoken<pos:position pos:line="96" pos:column="23"/></name> <operator pos:line="96" pos:column="24">=<pos:position pos:line="96" pos:column="25"/></operator> <literal type="number" pos:line="96" pos:column="26">1<pos:position pos:line="96" pos:column="27"/></literal></expr>;<pos:position pos:line="96" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="97" pos:column="6"/></block></then>
    <elseif pos:line="98" pos:column="5">else <if pos:line="98" pos:column="10">if <condition pos:line="98" pos:column="13">(<expr><name pos:line="98" pos:column="14">flags<pos:position pos:line="98" pos:column="19"/></name> <operator pos:line="98" pos:column="20">&amp;<pos:position pos:line="98" pos:column="25"/></operator> <name pos:line="98" pos:column="22">DAV_LOCKSCOPE_SHARED<pos:position pos:line="98" pos:column="42"/></name></expr>)<pos:position pos:line="98" pos:column="43"/></condition><then pos:line="98" pos:column="43"> <block pos:line="98" pos:column="44">{
        <comment type="block" pos:line="99" pos:column="9">/*
        ** Strictly speaking, we don't need this loop. Either the first
        ** (and only) lock will be EXCLUSIVE, or none of them will be.
        */</comment>
        <for pos:line="103" pos:column="9">for <control pos:line="103" pos:column="13">(<init><expr><name pos:line="103" pos:column="14">lock<pos:position pos:line="103" pos:column="18"/></name> <operator pos:line="103" pos:column="19">=<pos:position pos:line="103" pos:column="20"/></operator> <name pos:line="103" pos:column="21">lock_list<pos:position pos:line="103" pos:column="30"/></name></expr>;<pos:position pos:line="103" pos:column="31"/></init> <condition><expr><name pos:line="103" pos:column="32">lock<pos:position pos:line="103" pos:column="36"/></name> <operator pos:line="103" pos:column="37">!=<pos:position pos:line="103" pos:column="39"/></operator> <name pos:line="103" pos:column="40">NULL<pos:position pos:line="103" pos:column="44"/></name></expr>;<pos:position pos:line="103" pos:column="45"/></condition> <incr><expr><name pos:line="103" pos:column="46">lock<pos:position pos:line="103" pos:column="50"/></name> <operator pos:line="103" pos:column="51">=<pos:position pos:line="103" pos:column="52"/></operator> <name><name pos:line="103" pos:column="53">lock<pos:position pos:line="103" pos:column="57"/></name><operator pos:line="103" pos:column="57">-&gt;<pos:position pos:line="103" pos:column="62"/></operator><name pos:line="103" pos:column="59">next<pos:position pos:line="103" pos:column="63"/></name></name></expr></incr>)<pos:position pos:line="103" pos:column="64"/></control> <block pos:line="103" pos:column="65">{
            <if pos:line="104" pos:column="13">if <condition pos:line="104" pos:column="16">(<expr><name><name pos:line="104" pos:column="17">lock<pos:position pos:line="104" pos:column="21"/></name><operator pos:line="104" pos:column="21">-&gt;<pos:position pos:line="104" pos:column="26"/></operator><name pos:line="104" pos:column="23">scope<pos:position pos:line="104" pos:column="28"/></name></name> <operator pos:line="104" pos:column="29">==<pos:position pos:line="104" pos:column="31"/></operator> <name pos:line="104" pos:column="32">DAV_LOCKSCOPE_EXCLUSIVE<pos:position pos:line="104" pos:column="55"/></name></expr>)<pos:position pos:line="104" pos:column="56"/></condition><then pos:line="104" pos:column="56"> <block pos:line="104" pos:column="57">{
                <return pos:line="105" pos:column="17">return <expr><call><name pos:line="105" pos:column="24">dav_new_error<pos:position pos:line="105" pos:column="37"/></name><argument_list pos:line="105" pos:column="37">(<argument><expr><name pos:line="105" pos:column="38">p<pos:position pos:line="105" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="41">HTTP_LOCKED<pos:position pos:line="105" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="105" pos:column="54">0<pos:position pos:line="105" pos:column="55"/></literal></expr></argument>,
                                     <argument><expr><literal type="string" pos:line="106" pos:column="38">"The requested resource is already "<pos:position pos:line="106" pos:column="74"/></literal>
                                     <literal type="string" pos:line="107" pos:column="38">"locked exclusively."<pos:position pos:line="107" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="61"/></return>
            }<pos:position pos:line="108" pos:column="14"/></block></then></if>
        }<pos:position pos:line="109" pos:column="10"/></block></for>

        <comment type="block" pos:line="111" pos:column="9">/*
        ** The locks on the resource (if any) are all shared. Set the
        ** &lt;seen_locktoken&gt; flag to indicate that we do not need to find
        ** the locks in an If: header.
        */</comment>
        <expr_stmt><expr><name pos:line="116" pos:column="9">seen_locktoken<pos:position pos:line="116" pos:column="23"/></name> <operator pos:line="116" pos:column="24">=<pos:position pos:line="116" pos:column="25"/></operator> <literal type="number" pos:line="116" pos:column="26">1<pos:position pos:line="116" pos:column="27"/></literal></expr>;<pos:position pos:line="116" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="117" pos:column="6"/></block></then></if></elseif>
    <else pos:line="118" pos:column="5">else <block pos:line="118" pos:column="10">{
        <comment type="block" pos:line="119" pos:column="9">/*
        ** For methods other than LOCK:
        **
        ** If we have no locks, then &lt;seen_locktoken&gt; can be set to true --
        ** pretending that we've already met the requirement of seeing one
        ** of the resource's locks in the If: header.
        **
        ** Otherwise, it must be cleared and we'll look for one.
        */</comment>
        <expr_stmt><expr><name pos:line="128" pos:column="9">seen_locktoken<pos:position pos:line="128" pos:column="23"/></name> <operator pos:line="128" pos:column="24">=<pos:position pos:line="128" pos:column="25"/></operator> <operator pos:line="128" pos:column="26">(<pos:position pos:line="128" pos:column="27"/></operator><name pos:line="128" pos:column="27">lock_list<pos:position pos:line="128" pos:column="36"/></name> <operator pos:line="128" pos:column="37">==<pos:position pos:line="128" pos:column="39"/></operator> <name pos:line="128" pos:column="40">NULL<pos:position pos:line="128" pos:column="44"/></name><operator pos:line="128" pos:column="44">)<pos:position pos:line="128" pos:column="45"/></operator></expr>;<pos:position pos:line="128" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="129" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="131" pos:column="5">/*
    ** If there is no If: header, then we can shortcut some logic:
    **
    ** 1) if we do not need to find a locktoken in the (non-existent) If:
    **    header, then we are successful.
    **
    ** 2) if we must find a locktoken in the (non-existent) If: header, then
    **    we fail.
    */</comment>
    <if pos:line="140" pos:column="5">if <condition pos:line="140" pos:column="8">(<expr><name pos:line="140" pos:column="9">if_header<pos:position pos:line="140" pos:column="18"/></name> <operator pos:line="140" pos:column="19">==<pos:position pos:line="140" pos:column="21"/></operator> <name pos:line="140" pos:column="22">NULL<pos:position pos:line="140" pos:column="26"/></name></expr>)<pos:position pos:line="140" pos:column="27"/></condition><then pos:line="140" pos:column="27"> <block pos:line="140" pos:column="28">{
        <if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><name pos:line="141" pos:column="13">seen_locktoken<pos:position pos:line="141" pos:column="27"/></name></expr>)<pos:position pos:line="141" pos:column="28"/></condition><then pos:line="141" pos:column="28">
            <block type="pseudo"><return pos:line="142" pos:column="13">return <expr><name pos:line="142" pos:column="20">NULL<pos:position pos:line="142" pos:column="24"/></name></expr>;<pos:position pos:line="142" pos:column="25"/></return></block></then></if>

        <return pos:line="144" pos:column="9">return <expr><call><name pos:line="144" pos:column="16">dav_new_error<pos:position pos:line="144" pos:column="29"/></name><argument_list pos:line="144" pos:column="29">(<argument><expr><name pos:line="144" pos:column="30">p<pos:position pos:line="144" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="33">HTTP_LOCKED<pos:position pos:line="144" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="144" pos:column="46">0<pos:position pos:line="144" pos:column="47"/></literal></expr></argument>,
                             <argument><expr><literal type="string" pos:line="145" pos:column="30">"This resource is locked and an \"If:\" header "<pos:position pos:line="145" pos:column="78"/></literal>
                             <literal type="string" pos:line="146" pos:column="30">"was not supplied to allow access to the "<pos:position pos:line="146" pos:column="72"/></literal>
                             <literal type="string" pos:line="147" pos:column="30">"resource."<pos:position pos:line="147" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="43"/></return>
    }<pos:position pos:line="148" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="149" pos:column="5">/* the If: header is present */</comment>

    <comment type="block" pos:line="151" pos:column="5">/*
    ** If a dummy header is present (because of a Lock-Token: header), then
    ** we are required to find that token in this resource's set of locks.
    ** If we have no locks, then we immediately fail.
    **
    ** This is a 400 (Bad Request) since they should only submit a locktoken
    ** that actually exists.
    **
    ** Don't issue this response if we're talking about the parent resource.
    ** It is okay for that resource to NOT have this locktoken.
    ** (in fact, it certainly will not: a dummy_header only occurs for the
    **  UNLOCK method, the parent is checked only for locknull resources,
    **  and the parent certainly does not have the (locknull's) locktoken)
    */</comment>
    <if pos:line="165" pos:column="5">if <condition pos:line="165" pos:column="8">(<expr><name pos:line="165" pos:column="9">lock_list<pos:position pos:line="165" pos:column="18"/></name> <operator pos:line="165" pos:column="19">==<pos:position pos:line="165" pos:column="21"/></operator> <name pos:line="165" pos:column="22">NULL<pos:position pos:line="165" pos:column="26"/></name> <operator pos:line="165" pos:column="27">&amp;&amp;<pos:position pos:line="165" pos:column="37"/></operator> <name><name pos:line="165" pos:column="30">if_header<pos:position pos:line="165" pos:column="39"/></name><operator pos:line="165" pos:column="39">-&gt;<pos:position pos:line="165" pos:column="44"/></operator><name pos:line="165" pos:column="41">dummy_header<pos:position pos:line="165" pos:column="53"/></name></name></expr>)<pos:position pos:line="165" pos:column="54"/></condition><then pos:line="165" pos:column="54"> <block pos:line="165" pos:column="55">{
        <if pos:line="166" pos:column="9">if <condition pos:line="166" pos:column="12">(<expr><name pos:line="166" pos:column="13">flags<pos:position pos:line="166" pos:column="18"/></name> <operator pos:line="166" pos:column="19">&amp;<pos:position pos:line="166" pos:column="24"/></operator> <name pos:line="166" pos:column="21">DAV_VALIDATE_IS_PARENT<pos:position pos:line="166" pos:column="43"/></name></expr>)<pos:position pos:line="166" pos:column="44"/></condition><then pos:line="166" pos:column="44">
            <block type="pseudo"><return pos:line="167" pos:column="13">return <expr><name pos:line="167" pos:column="20">NULL<pos:position pos:line="167" pos:column="24"/></name></expr>;<pos:position pos:line="167" pos:column="25"/></return></block></then></if>
        <return pos:line="168" pos:column="9">return <expr><call><name pos:line="168" pos:column="16">dav_new_error<pos:position pos:line="168" pos:column="29"/></name><argument_list pos:line="168" pos:column="29">(<argument><expr><name pos:line="168" pos:column="30">p<pos:position pos:line="168" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="33">HTTP_BAD_REQUEST<pos:position pos:line="168" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="168" pos:column="51">0<pos:position pos:line="168" pos:column="52"/></literal></expr></argument>,
                             <argument><expr><literal type="string" pos:line="169" pos:column="30">"The locktoken specified in the \"Lock-Token:\" "<pos:position pos:line="169" pos:column="79"/></literal>
                             <literal type="string" pos:line="170" pos:column="30">"header is invalid because this resource has no "<pos:position pos:line="170" pos:column="79"/></literal>
                             <literal type="string" pos:line="171" pos:column="30">"outstanding locks."<pos:position pos:line="171" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="171" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="52"/></return>
    }<pos:position pos:line="172" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="174" pos:column="5">/*
    ** Prepare the input URI. We want the URI to never have a trailing slash.
    **
    ** When URIs are placed into the dav_if_header structure, they are
    ** guaranteed to never have a trailing slash. If the URIs are equivalent,
    ** then it doesn't matter if they both lack a trailing slash -- they're
    ** still equivalent.
    **
    ** Note: we could also ensure that a trailing slash is present on both
    ** URIs, but the majority of URIs provided to us via a resource walk
    ** will not contain that trailing slash.
    */</comment>
    <expr_stmt><expr><name pos:line="186" pos:column="5">uri<pos:position pos:line="186" pos:column="8"/></name> <operator pos:line="186" pos:column="9">=<pos:position pos:line="186" pos:column="10"/></operator> <name><name pos:line="186" pos:column="11">resource<pos:position pos:line="186" pos:column="19"/></name><operator pos:line="186" pos:column="19">-&gt;<pos:position pos:line="186" pos:column="24"/></operator><name pos:line="186" pos:column="21">uri<pos:position pos:line="186" pos:column="24"/></name></name></expr>;<pos:position pos:line="186" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="187" pos:column="5">uri_len<pos:position pos:line="187" pos:column="12"/></name> <operator pos:line="187" pos:column="13">=<pos:position pos:line="187" pos:column="14"/></operator> <call><name pos:line="187" pos:column="15">strlen<pos:position pos:line="187" pos:column="21"/></name><argument_list pos:line="187" pos:column="21">(<argument><expr><name pos:line="187" pos:column="22">uri<pos:position pos:line="187" pos:column="25"/></name></expr></argument>)<pos:position pos:line="187" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="27"/></expr_stmt>
    <if pos:line="188" pos:column="5">if <condition pos:line="188" pos:column="8">(<expr><name><name pos:line="188" pos:column="9">uri<pos:position pos:line="188" pos:column="12"/></name><index pos:line="188" pos:column="12">[<expr><name pos:line="188" pos:column="13">uri_len<pos:position pos:line="188" pos:column="20"/></name> <operator pos:line="188" pos:column="21">-<pos:position pos:line="188" pos:column="22"/></operator> <literal type="number" pos:line="188" pos:column="23">1<pos:position pos:line="188" pos:column="24"/></literal></expr>]<pos:position pos:line="188" pos:column="25"/></index></name> <operator pos:line="188" pos:column="26">==<pos:position pos:line="188" pos:column="28"/></operator> <literal type="char" pos:line="188" pos:column="29">'/'<pos:position pos:line="188" pos:column="32"/></literal></expr>)<pos:position pos:line="188" pos:column="33"/></condition><then pos:line="188" pos:column="33"> <block pos:line="188" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="189" pos:column="9">dav_set_bufsize<pos:position pos:line="189" pos:column="24"/></name><argument_list pos:line="189" pos:column="24">(<argument><expr><name pos:line="189" pos:column="25">p<pos:position pos:line="189" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="28">pbuf<pos:position pos:line="189" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="34">uri_len<pos:position pos:line="189" pos:column="41"/></name></expr></argument>)<pos:position pos:line="189" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="190" pos:column="9">memcpy<pos:position pos:line="190" pos:column="15"/></name><argument_list pos:line="190" pos:column="15">(<argument><expr><name><name pos:line="190" pos:column="16">pbuf<pos:position pos:line="190" pos:column="20"/></name><operator pos:line="190" pos:column="20">-&gt;<pos:position pos:line="190" pos:column="25"/></operator><name pos:line="190" pos:column="22">buf<pos:position pos:line="190" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="27">uri<pos:position pos:line="190" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="32">uri_len<pos:position pos:line="190" pos:column="39"/></name></expr></argument>)<pos:position pos:line="190" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="191" pos:column="9">pbuf<pos:position pos:line="191" pos:column="13"/></name><operator pos:line="191" pos:column="13">-&gt;<pos:position pos:line="191" pos:column="18"/></operator><name pos:line="191" pos:column="15">buf<pos:position pos:line="191" pos:column="18"/></name><index pos:line="191" pos:column="18">[<expr><operator pos:line="191" pos:column="19">--<pos:position pos:line="191" pos:column="21"/></operator><name pos:line="191" pos:column="21">uri_len<pos:position pos:line="191" pos:column="28"/></name></expr>]<pos:position pos:line="191" pos:column="29"/></index></name> <operator pos:line="191" pos:column="30">=<pos:position pos:line="191" pos:column="31"/></operator> <literal type="char" pos:line="191" pos:column="32">'\0'<pos:position pos:line="191" pos:column="36"/></literal></expr>;<pos:position pos:line="191" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="192" pos:column="9">uri<pos:position pos:line="192" pos:column="12"/></name> <operator pos:line="192" pos:column="13">=<pos:position pos:line="192" pos:column="14"/></operator> <name><name pos:line="192" pos:column="15">pbuf<pos:position pos:line="192" pos:column="19"/></name><operator pos:line="192" pos:column="19">-&gt;<pos:position pos:line="192" pos:column="24"/></operator><name pos:line="192" pos:column="21">buf<pos:position pos:line="192" pos:column="24"/></name></name></expr>;<pos:position pos:line="192" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="193" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="195" pos:column="5">/* get the resource's etag; we may need it during the checks */</comment>
    <expr_stmt><expr><name pos:line="196" pos:column="5">etag<pos:position pos:line="196" pos:column="9"/></name> <operator pos:line="196" pos:column="10">=<pos:position pos:line="196" pos:column="11"/></operator> <call pos:line="196" pos:column="12">(<modifier pos:line="196" pos:column="13">*<pos:position pos:line="196" pos:column="14"/></modifier><name><name pos:line="196" pos:column="14">resource<pos:position pos:line="196" pos:column="22"/></name><operator pos:line="196" pos:column="22">-&gt;<pos:position pos:line="196" pos:column="27"/></operator><name pos:line="196" pos:column="24">hooks<pos:position pos:line="196" pos:column="29"/></name><operator pos:line="196" pos:column="29">-&gt;<pos:position pos:line="196" pos:column="34"/></operator><name pos:line="196" pos:column="31">getetag<pos:position pos:line="196" pos:column="38"/></name></name>)<argument_list pos:line="196" pos:column="39">(<argument><expr><name pos:line="196" pos:column="40">resource<pos:position pos:line="196" pos:column="48"/></name></expr></argument>)<pos:position pos:line="196" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="198" pos:column="5">/* how many state_lists apply to this URI? */</comment>
    <expr_stmt><expr><name pos:line="199" pos:column="5">num_that_apply<pos:position pos:line="199" pos:column="19"/></name> <operator pos:line="199" pos:column="20">=<pos:position pos:line="199" pos:column="21"/></operator> <literal type="number" pos:line="199" pos:column="22">0<pos:position pos:line="199" pos:column="23"/></literal></expr>;<pos:position pos:line="199" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="201" pos:column="5">/* If there are if-headers, fail if this resource
     * does not match at least one state_list.
     */</comment>
    <for pos:line="204" pos:column="5">for <control pos:line="204" pos:column="9">(<init><expr><name pos:line="204" pos:column="10">ifhdr_scan<pos:position pos:line="204" pos:column="20"/></name> <operator pos:line="204" pos:column="21">=<pos:position pos:line="204" pos:column="22"/></operator> <name pos:line="204" pos:column="23">if_header<pos:position pos:line="204" pos:column="32"/></name></expr>;<pos:position pos:line="204" pos:column="33"/></init>
         <condition><expr><name pos:line="205" pos:column="10">ifhdr_scan<pos:position pos:line="205" pos:column="20"/></name> <operator pos:line="205" pos:column="21">!=<pos:position pos:line="205" pos:column="23"/></operator> <name pos:line="205" pos:column="24">NULL<pos:position pos:line="205" pos:column="28"/></name></expr>;<pos:position pos:line="205" pos:column="29"/></condition>
         <incr><expr><name pos:line="206" pos:column="10">ifhdr_scan<pos:position pos:line="206" pos:column="20"/></name> <operator pos:line="206" pos:column="21">=<pos:position pos:line="206" pos:column="22"/></operator> <name><name pos:line="206" pos:column="23">ifhdr_scan<pos:position pos:line="206" pos:column="33"/></name><operator pos:line="206" pos:column="33">-&gt;<pos:position pos:line="206" pos:column="38"/></operator><name pos:line="206" pos:column="35">next<pos:position pos:line="206" pos:column="39"/></name></name></expr></incr>)<pos:position pos:line="206" pos:column="40"/></control> <block pos:line="206" pos:column="41">{

        <comment type="block" pos:line="208" pos:column="9">/* DBG2("uri=&lt;%s&gt;  if_uri=&lt;%s&gt;", uri, ifhdr_scan-&gt;uri ? ifhdr_scan-&gt;uri : "(no uri)"); */</comment>

        <if pos:line="210" pos:column="9">if <condition pos:line="210" pos:column="12">(<expr><name><name pos:line="210" pos:column="13">ifhdr_scan<pos:position pos:line="210" pos:column="23"/></name><operator pos:line="210" pos:column="23">-&gt;<pos:position pos:line="210" pos:column="28"/></operator><name pos:line="210" pos:column="25">uri<pos:position pos:line="210" pos:column="28"/></name></name> <operator pos:line="210" pos:column="29">!=<pos:position pos:line="210" pos:column="31"/></operator> <name pos:line="210" pos:column="32">NULL<pos:position pos:line="210" pos:column="36"/></name>
            <operator pos:line="211" pos:column="13">&amp;&amp;<pos:position pos:line="211" pos:column="23"/></operator> <operator pos:line="211" pos:column="16">(<pos:position pos:line="211" pos:column="17"/></operator><name pos:line="211" pos:column="17">uri_len<pos:position pos:line="211" pos:column="24"/></name> <operator pos:line="211" pos:column="25">!=<pos:position pos:line="211" pos:column="27"/></operator> <name><name pos:line="211" pos:column="28">ifhdr_scan<pos:position pos:line="211" pos:column="38"/></name><operator pos:line="211" pos:column="38">-&gt;<pos:position pos:line="211" pos:column="43"/></operator><name pos:line="211" pos:column="40">uri_len<pos:position pos:line="211" pos:column="47"/></name></name>
                <operator pos:line="212" pos:column="17">||<pos:position pos:line="212" pos:column="19"/></operator> <call><name pos:line="212" pos:column="20">memcmp<pos:position pos:line="212" pos:column="26"/></name><argument_list pos:line="212" pos:column="26">(<argument><expr><name pos:line="212" pos:column="27">uri<pos:position pos:line="212" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="212" pos:column="32">ifhdr_scan<pos:position pos:line="212" pos:column="42"/></name><operator pos:line="212" pos:column="42">-&gt;<pos:position pos:line="212" pos:column="47"/></operator><name pos:line="212" pos:column="44">uri<pos:position pos:line="212" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="49">uri_len<pos:position pos:line="212" pos:column="56"/></name></expr></argument>)<pos:position pos:line="212" pos:column="57"/></argument_list></call> <operator pos:line="212" pos:column="58">!=<pos:position pos:line="212" pos:column="60"/></operator> <literal type="number" pos:line="212" pos:column="61">0<pos:position pos:line="212" pos:column="62"/></literal><operator pos:line="212" pos:column="62">)<pos:position pos:line="212" pos:column="63"/></operator></expr>)<pos:position pos:line="212" pos:column="64"/></condition><then pos:line="212" pos:column="64"> <block pos:line="212" pos:column="65">{
            <comment type="block" pos:line="213" pos:column="13">/*
            ** A tagged-list's URI doesn't match this resource's URI.
            ** Skip to the next state_list to see if it will match.
            */</comment>
            <continue pos:line="217" pos:column="13">continue;<pos:position pos:line="217" pos:column="22"/></continue>
        }<pos:position pos:line="218" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="220" pos:column="9">/* this state_list applies to this resource */</comment>

        <comment type="block" pos:line="222" pos:column="9">/*
        ** ### only one state_list should ever apply! a no-tag, or a tagged
        ** ### where S9.4.2 states only one can match.
        **
        ** ### revamp this code to loop thru ifhdr_scan until we find the
        ** ### matching state_list. process it. stop.
        */</comment>
        <expr_stmt><expr><operator pos:line="229" pos:column="9">++<pos:position pos:line="229" pos:column="11"/></operator><name pos:line="229" pos:column="11">num_that_apply<pos:position pos:line="229" pos:column="25"/></name></expr>;<pos:position pos:line="229" pos:column="26"/></expr_stmt>

        <comment type="block" pos:line="231" pos:column="9">/* To succeed, resource must match *all* of the states
         * specified in the state_list.
         */</comment>
        <for pos:line="234" pos:column="9">for <control pos:line="234" pos:column="13">(<init><expr><name pos:line="234" pos:column="14">state_list<pos:position pos:line="234" pos:column="24"/></name> <operator pos:line="234" pos:column="25">=<pos:position pos:line="234" pos:column="26"/></operator> <name><name pos:line="234" pos:column="27">ifhdr_scan<pos:position pos:line="234" pos:column="37"/></name><operator pos:line="234" pos:column="37">-&gt;<pos:position pos:line="234" pos:column="42"/></operator><name pos:line="234" pos:column="39">state<pos:position pos:line="234" pos:column="44"/></name></name></expr>;<pos:position pos:line="234" pos:column="45"/></init>
             <condition><expr><name pos:line="235" pos:column="14">state_list<pos:position pos:line="235" pos:column="24"/></name> <operator pos:line="235" pos:column="25">!=<pos:position pos:line="235" pos:column="27"/></operator> <name pos:line="235" pos:column="28">NULL<pos:position pos:line="235" pos:column="32"/></name></expr>;<pos:position pos:line="235" pos:column="33"/></condition>
             <incr><expr><name pos:line="236" pos:column="14">state_list<pos:position pos:line="236" pos:column="24"/></name> <operator pos:line="236" pos:column="25">=<pos:position pos:line="236" pos:column="26"/></operator> <name><name pos:line="236" pos:column="27">state_list<pos:position pos:line="236" pos:column="37"/></name><operator pos:line="236" pos:column="37">-&gt;<pos:position pos:line="236" pos:column="42"/></operator><name pos:line="236" pos:column="39">next<pos:position pos:line="236" pos:column="43"/></name></name></expr></incr>)<pos:position pos:line="236" pos:column="44"/></control> <block pos:line="236" pos:column="45">{

            <switch pos:line="238" pos:column="13">switch<condition pos:line="238" pos:column="19">(<expr><name><name pos:line="238" pos:column="20">state_list<pos:position pos:line="238" pos:column="30"/></name><operator pos:line="238" pos:column="30">-&gt;<pos:position pos:line="238" pos:column="35"/></operator><name pos:line="238" pos:column="32">type<pos:position pos:line="238" pos:column="36"/></name></name></expr>)<pos:position pos:line="238" pos:column="37"/></condition> <block pos:line="238" pos:column="38">{
            <case pos:line="239" pos:column="13">case <expr><name pos:line="239" pos:column="18">dav_if_etag<pos:position pos:line="239" pos:column="29"/></name></expr>:<pos:position pos:line="239" pos:column="30"/></case>
            <block pos:line="240" pos:column="13">{
                <decl_stmt><decl><type><specifier pos:line="241" pos:column="17">const<pos:position pos:line="241" pos:column="22"/></specifier> <name pos:line="241" pos:column="23">char<pos:position pos:line="241" pos:column="27"/></name> <modifier pos:line="241" pos:column="28">*<pos:position pos:line="241" pos:column="29"/></modifier></type><name pos:line="241" pos:column="29">given_etag<pos:position pos:line="241" pos:column="39"/></name></decl>, <modifier pos:line="241" pos:column="41">*<pos:position pos:line="241" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="241" pos:column="42">current_etag<pos:position pos:line="241" pos:column="54"/></name></decl>;<pos:position pos:line="241" pos:column="55"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="242" pos:column="17">int<pos:position pos:line="242" pos:column="20"/></name></type> <name pos:line="242" pos:column="21">mismatch<pos:position pos:line="242" pos:column="29"/></name></decl>;<pos:position pos:line="242" pos:column="30"/></decl_stmt>

                <comment type="block" pos:line="244" pos:column="17">/* Do a weak entity comparison function as defined in
                 * RFC 2616 13.3.3.
                 */</comment>
                <if pos:line="247" pos:column="17">if <condition pos:line="247" pos:column="20">(<expr><name><name pos:line="247" pos:column="21">state_list<pos:position pos:line="247" pos:column="31"/></name><operator pos:line="247" pos:column="31">-&gt;<pos:position pos:line="247" pos:column="36"/></operator><name pos:line="247" pos:column="33">etag<pos:position pos:line="247" pos:column="37"/></name><index pos:line="247" pos:column="37">[<expr><literal type="number" pos:line="247" pos:column="38">0<pos:position pos:line="247" pos:column="39"/></literal></expr>]<pos:position pos:line="247" pos:column="40"/></index></name> <operator pos:line="247" pos:column="41">==<pos:position pos:line="247" pos:column="43"/></operator> <literal type="char" pos:line="247" pos:column="44">'W'<pos:position pos:line="247" pos:column="47"/></literal> <operator pos:line="247" pos:column="48">&amp;&amp;<pos:position pos:line="247" pos:column="58"/></operator>
                    <name><name pos:line="248" pos:column="21">state_list<pos:position pos:line="248" pos:column="31"/></name><operator pos:line="248" pos:column="31">-&gt;<pos:position pos:line="248" pos:column="36"/></operator><name pos:line="248" pos:column="33">etag<pos:position pos:line="248" pos:column="37"/></name><index pos:line="248" pos:column="37">[<expr><literal type="number" pos:line="248" pos:column="38">1<pos:position pos:line="248" pos:column="39"/></literal></expr>]<pos:position pos:line="248" pos:column="40"/></index></name> <operator pos:line="248" pos:column="41">==<pos:position pos:line="248" pos:column="43"/></operator> <literal type="char" pos:line="248" pos:column="44">'/'<pos:position pos:line="248" pos:column="47"/></literal></expr>)<pos:position pos:line="248" pos:column="48"/></condition><then pos:line="248" pos:column="48"> <block pos:line="248" pos:column="49">{
                    <expr_stmt><expr><name pos:line="249" pos:column="21">given_etag<pos:position pos:line="249" pos:column="31"/></name> <operator pos:line="249" pos:column="32">=<pos:position pos:line="249" pos:column="33"/></operator> <name><name pos:line="249" pos:column="34">state_list<pos:position pos:line="249" pos:column="44"/></name><operator pos:line="249" pos:column="44">-&gt;<pos:position pos:line="249" pos:column="49"/></operator><name pos:line="249" pos:column="46">etag<pos:position pos:line="249" pos:column="50"/></name></name> <operator pos:line="249" pos:column="51">+<pos:position pos:line="249" pos:column="52"/></operator> <literal type="number" pos:line="249" pos:column="53">2<pos:position pos:line="249" pos:column="54"/></literal></expr>;<pos:position pos:line="249" pos:column="55"/></expr_stmt>
                }<pos:position pos:line="250" pos:column="18"/></block></then>
                <else pos:line="251" pos:column="17">else <block pos:line="251" pos:column="22">{
                    <expr_stmt><expr><name pos:line="252" pos:column="21">given_etag<pos:position pos:line="252" pos:column="31"/></name> <operator pos:line="252" pos:column="32">=<pos:position pos:line="252" pos:column="33"/></operator> <name><name pos:line="252" pos:column="34">state_list<pos:position pos:line="252" pos:column="44"/></name><operator pos:line="252" pos:column="44">-&gt;<pos:position pos:line="252" pos:column="49"/></operator><name pos:line="252" pos:column="46">etag<pos:position pos:line="252" pos:column="50"/></name></name></expr>;<pos:position pos:line="252" pos:column="51"/></expr_stmt>
                }<pos:position pos:line="253" pos:column="18"/></block></else></if>
                <if pos:line="254" pos:column="17">if <condition pos:line="254" pos:column="20">(<expr><name><name pos:line="254" pos:column="21">etag<pos:position pos:line="254" pos:column="25"/></name><index pos:line="254" pos:column="25">[<expr><literal type="number" pos:line="254" pos:column="26">0<pos:position pos:line="254" pos:column="27"/></literal></expr>]<pos:position pos:line="254" pos:column="28"/></index></name> <operator pos:line="254" pos:column="29">==<pos:position pos:line="254" pos:column="31"/></operator> <literal type="char" pos:line="254" pos:column="32">'W'<pos:position pos:line="254" pos:column="35"/></literal> <operator pos:line="254" pos:column="36">&amp;&amp;<pos:position pos:line="254" pos:column="46"/></operator>
                    <name><name pos:line="255" pos:column="21">etag<pos:position pos:line="255" pos:column="25"/></name><index pos:line="255" pos:column="25">[<expr><literal type="number" pos:line="255" pos:column="26">1<pos:position pos:line="255" pos:column="27"/></literal></expr>]<pos:position pos:line="255" pos:column="28"/></index></name> <operator pos:line="255" pos:column="29">==<pos:position pos:line="255" pos:column="31"/></operator> <literal type="char" pos:line="255" pos:column="32">'/'<pos:position pos:line="255" pos:column="35"/></literal></expr>)<pos:position pos:line="255" pos:column="36"/></condition><then pos:line="255" pos:column="36"> <block pos:line="255" pos:column="37">{
                    <expr_stmt><expr><name pos:line="256" pos:column="21">current_etag<pos:position pos:line="256" pos:column="33"/></name> <operator pos:line="256" pos:column="34">=<pos:position pos:line="256" pos:column="35"/></operator> <name pos:line="256" pos:column="36">etag<pos:position pos:line="256" pos:column="40"/></name> <operator pos:line="256" pos:column="41">+<pos:position pos:line="256" pos:column="42"/></operator> <literal type="number" pos:line="256" pos:column="43">2<pos:position pos:line="256" pos:column="44"/></literal></expr>;<pos:position pos:line="256" pos:column="45"/></expr_stmt>
                }<pos:position pos:line="257" pos:column="18"/></block></then>
                <else pos:line="258" pos:column="17">else <block pos:line="258" pos:column="22">{
                    <expr_stmt><expr><name pos:line="259" pos:column="21">current_etag<pos:position pos:line="259" pos:column="33"/></name> <operator pos:line="259" pos:column="34">=<pos:position pos:line="259" pos:column="35"/></operator> <name pos:line="259" pos:column="36">etag<pos:position pos:line="259" pos:column="40"/></name></expr>;<pos:position pos:line="259" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="260" pos:column="18"/></block></else></if>

                <expr_stmt><expr><name pos:line="262" pos:column="17">mismatch<pos:position pos:line="262" pos:column="25"/></name> <operator pos:line="262" pos:column="26">=<pos:position pos:line="262" pos:column="27"/></operator> <call><name pos:line="262" pos:column="28">strcmp<pos:position pos:line="262" pos:column="34"/></name><argument_list pos:line="262" pos:column="34">(<argument><expr><name pos:line="262" pos:column="35">given_etag<pos:position pos:line="262" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="262" pos:column="47">current_etag<pos:position pos:line="262" pos:column="59"/></name></expr></argument>)<pos:position pos:line="262" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="61"/></expr_stmt>

                <if pos:line="264" pos:column="17">if <condition pos:line="264" pos:column="20">(<expr><name><name pos:line="264" pos:column="21">state_list<pos:position pos:line="264" pos:column="31"/></name><operator pos:line="264" pos:column="31">-&gt;<pos:position pos:line="264" pos:column="36"/></operator><name pos:line="264" pos:column="33">condition<pos:position pos:line="264" pos:column="42"/></name></name> <operator pos:line="264" pos:column="43">==<pos:position pos:line="264" pos:column="45"/></operator> <name pos:line="264" pos:column="46">DAV_IF_COND_NORMAL<pos:position pos:line="264" pos:column="64"/></name> <operator pos:line="264" pos:column="65">&amp;&amp;<pos:position pos:line="264" pos:column="75"/></operator> <name pos:line="264" pos:column="68">mismatch<pos:position pos:line="264" pos:column="76"/></name></expr>)<pos:position pos:line="264" pos:column="77"/></condition><then pos:line="264" pos:column="77"> <block pos:line="264" pos:column="78">{
                    <comment type="block" pos:line="265" pos:column="21">/*
                    ** The specified entity-tag does not match the
                    ** entity-tag on the resource. This state_list is
                    ** not going to match. Bust outta here.
                    */</comment>
                    <expr_stmt><expr><name pos:line="270" pos:column="21">reason<pos:position pos:line="270" pos:column="27"/></name> <operator pos:line="270" pos:column="28">=<pos:position pos:line="270" pos:column="29"/></operator>
                        <literal type="string" pos:line="271" pos:column="25">"an entity-tag was specified, but the resource's "<pos:position pos:line="271" pos:column="75"/></literal>
                        <literal type="string" pos:line="272" pos:column="25">"actual ETag does not match."<pos:position pos:line="272" pos:column="54"/></literal></expr>;<pos:position pos:line="272" pos:column="55"/></expr_stmt>
                    <goto pos:line="273" pos:column="21">goto <name pos:line="273" pos:column="26">state_list_failed<pos:position pos:line="273" pos:column="43"/></name>;<pos:position pos:line="273" pos:column="44"/></goto>
                }<pos:position pos:line="274" pos:column="18"/></block></then>
                <elseif pos:line="275" pos:column="17">else <if pos:line="275" pos:column="22">if <condition pos:line="275" pos:column="25">(<expr><name><name pos:line="275" pos:column="26">state_list<pos:position pos:line="275" pos:column="36"/></name><operator pos:line="275" pos:column="36">-&gt;<pos:position pos:line="275" pos:column="41"/></operator><name pos:line="275" pos:column="38">condition<pos:position pos:line="275" pos:column="47"/></name></name> <operator pos:line="275" pos:column="48">==<pos:position pos:line="275" pos:column="50"/></operator> <name pos:line="275" pos:column="51">DAV_IF_COND_NOT<pos:position pos:line="275" pos:column="66"/></name>
                         <operator pos:line="276" pos:column="26">&amp;&amp;<pos:position pos:line="276" pos:column="36"/></operator> <operator pos:line="276" pos:column="29">!<pos:position pos:line="276" pos:column="30"/></operator><name pos:line="276" pos:column="30">mismatch<pos:position pos:line="276" pos:column="38"/></name></expr>)<pos:position pos:line="276" pos:column="39"/></condition><then pos:line="276" pos:column="39"> <block pos:line="276" pos:column="40">{
                    <comment type="block" pos:line="277" pos:column="21">/*
                    ** The specified entity-tag DOES match the
                    ** entity-tag on the resource. This state_list is
                    ** not going to match. Bust outta here.
                    */</comment>
                    <expr_stmt><expr><name pos:line="282" pos:column="21">reason<pos:position pos:line="282" pos:column="27"/></name> <operator pos:line="282" pos:column="28">=<pos:position pos:line="282" pos:column="29"/></operator>
                        <literal type="string" pos:line="283" pos:column="25">"an entity-tag was specified using the \"Not\" form, "<pos:position pos:line="283" pos:column="79"/></literal>
                        <literal type="string" pos:line="284" pos:column="25">"but the resource's actual ETag matches the provided "<pos:position pos:line="284" pos:column="79"/></literal>
                        <literal type="string" pos:line="285" pos:column="25">"entity-tag."<pos:position pos:line="285" pos:column="38"/></literal></expr>;<pos:position pos:line="285" pos:column="39"/></expr_stmt>
                    <goto pos:line="286" pos:column="21">goto <name pos:line="286" pos:column="26">state_list_failed<pos:position pos:line="286" pos:column="43"/></name>;<pos:position pos:line="286" pos:column="44"/></goto>
                }<pos:position pos:line="287" pos:column="18"/></block></then></if></elseif></if>
                <break pos:line="288" pos:column="17">break;<pos:position pos:line="288" pos:column="23"/></break>
            }<pos:position pos:line="289" pos:column="14"/></block>

            <case pos:line="291" pos:column="13">case <expr><name pos:line="291" pos:column="18">dav_if_opaquelock<pos:position pos:line="291" pos:column="35"/></name></expr>:<pos:position pos:line="291" pos:column="36"/></case>
                <if pos:line="292" pos:column="17">if <condition pos:line="292" pos:column="20">(<expr><name pos:line="292" pos:column="21">lockdb<pos:position pos:line="292" pos:column="27"/></name> <operator pos:line="292" pos:column="28">==<pos:position pos:line="292" pos:column="30"/></operator> <name pos:line="292" pos:column="31">NULL<pos:position pos:line="292" pos:column="35"/></name></expr>)<pos:position pos:line="292" pos:column="36"/></condition><then pos:line="292" pos:column="36"> <block pos:line="292" pos:column="37">{
                    <if pos:line="293" pos:column="21">if <condition pos:line="293" pos:column="24">(<expr><name><name pos:line="293" pos:column="25">state_list<pos:position pos:line="293" pos:column="35"/></name><operator pos:line="293" pos:column="35">-&gt;<pos:position pos:line="293" pos:column="40"/></operator><name pos:line="293" pos:column="37">condition<pos:position pos:line="293" pos:column="46"/></name></name> <operator pos:line="293" pos:column="47">==<pos:position pos:line="293" pos:column="49"/></operator> <name pos:line="293" pos:column="50">DAV_IF_COND_NOT<pos:position pos:line="293" pos:column="65"/></name></expr>)<pos:position pos:line="293" pos:column="66"/></condition><then pos:line="293" pos:column="66"> <block pos:line="293" pos:column="67">{
                        <comment type="block" pos:line="294" pos:column="25">/* the locktoken is definitely not there! (success) */</comment>
                        <continue pos:line="295" pos:column="25">continue;<pos:position pos:line="295" pos:column="34"/></continue>
                    }<pos:position pos:line="296" pos:column="22"/></block></then></if>

                    <comment type="block" pos:line="298" pos:column="21">/* condition == DAV_IF_COND_NORMAL */</comment>

                    <comment type="block" pos:line="300" pos:column="21">/*
                    ** If no lockdb is provided, then validation fails for
                    ** this state_list (NORMAL means we were supposed to
                    ** find the token, which we obviously cannot do without
                    ** a lock database).
                    **
                    ** Go and try the next state list.
                    */</comment>
                    <expr_stmt><expr><name pos:line="308" pos:column="21">reason<pos:position pos:line="308" pos:column="27"/></name> <operator pos:line="308" pos:column="28">=<pos:position pos:line="308" pos:column="29"/></operator>
                        <literal type="string" pos:line="309" pos:column="25">"a State-token was supplied, but a lock database "<pos:position pos:line="309" pos:column="75"/></literal>
                        <literal type="string" pos:line="310" pos:column="25">"is not available for to provide the required lock."<pos:position pos:line="310" pos:column="77"/></literal></expr>;<pos:position pos:line="310" pos:column="78"/></expr_stmt>
                    <goto pos:line="311" pos:column="21">goto <name pos:line="311" pos:column="26">state_list_failed<pos:position pos:line="311" pos:column="43"/></name>;<pos:position pos:line="311" pos:column="44"/></goto>
                }<pos:position pos:line="312" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="314" pos:column="17">/* Resource validation 'fails' if:
                 *    ANY  of the lock-&gt;locktokens match
                 *         a NOT state_list-&gt;locktoken,
                 * OR
                 *    NONE of the lock-&gt;locktokens match
                 *         a NORMAL state_list-&gt;locktoken.
                 */</comment>
                <expr_stmt><expr><name pos:line="321" pos:column="17">num_matched<pos:position pos:line="321" pos:column="28"/></name> <operator pos:line="321" pos:column="29">=<pos:position pos:line="321" pos:column="30"/></operator> <literal type="number" pos:line="321" pos:column="31">0<pos:position pos:line="321" pos:column="32"/></literal></expr>;<pos:position pos:line="321" pos:column="33"/></expr_stmt>
                <for pos:line="322" pos:column="17">for <control pos:line="322" pos:column="21">(<init><expr><name pos:line="322" pos:column="22">lock<pos:position pos:line="322" pos:column="26"/></name> <operator pos:line="322" pos:column="27">=<pos:position pos:line="322" pos:column="28"/></operator> <name pos:line="322" pos:column="29">lock_list<pos:position pos:line="322" pos:column="38"/></name></expr>;<pos:position pos:line="322" pos:column="39"/></init> <condition><expr><name pos:line="322" pos:column="40">lock<pos:position pos:line="322" pos:column="44"/></name> <operator pos:line="322" pos:column="45">!=<pos:position pos:line="322" pos:column="47"/></operator> <name pos:line="322" pos:column="48">NULL<pos:position pos:line="322" pos:column="52"/></name></expr>;<pos:position pos:line="322" pos:column="53"/></condition> <incr><expr><name pos:line="322" pos:column="54">lock<pos:position pos:line="322" pos:column="58"/></name> <operator pos:line="322" pos:column="59">=<pos:position pos:line="322" pos:column="60"/></operator> <name><name pos:line="322" pos:column="61">lock<pos:position pos:line="322" pos:column="65"/></name><operator pos:line="322" pos:column="65">-&gt;<pos:position pos:line="322" pos:column="70"/></operator><name pos:line="322" pos:column="67">next<pos:position pos:line="322" pos:column="71"/></name></name></expr></incr>)<pos:position pos:line="322" pos:column="72"/></control> <block pos:line="322" pos:column="73">{

                    <comment type="block" pos:line="324" pos:column="21">/*
                    DBG2("compare: rsrc=%s  ifhdr=%s",
                         (*locks_hooks-&gt;format_locktoken)(p, lock-&gt;locktoken),
                         (*locks_hooks-&gt;format_locktoken)(p, state_list-&gt;locktoken));
                    */</comment>

                    <comment type="block" pos:line="330" pos:column="21">/* nothing to do if the locktokens do not match. */</comment>
                    <if pos:line="331" pos:column="21">if <condition pos:line="331" pos:column="24">(<expr><call pos:line="331" pos:column="25">(<modifier pos:line="331" pos:column="26">*<pos:position pos:line="331" pos:column="27"/></modifier><name><name pos:line="331" pos:column="27">locks_hooks<pos:position pos:line="331" pos:column="38"/></name><operator pos:line="331" pos:column="38">-&gt;<pos:position pos:line="331" pos:column="43"/></operator><name pos:line="331" pos:column="40">compare_locktoken<pos:position pos:line="331" pos:column="57"/></name></name>)<argument_list pos:line="331" pos:column="58">(<argument><expr><name><name pos:line="331" pos:column="59">state_list<pos:position pos:line="331" pos:column="69"/></name><operator pos:line="331" pos:column="69">-&gt;<pos:position pos:line="331" pos:column="74"/></operator><name pos:line="331" pos:column="71">locktoken<pos:position pos:line="331" pos:column="80"/></name></name></expr></argument>, <argument><expr><name><name pos:line="331" pos:column="82">lock<pos:position pos:line="331" pos:column="86"/></name><operator pos:line="331" pos:column="86">-&gt;<pos:position pos:line="331" pos:column="91"/></operator><name pos:line="331" pos:column="88">locktoken<pos:position pos:line="331" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="331" pos:column="98"/></argument_list></call></expr>)<pos:position pos:line="331" pos:column="99"/></condition><then pos:line="331" pos:column="99"> <block pos:line="331" pos:column="100">{
                        <continue pos:line="332" pos:column="25">continue;<pos:position pos:line="332" pos:column="34"/></continue>
                    }<pos:position pos:line="333" pos:column="22"/></block></then></if>

                    <comment type="block" pos:line="335" pos:column="21">/*
                    ** We have now matched up one of the resource's locktokens
                    ** to a locktoken in a State-token in the If: header.
                    ** Note this fact, so that we can pass the overall
                    ** requirement of seeing at least one of the resource's
                    ** locktokens.
                    */</comment>
                    <expr_stmt><expr><name pos:line="342" pos:column="21">seen_locktoken<pos:position pos:line="342" pos:column="35"/></name> <operator pos:line="342" pos:column="36">=<pos:position pos:line="342" pos:column="37"/></operator> <literal type="number" pos:line="342" pos:column="38">1<pos:position pos:line="342" pos:column="39"/></literal></expr>;<pos:position pos:line="342" pos:column="40"/></expr_stmt>

                    <if pos:line="344" pos:column="21">if <condition pos:line="344" pos:column="24">(<expr><name><name pos:line="344" pos:column="25">state_list<pos:position pos:line="344" pos:column="35"/></name><operator pos:line="344" pos:column="35">-&gt;<pos:position pos:line="344" pos:column="40"/></operator><name pos:line="344" pos:column="37">condition<pos:position pos:line="344" pos:column="46"/></name></name> <operator pos:line="344" pos:column="47">==<pos:position pos:line="344" pos:column="49"/></operator> <name pos:line="344" pos:column="50">DAV_IF_COND_NOT<pos:position pos:line="344" pos:column="65"/></name></expr>)<pos:position pos:line="344" pos:column="66"/></condition><then pos:line="344" pos:column="66"> <block pos:line="344" pos:column="67">{
                        <comment type="block" pos:line="345" pos:column="25">/*
                        ** This state requires that the specified locktoken
                        ** is NOT present on the resource. But we just found
                        ** it. There is no way this state-list can now
                        ** succeed, so go try another one.
                        */</comment>
                        <expr_stmt><expr><name pos:line="351" pos:column="25">reason<pos:position pos:line="351" pos:column="31"/></name> <operator pos:line="351" pos:column="32">=<pos:position pos:line="351" pos:column="33"/></operator>
                            <literal type="string" pos:line="352" pos:column="29">"a State-token was supplied, which used a "<pos:position pos:line="352" pos:column="72"/></literal>
                            <literal type="string" pos:line="353" pos:column="29">"\"Not\" condition. The State-token was found "<pos:position pos:line="353" pos:column="76"/></literal>
                            <literal type="string" pos:line="354" pos:column="29">"in the locks on this resource"<pos:position pos:line="354" pos:column="60"/></literal></expr>;<pos:position pos:line="354" pos:column="61"/></expr_stmt>
                        <goto pos:line="355" pos:column="25">goto <name pos:line="355" pos:column="30">state_list_failed<pos:position pos:line="355" pos:column="47"/></name>;<pos:position pos:line="355" pos:column="48"/></goto>
                    }<pos:position pos:line="356" pos:column="22"/></block></then></if>

                    <comment type="block" pos:line="358" pos:column="21">/* condition == DAV_IF_COND_NORMAL */</comment>

                    <comment type="block" pos:line="360" pos:column="21">/* Validate auth_user:  If an authenticated user created
                    ** the lock, only the same user may submit that locktoken
                    ** to manipulate a resource.
                    */</comment>
                    <if pos:line="364" pos:column="21">if <condition pos:line="364" pos:column="24">(<expr><name><name pos:line="364" pos:column="25">lock<pos:position pos:line="364" pos:column="29"/></name><operator pos:line="364" pos:column="29">-&gt;<pos:position pos:line="364" pos:column="34"/></operator><name pos:line="364" pos:column="31">auth_user<pos:position pos:line="364" pos:column="40"/></name></name> <operator pos:line="364" pos:column="41">&amp;&amp;<pos:position pos:line="364" pos:column="51"/></operator>
                        <operator pos:line="365" pos:column="25">(<pos:position pos:line="365" pos:column="26"/></operator><operator pos:line="365" pos:column="26">!<pos:position pos:line="365" pos:column="27"/></operator><name><name pos:line="365" pos:column="27">r<pos:position pos:line="365" pos:column="28"/></name><operator pos:line="365" pos:column="28">-&gt;<pos:position pos:line="365" pos:column="33"/></operator><name pos:line="365" pos:column="30">user<pos:position pos:line="365" pos:column="34"/></name></name> <operator pos:line="365" pos:column="35">||<pos:position pos:line="365" pos:column="37"/></operator>
                         <call><name pos:line="366" pos:column="26">strcmp<pos:position pos:line="366" pos:column="32"/></name><argument_list pos:line="366" pos:column="32">(<argument><expr><name><name pos:line="366" pos:column="33">lock<pos:position pos:line="366" pos:column="37"/></name><operator pos:line="366" pos:column="37">-&gt;<pos:position pos:line="366" pos:column="42"/></operator><name pos:line="366" pos:column="39">auth_user<pos:position pos:line="366" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="366" pos:column="50">r<pos:position pos:line="366" pos:column="51"/></name><operator pos:line="366" pos:column="51">-&gt;<pos:position pos:line="366" pos:column="56"/></operator><name pos:line="366" pos:column="53">user<pos:position pos:line="366" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="366" pos:column="58"/></argument_list></call><operator pos:line="366" pos:column="58">)<pos:position pos:line="366" pos:column="59"/></operator></expr>)<pos:position pos:line="366" pos:column="60"/></condition><then pos:line="366" pos:column="60"> <block pos:line="366" pos:column="61">{
                        <decl_stmt><decl><type><specifier pos:line="367" pos:column="25">const<pos:position pos:line="367" pos:column="30"/></specifier> <name pos:line="367" pos:column="31">char<pos:position pos:line="367" pos:column="35"/></name> <modifier pos:line="367" pos:column="36">*<pos:position pos:line="367" pos:column="37"/></modifier></type><name pos:line="367" pos:column="37">errmsg<pos:position pos:line="367" pos:column="43"/></name></decl>;<pos:position pos:line="367" pos:column="44"/></decl_stmt>

                        <expr_stmt><expr><name pos:line="369" pos:column="25">errmsg<pos:position pos:line="369" pos:column="31"/></name> <operator pos:line="369" pos:column="32">=<pos:position pos:line="369" pos:column="33"/></operator> <call><name pos:line="369" pos:column="34">apr_pstrcat<pos:position pos:line="369" pos:column="45"/></name><argument_list pos:line="369" pos:column="45">(<argument><expr><name pos:line="369" pos:column="46">p<pos:position pos:line="369" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="369" pos:column="49">"User \""<pos:position pos:line="369" pos:column="58"/></literal></expr></argument>,
                                            <argument><expr><name><name pos:line="370" pos:column="45">r<pos:position pos:line="370" pos:column="46"/></name><operator pos:line="370" pos:column="46">-&gt;<pos:position pos:line="370" pos:column="51"/></operator><name pos:line="370" pos:column="48">user<pos:position pos:line="370" pos:column="52"/></name></name></expr></argument>,
                                            <argument><expr><literal type="string" pos:line="371" pos:column="45">"\" submitted a locktoken created "<pos:position pos:line="371" pos:column="80"/></literal>
                                            <literal type="string" pos:line="372" pos:column="45">"by user \""<pos:position pos:line="372" pos:column="57"/></literal></expr></argument>,
                                            <argument><expr><name><name pos:line="373" pos:column="45">lock<pos:position pos:line="373" pos:column="49"/></name><operator pos:line="373" pos:column="49">-&gt;<pos:position pos:line="373" pos:column="54"/></operator><name pos:line="373" pos:column="51">auth_user<pos:position pos:line="373" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="373" pos:column="62">"\"."<pos:position pos:line="373" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="373" pos:column="69">NULL<pos:position pos:line="373" pos:column="73"/></name></expr></argument>)<pos:position pos:line="373" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="373" pos:column="75"/></expr_stmt>
                        <return pos:line="374" pos:column="25">return <expr><call><name pos:line="374" pos:column="32">dav_new_error<pos:position pos:line="374" pos:column="45"/></name><argument_list pos:line="374" pos:column="45">(<argument><expr><name pos:line="374" pos:column="46">p<pos:position pos:line="374" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="374" pos:column="49">HTTP_FORBIDDEN<pos:position pos:line="374" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="374" pos:column="65">0<pos:position pos:line="374" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="374" pos:column="68">errmsg<pos:position pos:line="374" pos:column="74"/></name></expr></argument>)<pos:position pos:line="374" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="374" pos:column="76"/></return>
                    }<pos:position pos:line="375" pos:column="22"/></block></then></if>

                    <comment type="block" pos:line="377" pos:column="21">/*
                    ** We just matched a specified State-Token to one of the
                    ** resource's locktokens.
                    **
                    ** Break out of the lock scan -- we only needed to find
                    ** one match (actually, there shouldn't be any other
                    ** matches in the lock list).
                    */</comment>
                    <expr_stmt><expr><name pos:line="385" pos:column="21">num_matched<pos:position pos:line="385" pos:column="32"/></name> <operator pos:line="385" pos:column="33">=<pos:position pos:line="385" pos:column="34"/></operator> <literal type="number" pos:line="385" pos:column="35">1<pos:position pos:line="385" pos:column="36"/></literal></expr>;<pos:position pos:line="385" pos:column="37"/></expr_stmt>
                    <break pos:line="386" pos:column="21">break;<pos:position pos:line="386" pos:column="27"/></break>
                }<pos:position pos:line="387" pos:column="18"/></block></for>

                <if pos:line="389" pos:column="17">if <condition pos:line="389" pos:column="20">(<expr><name pos:line="389" pos:column="21">num_matched<pos:position pos:line="389" pos:column="32"/></name> <operator pos:line="389" pos:column="33">==<pos:position pos:line="389" pos:column="35"/></operator> <literal type="number" pos:line="389" pos:column="36">0<pos:position pos:line="389" pos:column="37"/></literal>
                    <operator pos:line="390" pos:column="21">&amp;&amp;<pos:position pos:line="390" pos:column="31"/></operator> <name><name pos:line="390" pos:column="24">state_list<pos:position pos:line="390" pos:column="34"/></name><operator pos:line="390" pos:column="34">-&gt;<pos:position pos:line="390" pos:column="39"/></operator><name pos:line="390" pos:column="36">condition<pos:position pos:line="390" pos:column="45"/></name></name> <operator pos:line="390" pos:column="46">==<pos:position pos:line="390" pos:column="48"/></operator> <name pos:line="390" pos:column="49">DAV_IF_COND_NORMAL<pos:position pos:line="390" pos:column="67"/></name></expr>)<pos:position pos:line="390" pos:column="68"/></condition><then pos:line="390" pos:column="68"> <block pos:line="390" pos:column="69">{
                    <comment type="block" pos:line="391" pos:column="21">/*
                    ** We had a NORMAL state, meaning that we should have
                    ** found the State-Token within the locks on this
                    ** resource. We didn't, so this state_list must fail.
                    */</comment>
                    <expr_stmt><expr><name pos:line="396" pos:column="21">reason<pos:position pos:line="396" pos:column="27"/></name> <operator pos:line="396" pos:column="28">=<pos:position pos:line="396" pos:column="29"/></operator>
                        <literal type="string" pos:line="397" pos:column="25">"a State-token was supplied, but it was not found "<pos:position pos:line="397" pos:column="76"/></literal>
                        <literal type="string" pos:line="398" pos:column="25">"in the locks on this resource."<pos:position pos:line="398" pos:column="57"/></literal></expr>;<pos:position pos:line="398" pos:column="58"/></expr_stmt>
                    <goto pos:line="399" pos:column="21">goto <name pos:line="399" pos:column="26">state_list_failed<pos:position pos:line="399" pos:column="43"/></name>;<pos:position pos:line="399" pos:column="44"/></goto>
                }<pos:position pos:line="400" pos:column="18"/></block></then></if>

                <break pos:line="402" pos:column="17">break;<pos:position pos:line="402" pos:column="23"/></break>

            <case pos:line="404" pos:column="13">case <expr><name pos:line="404" pos:column="18">dav_if_unknown<pos:position pos:line="404" pos:column="32"/></name></expr>:<pos:position pos:line="404" pos:column="33"/></case>
                <comment type="block" pos:line="405" pos:column="17">/* Request is predicated on some unknown state token,
                 * which must be presumed to *not* match, so fail
                 * unless this is a Not condition. */</comment>

                <if pos:line="409" pos:column="17">if <condition pos:line="409" pos:column="20">(<expr><name><name pos:line="409" pos:column="21">state_list<pos:position pos:line="409" pos:column="31"/></name><operator pos:line="409" pos:column="31">-&gt;<pos:position pos:line="409" pos:column="36"/></operator><name pos:line="409" pos:column="33">condition<pos:position pos:line="409" pos:column="42"/></name></name> <operator pos:line="409" pos:column="43">==<pos:position pos:line="409" pos:column="45"/></operator> <name pos:line="409" pos:column="46">DAV_IF_COND_NORMAL<pos:position pos:line="409" pos:column="64"/></name></expr>)<pos:position pos:line="409" pos:column="65"/></condition><then pos:line="409" pos:column="65"> <block pos:line="409" pos:column="66">{
                    <expr_stmt><expr><name pos:line="410" pos:column="21">reason<pos:position pos:line="410" pos:column="27"/></name> <operator pos:line="410" pos:column="28">=<pos:position pos:line="410" pos:column="29"/></operator>
                        <literal type="string" pos:line="411" pos:column="25">"an unknown state token was supplied"<pos:position pos:line="411" pos:column="62"/></literal></expr>;<pos:position pos:line="411" pos:column="63"/></expr_stmt>
                    <goto pos:line="412" pos:column="21">goto <name pos:line="412" pos:column="26">state_list_failed<pos:position pos:line="412" pos:column="43"/></name>;<pos:position pos:line="412" pos:column="44"/></goto>
                }<pos:position pos:line="413" pos:column="18"/></block></then></if>
                <break pos:line="414" pos:column="17">break;<pos:position pos:line="414" pos:column="23"/></break>

            }<pos:position pos:line="416" pos:column="14"/></block></switch> <comment type="block" pos:line="416" pos:column="15">/* switch */</comment>
        }<pos:position pos:line="417" pos:column="10"/></block></for> <comment type="block" pos:line="417" pos:column="11">/* foreach ( state_list ) */</comment>

        <comment type="block" pos:line="419" pos:column="9">/*
        ** We've checked every state in this state_list and none of them
        ** have failed. Since all of them succeeded, then we have a matching
        ** state list and we may be done.
        **
        ** The next requirement is that we have seen one of the resource's
        ** locktokens (if any). If we have, then we can just exit. If we
        ** haven't, then we need to keep looking.
        */</comment>
        <if pos:line="428" pos:column="9">if <condition pos:line="428" pos:column="12">(<expr><name pos:line="428" pos:column="13">seen_locktoken<pos:position pos:line="428" pos:column="27"/></name></expr>)<pos:position pos:line="428" pos:column="28"/></condition><then pos:line="428" pos:column="28"> <block pos:line="428" pos:column="29">{
            <comment type="block" pos:line="429" pos:column="13">/* woo hoo! */</comment>
            <return pos:line="430" pos:column="13">return <expr><name pos:line="430" pos:column="20">NULL<pos:position pos:line="430" pos:column="24"/></name></expr>;<pos:position pos:line="430" pos:column="25"/></return>
        }<pos:position pos:line="431" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="433" pos:column="9">/*
        ** Haven't seen one. Let's break out of the search and just look
        ** for a matching locktoken.
        */</comment>
        <break pos:line="437" pos:column="9">break;<pos:position pos:line="437" pos:column="15"/></break>

        <comment type="block" pos:line="439" pos:column="9">/*
        ** This label is used when we detect that a state_list is not
        ** going to match this resource. We bust out and try the next
        ** state_list.
        */</comment>
      <label><name pos:line="444" pos:column="7">state_list_failed<pos:position pos:line="444" pos:column="24"/></name>:<pos:position pos:line="444" pos:column="25"/></label>
        <empty_stmt pos:line="445" pos:column="9">;<pos:position pos:line="445" pos:column="10"/></empty_stmt>

    }<pos:position pos:line="447" pos:column="6"/></block></for> <comment type="block" pos:line="447" pos:column="7">/* foreach ( ifhdr_scan ) */</comment>

    <comment type="block" pos:line="449" pos:column="5">/*
    ** The above loop exits for one of two reasons:
    **   1) a state_list matched and seen_locktoken is false.
    **   2) all if_header structures were scanned, without (1) occurring
    */</comment>

    <if pos:line="455" pos:column="5">if <condition pos:line="455" pos:column="8">(<expr><name pos:line="455" pos:column="9">ifhdr_scan<pos:position pos:line="455" pos:column="19"/></name> <operator pos:line="455" pos:column="20">==<pos:position pos:line="455" pos:column="22"/></operator> <name pos:line="455" pos:column="23">NULL<pos:position pos:line="455" pos:column="27"/></name></expr>)<pos:position pos:line="455" pos:column="28"/></condition><then pos:line="455" pos:column="28"> <block pos:line="455" pos:column="29">{
        <comment type="block" pos:line="456" pos:column="9">/*
        ** We finished the loop without finding any matching state lists.
        */</comment>

        <comment type="block" pos:line="460" pos:column="9">/*
        ** If none of the state_lists apply to this resource, then we
        ** may have succeeded. Note that this scenario implies a
        ** tagged-list with no matching state_lists. If the If: header
        ** was a no-tag-list, then it would have applied to this resource.
        **
        ** S9.4.2 states that when no state_lists apply, then the header
        ** should be ignored.
        **
        ** If we saw one of the resource's locktokens, then we're done.
        ** If we did not see a locktoken, then we fail.
        */</comment>
        <if pos:line="472" pos:column="9">if <condition pos:line="472" pos:column="12">(<expr><name pos:line="472" pos:column="13">num_that_apply<pos:position pos:line="472" pos:column="27"/></name> <operator pos:line="472" pos:column="28">==<pos:position pos:line="472" pos:column="30"/></operator> <literal type="number" pos:line="472" pos:column="31">0<pos:position pos:line="472" pos:column="32"/></literal></expr>)<pos:position pos:line="472" pos:column="33"/></condition><then pos:line="472" pos:column="33"> <block pos:line="472" pos:column="34">{
            <if pos:line="473" pos:column="13">if <condition pos:line="473" pos:column="16">(<expr><name pos:line="473" pos:column="17">seen_locktoken<pos:position pos:line="473" pos:column="31"/></name></expr>)<pos:position pos:line="473" pos:column="32"/></condition><then pos:line="473" pos:column="32">
                <block type="pseudo"><return pos:line="474" pos:column="17">return <expr><name pos:line="474" pos:column="24">NULL<pos:position pos:line="474" pos:column="28"/></name></expr>;<pos:position pos:line="474" pos:column="29"/></return></block></then></if>

            <comment type="block" pos:line="476" pos:column="13">/*
            ** We may have aborted the scan before seeing the locktoken.
            ** Rescan the If: header to see if we can find the locktoken
            ** somewhere.
            **
            ** Note that seen_locktoken == 0 implies lock_list != NULL
            ** which implies locks_hooks != NULL.
            */</comment>
            <if pos:line="484" pos:column="13">if <condition pos:line="484" pos:column="16">(<expr><call><name pos:line="484" pos:column="17">dav_find_submitted_locktoken<pos:position pos:line="484" pos:column="45"/></name><argument_list pos:line="484" pos:column="45">(<argument><expr><name pos:line="484" pos:column="46">if_header<pos:position pos:line="484" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="484" pos:column="57">lock_list<pos:position pos:line="484" pos:column="66"/></name></expr></argument>,
                                             <argument><expr><name pos:line="485" pos:column="46">locks_hooks<pos:position pos:line="485" pos:column="57"/></name></expr></argument>)<pos:position pos:line="485" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="485" pos:column="59"/></condition><then pos:line="485" pos:column="59"> <block pos:line="485" pos:column="60">{
                <comment type="block" pos:line="486" pos:column="17">/*
                ** We found a match! We're set... none of the If: header
                ** assertions apply (implicit success), and the If: header
                ** specified the locktoken somewhere. We're done.
                */</comment>
                <return pos:line="491" pos:column="17">return <expr><name pos:line="491" pos:column="24">NULL<pos:position pos:line="491" pos:column="28"/></name></expr>;<pos:position pos:line="491" pos:column="29"/></return>
            }<pos:position pos:line="492" pos:column="14"/></block></then></if>

            <return pos:line="494" pos:column="13">return <expr><call><name pos:line="494" pos:column="20">dav_new_error<pos:position pos:line="494" pos:column="33"/></name><argument_list pos:line="494" pos:column="33">(<argument><expr><name pos:line="494" pos:column="34">p<pos:position pos:line="494" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="494" pos:column="37">HTTP_LOCKED<pos:position pos:line="494" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="494" pos:column="50">0<pos:position pos:line="494" pos:column="51"/></literal></expr></argument> <comment type="block" pos:line="494" pos:column="52">/* error_id */</comment>,
                                 <argument><expr><literal type="string" pos:line="495" pos:column="34">"This resource is locked and the \"If:\" "<pos:position pos:line="495" pos:column="76"/></literal>
                                 <literal type="string" pos:line="496" pos:column="34">"header did not specify one of the "<pos:position pos:line="496" pos:column="70"/></literal>
                                 <literal type="string" pos:line="497" pos:column="34">"locktokens for this resource's lock(s)."<pos:position pos:line="497" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="497" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="497" pos:column="77"/></return>
        }<pos:position pos:line="498" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="499" pos:column="9">/* else: one or more state_lists were applicable, but failed. */</comment>

        <comment type="block" pos:line="501" pos:column="9">/*
        ** If the dummy_header did not match, then they specified an
        ** incorrect token in the Lock-Token header. Forget whether the
        ** If: statement matched or not... we'll tell them about the
        ** bad Lock-Token first. That is considered a 400 (Bad Request).
        */</comment>
        <if pos:line="507" pos:column="9">if <condition pos:line="507" pos:column="12">(<expr><name><name pos:line="507" pos:column="13">if_header<pos:position pos:line="507" pos:column="22"/></name><operator pos:line="507" pos:column="22">-&gt;<pos:position pos:line="507" pos:column="27"/></operator><name pos:line="507" pos:column="24">dummy_header<pos:position pos:line="507" pos:column="36"/></name></name></expr>)<pos:position pos:line="507" pos:column="37"/></condition><then pos:line="507" pos:column="37"> <block pos:line="507" pos:column="38">{
            <return pos:line="508" pos:column="13">return <expr><call><name pos:line="508" pos:column="20">dav_new_error<pos:position pos:line="508" pos:column="33"/></name><argument_list pos:line="508" pos:column="33">(<argument><expr><name pos:line="508" pos:column="34">p<pos:position pos:line="508" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="508" pos:column="37">HTTP_BAD_REQUEST<pos:position pos:line="508" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="508" pos:column="55">0<pos:position pos:line="508" pos:column="56"/></literal></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="509" pos:column="34">"The locktoken specified in the "<pos:position pos:line="509" pos:column="67"/></literal>
                                 <literal type="string" pos:line="510" pos:column="34">"\"Lock-Token:\" header did not specify one "<pos:position pos:line="510" pos:column="79"/></literal>
                                 <literal type="string" pos:line="511" pos:column="34">"of this resource's locktoken(s)."<pos:position pos:line="511" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="511" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="511" pos:column="70"/></return>
        }<pos:position pos:line="512" pos:column="10"/></block></then></if>

        <if pos:line="514" pos:column="9">if <condition pos:line="514" pos:column="12">(<expr><name pos:line="514" pos:column="13">reason<pos:position pos:line="514" pos:column="19"/></name> <operator pos:line="514" pos:column="20">==<pos:position pos:line="514" pos:column="22"/></operator> <name pos:line="514" pos:column="23">NULL<pos:position pos:line="514" pos:column="27"/></name></expr>)<pos:position pos:line="514" pos:column="28"/></condition><then pos:line="514" pos:column="28"> <block pos:line="514" pos:column="29">{
            <return pos:line="515" pos:column="13">return <expr><call><name pos:line="515" pos:column="20">dav_new_error<pos:position pos:line="515" pos:column="33"/></name><argument_list pos:line="515" pos:column="33">(<argument><expr><name pos:line="515" pos:column="34">p<pos:position pos:line="515" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="515" pos:column="37">HTTP_PRECONDITION_FAILED<pos:position pos:line="515" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="515" pos:column="63">0<pos:position pos:line="515" pos:column="64"/></literal></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="516" pos:column="34">"The preconditions specified by the \"If:\" "<pos:position pos:line="516" pos:column="79"/></literal>
                                 <literal type="string" pos:line="517" pos:column="34">"header did not match this resource."<pos:position pos:line="517" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="517" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="517" pos:column="73"/></return>
        }<pos:position pos:line="518" pos:column="10"/></block></then></if>

        <return pos:line="520" pos:column="9">return <expr><call><name pos:line="520" pos:column="16">dav_new_error<pos:position pos:line="520" pos:column="29"/></name><argument_list pos:line="520" pos:column="29">(<argument><expr><name pos:line="520" pos:column="30">p<pos:position pos:line="520" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="520" pos:column="33">HTTP_PRECONDITION_FAILED<pos:position pos:line="520" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="520" pos:column="59">0<pos:position pos:line="520" pos:column="60"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="521" pos:column="30">apr_psprintf<pos:position pos:line="521" pos:column="42"/></name><argument_list pos:line="521" pos:column="42">(<argument><expr><name pos:line="521" pos:column="43">p<pos:position pos:line="521" pos:column="44"/></name></expr></argument>,
                                         <argument><expr><literal type="string" pos:line="522" pos:column="42">"The precondition(s) specified by "<pos:position pos:line="522" pos:column="77"/></literal>
                                         <literal type="string" pos:line="523" pos:column="42">"the \"If:\" header did not match "<pos:position pos:line="523" pos:column="77"/></literal>
                                         <literal type="string" pos:line="524" pos:column="42">"this resource. At least one "<pos:position pos:line="524" pos:column="72"/></literal>
                                         <literal type="string" pos:line="525" pos:column="42">"failure is because: %s"<pos:position pos:line="525" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="525" pos:column="68">reason<pos:position pos:line="525" pos:column="74"/></name></expr></argument>)<pos:position pos:line="525" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="525" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="525" pos:column="77"/></return>
    }<pos:position pos:line="526" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="528" pos:column="5">/* assert seen_locktoken == 0 */</comment>

    <comment type="block" pos:line="530" pos:column="5">/*
    ** ifhdr_scan != NULL implies we found a matching state_list.
    **
    ** Since we're still here, it also means that we have not yet found
    ** one the resource's locktokens in the If: header.
    **
    ** Scan all the if_headers and states looking for one of this
    ** resource's locktokens. Note that we need to go back and scan them
    ** all -- we may have aborted a scan with a failure before we saw a
    ** matching token.
    **
    ** Note that seen_locktoken == 0 implies lock_list != NULL which implies
    ** locks_hooks != NULL.
    */</comment>
    <if pos:line="544" pos:column="5">if <condition pos:line="544" pos:column="8">(<expr><call><name pos:line="544" pos:column="9">dav_find_submitted_locktoken<pos:position pos:line="544" pos:column="37"/></name><argument_list pos:line="544" pos:column="37">(<argument><expr><name pos:line="544" pos:column="38">if_header<pos:position pos:line="544" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="544" pos:column="49">lock_list<pos:position pos:line="544" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="544" pos:column="60">locks_hooks<pos:position pos:line="544" pos:column="71"/></name></expr></argument>)<pos:position pos:line="544" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="544" pos:column="73"/></condition><then pos:line="544" pos:column="73"> <block pos:line="544" pos:column="74">{
        <comment type="block" pos:line="545" pos:column="9">/*
        ** We found a match! We're set... we have a matching state list,
        ** and the If: header specified the locktoken somewhere. We're done.
        */</comment>
        <return pos:line="549" pos:column="9">return <expr><name pos:line="549" pos:column="16">NULL<pos:position pos:line="549" pos:column="20"/></name></expr>;<pos:position pos:line="549" pos:column="21"/></return>
    }<pos:position pos:line="550" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="552" pos:column="5">/*
    ** We had a matching state list, but the user agent did not specify one
    ** of this resource's locktokens. Tell them so.
    **
    ** Note that we need to special-case the message on whether a "dummy"
    ** header exists. If it exists, yet we didn't see a needed locktoken,
    ** then that implies the dummy header (Lock-Token header) did NOT
    ** specify one of this resource's locktokens. (this implies something
    ** in the real If: header matched)
    **
    ** We want to note the 400 (Bad Request) in favor of a 423 (Locked).
    */</comment>
    <if pos:line="564" pos:column="5">if <condition pos:line="564" pos:column="8">(<expr><name><name pos:line="564" pos:column="9">if_header<pos:position pos:line="564" pos:column="18"/></name><operator pos:line="564" pos:column="18">-&gt;<pos:position pos:line="564" pos:column="23"/></operator><name pos:line="564" pos:column="20">dummy_header<pos:position pos:line="564" pos:column="32"/></name></name></expr>)<pos:position pos:line="564" pos:column="33"/></condition><then pos:line="564" pos:column="33"> <block pos:line="564" pos:column="34">{
        <return pos:line="565" pos:column="9">return <expr><call><name pos:line="565" pos:column="16">dav_new_error<pos:position pos:line="565" pos:column="29"/></name><argument_list pos:line="565" pos:column="29">(<argument><expr><name pos:line="565" pos:column="30">p<pos:position pos:line="565" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="565" pos:column="33">HTTP_BAD_REQUEST<pos:position pos:line="565" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="565" pos:column="51">0<pos:position pos:line="565" pos:column="52"/></literal></expr></argument>,
                             <argument><expr><literal type="string" pos:line="566" pos:column="30">"The locktoken specified in the "<pos:position pos:line="566" pos:column="63"/></literal>
                             <literal type="string" pos:line="567" pos:column="30">"\"Lock-Token:\" header did not specify one "<pos:position pos:line="567" pos:column="75"/></literal>
                             <literal type="string" pos:line="568" pos:column="30">"of this resource's locktoken(s)."<pos:position pos:line="568" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="568" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="568" pos:column="66"/></return>
    }<pos:position pos:line="569" pos:column="6"/></block></then></if>

    <return pos:line="571" pos:column="5">return <expr><call><name pos:line="571" pos:column="12">dav_new_error<pos:position pos:line="571" pos:column="25"/></name><argument_list pos:line="571" pos:column="25">(<argument><expr><name pos:line="571" pos:column="26">p<pos:position pos:line="571" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="571" pos:column="29">HTTP_LOCKED<pos:position pos:line="571" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="571" pos:column="42">1<pos:position pos:line="571" pos:column="43"/></literal></expr></argument> <comment type="block" pos:line="571" pos:column="44">/* error_id */</comment>,
                         <argument><expr><literal type="string" pos:line="572" pos:column="26">"This resource is locked and the \"If:\" header "<pos:position pos:line="572" pos:column="75"/></literal>
                         <literal type="string" pos:line="573" pos:column="26">"did not specify one of the "<pos:position pos:line="573" pos:column="55"/></literal>
                         <literal type="string" pos:line="574" pos:column="26">"locktokens for this resource's lock(s)."<pos:position pos:line="574" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="574" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="574" pos:column="69"/></return>
}<pos:position pos:line="575" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3879_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">impl_pollcb_poll<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">apr_pollcb_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">pollcb<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="2" pos:column="38">apr_interval_time_t<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">timeout<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="3" pos:column="38">apr_pollcb_cb_t<pos:position pos:line="3" pos:column="53"/></name></type> <name pos:line="3" pos:column="54">func<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="4" pos:column="38">void<pos:position pos:line="4" pos:column="42"/></name> <modifier pos:line="4" pos:column="43">*<pos:position pos:line="4" pos:column="44"/></modifier></type><name pos:line="4" pos:column="44">baton<pos:position pos:line="4" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="50"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">ret<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_status_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">rv<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">APR_SUCCESS<pos:position pos:line="7" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_uint32_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">i<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>

<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">WIN32<pos:position pos:line="10" pos:column="13"/></name></cpp:ifdef>
    <comment type="block" pos:line="11" pos:column="5">/* WSAPoll() requires at least one socket. */</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">pollcb<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">nelts<pos:position pos:line="12" pos:column="22"/></name></name> <operator pos:line="12" pos:column="23">==<pos:position pos:line="12" pos:column="25"/></operator> <literal type="number" pos:line="12" pos:column="26">0<pos:position pos:line="12" pos:column="27"/></literal></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28"> <block pos:line="12" pos:column="29">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">timeout<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">&gt;<pos:position pos:line="13" pos:column="25"/></operator> <literal type="number" pos:line="13" pos:column="23">0<pos:position pos:line="13" pos:column="24"/></literal></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25"> <block pos:line="13" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">apr_sleep<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">timeout<pos:position pos:line="14" pos:column="30"/></name></expr></argument>)<pos:position pos:line="14" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
            <return pos:line="15" pos:column="13">return <expr><name pos:line="15" pos:column="20">APR_TIMEUP<pos:position pos:line="15" pos:column="30"/></name></expr>;<pos:position pos:line="15" pos:column="31"/></return>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
        <return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">APR_SUCCESS<pos:position pos:line="17" pos:column="27"/></name></expr>;<pos:position pos:line="17" pos:column="28"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">timeout<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">&gt;<pos:position pos:line="19" pos:column="21"/></operator> <literal type="number" pos:line="19" pos:column="19">0<pos:position pos:line="19" pos:column="20"/></literal></expr>)<pos:position pos:line="19" pos:column="21"/></condition><then pos:line="19" pos:column="21"> <block pos:line="19" pos:column="22">{
        <expr_stmt><expr><name pos:line="20" pos:column="9">timeout<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">/=<pos:position pos:line="20" pos:column="19"/></operator> <literal type="number" pos:line="20" pos:column="20">1000<pos:position pos:line="20" pos:column="24"/></literal></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="22" pos:column="5">ret<pos:position pos:line="22" pos:column="8"/></name> <operator pos:line="22" pos:column="9">=<pos:position pos:line="22" pos:column="10"/></operator> <call><name pos:line="22" pos:column="11">WSAPoll<pos:position pos:line="22" pos:column="18"/></name><argument_list pos:line="22" pos:column="18">(<argument><expr><name><name pos:line="22" pos:column="19">pollcb<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">-&gt;<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="27">pollset<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">.<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="35">ps<pos:position pos:line="22" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="39">pollcb<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">-&gt;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="47">nelts<pos:position pos:line="22" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="54">(<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="55">int<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">)<pos:position pos:line="22" pos:column="59"/></operator><name pos:line="22" pos:column="59">timeout<pos:position pos:line="22" pos:column="66"/></name></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt>
<cpp:else pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">else<pos:position pos:line="23" pos:column="6"/></cpp:directive></cpp:else>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">timeout<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">&gt;<pos:position pos:line="24" pos:column="21"/></operator> <literal type="number" pos:line="24" pos:column="19">0<pos:position pos:line="24" pos:column="20"/></literal></expr>)<pos:position pos:line="24" pos:column="21"/></condition><then pos:line="24" pos:column="21"> <block pos:line="24" pos:column="22">{
        <expr_stmt><expr><name pos:line="25" pos:column="9">timeout<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">/=<pos:position pos:line="25" pos:column="19"/></operator> <literal type="number" pos:line="25" pos:column="20">1000<pos:position pos:line="25" pos:column="24"/></literal></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="27" pos:column="5">ret<pos:position pos:line="27" pos:column="8"/></name> <operator pos:line="27" pos:column="9">=<pos:position pos:line="27" pos:column="10"/></operator> <call><name pos:line="27" pos:column="11">poll<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><name><name pos:line="27" pos:column="16">pollcb<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">-&gt;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="24">pollset<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">.<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">ps<pos:position pos:line="27" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="36">pollcb<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">nelts<pos:position pos:line="27" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="51">timeout<pos:position pos:line="27" pos:column="58"/></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="60"/></expr_stmt>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">ret<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">&lt;<pos:position pos:line="29" pos:column="17"/></operator> <literal type="number" pos:line="29" pos:column="15">0<pos:position pos:line="29" pos:column="16"/></literal></expr>)<pos:position pos:line="29" pos:column="17"/></condition><then pos:line="29" pos:column="17"> <block pos:line="29" pos:column="18">{
        <return pos:line="30" pos:column="9">return <expr><call><name pos:line="30" pos:column="16">apr_get_netos_error<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">()<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="38"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then>
    <elseif pos:line="32" pos:column="5">else <if pos:line="32" pos:column="10">if <condition pos:line="32" pos:column="13">(<expr><name pos:line="32" pos:column="14">ret<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">==<pos:position pos:line="32" pos:column="20"/></operator> <literal type="number" pos:line="32" pos:column="21">0<pos:position pos:line="32" pos:column="22"/></literal></expr>)<pos:position pos:line="32" pos:column="23"/></condition><then pos:line="32" pos:column="23"> <block pos:line="32" pos:column="24">{
        <return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">APR_TIMEUP<pos:position pos:line="33" pos:column="26"/></name></expr>;<pos:position pos:line="33" pos:column="27"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if></elseif>
    <else pos:line="35" pos:column="5">else <block pos:line="35" pos:column="10">{
        <for pos:line="36" pos:column="9">for <control pos:line="36" pos:column="13">(<init><expr><name pos:line="36" pos:column="14">i<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <literal type="number" pos:line="36" pos:column="18">0<pos:position pos:line="36" pos:column="19"/></literal></expr>;<pos:position pos:line="36" pos:column="20"/></init> <condition><expr><name pos:line="36" pos:column="21">i<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">&lt;<pos:position pos:line="36" pos:column="27"/></operator> <name><name pos:line="36" pos:column="25">pollcb<pos:position pos:line="36" pos:column="31"/></name><operator pos:line="36" pos:column="31">-&gt;<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="33">nelts<pos:position pos:line="36" pos:column="38"/></name></name></expr>;<pos:position pos:line="36" pos:column="39"/></condition> <incr><expr><name pos:line="36" pos:column="40">i<pos:position pos:line="36" pos:column="41"/></name><operator pos:line="36" pos:column="41">++<pos:position pos:line="36" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="44"/></control> <block pos:line="36" pos:column="45">{
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><name><name pos:line="37" pos:column="17">pollcb<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">-&gt;<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="25">pollset<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">.<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="33">ps<pos:position pos:line="37" pos:column="35"/></name><index pos:line="37" pos:column="35">[<expr><name pos:line="37" pos:column="36">i<pos:position pos:line="37" pos:column="37"/></name></expr>]<pos:position pos:line="37" pos:column="38"/></index></name><operator pos:line="37" pos:column="38">.<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="39">revents<pos:position pos:line="37" pos:column="46"/></name> <operator pos:line="37" pos:column="47">!=<pos:position pos:line="37" pos:column="49"/></operator> <literal type="number" pos:line="37" pos:column="50">0<pos:position pos:line="37" pos:column="51"/></literal></expr>)<pos:position pos:line="37" pos:column="52"/></condition><then pos:line="37" pos:column="52"> <block pos:line="37" pos:column="53">{
                <decl_stmt><decl><type><name pos:line="38" pos:column="17">apr_pollfd_t<pos:position pos:line="38" pos:column="29"/></name> <modifier pos:line="38" pos:column="30">*<pos:position pos:line="38" pos:column="31"/></modifier></type><name pos:line="38" pos:column="31">pollfd<pos:position pos:line="38" pos:column="37"/></name> <init pos:line="38" pos:column="38">= <expr><name><name pos:line="38" pos:column="40">pollcb<pos:position pos:line="38" pos:column="46"/></name><operator pos:line="38" pos:column="46">-&gt;<pos:position pos:line="38" pos:column="51"/></operator><name pos:line="38" pos:column="48">copyset<pos:position pos:line="38" pos:column="55"/></name><index pos:line="38" pos:column="55">[<expr><name pos:line="38" pos:column="56">i<pos:position pos:line="38" pos:column="57"/></name></expr>]<pos:position pos:line="38" pos:column="58"/></index></name></expr></init></decl>;<pos:position pos:line="38" pos:column="59"/></decl_stmt>
                <expr_stmt><expr><name><name pos:line="39" pos:column="17">pollfd<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">-&gt;<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="25">rtnevents<pos:position pos:line="39" pos:column="34"/></name></name> <operator pos:line="39" pos:column="35">=<pos:position pos:line="39" pos:column="36"/></operator> <call><name pos:line="39" pos:column="37">get_revent<pos:position pos:line="39" pos:column="47"/></name><argument_list pos:line="39" pos:column="47">(<argument><expr><name><name pos:line="39" pos:column="48">pollcb<pos:position pos:line="39" pos:column="54"/></name><operator pos:line="39" pos:column="54">-&gt;<pos:position pos:line="39" pos:column="59"/></operator><name pos:line="39" pos:column="56">pollset<pos:position pos:line="39" pos:column="63"/></name><operator pos:line="39" pos:column="63">.<pos:position pos:line="39" pos:column="64"/></operator><name pos:line="39" pos:column="64">ps<pos:position pos:line="39" pos:column="66"/></name><index pos:line="39" pos:column="66">[<expr><name pos:line="39" pos:column="67">i<pos:position pos:line="39" pos:column="68"/></name></expr>]<pos:position pos:line="39" pos:column="69"/></index></name><operator pos:line="39" pos:column="69">.<pos:position pos:line="39" pos:column="70"/></operator><name pos:line="39" pos:column="70">revents<pos:position pos:line="39" pos:column="77"/></name></expr></argument>)<pos:position pos:line="39" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="79"/></expr_stmt>                    
                <expr_stmt><expr><name pos:line="40" pos:column="17">rv<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <call><name pos:line="40" pos:column="22">func<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><name pos:line="40" pos:column="27">baton<pos:position pos:line="40" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="34">pollfd<pos:position pos:line="40" pos:column="40"/></name></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="42"/></expr_stmt>
                <if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">rv<pos:position pos:line="41" pos:column="23"/></name></expr>)<pos:position pos:line="41" pos:column="24"/></condition><then pos:line="41" pos:column="24"> <block pos:line="41" pos:column="25">{
                    <return pos:line="42" pos:column="21">return <expr><name pos:line="42" pos:column="28">rv<pos:position pos:line="42" pos:column="30"/></name></expr>;<pos:position pos:line="42" pos:column="31"/></return>
                }<pos:position pos:line="43" pos:column="18"/></block></then></if>
            }<pos:position pos:line="44" pos:column="14"/></block></then></if>
        }<pos:position pos:line="45" pos:column="10"/></block></for>
    }<pos:position pos:line="46" pos:column="6"/></block></else></if>
    <return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">rv<pos:position pos:line="47" pos:column="14"/></name></expr>;<pos:position pos:line="47" pos:column="15"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

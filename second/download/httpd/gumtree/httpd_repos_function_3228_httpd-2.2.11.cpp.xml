<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3228_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name> <name pos:line="2" pos:column="5">PREFIX<pos:position pos:line="2" pos:column="11"/></name></type>(<name pos:line="2" pos:column="12">predefinedEntityName<pos:position pos:line="2" pos:column="32"/></name>)<parameter_list pos:line="2" pos:column="33">(<parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">ENCODING<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">enc<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier> <name pos:line="2" pos:column="61">char<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">ptr<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="72">const<pos:position pos:line="2" pos:column="77"/></specifier> <name pos:line="2" pos:column="78">char<pos:position pos:line="2" pos:column="82"/></name> <modifier pos:line="2" pos:column="83">*<pos:position pos:line="2" pos:column="84"/></modifier></type><name pos:line="2" pos:column="84">end<pos:position pos:line="2" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="88"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <switch pos:line="4" pos:column="3">switch <condition pos:line="4" pos:column="10">(<expr><operator pos:line="4" pos:column="11">(<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="12">end<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">-<pos:position pos:line="4" pos:column="17"/></operator> <name pos:line="4" pos:column="18">ptr<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">)<pos:position pos:line="4" pos:column="22"/></operator><operator pos:line="4" pos:column="22">/<pos:position pos:line="4" pos:column="23"/></operator><call><name pos:line="4" pos:column="23">MINBPC<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">(<argument><expr><name pos:line="4" pos:column="30">enc<pos:position pos:line="4" pos:column="33"/></name></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="35"/></condition> <block pos:line="4" pos:column="36">{
  <case pos:line="5" pos:column="3">case <expr><literal type="number" pos:line="5" pos:column="8">2<pos:position pos:line="5" pos:column="9"/></literal></expr>:<pos:position pos:line="5" pos:column="10"/></case>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">CHAR_MATCHES<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">enc<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="27">ptr<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">+<pos:position pos:line="6" pos:column="32"/></operator> <call><name pos:line="6" pos:column="33">MINBPC<pos:position pos:line="6" pos:column="39"/></name><argument_list pos:line="6" pos:column="39">(<argument><expr><name pos:line="6" pos:column="40">enc<pos:position pos:line="6" pos:column="43"/></name></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="6" pos:column="46">ASCII_t<pos:position pos:line="6" pos:column="53"/></name></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="55"/></condition><then pos:line="6" pos:column="55"> <block pos:line="6" pos:column="56">{
      <switch pos:line="7" pos:column="7">switch <condition pos:line="7" pos:column="14">(<expr><call><name pos:line="7" pos:column="15">BYTE_TO_ASCII<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">enc<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="34">ptr<pos:position pos:line="7" pos:column="37"/></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="39"/></condition> <block pos:line="7" pos:column="40">{
      <case pos:line="8" pos:column="7">case <expr><name pos:line="8" pos:column="12">ASCII_l<pos:position pos:line="8" pos:column="19"/></name></expr>:<pos:position pos:line="8" pos:column="20"/></case>
	<return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">ASCII_LT<pos:position pos:line="9" pos:column="24"/></name></expr>;<pos:position pos:line="9" pos:column="25"/></return>
      <case pos:line="10" pos:column="7">case <expr><name pos:line="10" pos:column="12">ASCII_g<pos:position pos:line="10" pos:column="19"/></name></expr>:<pos:position pos:line="10" pos:column="20"/></case>
	<return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">ASCII_GT<pos:position pos:line="11" pos:column="24"/></name></expr>;<pos:position pos:line="11" pos:column="25"/></return>
      }<pos:position pos:line="12" pos:column="8"/></block></switch>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <break pos:line="14" pos:column="5">break;<pos:position pos:line="14" pos:column="11"/></break>
  <case pos:line="15" pos:column="3">case <expr><literal type="number" pos:line="15" pos:column="8">3<pos:position pos:line="15" pos:column="9"/></literal></expr>:<pos:position pos:line="15" pos:column="10"/></case>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name pos:line="16" pos:column="9">CHAR_MATCHES<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">enc<pos:position pos:line="16" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="27">ptr<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="32">ASCII_a<pos:position pos:line="16" pos:column="39"/></name></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="41"/></condition><then pos:line="16" pos:column="41"> <block pos:line="16" pos:column="42">{
      <expr_stmt><expr><name pos:line="17" pos:column="7">ptr<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">+=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">MINBPC<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">enc<pos:position pos:line="17" pos:column="24"/></name></expr></argument>)<pos:position pos:line="17" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>
      <if pos:line="18" pos:column="7">if <condition pos:line="18" pos:column="10">(<expr><call><name pos:line="18" pos:column="11">CHAR_MATCHES<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">enc<pos:position pos:line="18" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="29">ptr<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">ASCII_m<pos:position pos:line="18" pos:column="41"/></name></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="43"/></condition><then pos:line="18" pos:column="43"> <block pos:line="18" pos:column="44">{
	<expr_stmt><expr><name pos:line="19" pos:column="9">ptr<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">+=<pos:position pos:line="19" pos:column="15"/></operator> <call><name pos:line="19" pos:column="16">MINBPC<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">enc<pos:position pos:line="19" pos:column="26"/></name></expr></argument>)<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">CHAR_MATCHES<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">enc<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="31">ptr<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="36">ASCII_p<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="45"/></condition><then pos:line="20" pos:column="45">
	  <block type="pseudo"><return pos:line="21" pos:column="11">return <expr><name pos:line="21" pos:column="18">ASCII_AMP<pos:position pos:line="21" pos:column="27"/></name></expr>;<pos:position pos:line="21" pos:column="28"/></return></block></then></if>
      }<pos:position pos:line="22" pos:column="8"/></block></then></if>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <break pos:line="24" pos:column="5">break;<pos:position pos:line="24" pos:column="11"/></break>
  <case pos:line="25" pos:column="3">case <expr><literal type="number" pos:line="25" pos:column="8">4<pos:position pos:line="25" pos:column="9"/></literal></expr>:<pos:position pos:line="25" pos:column="10"/></case>
    <switch pos:line="26" pos:column="5">switch <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">BYTE_TO_ASCII<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">enc<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="32">ptr<pos:position pos:line="26" pos:column="35"/></name></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="37"/></condition> <block pos:line="26" pos:column="38">{
    <case pos:line="27" pos:column="5">case <expr><name pos:line="27" pos:column="10">ASCII_q<pos:position pos:line="27" pos:column="17"/></name></expr>:<pos:position pos:line="27" pos:column="18"/></case>
      <expr_stmt><expr><name pos:line="28" pos:column="7">ptr<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">+=<pos:position pos:line="28" pos:column="13"/></operator> <call><name pos:line="28" pos:column="14">MINBPC<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">enc<pos:position pos:line="28" pos:column="24"/></name></expr></argument>)<pos:position pos:line="28" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><call><name pos:line="29" pos:column="11">CHAR_MATCHES<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><name pos:line="29" pos:column="24">enc<pos:position pos:line="29" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="29">ptr<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="34">ASCII_u<pos:position pos:line="29" pos:column="41"/></name></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="43"/></condition><then pos:line="29" pos:column="43"> <block pos:line="29" pos:column="44">{
	<expr_stmt><expr><name pos:line="30" pos:column="9">ptr<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">+=<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">MINBPC<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><name pos:line="30" pos:column="23">enc<pos:position pos:line="30" pos:column="26"/></name></expr></argument>)<pos:position pos:line="30" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">CHAR_MATCHES<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">enc<pos:position pos:line="31" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="31">ptr<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="36">ASCII_o<pos:position pos:line="31" pos:column="43"/></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="45"/></condition><then pos:line="31" pos:column="45"> <block pos:line="31" pos:column="46">{
	  <expr_stmt><expr><name pos:line="32" pos:column="11">ptr<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">+=<pos:position pos:line="32" pos:column="17"/></operator> <call><name pos:line="32" pos:column="18">MINBPC<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">enc<pos:position pos:line="32" pos:column="28"/></name></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
  	  <if pos:line="33" pos:column="11">if <condition pos:line="33" pos:column="14">(<expr><call><name pos:line="33" pos:column="15">CHAR_MATCHES<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">enc<pos:position pos:line="33" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="33">ptr<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="38">ASCII_t<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="47"/></condition><then pos:line="33" pos:column="47">
	    <block type="pseudo"><return pos:line="34" pos:column="13">return <expr><name pos:line="34" pos:column="20">ASCII_QUOT<pos:position pos:line="34" pos:column="30"/></name></expr>;<pos:position pos:line="34" pos:column="31"/></return></block></then></if>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>
      }<pos:position pos:line="36" pos:column="8"/></block></then></if>
      <break pos:line="37" pos:column="7">break;<pos:position pos:line="37" pos:column="13"/></break>
    <case pos:line="38" pos:column="5">case <expr><name pos:line="38" pos:column="10">ASCII_a<pos:position pos:line="38" pos:column="17"/></name></expr>:<pos:position pos:line="38" pos:column="18"/></case>
      <expr_stmt><expr><name pos:line="39" pos:column="7">ptr<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">+=<pos:position pos:line="39" pos:column="13"/></operator> <call><name pos:line="39" pos:column="14">MINBPC<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">(<argument><expr><name pos:line="39" pos:column="21">enc<pos:position pos:line="39" pos:column="24"/></name></expr></argument>)<pos:position pos:line="39" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>
      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><call><name pos:line="40" pos:column="11">CHAR_MATCHES<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><name pos:line="40" pos:column="24">enc<pos:position pos:line="40" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="29">ptr<pos:position pos:line="40" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="34">ASCII_p<pos:position pos:line="40" pos:column="41"/></name></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="43"/></condition><then pos:line="40" pos:column="43"> <block pos:line="40" pos:column="44">{
	<expr_stmt><expr><name pos:line="41" pos:column="9">ptr<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">+=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">MINBPC<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name pos:line="41" pos:column="23">enc<pos:position pos:line="41" pos:column="26"/></name></expr></argument>)<pos:position pos:line="41" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name pos:line="42" pos:column="13">CHAR_MATCHES<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><name pos:line="42" pos:column="26">enc<pos:position pos:line="42" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="31">ptr<pos:position pos:line="42" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="36">ASCII_o<pos:position pos:line="42" pos:column="43"/></name></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="45"/></condition><then pos:line="42" pos:column="45"> <block pos:line="42" pos:column="46">{
	  <expr_stmt><expr><name pos:line="43" pos:column="11">ptr<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">+=<pos:position pos:line="43" pos:column="17"/></operator> <call><name pos:line="43" pos:column="18">MINBPC<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><name pos:line="43" pos:column="25">enc<pos:position pos:line="43" pos:column="28"/></name></expr></argument>)<pos:position pos:line="43" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="30"/></expr_stmt>
  	  <if pos:line="44" pos:column="11">if <condition pos:line="44" pos:column="14">(<expr><call><name pos:line="44" pos:column="15">CHAR_MATCHES<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><name pos:line="44" pos:column="28">enc<pos:position pos:line="44" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="33">ptr<pos:position pos:line="44" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="38">ASCII_s<pos:position pos:line="44" pos:column="45"/></name></expr></argument>)<pos:position pos:line="44" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="47"/></condition><then pos:line="44" pos:column="47">
	    <block type="pseudo"><return pos:line="45" pos:column="13">return <expr><name pos:line="45" pos:column="20">ASCII_APOS<pos:position pos:line="45" pos:column="30"/></name></expr>;<pos:position pos:line="45" pos:column="31"/></return></block></then></if>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>
      }<pos:position pos:line="47" pos:column="8"/></block></then></if>
      <break pos:line="48" pos:column="7">break;<pos:position pos:line="48" pos:column="13"/></break>
    }<pos:position pos:line="49" pos:column="6"/></block></switch>
  }<pos:position pos:line="50" pos:column="4"/></block></switch>
  <return pos:line="51" pos:column="3">return <expr><literal type="number" pos:line="51" pos:column="10">0<pos:position pos:line="51" pos:column="11"/></literal></expr>;<pos:position pos:line="51" pos:column="12"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

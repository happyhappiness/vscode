<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6657.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">h2_stream_out_prepare<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">h2_stream<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">stream<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="2" pos:column="36">apr_off_t<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">plen<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">int<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">peos<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">conn_rec<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">c<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name><name pos:line="4" pos:column="19">stream<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">session<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">-&gt;<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="36">c<pos:position pos:line="4" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">APR_SUCCESS<pos:position pos:line="5" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_off_t<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">requested<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">stream<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">rst_error<pos:position pos:line="8" pos:column="26"/></name></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27"> <block pos:line="8" pos:column="28">{
        <expr_stmt><expr><operator pos:line="9" pos:column="9">*<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">plen<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <literal type="number" pos:line="9" pos:column="17">0<pos:position pos:line="9" pos:column="18"/></literal></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">peos<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="number" pos:line="10" pos:column="17">1<pos:position pos:line="10" pos:column="18"/></literal></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">APR_ECONNRESET<pos:position pos:line="11" pos:column="30"/></name></expr>;<pos:position pos:line="11" pos:column="31"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">plen<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">&gt;<pos:position pos:line="14" pos:column="19"/></operator> <literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19"> <block pos:line="14" pos:column="20">{
        <expr_stmt><expr><name pos:line="15" pos:column="9">requested<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">H2MIN<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><operator pos:line="15" pos:column="27">*<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="28">plen<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">DATA_CHUNK_SIZE<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then>
    <else pos:line="17" pos:column="5">else <block pos:line="17" pos:column="10">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">requested<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">DATA_CHUNK_SIZE<pos:position pos:line="18" pos:column="36"/></name></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></else></if>
    <expr_stmt><expr><operator pos:line="20" pos:column="5">*<pos:position pos:line="20" pos:column="6"/></operator><name pos:line="20" pos:column="6">plen<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <name pos:line="20" pos:column="13">requested<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
    
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">H2_STREAM_OUT_LOG<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">APLOG_TRACE2<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="37">stream<pos:position pos:line="22" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="45">"h2_stream_out_prepare_pre"<pos:position pos:line="22" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">h2_util_bb_avail<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name><name pos:line="23" pos:column="22">stream<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">buffer<pos:position pos:line="23" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="38">plen<pos:position pos:line="23" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="44">peos<pos:position pos:line="23" pos:column="48"/></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="50"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><operator pos:line="24" pos:column="10">*<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="11">peos<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">&amp;&amp;<pos:position pos:line="24" pos:column="26"/></operator> <operator pos:line="24" pos:column="19">*<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="20">plen<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">&lt;<pos:position pos:line="24" pos:column="29"/></operator> <name pos:line="24" pos:column="27">requested<pos:position pos:line="24" pos:column="36"/></name></expr>)<pos:position pos:line="24" pos:column="37"/></condition><then pos:line="24" pos:column="37"> <block pos:line="24" pos:column="38">{
        <comment type="block" pos:line="25" pos:column="9">/* try to get more data */</comment>
        <expr_stmt><expr><name pos:line="26" pos:column="9">status<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <call><name pos:line="26" pos:column="18">fill_buffer<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">stream<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="38">(<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="39">requested<pos:position pos:line="26" pos:column="48"/></name> <operator pos:line="26" pos:column="49">-<pos:position pos:line="26" pos:column="50"/></operator> <operator pos:line="26" pos:column="51">*<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="52">plen<pos:position pos:line="26" pos:column="56"/></name><operator pos:line="26" pos:column="56">)<pos:position pos:line="26" pos:column="57"/></operator> <operator pos:line="26" pos:column="58">+<pos:position pos:line="26" pos:column="59"/></operator> <name pos:line="26" pos:column="60">DATA_CHUNK_SIZE<pos:position pos:line="26" pos:column="75"/></name></expr></argument>)<pos:position pos:line="26" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="77"/></expr_stmt>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">APR_STATUS_IS_EOF<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">status<pos:position pos:line="27" pos:column="37"/></name></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="39"/></condition><then pos:line="27" pos:column="39"> <block pos:line="27" pos:column="40">{
            <decl_stmt><decl><type><name pos:line="28" pos:column="13">apr_bucket<pos:position pos:line="28" pos:column="23"/></name> <modifier pos:line="28" pos:column="24">*<pos:position pos:line="28" pos:column="25"/></modifier></type><name pos:line="28" pos:column="25">eos<pos:position pos:line="28" pos:column="28"/></name> <init pos:line="28" pos:column="29">= <expr><call><name pos:line="28" pos:column="31">apr_bucket_eos_create<pos:position pos:line="28" pos:column="52"/></name><argument_list pos:line="28" pos:column="52">(<argument><expr><name><name pos:line="28" pos:column="53">c<pos:position pos:line="28" pos:column="54"/></name><operator pos:line="28" pos:column="54">-&gt;<pos:position pos:line="28" pos:column="59"/></operator><name pos:line="28" pos:column="56">bucket_alloc<pos:position pos:line="28" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="70"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><name><name pos:line="29" pos:column="37">stream<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">-&gt;<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="45">buffer<pos:position pos:line="29" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="53">eos<pos:position pos:line="29" pos:column="56"/></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name pos:line="30" pos:column="13">status<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <name pos:line="30" pos:column="22">APR_SUCCESS<pos:position pos:line="30" pos:column="33"/></name></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then>
        <elseif pos:line="32" pos:column="9">else <if pos:line="32" pos:column="14">if <condition pos:line="32" pos:column="17">(<expr><name pos:line="32" pos:column="18">status<pos:position pos:line="32" pos:column="24"/></name> <operator pos:line="32" pos:column="25">==<pos:position pos:line="32" pos:column="27"/></operator> <name pos:line="32" pos:column="28">APR_EAGAIN<pos:position pos:line="32" pos:column="38"/></name></expr>)<pos:position pos:line="32" pos:column="39"/></condition><then pos:line="32" pos:column="39"> <block pos:line="32" pos:column="40">{
            <comment type="block" pos:line="33" pos:column="13">/* did not receive more, it's ok */</comment>
            <expr_stmt><expr><name pos:line="34" pos:column="13">status<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <name pos:line="34" pos:column="22">APR_SUCCESS<pos:position pos:line="34" pos:column="33"/></name></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if></elseif></if>
        <expr_stmt><expr><operator pos:line="36" pos:column="9">*<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">plen<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <name pos:line="36" pos:column="17">requested<pos:position pos:line="36" pos:column="26"/></name></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">h2_util_bb_avail<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name><name pos:line="37" pos:column="26">stream<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">-&gt;<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="34">buffer<pos:position pos:line="37" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="42">plen<pos:position pos:line="37" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="48">peos<pos:position pos:line="37" pos:column="52"/></name></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">H2_STREAM_OUT_LOG<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><name pos:line="39" pos:column="23">APLOG_TRACE2<pos:position pos:line="39" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="37">stream<pos:position pos:line="39" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="45">"h2_stream_out_prepare_post"<pos:position pos:line="39" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">ap_log_cerror<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><name pos:line="40" pos:column="19">APLOG_MARK<pos:position pos:line="40" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="31">APLOG_TRACE1<pos:position pos:line="40" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="45">status<pos:position pos:line="40" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="53">c<pos:position pos:line="40" pos:column="54"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="41" pos:column="19">"h2_stream(%ld-%d): prepare, len=%ld eos=%d, trailers=%s"<pos:position pos:line="41" pos:column="76"/></literal></expr></argument>,
                  <argument><expr><name><name pos:line="42" pos:column="19">c<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">-&gt;<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="22">id<pos:position pos:line="42" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="26">stream<pos:position pos:line="42" pos:column="32"/></name><operator pos:line="42" pos:column="32">-&gt;<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="34">id<pos:position pos:line="42" pos:column="36"/></name></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="38">(<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="39">long<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">)<pos:position pos:line="42" pos:column="44"/></operator><operator pos:line="42" pos:column="44">*<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="45">plen<pos:position pos:line="42" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="51">*<pos:position pos:line="42" pos:column="52"/></operator><name pos:line="42" pos:column="52">peos<pos:position pos:line="42" pos:column="56"/></name></expr></argument>,
                  <argument><expr><ternary><condition><expr><operator pos:line="43" pos:column="19">(<pos:position pos:line="43" pos:column="20"/></operator><name><name pos:line="43" pos:column="20">stream<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">-&gt;<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="28">response<pos:position pos:line="43" pos:column="36"/></name></name> <operator pos:line="43" pos:column="37">&amp;&amp;<pos:position pos:line="43" pos:column="47"/></operator> <name><name pos:line="43" pos:column="40">stream<pos:position pos:line="43" pos:column="46"/></name><operator pos:line="43" pos:column="46">-&gt;<pos:position pos:line="43" pos:column="51"/></operator><name pos:line="43" pos:column="48">response<pos:position pos:line="43" pos:column="56"/></name><operator pos:line="43" pos:column="56">-&gt;<pos:position pos:line="43" pos:column="61"/></operator><name pos:line="43" pos:column="58">trailers<pos:position pos:line="43" pos:column="66"/></name></name><operator pos:line="43" pos:column="66">)<pos:position pos:line="43" pos:column="67"/></operator></expr>?<pos:position pos:line="43" pos:column="68"/></condition><then pos:line="43" pos:column="68"> 
                  <expr><literal type="string" pos:line="44" pos:column="19">"yes"<pos:position pos:line="44" pos:column="24"/></literal></expr> <pos:position pos:line="44" pos:column="25"/></then><else pos:line="44" pos:column="25">: <expr><literal type="string" pos:line="44" pos:column="27">"no"<pos:position pos:line="44" pos:column="31"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="44" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="33"/></expr_stmt>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">!<pos:position pos:line="45" pos:column="10"/></operator><operator pos:line="45" pos:column="10">*<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="11">peos<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">&amp;&amp;<pos:position pos:line="45" pos:column="26"/></operator> <operator pos:line="45" pos:column="19">!<pos:position pos:line="45" pos:column="20"/></operator><operator pos:line="45" pos:column="20">*<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="21">plen<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">&amp;&amp;<pos:position pos:line="45" pos:column="36"/></operator> <name pos:line="45" pos:column="29">status<pos:position pos:line="45" pos:column="35"/></name> <operator pos:line="45" pos:column="36">==<pos:position pos:line="45" pos:column="38"/></operator> <name pos:line="45" pos:column="39">APR_SUCCESS<pos:position pos:line="45" pos:column="50"/></name></expr>)<pos:position pos:line="45" pos:column="51"/></condition><then pos:line="45" pos:column="51"> <block pos:line="45" pos:column="52">{
        <return pos:line="46" pos:column="9">return <expr><name pos:line="46" pos:column="16">APR_EAGAIN<pos:position pos:line="46" pos:column="26"/></name></expr>;<pos:position pos:line="46" pos:column="27"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
    <return pos:line="48" pos:column="5">return <expr><name pos:line="48" pos:column="12">status<pos:position pos:line="48" pos:column="18"/></name></expr>;<pos:position pos:line="48" pos:column="19"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2656_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">expr_lookup_fn<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">ap_expr_lookup_parms<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">parms<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name><name pos:line="3" pos:column="9">parms<pos:position pos:line="3" pos:column="14"/></name><operator pos:line="3" pos:column="14">-&gt;<pos:position pos:line="3" pos:column="19"/></operator><name pos:line="3" pos:column="16">type<pos:position pos:line="3" pos:column="20"/></name></name> <operator pos:line="3" pos:column="21">==<pos:position pos:line="3" pos:column="23"/></operator> <name pos:line="3" pos:column="24">AP_EXPR_FUNC_VAR<pos:position pos:line="3" pos:column="40"/></name>
        <operator pos:line="4" pos:column="9">&amp;&amp;<pos:position pos:line="4" pos:column="19"/></operator> <call><name pos:line="4" pos:column="12">strcasecmp<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><name><name pos:line="4" pos:column="23">parms<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">-&gt;<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="30">name<pos:position pos:line="4" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="36">"REMOTE_USER"<pos:position pos:line="4" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="50"/></argument_list></call> <operator pos:line="4" pos:column="51">==<pos:position pos:line="4" pos:column="53"/></operator> <literal type="number" pos:line="4" pos:column="54">0<pos:position pos:line="4" pos:column="55"/></literal></expr>)<pos:position pos:line="4" pos:column="56"/></condition><then pos:line="4" pos:column="56"> <block pos:line="4" pos:column="57">{
        <decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">require_expr_info<pos:position pos:line="5" pos:column="33"/></name></name> <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier></type><name pos:line="5" pos:column="35">info<pos:position pos:line="5" pos:column="39"/></name></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">apr_pool_userdata_get<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><operator pos:line="6" pos:column="31">(<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="32">void<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">*<pos:position pos:line="6" pos:column="37"/></operator><operator pos:line="6" pos:column="37">*<pos:position pos:line="6" pos:column="38"/></operator><operator pos:line="6" pos:column="38">)<pos:position pos:line="6" pos:column="39"/></operator><operator pos:line="6" pos:column="39">&amp;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="40">info<pos:position pos:line="6" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="46">REQUIRE_EXPR_NOTE<pos:position pos:line="6" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="65">parms<pos:position pos:line="6" pos:column="70"/></name><operator pos:line="6" pos:column="70">-&gt;<pos:position pos:line="6" pos:column="75"/></operator><name pos:line="6" pos:column="72">ptemp<pos:position pos:line="6" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">AP_DEBUG_ASSERT<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">info<pos:position pos:line="7" pos:column="29"/></name> <operator pos:line="7" pos:column="30">!=<pos:position pos:line="7" pos:column="32"/></operator> <name pos:line="7" pos:column="33">NULL<pos:position pos:line="7" pos:column="37"/></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="8" pos:column="9">info<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">want_user<pos:position pos:line="8" pos:column="24"/></name></name> <operator pos:line="8" pos:column="25">=<pos:position pos:line="8" pos:column="26"/></operator> <literal type="number" pos:line="8" pos:column="27">1<pos:position pos:line="8" pos:column="28"/></literal></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
    <return pos:line="10" pos:column="5">return <expr><call><name pos:line="10" pos:column="12">ap_expr_lookup_default<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">parms<pos:position pos:line="10" pos:column="40"/></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="42"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

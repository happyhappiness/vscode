<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6165.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">get_mplx_next<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">h2_worker<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">worker<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">void<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">ctx<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, 
                                  <parameter><decl><type><name pos:line="2" pos:column="35">h2_task<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier><modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">ptask<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">int<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">psticky<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">status<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_time_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">wait_until<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><literal type="number" pos:line="5" pos:column="29">0<pos:position pos:line="5" pos:column="30"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="32">now<pos:position pos:line="5" pos:column="35"/></name></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">h2_workers<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">workers<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">ctx<pos:position pos:line="6" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">h2_task<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">task<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">NULL<pos:position pos:line="7" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    
    <expr_stmt><expr><operator pos:line="9" pos:column="5">*<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">ptask<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">NULL<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="10" pos:column="5">*<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">psticky<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt>
    
    <expr_stmt><expr><name pos:line="12" pos:column="5">status<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">apr_thread_mutex_lock<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><name><name pos:line="12" pos:column="36">workers<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">lock<pos:position pos:line="12" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">status<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">==<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">APR_SUCCESS<pos:position pos:line="13" pos:column="30"/></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <block pos:line="13" pos:column="32">{
        <expr_stmt><expr><operator pos:line="14" pos:column="9">++<pos:position pos:line="14" pos:column="11"/></operator><name><name pos:line="14" pos:column="11">workers<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">idle_workers<pos:position pos:line="14" pos:column="32"/></name></name></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">ap_log_error<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">APLOG_MARK<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">APLOG_TRACE3<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="48">0<pos:position pos:line="15" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="51">workers<pos:position pos:line="15" pos:column="58"/></name><operator pos:line="15" pos:column="58">-&gt;<pos:position pos:line="15" pos:column="63"/></operator><name pos:line="15" pos:column="60">s<pos:position pos:line="15" pos:column="61"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="16" pos:column="22">"h2_worker(%d): looking for work"<pos:position pos:line="16" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="57">h2_worker_get_id<pos:position pos:line="16" pos:column="73"/></name><argument_list pos:line="16" pos:column="73">(<argument><expr><name pos:line="16" pos:column="74">worker<pos:position pos:line="16" pos:column="80"/></name></expr></argument>)<pos:position pos:line="16" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="83"/></expr_stmt>
        
        <while pos:line="18" pos:column="9">while <condition pos:line="18" pos:column="15">(<expr><operator pos:line="18" pos:column="16">!<pos:position pos:line="18" pos:column="17"/></operator><call><name pos:line="18" pos:column="17">h2_worker_is_aborted<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">worker<pos:position pos:line="18" pos:column="44"/></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call> <operator pos:line="18" pos:column="46">&amp;&amp;<pos:position pos:line="18" pos:column="56"/></operator> <operator pos:line="18" pos:column="49">!<pos:position pos:line="18" pos:column="50"/></operator><name><name pos:line="18" pos:column="50">workers<pos:position pos:line="18" pos:column="57"/></name><operator pos:line="18" pos:column="57">-&gt;<pos:position pos:line="18" pos:column="62"/></operator><name pos:line="18" pos:column="59">aborted<pos:position pos:line="18" pos:column="66"/></name></name>
               <operator pos:line="19" pos:column="16">&amp;&amp;<pos:position pos:line="19" pos:column="26"/></operator> <operator pos:line="19" pos:column="19">!<pos:position pos:line="19" pos:column="20"/></operator><operator pos:line="19" pos:column="20">(<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">task<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <call><name pos:line="19" pos:column="28">next_task<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">workers<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call><operator pos:line="19" pos:column="46">)<pos:position pos:line="19" pos:column="47"/></operator></expr>)<pos:position pos:line="19" pos:column="48"/></condition> <block pos:line="19" pos:column="49">{
        
            <comment type="block" pos:line="21" pos:column="13">/* Need to wait for a new tasks to arrive. If we are above
             * minimum workers, we do a timed wait. When timeout occurs
             * and we have still more workers, we shut down one after
             * the other. */</comment>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">cleanup_zombies<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">workers<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="38">0<pos:position pos:line="25" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><name><name pos:line="26" pos:column="17">workers<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">-&gt;<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="26">worker_count<pos:position pos:line="26" pos:column="38"/></name></name> <operator pos:line="26" pos:column="39">&gt;<pos:position pos:line="26" pos:column="43"/></operator> <name><name pos:line="26" pos:column="41">workers<pos:position pos:line="26" pos:column="48"/></name><operator pos:line="26" pos:column="48">-&gt;<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="50">min_workers<pos:position pos:line="26" pos:column="61"/></name></name></expr>)<pos:position pos:line="26" pos:column="62"/></condition><then pos:line="26" pos:column="62"> <block pos:line="26" pos:column="63">{
                <expr_stmt><expr><name pos:line="27" pos:column="17">now<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <call><name pos:line="27" pos:column="23">apr_time_now<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">()<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
                <if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">now<pos:position pos:line="28" pos:column="24"/></name> <operator pos:line="28" pos:column="25">&gt;=<pos:position pos:line="28" pos:column="30"/></operator> <name pos:line="28" pos:column="28">wait_until<pos:position pos:line="28" pos:column="38"/></name></expr>)<pos:position pos:line="28" pos:column="39"/></condition><then pos:line="28" pos:column="39"> <block pos:line="28" pos:column="40">{
                    <expr_stmt><expr><name pos:line="29" pos:column="21">wait_until<pos:position pos:line="29" pos:column="31"/></name> <operator pos:line="29" pos:column="32">=<pos:position pos:line="29" pos:column="33"/></operator> <name pos:line="29" pos:column="34">now<pos:position pos:line="29" pos:column="37"/></name> <operator pos:line="29" pos:column="38">+<pos:position pos:line="29" pos:column="39"/></operator> <call><name pos:line="29" pos:column="40">apr_time_from_sec<pos:position pos:line="29" pos:column="57"/></name><argument_list pos:line="29" pos:column="57">(<argument><expr><name><name pos:line="29" pos:column="58">workers<pos:position pos:line="29" pos:column="65"/></name><operator pos:line="29" pos:column="65">-&gt;<pos:position pos:line="29" pos:column="70"/></operator><name pos:line="29" pos:column="67">max_idle_secs<pos:position pos:line="29" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="82"/></expr_stmt>
                }<pos:position pos:line="30" pos:column="18"/></block></then></if>
                
                <expr_stmt><expr><call><name pos:line="32" pos:column="17">ap_log_error<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><name pos:line="32" pos:column="30">APLOG_MARK<pos:position pos:line="32" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="42">APLOG_TRACE3<pos:position pos:line="32" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="56">0<pos:position pos:line="32" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="59">workers<pos:position pos:line="32" pos:column="66"/></name><operator pos:line="32" pos:column="66">-&gt;<pos:position pos:line="32" pos:column="71"/></operator><name pos:line="32" pos:column="68">s<pos:position pos:line="32" pos:column="69"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="33" pos:column="30">"h2_worker(%d): waiting signal, "<pos:position pos:line="33" pos:column="63"/></literal>
                             <literal type="string" pos:line="34" pos:column="30">"workers=%d, idle=%d"<pos:position pos:line="34" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="53">worker<pos:position pos:line="34" pos:column="59"/></name><operator pos:line="34" pos:column="59">-&gt;<pos:position pos:line="34" pos:column="64"/></operator><name pos:line="34" pos:column="61">id<pos:position pos:line="34" pos:column="63"/></name></name></expr></argument>, 
                             <argument><expr><operator pos:line="35" pos:column="30">(<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="31">int<pos:position pos:line="35" pos:column="34"/></name><operator pos:line="35" pos:column="34">)<pos:position pos:line="35" pos:column="35"/></operator><name><name pos:line="35" pos:column="35">workers<pos:position pos:line="35" pos:column="42"/></name><operator pos:line="35" pos:column="42">-&gt;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="44">worker_count<pos:position pos:line="35" pos:column="56"/></name></name></expr></argument>, 
                             <argument><expr><name><name pos:line="36" pos:column="30">workers<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">-&gt;<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="39">idle_workers<pos:position pos:line="36" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><name pos:line="37" pos:column="17">status<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <call><name pos:line="37" pos:column="26">apr_thread_cond_timedwait<pos:position pos:line="37" pos:column="51"/></name><argument_list pos:line="37" pos:column="51">(<argument><expr><name><name pos:line="37" pos:column="52">workers<pos:position pos:line="37" pos:column="59"/></name><operator pos:line="37" pos:column="59">-&gt;<pos:position pos:line="37" pos:column="64"/></operator><name pos:line="37" pos:column="61">mplx_added<pos:position pos:line="37" pos:column="71"/></name></name></expr></argument>,
                                                   <argument><expr><name><name pos:line="38" pos:column="52">workers<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">-&gt;<pos:position pos:line="38" pos:column="64"/></operator><name pos:line="38" pos:column="61">lock<pos:position pos:line="38" pos:column="65"/></name></name></expr></argument>, 
                                                   <argument><expr><name pos:line="39" pos:column="52">wait_until<pos:position pos:line="39" pos:column="62"/></name> <operator pos:line="39" pos:column="63">-<pos:position pos:line="39" pos:column="64"/></operator> <name pos:line="39" pos:column="65">now<pos:position pos:line="39" pos:column="68"/></name></expr></argument>)<pos:position pos:line="39" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="70"/></expr_stmt>
                <if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">status<pos:position pos:line="40" pos:column="27"/></name> <operator pos:line="40" pos:column="28">==<pos:position pos:line="40" pos:column="30"/></operator> <name pos:line="40" pos:column="31">APR_TIMEUP<pos:position pos:line="40" pos:column="41"/></name>
                    <operator pos:line="41" pos:column="21">&amp;&amp;<pos:position pos:line="41" pos:column="31"/></operator> <name><name pos:line="41" pos:column="24">workers<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">-&gt;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="33">worker_count<pos:position pos:line="41" pos:column="45"/></name></name> <operator pos:line="41" pos:column="46">&gt;<pos:position pos:line="41" pos:column="50"/></operator> <name><name pos:line="41" pos:column="48">workers<pos:position pos:line="41" pos:column="55"/></name><operator pos:line="41" pos:column="55">-&gt;<pos:position pos:line="41" pos:column="60"/></operator><name pos:line="41" pos:column="57">min_workers<pos:position pos:line="41" pos:column="68"/></name></name></expr>)<pos:position pos:line="41" pos:column="69"/></condition><then pos:line="41" pos:column="69"> <block pos:line="41" pos:column="70">{
                    <comment type="block" pos:line="42" pos:column="21">/* waited long enough without getting a task and
                     * we are above min workers, abort this one. */</comment>
                    <expr_stmt><expr><call><name pos:line="44" pos:column="21">ap_log_error<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><name pos:line="44" pos:column="34">APLOG_MARK<pos:position pos:line="44" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="46">APLOG_TRACE3<pos:position pos:line="44" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="60">0<pos:position pos:line="44" pos:column="61"/></literal></expr></argument>, 
                                 <argument><expr><name><name pos:line="45" pos:column="34">workers<pos:position pos:line="45" pos:column="41"/></name><operator pos:line="45" pos:column="41">-&gt;<pos:position pos:line="45" pos:column="46"/></operator><name pos:line="45" pos:column="43">s<pos:position pos:line="45" pos:column="44"/></name></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="46" pos:column="34">"h2_workers: aborting idle worker"<pos:position pos:line="46" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="70"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="47" pos:column="21">h2_worker_abort<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><name pos:line="47" pos:column="37">worker<pos:position pos:line="47" pos:column="43"/></name></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="45"/></expr_stmt>
                    <break pos:line="48" pos:column="21">break;<pos:position pos:line="48" pos:column="27"/></break>
                }<pos:position pos:line="49" pos:column="18"/></block></then></if>
            }<pos:position pos:line="50" pos:column="14"/></block></then>
            <else pos:line="51" pos:column="13">else <block pos:line="51" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="52" pos:column="17">ap_log_error<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><name pos:line="52" pos:column="30">APLOG_MARK<pos:position pos:line="52" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="42">APLOG_TRACE3<pos:position pos:line="52" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="56">0<pos:position pos:line="52" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="59">workers<pos:position pos:line="52" pos:column="66"/></name><operator pos:line="52" pos:column="66">-&gt;<pos:position pos:line="52" pos:column="71"/></operator><name pos:line="52" pos:column="68">s<pos:position pos:line="52" pos:column="69"/></name></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="53" pos:column="30">"h2_worker(%d): waiting signal (eternal), "<pos:position pos:line="53" pos:column="73"/></literal>
                             <literal type="string" pos:line="54" pos:column="30">"worker_count=%d, idle=%d"<pos:position pos:line="54" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="58">worker<pos:position pos:line="54" pos:column="64"/></name><operator pos:line="54" pos:column="64">-&gt;<pos:position pos:line="54" pos:column="69"/></operator><name pos:line="54" pos:column="66">id<pos:position pos:line="54" pos:column="68"/></name></name></expr></argument>, 
                             <argument><expr><operator pos:line="55" pos:column="30">(<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="31">int<pos:position pos:line="55" pos:column="34"/></name><operator pos:line="55" pos:column="34">)<pos:position pos:line="55" pos:column="35"/></operator><name><name pos:line="55" pos:column="35">workers<pos:position pos:line="55" pos:column="42"/></name><operator pos:line="55" pos:column="42">-&gt;<pos:position pos:line="55" pos:column="47"/></operator><name pos:line="55" pos:column="44">worker_count<pos:position pos:line="55" pos:column="56"/></name></name></expr></argument>,
                             <argument><expr><name><name pos:line="56" pos:column="30">workers<pos:position pos:line="56" pos:column="37"/></name><operator pos:line="56" pos:column="37">-&gt;<pos:position pos:line="56" pos:column="42"/></operator><name pos:line="56" pos:column="39">idle_workers<pos:position pos:line="56" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="57" pos:column="17">apr_thread_cond_wait<pos:position pos:line="57" pos:column="37"/></name><argument_list pos:line="57" pos:column="37">(<argument><expr><name><name pos:line="57" pos:column="38">workers<pos:position pos:line="57" pos:column="45"/></name><operator pos:line="57" pos:column="45">-&gt;<pos:position pos:line="57" pos:column="50"/></operator><name pos:line="57" pos:column="47">mplx_added<pos:position pos:line="57" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="59">workers<pos:position pos:line="57" pos:column="66"/></name><operator pos:line="57" pos:column="66">-&gt;<pos:position pos:line="57" pos:column="71"/></operator><name pos:line="57" pos:column="68">lock<pos:position pos:line="57" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="74"/></expr_stmt>
            }<pos:position pos:line="58" pos:column="14"/></block></else></if>
        }<pos:position pos:line="59" pos:column="10"/></block></while>
        
        <comment type="block" pos:line="61" pos:column="9">/* Here, we either have gotten task or decided to shut down
         * the calling worker.
         */</comment>
        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">task<pos:position pos:line="64" pos:column="17"/></name></expr>)<pos:position pos:line="64" pos:column="18"/></condition><then pos:line="64" pos:column="18"> <block pos:line="64" pos:column="19">{
            <comment type="block" pos:line="65" pos:column="13">/* Ok, we got something to give back to the worker for execution. 
             * If we have more idle workers than h2_mplx in our queue, then
             * we let the worker be sticky, e.g. making it poll the task's
             * h2_mplx instance for more work before asking back here.
             * This avoids entering our global lock as long as enough idle
             * workers remain. Stickiness of a worker ends when the connection
             * has no new tasks to process, so the worker will get back here
             * eventually.
             */</comment>
            <expr_stmt><expr><operator pos:line="74" pos:column="13">*<pos:position pos:line="74" pos:column="14"/></operator><name pos:line="74" pos:column="14">ptask<pos:position pos:line="74" pos:column="19"/></name> <operator pos:line="74" pos:column="20">=<pos:position pos:line="74" pos:column="21"/></operator> <name pos:line="74" pos:column="22">task<pos:position pos:line="74" pos:column="26"/></name></expr>;<pos:position pos:line="74" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="75" pos:column="13">*<pos:position pos:line="75" pos:column="14"/></operator><name pos:line="75" pos:column="14">psticky<pos:position pos:line="75" pos:column="21"/></name> <operator pos:line="75" pos:column="22">=<pos:position pos:line="75" pos:column="23"/></operator> <operator pos:line="75" pos:column="24">(<pos:position pos:line="75" pos:column="25"/></operator><name><name pos:line="75" pos:column="25">workers<pos:position pos:line="75" pos:column="32"/></name><operator pos:line="75" pos:column="32">-&gt;<pos:position pos:line="75" pos:column="37"/></operator><name pos:line="75" pos:column="34">max_workers<pos:position pos:line="75" pos:column="45"/></name></name> <operator pos:line="75" pos:column="46">&gt;=<pos:position pos:line="75" pos:column="51"/></operator> <name><name pos:line="75" pos:column="49">workers<pos:position pos:line="75" pos:column="56"/></name><operator pos:line="75" pos:column="56">-&gt;<pos:position pos:line="75" pos:column="61"/></operator><name pos:line="75" pos:column="58">mplx_count<pos:position pos:line="75" pos:column="68"/></name></name><operator pos:line="75" pos:column="68">)<pos:position pos:line="75" pos:column="69"/></operator></expr>;<pos:position pos:line="75" pos:column="70"/></expr_stmt>
            
            <if pos:line="77" pos:column="13">if <condition pos:line="77" pos:column="16">(<expr><name><name pos:line="77" pos:column="17">workers<pos:position pos:line="77" pos:column="24"/></name><operator pos:line="77" pos:column="24">-&gt;<pos:position pos:line="77" pos:column="29"/></operator><name pos:line="77" pos:column="26">mplx_count<pos:position pos:line="77" pos:column="36"/></name></name> <operator pos:line="77" pos:column="37">&amp;&amp;<pos:position pos:line="77" pos:column="47"/></operator> <name><name pos:line="77" pos:column="40">workers<pos:position pos:line="77" pos:column="47"/></name><operator pos:line="77" pos:column="47">-&gt;<pos:position pos:line="77" pos:column="52"/></operator><name pos:line="77" pos:column="49">idle_workers<pos:position pos:line="77" pos:column="61"/></name></name> <operator pos:line="77" pos:column="62">&gt;<pos:position pos:line="77" pos:column="66"/></operator> <literal type="number" pos:line="77" pos:column="64">1<pos:position pos:line="77" pos:column="65"/></literal></expr>)<pos:position pos:line="77" pos:column="66"/></condition><then pos:line="77" pos:column="66"> <block pos:line="77" pos:column="67">{
                <expr_stmt><expr><call><name pos:line="78" pos:column="17">apr_thread_cond_signal<pos:position pos:line="78" pos:column="39"/></name><argument_list pos:line="78" pos:column="39">(<argument><expr><name><name pos:line="78" pos:column="40">workers<pos:position pos:line="78" pos:column="47"/></name><operator pos:line="78" pos:column="47">-&gt;<pos:position pos:line="78" pos:column="52"/></operator><name pos:line="78" pos:column="49">mplx_added<pos:position pos:line="78" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="61"/></expr_stmt>
            }<pos:position pos:line="79" pos:column="14"/></block></then></if>
        }<pos:position pos:line="80" pos:column="10"/></block></then></if>
        
        <expr_stmt><expr><operator pos:line="82" pos:column="9">--<pos:position pos:line="82" pos:column="11"/></operator><name><name pos:line="82" pos:column="11">workers<pos:position pos:line="82" pos:column="18"/></name><operator pos:line="82" pos:column="18">-&gt;<pos:position pos:line="82" pos:column="23"/></operator><name pos:line="82" pos:column="20">idle_workers<pos:position pos:line="82" pos:column="32"/></name></name></expr>;<pos:position pos:line="82" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="83" pos:column="32"/></name><argument_list pos:line="83" pos:column="32">(<argument><expr><name><name pos:line="83" pos:column="33">workers<pos:position pos:line="83" pos:column="40"/></name><operator pos:line="83" pos:column="40">-&gt;<pos:position pos:line="83" pos:column="45"/></operator><name pos:line="83" pos:column="42">lock<pos:position pos:line="83" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>
    
    <return pos:line="86" pos:column="5">return <expr><ternary><condition><expr><operator pos:line="86" pos:column="12">*<pos:position pos:line="86" pos:column="13"/></operator><name pos:line="86" pos:column="13">ptask<pos:position pos:line="86" pos:column="18"/></name></expr>?<pos:position pos:line="86" pos:column="19"/></condition><then pos:line="86" pos:column="19"> <expr><name pos:line="86" pos:column="20">APR_SUCCESS<pos:position pos:line="86" pos:column="31"/></name></expr> <pos:position pos:line="86" pos:column="32"/></then><else pos:line="86" pos:column="32">: <expr><name pos:line="86" pos:column="34">APR_EOF<pos:position pos:line="86" pos:column="41"/></name></expr></else></ternary></expr>;<pos:position pos:line="86" pos:column="42"/></return>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

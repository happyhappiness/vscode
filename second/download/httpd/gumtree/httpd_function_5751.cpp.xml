<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5751.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">make_sock<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">apr_pool_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">p<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">ap_listen_rec<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">server<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_socket_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">s<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name><name pos:line="3" pos:column="23">server<pos:position pos:line="3" pos:column="29"/></name><operator pos:line="3" pos:column="29">-&gt;<pos:position pos:line="3" pos:column="34"/></operator><name pos:line="3" pos:column="31">sd<pos:position pos:line="3" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">one<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><literal type="number" pos:line="4" pos:column="15">1<pos:position pos:line="4" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">APR_HAVE_IPV6<pos:position pos:line="5" pos:column="18"/></name></expr></cpp:if>
<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">AP_ENABLE_V4_MAPPED<pos:position pos:line="6" pos:column="27"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">v6only_setting<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
<cpp:else pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">else<pos:position pos:line="8" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">v6only_setting<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><literal type="number" pos:line="9" pos:column="26">1<pos:position pos:line="9" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">apr_status_t<pos:position pos:line="12" pos:column="17"/></name></type> <name pos:line="12" pos:column="18">stat<pos:position pos:line="12" pos:column="22"/></name></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>

<cpp:ifndef pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">ifndef<pos:position pos:line="14" pos:column="8"/></cpp:directive> <name pos:line="14" pos:column="9">WIN32<pos:position pos:line="14" pos:column="14"/></name></cpp:ifndef>
    <expr_stmt><expr><name pos:line="15" pos:column="5">stat<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <call><name pos:line="15" pos:column="12">apr_socket_opt_set<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">s<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">APR_SO_REUSEADDR<pos:position pos:line="15" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="52">one<pos:position pos:line="15" pos:column="55"/></name></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">stat<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">!=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">APR_SUCCESS<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">&amp;&amp;<pos:position pos:line="16" pos:column="39"/></operator> <name pos:line="16" pos:column="32">stat<pos:position pos:line="16" pos:column="36"/></name> <operator pos:line="16" pos:column="37">!=<pos:position pos:line="16" pos:column="39"/></operator> <name pos:line="16" pos:column="40">APR_ENOTIMPL<pos:position pos:line="16" pos:column="52"/></name></expr>)<pos:position pos:line="16" pos:column="53"/></condition><then pos:line="16" pos:column="53"> <block pos:line="16" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">ap_log_perror<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">APLOG_MARK<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="35">APLOG_CRIT<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="47">stat<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="53">p<pos:position pos:line="17" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="56">APLOGNO<pos:position pos:line="17" pos:column="63"/></name><argument_list pos:line="17" pos:column="63">(<argument><expr><literal type="number" pos:line="17" pos:column="64">00067<pos:position pos:line="17" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></call>
                      <literal type="string" pos:line="18" pos:column="23">"make_sock: for address %pI, apr_socket_opt_set: (SO_REUSEADDR)"<pos:position pos:line="18" pos:column="87"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="19" pos:column="23">server<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">-&gt;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="31">bind_addr<pos:position pos:line="19" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">apr_socket_close<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">s<pos:position pos:line="20" pos:column="27"/></name></expr></argument>)<pos:position pos:line="20" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">stat<pos:position pos:line="21" pos:column="20"/></name></expr>;<pos:position pos:line="21" pos:column="21"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name pos:line="25" pos:column="5">stat<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <call><name pos:line="25" pos:column="12">apr_socket_opt_set<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">s<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">APR_SO_KEEPALIVE<pos:position pos:line="25" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="52">one<pos:position pos:line="25" pos:column="55"/></name></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="57"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">stat<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">!=<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="17">APR_SUCCESS<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">&amp;&amp;<pos:position pos:line="26" pos:column="39"/></operator> <name pos:line="26" pos:column="32">stat<pos:position pos:line="26" pos:column="36"/></name> <operator pos:line="26" pos:column="37">!=<pos:position pos:line="26" pos:column="39"/></operator> <name pos:line="26" pos:column="40">APR_ENOTIMPL<pos:position pos:line="26" pos:column="52"/></name></expr>)<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53"> <block pos:line="26" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">ap_log_perror<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><name pos:line="27" pos:column="23">APLOG_MARK<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="35">APLOG_CRIT<pos:position pos:line="27" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="47">stat<pos:position pos:line="27" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="53">p<pos:position pos:line="27" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="56">APLOGNO<pos:position pos:line="27" pos:column="63"/></name><argument_list pos:line="27" pos:column="63">(<argument><expr><literal type="number" pos:line="27" pos:column="64">00068<pos:position pos:line="27" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call>
                      <literal type="string" pos:line="28" pos:column="23">"make_sock: for address %pI, apr_socket_opt_set: (SO_KEEPALIVE)"<pos:position pos:line="28" pos:column="87"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="29" pos:column="23">server<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">-&gt;<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="31">bind_addr<pos:position pos:line="29" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">apr_socket_close<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">s<pos:position pos:line="30" pos:column="27"/></name></expr></argument>)<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
        <return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">stat<pos:position pos:line="31" pos:column="20"/></name></expr>;<pos:position pos:line="31" pos:column="21"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

<cpp:if pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">if<pos:position pos:line="34" pos:column="4"/></cpp:directive> <expr><name pos:line="34" pos:column="5">APR_HAVE_IPV6<pos:position pos:line="34" pos:column="18"/></name></expr></cpp:if>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name><name pos:line="35" pos:column="9">server<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">-&gt;<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="17">bind_addr<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">-&gt;<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="28">family<pos:position pos:line="35" pos:column="34"/></name></name> <operator pos:line="35" pos:column="35">==<pos:position pos:line="35" pos:column="37"/></operator> <name pos:line="35" pos:column="38">APR_INET6<pos:position pos:line="35" pos:column="47"/></name></expr>)<pos:position pos:line="35" pos:column="48"/></condition><then pos:line="35" pos:column="48"> <block pos:line="35" pos:column="49">{
        <expr_stmt><expr><name pos:line="36" pos:column="9">stat<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <call><name pos:line="36" pos:column="16">apr_socket_opt_set<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><name pos:line="36" pos:column="35">s<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="38">APR_IPV6_V6ONLY<pos:position pos:line="36" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="55">v6only_setting<pos:position pos:line="36" pos:column="69"/></name></expr></argument>)<pos:position pos:line="36" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="71"/></expr_stmt>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">stat<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">!=<pos:position pos:line="37" pos:column="20"/></operator> <name pos:line="37" pos:column="21">APR_SUCCESS<pos:position pos:line="37" pos:column="32"/></name> <operator pos:line="37" pos:column="33">&amp;&amp;<pos:position pos:line="37" pos:column="43"/></operator> <name pos:line="37" pos:column="36">stat<pos:position pos:line="37" pos:column="40"/></name> <operator pos:line="37" pos:column="41">!=<pos:position pos:line="37" pos:column="43"/></operator> <name pos:line="37" pos:column="44">APR_ENOTIMPL<pos:position pos:line="37" pos:column="56"/></name></expr>)<pos:position pos:line="37" pos:column="57"/></condition><then pos:line="37" pos:column="57"> <block pos:line="37" pos:column="58">{
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">ap_log_perror<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><name pos:line="38" pos:column="27">APLOG_MARK<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="39">APLOG_CRIT<pos:position pos:line="38" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="51">stat<pos:position pos:line="38" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="57">p<pos:position pos:line="38" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="60">APLOGNO<pos:position pos:line="38" pos:column="67"/></name><argument_list pos:line="38" pos:column="67">(<argument><expr><literal type="number" pos:line="38" pos:column="68">00069<pos:position pos:line="38" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="74"/></argument_list></call>
                          <literal type="string" pos:line="39" pos:column="27">"make_sock: for address %pI, apr_socket_opt_set: "<pos:position pos:line="39" pos:column="77"/></literal>
                          <literal type="string" pos:line="40" pos:column="27">"(IPV6_V6ONLY)"<pos:position pos:line="40" pos:column="42"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="41" pos:column="27">server<pos:position pos:line="41" pos:column="33"/></name><operator pos:line="41" pos:column="33">-&gt;<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="35">bind_addr<pos:position pos:line="41" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">apr_socket_close<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><name pos:line="42" pos:column="30">s<pos:position pos:line="42" pos:column="31"/></name></expr></argument>)<pos:position pos:line="42" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="33"/></expr_stmt>
            <return pos:line="43" pos:column="13">return <expr><name pos:line="43" pos:column="20">stat<pos:position pos:line="43" pos:column="24"/></name></expr>;<pos:position pos:line="43" pos:column="25"/></return>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="48" pos:column="5">/*
     * To send data over high bandwidth-delay connections at full
     * speed we must force the TCP window to open wide enough to keep the
     * pipe full.  The default window size on many systems
     * is only 4kB.  Cross-country WAN connections of 100ms
     * at 1Mb/s are not impossible for well connected sites.
     * If we assume 100ms cross-country latency,
     * a 4kB buffer limits throughput to 40kB/s.
     *
     * To avoid this problem I've added the SendBufferSize directive
     * to allow the web master to configure send buffer size.
     *
     * The trade-off of larger buffers is that more kernel memory
     * is consumed.  YMMV, know your customers and your network!
     *
     * -John Heidemann &lt;johnh@isi.edu&gt; 25-Oct-96
     *
     * If no size is specified, use the kernel default.
     */</comment>
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name pos:line="67" pos:column="9">send_buffer_size<pos:position pos:line="67" pos:column="25"/></name></expr>)<pos:position pos:line="67" pos:column="26"/></condition><then pos:line="67" pos:column="26"> <block pos:line="67" pos:column="27">{
        <expr_stmt><expr><name pos:line="68" pos:column="9">stat<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">=<pos:position pos:line="68" pos:column="15"/></operator> <call><name pos:line="68" pos:column="16">apr_socket_opt_set<pos:position pos:line="68" pos:column="34"/></name><argument_list pos:line="68" pos:column="34">(<argument><expr><name pos:line="68" pos:column="35">s<pos:position pos:line="68" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="38">APR_SO_SNDBUF<pos:position pos:line="68" pos:column="51"/></name></expr></argument>,  <argument><expr><name pos:line="68" pos:column="54">send_buffer_size<pos:position pos:line="68" pos:column="70"/></name></expr></argument>)<pos:position pos:line="68" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="72"/></expr_stmt>
        <if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><name pos:line="69" pos:column="13">stat<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">!=<pos:position pos:line="69" pos:column="20"/></operator> <name pos:line="69" pos:column="21">APR_SUCCESS<pos:position pos:line="69" pos:column="32"/></name> <operator pos:line="69" pos:column="33">&amp;&amp;<pos:position pos:line="69" pos:column="43"/></operator> <name pos:line="69" pos:column="36">stat<pos:position pos:line="69" pos:column="40"/></name> <operator pos:line="69" pos:column="41">!=<pos:position pos:line="69" pos:column="43"/></operator> <name pos:line="69" pos:column="44">APR_ENOTIMPL<pos:position pos:line="69" pos:column="56"/></name></expr>)<pos:position pos:line="69" pos:column="57"/></condition><then pos:line="69" pos:column="57"> <block pos:line="69" pos:column="58">{
            <expr_stmt><expr><call><name pos:line="70" pos:column="13">ap_log_perror<pos:position pos:line="70" pos:column="26"/></name><argument_list pos:line="70" pos:column="26">(<argument><expr><name pos:line="70" pos:column="27">APLOG_MARK<pos:position pos:line="70" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="39">APLOG_WARNING<pos:position pos:line="70" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="54">stat<pos:position pos:line="70" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="60">p<pos:position pos:line="70" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="70" pos:column="63">APLOGNO<pos:position pos:line="70" pos:column="70"/></name><argument_list pos:line="70" pos:column="70">(<argument><expr><literal type="number" pos:line="70" pos:column="71">00070<pos:position pos:line="70" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="77"/></argument_list></call>
                          <literal type="string" pos:line="71" pos:column="27">"make_sock: failed to set SendBufferSize for "<pos:position pos:line="71" pos:column="73"/></literal>
                          <literal type="string" pos:line="72" pos:column="27">"address %pI, using default"<pos:position pos:line="72" pos:column="55"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="73" pos:column="27">server<pos:position pos:line="73" pos:column="33"/></name><operator pos:line="73" pos:column="33">-&gt;<pos:position pos:line="73" pos:column="38"/></operator><name pos:line="73" pos:column="35">bind_addr<pos:position pos:line="73" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="46"/></expr_stmt>
            <comment type="block" pos:line="74" pos:column="13">/* not a fatal error */</comment>
        }<pos:position pos:line="75" pos:column="10"/></block></then></if>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>
    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><name pos:line="77" pos:column="9">receive_buffer_size<pos:position pos:line="77" pos:column="28"/></name></expr>)<pos:position pos:line="77" pos:column="29"/></condition><then pos:line="77" pos:column="29"> <block pos:line="77" pos:column="30">{
        <expr_stmt><expr><name pos:line="78" pos:column="9">stat<pos:position pos:line="78" pos:column="13"/></name> <operator pos:line="78" pos:column="14">=<pos:position pos:line="78" pos:column="15"/></operator> <call><name pos:line="78" pos:column="16">apr_socket_opt_set<pos:position pos:line="78" pos:column="34"/></name><argument_list pos:line="78" pos:column="34">(<argument><expr><name pos:line="78" pos:column="35">s<pos:position pos:line="78" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="38">APR_SO_RCVBUF<pos:position pos:line="78" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="53">receive_buffer_size<pos:position pos:line="78" pos:column="72"/></name></expr></argument>)<pos:position pos:line="78" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="74"/></expr_stmt>
        <if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><name pos:line="79" pos:column="13">stat<pos:position pos:line="79" pos:column="17"/></name> <operator pos:line="79" pos:column="18">!=<pos:position pos:line="79" pos:column="20"/></operator> <name pos:line="79" pos:column="21">APR_SUCCESS<pos:position pos:line="79" pos:column="32"/></name> <operator pos:line="79" pos:column="33">&amp;&amp;<pos:position pos:line="79" pos:column="43"/></operator> <name pos:line="79" pos:column="36">stat<pos:position pos:line="79" pos:column="40"/></name> <operator pos:line="79" pos:column="41">!=<pos:position pos:line="79" pos:column="43"/></operator> <name pos:line="79" pos:column="44">APR_ENOTIMPL<pos:position pos:line="79" pos:column="56"/></name></expr>)<pos:position pos:line="79" pos:column="57"/></condition><then pos:line="79" pos:column="57"> <block pos:line="79" pos:column="58">{
            <expr_stmt><expr><call><name pos:line="80" pos:column="13">ap_log_perror<pos:position pos:line="80" pos:column="26"/></name><argument_list pos:line="80" pos:column="26">(<argument><expr><name pos:line="80" pos:column="27">APLOG_MARK<pos:position pos:line="80" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="39">APLOG_WARNING<pos:position pos:line="80" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="54">stat<pos:position pos:line="80" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="60">p<pos:position pos:line="80" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="80" pos:column="63">APLOGNO<pos:position pos:line="80" pos:column="70"/></name><argument_list pos:line="80" pos:column="70">(<argument><expr><literal type="number" pos:line="80" pos:column="71">00071<pos:position pos:line="80" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="77"/></argument_list></call>
                          <literal type="string" pos:line="81" pos:column="27">"make_sock: failed to set ReceiveBufferSize for "<pos:position pos:line="81" pos:column="76"/></literal>
                          <literal type="string" pos:line="82" pos:column="27">"address %pI, using default"<pos:position pos:line="82" pos:column="55"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="83" pos:column="27">server<pos:position pos:line="83" pos:column="33"/></name><operator pos:line="83" pos:column="33">-&gt;<pos:position pos:line="83" pos:column="38"/></operator><name pos:line="83" pos:column="35">bind_addr<pos:position pos:line="83" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="46"/></expr_stmt>
            <comment type="block" pos:line="84" pos:column="13">/* not a fatal error */</comment>
        }<pos:position pos:line="85" pos:column="10"/></block></then></if>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if>

<cpp:if pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">if<pos:position pos:line="88" pos:column="4"/></cpp:directive> <expr><name pos:line="88" pos:column="5">APR_TCP_NODELAY_INHERITED<pos:position pos:line="88" pos:column="30"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">ap_sock_disable_nagle<pos:position pos:line="89" pos:column="26"/></name><argument_list pos:line="89" pos:column="26">(<argument><expr><name pos:line="89" pos:column="27">s<pos:position pos:line="89" pos:column="28"/></name></expr></argument>)<pos:position pos:line="89" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="30"/></expr_stmt>
<cpp:endif pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">endif<pos:position pos:line="90" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">if<pos:position pos:line="92" pos:column="4"/></cpp:directive> <expr><call><name pos:line="92" pos:column="5">defined<pos:position pos:line="92" pos:column="12"/></name><argument_list pos:line="92" pos:column="12">(<argument><expr><name pos:line="92" pos:column="13">SO_REUSEPORT<pos:position pos:line="92" pos:column="25"/></name></expr></argument>)<pos:position pos:line="92" pos:column="26"/></argument_list></call></expr></cpp:if>
    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><name pos:line="93" pos:column="9">ap_have_so_reuseport<pos:position pos:line="93" pos:column="29"/></name></expr>)<pos:position pos:line="93" pos:column="30"/></condition><then pos:line="93" pos:column="30"> <block pos:line="93" pos:column="31">{
        <decl_stmt><decl><type><name pos:line="94" pos:column="9">int<pos:position pos:line="94" pos:column="12"/></name></type> <name pos:line="94" pos:column="13">thesock<pos:position pos:line="94" pos:column="20"/></name></decl>;<pos:position pos:line="94" pos:column="21"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="95" pos:column="9">apr_os_sock_get<pos:position pos:line="95" pos:column="24"/></name><argument_list pos:line="95" pos:column="24">(<argument><expr><operator pos:line="95" pos:column="25">&amp;<pos:position pos:line="95" pos:column="30"/></operator><name pos:line="95" pos:column="26">thesock<pos:position pos:line="95" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="35">s<pos:position pos:line="95" pos:column="36"/></name></expr></argument>)<pos:position pos:line="95" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="38"/></expr_stmt>
        <if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><call><name pos:line="96" pos:column="13">setsockopt<pos:position pos:line="96" pos:column="23"/></name><argument_list pos:line="96" pos:column="23">(<argument><expr><name pos:line="96" pos:column="24">thesock<pos:position pos:line="96" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="33">SOL_SOCKET<pos:position pos:line="96" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="45">SO_REUSEPORT<pos:position pos:line="96" pos:column="57"/></name></expr></argument>,
                       <argument><expr><operator pos:line="97" pos:column="24">(<pos:position pos:line="97" pos:column="25"/></operator><name pos:line="97" pos:column="25">void<pos:position pos:line="97" pos:column="29"/></name> <operator pos:line="97" pos:column="30">*<pos:position pos:line="97" pos:column="31"/></operator><operator pos:line="97" pos:column="31">)<pos:position pos:line="97" pos:column="32"/></operator><operator pos:line="97" pos:column="32">&amp;<pos:position pos:line="97" pos:column="37"/></operator><name pos:line="97" pos:column="33">one<pos:position pos:line="97" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="97" pos:column="38">sizeof<argument_list pos:line="97" pos:column="44">(<argument><expr><name pos:line="97" pos:column="45">int<pos:position pos:line="97" pos:column="48"/></name></expr></argument>)<pos:position pos:line="97" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="97" pos:column="50"/></argument_list></call> <operator pos:line="97" pos:column="51">&lt;<pos:position pos:line="97" pos:column="55"/></operator> <literal type="number" pos:line="97" pos:column="53">0<pos:position pos:line="97" pos:column="54"/></literal></expr>)<pos:position pos:line="97" pos:column="55"/></condition><then pos:line="97" pos:column="55"> <block pos:line="97" pos:column="56">{
            <expr_stmt><expr><name pos:line="98" pos:column="13">stat<pos:position pos:line="98" pos:column="17"/></name> <operator pos:line="98" pos:column="18">=<pos:position pos:line="98" pos:column="19"/></operator> <call><name pos:line="98" pos:column="20">apr_get_netos_error<pos:position pos:line="98" pos:column="39"/></name><argument_list pos:line="98" pos:column="39">()<pos:position pos:line="98" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="99" pos:column="13">ap_log_perror<pos:position pos:line="99" pos:column="26"/></name><argument_list pos:line="99" pos:column="26">(<argument><expr><name pos:line="99" pos:column="27">APLOG_MARK<pos:position pos:line="99" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="39">APLOG_CRIT<pos:position pos:line="99" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="51">stat<pos:position pos:line="99" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="57">p<pos:position pos:line="99" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="99" pos:column="60">APLOGNO<pos:position pos:line="99" pos:column="67"/></name><argument_list pos:line="99" pos:column="67">(<argument><expr><literal type="number" pos:line="99" pos:column="68">02638<pos:position pos:line="99" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="74"/></argument_list></call>
                          <literal type="string" pos:line="100" pos:column="27">"make_sock: for address %pI, apr_socket_opt_set: "<pos:position pos:line="100" pos:column="77"/></literal>
                          <literal type="string" pos:line="101" pos:column="27">"(SO_REUSEPORT)"<pos:position pos:line="101" pos:column="43"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="102" pos:column="27">server<pos:position pos:line="102" pos:column="33"/></name><operator pos:line="102" pos:column="33">-&gt;<pos:position pos:line="102" pos:column="38"/></operator><name pos:line="102" pos:column="35">bind_addr<pos:position pos:line="102" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="103" pos:column="13">apr_socket_close<pos:position pos:line="103" pos:column="29"/></name><argument_list pos:line="103" pos:column="29">(<argument><expr><name pos:line="103" pos:column="30">s<pos:position pos:line="103" pos:column="31"/></name></expr></argument>)<pos:position pos:line="103" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="33"/></expr_stmt>
            <return pos:line="104" pos:column="13">return <expr><name pos:line="104" pos:column="20">stat<pos:position pos:line="104" pos:column="24"/></name></expr>;<pos:position pos:line="104" pos:column="25"/></return>
        }<pos:position pos:line="105" pos:column="10"/></block></then></if>
    }<pos:position pos:line="106" pos:column="6"/></block></then></if>
<cpp:endif pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">endif<pos:position pos:line="107" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="109" pos:column="5">if <condition pos:line="109" pos:column="8">(<expr><operator pos:line="109" pos:column="9">(<pos:position pos:line="109" pos:column="10"/></operator><name pos:line="109" pos:column="10">stat<pos:position pos:line="109" pos:column="14"/></name> <operator pos:line="109" pos:column="15">=<pos:position pos:line="109" pos:column="16"/></operator> <call><name pos:line="109" pos:column="17">apr_socket_bind<pos:position pos:line="109" pos:column="32"/></name><argument_list pos:line="109" pos:column="32">(<argument><expr><name pos:line="109" pos:column="33">s<pos:position pos:line="109" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="36">server<pos:position pos:line="109" pos:column="42"/></name><operator pos:line="109" pos:column="42">-&gt;<pos:position pos:line="109" pos:column="47"/></operator><name pos:line="109" pos:column="44">bind_addr<pos:position pos:line="109" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="54"/></argument_list></call><operator pos:line="109" pos:column="54">)<pos:position pos:line="109" pos:column="55"/></operator> <operator pos:line="109" pos:column="56">!=<pos:position pos:line="109" pos:column="58"/></operator> <name pos:line="109" pos:column="59">APR_SUCCESS<pos:position pos:line="109" pos:column="70"/></name></expr>)<pos:position pos:line="109" pos:column="71"/></condition><then pos:line="109" pos:column="71"> <block pos:line="109" pos:column="72">{
        <expr_stmt><expr><call><name pos:line="110" pos:column="9">ap_log_perror<pos:position pos:line="110" pos:column="22"/></name><argument_list pos:line="110" pos:column="22">(<argument><expr><name pos:line="110" pos:column="23">APLOG_MARK<pos:position pos:line="110" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="35">APLOG_STARTUP<pos:position pos:line="110" pos:column="48"/></name><operator pos:line="110" pos:column="48">|<pos:position pos:line="110" pos:column="49"/></operator><name pos:line="110" pos:column="49">APLOG_CRIT<pos:position pos:line="110" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="61">stat<pos:position pos:line="110" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="67">p<pos:position pos:line="110" pos:column="68"/></name></expr></argument>, <argument><expr><call><name pos:line="110" pos:column="70">APLOGNO<pos:position pos:line="110" pos:column="77"/></name><argument_list pos:line="110" pos:column="77">(<argument><expr><literal type="number" pos:line="110" pos:column="78">00072<pos:position pos:line="110" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="84"/></argument_list></call>
                      <literal type="string" pos:line="111" pos:column="23">"make_sock: could not bind to address %pI"<pos:position pos:line="111" pos:column="65"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="112" pos:column="23">server<pos:position pos:line="112" pos:column="29"/></name><operator pos:line="112" pos:column="29">-&gt;<pos:position pos:line="112" pos:column="34"/></operator><name pos:line="112" pos:column="31">bind_addr<pos:position pos:line="112" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="113" pos:column="9">apr_socket_close<pos:position pos:line="113" pos:column="25"/></name><argument_list pos:line="113" pos:column="25">(<argument><expr><name pos:line="113" pos:column="26">s<pos:position pos:line="113" pos:column="27"/></name></expr></argument>)<pos:position pos:line="113" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="29"/></expr_stmt>
        <return pos:line="114" pos:column="9">return <expr><name pos:line="114" pos:column="16">stat<pos:position pos:line="114" pos:column="20"/></name></expr>;<pos:position pos:line="114" pos:column="21"/></return>
    }<pos:position pos:line="115" pos:column="6"/></block></then></if>

    <if pos:line="117" pos:column="5">if <condition pos:line="117" pos:column="8">(<expr><operator pos:line="117" pos:column="9">(<pos:position pos:line="117" pos:column="10"/></operator><name pos:line="117" pos:column="10">stat<pos:position pos:line="117" pos:column="14"/></name> <operator pos:line="117" pos:column="15">=<pos:position pos:line="117" pos:column="16"/></operator> <call><name pos:line="117" pos:column="17">apr_socket_listen<pos:position pos:line="117" pos:column="34"/></name><argument_list pos:line="117" pos:column="34">(<argument><expr><name pos:line="117" pos:column="35">s<pos:position pos:line="117" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="38">ap_listenbacklog<pos:position pos:line="117" pos:column="54"/></name></expr></argument>)<pos:position pos:line="117" pos:column="55"/></argument_list></call><operator pos:line="117" pos:column="55">)<pos:position pos:line="117" pos:column="56"/></operator> <operator pos:line="117" pos:column="57">!=<pos:position pos:line="117" pos:column="59"/></operator> <name pos:line="117" pos:column="60">APR_SUCCESS<pos:position pos:line="117" pos:column="71"/></name></expr>)<pos:position pos:line="117" pos:column="72"/></condition><then pos:line="117" pos:column="72"> <block pos:line="117" pos:column="73">{
        <expr_stmt><expr><call><name pos:line="118" pos:column="9">ap_log_perror<pos:position pos:line="118" pos:column="22"/></name><argument_list pos:line="118" pos:column="22">(<argument><expr><name pos:line="118" pos:column="23">APLOG_MARK<pos:position pos:line="118" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="35">APLOG_STARTUP<pos:position pos:line="118" pos:column="48"/></name><operator pos:line="118" pos:column="48">|<pos:position pos:line="118" pos:column="49"/></operator><name pos:line="118" pos:column="49">APLOG_ERR<pos:position pos:line="118" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="60">stat<pos:position pos:line="118" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="66">p<pos:position pos:line="118" pos:column="67"/></name></expr></argument>, <argument><expr><call><name pos:line="118" pos:column="69">APLOGNO<pos:position pos:line="118" pos:column="76"/></name><argument_list pos:line="118" pos:column="76">(<argument><expr><literal type="number" pos:line="118" pos:column="77">00073<pos:position pos:line="118" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="83"/></argument_list></call>
                      <literal type="string" pos:line="119" pos:column="23">"make_sock: unable to listen for connections "<pos:position pos:line="119" pos:column="69"/></literal>
                      <literal type="string" pos:line="120" pos:column="23">"on address %pI"<pos:position pos:line="120" pos:column="39"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="121" pos:column="23">server<pos:position pos:line="121" pos:column="29"/></name><operator pos:line="121" pos:column="29">-&gt;<pos:position pos:line="121" pos:column="34"/></operator><name pos:line="121" pos:column="31">bind_addr<pos:position pos:line="121" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="122" pos:column="9">apr_socket_close<pos:position pos:line="122" pos:column="25"/></name><argument_list pos:line="122" pos:column="25">(<argument><expr><name pos:line="122" pos:column="26">s<pos:position pos:line="122" pos:column="27"/></name></expr></argument>)<pos:position pos:line="122" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="29"/></expr_stmt>
        <return pos:line="123" pos:column="9">return <expr><name pos:line="123" pos:column="16">stat<pos:position pos:line="123" pos:column="20"/></name></expr>;<pos:position pos:line="123" pos:column="21"/></return>
    }<pos:position pos:line="124" pos:column="6"/></block></then></if>

<cpp:ifdef pos:line="126" pos:column="1">#<cpp:directive pos:line="126" pos:column="2">ifdef<pos:position pos:line="126" pos:column="7"/></cpp:directive> <name pos:line="126" pos:column="8">WIN32<pos:position pos:line="126" pos:column="13"/></name></cpp:ifdef>
    <comment type="block" pos:line="127" pos:column="5">/* I seriously doubt that this would work on Unix; I have doubts that
     * it entirely solves the problem on Win32.  However, since setting
     * reuseaddr on the listener -prior- to binding the socket has allowed
     * us to attach to the same port as an already running instance of
     * Apache, or even another web server, we cannot identify that this
     * port was exclusively granted to this instance of Apache.
     *
     * So set reuseaddr, but do not attempt to do so until we have the
     * parent listeners successfully bound.
     */</comment>
    <expr_stmt><expr><name pos:line="137" pos:column="5">stat<pos:position pos:line="137" pos:column="9"/></name> <operator pos:line="137" pos:column="10">=<pos:position pos:line="137" pos:column="11"/></operator> <call><name pos:line="137" pos:column="12">apr_socket_opt_set<pos:position pos:line="137" pos:column="30"/></name><argument_list pos:line="137" pos:column="30">(<argument><expr><name pos:line="137" pos:column="31">s<pos:position pos:line="137" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="34">APR_SO_REUSEADDR<pos:position pos:line="137" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="52">one<pos:position pos:line="137" pos:column="55"/></name></expr></argument>)<pos:position pos:line="137" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="57"/></expr_stmt>
    <if pos:line="138" pos:column="5">if <condition pos:line="138" pos:column="8">(<expr><name pos:line="138" pos:column="9">stat<pos:position pos:line="138" pos:column="13"/></name> <operator pos:line="138" pos:column="14">!=<pos:position pos:line="138" pos:column="16"/></operator> <name pos:line="138" pos:column="17">APR_SUCCESS<pos:position pos:line="138" pos:column="28"/></name> <operator pos:line="138" pos:column="29">&amp;&amp;<pos:position pos:line="138" pos:column="39"/></operator> <name pos:line="138" pos:column="32">stat<pos:position pos:line="138" pos:column="36"/></name> <operator pos:line="138" pos:column="37">!=<pos:position pos:line="138" pos:column="39"/></operator> <name pos:line="138" pos:column="40">APR_ENOTIMPL<pos:position pos:line="138" pos:column="52"/></name></expr>)<pos:position pos:line="138" pos:column="53"/></condition><then pos:line="138" pos:column="53"> <block pos:line="138" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="139" pos:column="9">ap_log_perror<pos:position pos:line="139" pos:column="22"/></name><argument_list pos:line="139" pos:column="22">(<argument><expr><name pos:line="139" pos:column="23">APLOG_MARK<pos:position pos:line="139" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="35">APLOG_CRIT<pos:position pos:line="139" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="47">stat<pos:position pos:line="139" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="53">p<pos:position pos:line="139" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="139" pos:column="56">APLOGNO<pos:position pos:line="139" pos:column="63"/></name><argument_list pos:line="139" pos:column="63">(<argument><expr><literal type="number" pos:line="139" pos:column="64">00074<pos:position pos:line="139" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="70"/></argument_list></call>
                    <literal type="string" pos:line="140" pos:column="21">"make_sock: for address %pI, apr_socket_opt_set: (SO_REUSEADDR)"<pos:position pos:line="140" pos:column="85"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="141" pos:column="22">server<pos:position pos:line="141" pos:column="28"/></name><operator pos:line="141" pos:column="28">-&gt;<pos:position pos:line="141" pos:column="33"/></operator><name pos:line="141" pos:column="30">bind_addr<pos:position pos:line="141" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="141" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="142" pos:column="9">apr_socket_close<pos:position pos:line="142" pos:column="25"/></name><argument_list pos:line="142" pos:column="25">(<argument><expr><name pos:line="142" pos:column="26">s<pos:position pos:line="142" pos:column="27"/></name></expr></argument>)<pos:position pos:line="142" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="29"/></expr_stmt>
        <return pos:line="143" pos:column="9">return <expr><name pos:line="143" pos:column="16">stat<pos:position pos:line="143" pos:column="20"/></name></expr>;<pos:position pos:line="143" pos:column="21"/></return>
    }<pos:position pos:line="144" pos:column="6"/></block></then></if>
<cpp:endif pos:line="145" pos:column="1">#<cpp:directive pos:line="145" pos:column="2">endif<pos:position pos:line="145" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="147" pos:column="5">server<pos:position pos:line="147" pos:column="11"/></name><operator pos:line="147" pos:column="11">-&gt;<pos:position pos:line="147" pos:column="16"/></operator><name pos:line="147" pos:column="13">sd<pos:position pos:line="147" pos:column="15"/></name></name> <operator pos:line="147" pos:column="16">=<pos:position pos:line="147" pos:column="17"/></operator> <name pos:line="147" pos:column="18">s<pos:position pos:line="147" pos:column="19"/></name></expr>;<pos:position pos:line="147" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="148" pos:column="5">server<pos:position pos:line="148" pos:column="11"/></name><operator pos:line="148" pos:column="11">-&gt;<pos:position pos:line="148" pos:column="16"/></operator><name pos:line="148" pos:column="13">active<pos:position pos:line="148" pos:column="19"/></name></name> <operator pos:line="148" pos:column="20">=<pos:position pos:line="148" pos:column="21"/></operator> <literal type="number" pos:line="148" pos:column="22">1<pos:position pos:line="148" pos:column="23"/></literal></expr>;<pos:position pos:line="148" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="150" pos:column="5">server<pos:position pos:line="150" pos:column="11"/></name><operator pos:line="150" pos:column="11">-&gt;<pos:position pos:line="150" pos:column="16"/></operator><name pos:line="150" pos:column="13">accept_func<pos:position pos:line="150" pos:column="24"/></name></name> <operator pos:line="150" pos:column="25">=<pos:position pos:line="150" pos:column="26"/></operator> <name pos:line="150" pos:column="27">NULL<pos:position pos:line="150" pos:column="31"/></name></expr>;<pos:position pos:line="150" pos:column="32"/></expr_stmt>

    <return pos:line="152" pos:column="5">return <expr><name pos:line="152" pos:column="12">APR_SUCCESS<pos:position pos:line="152" pos:column="23"/></name></expr>;<pos:position pos:line="152" pos:column="24"/></return>
}<pos:position pos:line="153" pos:column="2"/></block></function></unit>

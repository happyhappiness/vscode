<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2949_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">open_nt_process_pipe<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">apr_file_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier><modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">read<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">apr_file_t<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier><modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">write<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="2" pos:column="42">apr_int32_t<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">iBlockingMode<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="3" pos:column="42">apr_pool_t<pos:position pos:line="3" pos:column="52"/></name> <modifier pos:line="3" pos:column="53">*<pos:position pos:line="3" pos:column="54"/></modifier></type><name pos:line="3" pos:column="54">pool<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="59"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">stat<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">BOOLEAN<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">bAsyncRead<pos:position pos:line="6" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="25">bAsyncWrite<pos:position pos:line="6" pos:column="36"/></name></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>

    <switch pos:line="8" pos:column="5">switch <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">iBlockingMode<pos:position pos:line="8" pos:column="26"/></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition> <block pos:line="8" pos:column="28">{
    <case pos:line="9" pos:column="5">case <expr><name pos:line="9" pos:column="10">APR_FULL_BLOCK<pos:position pos:line="9" pos:column="24"/></name></expr>:<pos:position pos:line="9" pos:column="25"/></case>
        <expr_stmt><expr><name pos:line="10" pos:column="9">bAsyncRead<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">bAsyncWrite<pos:position pos:line="10" pos:column="33"/></name> <operator pos:line="10" pos:column="34">=<pos:position pos:line="10" pos:column="35"/></operator> <name pos:line="10" pos:column="36">FALSE<pos:position pos:line="10" pos:column="41"/></name></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
        <break pos:line="11" pos:column="9">break;<pos:position pos:line="11" pos:column="15"/></break>
    <case pos:line="12" pos:column="5">case <expr><name pos:line="12" pos:column="10">APR_PARENT_BLOCK<pos:position pos:line="12" pos:column="26"/></name></expr>:<pos:position pos:line="12" pos:column="27"/></case>
        <expr_stmt><expr><name pos:line="13" pos:column="9">bAsyncRead<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">FALSE<pos:position pos:line="13" pos:column="27"/></name></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">bAsyncWrite<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">TRUE<pos:position pos:line="14" pos:column="27"/></name></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
        <break pos:line="15" pos:column="9">break;<pos:position pos:line="15" pos:column="15"/></break>
    <case pos:line="16" pos:column="5">case <expr><name pos:line="16" pos:column="10">APR_CHILD_BLOCK<pos:position pos:line="16" pos:column="25"/></name></expr>:<pos:position pos:line="16" pos:column="26"/></case>
        <expr_stmt><expr><name pos:line="17" pos:column="9">bAsyncRead<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">TRUE<pos:position pos:line="17" pos:column="26"/></name></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">bAsyncWrite<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">FALSE<pos:position pos:line="18" pos:column="28"/></name></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
        <break pos:line="19" pos:column="9">break;<pos:position pos:line="19" pos:column="15"/></break>
    <default pos:line="20" pos:column="5">default:<pos:position pos:line="20" pos:column="13"/></default>
        <expr_stmt><expr><name pos:line="21" pos:column="9">bAsyncRead<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">TRUE<pos:position pos:line="21" pos:column="26"/></name></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="22" pos:column="9">bAsyncWrite<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <name pos:line="22" pos:column="23">TRUE<pos:position pos:line="22" pos:column="27"/></name></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></switch>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">(<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">stat<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <call><name pos:line="24" pos:column="17">apr_create_nt_pipe<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><name pos:line="24" pos:column="36">read<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="42">write<pos:position pos:line="24" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="49">bAsyncRead<pos:position pos:line="24" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="61">bAsyncWrite<pos:position pos:line="24" pos:column="72"/></name></expr></argument>,
                                   <argument><expr><name pos:line="25" pos:column="36">pool<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call><operator pos:line="25" pos:column="41">)<pos:position pos:line="25" pos:column="42"/></operator> <operator pos:line="25" pos:column="43">!=<pos:position pos:line="25" pos:column="45"/></operator> <name pos:line="25" pos:column="46">APR_SUCCESS<pos:position pos:line="25" pos:column="57"/></name></expr>)<pos:position pos:line="25" pos:column="58"/></condition><then pos:line="25" pos:column="58">
        <block type="pseudo"><return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">stat<pos:position pos:line="26" pos:column="20"/></name></expr>;<pos:position pos:line="26" pos:column="21"/></return></block></then></if>

    <return pos:line="28" pos:column="5">return <expr><name pos:line="28" pos:column="12">APR_SUCCESS<pos:position pos:line="28" pos:column="23"/></name></expr>;<pos:position pos:line="28" pos:column="24"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4872.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">stapling_cache_response<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">server_rec<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">s<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">modssl_ctx_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">mctx<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">OCSP_RESPONSE<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">rsp<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">certinfo<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">cinf<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="3" pos:column="37">BOOL<pos:position pos:line="3" pos:column="41"/></name></type> <name pos:line="3" pos:column="42">ok<pos:position pos:line="3" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="46">apr_pool_t<pos:position pos:line="3" pos:column="56"/></name> <modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier></type><name pos:line="3" pos:column="58">pool<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="63"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SSLModConfigRec<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">mc<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><call><name pos:line="5" pos:column="27">myModConfig<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">s<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">char<pos:position pos:line="6" pos:column="18"/></name></type> <name><name pos:line="6" pos:column="19">resp_der<pos:position pos:line="6" pos:column="27"/></name><index pos:line="6" pos:column="27">[<expr><name pos:line="6" pos:column="28">MAX_STAPLING_DER<pos:position pos:line="6" pos:column="44"/></name></expr>]<pos:position pos:line="6" pos:column="45"/></index></name></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">char<pos:position pos:line="7" pos:column="18"/></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">p<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">resp_derlen<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">BOOL<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">rv<pos:position pos:line="9" pos:column="12"/></name></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_time_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">expiry<pos:position pos:line="10" pos:column="22"/></name></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><name pos:line="12" pos:column="5">resp_derlen<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <call><name pos:line="12" pos:column="19">i2d_OCSP_RESPONSE<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument><expr><name pos:line="12" pos:column="37">rsp<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">NULL<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call> <operator pos:line="12" pos:column="48">+<pos:position pos:line="12" pos:column="49"/></operator> <literal type="number" pos:line="12" pos:column="50">1<pos:position pos:line="12" pos:column="51"/></literal></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">resp_derlen<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">&lt;=<pos:position pos:line="14" pos:column="26"/></operator> <literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26"> <block pos:line="14" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">ap_log_error<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">APLOG_MARK<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">APLOG_ERR<pos:position pos:line="15" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="45">0<pos:position pos:line="15" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="48">s<pos:position pos:line="15" pos:column="49"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="16" pos:column="22">"OCSP stapling response encode error??"<pos:position pos:line="16" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="63"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">FALSE<pos:position pos:line="17" pos:column="21"/></name></expr>;<pos:position pos:line="17" pos:column="22"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">resp_derlen<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">&gt;<pos:position pos:line="20" pos:column="25"/></operator> <sizeof pos:line="20" pos:column="23">sizeof <name pos:line="20" pos:column="30">resp_der<pos:position pos:line="20" pos:column="38"/></name></sizeof></expr>)<pos:position pos:line="20" pos:column="39"/></condition><then pos:line="20" pos:column="39"> <block pos:line="20" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">ap_log_error<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">APLOG_MARK<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">APLOG_ERR<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="45">0<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="48">s<pos:position pos:line="21" pos:column="49"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="22" pos:column="22">"OCSP stapling response too big (%u bytes)"<pos:position pos:line="22" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="67">resp_derlen<pos:position pos:line="22" pos:column="78"/></name></expr></argument>)<pos:position pos:line="22" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="80"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">FALSE<pos:position pos:line="23" pos:column="21"/></name></expr>;<pos:position pos:line="23" pos:column="22"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="26" pos:column="5">p<pos:position pos:line="26" pos:column="6"/></name> <operator pos:line="26" pos:column="7">=<pos:position pos:line="26" pos:column="8"/></operator> <name pos:line="26" pos:column="9">resp_der<pos:position pos:line="26" pos:column="17"/></name></expr>;<pos:position pos:line="26" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="28" pos:column="5">/* TODO: potential optimization; _timeout members as apr_interval_time_t */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">ok<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">==<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">TRUE<pos:position pos:line="29" pos:column="19"/></name></expr>)<pos:position pos:line="29" pos:column="20"/></condition><then pos:line="29" pos:column="20"> <block pos:line="29" pos:column="21">{
        <expr_stmt><expr><operator pos:line="30" pos:column="9">*<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">p<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">++<pos:position pos:line="30" pos:column="13"/></operator> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <literal type="number" pos:line="30" pos:column="16">1<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="31" pos:column="9">expiry<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <call><name pos:line="31" pos:column="18">apr_time_from_sec<pos:position pos:line="31" pos:column="35"/></name><argument_list pos:line="31" pos:column="35">(<argument><expr><name><name pos:line="31" pos:column="36">mctx<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">-&gt;<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="42">stapling_cache_timeout<pos:position pos:line="31" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then> 
    <else pos:line="33" pos:column="5">else <block pos:line="33" pos:column="10">{
        <expr_stmt><expr><operator pos:line="34" pos:column="9">*<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">p<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">++<pos:position pos:line="34" pos:column="13"/></operator> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr>;<pos:position pos:line="34" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">expiry<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <call><name pos:line="35" pos:column="18">apr_time_from_sec<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><name><name pos:line="35" pos:column="36">mctx<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">-&gt;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="42">stapling_errcache_timeout<pos:position pos:line="35" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="38" pos:column="5">expiry<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">+=<pos:position pos:line="38" pos:column="14"/></operator> <call><name pos:line="38" pos:column="15">apr_time_now<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">()<pos:position pos:line="38" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">i2d_OCSP_RESPONSE<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><name pos:line="40" pos:column="23">rsp<pos:position pos:line="40" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="28">&amp;<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="29">p<pos:position pos:line="40" pos:column="30"/></name></expr></argument>)<pos:position pos:line="40" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name pos:line="42" pos:column="5">rv<pos:position pos:line="42" pos:column="7"/></name> <operator pos:line="42" pos:column="8">=<pos:position pos:line="42" pos:column="9"/></operator> <call><name><name pos:line="42" pos:column="10">mc<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">-&gt;<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="14">stapling_cache<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">-&gt;<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="30">store<pos:position pos:line="42" pos:column="35"/></name></name><argument_list pos:line="42" pos:column="35">(<argument><expr><name><name pos:line="42" pos:column="36">mc<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">-&gt;<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="40">stapling_cache_context<pos:position pos:line="42" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="64">s<pos:position pos:line="42" pos:column="65"/></name></expr></argument>,
                                   <argument><expr><name><name pos:line="43" pos:column="36">cinf<pos:position pos:line="43" pos:column="40"/></name><operator pos:line="43" pos:column="40">-&gt;<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="42">idx<pos:position pos:line="43" pos:column="45"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="47">sizeof<argument_list pos:line="43" pos:column="53">(<argument><expr><name><name pos:line="43" pos:column="54">cinf<pos:position pos:line="43" pos:column="58"/></name><operator pos:line="43" pos:column="58">-&gt;<pos:position pos:line="43" pos:column="63"/></operator><name pos:line="43" pos:column="60">idx<pos:position pos:line="43" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="64"/></argument_list></sizeof></expr></argument>,
                                   <argument><expr><name pos:line="44" pos:column="36">expiry<pos:position pos:line="44" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="44">resp_der<pos:position pos:line="44" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="54">resp_derlen<pos:position pos:line="44" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="67">pool<pos:position pos:line="44" pos:column="71"/></name></expr></argument>)<pos:position pos:line="44" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="73"/></expr_stmt>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">rv<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">!=<pos:position pos:line="45" pos:column="14"/></operator> <name pos:line="45" pos:column="15">APR_SUCCESS<pos:position pos:line="45" pos:column="26"/></name></expr>)<pos:position pos:line="45" pos:column="27"/></condition><then pos:line="45" pos:column="27"> <block pos:line="45" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">ap_log_error<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><name pos:line="46" pos:column="22">APLOG_MARK<pos:position pos:line="46" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="34">APLOG_ERR<pos:position pos:line="46" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="45">0<pos:position pos:line="46" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="48">s<pos:position pos:line="46" pos:column="49"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="47" pos:column="22">"stapling_cache_response: OCSP response session store error!"<pos:position pos:line="47" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="85"/></expr_stmt>
        <return pos:line="48" pos:column="9">return <expr><name pos:line="48" pos:column="16">FALSE<pos:position pos:line="48" pos:column="21"/></name></expr>;<pos:position pos:line="48" pos:column="22"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <return pos:line="51" pos:column="5">return <expr><name pos:line="51" pos:column="12">TRUE<pos:position pos:line="51" pos:column="16"/></name></expr>;<pos:position pos:line="51" pos:column="17"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_670_httpd-2.2.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BOOL<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">SSL_X509_isSGC<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">X509<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">cert<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">HAVE_SSL_X509V3_EXT_d2i<pos:position pos:line="3" pos:column="31"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">X509_EXTENSION<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">ext<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">ext_nid<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">EXTENDED_KEY_USAGE<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">sk<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">BOOL<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">is_sgc<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">idx<pos:position pos:line="8" pos:column="12"/></name></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">i<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">is_sgc<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">FALSE<pos:position pos:line="11" pos:column="19"/></name></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">idx<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <call><name pos:line="12" pos:column="11">X509_get_ext_by_NID<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">cert<pos:position pos:line="12" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="37">NID_ext_key_usage<pos:position pos:line="12" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="56">-<pos:position pos:line="12" pos:column="57"/></operator><literal type="number" pos:line="12" pos:column="57">1<pos:position pos:line="12" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">idx<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">&gt;=<pos:position pos:line="13" pos:column="18"/></operator> <literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr>)<pos:position pos:line="13" pos:column="18"/></condition><then pos:line="13" pos:column="18"> <block pos:line="13" pos:column="19">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">ext<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">X509_get_ext<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">cert<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">idx<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">sk<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <operator pos:line="15" pos:column="19">(<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">EXTENDED_KEY_USAGE<pos:position pos:line="15" pos:column="38"/></name> <operator pos:line="15" pos:column="39">*<pos:position pos:line="15" pos:column="40"/></operator><operator pos:line="15" pos:column="40">)<pos:position pos:line="15" pos:column="41"/></operator><call><name pos:line="15" pos:column="41">X509V3_EXT_d2i<pos:position pos:line="15" pos:column="55"/></name><argument_list pos:line="15" pos:column="55">(<argument><expr><name pos:line="15" pos:column="56">ext<pos:position pos:line="15" pos:column="59"/></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call><operator pos:line="15" pos:column="60">)<pos:position pos:line="15" pos:column="61"/></operator> <operator pos:line="15" pos:column="62">!=<pos:position pos:line="15" pos:column="64"/></operator> <name pos:line="15" pos:column="65">NULL<pos:position pos:line="15" pos:column="69"/></name></expr>)<pos:position pos:line="15" pos:column="70"/></condition><then pos:line="15" pos:column="70"> <block pos:line="15" pos:column="71">{
            <for pos:line="16" pos:column="13">for <control pos:line="16" pos:column="17">(<init><expr><name pos:line="16" pos:column="18">i<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <literal type="number" pos:line="16" pos:column="22">0<pos:position pos:line="16" pos:column="23"/></literal></expr>;<pos:position pos:line="16" pos:column="24"/></init> <condition><expr><name pos:line="16" pos:column="25">i<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">&lt;<pos:position pos:line="16" pos:column="31"/></operator> <call><name pos:line="16" pos:column="29">sk_ASN1_OBJECT_num<pos:position pos:line="16" pos:column="47"/></name><argument_list pos:line="16" pos:column="47">(<argument><expr><name pos:line="16" pos:column="48">sk<pos:position pos:line="16" pos:column="50"/></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="52"/></condition> <incr><expr><name pos:line="16" pos:column="53">i<pos:position pos:line="16" pos:column="54"/></name><operator pos:line="16" pos:column="54">++<pos:position pos:line="16" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="57"/></control> <block pos:line="16" pos:column="58">{
                <expr_stmt><expr><name pos:line="17" pos:column="17">ext_nid<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <call><name pos:line="17" pos:column="27">OBJ_obj2nid<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><operator pos:line="17" pos:column="39">(<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="40">ASN1_OBJECT<pos:position pos:line="17" pos:column="51"/></name> <operator pos:line="17" pos:column="52">*<pos:position pos:line="17" pos:column="53"/></operator><operator pos:line="17" pos:column="53">)<pos:position pos:line="17" pos:column="54"/></operator><call><name pos:line="17" pos:column="54">sk_ASN1_OBJECT_value<pos:position pos:line="17" pos:column="74"/></name><argument_list pos:line="17" pos:column="74">(<argument><expr><name pos:line="17" pos:column="75">sk<pos:position pos:line="17" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="79">i<pos:position pos:line="17" pos:column="80"/></name></expr></argument>)<pos:position pos:line="17" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="83"/></expr_stmt>
                <if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">ext_nid<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">==<pos:position pos:line="18" pos:column="31"/></operator> <name pos:line="18" pos:column="32">NID_ms_sgc<pos:position pos:line="18" pos:column="42"/></name> <operator pos:line="18" pos:column="43">||<pos:position pos:line="18" pos:column="45"/></operator> <name pos:line="18" pos:column="46">ext_nid<pos:position pos:line="18" pos:column="53"/></name> <operator pos:line="18" pos:column="54">==<pos:position pos:line="18" pos:column="56"/></operator> <name pos:line="18" pos:column="57">NID_ns_sgc<pos:position pos:line="18" pos:column="67"/></name></expr>)<pos:position pos:line="18" pos:column="68"/></condition><then pos:line="18" pos:column="68"> <block pos:line="18" pos:column="69">{
                    <expr_stmt><expr><name pos:line="19" pos:column="21">is_sgc<pos:position pos:line="19" pos:column="27"/></name> <operator pos:line="19" pos:column="28">=<pos:position pos:line="19" pos:column="29"/></operator> <name pos:line="19" pos:column="30">TRUE<pos:position pos:line="19" pos:column="34"/></name></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
                    <break pos:line="20" pos:column="21">break;<pos:position pos:line="20" pos:column="27"/></break>
                }<pos:position pos:line="21" pos:column="18"/></block></then></if>
            }<pos:position pos:line="22" pos:column="14"/></block></for>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">is_sgc<pos:position pos:line="25" pos:column="18"/></name></expr>;<pos:position pos:line="25" pos:column="19"/></return>
<cpp:else pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">else<pos:position pos:line="26" pos:column="6"/></cpp:directive></cpp:else>
    <return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">FALSE<pos:position pos:line="27" pos:column="17"/></name></expr>;<pos:position pos:line="27" pos:column="18"/></return>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

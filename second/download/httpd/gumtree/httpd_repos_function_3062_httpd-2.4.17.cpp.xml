<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3062_httpd-2.4.17.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">util_ldap_search_node_copy<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">util_ald_cache_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">cache<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">void<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">c<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">util_search_node_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">node<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name pos:line="3" pos:column="32">c<pos:position pos:line="3" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">util_search_node_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">newnode<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><call><name pos:line="4" pos:column="35">util_ald_alloc<pos:position pos:line="4" pos:column="49"/></name><argument_list pos:line="4" pos:column="49">(<argument><expr><name pos:line="4" pos:column="50">cache<pos:position pos:line="4" pos:column="55"/></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="57">sizeof <name><pos:position pos:line="4" pos:column="64"/></name></sizeof>*<name pos:line="4" pos:column="65">newnode<pos:position pos:line="4" pos:column="72"/></name></expr></argument>)<pos:position pos:line="4" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="74"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* safety check */</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">newnode<pos:position pos:line="7" pos:column="16"/></name></expr>)<pos:position pos:line="7" pos:column="17"/></condition><then pos:line="7" pos:column="17"> <block pos:line="7" pos:column="18">{

        <comment type="block" pos:line="9" pos:column="9">/* copy vals */</comment>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">node<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">vals<pos:position pos:line="10" pos:column="23"/></name></name></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24"> <block pos:line="10" pos:column="25">{
            <decl_stmt><decl><type><name pos:line="11" pos:column="13">int<pos:position pos:line="11" pos:column="16"/></name></type> <name pos:line="11" pos:column="17">k<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><name><name pos:line="11" pos:column="21">node<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">numvals<pos:position pos:line="11" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="12" pos:column="13">int<pos:position pos:line="12" pos:column="16"/></name></type> <name pos:line="12" pos:column="17">i<pos:position pos:line="12" pos:column="18"/></name> <init pos:line="12" pos:column="19">= <expr><literal type="number" pos:line="12" pos:column="21">0<pos:position pos:line="12" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>
            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><operator pos:line="13" pos:column="17">!<pos:position pos:line="13" pos:column="18"/></operator><operator pos:line="13" pos:column="18">(<pos:position pos:line="13" pos:column="19"/></operator><name><name pos:line="13" pos:column="19">newnode<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">-&gt;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="28">vals<pos:position pos:line="13" pos:column="32"/></name></name> <operator pos:line="13" pos:column="33">=<pos:position pos:line="13" pos:column="34"/></operator> <call><name pos:line="13" pos:column="35">util_ald_alloc<pos:position pos:line="13" pos:column="49"/></name><argument_list pos:line="13" pos:column="49">(<argument><expr><name pos:line="13" pos:column="50">cache<pos:position pos:line="13" pos:column="55"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="57">sizeof<argument_list pos:line="13" pos:column="63">(<argument><expr><name pos:line="13" pos:column="64">char<pos:position pos:line="13" pos:column="68"/></name> <operator pos:line="13" pos:column="69">*<pos:position pos:line="13" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></sizeof> <operator pos:line="13" pos:column="72">*<pos:position pos:line="13" pos:column="73"/></operator> <operator pos:line="13" pos:column="74">(<pos:position pos:line="13" pos:column="75"/></operator><name pos:line="13" pos:column="75">k<pos:position pos:line="13" pos:column="76"/></name><operator pos:line="13" pos:column="76">+<pos:position pos:line="13" pos:column="77"/></operator><literal type="number" pos:line="13" pos:column="77">1<pos:position pos:line="13" pos:column="78"/></literal><operator pos:line="13" pos:column="78">)<pos:position pos:line="13" pos:column="79"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="80"/></argument_list></call><operator pos:line="13" pos:column="80">)<pos:position pos:line="13" pos:column="81"/></operator></expr>)<pos:position pos:line="13" pos:column="82"/></condition><then pos:line="13" pos:column="82"> <block pos:line="13" pos:column="83">{
                <expr_stmt><expr><call><name pos:line="14" pos:column="17">util_ldap_search_node_free<pos:position pos:line="14" pos:column="43"/></name><argument_list pos:line="14" pos:column="43">(<argument><expr><name pos:line="14" pos:column="44">cache<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="51">newnode<pos:position pos:line="14" pos:column="58"/></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt>
                <return pos:line="15" pos:column="17">return <expr><name pos:line="15" pos:column="24">NULL<pos:position pos:line="15" pos:column="28"/></name></expr>;<pos:position pos:line="15" pos:column="29"/></return>
            }<pos:position pos:line="16" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="17" pos:column="13">newnode<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">numvals<pos:position pos:line="17" pos:column="29"/></name></name> <operator pos:line="17" pos:column="30">=<pos:position pos:line="17" pos:column="31"/></operator> <name><name pos:line="17" pos:column="32">node<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="38">numvals<pos:position pos:line="17" pos:column="45"/></name></name></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
            <for pos:line="18" pos:column="13">for <control pos:line="18" pos:column="17">(<init pos:line="18" pos:column="18">;<pos:position pos:line="18" pos:column="19"/></init><condition><expr><name pos:line="18" pos:column="19">k<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></condition><incr><expr><name pos:line="18" pos:column="21">k<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">--<pos:position pos:line="18" pos:column="24"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="25"/></control> <block pos:line="18" pos:column="26">{
                <if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name><name pos:line="19" pos:column="21">node<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">-&gt;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="27">vals<pos:position pos:line="19" pos:column="31"/></name><index pos:line="19" pos:column="31">[<expr><name pos:line="19" pos:column="32">i<pos:position pos:line="19" pos:column="33"/></name></expr>]<pos:position pos:line="19" pos:column="34"/></index></name></expr>)<pos:position pos:line="19" pos:column="35"/></condition><then pos:line="19" pos:column="35"> <block pos:line="19" pos:column="36">{
                    <if pos:line="20" pos:column="21">if <condition pos:line="20" pos:column="24">(<expr><operator pos:line="20" pos:column="25">!<pos:position pos:line="20" pos:column="26"/></operator><operator pos:line="20" pos:column="26">(<pos:position pos:line="20" pos:column="27"/></operator><name><name pos:line="20" pos:column="27">newnode<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">-&gt;<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="36">vals<pos:position pos:line="20" pos:column="40"/></name><index pos:line="20" pos:column="40">[<expr><name pos:line="20" pos:column="41">i<pos:position pos:line="20" pos:column="42"/></name></expr>]<pos:position pos:line="20" pos:column="43"/></index></name> <operator pos:line="20" pos:column="44">=<pos:position pos:line="20" pos:column="45"/></operator> <call><name pos:line="20" pos:column="46">util_ald_strdup<pos:position pos:line="20" pos:column="61"/></name><argument_list pos:line="20" pos:column="61">(<argument><expr><name pos:line="20" pos:column="62">cache<pos:position pos:line="20" pos:column="67"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="69">node<pos:position pos:line="20" pos:column="73"/></name><operator pos:line="20" pos:column="73">-&gt;<pos:position pos:line="20" pos:column="78"/></operator><name pos:line="20" pos:column="75">vals<pos:position pos:line="20" pos:column="79"/></name><index pos:line="20" pos:column="79">[<expr><name pos:line="20" pos:column="80">i<pos:position pos:line="20" pos:column="81"/></name></expr>]<pos:position pos:line="20" pos:column="82"/></index></name></expr></argument>)<pos:position pos:line="20" pos:column="83"/></argument_list></call><operator pos:line="20" pos:column="83">)<pos:position pos:line="20" pos:column="84"/></operator></expr>)<pos:position pos:line="20" pos:column="85"/></condition><then pos:line="20" pos:column="85"> <block pos:line="20" pos:column="86">{
                        <expr_stmt><expr><call><name pos:line="21" pos:column="25">util_ldap_search_node_free<pos:position pos:line="21" pos:column="51"/></name><argument_list pos:line="21" pos:column="51">(<argument><expr><name pos:line="21" pos:column="52">cache<pos:position pos:line="21" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="59">newnode<pos:position pos:line="21" pos:column="66"/></name></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="68"/></expr_stmt>
                        <return pos:line="22" pos:column="25">return <expr><name pos:line="22" pos:column="32">NULL<pos:position pos:line="22" pos:column="36"/></name></expr>;<pos:position pos:line="22" pos:column="37"/></return>
                    }<pos:position pos:line="23" pos:column="22"/></block></then></if>
                }<pos:position pos:line="24" pos:column="18"/></block></then>
                <else pos:line="25" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="21">newnode<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">-&gt;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="30">vals<pos:position pos:line="26" pos:column="34"/></name><index pos:line="26" pos:column="34">[<expr><name pos:line="26" pos:column="35">i<pos:position pos:line="26" pos:column="36"/></name></expr>]<pos:position pos:line="26" pos:column="37"/></index></name> <operator pos:line="26" pos:column="38">=<pos:position pos:line="26" pos:column="39"/></operator> <name pos:line="26" pos:column="40">NULL<pos:position pos:line="26" pos:column="44"/></name></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt></block></else></if>
                <expr_stmt><expr><name pos:line="27" pos:column="17">i<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">++<pos:position pos:line="27" pos:column="20"/></operator></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
            }<pos:position pos:line="28" pos:column="14"/></block></for>
        }<pos:position pos:line="29" pos:column="10"/></block></then>
        <else pos:line="30" pos:column="9">else <block pos:line="30" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">newnode<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">vals<pos:position pos:line="31" pos:column="26"/></name></name> <operator pos:line="31" pos:column="27">=<pos:position pos:line="31" pos:column="28"/></operator> <name pos:line="31" pos:column="29">NULL<pos:position pos:line="31" pos:column="33"/></name></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></else></if>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><operator pos:line="33" pos:column="14">(<pos:position pos:line="33" pos:column="15"/></operator><name><name pos:line="33" pos:column="15">newnode<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">-&gt;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="24">username<pos:position pos:line="33" pos:column="32"/></name></name> <operator pos:line="33" pos:column="33">=<pos:position pos:line="33" pos:column="34"/></operator> <call><name pos:line="33" pos:column="35">util_ald_strdup<pos:position pos:line="33" pos:column="50"/></name><argument_list pos:line="33" pos:column="50">(<argument><expr><name pos:line="33" pos:column="51">cache<pos:position pos:line="33" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="58">node<pos:position pos:line="33" pos:column="62"/></name><operator pos:line="33" pos:column="62">-&gt;<pos:position pos:line="33" pos:column="67"/></operator><name pos:line="33" pos:column="64">username<pos:position pos:line="33" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="73"/></argument_list></call><operator pos:line="33" pos:column="73">)<pos:position pos:line="33" pos:column="74"/></operator> <operator pos:line="33" pos:column="75">||<pos:position pos:line="33" pos:column="77"/></operator>
            <operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><operator pos:line="34" pos:column="14">(<pos:position pos:line="34" pos:column="15"/></operator><name><name pos:line="34" pos:column="15">newnode<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">dn<pos:position pos:line="34" pos:column="26"/></name></name> <operator pos:line="34" pos:column="27">=<pos:position pos:line="34" pos:column="28"/></operator> <call><name pos:line="34" pos:column="29">util_ald_strdup<pos:position pos:line="34" pos:column="44"/></name><argument_list pos:line="34" pos:column="44">(<argument><expr><name pos:line="34" pos:column="45">cache<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="52">node<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">-&gt;<pos:position pos:line="34" pos:column="61"/></operator><name pos:line="34" pos:column="58">dn<pos:position pos:line="34" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></call><operator pos:line="34" pos:column="61">)<pos:position pos:line="34" pos:column="62"/></operator></expr> )<pos:position pos:line="34" pos:column="64"/></condition><then pos:line="34" pos:column="64"> <block pos:line="34" pos:column="65">{
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">util_ldap_search_node_free<pos:position pos:line="35" pos:column="39"/></name><argument_list pos:line="35" pos:column="39">(<argument><expr><name pos:line="35" pos:column="40">cache<pos:position pos:line="35" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="47">newnode<pos:position pos:line="35" pos:column="54"/></name></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="56"/></expr_stmt>
            <return pos:line="36" pos:column="13">return <expr><name pos:line="36" pos:column="20">NULL<pos:position pos:line="36" pos:column="24"/></name></expr>;<pos:position pos:line="36" pos:column="25"/></return>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name><name pos:line="38" pos:column="13">node<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">-&gt;<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="19">bindpw<pos:position pos:line="38" pos:column="25"/></name></name></expr>)<pos:position pos:line="38" pos:column="26"/></condition><then pos:line="38" pos:column="26"> <block pos:line="38" pos:column="27">{
            <if pos:line="39" pos:column="13">if <condition pos:line="39" pos:column="16">(<expr><operator pos:line="39" pos:column="17">!<pos:position pos:line="39" pos:column="18"/></operator><operator pos:line="39" pos:column="18">(<pos:position pos:line="39" pos:column="19"/></operator><name><name pos:line="39" pos:column="19">newnode<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">-&gt;<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="28">bindpw<pos:position pos:line="39" pos:column="34"/></name></name> <operator pos:line="39" pos:column="35">=<pos:position pos:line="39" pos:column="36"/></operator> <call><name pos:line="39" pos:column="37">util_ald_strdup<pos:position pos:line="39" pos:column="52"/></name><argument_list pos:line="39" pos:column="52">(<argument><expr><name pos:line="39" pos:column="53">cache<pos:position pos:line="39" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="60">node<pos:position pos:line="39" pos:column="64"/></name><operator pos:line="39" pos:column="64">-&gt;<pos:position pos:line="39" pos:column="69"/></operator><name pos:line="39" pos:column="66">bindpw<pos:position pos:line="39" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="73"/></argument_list></call><operator pos:line="39" pos:column="73">)<pos:position pos:line="39" pos:column="74"/></operator></expr>)<pos:position pos:line="39" pos:column="75"/></condition><then pos:line="39" pos:column="75"> <block pos:line="39" pos:column="76">{
                <expr_stmt><expr><call><name pos:line="40" pos:column="17">util_ldap_search_node_free<pos:position pos:line="40" pos:column="43"/></name><argument_list pos:line="40" pos:column="43">(<argument><expr><name pos:line="40" pos:column="44">cache<pos:position pos:line="40" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="51">newnode<pos:position pos:line="40" pos:column="58"/></name></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="60"/></expr_stmt>
                <return pos:line="41" pos:column="17">return <expr><name pos:line="41" pos:column="24">NULL<pos:position pos:line="41" pos:column="28"/></name></expr>;<pos:position pos:line="41" pos:column="29"/></return>
            }<pos:position pos:line="42" pos:column="14"/></block></then></if>
        }<pos:position pos:line="43" pos:column="10"/></block></then> <else pos:line="43" pos:column="11">else <block pos:line="43" pos:column="16">{
            <expr_stmt><expr><name><name pos:line="44" pos:column="13">newnode<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">-&gt;<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="22">bindpw<pos:position pos:line="44" pos:column="28"/></name></name> <operator pos:line="44" pos:column="29">=<pos:position pos:line="44" pos:column="30"/></operator> <name pos:line="44" pos:column="31">NULL<pos:position pos:line="44" pos:column="35"/></name></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">newnode<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">lastbind<pos:position pos:line="46" pos:column="26"/></name></name> <operator pos:line="46" pos:column="27">=<pos:position pos:line="46" pos:column="28"/></operator> <name><name pos:line="46" pos:column="29">node<pos:position pos:line="46" pos:column="33"/></name><operator pos:line="46" pos:column="33">-&gt;<pos:position pos:line="46" pos:column="38"/></operator><name pos:line="46" pos:column="35">lastbind<pos:position pos:line="46" pos:column="43"/></name></name></expr>;<pos:position pos:line="46" pos:column="44"/></expr_stmt>

    }<pos:position pos:line="48" pos:column="6"/></block></then></if>
    <return pos:line="49" pos:column="5">return <expr><operator pos:line="49" pos:column="12">(<pos:position pos:line="49" pos:column="13"/></operator><name pos:line="49" pos:column="13">void<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">*<pos:position pos:line="49" pos:column="19"/></operator><operator pos:line="49" pos:column="19">)<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="20">newnode<pos:position pos:line="49" pos:column="27"/></name></expr>;<pos:position pos:line="49" pos:column="28"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_0_httpd-2.4.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">checkmask<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">data<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">mask<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="12">ch<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">d<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>

    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init><expr><name pos:line="5" pos:column="10">i<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal></expr>;<pos:position pos:line="5" pos:column="16"/></init> <condition><expr><name><name pos:line="5" pos:column="17">mask<pos:position pos:line="5" pos:column="21"/></name><index pos:line="5" pos:column="21">[<expr><name pos:line="5" pos:column="22">i<pos:position pos:line="5" pos:column="23"/></name></expr>]<pos:position pos:line="5" pos:column="24"/></index></name> <operator pos:line="5" pos:column="25">!=<pos:position pos:line="5" pos:column="27"/></operator> <literal type="char" pos:line="5" pos:column="28">'\0'<pos:position pos:line="5" pos:column="32"/></literal> <operator pos:line="5" pos:column="33">&amp;&amp;<pos:position pos:line="5" pos:column="43"/></operator> <name><name pos:line="5" pos:column="36">mask<pos:position pos:line="5" pos:column="40"/></name><index pos:line="5" pos:column="40">[<expr><name pos:line="5" pos:column="41">i<pos:position pos:line="5" pos:column="42"/></name></expr>]<pos:position pos:line="5" pos:column="43"/></index></name> <operator pos:line="5" pos:column="44">!=<pos:position pos:line="5" pos:column="46"/></operator> <literal type="char" pos:line="5" pos:column="47">'*'<pos:position pos:line="5" pos:column="50"/></literal></expr>;<pos:position pos:line="5" pos:column="51"/></condition> <incr><expr><name pos:line="5" pos:column="52">i<pos:position pos:line="5" pos:column="53"/></name><operator pos:line="5" pos:column="53">++<pos:position pos:line="5" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="56"/></control> <block pos:line="5" pos:column="57">{
        <expr_stmt><expr><name pos:line="6" pos:column="9">ch<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <name><name pos:line="6" pos:column="14">mask<pos:position pos:line="6" pos:column="18"/></name><index pos:line="6" pos:column="18">[<expr><name pos:line="6" pos:column="19">i<pos:position pos:line="6" pos:column="20"/></name></expr>]<pos:position pos:line="6" pos:column="21"/></index></name></expr>;<pos:position pos:line="6" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="7" pos:column="9">d<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <name><name pos:line="7" pos:column="13">data<pos:position pos:line="7" pos:column="17"/></name><index pos:line="7" pos:column="17">[<expr><name pos:line="7" pos:column="18">i<pos:position pos:line="7" pos:column="19"/></name></expr>]<pos:position pos:line="7" pos:column="20"/></index></name></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">ch<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">==<pos:position pos:line="8" pos:column="18"/></operator> <literal type="char" pos:line="8" pos:column="19">'@'<pos:position pos:line="8" pos:column="22"/></literal></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23"> <block pos:line="8" pos:column="24">{
            <if pos:line="9" pos:column="13">if <condition pos:line="9" pos:column="16">(<expr><operator pos:line="9" pos:column="17">!<pos:position pos:line="9" pos:column="18"/></operator><call><name pos:line="9" pos:column="18">isupper<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">d<pos:position pos:line="9" pos:column="27"/></name></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="29"/></condition><then pos:line="9" pos:column="29">
                <block type="pseudo"><return pos:line="10" pos:column="17">return <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></return></block></then></if>
        }<pos:position pos:line="11" pos:column="10"/></block></then>
        <elseif pos:line="12" pos:column="9">else <if pos:line="12" pos:column="14">if <condition pos:line="12" pos:column="17">(<expr><name pos:line="12" pos:column="18">ch<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">==<pos:position pos:line="12" pos:column="23"/></operator> <literal type="char" pos:line="12" pos:column="24">'$'<pos:position pos:line="12" pos:column="27"/></literal></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28"> <block pos:line="12" pos:column="29">{
            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><operator pos:line="13" pos:column="17">!<pos:position pos:line="13" pos:column="18"/></operator><call><name pos:line="13" pos:column="18">islower<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">d<pos:position pos:line="13" pos:column="27"/></name></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="29"/></condition><then pos:line="13" pos:column="29">
                <block type="pseudo"><return pos:line="14" pos:column="17">return <expr><literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></return></block></then></if>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="16" pos:column="9">else <if pos:line="16" pos:column="14">if <condition pos:line="16" pos:column="17">(<expr><name pos:line="16" pos:column="18">ch<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">==<pos:position pos:line="16" pos:column="23"/></operator> <literal type="char" pos:line="16" pos:column="24">'#'<pos:position pos:line="16" pos:column="27"/></literal></expr>)<pos:position pos:line="16" pos:column="28"/></condition><then pos:line="16" pos:column="28"> <block pos:line="16" pos:column="29">{
            <if pos:line="17" pos:column="13">if <condition pos:line="17" pos:column="16">(<expr><operator pos:line="17" pos:column="17">!<pos:position pos:line="17" pos:column="18"/></operator><call><name pos:line="17" pos:column="18">isdigit<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">d<pos:position pos:line="17" pos:column="27"/></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="29"/></condition><then pos:line="17" pos:column="29">
                <block type="pseudo"><return pos:line="18" pos:column="17">return <expr><literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></return></block></then></if>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="20" pos:column="9">else <if pos:line="20" pos:column="14">if <condition pos:line="20" pos:column="17">(<expr><name pos:line="20" pos:column="18">ch<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">==<pos:position pos:line="20" pos:column="23"/></operator> <literal type="char" pos:line="20" pos:column="24">'&amp;'<pos:position pos:line="20" pos:column="31"/></literal></expr>)<pos:position pos:line="20" pos:column="28"/></condition><then pos:line="20" pos:column="28"> <block pos:line="20" pos:column="29">{
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><operator pos:line="21" pos:column="17">!<pos:position pos:line="21" pos:column="18"/></operator><call><name pos:line="21" pos:column="18">isxdigit<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">d<pos:position pos:line="21" pos:column="28"/></name></expr></argument>)<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="30"/></condition><then pos:line="21" pos:column="30">
                <block type="pseudo"><return pos:line="22" pos:column="17">return <expr><literal type="number" pos:line="22" pos:column="24">0<pos:position pos:line="22" pos:column="25"/></literal></expr>;<pos:position pos:line="22" pos:column="26"/></return></block></then></if>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="24" pos:column="9">else <if pos:line="24" pos:column="14">if <condition pos:line="24" pos:column="17">(<expr><name pos:line="24" pos:column="18">ch<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">!=<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="24">d<pos:position pos:line="24" pos:column="25"/></name></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26">
            <block type="pseudo"><return pos:line="25" pos:column="13">return <expr><literal type="number" pos:line="25" pos:column="20">0<pos:position pos:line="25" pos:column="21"/></literal></expr>;<pos:position pos:line="25" pos:column="22"/></return></block></then></if></elseif></if>
    }<pos:position pos:line="26" pos:column="6"/></block></for>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">mask<pos:position pos:line="28" pos:column="13"/></name><index pos:line="28" pos:column="13">[<expr><name pos:line="28" pos:column="14">i<pos:position pos:line="28" pos:column="15"/></name></expr>]<pos:position pos:line="28" pos:column="16"/></index></name> <operator pos:line="28" pos:column="17">==<pos:position pos:line="28" pos:column="19"/></operator> <literal type="char" pos:line="28" pos:column="20">'*'<pos:position pos:line="28" pos:column="23"/></literal></expr>)<pos:position pos:line="28" pos:column="24"/></condition><then pos:line="28" pos:column="24">
        <block type="pseudo"><return pos:line="29" pos:column="9">return <expr><literal type="number" pos:line="29" pos:column="16">1<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></return></block></then>
    <else pos:line="30" pos:column="5">else
        <block type="pseudo"><return pos:line="31" pos:column="9">return <expr><operator pos:line="31" pos:column="16">(<pos:position pos:line="31" pos:column="17"/></operator><name><name pos:line="31" pos:column="17">data<pos:position pos:line="31" pos:column="21"/></name><index pos:line="31" pos:column="21">[<expr><name pos:line="31" pos:column="22">i<pos:position pos:line="31" pos:column="23"/></name></expr>]<pos:position pos:line="31" pos:column="24"/></index></name> <operator pos:line="31" pos:column="25">==<pos:position pos:line="31" pos:column="27"/></operator> <literal type="char" pos:line="31" pos:column="28">'\0'<pos:position pos:line="31" pos:column="32"/></literal><operator pos:line="31" pos:column="32">)<pos:position pos:line="31" pos:column="33"/></operator></expr>;<pos:position pos:line="31" pos:column="34"/></return></block></else></if>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

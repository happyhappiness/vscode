<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1264_httpd-2.2.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">add_desc<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">cmd_parms<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">cmd<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">void<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">d<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">desc<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                            <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">to<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">autoindex_config_rec<pos:position pos:line="4" pos:column="25"/></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">dcfg<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><operator pos:line="4" pos:column="34">(<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">autoindex_config_rec<pos:position pos:line="4" pos:column="55"/></name> <operator pos:line="4" pos:column="56">*<pos:position pos:line="4" pos:column="57"/></operator><operator pos:line="4" pos:column="57">)<pos:position pos:line="4" pos:column="58"/></operator> <name pos:line="4" pos:column="59">d<pos:position pos:line="4" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="61"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ai_desc_t<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">desc_entry<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">prefix<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><literal type="string" pos:line="6" pos:column="20">""<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">desc_entry<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <operator pos:line="8" pos:column="18">(<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">ai_desc_t<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></operator><operator pos:line="8" pos:column="30">)<pos:position pos:line="8" pos:column="31"/></operator> <call><name pos:line="8" pos:column="32">apr_array_push<pos:position pos:line="8" pos:column="46"/></name><argument_list pos:line="8" pos:column="46">(<argument><expr><name><name pos:line="8" pos:column="47">dcfg<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">-&gt;<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="53">desc_list<pos:position pos:line="8" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">desc_entry<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">full_path<pos:position pos:line="9" pos:column="26"/></name></name> <operator pos:line="9" pos:column="27">=<pos:position pos:line="9" pos:column="28"/></operator> <ternary><condition><expr><operator pos:line="9" pos:column="29">(<pos:position pos:line="9" pos:column="30"/></operator><call><name pos:line="9" pos:column="30">ap_strchr_c<pos:position pos:line="9" pos:column="41"/></name><argument_list pos:line="9" pos:column="41">(<argument><expr><name pos:line="9" pos:column="42">to<pos:position pos:line="9" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="46">'/'<pos:position pos:line="9" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call> <operator pos:line="9" pos:column="51">==<pos:position pos:line="9" pos:column="53"/></operator> <name pos:line="9" pos:column="54">NULL<pos:position pos:line="9" pos:column="58"/></name><operator pos:line="9" pos:column="58">)<pos:position pos:line="9" pos:column="59"/></operator></expr> ?<pos:position pos:line="9" pos:column="61"/></condition><then pos:line="9" pos:column="61"> <expr><literal type="number" pos:line="9" pos:column="62">0<pos:position pos:line="9" pos:column="63"/></literal></expr> <pos:position pos:line="9" pos:column="64"/></then><else pos:line="9" pos:column="64">: <expr><literal type="number" pos:line="9" pos:column="66">1<pos:position pos:line="9" pos:column="67"/></literal></expr></else></ternary></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">desc_entry<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">wildcards<pos:position pos:line="10" pos:column="26"/></name></name> <operator pos:line="10" pos:column="27">=<pos:position pos:line="10" pos:column="28"/></operator> <operator pos:line="10" pos:column="29">(<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="30">WILDCARDS_REQUIRED<pos:position pos:line="10" pos:column="48"/></name>
                             <operator pos:line="11" pos:column="30">||<pos:position pos:line="11" pos:column="32"/></operator> <name><name pos:line="11" pos:column="33">desc_entry<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">full_path<pos:position pos:line="11" pos:column="54"/></name></name>
                             <operator pos:line="12" pos:column="30">||<pos:position pos:line="12" pos:column="32"/></operator> <call><name pos:line="12" pos:column="33">apr_fnmatch_test<pos:position pos:line="12" pos:column="49"/></name><argument_list pos:line="12" pos:column="49">(<argument><expr><name pos:line="12" pos:column="50">to<pos:position pos:line="12" pos:column="52"/></name></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call><operator pos:line="12" pos:column="53">)<pos:position pos:line="12" pos:column="54"/></operator></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">desc_entry<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">wildcards<pos:position pos:line="13" pos:column="30"/></name></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <block pos:line="13" pos:column="32">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">prefix<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <ternary><condition><expr><name><name pos:line="14" pos:column="18">desc_entry<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">full_path<pos:position pos:line="14" pos:column="39"/></name></name></expr> ?<pos:position pos:line="14" pos:column="41"/></condition><then pos:line="14" pos:column="41"> <expr><literal type="string" pos:line="14" pos:column="42">"*/"<pos:position pos:line="14" pos:column="46"/></literal></expr> <pos:position pos:line="14" pos:column="47"/></then><else pos:line="14" pos:column="47">: <expr><literal type="string" pos:line="14" pos:column="49">"*"<pos:position pos:line="14" pos:column="52"/></literal></expr></else></ternary></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="15" pos:column="9">desc_entry<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">-&gt;<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="21">pattern<pos:position pos:line="15" pos:column="28"/></name></name> <operator pos:line="15" pos:column="29">=<pos:position pos:line="15" pos:column="30"/></operator> <call><name pos:line="15" pos:column="31">apr_pstrcat<pos:position pos:line="15" pos:column="42"/></name><argument_list pos:line="15" pos:column="42">(<argument><expr><name><name pos:line="15" pos:column="43">dcfg<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">-&gt;<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="49">desc_list<pos:position pos:line="15" pos:column="58"/></name><operator pos:line="15" pos:column="58">-&gt;<pos:position pos:line="15" pos:column="63"/></operator><name pos:line="15" pos:column="60">pool<pos:position pos:line="15" pos:column="64"/></name></name></expr></argument>,
                                          <argument><expr><name pos:line="16" pos:column="43">prefix<pos:position pos:line="16" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="51">to<pos:position pos:line="16" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="55">"*"<pos:position pos:line="16" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="60">NULL<pos:position pos:line="16" pos:column="64"/></name></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then>
    <else pos:line="18" pos:column="5">else <block pos:line="18" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">desc_entry<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">pattern<pos:position pos:line="19" pos:column="28"/></name></name> <operator pos:line="19" pos:column="29">=<pos:position pos:line="19" pos:column="30"/></operator> <call><name pos:line="19" pos:column="31">apr_pstrdup<pos:position pos:line="19" pos:column="42"/></name><argument_list pos:line="19" pos:column="42">(<argument><expr><name><name pos:line="19" pos:column="43">dcfg<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">desc_list<pos:position pos:line="19" pos:column="58"/></name><operator pos:line="19" pos:column="58">-&gt;<pos:position pos:line="19" pos:column="63"/></operator><name pos:line="19" pos:column="60">pool<pos:position pos:line="19" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="66">to<pos:position pos:line="19" pos:column="68"/></name></expr></argument>)<pos:position pos:line="19" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">desc_entry<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">-&gt;<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="17">description<pos:position pos:line="21" pos:column="28"/></name></name> <operator pos:line="21" pos:column="29">=<pos:position pos:line="21" pos:column="30"/></operator> <call><name pos:line="21" pos:column="31">apr_pstrdup<pos:position pos:line="21" pos:column="42"/></name><argument_list pos:line="21" pos:column="42">(<argument><expr><name><name pos:line="21" pos:column="43">dcfg<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">-&gt;<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="49">desc_list<pos:position pos:line="21" pos:column="58"/></name><operator pos:line="21" pos:column="58">-&gt;<pos:position pos:line="21" pos:column="63"/></operator><name pos:line="21" pos:column="60">pool<pos:position pos:line="21" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="66">desc<pos:position pos:line="21" pos:column="70"/></name></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="72"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">NULL<pos:position pos:line="22" pos:column="16"/></name></expr>;<pos:position pos:line="22" pos:column="17"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

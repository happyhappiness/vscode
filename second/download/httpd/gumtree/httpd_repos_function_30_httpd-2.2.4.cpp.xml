<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_30_httpd-2.2.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">read_connection<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">connection<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">c<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">r<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name pos:line="5" pos:column="3">r<pos:position pos:line="5" pos:column="4"/></name><operator pos:line="5" pos:column="4">=<pos:position pos:line="5" pos:column="5"/></operator><call><name pos:line="5" pos:column="5">read<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name><name pos:line="5" pos:column="10">c<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">fd<pos:position pos:line="5" pos:column="15"/></name></name></expr></argument>,<argument><expr><name pos:line="5" pos:column="16">buffer<pos:position pos:line="5" pos:column="22"/></name></expr></argument>,<argument><expr><sizeof pos:line="5" pos:column="23">sizeof<argument_list pos:line="5" pos:column="29">(<argument><expr><name pos:line="5" pos:column="30">buffer<pos:position pos:line="5" pos:column="36"/></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="39"/></expr_stmt>
  <if pos:line="6" pos:column="3">if<condition pos:line="6" pos:column="5">(<expr><name pos:line="6" pos:column="6">r<pos:position pos:line="6" pos:column="7"/></name><operator pos:line="6" pos:column="7">==<pos:position pos:line="6" pos:column="9"/></operator><literal type="number" pos:line="6" pos:column="9">0<pos:position pos:line="6" pos:column="10"/></literal> <operator pos:line="6" pos:column="11">||<pos:position pos:line="6" pos:column="13"/></operator> <operator pos:line="6" pos:column="14">(<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">r<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">&lt;<pos:position pos:line="6" pos:column="20"/></operator><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal> <operator pos:line="6" pos:column="19">&amp;&amp;<pos:position pos:line="6" pos:column="29"/></operator> <name pos:line="6" pos:column="22">errno<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">!=<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">EAGAIN<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">)<pos:position pos:line="6" pos:column="36"/></operator></expr>)<pos:position pos:line="6" pos:column="37"/></condition><then pos:line="6" pos:column="37"> <block pos:line="6" pos:column="38">{
    <expr_stmt><expr><name pos:line="7" pos:column="5">good<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">++<pos:position pos:line="7" pos:column="11"/></operator></expr>;<pos:position pos:line="7" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">close_connection<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">c<pos:position pos:line="8" pos:column="23"/></name></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
    <return pos:line="9" pos:column="5">return;<pos:position pos:line="9" pos:column="12"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <if pos:line="12" pos:column="3">if<condition pos:line="12" pos:column="5">(<expr><name pos:line="12" pos:column="6">r<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">&lt;<pos:position pos:line="12" pos:column="11"/></operator><literal type="number" pos:line="12" pos:column="8">0<pos:position pos:line="12" pos:column="9"/></literal> <operator pos:line="12" pos:column="10">&amp;&amp;<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="13">errno<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">==<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">EAGAIN<pos:position pos:line="12" pos:column="26"/></name></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27"> <block type="pseudo"><return pos:line="12" pos:column="28">return;<pos:position pos:line="12" pos:column="35"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="14" pos:column="3">c<pos:position pos:line="14" pos:column="4"/></name><operator pos:line="14" pos:column="4">-&gt;<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="6">read<pos:position pos:line="14" pos:column="10"/></name></name> <operator pos:line="14" pos:column="11">+=<pos:position pos:line="14" pos:column="13"/></operator> <name pos:line="14" pos:column="14">r<pos:position pos:line="14" pos:column="15"/></name></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">totalread<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">+=<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">r<pos:position pos:line="15" pos:column="17"/></name></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>

  <if pos:line="17" pos:column="3">if<condition pos:line="17" pos:column="5">(<expr><operator pos:line="17" pos:column="6">!<pos:position pos:line="17" pos:column="7"/></operator><name><name pos:line="17" pos:column="7">c<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">-&gt;<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="10">gotheader<pos:position pos:line="17" pos:column="19"/></name></name></expr>)<pos:position pos:line="17" pos:column="20"/></condition><then pos:line="17" pos:column="20"> <block pos:line="17" pos:column="21">{
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">char<pos:position pos:line="18" pos:column="9"/></name> <modifier pos:line="18" pos:column="10">*<pos:position pos:line="18" pos:column="11"/></modifier></type><name pos:line="18" pos:column="11">s<pos:position pos:line="18" pos:column="12"/></name></decl>;<pos:position pos:line="18" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">l<pos:position pos:line="19" pos:column="10"/></name><init pos:line="19" pos:column="10">=<expr><literal type="number" pos:line="19" pos:column="11">4<pos:position pos:line="19" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">int<pos:position pos:line="20" pos:column="8"/></name></type> <name pos:line="20" pos:column="9">space<pos:position pos:line="20" pos:column="14"/></name> <init pos:line="20" pos:column="15">= <expr><name pos:line="20" pos:column="17">CBUFFSIZE<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">-<pos:position pos:line="20" pos:column="28"/></operator> <name><name pos:line="20" pos:column="29">c<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">-&gt;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="32">cbx<pos:position pos:line="20" pos:column="35"/></name></name> <operator pos:line="20" pos:column="36">-<pos:position pos:line="20" pos:column="37"/></operator> <literal type="number" pos:line="20" pos:column="38">1<pos:position pos:line="20" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="40"/></decl_stmt> <comment type="block" pos:line="20" pos:column="41">/* -1 to allow for 0 terminator */</comment>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">int<pos:position pos:line="21" pos:column="8"/></name></type> <name pos:line="21" pos:column="9">tocopy<pos:position pos:line="21" pos:column="15"/></name> <init pos:line="21" pos:column="16">= <expr><ternary><condition><expr><operator pos:line="21" pos:column="18">(<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">space<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">&lt;<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="25">r<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">)<pos:position pos:line="21" pos:column="27"/></operator></expr>?<pos:position pos:line="21" pos:column="28"/></condition><then><expr><name pos:line="21" pos:column="28">space<pos:position pos:line="21" pos:column="33"/></name></expr></then><else pos:line="21" pos:column="33">:<expr><name pos:line="21" pos:column="34">r<pos:position pos:line="21" pos:column="35"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="21" pos:column="36"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">memcpy<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><name><name pos:line="22" pos:column="12">c<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">cbuff<pos:position pos:line="22" pos:column="20"/></name></name><operator pos:line="22" pos:column="20">+<pos:position pos:line="22" pos:column="21"/></operator><name><name pos:line="22" pos:column="21">c<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">cbx<pos:position pos:line="22" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="29">buffer<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="37">space<pos:position pos:line="22" pos:column="42"/></name></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">c<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">-&gt;<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="8">cbx<pos:position pos:line="23" pos:column="11"/></name></name> <operator pos:line="23" pos:column="12">+=<pos:position pos:line="23" pos:column="14"/></operator> <name pos:line="23" pos:column="15">tocopy<pos:position pos:line="23" pos:column="21"/></name></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt> <expr_stmt><expr><name pos:line="23" pos:column="23">space<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">-=<pos:position pos:line="23" pos:column="31"/></operator> <name pos:line="23" pos:column="32">tocopy<pos:position pos:line="23" pos:column="38"/></name></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">c<pos:position pos:line="24" pos:column="6"/></name><operator pos:line="24" pos:column="6">-&gt;<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="8">cbuff<pos:position pos:line="24" pos:column="13"/></name><index pos:line="24" pos:column="13">[<expr><name><name pos:line="24" pos:column="14">c<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">cbx<pos:position pos:line="24" pos:column="20"/></name></name></expr>]<pos:position pos:line="24" pos:column="21"/></index></name> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt> <comment type="block" pos:line="24" pos:column="27">/* terminate for benefit of strstr */</comment>
    <expr_stmt><expr><name pos:line="25" pos:column="5">s<pos:position pos:line="25" pos:column="6"/></name> <operator pos:line="25" pos:column="7">=<pos:position pos:line="25" pos:column="8"/></operator> <call><name pos:line="25" pos:column="9">strstr<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><name><name pos:line="25" pos:column="16">c<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">cbuff<pos:position pos:line="25" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="26">"\r\n\r\n"<pos:position pos:line="25" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
    <comment type="block" pos:line="26" pos:column="5">/* this next line is so that we talk to NCSA 1.5 which blatantly breaks
       the http specifaction */</comment>
    <if pos:line="28" pos:column="5">if<condition pos:line="28" pos:column="7">(<expr><operator pos:line="28" pos:column="8">!<pos:position pos:line="28" pos:column="9"/></operator><name pos:line="28" pos:column="9">s<pos:position pos:line="28" pos:column="10"/></name></expr>)<pos:position pos:line="28" pos:column="11"/></condition><then pos:line="28" pos:column="11"> <block pos:line="28" pos:column="12">{ <expr_stmt><expr><name pos:line="28" pos:column="14">s<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <call><name pos:line="28" pos:column="18">strstr<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><name><name pos:line="28" pos:column="25">c<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">-&gt;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="28">cbuff<pos:position pos:line="28" pos:column="33"/></name></name></expr></argument>,<argument><expr><literal type="string" pos:line="28" pos:column="34">"\n\n"<pos:position pos:line="28" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt> <expr_stmt><expr><name pos:line="28" pos:column="43">l<pos:position pos:line="28" pos:column="44"/></name><operator pos:line="28" pos:column="44">=<pos:position pos:line="28" pos:column="45"/></operator><literal type="number" pos:line="28" pos:column="45">2<pos:position pos:line="28" pos:column="46"/></literal></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt> }<pos:position pos:line="28" pos:column="49"/></block></then></if>

    <if pos:line="30" pos:column="5">if<condition pos:line="30" pos:column="7">(<expr><operator pos:line="30" pos:column="8">!<pos:position pos:line="30" pos:column="9"/></operator><name pos:line="30" pos:column="9">s<pos:position pos:line="30" pos:column="10"/></name></expr>)<pos:position pos:line="30" pos:column="11"/></condition><then pos:line="30" pos:column="11"> <block pos:line="30" pos:column="12">{
       <comment type="block" pos:line="31" pos:column="8">/* read rest next time */</comment>
      <if pos:line="32" pos:column="7">if<condition pos:line="32" pos:column="9">(<expr><name pos:line="32" pos:column="10">space<pos:position pos:line="32" pos:column="15"/></name></expr>)<pos:position pos:line="32" pos:column="16"/></condition><then pos:line="32" pos:column="16">
        <block type="pseudo"><return pos:line="33" pos:column="9">return;<pos:position pos:line="33" pos:column="16"/></return></block></then>
      <else pos:line="34" pos:column="7">else <block pos:line="34" pos:column="12">{
        <comment type="block" pos:line="35" pos:column="9">/* header is in invalid or too big - close connection */</comment>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">close<pos:position pos:line="36" pos:column="14"/></name><argument_list pos:line="36" pos:column="14">(<argument><expr><name><name pos:line="36" pos:column="15">c<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">-&gt;<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="18">fd<pos:position pos:line="36" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="22"/></expr_stmt>
        <if pos:line="37" pos:column="9">if<condition pos:line="37" pos:column="11">(<expr><name pos:line="37" pos:column="12">bad<pos:position pos:line="37" pos:column="15"/></name><operator pos:line="37" pos:column="15">++<pos:position pos:line="37" pos:column="17"/></operator><operator pos:line="37" pos:column="17">&gt;<pos:position pos:line="37" pos:column="21"/></operator><literal type="number" pos:line="37" pos:column="18">10<pos:position pos:line="37" pos:column="20"/></literal></expr>)<pos:position pos:line="37" pos:column="21"/></condition><then pos:line="37" pos:column="21"> <block pos:line="37" pos:column="22">{
          <expr_stmt><expr><call><name pos:line="38" pos:column="11">printf<pos:position pos:line="38" pos:column="17"/></name><argument_list pos:line="38" pos:column="17">(<argument><expr><literal type="string" pos:line="38" pos:column="18">"\nTest aborted after 10 failures\n\n"<pos:position pos:line="38" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="58"/></expr_stmt>
          <expr_stmt><expr><call><name pos:line="39" pos:column="11">exit<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><literal type="number" pos:line="39" pos:column="16">1<pos:position pos:line="39" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">FD_CLR<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><name><name pos:line="41" pos:column="16">c<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">-&gt;<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="19">fd<pos:position pos:line="41" pos:column="21"/></name></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="23">&amp;<pos:position pos:line="41" pos:column="28"/></operator><name pos:line="41" pos:column="24">writebits<pos:position pos:line="41" pos:column="33"/></name></expr></argument>)<pos:position pos:line="41" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">start_connect<pos:position pos:line="42" pos:column="22"/></name><argument_list pos:line="42" pos:column="22">(<argument><expr><name pos:line="42" pos:column="23">c<pos:position pos:line="42" pos:column="24"/></name></expr></argument>)<pos:position pos:line="42" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="43" pos:column="8"/></block></else></if>
    }<pos:position pos:line="44" pos:column="6"/></block></then>
    <else pos:line="45" pos:column="5">else <block pos:line="45" pos:column="10">{
      <comment type="block" pos:line="46" pos:column="7">/* have full header */</comment>
      <if pos:line="47" pos:column="7">if<condition pos:line="47" pos:column="9">(<expr><operator pos:line="47" pos:column="10">!<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="11">good<pos:position pos:line="47" pos:column="15"/></name></expr>)<pos:position pos:line="47" pos:column="16"/></condition><then pos:line="47" pos:column="16"> <block pos:line="47" pos:column="17">{
        <comment type="block" pos:line="48" pos:column="9">/* this is first time, extract some interesting info */</comment>
        <decl_stmt><decl><type><name pos:line="49" pos:column="9">char<pos:position pos:line="49" pos:column="13"/></name> <modifier pos:line="49" pos:column="14">*<pos:position pos:line="49" pos:column="15"/></modifier></type><name pos:line="49" pos:column="15">p<pos:position pos:line="49" pos:column="16"/></name></decl>, <modifier pos:line="49" pos:column="18">*<pos:position pos:line="49" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="49" pos:column="19">q<pos:position pos:line="49" pos:column="20"/></name></decl>;<pos:position pos:line="49" pos:column="21"/></decl_stmt>
        <expr_stmt><expr><name pos:line="50" pos:column="9">p<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">=<pos:position pos:line="50" pos:column="12"/></operator> <call><name pos:line="50" pos:column="13">strstr<pos:position pos:line="50" pos:column="19"/></name><argument_list pos:line="50" pos:column="19">(<argument><expr><name><name pos:line="50" pos:column="20">c<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">-&gt;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="23">cbuff<pos:position pos:line="50" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="30">"Server:"<pos:position pos:line="50" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">q<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">=<pos:position pos:line="51" pos:column="12"/></operator> <name pos:line="51" pos:column="13">server_name<pos:position pos:line="51" pos:column="24"/></name></expr>;<pos:position pos:line="51" pos:column="25"/></expr_stmt>
        <if pos:line="52" pos:column="9">if<condition pos:line="52" pos:column="11">(<expr><name pos:line="52" pos:column="12">p<pos:position pos:line="52" pos:column="13"/></name></expr>)<pos:position pos:line="52" pos:column="14"/></condition><then pos:line="52" pos:column="14"> <block pos:line="52" pos:column="15">{ <expr_stmt><expr><name pos:line="52" pos:column="17">p<pos:position pos:line="52" pos:column="18"/></name><operator pos:line="52" pos:column="18">+=<pos:position pos:line="52" pos:column="20"/></operator><literal type="number" pos:line="52" pos:column="20">8<pos:position pos:line="52" pos:column="21"/></literal></expr>;<pos:position pos:line="52" pos:column="22"/></expr_stmt> <while pos:line="52" pos:column="23">while<condition pos:line="52" pos:column="28">(<expr><operator pos:line="52" pos:column="29">*<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="30">p<pos:position pos:line="52" pos:column="31"/></name><operator pos:line="52" pos:column="31">&gt;<pos:position pos:line="52" pos:column="35"/></operator><literal type="number" pos:line="52" pos:column="32">32<pos:position pos:line="52" pos:column="34"/></literal></expr>)<pos:position pos:line="52" pos:column="35"/></condition> <block type="pseudo"><expr_stmt><expr><operator pos:line="52" pos:column="36">*<pos:position pos:line="52" pos:column="37"/></operator><name pos:line="52" pos:column="37">q<pos:position pos:line="52" pos:column="38"/></name><operator pos:line="52" pos:column="38">++<pos:position pos:line="52" pos:column="40"/></operator> <operator pos:line="52" pos:column="41">=<pos:position pos:line="52" pos:column="42"/></operator> <operator pos:line="52" pos:column="43">*<pos:position pos:line="52" pos:column="44"/></operator><name pos:line="52" pos:column="44">p<pos:position pos:line="52" pos:column="45"/></name><operator pos:line="52" pos:column="45">++<pos:position pos:line="52" pos:column="47"/></operator></expr>;<pos:position pos:line="52" pos:column="48"/></expr_stmt></block></while> }<pos:position pos:line="52" pos:column="50"/></block></then></if>
        <expr_stmt><expr><operator pos:line="53" pos:column="9">*<pos:position pos:line="53" pos:column="10"/></operator><name pos:line="53" pos:column="10">q<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <literal type="number" pos:line="53" pos:column="14">0<pos:position pos:line="53" pos:column="15"/></literal></expr>;<pos:position pos:line="53" pos:column="16"/></expr_stmt>
      }<pos:position pos:line="54" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="56" pos:column="7">c<pos:position pos:line="56" pos:column="8"/></name><operator pos:line="56" pos:column="8">-&gt;<pos:position pos:line="56" pos:column="13"/></operator><name pos:line="56" pos:column="10">gotheader<pos:position pos:line="56" pos:column="19"/></name></name> <operator pos:line="56" pos:column="20">=<pos:position pos:line="56" pos:column="21"/></operator> <literal type="number" pos:line="56" pos:column="22">1<pos:position pos:line="56" pos:column="23"/></literal></expr>;<pos:position pos:line="56" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="57" pos:column="7">*<pos:position pos:line="57" pos:column="8"/></operator><name pos:line="57" pos:column="8">s<pos:position pos:line="57" pos:column="9"/></name> <operator pos:line="57" pos:column="10">=<pos:position pos:line="57" pos:column="11"/></operator> <literal type="number" pos:line="57" pos:column="12">0<pos:position pos:line="57" pos:column="13"/></literal></expr>;<pos:position pos:line="57" pos:column="14"/></expr_stmt> <comment type="block" pos:line="57" pos:column="15">/* terminate at end of header */</comment>
      <if pos:line="58" pos:column="7">if<condition pos:line="58" pos:column="9">(<expr><name pos:line="58" pos:column="10">keepalive<pos:position pos:line="58" pos:column="19"/></name> <operator pos:line="58" pos:column="20">&amp;&amp;<pos:position pos:line="58" pos:column="30"/></operator>
         <operator pos:line="59" pos:column="10">(<pos:position pos:line="59" pos:column="11"/></operator><call><name pos:line="59" pos:column="11">strstr<pos:position pos:line="59" pos:column="17"/></name><argument_list pos:line="59" pos:column="17">(<argument><expr><name><name pos:line="59" pos:column="18">c<pos:position pos:line="59" pos:column="19"/></name><operator pos:line="59" pos:column="19">-&gt;<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="21">cbuff<pos:position pos:line="59" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="28">"Keep-Alive"<pos:position pos:line="59" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="41"/></argument_list></call>
          <operator pos:line="60" pos:column="11">||<pos:position pos:line="60" pos:column="13"/></operator> <call><name pos:line="60" pos:column="14">strstr<pos:position pos:line="60" pos:column="20"/></name><argument_list pos:line="60" pos:column="20">(<argument><expr><name><name pos:line="60" pos:column="21">c<pos:position pos:line="60" pos:column="22"/></name><operator pos:line="60" pos:column="22">-&gt;<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="24">cbuff<pos:position pos:line="60" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="31">"keep-alive"<pos:position pos:line="60" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="44"/></argument_list></call><operator pos:line="60" pos:column="44">)<pos:position pos:line="60" pos:column="45"/></operator></expr>)<pos:position pos:line="60" pos:column="46"/></condition><then pos:line="60" pos:column="46">  <comment type="block" pos:line="60" pos:column="48">/* for benefit of MSIIS */</comment>
        <block pos:line="61" pos:column="9">{
        <decl_stmt><decl><type><name pos:line="62" pos:column="9">char<pos:position pos:line="62" pos:column="13"/></name> <modifier pos:line="62" pos:column="14">*<pos:position pos:line="62" pos:column="15"/></modifier></type><name pos:line="62" pos:column="15">cl<pos:position pos:line="62" pos:column="17"/></name></decl>;<pos:position pos:line="62" pos:column="18"/></decl_stmt>
        <expr_stmt><expr><name pos:line="63" pos:column="9">cl<pos:position pos:line="63" pos:column="11"/></name> <operator pos:line="63" pos:column="12">=<pos:position pos:line="63" pos:column="13"/></operator> <call><name pos:line="63" pos:column="14">strstr<pos:position pos:line="63" pos:column="20"/></name><argument_list pos:line="63" pos:column="20">(<argument><expr><name><name pos:line="63" pos:column="21">c<pos:position pos:line="63" pos:column="22"/></name><operator pos:line="63" pos:column="22">-&gt;<pos:position pos:line="63" pos:column="27"/></operator><name pos:line="63" pos:column="24">cbuff<pos:position pos:line="63" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="31">"Content-Length:"<pos:position pos:line="63" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="50"/></expr_stmt>
        <comment type="block" pos:line="64" pos:column="9">/* for cacky servers like NCSA which break the spec and send a
           lower case 'l' */</comment>
        <if pos:line="66" pos:column="9">if<condition pos:line="66" pos:column="11">(<expr><operator pos:line="66" pos:column="12">!<pos:position pos:line="66" pos:column="13"/></operator><name pos:line="66" pos:column="13">cl<pos:position pos:line="66" pos:column="15"/></name></expr>)<pos:position pos:line="66" pos:column="16"/></condition><then pos:line="66" pos:column="16"> <block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="17">cl<pos:position pos:line="66" pos:column="19"/></name> <operator pos:line="66" pos:column="20">=<pos:position pos:line="66" pos:column="21"/></operator> <call><name pos:line="66" pos:column="22">strstr<pos:position pos:line="66" pos:column="28"/></name><argument_list pos:line="66" pos:column="28">(<argument><expr><name><name pos:line="66" pos:column="29">c<pos:position pos:line="66" pos:column="30"/></name><operator pos:line="66" pos:column="30">-&gt;<pos:position pos:line="66" pos:column="35"/></operator><name pos:line="66" pos:column="32">cbuff<pos:position pos:line="66" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="39">"Content-length:"<pos:position pos:line="66" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="58"/></expr_stmt></block></then></if>
        <if pos:line="67" pos:column="9">if<condition pos:line="67" pos:column="11">(<expr><name pos:line="67" pos:column="12">cl<pos:position pos:line="67" pos:column="14"/></name></expr>)<pos:position pos:line="67" pos:column="15"/></condition><then pos:line="67" pos:column="15"> <block pos:line="67" pos:column="16">{
          <expr_stmt><expr><name><name pos:line="68" pos:column="11">c<pos:position pos:line="68" pos:column="12"/></name><operator pos:line="68" pos:column="12">-&gt;<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="14">keepalive<pos:position pos:line="68" pos:column="23"/></name></name><operator pos:line="68" pos:column="23">=<pos:position pos:line="68" pos:column="24"/></operator><literal type="number" pos:line="68" pos:column="24">1<pos:position pos:line="68" pos:column="25"/></literal></expr>;<pos:position pos:line="68" pos:column="26"/></expr_stmt>
          <expr_stmt><expr><name><name pos:line="69" pos:column="11">c<pos:position pos:line="69" pos:column="12"/></name><operator pos:line="69" pos:column="12">-&gt;<pos:position pos:line="69" pos:column="17"/></operator><name pos:line="69" pos:column="14">length<pos:position pos:line="69" pos:column="20"/></name></name> <operator pos:line="69" pos:column="21">=<pos:position pos:line="69" pos:column="22"/></operator> <call><name pos:line="69" pos:column="23">atoi<pos:position pos:line="69" pos:column="27"/></name><argument_list pos:line="69" pos:column="27">(<argument><expr><name pos:line="69" pos:column="28">cl<pos:position pos:line="69" pos:column="30"/></name><operator pos:line="69" pos:column="30">+<pos:position pos:line="69" pos:column="31"/></operator><literal type="number" pos:line="69" pos:column="31">16<pos:position pos:line="69" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if>
      }<pos:position pos:line="71" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="72" pos:column="7">c<pos:position pos:line="72" pos:column="8"/></name><operator pos:line="72" pos:column="8">-&gt;<pos:position pos:line="72" pos:column="13"/></operator><name pos:line="72" pos:column="10">bread<pos:position pos:line="72" pos:column="15"/></name></name> <operator pos:line="72" pos:column="16">+=<pos:position pos:line="72" pos:column="18"/></operator> <name><name pos:line="72" pos:column="19">c<pos:position pos:line="72" pos:column="20"/></name><operator pos:line="72" pos:column="20">-&gt;<pos:position pos:line="72" pos:column="25"/></operator><name pos:line="72" pos:column="22">cbx<pos:position pos:line="72" pos:column="25"/></name></name> <operator pos:line="72" pos:column="26">-<pos:position pos:line="72" pos:column="27"/></operator> <operator pos:line="72" pos:column="28">(<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="29">s<pos:position pos:line="72" pos:column="30"/></name><operator pos:line="72" pos:column="30">+<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="31">l<pos:position pos:line="72" pos:column="32"/></name><operator pos:line="72" pos:column="32">-<pos:position pos:line="72" pos:column="33"/></operator><name><name pos:line="72" pos:column="33">c<pos:position pos:line="72" pos:column="34"/></name><operator pos:line="72" pos:column="34">-&gt;<pos:position pos:line="72" pos:column="39"/></operator><name pos:line="72" pos:column="36">cbuff<pos:position pos:line="72" pos:column="41"/></name></name><operator pos:line="72" pos:column="41">)<pos:position pos:line="72" pos:column="42"/></operator> <operator pos:line="72" pos:column="43">+<pos:position pos:line="72" pos:column="44"/></operator> <name pos:line="72" pos:column="45">r<pos:position pos:line="72" pos:column="46"/></name><operator pos:line="72" pos:column="46">-<pos:position pos:line="72" pos:column="47"/></operator><name pos:line="72" pos:column="47">tocopy<pos:position pos:line="72" pos:column="53"/></name></expr>;<pos:position pos:line="72" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><name pos:line="73" pos:column="7">totalbread<pos:position pos:line="73" pos:column="17"/></name> <operator pos:line="73" pos:column="18">+=<pos:position pos:line="73" pos:column="20"/></operator> <name><name pos:line="73" pos:column="21">c<pos:position pos:line="73" pos:column="22"/></name><operator pos:line="73" pos:column="22">-&gt;<pos:position pos:line="73" pos:column="27"/></operator><name pos:line="73" pos:column="24">bread<pos:position pos:line="73" pos:column="29"/></name></name></expr>;<pos:position pos:line="73" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></else></if>
  }<pos:position pos:line="75" pos:column="4"/></block></then>
  <else pos:line="76" pos:column="3">else <block pos:line="76" pos:column="8">{
    <comment type="block" pos:line="77" pos:column="5">/* outside header, everything we have read is entity body */</comment>
    <expr_stmt><expr><name><name pos:line="78" pos:column="5">c<pos:position pos:line="78" pos:column="6"/></name><operator pos:line="78" pos:column="6">-&gt;<pos:position pos:line="78" pos:column="11"/></operator><name pos:line="78" pos:column="8">bread<pos:position pos:line="78" pos:column="13"/></name></name> <operator pos:line="78" pos:column="14">+=<pos:position pos:line="78" pos:column="16"/></operator> <name pos:line="78" pos:column="17">r<pos:position pos:line="78" pos:column="18"/></name></expr>;<pos:position pos:line="78" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="79" pos:column="5">totalbread<pos:position pos:line="79" pos:column="15"/></name> <operator pos:line="79" pos:column="16">+=<pos:position pos:line="79" pos:column="18"/></operator> <name pos:line="79" pos:column="19">r<pos:position pos:line="79" pos:column="20"/></name></expr>;<pos:position pos:line="79" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="80" pos:column="4"/></block></else></if>

  <if pos:line="82" pos:column="3">if<condition pos:line="82" pos:column="5">(<expr><name><name pos:line="82" pos:column="6">c<pos:position pos:line="82" pos:column="7"/></name><operator pos:line="82" pos:column="7">-&gt;<pos:position pos:line="82" pos:column="12"/></operator><name pos:line="82" pos:column="9">keepalive<pos:position pos:line="82" pos:column="18"/></name></name> <operator pos:line="82" pos:column="19">&amp;&amp;<pos:position pos:line="82" pos:column="29"/></operator> <operator pos:line="82" pos:column="22">(<pos:position pos:line="82" pos:column="23"/></operator><name><name pos:line="82" pos:column="23">c<pos:position pos:line="82" pos:column="24"/></name><operator pos:line="82" pos:column="24">-&gt;<pos:position pos:line="82" pos:column="29"/></operator><name pos:line="82" pos:column="26">bread<pos:position pos:line="82" pos:column="31"/></name></name> <operator pos:line="82" pos:column="32">&gt;=<pos:position pos:line="82" pos:column="37"/></operator> <name><name pos:line="82" pos:column="35">c<pos:position pos:line="82" pos:column="36"/></name><operator pos:line="82" pos:column="36">-&gt;<pos:position pos:line="82" pos:column="41"/></operator><name pos:line="82" pos:column="38">length<pos:position pos:line="82" pos:column="44"/></name></name><operator pos:line="82" pos:column="44">)<pos:position pos:line="82" pos:column="45"/></operator></expr>)<pos:position pos:line="82" pos:column="46"/></condition><then pos:line="82" pos:column="46"> <block pos:line="82" pos:column="47">{
    <comment type="block" pos:line="83" pos:column="5">/* finished a keep-alive connection */</comment>
    <expr_stmt><expr><name pos:line="84" pos:column="5">good<pos:position pos:line="84" pos:column="9"/></name><operator pos:line="84" pos:column="9">++<pos:position pos:line="84" pos:column="11"/></operator></expr>;<pos:position pos:line="84" pos:column="12"/></expr_stmt> <expr_stmt><expr><name pos:line="84" pos:column="13">doneka<pos:position pos:line="84" pos:column="19"/></name><operator pos:line="84" pos:column="19">++<pos:position pos:line="84" pos:column="21"/></operator></expr>;<pos:position pos:line="84" pos:column="22"/></expr_stmt>
    <comment type="block" pos:line="85" pos:column="5">/* save out time */</comment>
    <if pos:line="86" pos:column="5">if<condition pos:line="86" pos:column="7">(<expr><name pos:line="86" pos:column="8">good<pos:position pos:line="86" pos:column="12"/></name><operator pos:line="86" pos:column="12">==<pos:position pos:line="86" pos:column="14"/></operator><literal type="number" pos:line="86" pos:column="14">1<pos:position pos:line="86" pos:column="15"/></literal></expr>)<pos:position pos:line="86" pos:column="16"/></condition><then pos:line="86" pos:column="16"> <block pos:line="86" pos:column="17">{
      <comment type="block" pos:line="87" pos:column="7">/* first time here */</comment>
      <expr_stmt><expr><name pos:line="88" pos:column="7">doclen<pos:position pos:line="88" pos:column="13"/></name> <operator pos:line="88" pos:column="14">=<pos:position pos:line="88" pos:column="15"/></operator> <name><name pos:line="88" pos:column="16">c<pos:position pos:line="88" pos:column="17"/></name><operator pos:line="88" pos:column="17">-&gt;<pos:position pos:line="88" pos:column="22"/></operator><name pos:line="88" pos:column="19">bread<pos:position pos:line="88" pos:column="24"/></name></name></expr>;<pos:position pos:line="88" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="89" pos:column="6"/></block></then> <elseif pos:line="89" pos:column="7">else <if pos:line="89" pos:column="12">if<condition pos:line="89" pos:column="14">(<expr><name><name pos:line="89" pos:column="15">c<pos:position pos:line="89" pos:column="16"/></name><operator pos:line="89" pos:column="16">-&gt;<pos:position pos:line="89" pos:column="21"/></operator><name pos:line="89" pos:column="18">bread<pos:position pos:line="89" pos:column="23"/></name></name><operator pos:line="89" pos:column="23">!=<pos:position pos:line="89" pos:column="25"/></operator><name pos:line="89" pos:column="25">doclen<pos:position pos:line="89" pos:column="31"/></name></expr>)<pos:position pos:line="89" pos:column="32"/></condition><then pos:line="89" pos:column="32"> <block pos:line="89" pos:column="33">{ <expr_stmt><expr><name pos:line="89" pos:column="35">bad<pos:position pos:line="89" pos:column="38"/></name><operator pos:line="89" pos:column="38">++<pos:position pos:line="89" pos:column="40"/></operator></expr>;<pos:position pos:line="89" pos:column="41"/></expr_stmt> <expr_stmt><expr><name pos:line="89" pos:column="42">err_length<pos:position pos:line="89" pos:column="52"/></name><operator pos:line="89" pos:column="52">++<pos:position pos:line="89" pos:column="54"/></operator></expr>;<pos:position pos:line="89" pos:column="55"/></expr_stmt> }<pos:position pos:line="89" pos:column="57"/></block></then></if></elseif></if>
    <if pos:line="90" pos:column="5">if<condition pos:line="90" pos:column="7">(<expr><name pos:line="90" pos:column="8">done<pos:position pos:line="90" pos:column="12"/></name> <operator pos:line="90" pos:column="13">&lt;<pos:position pos:line="90" pos:column="17"/></operator> <name pos:line="90" pos:column="15">requests<pos:position pos:line="90" pos:column="23"/></name></expr>)<pos:position pos:line="90" pos:column="24"/></condition><then pos:line="90" pos:column="24"> <block pos:line="90" pos:column="25">{
      <decl_stmt><decl><type><name><name pos:line="91" pos:column="7">struct<pos:position pos:line="91" pos:column="13"/></name> <name pos:line="91" pos:column="14">data<pos:position pos:line="91" pos:column="18"/></name></name></type> <name pos:line="91" pos:column="19">s<pos:position pos:line="91" pos:column="20"/></name></decl>;<pos:position pos:line="91" pos:column="21"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="92" pos:column="7">gettimeofday<pos:position pos:line="92" pos:column="19"/></name><argument_list pos:line="92" pos:column="19">(<argument><expr><operator pos:line="92" pos:column="20">&amp;<pos:position pos:line="92" pos:column="25"/></operator><name><name pos:line="92" pos:column="21">c<pos:position pos:line="92" pos:column="22"/></name><operator pos:line="92" pos:column="22">-&gt;<pos:position pos:line="92" pos:column="27"/></operator><name pos:line="92" pos:column="24">done<pos:position pos:line="92" pos:column="28"/></name></name></expr></argument>,<argument><expr><literal type="number" pos:line="92" pos:column="29">0<pos:position pos:line="92" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="93" pos:column="7">s<pos:position pos:line="93" pos:column="8"/></name><operator pos:line="93" pos:column="8">.<pos:position pos:line="93" pos:column="9"/></operator><name pos:line="93" pos:column="9">read<pos:position pos:line="93" pos:column="13"/></name></name> <operator pos:line="93" pos:column="14">=<pos:position pos:line="93" pos:column="15"/></operator> <name><name pos:line="93" pos:column="16">c<pos:position pos:line="93" pos:column="17"/></name><operator pos:line="93" pos:column="17">-&gt;<pos:position pos:line="93" pos:column="22"/></operator><name pos:line="93" pos:column="19">read<pos:position pos:line="93" pos:column="23"/></name></name></expr>;<pos:position pos:line="93" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="94" pos:column="7">s<pos:position pos:line="94" pos:column="8"/></name><operator pos:line="94" pos:column="8">.<pos:position pos:line="94" pos:column="9"/></operator><name pos:line="94" pos:column="9">ctime<pos:position pos:line="94" pos:column="14"/></name></name> <operator pos:line="94" pos:column="15">=<pos:position pos:line="94" pos:column="16"/></operator> <call><name pos:line="94" pos:column="17">timedif<pos:position pos:line="94" pos:column="24"/></name><argument_list pos:line="94" pos:column="24">(<argument><expr><name><name pos:line="94" pos:column="25">c<pos:position pos:line="94" pos:column="26"/></name><operator pos:line="94" pos:column="26">-&gt;<pos:position pos:line="94" pos:column="31"/></operator><name pos:line="94" pos:column="28">connect<pos:position pos:line="94" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="37">c<pos:position pos:line="94" pos:column="38"/></name><operator pos:line="94" pos:column="38">-&gt;<pos:position pos:line="94" pos:column="43"/></operator><name pos:line="94" pos:column="40">start<pos:position pos:line="94" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="95" pos:column="7">s<pos:position pos:line="95" pos:column="8"/></name><operator pos:line="95" pos:column="8">.<pos:position pos:line="95" pos:column="9"/></operator><name pos:line="95" pos:column="9">time<pos:position pos:line="95" pos:column="13"/></name></name> <operator pos:line="95" pos:column="14">=<pos:position pos:line="95" pos:column="15"/></operator> <call><name pos:line="95" pos:column="16">timedif<pos:position pos:line="95" pos:column="23"/></name><argument_list pos:line="95" pos:column="23">(<argument><expr><name><name pos:line="95" pos:column="24">c<pos:position pos:line="95" pos:column="25"/></name><operator pos:line="95" pos:column="25">-&gt;<pos:position pos:line="95" pos:column="30"/></operator><name pos:line="95" pos:column="27">done<pos:position pos:line="95" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="33">c<pos:position pos:line="95" pos:column="34"/></name><operator pos:line="95" pos:column="34">-&gt;<pos:position pos:line="95" pos:column="39"/></operator><name pos:line="95" pos:column="36">start<pos:position pos:line="95" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="96" pos:column="7">stats<pos:position pos:line="96" pos:column="12"/></name><index pos:line="96" pos:column="12">[<expr><name pos:line="96" pos:column="13">done<pos:position pos:line="96" pos:column="17"/></name><operator pos:line="96" pos:column="17">++<pos:position pos:line="96" pos:column="19"/></operator></expr>]<pos:position pos:line="96" pos:column="20"/></index></name> <operator pos:line="96" pos:column="21">=<pos:position pos:line="96" pos:column="22"/></operator> <name pos:line="96" pos:column="23">s<pos:position pos:line="96" pos:column="24"/></name></expr>;<pos:position pos:line="96" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="97" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="98" pos:column="5">c<pos:position pos:line="98" pos:column="6"/></name><operator pos:line="98" pos:column="6">-&gt;<pos:position pos:line="98" pos:column="11"/></operator><name pos:line="98" pos:column="8">keepalive<pos:position pos:line="98" pos:column="17"/></name></name> <operator pos:line="98" pos:column="18">=<pos:position pos:line="98" pos:column="19"/></operator> <literal type="number" pos:line="98" pos:column="20">0<pos:position pos:line="98" pos:column="21"/></literal></expr>;<pos:position pos:line="98" pos:column="22"/></expr_stmt> <expr_stmt><expr><name><name pos:line="98" pos:column="23">c<pos:position pos:line="98" pos:column="24"/></name><operator pos:line="98" pos:column="24">-&gt;<pos:position pos:line="98" pos:column="29"/></operator><name pos:line="98" pos:column="26">length<pos:position pos:line="98" pos:column="32"/></name></name> <operator pos:line="98" pos:column="33">=<pos:position pos:line="98" pos:column="34"/></operator> <literal type="number" pos:line="98" pos:column="35">0<pos:position pos:line="98" pos:column="36"/></literal></expr>;<pos:position pos:line="98" pos:column="37"/></expr_stmt> <expr_stmt><expr><name><name pos:line="98" pos:column="38">c<pos:position pos:line="98" pos:column="39"/></name><operator pos:line="98" pos:column="39">-&gt;<pos:position pos:line="98" pos:column="44"/></operator><name pos:line="98" pos:column="41">gotheader<pos:position pos:line="98" pos:column="50"/></name></name><operator pos:line="98" pos:column="50">=<pos:position pos:line="98" pos:column="51"/></operator><literal type="number" pos:line="98" pos:column="51">0<pos:position pos:line="98" pos:column="52"/></literal></expr>;<pos:position pos:line="98" pos:column="53"/></expr_stmt> <expr_stmt><expr><name><name pos:line="98" pos:column="54">c<pos:position pos:line="98" pos:column="55"/></name><operator pos:line="98" pos:column="55">-&gt;<pos:position pos:line="98" pos:column="60"/></operator><name pos:line="98" pos:column="57">cbx<pos:position pos:line="98" pos:column="60"/></name></name> <operator pos:line="98" pos:column="61">=<pos:position pos:line="98" pos:column="62"/></operator> <literal type="number" pos:line="98" pos:column="63">0<pos:position pos:line="98" pos:column="64"/></literal></expr>;<pos:position pos:line="98" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="99" pos:column="5">c<pos:position pos:line="99" pos:column="6"/></name><operator pos:line="99" pos:column="6">-&gt;<pos:position pos:line="99" pos:column="11"/></operator><name pos:line="99" pos:column="8">read<pos:position pos:line="99" pos:column="12"/></name></name> <operator pos:line="99" pos:column="13">=<pos:position pos:line="99" pos:column="14"/></operator> <name><name pos:line="99" pos:column="15">c<pos:position pos:line="99" pos:column="16"/></name><operator pos:line="99" pos:column="16">-&gt;<pos:position pos:line="99" pos:column="21"/></operator><name pos:line="99" pos:column="18">bread<pos:position pos:line="99" pos:column="23"/></name></name> <operator pos:line="99" pos:column="24">=<pos:position pos:line="99" pos:column="25"/></operator> <literal type="number" pos:line="99" pos:column="26">0<pos:position pos:line="99" pos:column="27"/></literal></expr>;<pos:position pos:line="99" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="100" pos:column="5">write_request<pos:position pos:line="100" pos:column="18"/></name><argument_list pos:line="100" pos:column="18">(<argument><expr><name pos:line="100" pos:column="19">c<pos:position pos:line="100" pos:column="20"/></name></expr></argument>)<pos:position pos:line="100" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="101" pos:column="5">c<pos:position pos:line="101" pos:column="6"/></name><operator pos:line="101" pos:column="6">-&gt;<pos:position pos:line="101" pos:column="11"/></operator><name pos:line="101" pos:column="8">start<pos:position pos:line="101" pos:column="13"/></name></name> <operator pos:line="101" pos:column="14">=<pos:position pos:line="101" pos:column="15"/></operator> <name><name pos:line="101" pos:column="16">c<pos:position pos:line="101" pos:column="17"/></name><operator pos:line="101" pos:column="17">-&gt;<pos:position pos:line="101" pos:column="22"/></operator><name pos:line="101" pos:column="19">connect<pos:position pos:line="101" pos:column="26"/></name></name></expr>;<pos:position pos:line="101" pos:column="27"/></expr_stmt> <comment type="block" pos:line="101" pos:column="28">/* zero connect time with keep-alive */</comment>
  }<pos:position pos:line="102" pos:column="4"/></block></then></if>
}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

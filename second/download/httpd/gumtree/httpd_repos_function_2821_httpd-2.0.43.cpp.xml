<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2821_httpd-2.0.43.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">case_filename<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">apr_pool_t<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">pPool<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">szFile<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">casedFileName<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><name pos:line="3" pos:column="27">NULL<pos:position pos:line="3" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">name<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><literal type="number" pos:line="4" pos:column="15">1024<pos:position pos:line="4" pos:column="19"/></literal></expr>]<pos:position pos:line="4" pos:column="20"/></index></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">rc<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>

<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">NEW_API<pos:position pos:line="7" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="8" pos:column="5">rc<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator> <call><name pos:line="8" pos:column="10">realname<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">szFile<pos:position pos:line="8" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="27">name<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">rc<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">==<pos:position pos:line="9" pos:column="14"/></operator> <literal type="number" pos:line="9" pos:column="15">0<pos:position pos:line="9" pos:column="16"/></literal></expr>)<pos:position pos:line="9" pos:column="17"/></condition><then pos:line="9" pos:column="17"> <block pos:line="9" pos:column="18">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">casedFileName<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <call><name pos:line="10" pos:column="25">apr_pstrdup<pos:position pos:line="10" pos:column="36"/></name><argument_list pos:line="10" pos:column="36">(<argument><expr><name pos:line="10" pos:column="37">pPool<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">name<pos:position pos:line="10" pos:column="48"/></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
<cpp:else pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">else<pos:position pos:line="12" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">NXDirAttrWithName_t<pos:position pos:line="13" pos:column="24"/></name>	<modifier pos:line="13" pos:column="25">*<pos:position pos:line="13" pos:column="26"/></modifier></type><name pos:line="13" pos:column="26">attrBuf<pos:position pos:line="13" pos:column="33"/></name></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><name pos:line="15" pos:column="5">attrBuf<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <operator pos:line="15" pos:column="15">(<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">NXDirAttrWithName_t<pos:position pos:line="15" pos:column="35"/></name> <operator pos:line="15" pos:column="36">*<pos:position pos:line="15" pos:column="37"/></operator><operator pos:line="15" pos:column="37">)<pos:position pos:line="15" pos:column="38"/></operator> <operator pos:line="15" pos:column="39">&amp;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="40">name<pos:position pos:line="15" pos:column="44"/></name></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">rc<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator><call><name pos:line="16" pos:column="9">NXGetAttr<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><name pos:line="16" pos:column="19">NULL<pos:position pos:line="16" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="25">szFile<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">NX_DELEVEL_NAME_ONLY<pos:position pos:line="16" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="55">attrBuf<pos:position pos:line="16" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="64">1024<pos:position pos:line="16" pos:column="68"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="70">0<pos:position pos:line="16" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="73"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">rc<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">==<pos:position pos:line="17" pos:column="14"/></operator> <literal type="number" pos:line="17" pos:column="15">0<pos:position pos:line="17" pos:column="16"/></literal></expr>)<pos:position pos:line="17" pos:column="17"/></condition><then pos:line="17" pos:column="17"> <block pos:line="17" pos:column="18">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">casedFileName<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <call><name pos:line="18" pos:column="25">apr_pstrdup<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">pPool<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="44">attrBuf<pos:position pos:line="18" pos:column="51"/></name><operator pos:line="18" pos:column="51">-&gt;<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="53">deName<pos:position pos:line="18" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>
    <else pos:line="21" pos:column="5">else
    <block pos:line="22" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="23" pos:column="9">char<pos:position pos:line="23" pos:column="13"/></name> <modifier pos:line="23" pos:column="14">*<pos:position pos:line="23" pos:column="15"/></modifier></type><name pos:line="23" pos:column="15">s<pos:position pos:line="23" pos:column="16"/></name></decl>;<pos:position pos:line="23" pos:column="17"/></decl_stmt>
        <expr_stmt><expr><name pos:line="24" pos:column="9">s<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <call><name pos:line="24" pos:column="13">strrchr<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name pos:line="24" pos:column="21">szFile<pos:position pos:line="24" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="29">'/'<pos:position pos:line="24" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">s<pos:position pos:line="25" pos:column="15"/></name></expr>)<pos:position pos:line="25" pos:column="16"/></condition><then pos:line="25" pos:column="16">
            <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="13">s<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <call><name pos:line="26" pos:column="17">strrchr<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">szFile<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="26" pos:column="33">':'<pos:position pos:line="26" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt></block></then></if>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">s<pos:position pos:line="27" pos:column="14"/></name></expr>)<pos:position pos:line="27" pos:column="15"/></condition><then pos:line="27" pos:column="15"> <block pos:line="27" pos:column="16">{
            <expr_stmt><expr><name pos:line="28" pos:column="13">casedFileName<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <call><name pos:line="28" pos:column="29">apr_pstrdup<pos:position pos:line="28" pos:column="40"/></name><argument_list pos:line="28" pos:column="40">(<argument><expr><name pos:line="28" pos:column="41">pPool<pos:position pos:line="28" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="48">&amp;<pos:position pos:line="28" pos:column="53"/></operator><name><name pos:line="28" pos:column="49">s<pos:position pos:line="28" pos:column="50"/></name><index pos:line="28" pos:column="50">[<expr><literal type="number" pos:line="28" pos:column="51">1<pos:position pos:line="28" pos:column="52"/></literal></expr>]<pos:position pos:line="28" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></else></if>
    <return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">casedFileName<pos:position pos:line="31" pos:column="25"/></name></expr>;<pos:position pos:line="31" pos:column="26"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

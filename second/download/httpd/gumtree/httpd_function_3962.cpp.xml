<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3962.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">ap_default_log_writer_init<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">apr_pool_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">p<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">server_rec<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">s<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                        <parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name><modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type> <name pos:line="2" pos:column="53">name<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">name<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">==<pos:position pos:line="4" pos:column="17"/></operator> <literal type="char" pos:line="4" pos:column="18">'|'<pos:position pos:line="4" pos:column="21"/></literal></expr>)<pos:position pos:line="4" pos:column="22"/></condition><then pos:line="4" pos:column="22"> <block pos:line="4" pos:column="23">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">piped_log<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">pl<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

        <expr_stmt><expr><name pos:line="7" pos:column="9">pl<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <call><name pos:line="7" pos:column="14">ap_open_piped_log<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><name pos:line="7" pos:column="32">p<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="35">name<pos:position pos:line="7" pos:column="39"/></name> <operator pos:line="7" pos:column="40">+<pos:position pos:line="7" pos:column="41"/></operator> <literal type="number" pos:line="7" pos:column="42">1<pos:position pos:line="7" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="45"/></expr_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">pl<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">==<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">NULL<pos:position pos:line="8" pos:column="23"/></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24"> <block pos:line="8" pos:column="25">{
           <return pos:line="9" pos:column="12">return <expr><name pos:line="9" pos:column="19">NULL<pos:position pos:line="9" pos:column="23"/></name></expr>;<pos:position pos:line="9" pos:column="24"/></return><empty_stmt pos:line="9" pos:column="24">;<pos:position pos:line="9" pos:column="25"/></empty_stmt>
        }<pos:position pos:line="10" pos:column="10"/></block></then></if>
        <return pos:line="11" pos:column="9">return <expr><call><name pos:line="11" pos:column="16">ap_piped_log_write_fd<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">pl<pos:position pos:line="11" pos:column="40"/></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="42"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then>
    <else pos:line="13" pos:column="5">else <block pos:line="13" pos:column="10">{
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">const<pos:position pos:line="14" pos:column="14"/></specifier> <name pos:line="14" pos:column="15">char<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">fname<pos:position pos:line="14" pos:column="26"/></name> <init pos:line="14" pos:column="27">= <expr><call><name pos:line="14" pos:column="29">ap_server_root_relative<pos:position pos:line="14" pos:column="52"/></name><argument_list pos:line="14" pos:column="52">(<argument><expr><name pos:line="14" pos:column="53">p<pos:position pos:line="14" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="56">name<pos:position pos:line="14" pos:column="60"/></name></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="62"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">apr_file_t<pos:position pos:line="15" pos:column="19"/></name> <modifier pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></modifier></type><name pos:line="15" pos:column="21">fd<pos:position pos:line="15" pos:column="23"/></name></decl>;<pos:position pos:line="15" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="16" pos:column="9">apr_status_t<pos:position pos:line="16" pos:column="21"/></name></type> <name pos:line="16" pos:column="22">rv<pos:position pos:line="16" pos:column="24"/></name></decl>;<pos:position pos:line="16" pos:column="25"/></decl_stmt>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">fname<pos:position pos:line="18" pos:column="19"/></name></expr>)<pos:position pos:line="18" pos:column="20"/></condition><then pos:line="18" pos:column="20"> <block pos:line="18" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">ap_log_error<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">APLOG_MARK<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="38">APLOG_ERR<pos:position pos:line="19" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="49">APR_EBADPATH<pos:position pos:line="19" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="63">s<pos:position pos:line="19" pos:column="64"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="20" pos:column="29">"invalid transfer log path %s."<pos:position pos:line="20" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="62">name<pos:position pos:line="20" pos:column="66"/></name></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="68"/></expr_stmt>
            <return pos:line="21" pos:column="13">return <expr><name pos:line="21" pos:column="20">NULL<pos:position pos:line="21" pos:column="24"/></name></expr>;<pos:position pos:line="21" pos:column="25"/></return>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="23" pos:column="9">rv<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">apr_file_open<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><operator pos:line="23" pos:column="28">&amp;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="29">fd<pos:position pos:line="23" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="33">fname<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="40">xfer_flags<pos:position pos:line="23" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="52">xfer_perms<pos:position pos:line="23" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="64">p<pos:position pos:line="23" pos:column="65"/></name></expr></argument>)<pos:position pos:line="23" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="67"/></expr_stmt>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">rv<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">!=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">APR_SUCCESS<pos:position pos:line="24" pos:column="30"/></name></expr>)<pos:position pos:line="24" pos:column="31"/></condition><then pos:line="24" pos:column="31"> <block pos:line="24" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">ap_log_error<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">APLOG_MARK<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="38">APLOG_ERR<pos:position pos:line="25" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="49">rv<pos:position pos:line="25" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="53">s<pos:position pos:line="25" pos:column="54"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="26" pos:column="29">"could not open transfer log file %s."<pos:position pos:line="26" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="69">fname<pos:position pos:line="26" pos:column="74"/></name></expr></argument>)<pos:position pos:line="26" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="76"/></expr_stmt>
            <return pos:line="27" pos:column="13">return <expr><name pos:line="27" pos:column="20">NULL<pos:position pos:line="27" pos:column="24"/></name></expr>;<pos:position pos:line="27" pos:column="25"/></return>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>
        <return pos:line="29" pos:column="9">return <expr><name pos:line="29" pos:column="16">fd<pos:position pos:line="29" pos:column="18"/></name></expr>;<pos:position pos:line="29" pos:column="19"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></else></if>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

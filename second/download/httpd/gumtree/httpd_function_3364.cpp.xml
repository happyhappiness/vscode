<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3364.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">isapi_load<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">apr_pool_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">p<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">server_rec<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">s<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">isapi_loaded<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">isa<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="5" pos:column="5">isa<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">-&gt;<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="10">isapi_version<pos:position pos:line="5" pos:column="23"/></name></name> <operator pos:line="5" pos:column="24">=<pos:position pos:line="5" pos:column="25"/></operator> <call><name pos:line="5" pos:column="26">apr_pcalloc<pos:position pos:line="5" pos:column="37"/></name><argument_list pos:line="5" pos:column="37">(<argument><expr><name pos:line="5" pos:column="38">p<pos:position pos:line="5" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="41">sizeof<argument_list pos:line="5" pos:column="47">(<argument><expr><name pos:line="5" pos:column="48">HSE_VERSION_INFO<pos:position pos:line="5" pos:column="64"/></name></expr></argument>)<pos:position pos:line="5" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="67"/></expr_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* TODO: These aught to become overrideable, so that we
     * assure a given isapi can be fooled into behaving well.
     *
     * The tricky bit, they aren't really a per-dir sort of
     * config, they will always be constant across every
     * reference to the .dll no matter what context (vhost,
     * location, etc) they apply to.
     */</comment>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">isa<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">-&gt;<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="10">report_version<pos:position pos:line="15" pos:column="24"/></name></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <literal type="number" pos:line="15" pos:column="27">0x500<pos:position pos:line="15" pos:column="32"/></literal></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt> <comment type="block" pos:line="15" pos:column="34">/* Revision 5.0 */</comment>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">isa<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">timeout<pos:position pos:line="16" pos:column="17"/></name></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <literal type="number" pos:line="16" pos:column="20">300<pos:position pos:line="16" pos:column="23"/></literal> <operator pos:line="16" pos:column="24">*<pos:position pos:line="16" pos:column="25"/></operator> <literal type="number" pos:line="16" pos:column="26">1000000<pos:position pos:line="16" pos:column="33"/></literal></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt> <comment type="block" pos:line="16" pos:column="35">/* microsecs, not used */</comment>

    <expr_stmt><expr><name pos:line="18" pos:column="5">rv<pos:position pos:line="18" pos:column="7"/></name> <operator pos:line="18" pos:column="8">=<pos:position pos:line="18" pos:column="9"/></operator> <call><name pos:line="18" pos:column="10">apr_dso_load<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><operator pos:line="18" pos:column="23">&amp;<pos:position pos:line="18" pos:column="28"/></operator><name><name pos:line="18" pos:column="24">isa<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">handle<pos:position pos:line="18" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="37">isa<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">-&gt;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="42">filename<pos:position pos:line="18" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="52">p<pos:position pos:line="18" pos:column="53"/></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">rv<pos:position pos:line="19" pos:column="11"/></name></expr>)<pos:position pos:line="19" pos:column="12"/></condition><then pos:line="19" pos:column="12">
    <block pos:line="20" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">ap_log_error<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">APLOG_MARK<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">APLOG_ERR<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="45">rv<pos:position pos:line="21" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="49">s<pos:position pos:line="21" pos:column="50"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="22" pos:column="22">"ISAPI: failed to load %s"<pos:position pos:line="22" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="50">isa<pos:position pos:line="22" pos:column="53"/></name><operator pos:line="22" pos:column="53">-&gt;<pos:position pos:line="22" pos:column="58"/></operator><name pos:line="22" pos:column="55">filename<pos:position pos:line="22" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">isa<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">handle<pos:position pos:line="23" pos:column="20"/></name></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">NULL<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
        <return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">rv<pos:position pos:line="24" pos:column="18"/></name></expr>;<pos:position pos:line="24" pos:column="19"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="27" pos:column="5">rv<pos:position pos:line="27" pos:column="7"/></name> <operator pos:line="27" pos:column="8">=<pos:position pos:line="27" pos:column="9"/></operator> <call><name pos:line="27" pos:column="10">apr_dso_sym<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><operator pos:line="27" pos:column="22">(<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">void<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">*<pos:position pos:line="27" pos:column="28"/></operator><operator pos:line="27" pos:column="28">*<pos:position pos:line="27" pos:column="29"/></operator><operator pos:line="27" pos:column="29">)<pos:position pos:line="27" pos:column="30"/></operator><operator pos:line="27" pos:column="30">&amp;<pos:position pos:line="27" pos:column="35"/></operator><name><name pos:line="27" pos:column="31">isa<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">-&gt;<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="36">GetExtensionVersion<pos:position pos:line="27" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="57">isa<pos:position pos:line="27" pos:column="60"/></name><operator pos:line="27" pos:column="60">-&gt;<pos:position pos:line="27" pos:column="65"/></operator><name pos:line="27" pos:column="62">handle<pos:position pos:line="27" pos:column="68"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="28" pos:column="22">"GetExtensionVersion"<pos:position pos:line="28" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">rv<pos:position pos:line="29" pos:column="11"/></name></expr>)<pos:position pos:line="29" pos:column="12"/></condition><then pos:line="29" pos:column="12">
    <block pos:line="30" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">ap_log_error<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">APLOG_MARK<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="34">APLOG_ERR<pos:position pos:line="31" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="45">rv<pos:position pos:line="31" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="49">s<pos:position pos:line="31" pos:column="50"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="32" pos:column="22">"ISAPI: missing GetExtensionVersion() in %s"<pos:position pos:line="32" pos:column="66"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="33" pos:column="22">isa<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">-&gt;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="27">filename<pos:position pos:line="33" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">apr_dso_unload<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name><name pos:line="34" pos:column="24">isa<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">-&gt;<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="29">handle<pos:position pos:line="34" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">isa<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">handle<pos:position pos:line="35" pos:column="20"/></name></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <name pos:line="35" pos:column="23">NULL<pos:position pos:line="35" pos:column="27"/></name></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>
        <return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">rv<pos:position pos:line="36" pos:column="18"/></name></expr>;<pos:position pos:line="36" pos:column="19"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="39" pos:column="5">rv<pos:position pos:line="39" pos:column="7"/></name> <operator pos:line="39" pos:column="8">=<pos:position pos:line="39" pos:column="9"/></operator> <call><name pos:line="39" pos:column="10">apr_dso_sym<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><operator pos:line="39" pos:column="22">(<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="23">void<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">*<pos:position pos:line="39" pos:column="28"/></operator><operator pos:line="39" pos:column="28">*<pos:position pos:line="39" pos:column="29"/></operator><operator pos:line="39" pos:column="29">)<pos:position pos:line="39" pos:column="30"/></operator><operator pos:line="39" pos:column="30">&amp;<pos:position pos:line="39" pos:column="35"/></operator><name><name pos:line="39" pos:column="31">isa<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">-&gt;<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="36">HttpExtensionProc<pos:position pos:line="39" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="55">isa<pos:position pos:line="39" pos:column="58"/></name><operator pos:line="39" pos:column="58">-&gt;<pos:position pos:line="39" pos:column="63"/></operator><name pos:line="39" pos:column="60">handle<pos:position pos:line="39" pos:column="66"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="40" pos:column="22">"HttpExtensionProc"<pos:position pos:line="40" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="43"/></expr_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">rv<pos:position pos:line="41" pos:column="11"/></name></expr>)<pos:position pos:line="41" pos:column="12"/></condition><then pos:line="41" pos:column="12">
    <block pos:line="42" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">ap_log_error<pos:position pos:line="43" pos:column="21"/></name><argument_list pos:line="43" pos:column="21">(<argument><expr><name pos:line="43" pos:column="22">APLOG_MARK<pos:position pos:line="43" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="34">APLOG_ERR<pos:position pos:line="43" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="45">rv<pos:position pos:line="43" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="49">s<pos:position pos:line="43" pos:column="50"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="44" pos:column="22">"ISAPI: missing HttpExtensionProc() in %s"<pos:position pos:line="44" pos:column="64"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="45" pos:column="22">isa<pos:position pos:line="45" pos:column="25"/></name><operator pos:line="45" pos:column="25">-&gt;<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="27">filename<pos:position pos:line="45" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">apr_dso_unload<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument><expr><name><name pos:line="46" pos:column="24">isa<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">-&gt;<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="29">handle<pos:position pos:line="46" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="47" pos:column="9">isa<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">-&gt;<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="14">handle<pos:position pos:line="47" pos:column="20"/></name></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <name pos:line="47" pos:column="23">NULL<pos:position pos:line="47" pos:column="27"/></name></expr>;<pos:position pos:line="47" pos:column="28"/></expr_stmt>
        <return pos:line="48" pos:column="9">return <expr><name pos:line="48" pos:column="16">rv<pos:position pos:line="48" pos:column="18"/></name></expr>;<pos:position pos:line="48" pos:column="19"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="51" pos:column="5">/* TerminateExtension() is an optional interface */</comment>
    <expr_stmt><expr><name pos:line="52" pos:column="5">rv<pos:position pos:line="52" pos:column="7"/></name> <operator pos:line="52" pos:column="8">=<pos:position pos:line="52" pos:column="9"/></operator> <call><name pos:line="52" pos:column="10">apr_dso_sym<pos:position pos:line="52" pos:column="21"/></name><argument_list pos:line="52" pos:column="21">(<argument><expr><operator pos:line="52" pos:column="22">(<pos:position pos:line="52" pos:column="23"/></operator><name pos:line="52" pos:column="23">void<pos:position pos:line="52" pos:column="27"/></name><operator pos:line="52" pos:column="27">*<pos:position pos:line="52" pos:column="28"/></operator><operator pos:line="52" pos:column="28">*<pos:position pos:line="52" pos:column="29"/></operator><operator pos:line="52" pos:column="29">)<pos:position pos:line="52" pos:column="30"/></operator><operator pos:line="52" pos:column="30">&amp;<pos:position pos:line="52" pos:column="35"/></operator><name><name pos:line="52" pos:column="31">isa<pos:position pos:line="52" pos:column="34"/></name><operator pos:line="52" pos:column="34">-&gt;<pos:position pos:line="52" pos:column="39"/></operator><name pos:line="52" pos:column="36">TerminateExtension<pos:position pos:line="52" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="56">isa<pos:position pos:line="52" pos:column="59"/></name><operator pos:line="52" pos:column="59">-&gt;<pos:position pos:line="52" pos:column="64"/></operator><name pos:line="52" pos:column="61">handle<pos:position pos:line="52" pos:column="67"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="53" pos:column="22">"TerminateExtension"<pos:position pos:line="53" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">apr_set_os_error<pos:position pos:line="54" pos:column="21"/></name><argument_list pos:line="54" pos:column="21">(<argument><expr><literal type="number" pos:line="54" pos:column="22">0<pos:position pos:line="54" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="56" pos:column="5">/* Run GetExtensionVersion() */</comment>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><operator pos:line="57" pos:column="9">!<pos:position pos:line="57" pos:column="10"/></operator><call pos:line="57" pos:column="10">(<name><name pos:line="57" pos:column="11">isa<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">-&gt;<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="16">GetExtensionVersion<pos:position pos:line="57" pos:column="35"/></name></name>)<argument_list pos:line="57" pos:column="36">(<argument><expr><name><name pos:line="57" pos:column="37">isa<pos:position pos:line="57" pos:column="40"/></name><operator pos:line="57" pos:column="40">-&gt;<pos:position pos:line="57" pos:column="45"/></operator><name pos:line="57" pos:column="42">isapi_version<pos:position pos:line="57" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="57"/></condition><then pos:line="57" pos:column="57"> <block pos:line="57" pos:column="58">{
        <decl_stmt><decl><type><name pos:line="58" pos:column="9">apr_status_t<pos:position pos:line="58" pos:column="21"/></name></type> <name pos:line="58" pos:column="22">rv<pos:position pos:line="58" pos:column="24"/></name> <init pos:line="58" pos:column="25">= <expr><call><name pos:line="58" pos:column="27">apr_get_os_error<pos:position pos:line="58" pos:column="43"/></name><argument_list pos:line="58" pos:column="43">()<pos:position pos:line="58" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="58" pos:column="46"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">ap_log_error<pos:position pos:line="59" pos:column="21"/></name><argument_list pos:line="59" pos:column="21">(<argument><expr><name pos:line="59" pos:column="22">APLOG_MARK<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="34">APLOG_ERR<pos:position pos:line="59" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="45">rv<pos:position pos:line="59" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="49">s<pos:position pos:line="59" pos:column="50"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="60" pos:column="22">"ISAPI: failed call to GetExtensionVersion() in %s"<pos:position pos:line="60" pos:column="73"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="61" pos:column="22">isa<pos:position pos:line="61" pos:column="25"/></name><operator pos:line="61" pos:column="25">-&gt;<pos:position pos:line="61" pos:column="30"/></operator><name pos:line="61" pos:column="27">filename<pos:position pos:line="61" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">apr_dso_unload<pos:position pos:line="62" pos:column="23"/></name><argument_list pos:line="62" pos:column="23">(<argument><expr><name><name pos:line="62" pos:column="24">isa<pos:position pos:line="62" pos:column="27"/></name><operator pos:line="62" pos:column="27">-&gt;<pos:position pos:line="62" pos:column="32"/></operator><name pos:line="62" pos:column="29">handle<pos:position pos:line="62" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">isa<pos:position pos:line="63" pos:column="12"/></name><operator pos:line="63" pos:column="12">-&gt;<pos:position pos:line="63" pos:column="17"/></operator><name pos:line="63" pos:column="14">handle<pos:position pos:line="63" pos:column="20"/></name></name> <operator pos:line="63" pos:column="21">=<pos:position pos:line="63" pos:column="22"/></operator> <name pos:line="63" pos:column="23">NULL<pos:position pos:line="63" pos:column="27"/></name></expr>;<pos:position pos:line="63" pos:column="28"/></expr_stmt>
        <return pos:line="64" pos:column="9">return <expr><name pos:line="64" pos:column="16">rv<pos:position pos:line="64" pos:column="18"/></name></expr>;<pos:position pos:line="64" pos:column="19"/></return>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="67" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="67" pos:column="30"/></name><argument_list pos:line="67" pos:column="30">(<argument><expr><name pos:line="67" pos:column="31">p<pos:position pos:line="67" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="34">isa<pos:position pos:line="67" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="39">cleanup_isapi<pos:position pos:line="67" pos:column="52"/></name></expr></argument>,
                              <argument><expr><name pos:line="68" pos:column="31">apr_pool_cleanup_null<pos:position pos:line="68" pos:column="52"/></name></expr></argument>)<pos:position pos:line="68" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="54"/></expr_stmt>

    <return pos:line="70" pos:column="5">return <expr><name pos:line="70" pos:column="12">APR_SUCCESS<pos:position pos:line="70" pos:column="23"/></name></expr>;<pos:position pos:line="70" pos:column="24"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2436_httpd-2.2.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ap_mpm_run<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">apr_pool_t<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type> <name pos:line="1" pos:column="29">_pconf<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">apr_pool_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type> <name pos:line="1" pos:column="50">plog<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">server_rec<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type> <name pos:line="1" pos:column="69">s<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">remaining_children_to_start<pos:position pos:line="3" pos:column="36"/></name></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="5" pos:column="5">ap_log_pid<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">pconf<pos:position pos:line="5" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="23">ap_pid_fname<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">first_server_limit<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">=<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">server_limit<pos:position pos:line="7" pos:column="38"/></name></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">first_thread_limit<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <name pos:line="8" pos:column="26">thread_limit<pos:position pos:line="8" pos:column="38"/></name></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">changed_limit_at_restart<pos:position pos:line="10" pos:column="33"/></name></expr>)<pos:position pos:line="10" pos:column="34"/></condition><then pos:line="10" pos:column="34"> <block pos:line="10" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">ap_log_error<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">APLOG_MARK<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">APLOG_WARNING<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="49">0<pos:position pos:line="11" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="52">s<pos:position pos:line="11" pos:column="53"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="12" pos:column="22">"WARNING: Attempt to change ServerLimit or ThreadLimit "<pos:position pos:line="12" pos:column="78"/></literal>
                     <literal type="string" pos:line="13" pos:column="22">"ignored during restart"<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">changed_limit_at_restart<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">=<pos:position pos:line="14" pos:column="35"/></operator> <literal type="number" pos:line="14" pos:column="36">0<pos:position pos:line="14" pos:column="37"/></literal></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">is_graceful<pos:position pos:line="17" pos:column="21"/></name></expr>)<pos:position pos:line="17" pos:column="22"/></condition><then pos:line="17" pos:column="22"> <block pos:line="17" pos:column="23">{
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">ap_run_pre_mpm<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name><name pos:line="18" pos:column="28">s<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">process<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">-&gt;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="40">pool<pos:position pos:line="18" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="46">SB_SHARED<pos:position pos:line="18" pos:column="55"/></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call> <operator pos:line="18" pos:column="57">!=<pos:position pos:line="18" pos:column="59"/></operator> <name pos:line="18" pos:column="60">OK<pos:position pos:line="18" pos:column="62"/></name></expr>)<pos:position pos:line="18" pos:column="63"/></condition><then pos:line="18" pos:column="63"> <block pos:line="18" pos:column="64">{
            <expr_stmt><expr><name pos:line="19" pos:column="13">mpm_state<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">AP_MPMQ_STOPPING<pos:position pos:line="19" pos:column="41"/></name></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
            <return pos:line="20" pos:column="13">return <expr><literal type="number" pos:line="20" pos:column="20">1<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></return>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="22" pos:column="9">/* fix the generation number in the global score; we just got a new,
         * cleared scoreboard
         */</comment>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">ap_scoreboard_image<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">global<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">-&gt;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="38">running_generation<pos:position pos:line="25" pos:column="56"/></name></name> <operator pos:line="25" pos:column="57">=<pos:position pos:line="25" pos:column="58"/></operator> <name pos:line="25" pos:column="59">ap_my_generation<pos:position pos:line="25" pos:column="75"/></name></expr>;<pos:position pos:line="25" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">set_signals<pos:position pos:line="28" pos:column="16"/></name><argument_list pos:line="28" pos:column="16">()<pos:position pos:line="28" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>
    <comment type="block" pos:line="29" pos:column="5">/* Don't thrash... */</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">max_spare_threads<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">&lt;<pos:position pos:line="30" pos:column="31"/></operator> <name pos:line="30" pos:column="29">min_spare_threads<pos:position pos:line="30" pos:column="46"/></name> <operator pos:line="30" pos:column="47">+<pos:position pos:line="30" pos:column="48"/></operator> <name pos:line="30" pos:column="49">ap_threads_per_child<pos:position pos:line="30" pos:column="69"/></name></expr>)<pos:position pos:line="30" pos:column="70"/></condition><then pos:line="30" pos:column="70">
        <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="9">max_spare_threads<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">=<pos:position pos:line="31" pos:column="28"/></operator> <name pos:line="31" pos:column="29">min_spare_threads<pos:position pos:line="31" pos:column="46"/></name> <operator pos:line="31" pos:column="47">+<pos:position pos:line="31" pos:column="48"/></operator> <name pos:line="31" pos:column="49">ap_threads_per_child<pos:position pos:line="31" pos:column="69"/></name></expr>;<pos:position pos:line="31" pos:column="70"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="33" pos:column="5">/* If we're doing a graceful_restart then we're going to see a lot
     * of children exiting immediately when we get into the main loop
     * below (because we just sent them AP_SIG_GRACEFUL).  This happens pretty
     * rapidly... and for each one that exits we'll start a new one until
     * we reach at least daemons_min_free.  But we may be permitted to
     * start more than that, so we'll just keep track of how many we're
     * supposed to start up without the 1 second penalty between each fork.
     */</comment>
    <expr_stmt><expr><name pos:line="41" pos:column="5">remaining_children_to_start<pos:position pos:line="41" pos:column="32"/></name> <operator pos:line="41" pos:column="33">=<pos:position pos:line="41" pos:column="34"/></operator> <name pos:line="41" pos:column="35">ap_daemons_to_start<pos:position pos:line="41" pos:column="54"/></name></expr>;<pos:position pos:line="41" pos:column="55"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">remaining_children_to_start<pos:position pos:line="42" pos:column="36"/></name> <operator pos:line="42" pos:column="37">&gt;<pos:position pos:line="42" pos:column="41"/></operator> <name pos:line="42" pos:column="39">ap_daemons_limit<pos:position pos:line="42" pos:column="55"/></name></expr>)<pos:position pos:line="42" pos:column="56"/></condition><then pos:line="42" pos:column="56"> <block pos:line="42" pos:column="57">{
        <expr_stmt><expr><name pos:line="43" pos:column="9">remaining_children_to_start<pos:position pos:line="43" pos:column="36"/></name> <operator pos:line="43" pos:column="37">=<pos:position pos:line="43" pos:column="38"/></operator> <name pos:line="43" pos:column="39">ap_daemons_limit<pos:position pos:line="43" pos:column="55"/></name></expr>;<pos:position pos:line="43" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">!<pos:position pos:line="45" pos:column="10"/></operator><name pos:line="45" pos:column="10">is_graceful<pos:position pos:line="45" pos:column="21"/></name></expr>)<pos:position pos:line="45" pos:column="22"/></condition><then pos:line="45" pos:column="22"> <block pos:line="45" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">startup_children<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><name pos:line="46" pos:column="26">remaining_children_to_start<pos:position pos:line="46" pos:column="53"/></name></expr></argument>)<pos:position pos:line="46" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name pos:line="47" pos:column="9">remaining_children_to_start<pos:position pos:line="47" pos:column="36"/></name> <operator pos:line="47" pos:column="37">=<pos:position pos:line="47" pos:column="38"/></operator> <literal type="number" pos:line="47" pos:column="39">0<pos:position pos:line="47" pos:column="40"/></literal></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></then>
    <else pos:line="49" pos:column="5">else <block pos:line="49" pos:column="10">{
        <comment type="block" pos:line="50" pos:column="9">/* give the system some time to recover before kicking into
         * exponential mode */</comment>
        <expr_stmt><expr><name pos:line="52" pos:column="9">hold_off_on_exponential_spawning<pos:position pos:line="52" pos:column="41"/></name> <operator pos:line="52" pos:column="42">=<pos:position pos:line="52" pos:column="43"/></operator> <literal type="number" pos:line="52" pos:column="44">10<pos:position pos:line="52" pos:column="46"/></literal></expr>;<pos:position pos:line="52" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="55" pos:column="5">ap_log_error<pos:position pos:line="55" pos:column="17"/></name><argument_list pos:line="55" pos:column="17">(<argument><expr><name pos:line="55" pos:column="18">APLOG_MARK<pos:position pos:line="55" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="30">APLOG_NOTICE<pos:position pos:line="55" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="44">0<pos:position pos:line="55" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="47">ap_server_conf<pos:position pos:line="55" pos:column="61"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="56" pos:column="18">"%s configured -- resuming normal operations"<pos:position pos:line="56" pos:column="63"/></literal></expr></argument>,
                 <argument><expr><call><name pos:line="57" pos:column="18">ap_get_server_version<pos:position pos:line="57" pos:column="39"/></name><argument_list pos:line="57" pos:column="39">()<pos:position pos:line="57" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">ap_log_error<pos:position pos:line="58" pos:column="17"/></name><argument_list pos:line="58" pos:column="17">(<argument><expr><name pos:line="58" pos:column="18">APLOG_MARK<pos:position pos:line="58" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="30">APLOG_INFO<pos:position pos:line="58" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="42">0<pos:position pos:line="58" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="45">ap_server_conf<pos:position pos:line="58" pos:column="59"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="59" pos:column="18">"Server built: %s"<pos:position pos:line="59" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="38">ap_get_server_built<pos:position pos:line="59" pos:column="57"/></name><argument_list pos:line="59" pos:column="57">()<pos:position pos:line="59" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><name pos:line="61" pos:column="5">restart_pending<pos:position pos:line="61" pos:column="20"/></name> <operator pos:line="61" pos:column="21">=<pos:position pos:line="61" pos:column="22"/></operator> <name pos:line="61" pos:column="23">shutdown_pending<pos:position pos:line="61" pos:column="39"/></name> <operator pos:line="61" pos:column="40">=<pos:position pos:line="61" pos:column="41"/></operator> <literal type="number" pos:line="61" pos:column="42">0<pos:position pos:line="61" pos:column="43"/></literal></expr>;<pos:position pos:line="61" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="62" pos:column="5">mpm_state<pos:position pos:line="62" pos:column="14"/></name> <operator pos:line="62" pos:column="15">=<pos:position pos:line="62" pos:column="16"/></operator> <name pos:line="62" pos:column="17">AP_MPMQ_RUNNING<pos:position pos:line="62" pos:column="32"/></name></expr>;<pos:position pos:line="62" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="64" pos:column="5">server_main_loop<pos:position pos:line="64" pos:column="21"/></name><argument_list pos:line="64" pos:column="21">(<argument><expr><name pos:line="64" pos:column="22">remaining_children_to_start<pos:position pos:line="64" pos:column="49"/></name></expr></argument>)<pos:position pos:line="64" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="65" pos:column="5">mpm_state<pos:position pos:line="65" pos:column="14"/></name> <operator pos:line="65" pos:column="15">=<pos:position pos:line="65" pos:column="16"/></operator> <name pos:line="65" pos:column="17">AP_MPMQ_STOPPING<pos:position pos:line="65" pos:column="33"/></name></expr>;<pos:position pos:line="65" pos:column="34"/></expr_stmt>

    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name pos:line="67" pos:column="9">shutdown_pending<pos:position pos:line="67" pos:column="25"/></name> <operator pos:line="67" pos:column="26">&amp;&amp;<pos:position pos:line="67" pos:column="36"/></operator> <operator pos:line="67" pos:column="29">!<pos:position pos:line="67" pos:column="30"/></operator><name pos:line="67" pos:column="30">is_graceful<pos:position pos:line="67" pos:column="41"/></name></expr>)<pos:position pos:line="67" pos:column="42"/></condition><then pos:line="67" pos:column="42"> <block pos:line="67" pos:column="43">{
        <comment type="block" pos:line="68" pos:column="9">/* Time to shut down:
         * Kill child processes, tell them to call child_exit, etc...
         */</comment>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">ap_mpm_pod_killpg<pos:position pos:line="71" pos:column="26"/></name><argument_list pos:line="71" pos:column="26">(<argument><expr><name pos:line="71" pos:column="27">pod<pos:position pos:line="71" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="32">ap_daemons_limit<pos:position pos:line="71" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="50">FALSE<pos:position pos:line="71" pos:column="55"/></name></expr></argument>)<pos:position pos:line="71" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">ap_reclaim_child_processes<pos:position pos:line="72" pos:column="35"/></name><argument_list pos:line="72" pos:column="35">(<argument><expr><literal type="number" pos:line="72" pos:column="36">1<pos:position pos:line="72" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="39"/></expr_stmt>  <comment type="block" pos:line="72" pos:column="41">/* Start with SIGTERM */</comment>

        <if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><operator pos:line="74" pos:column="13">!<pos:position pos:line="74" pos:column="14"/></operator><name pos:line="74" pos:column="14">child_fatal<pos:position pos:line="74" pos:column="25"/></name></expr>)<pos:position pos:line="74" pos:column="26"/></condition><then pos:line="74" pos:column="26"> <block pos:line="74" pos:column="27">{
            <comment type="block" pos:line="75" pos:column="13">/* cleanup pid file on normal shutdown */</comment>
            <decl_stmt><decl><type><specifier pos:line="76" pos:column="13">const<pos:position pos:line="76" pos:column="18"/></specifier> <name pos:line="76" pos:column="19">char<pos:position pos:line="76" pos:column="23"/></name> <modifier pos:line="76" pos:column="24">*<pos:position pos:line="76" pos:column="25"/></modifier></type><name pos:line="76" pos:column="25">pidfile<pos:position pos:line="76" pos:column="32"/></name> <init pos:line="76" pos:column="33">= <expr><name pos:line="76" pos:column="35">NULL<pos:position pos:line="76" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="76" pos:column="40"/></decl_stmt>
            <expr_stmt><expr><name pos:line="77" pos:column="13">pidfile<pos:position pos:line="77" pos:column="20"/></name> <operator pos:line="77" pos:column="21">=<pos:position pos:line="77" pos:column="22"/></operator> <call><name pos:line="77" pos:column="23">ap_server_root_relative<pos:position pos:line="77" pos:column="46"/></name><argument_list pos:line="77" pos:column="46">(<argument><expr><name pos:line="77" pos:column="47">pconf<pos:position pos:line="77" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="54">ap_pid_fname<pos:position pos:line="77" pos:column="66"/></name></expr></argument>)<pos:position pos:line="77" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="68"/></expr_stmt>
            <if pos:line="78" pos:column="13">if <condition pos:line="78" pos:column="16">(<expr><name pos:line="78" pos:column="17">pidfile<pos:position pos:line="78" pos:column="24"/></name> <operator pos:line="78" pos:column="25">!=<pos:position pos:line="78" pos:column="27"/></operator> <name pos:line="78" pos:column="28">NULL<pos:position pos:line="78" pos:column="32"/></name> <operator pos:line="78" pos:column="33">&amp;&amp;<pos:position pos:line="78" pos:column="43"/></operator> <call><name pos:line="78" pos:column="36">unlink<pos:position pos:line="78" pos:column="42"/></name><argument_list pos:line="78" pos:column="42">(<argument><expr><name pos:line="78" pos:column="43">pidfile<pos:position pos:line="78" pos:column="50"/></name></expr></argument>)<pos:position pos:line="78" pos:column="51"/></argument_list></call> <operator pos:line="78" pos:column="52">==<pos:position pos:line="78" pos:column="54"/></operator> <literal type="number" pos:line="78" pos:column="55">0<pos:position pos:line="78" pos:column="56"/></literal></expr>)<pos:position pos:line="78" pos:column="57"/></condition><then pos:line="78" pos:column="57">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="17">ap_log_error<pos:position pos:line="79" pos:column="29"/></name><argument_list pos:line="79" pos:column="29">(<argument><expr><name pos:line="79" pos:column="30">APLOG_MARK<pos:position pos:line="79" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="42">APLOG_INFO<pos:position pos:line="79" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="54">0<pos:position pos:line="79" pos:column="55"/></literal></expr></argument>,
                             <argument><expr><name pos:line="80" pos:column="30">ap_server_conf<pos:position pos:line="80" pos:column="44"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="81" pos:column="30">"removed PID file %s (pid=%ld)"<pos:position pos:line="81" pos:column="61"/></literal></expr></argument>,
                             <argument><expr><name pos:line="82" pos:column="30">pidfile<pos:position pos:line="82" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="39">(<pos:position pos:line="82" pos:column="40"/></operator><name pos:line="82" pos:column="40">long<pos:position pos:line="82" pos:column="44"/></name><operator pos:line="82" pos:column="44">)<pos:position pos:line="82" pos:column="45"/></operator> <call><name pos:line="82" pos:column="46">getpid<pos:position pos:line="82" pos:column="52"/></name><argument_list pos:line="82" pos:column="52">()<pos:position pos:line="82" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="56"/></expr_stmt></block></then></if>

            <expr_stmt><expr><call><name pos:line="84" pos:column="13">ap_log_error<pos:position pos:line="84" pos:column="25"/></name><argument_list pos:line="84" pos:column="25">(<argument><expr><name pos:line="84" pos:column="26">APLOG_MARK<pos:position pos:line="84" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="38">APLOG_NOTICE<pos:position pos:line="84" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="52">0<pos:position pos:line="84" pos:column="53"/></literal></expr></argument>,
                         <argument><expr><name pos:line="85" pos:column="26">ap_server_conf<pos:position pos:line="85" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="42">"caught SIGTERM, shutting down"<pos:position pos:line="85" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="75"/></expr_stmt>
        }<pos:position pos:line="86" pos:column="10"/></block></then></if>
        <return pos:line="87" pos:column="9">return <expr><literal type="number" pos:line="87" pos:column="16">1<pos:position pos:line="87" pos:column="17"/></literal></expr>;<pos:position pos:line="87" pos:column="18"/></return>
    }<pos:position pos:line="88" pos:column="6"/></block></then> <elseif pos:line="88" pos:column="7">else <if pos:line="88" pos:column="12">if <condition pos:line="88" pos:column="15">(<expr><name pos:line="88" pos:column="16">shutdown_pending<pos:position pos:line="88" pos:column="32"/></name></expr>)<pos:position pos:line="88" pos:column="33"/></condition><then pos:line="88" pos:column="33"> <block pos:line="88" pos:column="34">{
        <comment type="block" pos:line="89" pos:column="9">/* Time to gracefully shut down:
         * Kill child processes, tell them to call child_exit, etc...
         */</comment>
        <decl_stmt><decl><type><name pos:line="92" pos:column="9">int<pos:position pos:line="92" pos:column="12"/></name></type> <name pos:line="92" pos:column="13">active_children<pos:position pos:line="92" pos:column="28"/></name></decl>;<pos:position pos:line="92" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="93" pos:column="9">int<pos:position pos:line="93" pos:column="12"/></name></type> <name pos:line="93" pos:column="13">index<pos:position pos:line="93" pos:column="18"/></name></decl>;<pos:position pos:line="93" pos:column="19"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="94" pos:column="9">apr_time_t<pos:position pos:line="94" pos:column="19"/></name></type> <name pos:line="94" pos:column="20">cutoff<pos:position pos:line="94" pos:column="26"/></name> <init pos:line="94" pos:column="27">= <expr><literal type="number" pos:line="94" pos:column="29">0<pos:position pos:line="94" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="94" pos:column="31"/></decl_stmt>

        <comment type="block" pos:line="96" pos:column="9">/* Close our listeners, and then ask our children to do same */</comment>
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">ap_close_listeners<pos:position pos:line="97" pos:column="27"/></name><argument_list pos:line="97" pos:column="27">()<pos:position pos:line="97" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="98" pos:column="9">ap_mpm_pod_killpg<pos:position pos:line="98" pos:column="26"/></name><argument_list pos:line="98" pos:column="26">(<argument><expr><name pos:line="98" pos:column="27">pod<pos:position pos:line="98" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="32">ap_daemons_limit<pos:position pos:line="98" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="50">TRUE<pos:position pos:line="98" pos:column="54"/></name></expr></argument>)<pos:position pos:line="98" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="99" pos:column="9">ap_relieve_child_processes<pos:position pos:line="99" pos:column="35"/></name><argument_list pos:line="99" pos:column="35">()<pos:position pos:line="99" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="38"/></expr_stmt>

        <if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><operator pos:line="101" pos:column="13">!<pos:position pos:line="101" pos:column="14"/></operator><name pos:line="101" pos:column="14">child_fatal<pos:position pos:line="101" pos:column="25"/></name></expr>)<pos:position pos:line="101" pos:column="26"/></condition><then pos:line="101" pos:column="26"> <block pos:line="101" pos:column="27">{
            <comment type="block" pos:line="102" pos:column="13">/* cleanup pid file on normal shutdown */</comment>
            <decl_stmt><decl><type><specifier pos:line="103" pos:column="13">const<pos:position pos:line="103" pos:column="18"/></specifier> <name pos:line="103" pos:column="19">char<pos:position pos:line="103" pos:column="23"/></name> <modifier pos:line="103" pos:column="24">*<pos:position pos:line="103" pos:column="25"/></modifier></type><name pos:line="103" pos:column="25">pidfile<pos:position pos:line="103" pos:column="32"/></name> <init pos:line="103" pos:column="33">= <expr><name pos:line="103" pos:column="35">NULL<pos:position pos:line="103" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="103" pos:column="40"/></decl_stmt>
            <expr_stmt><expr><name pos:line="104" pos:column="13">pidfile<pos:position pos:line="104" pos:column="20"/></name> <operator pos:line="104" pos:column="21">=<pos:position pos:line="104" pos:column="22"/></operator> <call><name pos:line="104" pos:column="23">ap_server_root_relative<pos:position pos:line="104" pos:column="46"/></name> <argument_list pos:line="104" pos:column="47">(<argument><expr><name pos:line="104" pos:column="48">pconf<pos:position pos:line="104" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="55">ap_pid_fname<pos:position pos:line="104" pos:column="67"/></name></expr></argument>)<pos:position pos:line="104" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="69"/></expr_stmt>
            <if pos:line="105" pos:column="13">if <condition pos:line="105" pos:column="16">( <expr><name pos:line="105" pos:column="18">pidfile<pos:position pos:line="105" pos:column="25"/></name> <operator pos:line="105" pos:column="26">!=<pos:position pos:line="105" pos:column="28"/></operator> <name pos:line="105" pos:column="29">NULL<pos:position pos:line="105" pos:column="33"/></name> <operator pos:line="105" pos:column="34">&amp;&amp;<pos:position pos:line="105" pos:column="44"/></operator> <call><name pos:line="105" pos:column="37">unlink<pos:position pos:line="105" pos:column="43"/></name><argument_list pos:line="105" pos:column="43">(<argument><expr><name pos:line="105" pos:column="44">pidfile<pos:position pos:line="105" pos:column="51"/></name></expr></argument>)<pos:position pos:line="105" pos:column="52"/></argument_list></call> <operator pos:line="105" pos:column="53">==<pos:position pos:line="105" pos:column="55"/></operator> <literal type="number" pos:line="105" pos:column="56">0<pos:position pos:line="105" pos:column="57"/></literal></expr>)<pos:position pos:line="105" pos:column="58"/></condition><then pos:line="105" pos:column="58">
                <block type="pseudo"><macro><name pos:line="106" pos:column="17">ap_log_error<pos:position pos:line="106" pos:column="29"/></name></macro></block></then></if></block></then></if></block></then></if></elseif></if></block></function></unit>

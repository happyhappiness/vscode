<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3511_httpd-2.2.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">run_command<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">command_t<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">cmd_data<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">count_chars<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">cc<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">command<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name><name pos:line="4" pos:column="17">spawn_args<pos:position pos:line="4" pos:column="27"/></name><index pos:line="4" pos:column="27">[<expr><literal type="number" pos:line="4" pos:column="28">4<pos:position pos:line="4" pos:column="29"/></literal></expr>]<pos:position pos:line="4" pos:column="30"/></index></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">count_chars<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">tmpcc<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">init_count_chars<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><operator pos:line="7" pos:column="22">&amp;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="23">tmpcc<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">cmd_data<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">program<pos:position pos:line="9" pos:column="26"/></name></name></expr>)<pos:position pos:line="9" pos:column="27"/></condition><then pos:line="9" pos:column="27"> <block pos:line="9" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">push_count_chars<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><operator pos:line="10" pos:column="26">&amp;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="27">tmpcc<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="34">cmd_data<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">-&gt;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="44">program<pos:position pos:line="10" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">append_count_chars<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><operator pos:line="13" pos:column="24">&amp;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="25">tmpcc<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="32">cmd_data<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">-&gt;<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="42">program_opts<pos:position pos:line="13" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">append_count_chars<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><operator pos:line="15" pos:column="24">&amp;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="25">tmpcc<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="32">cc<pos:position pos:line="15" pos:column="34"/></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">command<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">shell_esc<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><call><name pos:line="17" pos:column="25">flatten_count_chars<pos:position pos:line="17" pos:column="44"/></name><argument_list pos:line="17" pos:column="44">(<argument><expr><operator pos:line="17" pos:column="45">&amp;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="46">tmpcc<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="53">1<pos:position pos:line="17" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="19" pos:column="5">spawn_args<pos:position pos:line="19" pos:column="15"/></name><index pos:line="19" pos:column="15">[<expr><literal type="number" pos:line="19" pos:column="16">0<pos:position pos:line="19" pos:column="17"/></literal></expr>]<pos:position pos:line="19" pos:column="18"/></index></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <name pos:line="19" pos:column="21">SHELL_CMD<pos:position pos:line="19" pos:column="30"/></name></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">spawn_args<pos:position pos:line="20" pos:column="15"/></name><index pos:line="20" pos:column="15">[<expr><literal type="number" pos:line="20" pos:column="16">1<pos:position pos:line="20" pos:column="17"/></literal></expr>]<pos:position pos:line="20" pos:column="18"/></index></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <literal type="string" pos:line="20" pos:column="21">"-c"<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">spawn_args<pos:position pos:line="21" pos:column="15"/></name><index pos:line="21" pos:column="15">[<expr><literal type="number" pos:line="21" pos:column="16">2<pos:position pos:line="21" pos:column="17"/></literal></expr>]<pos:position pos:line="21" pos:column="18"/></index></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">command<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">spawn_args<pos:position pos:line="22" pos:column="15"/></name><index pos:line="22" pos:column="15">[<expr><literal type="number" pos:line="22" pos:column="16">3<pos:position pos:line="22" pos:column="17"/></literal></expr>]<pos:position pos:line="22" pos:column="18"/></index></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">NULL<pos:position pos:line="22" pos:column="25"/></name></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><call><name pos:line="23" pos:column="12">external_spawn<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">cmd_data<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="37">spawn_args<pos:position pos:line="23" pos:column="47"/></name><index pos:line="23" pos:column="47">[<expr><literal type="number" pos:line="23" pos:column="48">0<pos:position pos:line="23" pos:column="49"/></literal></expr>]<pos:position pos:line="23" pos:column="50"/></index></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="52">(<pos:position pos:line="23" pos:column="53"/></operator><specifier pos:line="23" pos:column="53">const<pos:position pos:line="23" pos:column="58"/></specifier> <name pos:line="23" pos:column="59">char<pos:position pos:line="23" pos:column="63"/></name><operator pos:line="23" pos:column="63">*<pos:position pos:line="23" pos:column="64"/></operator><operator pos:line="23" pos:column="64">*<pos:position pos:line="23" pos:column="65"/></operator><operator pos:line="23" pos:column="65">)<pos:position pos:line="23" pos:column="66"/></operator><name pos:line="23" pos:column="66">spawn_args<pos:position pos:line="23" pos:column="76"/></name></expr></argument>)<pos:position pos:line="23" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="78"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

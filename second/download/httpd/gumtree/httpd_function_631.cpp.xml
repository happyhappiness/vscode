<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_631.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_elif<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">include_ctx_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">ctx<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">apr_bucket_brigade<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier><modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">bb<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, 
                       <parameter><decl><type><name pos:line="2" pos:column="24">request_rec<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">r<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">ap_filter_t<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">f<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">apr_bucket<pos:position pos:line="2" pos:column="66"/></name> <modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">head_ptr<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>, 
                       <parameter><decl><type><name pos:line="3" pos:column="24">apr_bucket<pos:position pos:line="3" pos:column="34"/></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier><modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">inserted_head<pos:position pos:line="3" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="51"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">tag<pos:position pos:line="5" pos:column="14"/></name>     <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">tag_val<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">expr<pos:position pos:line="7" pos:column="15"/></name>    <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">NULL<pos:position pos:line="7" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type>   <name pos:line="8" pos:column="11">expr_ret<pos:position pos:line="8" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="21">was_error<pos:position pos:line="8" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="32">was_unmatched<pos:position pos:line="8" pos:column="45"/></name></decl>;<pos:position pos:line="8" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_bucket<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">tmp_buck<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type> <name><name pos:line="10" pos:column="10">debug_buf<pos:position pos:line="10" pos:column="19"/></name><index pos:line="10" pos:column="19">[<expr><name pos:line="10" pos:column="20">MAX_DEBUG_SIZE<pos:position pos:line="10" pos:column="34"/></name></expr>]<pos:position pos:line="10" pos:column="35"/></index></name></decl>;<pos:position pos:line="10" pos:column="36"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="12" pos:column="5">*<pos:position pos:line="12" pos:column="6"/></operator><name pos:line="12" pos:column="6">inserted_head<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">NULL<pos:position pos:line="12" pos:column="26"/></name></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name><name pos:line="13" pos:column="10">ctx<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">if_nesting_level<pos:position pos:line="13" pos:column="31"/></name></name></expr>)<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32"> <block pos:line="13" pos:column="33">{
        <while pos:line="14" pos:column="9">while <condition pos:line="14" pos:column="15">(<expr><literal type="number" pos:line="14" pos:column="16">1<pos:position pos:line="14" pos:column="17"/></literal></expr>)<pos:position pos:line="14" pos:column="18"/></condition> <block pos:line="14" pos:column="19">{
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">ap_ssi_get_tag_and_value<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">ctx<pos:position pos:line="15" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="43">&amp;<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="44">tag<pos:position pos:line="15" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="49">&amp;<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="50">tag_val<pos:position pos:line="15" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="59">0<pos:position pos:line="15" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><name pos:line="16" pos:column="17">tag<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">==<pos:position pos:line="16" pos:column="23"/></operator> <literal type="char" pos:line="16" pos:column="24">'\0'<pos:position pos:line="16" pos:column="28"/></literal></expr>)<pos:position pos:line="16" pos:column="29"/></condition><then pos:line="16" pos:column="29"> <block pos:line="16" pos:column="30">{
                <expr_stmt><expr><call><name pos:line="17" pos:column="17">LOG_COND_STATUS<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">ctx<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">tmp_buck<pos:position pos:line="17" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="48">head_ptr<pos:position pos:line="17" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="58">*<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="59">inserted_head<pos:position pos:line="17" pos:column="72"/></name></expr></argument>, 
                                <argument><expr><literal type="string" pos:line="18" pos:column="33">" elif"<pos:position pos:line="18" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
                
                <if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name><name pos:line="20" pos:column="21">ctx<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">-&gt;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="26">flags<pos:position pos:line="20" pos:column="31"/></name></name> <operator pos:line="20" pos:column="32">&amp;<pos:position pos:line="20" pos:column="37"/></operator> <name pos:line="20" pos:column="34">FLAG_COND_TRUE<pos:position pos:line="20" pos:column="48"/></name></expr>)<pos:position pos:line="20" pos:column="49"/></condition><then pos:line="20" pos:column="49"> <block pos:line="20" pos:column="50">{
                    <expr_stmt><expr><name><name pos:line="21" pos:column="21">ctx<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">-&gt;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="26">flags<pos:position pos:line="21" pos:column="31"/></name></name> <operator pos:line="21" pos:column="32">&amp;=<pos:position pos:line="21" pos:column="38"/></operator> <name pos:line="21" pos:column="35">FLAG_CLEAR_PRINTING<pos:position pos:line="21" pos:column="54"/></name></expr>;<pos:position pos:line="21" pos:column="55"/></expr_stmt>
                    <return pos:line="22" pos:column="21">return <expr><operator pos:line="22" pos:column="28">(<pos:position pos:line="22" pos:column="29"/></operator><literal type="number" pos:line="22" pos:column="29">0<pos:position pos:line="22" pos:column="30"/></literal><operator pos:line="22" pos:column="30">)<pos:position pos:line="22" pos:column="31"/></operator></expr>;<pos:position pos:line="22" pos:column="32"/></return>
                }<pos:position pos:line="23" pos:column="18"/></block></then></if>
                <if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">expr<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">==<pos:position pos:line="24" pos:column="28"/></operator> <name pos:line="24" pos:column="29">NULL<pos:position pos:line="24" pos:column="33"/></name></expr>)<pos:position pos:line="24" pos:column="34"/></condition><then pos:line="24" pos:column="34"> <block pos:line="24" pos:column="35">{
                    <expr_stmt><expr><call><name pos:line="25" pos:column="21">ap_log_rerror<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name pos:line="25" pos:column="35">APLOG_MARK<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="47">APLOG_ERR<pos:position pos:line="25" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="58">0<pos:position pos:line="25" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="61">r<pos:position pos:line="25" pos:column="62"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="26" pos:column="35">"missing expr in elif statement: %s"<pos:position pos:line="26" pos:column="71"/></literal></expr></argument>, 
                                  <argument><expr><name><name pos:line="27" pos:column="35">r<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">-&gt;<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="38">filename<pos:position pos:line="27" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="28" pos:column="21">CREATE_ERROR_BUCKET<pos:position pos:line="28" pos:column="40"/></name><argument_list pos:line="28" pos:column="40">(<argument><expr><name pos:line="28" pos:column="41">ctx<pos:position pos:line="28" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="46">tmp_buck<pos:position pos:line="28" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="56">head_ptr<pos:position pos:line="28" pos:column="64"/></name></expr></argument>, 
                                        <argument><expr><operator pos:line="29" pos:column="41">*<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="42">inserted_head<pos:position pos:line="29" pos:column="55"/></name></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="57"/></expr_stmt>
                    <return pos:line="30" pos:column="21">return <expr><literal type="number" pos:line="30" pos:column="28">1<pos:position pos:line="30" pos:column="29"/></literal></expr>;<pos:position pos:line="30" pos:column="30"/></return>
                }<pos:position pos:line="31" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="32" pos:column="17">expr_ret<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">=<pos:position pos:line="32" pos:column="27"/></operator> <call><name pos:line="32" pos:column="28">parse_expr<pos:position pos:line="32" pos:column="38"/></name><argument_list pos:line="32" pos:column="38">(<argument><expr><name pos:line="32" pos:column="39">r<pos:position pos:line="32" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="42">ctx<pos:position pos:line="32" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="47">expr<pos:position pos:line="32" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="53">&amp;<pos:position pos:line="32" pos:column="58"/></operator><name pos:line="32" pos:column="54">was_error<pos:position pos:line="32" pos:column="63"/></name></expr></argument>, 
                                      <argument><expr><operator pos:line="33" pos:column="39">&amp;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="40">was_unmatched<pos:position pos:line="33" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="55">debug_buf<pos:position pos:line="33" pos:column="64"/></name></expr></argument>)<pos:position pos:line="33" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="66"/></expr_stmt>
                <if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">was_error<pos:position pos:line="34" pos:column="30"/></name></expr>)<pos:position pos:line="34" pos:column="31"/></condition><then pos:line="34" pos:column="31"> <block pos:line="34" pos:column="32">{
                    <expr_stmt><expr><call><name pos:line="35" pos:column="21">CREATE_ERROR_BUCKET<pos:position pos:line="35" pos:column="40"/></name><argument_list pos:line="35" pos:column="40">(<argument><expr><name pos:line="35" pos:column="41">ctx<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="46">tmp_buck<pos:position pos:line="35" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="56">head_ptr<pos:position pos:line="35" pos:column="64"/></name></expr></argument>, 
                                        <argument><expr><operator pos:line="36" pos:column="41">*<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="42">inserted_head<pos:position pos:line="36" pos:column="55"/></name></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="57"/></expr_stmt>
                    <return pos:line="37" pos:column="21">return <expr><literal type="number" pos:line="37" pos:column="28">1<pos:position pos:line="37" pos:column="29"/></literal></expr>;<pos:position pos:line="37" pos:column="30"/></return>
                }<pos:position pos:line="38" pos:column="18"/></block></then></if>
                <if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name pos:line="39" pos:column="21">was_unmatched<pos:position pos:line="39" pos:column="34"/></name></expr>)<pos:position pos:line="39" pos:column="35"/></condition><then pos:line="39" pos:column="35"> <block pos:line="39" pos:column="36">{
                    <expr_stmt><expr><call><name pos:line="40" pos:column="21">DUMP_PARSE_EXPR_DEBUG<pos:position pos:line="40" pos:column="42"/></name><argument_list pos:line="40" pos:column="42">(<argument><expr><name pos:line="40" pos:column="43">tmp_buck<pos:position pos:line="40" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="53">head_ptr<pos:position pos:line="40" pos:column="61"/></name></expr></argument>, 
                                          <argument><expr><literal type="string" pos:line="41" pos:column="43">"\nUnmatched '\n"<pos:position pos:line="41" pos:column="60"/></literal></expr></argument>, <argument><expr><operator pos:line="41" pos:column="62">*<pos:position pos:line="41" pos:column="63"/></operator><name pos:line="41" pos:column="63">inserted_head<pos:position pos:line="41" pos:column="76"/></name></expr></argument>)<pos:position pos:line="41" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="78"/></expr_stmt>
                }<pos:position pos:line="42" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="43" pos:column="17">DUMP_PARSE_EXPR_DEBUG<pos:position pos:line="43" pos:column="38"/></name><argument_list pos:line="43" pos:column="38">(<argument><expr><name pos:line="43" pos:column="39">tmp_buck<pos:position pos:line="43" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="49">head_ptr<pos:position pos:line="43" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="59">debug_buf<pos:position pos:line="43" pos:column="68"/></name></expr></argument>, 
                                      <argument><expr><operator pos:line="44" pos:column="39">*<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="40">inserted_head<pos:position pos:line="44" pos:column="53"/></name></expr></argument>)<pos:position pos:line="44" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="55"/></expr_stmt>
                
                <if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">expr_ret<pos:position pos:line="46" pos:column="29"/></name></expr>)<pos:position pos:line="46" pos:column="30"/></condition><then pos:line="46" pos:column="30"> <block pos:line="46" pos:column="31">{
                    <expr_stmt><expr><name><name pos:line="47" pos:column="21">ctx<pos:position pos:line="47" pos:column="24"/></name><operator pos:line="47" pos:column="24">-&gt;<pos:position pos:line="47" pos:column="29"/></operator><name pos:line="47" pos:column="26">flags<pos:position pos:line="47" pos:column="31"/></name></name> <operator pos:line="47" pos:column="32">|=<pos:position pos:line="47" pos:column="34"/></operator> <operator pos:line="47" pos:column="35">(<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="36">FLAG_PRINTING<pos:position pos:line="47" pos:column="49"/></name> <operator pos:line="47" pos:column="50">|<pos:position pos:line="47" pos:column="51"/></operator> <name pos:line="47" pos:column="52">FLAG_COND_TRUE<pos:position pos:line="47" pos:column="66"/></name><operator pos:line="47" pos:column="66">)<pos:position pos:line="47" pos:column="67"/></operator></expr>;<pos:position pos:line="47" pos:column="68"/></expr_stmt>
                }<pos:position pos:line="48" pos:column="18"/></block></then>
                <else pos:line="49" pos:column="17">else <block pos:line="49" pos:column="22">{
                    <expr_stmt><expr><name><name pos:line="50" pos:column="21">ctx<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">-&gt;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="26">flags<pos:position pos:line="50" pos:column="31"/></name></name> <operator pos:line="50" pos:column="32">&amp;=<pos:position pos:line="50" pos:column="38"/></operator> <name pos:line="50" pos:column="35">FLAG_CLEAR_PRINT_COND<pos:position pos:line="50" pos:column="56"/></name></expr>;<pos:position pos:line="50" pos:column="57"/></expr_stmt>
                }<pos:position pos:line="51" pos:column="18"/></block></else></if>
                <expr_stmt><expr><call><name pos:line="52" pos:column="17">LOG_COND_STATUS<pos:position pos:line="52" pos:column="32"/></name><argument_list pos:line="52" pos:column="32">(<argument><expr><name pos:line="52" pos:column="33">ctx<pos:position pos:line="52" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="38">tmp_buck<pos:position pos:line="52" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="48">head_ptr<pos:position pos:line="52" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="58">*<pos:position pos:line="52" pos:column="59"/></operator><name pos:line="52" pos:column="59">inserted_head<pos:position pos:line="52" pos:column="72"/></name></expr></argument>, 
                                <argument><expr><literal type="string" pos:line="53" pos:column="33">" elif"<pos:position pos:line="53" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt>
                <return pos:line="54" pos:column="17">return <expr><operator pos:line="54" pos:column="24">(<pos:position pos:line="54" pos:column="25"/></operator><literal type="number" pos:line="54" pos:column="25">0<pos:position pos:line="54" pos:column="26"/></literal><operator pos:line="54" pos:column="26">)<pos:position pos:line="54" pos:column="27"/></operator></expr>;<pos:position pos:line="54" pos:column="28"/></return>
            }<pos:position pos:line="55" pos:column="14"/></block></then>
            <elseif pos:line="56" pos:column="13">else <if pos:line="56" pos:column="18">if <condition pos:line="56" pos:column="21">(<expr><operator pos:line="56" pos:column="22">!<pos:position pos:line="56" pos:column="23"/></operator><call><name pos:line="56" pos:column="23">strcmp<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><name pos:line="56" pos:column="30">tag<pos:position pos:line="56" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="35">"expr"<pos:position pos:line="56" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="43"/></condition><then pos:line="56" pos:column="43"> <block pos:line="56" pos:column="44">{
                <expr_stmt><expr><name pos:line="57" pos:column="17">expr<pos:position pos:line="57" pos:column="21"/></name> <operator pos:line="57" pos:column="22">=<pos:position pos:line="57" pos:column="23"/></operator> <name pos:line="57" pos:column="24">tag_val<pos:position pos:line="57" pos:column="31"/></name></expr>;<pos:position pos:line="57" pos:column="32"/></expr_stmt>
<cpp:ifdef pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">ifdef<pos:position pos:line="58" pos:column="7"/></cpp:directive> <name pos:line="58" pos:column="8">DEBUG_INCLUDE<pos:position pos:line="58" pos:column="21"/></name></cpp:ifdef>
                <if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><literal type="number" pos:line="59" pos:column="21">1<pos:position pos:line="59" pos:column="22"/></literal></expr>)<pos:position pos:line="59" pos:column="23"/></condition><then pos:line="59" pos:column="23"> <block pos:line="59" pos:column="24">{
                    <decl_stmt><decl><type><name pos:line="60" pos:column="21">apr_size_t<pos:position pos:line="60" pos:column="31"/></name></type> <name pos:line="60" pos:column="32">d_len<pos:position pos:line="60" pos:column="37"/></name> <init pos:line="60" pos:column="38">= <expr><literal type="number" pos:line="60" pos:column="40">0<pos:position pos:line="60" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="60" pos:column="42"/></decl_stmt>
                    <expr_stmt><expr><name pos:line="61" pos:column="21">d_len<pos:position pos:line="61" pos:column="26"/></name> <operator pos:line="61" pos:column="27">=<pos:position pos:line="61" pos:column="28"/></operator> <call><name pos:line="61" pos:column="29">sprintf<pos:position pos:line="61" pos:column="36"/></name><argument_list pos:line="61" pos:column="36">(<argument><expr><name pos:line="61" pos:column="37">debug_buf<pos:position pos:line="61" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="48">"**** elif expr=\"%s\"\n"<pos:position pos:line="61" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="75">expr<pos:position pos:line="61" pos:column="79"/></name></expr></argument>)<pos:position pos:line="61" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="81"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="62" pos:column="21">tmp_buck<pos:position pos:line="62" pos:column="29"/></name> <operator pos:line="62" pos:column="30">=<pos:position pos:line="62" pos:column="31"/></operator> <call><name pos:line="62" pos:column="32">apr_bucket_heap_create<pos:position pos:line="62" pos:column="54"/></name><argument_list pos:line="62" pos:column="54">(<argument><expr><name pos:line="62" pos:column="55">debug_buf<pos:position pos:line="62" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="66">d_len<pos:position pos:line="62" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="73">NULL<pos:position pos:line="62" pos:column="77"/></name></expr></argument>,
                                                  <argument><expr><name><name pos:line="63" pos:column="51">r<pos:position pos:line="63" pos:column="52"/></name><operator pos:line="63" pos:column="52">-&gt;<pos:position pos:line="63" pos:column="57"/></operator><name pos:line="63" pos:column="54">connection<pos:position pos:line="63" pos:column="64"/></name><operator pos:line="63" pos:column="64">-&gt;<pos:position pos:line="63" pos:column="69"/></operator><name pos:line="63" pos:column="66">bucket_alloc<pos:position pos:line="63" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="80"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="64" pos:column="21">APR_BUCKET_INSERT_BEFORE<pos:position pos:line="64" pos:column="45"/></name><argument_list pos:line="64" pos:column="45">(<argument><expr><name pos:line="64" pos:column="46">head_ptr<pos:position pos:line="64" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="56">tmp_buck<pos:position pos:line="64" pos:column="64"/></name></expr></argument>)<pos:position pos:line="64" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="66"/></expr_stmt>

                    <if pos:line="66" pos:column="21">if <condition pos:line="66" pos:column="24">(<expr><operator pos:line="66" pos:column="25">*<pos:position pos:line="66" pos:column="26"/></operator><name pos:line="66" pos:column="26">inserted_head<pos:position pos:line="66" pos:column="39"/></name> <operator pos:line="66" pos:column="40">==<pos:position pos:line="66" pos:column="42"/></operator> <name pos:line="66" pos:column="43">NULL<pos:position pos:line="66" pos:column="47"/></name></expr>)<pos:position pos:line="66" pos:column="48"/></condition><then pos:line="66" pos:column="48"> <block pos:line="66" pos:column="49">{
                        <expr_stmt><expr><operator pos:line="67" pos:column="25">*<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="26">inserted_head<pos:position pos:line="67" pos:column="39"/></name> <operator pos:line="67" pos:column="40">=<pos:position pos:line="67" pos:column="41"/></operator> <name pos:line="67" pos:column="42">tmp_buck<pos:position pos:line="67" pos:column="50"/></name></expr>;<pos:position pos:line="67" pos:column="51"/></expr_stmt>
                    }<pos:position pos:line="68" pos:column="22"/></block></then></if>
                }<pos:position pos:line="69" pos:column="18"/></block></then></if>
<cpp:endif pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">endif<pos:position pos:line="70" pos:column="7"/></cpp:directive></cpp:endif>
            }<pos:position pos:line="71" pos:column="14"/></block></then></if></elseif>
            <else pos:line="72" pos:column="13">else <block pos:line="72" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="73" pos:column="17">ap_log_rerror<pos:position pos:line="73" pos:column="30"/></name><argument_list pos:line="73" pos:column="30">(<argument><expr><name pos:line="73" pos:column="31">APLOG_MARK<pos:position pos:line="73" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="43">APLOG_ERR<pos:position pos:line="73" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="54">0<pos:position pos:line="73" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="57">r<pos:position pos:line="73" pos:column="58"/></name></expr></argument>,
                               <argument><expr><literal type="string" pos:line="74" pos:column="32">"unknown parameter \"%s\" to tag if in %s"<pos:position pos:line="74" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="76">tag<pos:position pos:line="74" pos:column="79"/></name></expr></argument>, 
                               <argument><expr><name><name pos:line="75" pos:column="32">r<pos:position pos:line="75" pos:column="33"/></name><operator pos:line="75" pos:column="33">-&gt;<pos:position pos:line="75" pos:column="38"/></operator><name pos:line="75" pos:column="35">filename<pos:position pos:line="75" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="76" pos:column="17">CREATE_ERROR_BUCKET<pos:position pos:line="76" pos:column="36"/></name><argument_list pos:line="76" pos:column="36">(<argument><expr><name pos:line="76" pos:column="37">ctx<pos:position pos:line="76" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="42">tmp_buck<pos:position pos:line="76" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="52">head_ptr<pos:position pos:line="76" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="62">*<pos:position pos:line="76" pos:column="63"/></operator><name pos:line="76" pos:column="63">inserted_head<pos:position pos:line="76" pos:column="76"/></name></expr></argument>)<pos:position pos:line="76" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="78"/></expr_stmt>
                <return pos:line="77" pos:column="17">return <expr><literal type="number" pos:line="77" pos:column="24">1<pos:position pos:line="77" pos:column="25"/></literal></expr>;<pos:position pos:line="77" pos:column="26"/></return>
            }<pos:position pos:line="78" pos:column="14"/></block></else></if>
        }<pos:position pos:line="79" pos:column="10"/></block></while>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>
    <return pos:line="81" pos:column="5">return <expr><literal type="number" pos:line="81" pos:column="12">0<pos:position pos:line="81" pos:column="13"/></literal></expr>;<pos:position pos:line="81" pos:column="14"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

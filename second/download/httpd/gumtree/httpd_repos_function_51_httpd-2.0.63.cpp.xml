<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_51_httpd-2.0.63.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">clean_env<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">pathbuf<pos:position pos:line="3" pos:column="17"/></name><index pos:line="3" pos:column="17">[<expr><literal type="number" pos:line="3" pos:column="18">512<pos:position pos:line="3" pos:column="21"/></literal></expr>]<pos:position pos:line="3" pos:column="22"/></index></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier><modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">cleanenv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier><modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">ep<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">cidx<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">idx<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* While cleaning the environment, the environment should be clean.
     * (e.g. malloc() may get the name of a file for writing debugging info.
     * Bad news if MALLOC_DEBUG_FILE is set to /etc/passwd.  Sprintf() may be
     * susceptible to bad locale settings....)
     * (from PR 2790)
     */</comment>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name> <modifier pos:line="15" pos:column="10">*<pos:position pos:line="15" pos:column="11"/></modifier><modifier pos:line="15" pos:column="11">*<pos:position pos:line="15" pos:column="12"/></modifier></type><name pos:line="15" pos:column="12">envp<pos:position pos:line="15" pos:column="16"/></name> <init pos:line="15" pos:column="17">= <expr><name pos:line="15" pos:column="19">environ<pos:position pos:line="15" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name> <modifier pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></modifier></type><name pos:line="16" pos:column="11">empty_ptr<pos:position pos:line="16" pos:column="20"/></name> <init pos:line="16" pos:column="21">= <expr><name pos:line="16" pos:column="23">NULL<pos:position pos:line="16" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="28"/></decl_stmt>
 
    <expr_stmt><expr><name pos:line="18" pos:column="5">environ<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <operator pos:line="18" pos:column="15">&amp;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="16">empty_ptr<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt> <comment type="block" pos:line="18" pos:column="27">/* VERY safe environment */</comment>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">(<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">cleanenv<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <operator pos:line="20" pos:column="21">(<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">char<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">*<pos:position pos:line="20" pos:column="28"/></operator><operator pos:line="20" pos:column="28">*<pos:position pos:line="20" pos:column="29"/></operator><operator pos:line="20" pos:column="29">)<pos:position pos:line="20" pos:column="30"/></operator> <call><name pos:line="20" pos:column="31">calloc<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">AP_ENVBUF<pos:position pos:line="20" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="49">sizeof<argument_list pos:line="20" pos:column="55">(<argument><expr><name pos:line="20" pos:column="56">char<pos:position pos:line="20" pos:column="60"/></name> <operator pos:line="20" pos:column="61">*<pos:position pos:line="20" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call><operator pos:line="20" pos:column="64">)<pos:position pos:line="20" pos:column="65"/></operator> <operator pos:line="20" pos:column="66">==<pos:position pos:line="20" pos:column="68"/></operator> <name pos:line="20" pos:column="69">NULL<pos:position pos:line="20" pos:column="73"/></name></expr>)<pos:position pos:line="20" pos:column="74"/></condition><then pos:line="20" pos:column="74"> <block pos:line="20" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">log_err<pos:position pos:line="21" pos:column="16"/></name><argument_list pos:line="21" pos:column="16">(<argument><expr><literal type="string" pos:line="21" pos:column="17">"failed to malloc memory for environment\n"<pos:position pos:line="21" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">exit<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><literal type="number" pos:line="22" pos:column="14">120<pos:position pos:line="22" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">sprintf<pos:position pos:line="25" pos:column="12"/></name><argument_list pos:line="25" pos:column="12">(<argument><expr><name pos:line="25" pos:column="13">pathbuf<pos:position pos:line="25" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="22">"PATH=%s"<pos:position pos:line="25" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="33">AP_SAFE_PATH<pos:position pos:line="25" pos:column="45"/></name></expr></argument>)<pos:position pos:line="25" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">cleanenv<pos:position pos:line="26" pos:column="13"/></name><index pos:line="26" pos:column="13">[<expr><name pos:line="26" pos:column="14">cidx<pos:position pos:line="26" pos:column="18"/></name></expr>]<pos:position pos:line="26" pos:column="19"/></index></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <call><name pos:line="26" pos:column="22">strdup<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">pathbuf<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">cidx<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">++<pos:position pos:line="27" pos:column="11"/></operator></expr>;<pos:position pos:line="27" pos:column="12"/></expr_stmt>

    <for pos:line="29" pos:column="5">for <control pos:line="29" pos:column="9">(<init><expr><name pos:line="29" pos:column="10">ep<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">envp<pos:position pos:line="29" pos:column="19"/></name></expr>;<pos:position pos:line="29" pos:column="20"/></init> <condition><expr><operator pos:line="29" pos:column="21">*<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">ep<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">&amp;&amp;<pos:position pos:line="29" pos:column="35"/></operator> <name pos:line="29" pos:column="28">cidx<pos:position pos:line="29" pos:column="32"/></name> <operator pos:line="29" pos:column="33">&lt;<pos:position pos:line="29" pos:column="37"/></operator> <name pos:line="29" pos:column="35">AP_ENVBUF<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">-<pos:position pos:line="29" pos:column="45"/></operator><literal type="number" pos:line="29" pos:column="45">1<pos:position pos:line="29" pos:column="46"/></literal></expr>;<pos:position pos:line="29" pos:column="47"/></condition> <incr><expr><name pos:line="29" pos:column="48">ep<pos:position pos:line="29" pos:column="50"/></name><operator pos:line="29" pos:column="50">++<pos:position pos:line="29" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="53"/></control> <block pos:line="29" pos:column="54">{
        <for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">idx<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <literal type="number" pos:line="30" pos:column="20">0<pos:position pos:line="30" pos:column="21"/></literal></expr>;<pos:position pos:line="30" pos:column="22"/></init> <condition><expr><name><name pos:line="30" pos:column="23">safe_env_lst<pos:position pos:line="30" pos:column="35"/></name><index pos:line="30" pos:column="35">[<expr><name pos:line="30" pos:column="36">idx<pos:position pos:line="30" pos:column="39"/></name></expr>]<pos:position pos:line="30" pos:column="40"/></index></name></expr>;<pos:position pos:line="30" pos:column="41"/></condition> <incr><expr><name pos:line="30" pos:column="42">idx<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">++<pos:position pos:line="30" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="48"/></control> <block pos:line="30" pos:column="49">{
            <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><operator pos:line="31" pos:column="17">!<pos:position pos:line="31" pos:column="18"/></operator><call><name pos:line="31" pos:column="18">strncmp<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><operator pos:line="31" pos:column="26">*<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="27">ep<pos:position pos:line="31" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="31">safe_env_lst<pos:position pos:line="31" pos:column="43"/></name><index pos:line="31" pos:column="43">[<expr><name pos:line="31" pos:column="44">idx<pos:position pos:line="31" pos:column="47"/></name></expr>]<pos:position pos:line="31" pos:column="48"/></index></name></expr></argument>,
                         <argument><expr><call><name pos:line="32" pos:column="26">strlen<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><name><name pos:line="32" pos:column="33">safe_env_lst<pos:position pos:line="32" pos:column="45"/></name><index pos:line="32" pos:column="45">[<expr><name pos:line="32" pos:column="46">idx<pos:position pos:line="32" pos:column="49"/></name></expr>]<pos:position pos:line="32" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="53"/></condition><then pos:line="32" pos:column="53"> <block pos:line="32" pos:column="54">{
                <expr_stmt><expr><name><name pos:line="33" pos:column="17">cleanenv<pos:position pos:line="33" pos:column="25"/></name><index pos:line="33" pos:column="25">[<expr><name pos:line="33" pos:column="26">cidx<pos:position pos:line="33" pos:column="30"/></name></expr>]<pos:position pos:line="33" pos:column="31"/></index></name> <operator pos:line="33" pos:column="32">=<pos:position pos:line="33" pos:column="33"/></operator> <operator pos:line="33" pos:column="34">*<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="35">ep<pos:position pos:line="33" pos:column="37"/></name></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="34" pos:column="17">cidx<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">++<pos:position pos:line="34" pos:column="23"/></operator></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt>
                <break pos:line="35" pos:column="17">break;<pos:position pos:line="35" pos:column="23"/></break>
            }<pos:position pos:line="36" pos:column="14"/></block></then></if>
        }<pos:position pos:line="37" pos:column="10"/></block></for>
    }<pos:position pos:line="38" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="40" pos:column="5">cleanenv<pos:position pos:line="40" pos:column="13"/></name><index pos:line="40" pos:column="13">[<expr><name pos:line="40" pos:column="14">cidx<pos:position pos:line="40" pos:column="18"/></name></expr>]<pos:position pos:line="40" pos:column="19"/></index></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <name pos:line="40" pos:column="22">NULL<pos:position pos:line="40" pos:column="26"/></name></expr>;<pos:position pos:line="40" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="42" pos:column="5">environ<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <name pos:line="42" pos:column="15">cleanenv<pos:position pos:line="42" pos:column="23"/></name></expr>;<pos:position pos:line="42" pos:column="24"/></expr_stmt>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

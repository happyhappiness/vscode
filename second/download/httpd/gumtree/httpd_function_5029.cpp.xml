<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5029.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">start_lingering_close<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">event_conn_state_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">cs<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="5" pos:column="5">cs<pos:position pos:line="5" pos:column="7"/></name><operator pos:line="5" pos:column="7">-&gt;<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="9">c<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">-&gt;<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="12">sbh<pos:position pos:line="5" pos:column="15"/></name></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt>  <comment type="block" pos:line="5" pos:column="25">/* prevent scoreboard updates from the listener 
                         * worker will loop around and set SERVER_READY soon
                         */</comment>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">ap_start_lingering_close<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name><name pos:line="9" pos:column="34">cs<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">c<pos:position pos:line="9" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="41"/></condition><then pos:line="9" pos:column="41"> <block pos:line="9" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">apr_pool_clear<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name><name pos:line="10" pos:column="24">cs<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">p<pos:position pos:line="10" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">ap_push_pool<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">worker_queue_info<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="41">cs<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">p<pos:position pos:line="11" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
        <return pos:line="12" pos:column="9">return <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then>
    <else pos:line="14" pos:column="5">else <block pos:line="14" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">apr_socket_t<pos:position pos:line="15" pos:column="21"/></name> <modifier pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></modifier></type><name pos:line="15" pos:column="23">csd<pos:position pos:line="15" pos:column="26"/></name> <init pos:line="15" pos:column="27">= <expr><call><name pos:line="15" pos:column="29">ap_get_conn_socket<pos:position pos:line="15" pos:column="47"/></name><argument_list pos:line="15" pos:column="47">(<argument><expr><name><name pos:line="15" pos:column="48">cs<pos:position pos:line="15" pos:column="50"/></name><operator pos:line="15" pos:column="50">-&gt;<pos:position pos:line="15" pos:column="55"/></operator><name pos:line="15" pos:column="52">c<pos:position pos:line="15" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="55"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="16" pos:column="9">struct<pos:position pos:line="16" pos:column="15"/></name> <name pos:line="16" pos:column="16">timeout_queue<pos:position pos:line="16" pos:column="29"/></name></name> <modifier pos:line="16" pos:column="30">*<pos:position pos:line="16" pos:column="31"/></modifier></type><name pos:line="16" pos:column="31">q<pos:position pos:line="16" pos:column="32"/></name></decl>;<pos:position pos:line="16" pos:column="33"/></decl_stmt>

<cpp:ifdef pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">ifdef<pos:position pos:line="18" pos:column="7"/></cpp:directive> <name pos:line="18" pos:column="8">AP_DEBUG<pos:position pos:line="18" pos:column="16"/></name></cpp:ifdef>
        <block pos:line="19" pos:column="9">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">rv<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <call><name pos:line="20" pos:column="18">apr_socket_timeout_set<pos:position pos:line="20" pos:column="40"/></name><argument_list pos:line="20" pos:column="40">(<argument><expr><name pos:line="20" pos:column="41">csd<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="46">0<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">AP_DEBUG_ASSERT<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">rv<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">==<pos:position pos:line="21" pos:column="34"/></operator> <name pos:line="21" pos:column="35">APR_SUCCESS<pos:position pos:line="21" pos:column="46"/></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block>
<cpp:else pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">else<pos:position pos:line="23" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">apr_socket_timeout_set<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">csd<pos:position pos:line="24" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="37">0<pos:position pos:line="24" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>
        <comment type="block" pos:line="26" pos:column="9">/*
         * If some module requested a shortened waiting period, only wait for
         * 2s (SECONDS_TO_LINGER). This is useful for mitigating certain
         * DoS attacks.
         */</comment>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">apr_table_get<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name><name pos:line="31" pos:column="27">cs<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">c<pos:position pos:line="31" pos:column="32"/></name><operator pos:line="31" pos:column="32">-&gt;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="34">notes<pos:position pos:line="31" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="41">"short-lingering-close"<pos:position pos:line="31" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="66"/></condition><then pos:line="31" pos:column="66"> <block pos:line="31" pos:column="67">{
            <expr_stmt><expr><name><name pos:line="32" pos:column="13">cs<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">-&gt;<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="17">expiration_time<pos:position pos:line="32" pos:column="32"/></name></name> <operator pos:line="32" pos:column="33">=<pos:position pos:line="32" pos:column="34"/></operator>
                <call><name pos:line="33" pos:column="17">apr_time_now<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">()<pos:position pos:line="33" pos:column="31"/></argument_list></call> <operator pos:line="33" pos:column="32">+<pos:position pos:line="33" pos:column="33"/></operator> <call><name pos:line="33" pos:column="34">apr_time_from_sec<pos:position pos:line="33" pos:column="51"/></name><argument_list pos:line="33" pos:column="51">(<argument><expr><name pos:line="33" pos:column="52">SECONDS_TO_LINGER<pos:position pos:line="33" pos:column="69"/></name></expr></argument>)<pos:position pos:line="33" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><name pos:line="34" pos:column="13">q<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <operator pos:line="34" pos:column="17">&amp;<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="18">short_linger_q<pos:position pos:line="34" pos:column="32"/></name></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="35" pos:column="13">cs<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">-&gt;<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="17">pub<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">.<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="21">state<pos:position pos:line="35" pos:column="26"/></name></name> <operator pos:line="35" pos:column="27">=<pos:position pos:line="35" pos:column="28"/></operator> <name pos:line="35" pos:column="29">CONN_STATE_LINGER_SHORT<pos:position pos:line="35" pos:column="52"/></name></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then>
        <else pos:line="37" pos:column="9">else <block pos:line="37" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="38" pos:column="13">cs<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">-&gt;<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="17">expiration_time<pos:position pos:line="38" pos:column="32"/></name></name> <operator pos:line="38" pos:column="33">=<pos:position pos:line="38" pos:column="34"/></operator>
                <call><name pos:line="39" pos:column="17">apr_time_now<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">()<pos:position pos:line="39" pos:column="31"/></argument_list></call> <operator pos:line="39" pos:column="32">+<pos:position pos:line="39" pos:column="33"/></operator> <call><name pos:line="39" pos:column="34">apr_time_from_sec<pos:position pos:line="39" pos:column="51"/></name><argument_list pos:line="39" pos:column="51">(<argument><expr><name pos:line="39" pos:column="52">MAX_SECS_TO_LINGER<pos:position pos:line="39" pos:column="70"/></name></expr></argument>)<pos:position pos:line="39" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><name pos:line="40" pos:column="13">q<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">=<pos:position pos:line="40" pos:column="16"/></operator> <operator pos:line="40" pos:column="17">&amp;<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="18">linger_q<pos:position pos:line="40" pos:column="26"/></name></expr>;<pos:position pos:line="40" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="41" pos:column="13">cs<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">-&gt;<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="17">pub<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">.<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">state<pos:position pos:line="41" pos:column="26"/></name></name> <operator pos:line="41" pos:column="27">=<pos:position pos:line="41" pos:column="28"/></operator> <name pos:line="41" pos:column="29">CONN_STATE_LINGER_NORMAL<pos:position pos:line="41" pos:column="53"/></name></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">apr_thread_mutex_lock<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">timeout_mutex<pos:position pos:line="43" pos:column="44"/></name></expr></argument>)<pos:position pos:line="43" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">TO_QUEUE_APPEND<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><operator pos:line="44" pos:column="25">*<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="26">q<pos:position pos:line="44" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="29">cs<pos:position pos:line="44" pos:column="31"/></name></expr></argument>)<pos:position pos:line="44" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">cs<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">pfd<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">.<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="17">reqevents<pos:position pos:line="45" pos:column="26"/></name></name> <operator pos:line="45" pos:column="27">=<pos:position pos:line="45" pos:column="28"/></operator> <name pos:line="45" pos:column="29">APR_POLLIN<pos:position pos:line="45" pos:column="39"/></name> <operator pos:line="45" pos:column="40">|<pos:position pos:line="45" pos:column="41"/></operator> <name pos:line="45" pos:column="42">APR_POLLHUP<pos:position pos:line="45" pos:column="53"/></name> <operator pos:line="45" pos:column="54">|<pos:position pos:line="45" pos:column="55"/></operator> <name pos:line="45" pos:column="56">APR_POLLERR<pos:position pos:line="45" pos:column="67"/></name></expr>;<pos:position pos:line="45" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name pos:line="46" pos:column="9">rv<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <call><name pos:line="46" pos:column="14">apr_pollset_add<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><name pos:line="46" pos:column="30">event_pollset<pos:position pos:line="46" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="45">&amp;<pos:position pos:line="46" pos:column="50"/></operator><name><name pos:line="46" pos:column="46">cs<pos:position pos:line="46" pos:column="48"/></name><operator pos:line="46" pos:column="48">-&gt;<pos:position pos:line="46" pos:column="53"/></operator><name pos:line="46" pos:column="50">pfd<pos:position pos:line="46" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="47" pos:column="32"/></name><argument_list pos:line="47" pos:column="32">(<argument><expr><name pos:line="47" pos:column="33">timeout_mutex<pos:position pos:line="47" pos:column="46"/></name></expr></argument>)<pos:position pos:line="47" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="48"/></expr_stmt>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">rv<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">!=<pos:position pos:line="48" pos:column="18"/></operator> <name pos:line="48" pos:column="19">APR_SUCCESS<pos:position pos:line="48" pos:column="30"/></name> <operator pos:line="48" pos:column="31">&amp;&amp;<pos:position pos:line="48" pos:column="41"/></operator> <operator pos:line="48" pos:column="34">!<pos:position pos:line="48" pos:column="35"/></operator><call><name pos:line="48" pos:column="35">APR_STATUS_IS_EEXIST<pos:position pos:line="48" pos:column="55"/></name><argument_list pos:line="48" pos:column="55">(<argument><expr><name pos:line="48" pos:column="56">rv<pos:position pos:line="48" pos:column="58"/></name></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="60"/></condition><then pos:line="48" pos:column="60"> <block pos:line="48" pos:column="61">{
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">ap_log_error<pos:position pos:line="49" pos:column="25"/></name><argument_list pos:line="49" pos:column="25">(<argument><expr><name pos:line="49" pos:column="26">APLOG_MARK<pos:position pos:line="49" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="38">APLOG_ERR<pos:position pos:line="49" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="49">rv<pos:position pos:line="49" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="53">ap_server_conf<pos:position pos:line="49" pos:column="67"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="50" pos:column="26">"start_lingering_close: apr_pollset_add failure"<pos:position pos:line="50" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">apr_thread_mutex_lock<pos:position pos:line="51" pos:column="34"/></name><argument_list pos:line="51" pos:column="34">(<argument><expr><name pos:line="51" pos:column="35">timeout_mutex<pos:position pos:line="51" pos:column="48"/></name></expr></argument>)<pos:position pos:line="51" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">TO_QUEUE_REMOVE<pos:position pos:line="52" pos:column="28"/></name><argument_list pos:line="52" pos:column="28">(<argument><expr><operator pos:line="52" pos:column="29">*<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="30">q<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="33">cs<pos:position pos:line="52" pos:column="35"/></name></expr></argument>)<pos:position pos:line="52" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">apr_thread_mutex_unlock<pos:position pos:line="53" pos:column="36"/></name><argument_list pos:line="53" pos:column="36">(<argument><expr><name pos:line="53" pos:column="37">timeout_mutex<pos:position pos:line="53" pos:column="50"/></name></expr></argument>)<pos:position pos:line="53" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">apr_socket_close<pos:position pos:line="54" pos:column="29"/></name><argument_list pos:line="54" pos:column="29">(<argument><expr><name><name pos:line="54" pos:column="30">cs<pos:position pos:line="54" pos:column="32"/></name><operator pos:line="54" pos:column="32">-&gt;<pos:position pos:line="54" pos:column="37"/></operator><name pos:line="54" pos:column="34">pfd<pos:position pos:line="54" pos:column="37"/></name><operator pos:line="54" pos:column="37">.<pos:position pos:line="54" pos:column="38"/></operator><name pos:line="54" pos:column="38">desc<pos:position pos:line="54" pos:column="42"/></name><operator pos:line="54" pos:column="42">.<pos:position pos:line="54" pos:column="43"/></operator><name pos:line="54" pos:column="43">s<pos:position pos:line="54" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">apr_pool_clear<pos:position pos:line="55" pos:column="27"/></name><argument_list pos:line="55" pos:column="27">(<argument><expr><name><name pos:line="55" pos:column="28">cs<pos:position pos:line="55" pos:column="30"/></name><operator pos:line="55" pos:column="30">-&gt;<pos:position pos:line="55" pos:column="35"/></operator><name pos:line="55" pos:column="32">p<pos:position pos:line="55" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">ap_push_pool<pos:position pos:line="56" pos:column="25"/></name><argument_list pos:line="56" pos:column="25">(<argument><expr><name pos:line="56" pos:column="26">worker_queue_info<pos:position pos:line="56" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="45">cs<pos:position pos:line="56" pos:column="47"/></name><operator pos:line="56" pos:column="47">-&gt;<pos:position pos:line="56" pos:column="52"/></operator><name pos:line="56" pos:column="49">p<pos:position pos:line="56" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="52"/></expr_stmt>
            <return pos:line="57" pos:column="13">return <expr><literal type="number" pos:line="57" pos:column="20">0<pos:position pos:line="57" pos:column="21"/></literal></expr>;<pos:position pos:line="57" pos:column="22"/></return>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>
    }<pos:position pos:line="59" pos:column="6"/></block></else></if>
    <return pos:line="60" pos:column="5">return <expr><literal type="number" pos:line="60" pos:column="12">1<pos:position pos:line="60" pos:column="13"/></literal></expr>;<pos:position pos:line="60" pos:column="14"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

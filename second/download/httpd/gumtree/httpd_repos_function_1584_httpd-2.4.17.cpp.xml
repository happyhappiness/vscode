<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1584_httpd-2.4.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">cmd_rewriterule<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">cmd_parms<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">cmd<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">void<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">in_dconf<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                                   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">in_str<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">rewrite_perdir_conf<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">dconf<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><name pos:line="4" pos:column="34">in_dconf<pos:position pos:line="4" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">str<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><call><name pos:line="5" pos:column="17">apr_pstrdup<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><name><name pos:line="5" pos:column="29">cmd<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">pool<pos:position pos:line="5" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="40">in_str<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">rewrite_server_conf<pos:position pos:line="6" pos:column="24"/></name> <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier></type><name pos:line="6" pos:column="26">sconf<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">rewriterule_entry<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">newrule<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ap_regex_t<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">regexp<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">a1<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="23">a2<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><name pos:line="9" pos:column="28">NULL<pos:position pos:line="9" pos:column="32"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="34">*<pos:position pos:line="9" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="35">a3<pos:position pos:line="9" pos:column="37"/></name> <init pos:line="9" pos:column="38">= <expr><name pos:line="9" pos:column="40">NULL<pos:position pos:line="9" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">err<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="12" pos:column="5">sconf<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <call><name pos:line="12" pos:column="13">ap_get_module_config<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name><name pos:line="12" pos:column="34">cmd<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">server<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">-&gt;<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="47">module_config<pos:position pos:line="12" pos:column="60"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="62">&amp;<pos:position pos:line="12" pos:column="67"/></operator><name pos:line="12" pos:column="63">rewrite_module<pos:position pos:line="12" pos:column="77"/></name></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="79"/></expr_stmt>

    <comment type="block" pos:line="14" pos:column="5">/*  make a new entry in the internal rewrite rule list */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">cmd<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">path<pos:position pos:line="15" pos:column="18"/></name></name> <operator pos:line="15" pos:column="19">==<pos:position pos:line="15" pos:column="21"/></operator> <name pos:line="15" pos:column="22">NULL<pos:position pos:line="15" pos:column="26"/></name></expr>)<pos:position pos:line="15" pos:column="27"/></condition><then pos:line="15" pos:column="27"> <block pos:line="15" pos:column="28">{   <comment type="block" pos:line="15" pos:column="32">/* is server command */</comment>
        <expr_stmt><expr><name pos:line="16" pos:column="9">newrule<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">apr_array_push<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><name><name pos:line="16" pos:column="34">sconf<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">rewriterules<pos:position pos:line="16" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then>
    <else pos:line="18" pos:column="5">else <block pos:line="18" pos:column="10">{                     <comment type="block" pos:line="18" pos:column="32">/* is per-directory command */</comment>
        <expr_stmt><expr><name pos:line="19" pos:column="9">newrule<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <call><name pos:line="19" pos:column="19">apr_array_push<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><name><name pos:line="19" pos:column="34">dconf<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">rewriterules<pos:position pos:line="19" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="22" pos:column="5">/*  parse the argument line ourself */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><call><name pos:line="23" pos:column="9">parseargline<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">str<pos:position pos:line="23" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="27">&amp;<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="28">a1<pos:position pos:line="23" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="32">&amp;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="33">a2<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="37">&amp;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="38">a3<pos:position pos:line="23" pos:column="40"/></name></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="42"/></condition><then pos:line="23" pos:column="42"> <block pos:line="23" pos:column="43">{
        <return pos:line="24" pos:column="9">return <expr><call><name pos:line="24" pos:column="16">apr_pstrcat<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name><name pos:line="24" pos:column="28">cmd<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">-&gt;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="33">pool<pos:position pos:line="24" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="39">"RewriteRule: bad argument line '"<pos:position pos:line="24" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="75">str<pos:position pos:line="24" pos:column="78"/></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="25" pos:column="28">"'"<pos:position pos:line="25" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="33">NULL<pos:position pos:line="25" pos:column="37"/></name></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="39"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="28" pos:column="5">/* arg3: optional flags field */</comment>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">newrule<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">forced_mimetype<pos:position pos:line="29" pos:column="29"/></name></name>     <operator pos:line="29" pos:column="34">=<pos:position pos:line="29" pos:column="35"/></operator> <name pos:line="29" pos:column="36">NULL<pos:position pos:line="29" pos:column="40"/></name></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">newrule<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">-&gt;<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="14">forced_handler<pos:position pos:line="30" pos:column="28"/></name></name>      <operator pos:line="30" pos:column="34">=<pos:position pos:line="30" pos:column="35"/></operator> <name pos:line="30" pos:column="36">NULL<pos:position pos:line="30" pos:column="40"/></name></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">newrule<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">forced_responsecode<pos:position pos:line="31" pos:column="33"/></name></name> <operator pos:line="31" pos:column="34">=<pos:position pos:line="31" pos:column="35"/></operator> <name pos:line="31" pos:column="36">HTTP_MOVED_TEMPORARILY<pos:position pos:line="31" pos:column="58"/></name></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">newrule<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">flags<pos:position pos:line="32" pos:column="19"/></name></name>  <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <name pos:line="32" pos:column="23">RULEFLAG_NONE<pos:position pos:line="32" pos:column="36"/></name></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">newrule<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">env<pos:position pos:line="33" pos:column="17"/></name></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <name pos:line="33" pos:column="20">NULL<pos:position pos:line="33" pos:column="24"/></name></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">newrule<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">-&gt;<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="14">cookie<pos:position pos:line="34" pos:column="20"/></name></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <name pos:line="34" pos:column="23">NULL<pos:position pos:line="34" pos:column="27"/></name></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">newrule<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">skip<pos:position pos:line="35" pos:column="18"/></name></name>   <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <literal type="number" pos:line="35" pos:column="23">0<pos:position pos:line="35" pos:column="24"/></literal></expr>;<pos:position pos:line="35" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">newrule<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">maxrounds<pos:position pos:line="36" pos:column="23"/></name></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <name pos:line="36" pos:column="26">REWRITE_MAX_ROUNDS<pos:position pos:line="36" pos:column="44"/></name></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">a3<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">!=<pos:position pos:line="37" pos:column="14"/></operator> <name pos:line="37" pos:column="15">NULL<pos:position pos:line="37" pos:column="19"/></name></expr>)<pos:position pos:line="37" pos:column="20"/></condition><then pos:line="37" pos:column="20"> <block pos:line="37" pos:column="21">{
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">(<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">err<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <call><name pos:line="38" pos:column="20">cmd_parseflagfield<pos:position pos:line="38" pos:column="38"/></name><argument_list pos:line="38" pos:column="38">(<argument><expr><name><name pos:line="38" pos:column="39">cmd<pos:position pos:line="38" pos:column="42"/></name><operator pos:line="38" pos:column="42">-&gt;<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="44">pool<pos:position pos:line="38" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="50">newrule<pos:position pos:line="38" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="59">a3<pos:position pos:line="38" pos:column="61"/></name></expr></argument>,
                                      <argument><expr><name pos:line="39" pos:column="39">cmd_rewriterule_setflag<pos:position pos:line="39" pos:column="62"/></name></expr></argument>)<pos:position pos:line="39" pos:column="63"/></argument_list></call><operator pos:line="39" pos:column="63">)<pos:position pos:line="39" pos:column="64"/></operator> <operator pos:line="39" pos:column="65">!=<pos:position pos:line="39" pos:column="67"/></operator> <name pos:line="39" pos:column="68">NULL<pos:position pos:line="39" pos:column="72"/></name></expr>)<pos:position pos:line="39" pos:column="73"/></condition><then pos:line="39" pos:column="73"> <block pos:line="39" pos:column="74">{
            <return pos:line="40" pos:column="13">return <expr><call><name pos:line="40" pos:column="20">apr_pstrcat<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name><name pos:line="40" pos:column="32">cmd<pos:position pos:line="40" pos:column="35"/></name><operator pos:line="40" pos:column="35">-&gt;<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="37">pool<pos:position pos:line="40" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="43">"RewriteRule: "<pos:position pos:line="40" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="60">err<pos:position pos:line="40" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="65">NULL<pos:position pos:line="40" pos:column="69"/></name></expr></argument>)<pos:position pos:line="40" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="71"/></return>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="44" pos:column="5">/* arg1: the pattern
     * try to compile the regexp to test if is ok
     */</comment>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><operator pos:line="47" pos:column="9">*<pos:position pos:line="47" pos:column="10"/></operator><name pos:line="47" pos:column="10">a1<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">==<pos:position pos:line="47" pos:column="15"/></operator> <literal type="char" pos:line="47" pos:column="16">'!'<pos:position pos:line="47" pos:column="19"/></literal></expr>)<pos:position pos:line="47" pos:column="20"/></condition><then pos:line="47" pos:column="20"> <block pos:line="47" pos:column="21">{
        <expr_stmt><expr><name><name pos:line="48" pos:column="9">newrule<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">-&gt;<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="18">flags<pos:position pos:line="48" pos:column="23"/></name></name> <operator pos:line="48" pos:column="24">|=<pos:position pos:line="48" pos:column="26"/></operator> <name pos:line="48" pos:column="27">RULEFLAG_NOTMATCH<pos:position pos:line="48" pos:column="44"/></name></expr>;<pos:position pos:line="48" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="49" pos:column="9">++<pos:position pos:line="49" pos:column="11"/></operator><name pos:line="49" pos:column="11">a1<pos:position pos:line="49" pos:column="13"/></name></expr>;<pos:position pos:line="49" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="52" pos:column="5">regexp<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">=<pos:position pos:line="52" pos:column="13"/></operator> <call><name pos:line="52" pos:column="14">ap_pregcomp<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><name><name pos:line="52" pos:column="26">cmd<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">-&gt;<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="31">pool<pos:position pos:line="52" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="37">a1<pos:position pos:line="52" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="41">AP_REG_EXTENDED<pos:position pos:line="52" pos:column="56"/></name> <operator pos:line="52" pos:column="57">|<pos:position pos:line="52" pos:column="58"/></operator>
                                        <operator pos:line="53" pos:column="41">(<pos:position pos:line="53" pos:column="42"/></operator><ternary><condition><expr><operator pos:line="53" pos:column="42">(<pos:position pos:line="53" pos:column="43"/></operator><name><name pos:line="53" pos:column="43">newrule<pos:position pos:line="53" pos:column="50"/></name><operator pos:line="53" pos:column="50">-&gt;<pos:position pos:line="53" pos:column="55"/></operator><name pos:line="53" pos:column="52">flags<pos:position pos:line="53" pos:column="57"/></name></name> <operator pos:line="53" pos:column="58">&amp;<pos:position pos:line="53" pos:column="63"/></operator> <name pos:line="53" pos:column="60">RULEFLAG_NOCASE<pos:position pos:line="53" pos:column="75"/></name><operator pos:line="53" pos:column="75">)<pos:position pos:line="53" pos:column="76"/></operator></expr>
                                         ?<pos:position pos:line="54" pos:column="43"/></condition><then pos:line="54" pos:column="43"> <expr><name pos:line="54" pos:column="44">AP_REG_ICASE<pos:position pos:line="54" pos:column="56"/></name></expr> <pos:position pos:line="54" pos:column="57"/></then><else pos:line="54" pos:column="57">: <expr><literal type="number" pos:line="54" pos:column="59">0<pos:position pos:line="54" pos:column="60"/></literal></expr></else></ternary><operator pos:line="54" pos:column="60">)<pos:position pos:line="54" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="54" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="63"/></expr_stmt>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">!<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">regexp<pos:position pos:line="55" pos:column="16"/></name></expr>)<pos:position pos:line="55" pos:column="17"/></condition><then pos:line="55" pos:column="17"> <block pos:line="55" pos:column="18">{
        <return pos:line="56" pos:column="9">return <expr><call><name pos:line="56" pos:column="16">apr_pstrcat<pos:position pos:line="56" pos:column="27"/></name><argument_list pos:line="56" pos:column="27">(<argument><expr><name><name pos:line="56" pos:column="28">cmd<pos:position pos:line="56" pos:column="31"/></name><operator pos:line="56" pos:column="31">-&gt;<pos:position pos:line="56" pos:column="36"/></operator><name pos:line="56" pos:column="33">pool<pos:position pos:line="56" pos:column="37"/></name></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="57" pos:column="28">"RewriteRule: cannot compile regular expression '"<pos:position pos:line="57" pos:column="78"/></literal></expr></argument>,
                           <argument><expr><name pos:line="58" pos:column="28">a1<pos:position pos:line="58" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="32">"'"<pos:position pos:line="58" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="37">NULL<pos:position pos:line="58" pos:column="41"/></name></expr></argument>)<pos:position pos:line="58" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="43"/></return>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="61" pos:column="5">newrule<pos:position pos:line="61" pos:column="12"/></name><operator pos:line="61" pos:column="12">-&gt;<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="14">pattern<pos:position pos:line="61" pos:column="21"/></name></name> <operator pos:line="61" pos:column="22">=<pos:position pos:line="61" pos:column="23"/></operator> <name pos:line="61" pos:column="24">a1<pos:position pos:line="61" pos:column="26"/></name></expr>;<pos:position pos:line="61" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="62" pos:column="5">newrule<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">-&gt;<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="14">regexp<pos:position pos:line="62" pos:column="20"/></name></name>  <operator pos:line="62" pos:column="22">=<pos:position pos:line="62" pos:column="23"/></operator> <name pos:line="62" pos:column="24">regexp<pos:position pos:line="62" pos:column="30"/></name></expr>;<pos:position pos:line="62" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="64" pos:column="5">/* arg2: the output string */</comment>
    <expr_stmt><expr><name><name pos:line="65" pos:column="5">newrule<pos:position pos:line="65" pos:column="12"/></name><operator pos:line="65" pos:column="12">-&gt;<pos:position pos:line="65" pos:column="17"/></operator><name pos:line="65" pos:column="14">output<pos:position pos:line="65" pos:column="20"/></name></name> <operator pos:line="65" pos:column="21">=<pos:position pos:line="65" pos:column="22"/></operator> <name pos:line="65" pos:column="23">a2<pos:position pos:line="65" pos:column="25"/></name></expr>;<pos:position pos:line="65" pos:column="26"/></expr_stmt>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><operator pos:line="66" pos:column="9">*<pos:position pos:line="66" pos:column="10"/></operator><name pos:line="66" pos:column="10">a2<pos:position pos:line="66" pos:column="12"/></name> <operator pos:line="66" pos:column="13">==<pos:position pos:line="66" pos:column="15"/></operator> <literal type="char" pos:line="66" pos:column="16">'-'<pos:position pos:line="66" pos:column="19"/></literal> <operator pos:line="66" pos:column="20">&amp;&amp;<pos:position pos:line="66" pos:column="30"/></operator> <operator pos:line="66" pos:column="23">!<pos:position pos:line="66" pos:column="24"/></operator><name><name pos:line="66" pos:column="24">a2<pos:position pos:line="66" pos:column="26"/></name><index pos:line="66" pos:column="26">[<expr><literal type="number" pos:line="66" pos:column="27">1<pos:position pos:line="66" pos:column="28"/></literal></expr>]<pos:position pos:line="66" pos:column="29"/></index></name></expr>)<pos:position pos:line="66" pos:column="30"/></condition><then pos:line="66" pos:column="30"> <block pos:line="66" pos:column="31">{
        <expr_stmt><expr><name><name pos:line="67" pos:column="9">newrule<pos:position pos:line="67" pos:column="16"/></name><operator pos:line="67" pos:column="16">-&gt;<pos:position pos:line="67" pos:column="21"/></operator><name pos:line="67" pos:column="18">flags<pos:position pos:line="67" pos:column="23"/></name></name> <operator pos:line="67" pos:column="24">|=<pos:position pos:line="67" pos:column="26"/></operator> <name pos:line="67" pos:column="27">RULEFLAG_NOSUB<pos:position pos:line="67" pos:column="41"/></name></expr>;<pos:position pos:line="67" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="70" pos:column="5">/* now, if the server or per-dir config holds an
     * array of RewriteCond entries, we take it for us
     * and clear the array
     */</comment>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name><name pos:line="74" pos:column="9">cmd<pos:position pos:line="74" pos:column="12"/></name><operator pos:line="74" pos:column="12">-&gt;<pos:position pos:line="74" pos:column="17"/></operator><name pos:line="74" pos:column="14">path<pos:position pos:line="74" pos:column="18"/></name></name> <operator pos:line="74" pos:column="19">==<pos:position pos:line="74" pos:column="21"/></operator> <name pos:line="74" pos:column="22">NULL<pos:position pos:line="74" pos:column="26"/></name></expr>)<pos:position pos:line="74" pos:column="27"/></condition><then pos:line="74" pos:column="27"> <block pos:line="74" pos:column="28">{  <comment type="block" pos:line="74" pos:column="31">/* is server command */</comment>
        <expr_stmt><expr><name><name pos:line="75" pos:column="9">newrule<pos:position pos:line="75" pos:column="16"/></name><operator pos:line="75" pos:column="16">-&gt;<pos:position pos:line="75" pos:column="21"/></operator><name pos:line="75" pos:column="18">rewriteconds<pos:position pos:line="75" pos:column="30"/></name></name>   <operator pos:line="75" pos:column="33">=<pos:position pos:line="75" pos:column="34"/></operator> <name><name pos:line="75" pos:column="35">sconf<pos:position pos:line="75" pos:column="40"/></name><operator pos:line="75" pos:column="40">-&gt;<pos:position pos:line="75" pos:column="45"/></operator><name pos:line="75" pos:column="42">rewriteconds<pos:position pos:line="75" pos:column="54"/></name></name></expr>;<pos:position pos:line="75" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="76" pos:column="9">sconf<pos:position pos:line="76" pos:column="14"/></name><operator pos:line="76" pos:column="14">-&gt;<pos:position pos:line="76" pos:column="19"/></operator><name pos:line="76" pos:column="16">rewriteconds<pos:position pos:line="76" pos:column="28"/></name></name> <operator pos:line="76" pos:column="29">=<pos:position pos:line="76" pos:column="30"/></operator> <call><name pos:line="76" pos:column="31">apr_array_make<pos:position pos:line="76" pos:column="45"/></name><argument_list pos:line="76" pos:column="45">(<argument><expr><name><name pos:line="76" pos:column="46">cmd<pos:position pos:line="76" pos:column="49"/></name><operator pos:line="76" pos:column="49">-&gt;<pos:position pos:line="76" pos:column="54"/></operator><name pos:line="76" pos:column="51">pool<pos:position pos:line="76" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="57">2<pos:position pos:line="76" pos:column="58"/></literal></expr></argument>,
                                             <argument><expr><sizeof pos:line="77" pos:column="46">sizeof<argument_list pos:line="77" pos:column="52">(<argument><expr><name pos:line="77" pos:column="53">rewritecond_entry<pos:position pos:line="77" pos:column="70"/></name></expr></argument>)<pos:position pos:line="77" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="77" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="78" pos:column="6"/></block></then>
    <else pos:line="79" pos:column="5">else <block pos:line="79" pos:column="10">{                    <comment type="block" pos:line="79" pos:column="31">/* is per-directory command */</comment>
        <expr_stmt><expr><name><name pos:line="80" pos:column="9">newrule<pos:position pos:line="80" pos:column="16"/></name><operator pos:line="80" pos:column="16">-&gt;<pos:position pos:line="80" pos:column="21"/></operator><name pos:line="80" pos:column="18">rewriteconds<pos:position pos:line="80" pos:column="30"/></name></name>   <operator pos:line="80" pos:column="33">=<pos:position pos:line="80" pos:column="34"/></operator> <name><name pos:line="80" pos:column="35">dconf<pos:position pos:line="80" pos:column="40"/></name><operator pos:line="80" pos:column="40">-&gt;<pos:position pos:line="80" pos:column="45"/></operator><name pos:line="80" pos:column="42">rewriteconds<pos:position pos:line="80" pos:column="54"/></name></name></expr>;<pos:position pos:line="80" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="81" pos:column="9">dconf<pos:position pos:line="81" pos:column="14"/></name><operator pos:line="81" pos:column="14">-&gt;<pos:position pos:line="81" pos:column="19"/></operator><name pos:line="81" pos:column="16">rewriteconds<pos:position pos:line="81" pos:column="28"/></name></name> <operator pos:line="81" pos:column="29">=<pos:position pos:line="81" pos:column="30"/></operator> <call><name pos:line="81" pos:column="31">apr_array_make<pos:position pos:line="81" pos:column="45"/></name><argument_list pos:line="81" pos:column="45">(<argument><expr><name><name pos:line="81" pos:column="46">cmd<pos:position pos:line="81" pos:column="49"/></name><operator pos:line="81" pos:column="49">-&gt;<pos:position pos:line="81" pos:column="54"/></operator><name pos:line="81" pos:column="51">pool<pos:position pos:line="81" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="57">2<pos:position pos:line="81" pos:column="58"/></literal></expr></argument>,
                                             <argument><expr><sizeof pos:line="82" pos:column="46">sizeof<argument_list pos:line="82" pos:column="52">(<argument><expr><name pos:line="82" pos:column="53">rewritecond_entry<pos:position pos:line="82" pos:column="70"/></name></expr></argument>)<pos:position pos:line="82" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="82" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></else></if>

    <return pos:line="85" pos:column="5">return <expr><name pos:line="85" pos:column="12">NULL<pos:position pos:line="85" pos:column="16"/></name></expr>;<pos:position pos:line="85" pos:column="17"/></return>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1156.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">match<pos:position pos:line="2" pos:column="6"/></name><parameter_list pos:line="2" pos:column="6">(<parameter><decl><type><specifier pos:line="2" pos:column="7">register<pos:position pos:line="2" pos:column="15"/></specifier> <specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <name pos:line="2" pos:column="22">uschar<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">eptr<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">register<pos:position pos:line="2" pos:column="44"/></specifier> <specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <name pos:line="2" pos:column="51">uschar<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">ecode<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">offset_top<pos:position pos:line="3" pos:column="17"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="19">match_data<pos:position pos:line="3" pos:column="29"/></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">md<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="35">unsigned<pos:position pos:line="3" pos:column="43"/></name> <name pos:line="3" pos:column="44">long<pos:position pos:line="3" pos:column="48"/></name> <name pos:line="3" pos:column="49">int<pos:position pos:line="3" pos:column="52"/></name></type> <name pos:line="3" pos:column="53">ims<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="58">eptrblock<pos:position pos:line="3" pos:column="67"/></name> <modifier pos:line="3" pos:column="68">*<pos:position pos:line="3" pos:column="69"/></modifier></type><name pos:line="3" pos:column="69">eptrb<pos:position pos:line="3" pos:column="74"/></name></decl></parameter>,
  <parameter><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">flags<pos:position pos:line="4" pos:column="12"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="13"/></parameter_list>
<block pos:line="5" pos:column="1">{
<decl_stmt><decl><type><name pos:line="6" pos:column="1">unsigned<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">long<pos:position pos:line="6" pos:column="14"/></name> <name pos:line="6" pos:column="15">int<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">original_ims<pos:position pos:line="6" pos:column="31"/></name> <init pos:line="6" pos:column="32">= <expr><name pos:line="6" pos:column="34">ims<pos:position pos:line="6" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>   <comment type="block" pos:line="6" pos:column="41">/* Save for resetting on ')' */</comment>
<decl_stmt><decl><type><name pos:line="7" pos:column="1">eptrblock<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">newptrb<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

<comment type="block" pos:line="9" pos:column="1">/* At the start of a bracketed group, add the current subject pointer to the
stack of such pointers, to be re-instated at the end of the group when we hit
the closing ket. When match() is called in other circumstances, we don't add to
the stack. */</comment>

<if pos:line="14" pos:column="1">if <condition pos:line="14" pos:column="4">(<expr><operator pos:line="14" pos:column="5">(<pos:position pos:line="14" pos:column="6"/></operator><name pos:line="14" pos:column="6">flags<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">&amp;<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="14">match_isgroup<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator> <operator pos:line="14" pos:column="29">!=<pos:position pos:line="14" pos:column="31"/></operator> <literal type="number" pos:line="14" pos:column="32">0<pos:position pos:line="14" pos:column="33"/></literal></expr>)<pos:position pos:line="14" pos:column="34"/></condition><then pos:line="14" pos:column="34">
  <block pos:line="15" pos:column="3">{
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">newptrb<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">.<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">prev<pos:position pos:line="16" pos:column="15"/></name></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <name pos:line="16" pos:column="18">eptrb<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">newptrb<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">.<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">saved_eptr<pos:position pos:line="17" pos:column="21"/></name></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <name pos:line="17" pos:column="24">eptr<pos:position pos:line="17" pos:column="28"/></name></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">eptrb<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <operator pos:line="18" pos:column="11">&amp;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="12">newptrb<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

<comment type="block" pos:line="21" pos:column="1">/* Now start processing the operations. */</comment>

<for pos:line="23" pos:column="1">for <control pos:line="23" pos:column="5">(<init pos:line="23" pos:column="6">;<pos:position pos:line="23" pos:column="7"/></init><condition pos:line="23" pos:column="7">;<pos:position pos:line="23" pos:column="8"/></condition><incr/>)<pos:position pos:line="23" pos:column="9"/></control>
  <block pos:line="24" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="25" pos:column="3">int<pos:position pos:line="25" pos:column="6"/></name></type> <name pos:line="25" pos:column="7">op<pos:position pos:line="25" pos:column="9"/></name> <init pos:line="25" pos:column="10">= <expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">int<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">)<pos:position pos:line="25" pos:column="17"/></operator><operator pos:line="25" pos:column="17">*<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">ecode<pos:position pos:line="25" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="26" pos:column="3">int<pos:position pos:line="26" pos:column="6"/></name></type> <name pos:line="26" pos:column="7">min<pos:position pos:line="26" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="26" pos:column="12">max<pos:position pos:line="26" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="26" pos:column="17">ctype<pos:position pos:line="26" pos:column="22"/></name></decl>;<pos:position pos:line="26" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="27" pos:column="3">register<pos:position pos:line="27" pos:column="11"/></specifier> <name pos:line="27" pos:column="12">int<pos:position pos:line="27" pos:column="15"/></name></type> <name pos:line="27" pos:column="16">i<pos:position pos:line="27" pos:column="17"/></name></decl>;<pos:position pos:line="27" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="28" pos:column="3">register<pos:position pos:line="28" pos:column="11"/></specifier> <name pos:line="28" pos:column="12">int<pos:position pos:line="28" pos:column="15"/></name></type> <name pos:line="28" pos:column="16">c<pos:position pos:line="28" pos:column="17"/></name></decl>;<pos:position pos:line="28" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="29" pos:column="3">BOOL<pos:position pos:line="29" pos:column="7"/></name></type> <name pos:line="29" pos:column="8">minimize<pos:position pos:line="29" pos:column="16"/></name> <init pos:line="29" pos:column="17">= <expr><name pos:line="29" pos:column="19">FALSE<pos:position pos:line="29" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="25"/></decl_stmt>

  <comment type="block" pos:line="31" pos:column="3">/* Opening capturing bracket. If there is space in the offset vector, save
  the current subject position in the working slot at the top of the vector. We
  mustn't change the current values of the data slot, because they may be set
  from a previous iteration of this group, and be referred to by a reference
  inside the group.

  If the bracket fails to match, we need to restore this value and also the
  values of the final offsets, in case they were set by a previous iteration of
  the same bracket.

  If there isn't enough space in the offset vector, treat this as if it were a
  non-capturing bracket. Don't worry about setting the flag for the error case
  here; that is handled in the code for KET. */</comment>

  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><name pos:line="45" pos:column="7">op<pos:position pos:line="45" pos:column="9"/></name> <operator pos:line="45" pos:column="10">&gt;<pos:position pos:line="45" pos:column="14"/></operator> <name pos:line="45" pos:column="12">OP_BRA<pos:position pos:line="45" pos:column="18"/></name></expr>)<pos:position pos:line="45" pos:column="19"/></condition><then pos:line="45" pos:column="19">
    <block pos:line="46" pos:column="5">{
    <decl_stmt><decl><type><name pos:line="47" pos:column="5">int<pos:position pos:line="47" pos:column="8"/></name></type> <name pos:line="47" pos:column="9">offset<pos:position pos:line="47" pos:column="15"/></name></decl>;<pos:position pos:line="47" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="48" pos:column="5">int<pos:position pos:line="48" pos:column="8"/></name></type> <name pos:line="48" pos:column="9">number<pos:position pos:line="48" pos:column="15"/></name> <init pos:line="48" pos:column="16">= <expr><name pos:line="48" pos:column="18">op<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">-<pos:position pos:line="48" pos:column="22"/></operator> <name pos:line="48" pos:column="23">OP_BRA<pos:position pos:line="48" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="48" pos:column="30"/></decl_stmt>

    <comment type="block" pos:line="50" pos:column="5">/* For extended extraction brackets (large number), we have to fish out the
    number from a dummy opcode at the start. */</comment>

    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">number<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">&gt;<pos:position pos:line="53" pos:column="20"/></operator> <name pos:line="53" pos:column="18">EXTRACT_BASIC_MAX<pos:position pos:line="53" pos:column="35"/></name></expr>)<pos:position pos:line="53" pos:column="36"/></condition><then pos:line="53" pos:column="36"> <block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="37">number<pos:position pos:line="53" pos:column="43"/></name> <operator pos:line="53" pos:column="44">=<pos:position pos:line="53" pos:column="45"/></operator> <operator pos:line="53" pos:column="46">(<pos:position pos:line="53" pos:column="47"/></operator><name><name pos:line="53" pos:column="47">ecode<pos:position pos:line="53" pos:column="52"/></name><index pos:line="53" pos:column="52">[<expr><literal type="number" pos:line="53" pos:column="53">4<pos:position pos:line="53" pos:column="54"/></literal></expr>]<pos:position pos:line="53" pos:column="55"/></index></name> <operator pos:line="53" pos:column="56">&lt;&lt;<pos:position pos:line="53" pos:column="64"/></operator> <literal type="number" pos:line="53" pos:column="59">8<pos:position pos:line="53" pos:column="60"/></literal><operator pos:line="53" pos:column="60">)<pos:position pos:line="53" pos:column="61"/></operator> <operator pos:line="53" pos:column="62">|<pos:position pos:line="53" pos:column="63"/></operator> <name><name pos:line="53" pos:column="64">ecode<pos:position pos:line="53" pos:column="69"/></name><index pos:line="53" pos:column="69">[<expr><literal type="number" pos:line="53" pos:column="70">5<pos:position pos:line="53" pos:column="71"/></literal></expr>]<pos:position pos:line="53" pos:column="72"/></index></name></expr>;<pos:position pos:line="53" pos:column="73"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="54" pos:column="5">offset<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <name pos:line="54" pos:column="14">number<pos:position pos:line="54" pos:column="20"/></name> <operator pos:line="54" pos:column="21">&lt;&lt;<pos:position pos:line="54" pos:column="29"/></operator> <literal type="number" pos:line="54" pos:column="24">1<pos:position pos:line="54" pos:column="25"/></literal></expr>;<pos:position pos:line="54" pos:column="26"/></expr_stmt>

<cpp:ifdef pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">ifdef<pos:position pos:line="56" pos:column="7"/></cpp:directive> <name pos:line="56" pos:column="8">DEBUG<pos:position pos:line="56" pos:column="13"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">printf<pos:position pos:line="57" pos:column="11"/></name><argument_list pos:line="57" pos:column="11">(<argument><expr><literal type="string" pos:line="57" pos:column="12">"start bracket %d subject="<pos:position pos:line="57" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="41">number<pos:position pos:line="57" pos:column="47"/></name></expr></argument>)<pos:position pos:line="57" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">pchars<pos:position pos:line="58" pos:column="11"/></name><argument_list pos:line="58" pos:column="11">(<argument><expr><name pos:line="58" pos:column="12">eptr<pos:position pos:line="58" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="18">16<pos:position pos:line="58" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="22">TRUE<pos:position pos:line="58" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="28">md<pos:position pos:line="58" pos:column="30"/></name></expr></argument>)<pos:position pos:line="58" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">printf<pos:position pos:line="59" pos:column="11"/></name><argument_list pos:line="59" pos:column="11">(<argument><expr><literal type="string" pos:line="59" pos:column="12">"\n"<pos:position pos:line="59" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="18"/></expr_stmt>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">offset<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">&lt;<pos:position pos:line="62" pos:column="20"/></operator> <name><name pos:line="62" pos:column="18">md<pos:position pos:line="62" pos:column="20"/></name><operator pos:line="62" pos:column="20">-&gt;<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="22">offset_max<pos:position pos:line="62" pos:column="32"/></name></name></expr>)<pos:position pos:line="62" pos:column="33"/></condition><then pos:line="62" pos:column="33">
      <block pos:line="63" pos:column="7">{
      <decl_stmt><decl><type><name pos:line="64" pos:column="7">int<pos:position pos:line="64" pos:column="10"/></name></type> <name pos:line="64" pos:column="11">save_offset1<pos:position pos:line="64" pos:column="23"/></name> <init pos:line="64" pos:column="24">= <expr><name><name pos:line="64" pos:column="26">md<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">-&gt;<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="30">offset_vector<pos:position pos:line="64" pos:column="43"/></name><index pos:line="64" pos:column="43">[<expr><name pos:line="64" pos:column="44">offset<pos:position pos:line="64" pos:column="50"/></name></expr>]<pos:position pos:line="64" pos:column="51"/></index></name></expr></init></decl>;<pos:position pos:line="64" pos:column="52"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="65" pos:column="7">int<pos:position pos:line="65" pos:column="10"/></name></type> <name pos:line="65" pos:column="11">save_offset2<pos:position pos:line="65" pos:column="23"/></name> <init pos:line="65" pos:column="24">= <expr><name><name pos:line="65" pos:column="26">md<pos:position pos:line="65" pos:column="28"/></name><operator pos:line="65" pos:column="28">-&gt;<pos:position pos:line="65" pos:column="33"/></operator><name pos:line="65" pos:column="30">offset_vector<pos:position pos:line="65" pos:column="43"/></name><index pos:line="65" pos:column="43">[<expr><name pos:line="65" pos:column="44">offset<pos:position pos:line="65" pos:column="50"/></name><operator pos:line="65" pos:column="50">+<pos:position pos:line="65" pos:column="51"/></operator><literal type="number" pos:line="65" pos:column="51">1<pos:position pos:line="65" pos:column="52"/></literal></expr>]<pos:position pos:line="65" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="65" pos:column="54"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="66" pos:column="7">int<pos:position pos:line="66" pos:column="10"/></name></type> <name pos:line="66" pos:column="11">save_offset3<pos:position pos:line="66" pos:column="23"/></name> <init pos:line="66" pos:column="24">= <expr><name><name pos:line="66" pos:column="26">md<pos:position pos:line="66" pos:column="28"/></name><operator pos:line="66" pos:column="28">-&gt;<pos:position pos:line="66" pos:column="33"/></operator><name pos:line="66" pos:column="30">offset_vector<pos:position pos:line="66" pos:column="43"/></name><index pos:line="66" pos:column="43">[<expr><name><name pos:line="66" pos:column="44">md<pos:position pos:line="66" pos:column="46"/></name><operator pos:line="66" pos:column="46">-&gt;<pos:position pos:line="66" pos:column="51"/></operator><name pos:line="66" pos:column="48">offset_end<pos:position pos:line="66" pos:column="58"/></name></name> <operator pos:line="66" pos:column="59">-<pos:position pos:line="66" pos:column="60"/></operator> <name pos:line="66" pos:column="61">number<pos:position pos:line="66" pos:column="67"/></name></expr>]<pos:position pos:line="66" pos:column="68"/></index></name></expr></init></decl>;<pos:position pos:line="66" pos:column="69"/></decl_stmt>

      <expr_stmt><expr><call><name pos:line="68" pos:column="7">DPRINTF<pos:position pos:line="68" pos:column="14"/></name><argument_list pos:line="68" pos:column="14">(<argument><expr><operator pos:line="68" pos:column="15">(<pos:position pos:line="68" pos:column="16"/></operator><literal type="string" pos:line="68" pos:column="16">"saving %d %d %d\n"<pos:position pos:line="68" pos:column="35"/></literal><operator pos:line="68" pos:column="35">,<pos:position pos:line="68" pos:column="36"/></operator> <name pos:line="68" pos:column="37">save_offset1<pos:position pos:line="68" pos:column="49"/></name><operator pos:line="68" pos:column="49">,<pos:position pos:line="68" pos:column="50"/></operator> <name pos:line="68" pos:column="51">save_offset2<pos:position pos:line="68" pos:column="63"/></name><operator pos:line="68" pos:column="63">,<pos:position pos:line="68" pos:column="64"/></operator> <name pos:line="68" pos:column="65">save_offset3<pos:position pos:line="68" pos:column="77"/></name><operator pos:line="68" pos:column="77">)<pos:position pos:line="68" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="68" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="80"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="69" pos:column="7">md<pos:position pos:line="69" pos:column="9"/></name><operator pos:line="69" pos:column="9">-&gt;<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="11">offset_vector<pos:position pos:line="69" pos:column="24"/></name><index pos:line="69" pos:column="24">[<expr><name><name pos:line="69" pos:column="25">md<pos:position pos:line="69" pos:column="27"/></name><operator pos:line="69" pos:column="27">-&gt;<pos:position pos:line="69" pos:column="32"/></operator><name pos:line="69" pos:column="29">offset_end<pos:position pos:line="69" pos:column="39"/></name></name> <operator pos:line="69" pos:column="40">-<pos:position pos:line="69" pos:column="41"/></operator> <name pos:line="69" pos:column="42">number<pos:position pos:line="69" pos:column="48"/></name></expr>]<pos:position pos:line="69" pos:column="49"/></index></name> <operator pos:line="69" pos:column="50">=<pos:position pos:line="69" pos:column="51"/></operator> <name pos:line="69" pos:column="52">eptr<pos:position pos:line="69" pos:column="56"/></name> <operator pos:line="69" pos:column="57">-<pos:position pos:line="69" pos:column="58"/></operator> <name><name pos:line="69" pos:column="59">md<pos:position pos:line="69" pos:column="61"/></name><operator pos:line="69" pos:column="61">-&gt;<pos:position pos:line="69" pos:column="66"/></operator><name pos:line="69" pos:column="63">start_subject<pos:position pos:line="69" pos:column="76"/></name></name></expr>;<pos:position pos:line="69" pos:column="77"/></expr_stmt>

      <do pos:line="71" pos:column="7">do
        <block pos:line="72" pos:column="9">{
        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><call><name pos:line="73" pos:column="13">match<pos:position pos:line="73" pos:column="18"/></name><argument_list pos:line="73" pos:column="18">(<argument><expr><name pos:line="73" pos:column="19">eptr<pos:position pos:line="73" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="25">ecode<pos:position pos:line="73" pos:column="30"/></name><operator pos:line="73" pos:column="30">+<pos:position pos:line="73" pos:column="31"/></operator><literal type="number" pos:line="73" pos:column="31">3<pos:position pos:line="73" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="34">offset_top<pos:position pos:line="73" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="46">md<pos:position pos:line="73" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="50">ims<pos:position pos:line="73" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="55">eptrb<pos:position pos:line="73" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="62">match_isgroup<pos:position pos:line="73" pos:column="75"/></name></expr></argument>)<pos:position pos:line="73" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="73" pos:column="77"/></condition><then pos:line="73" pos:column="77">
          <block type="pseudo"><return pos:line="74" pos:column="11">return <expr><name pos:line="74" pos:column="18">TRUE<pos:position pos:line="74" pos:column="22"/></name></expr>;<pos:position pos:line="74" pos:column="23"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="75" pos:column="9">ecode<pos:position pos:line="75" pos:column="14"/></name> <operator pos:line="75" pos:column="15">+=<pos:position pos:line="75" pos:column="17"/></operator> <operator pos:line="75" pos:column="18">(<pos:position pos:line="75" pos:column="19"/></operator><name><name pos:line="75" pos:column="19">ecode<pos:position pos:line="75" pos:column="24"/></name><index pos:line="75" pos:column="24">[<expr><literal type="number" pos:line="75" pos:column="25">1<pos:position pos:line="75" pos:column="26"/></literal></expr>]<pos:position pos:line="75" pos:column="27"/></index></name> <operator pos:line="75" pos:column="28">&lt;&lt;<pos:position pos:line="75" pos:column="36"/></operator> <literal type="number" pos:line="75" pos:column="31">8<pos:position pos:line="75" pos:column="32"/></literal><operator pos:line="75" pos:column="32">)<pos:position pos:line="75" pos:column="33"/></operator> <operator pos:line="75" pos:column="34">+<pos:position pos:line="75" pos:column="35"/></operator> <name><name pos:line="75" pos:column="36">ecode<pos:position pos:line="75" pos:column="41"/></name><index pos:line="75" pos:column="41">[<expr><literal type="number" pos:line="75" pos:column="42">2<pos:position pos:line="75" pos:column="43"/></literal></expr>]<pos:position pos:line="75" pos:column="44"/></index></name></expr>;<pos:position pos:line="75" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="76" pos:column="10"/></block>
      while <condition pos:line="77" pos:column="13">(<expr><operator pos:line="77" pos:column="14">*<pos:position pos:line="77" pos:column="15"/></operator><name pos:line="77" pos:column="15">ecode<pos:position pos:line="77" pos:column="20"/></name> <operator pos:line="77" pos:column="21">==<pos:position pos:line="77" pos:column="23"/></operator> <name pos:line="77" pos:column="24">OP_ALT<pos:position pos:line="77" pos:column="30"/></name></expr>)<pos:position pos:line="77" pos:column="31"/></condition>;<pos:position pos:line="77" pos:column="32"/></do>

      <expr_stmt><expr><call><name pos:line="79" pos:column="7">DPRINTF<pos:position pos:line="79" pos:column="14"/></name><argument_list pos:line="79" pos:column="14">(<argument><expr><operator pos:line="79" pos:column="15">(<pos:position pos:line="79" pos:column="16"/></operator><literal type="string" pos:line="79" pos:column="16">"bracket %d failed\n"<pos:position pos:line="79" pos:column="37"/></literal><operator pos:line="79" pos:column="37">,<pos:position pos:line="79" pos:column="38"/></operator> <name pos:line="79" pos:column="39">number<pos:position pos:line="79" pos:column="45"/></name><operator pos:line="79" pos:column="45">)<pos:position pos:line="79" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="79" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="48"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="81" pos:column="7">md<pos:position pos:line="81" pos:column="9"/></name><operator pos:line="81" pos:column="9">-&gt;<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="11">offset_vector<pos:position pos:line="81" pos:column="24"/></name><index pos:line="81" pos:column="24">[<expr><name pos:line="81" pos:column="25">offset<pos:position pos:line="81" pos:column="31"/></name></expr>]<pos:position pos:line="81" pos:column="32"/></index></name> <operator pos:line="81" pos:column="33">=<pos:position pos:line="81" pos:column="34"/></operator> <name pos:line="81" pos:column="35">save_offset1<pos:position pos:line="81" pos:column="47"/></name></expr>;<pos:position pos:line="81" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="82" pos:column="7">md<pos:position pos:line="82" pos:column="9"/></name><operator pos:line="82" pos:column="9">-&gt;<pos:position pos:line="82" pos:column="14"/></operator><name pos:line="82" pos:column="11">offset_vector<pos:position pos:line="82" pos:column="24"/></name><index pos:line="82" pos:column="24">[<expr><name pos:line="82" pos:column="25">offset<pos:position pos:line="82" pos:column="31"/></name><operator pos:line="82" pos:column="31">+<pos:position pos:line="82" pos:column="32"/></operator><literal type="number" pos:line="82" pos:column="32">1<pos:position pos:line="82" pos:column="33"/></literal></expr>]<pos:position pos:line="82" pos:column="34"/></index></name> <operator pos:line="82" pos:column="35">=<pos:position pos:line="82" pos:column="36"/></operator> <name pos:line="82" pos:column="37">save_offset2<pos:position pos:line="82" pos:column="49"/></name></expr>;<pos:position pos:line="82" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="83" pos:column="7">md<pos:position pos:line="83" pos:column="9"/></name><operator pos:line="83" pos:column="9">-&gt;<pos:position pos:line="83" pos:column="14"/></operator><name pos:line="83" pos:column="11">offset_vector<pos:position pos:line="83" pos:column="24"/></name><index pos:line="83" pos:column="24">[<expr><name><name pos:line="83" pos:column="25">md<pos:position pos:line="83" pos:column="27"/></name><operator pos:line="83" pos:column="27">-&gt;<pos:position pos:line="83" pos:column="32"/></operator><name pos:line="83" pos:column="29">offset_end<pos:position pos:line="83" pos:column="39"/></name></name> <operator pos:line="83" pos:column="40">-<pos:position pos:line="83" pos:column="41"/></operator> <name pos:line="83" pos:column="42">number<pos:position pos:line="83" pos:column="48"/></name></expr>]<pos:position pos:line="83" pos:column="49"/></index></name> <operator pos:line="83" pos:column="50">=<pos:position pos:line="83" pos:column="51"/></operator> <name pos:line="83" pos:column="52">save_offset3<pos:position pos:line="83" pos:column="64"/></name></expr>;<pos:position pos:line="83" pos:column="65"/></expr_stmt>

      <return pos:line="85" pos:column="7">return <expr><name pos:line="85" pos:column="14">FALSE<pos:position pos:line="85" pos:column="19"/></name></expr>;<pos:position pos:line="85" pos:column="20"/></return>
      }<pos:position pos:line="86" pos:column="8"/></block></then>

    <comment type="block" pos:line="88" pos:column="5">/* Insufficient room for saving captured contents */</comment>

    <else pos:line="90" pos:column="5">else <block type="pseudo"><expr_stmt><expr><name pos:line="90" pos:column="10">op<pos:position pos:line="90" pos:column="12"/></name> <operator pos:line="90" pos:column="13">=<pos:position pos:line="90" pos:column="14"/></operator> <name pos:line="90" pos:column="15">OP_BRA<pos:position pos:line="90" pos:column="21"/></name></expr>;<pos:position pos:line="90" pos:column="22"/></expr_stmt></block></else></if>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="93" pos:column="3">/* Other types of node can be handled by a switch */</comment>

  <switch pos:line="95" pos:column="3">switch<condition pos:line="95" pos:column="9">(<expr><name pos:line="95" pos:column="10">op<pos:position pos:line="95" pos:column="12"/></name></expr>)<pos:position pos:line="95" pos:column="13"/></condition>
    <block pos:line="96" pos:column="5">{
    <case pos:line="97" pos:column="5">case <expr><name pos:line="97" pos:column="10">OP_BRA<pos:position pos:line="97" pos:column="16"/></name></expr>:<pos:position pos:line="97" pos:column="17"/></case>     <comment type="block" pos:line="97" pos:column="22">/* Non-capturing bracket: optimized */</comment>
    <expr_stmt><expr><call><name pos:line="98" pos:column="5">DPRINTF<pos:position pos:line="98" pos:column="12"/></name><argument_list pos:line="98" pos:column="12">(<argument><expr><operator pos:line="98" pos:column="13">(<pos:position pos:line="98" pos:column="14"/></operator><literal type="string" pos:line="98" pos:column="14">"start bracket 0\n"<pos:position pos:line="98" pos:column="33"/></literal><operator pos:line="98" pos:column="33">)<pos:position pos:line="98" pos:column="34"/></operator></expr></argument>)<pos:position pos:line="98" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="36"/></expr_stmt>
    <do pos:line="99" pos:column="5">do
      <block pos:line="100" pos:column="7">{
      <if pos:line="101" pos:column="7">if <condition pos:line="101" pos:column="10">(<expr><call><name pos:line="101" pos:column="11">match<pos:position pos:line="101" pos:column="16"/></name><argument_list pos:line="101" pos:column="16">(<argument><expr><name pos:line="101" pos:column="17">eptr<pos:position pos:line="101" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="23">ecode<pos:position pos:line="101" pos:column="28"/></name><operator pos:line="101" pos:column="28">+<pos:position pos:line="101" pos:column="29"/></operator><literal type="number" pos:line="101" pos:column="29">3<pos:position pos:line="101" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="32">offset_top<pos:position pos:line="101" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="44">md<pos:position pos:line="101" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="48">ims<pos:position pos:line="101" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="53">eptrb<pos:position pos:line="101" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="60">match_isgroup<pos:position pos:line="101" pos:column="73"/></name></expr></argument>)<pos:position pos:line="101" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="101" pos:column="75"/></condition><then pos:line="101" pos:column="75">
        <block type="pseudo"><return pos:line="102" pos:column="9">return <expr><name pos:line="102" pos:column="16">TRUE<pos:position pos:line="102" pos:column="20"/></name></expr>;<pos:position pos:line="102" pos:column="21"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="103" pos:column="7">ecode<pos:position pos:line="103" pos:column="12"/></name> <operator pos:line="103" pos:column="13">+=<pos:position pos:line="103" pos:column="15"/></operator> <operator pos:line="103" pos:column="16">(<pos:position pos:line="103" pos:column="17"/></operator><name><name pos:line="103" pos:column="17">ecode<pos:position pos:line="103" pos:column="22"/></name><index pos:line="103" pos:column="22">[<expr><literal type="number" pos:line="103" pos:column="23">1<pos:position pos:line="103" pos:column="24"/></literal></expr>]<pos:position pos:line="103" pos:column="25"/></index></name> <operator pos:line="103" pos:column="26">&lt;&lt;<pos:position pos:line="103" pos:column="34"/></operator> <literal type="number" pos:line="103" pos:column="29">8<pos:position pos:line="103" pos:column="30"/></literal><operator pos:line="103" pos:column="30">)<pos:position pos:line="103" pos:column="31"/></operator> <operator pos:line="103" pos:column="32">+<pos:position pos:line="103" pos:column="33"/></operator> <name><name pos:line="103" pos:column="34">ecode<pos:position pos:line="103" pos:column="39"/></name><index pos:line="103" pos:column="39">[<expr><literal type="number" pos:line="103" pos:column="40">2<pos:position pos:line="103" pos:column="41"/></literal></expr>]<pos:position pos:line="103" pos:column="42"/></index></name></expr>;<pos:position pos:line="103" pos:column="43"/></expr_stmt>
      }<pos:position pos:line="104" pos:column="8"/></block>
    while <condition pos:line="105" pos:column="11">(<expr><operator pos:line="105" pos:column="12">*<pos:position pos:line="105" pos:column="13"/></operator><name pos:line="105" pos:column="13">ecode<pos:position pos:line="105" pos:column="18"/></name> <operator pos:line="105" pos:column="19">==<pos:position pos:line="105" pos:column="21"/></operator> <name pos:line="105" pos:column="22">OP_ALT<pos:position pos:line="105" pos:column="28"/></name></expr>)<pos:position pos:line="105" pos:column="29"/></condition>;<pos:position pos:line="105" pos:column="30"/></do>
    <expr_stmt><expr><call><name pos:line="106" pos:column="5">DPRINTF<pos:position pos:line="106" pos:column="12"/></name><argument_list pos:line="106" pos:column="12">(<argument><expr><operator pos:line="106" pos:column="13">(<pos:position pos:line="106" pos:column="14"/></operator><literal type="string" pos:line="106" pos:column="14">"bracket 0 failed\n"<pos:position pos:line="106" pos:column="34"/></literal><operator pos:line="106" pos:column="34">)<pos:position pos:line="106" pos:column="35"/></operator></expr></argument>)<pos:position pos:line="106" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="37"/></expr_stmt>
    <return pos:line="107" pos:column="5">return <expr><name pos:line="107" pos:column="12">FALSE<pos:position pos:line="107" pos:column="17"/></name></expr>;<pos:position pos:line="107" pos:column="18"/></return>

    <comment type="block" pos:line="109" pos:column="5">/* Conditional group: compilation checked that there are no more than
    two branches. If the condition is false, skipping the first branch takes us
    past the end if there is only one branch, but that's OK because that is
    exactly what going to the ket would do. */</comment>

    <case pos:line="114" pos:column="5">case <expr><name pos:line="114" pos:column="10">OP_COND<pos:position pos:line="114" pos:column="17"/></name></expr>:<pos:position pos:line="114" pos:column="18"/></case>
    <if pos:line="115" pos:column="5">if <condition pos:line="115" pos:column="8">(<expr><name><name pos:line="115" pos:column="9">ecode<pos:position pos:line="115" pos:column="14"/></name><index pos:line="115" pos:column="14">[<expr><literal type="number" pos:line="115" pos:column="15">3<pos:position pos:line="115" pos:column="16"/></literal></expr>]<pos:position pos:line="115" pos:column="17"/></index></name> <operator pos:line="115" pos:column="18">==<pos:position pos:line="115" pos:column="20"/></operator> <name pos:line="115" pos:column="21">OP_CREF<pos:position pos:line="115" pos:column="28"/></name></expr>)<pos:position pos:line="115" pos:column="29"/></condition><then pos:line="115" pos:column="29">         <comment type="block" pos:line="115" pos:column="38">/* Condition is extraction test */</comment>
      <block pos:line="116" pos:column="7">{
      <decl_stmt><decl><type><name pos:line="117" pos:column="7">int<pos:position pos:line="117" pos:column="10"/></name></type> <name pos:line="117" pos:column="11">offset<pos:position pos:line="117" pos:column="17"/></name> <init pos:line="117" pos:column="18">= <expr><operator pos:line="117" pos:column="20">(<pos:position pos:line="117" pos:column="21"/></operator><name><name pos:line="117" pos:column="21">ecode<pos:position pos:line="117" pos:column="26"/></name><index pos:line="117" pos:column="26">[<expr><literal type="number" pos:line="117" pos:column="27">4<pos:position pos:line="117" pos:column="28"/></literal></expr>]<pos:position pos:line="117" pos:column="29"/></index></name> <operator pos:line="117" pos:column="30">&lt;&lt;<pos:position pos:line="117" pos:column="38"/></operator> <literal type="number" pos:line="117" pos:column="33">9<pos:position pos:line="117" pos:column="34"/></literal><operator pos:line="117" pos:column="34">)<pos:position pos:line="117" pos:column="35"/></operator> <operator pos:line="117" pos:column="36">|<pos:position pos:line="117" pos:column="37"/></operator> <operator pos:line="117" pos:column="38">(<pos:position pos:line="117" pos:column="39"/></operator><name><name pos:line="117" pos:column="39">ecode<pos:position pos:line="117" pos:column="44"/></name><index pos:line="117" pos:column="44">[<expr><literal type="number" pos:line="117" pos:column="45">5<pos:position pos:line="117" pos:column="46"/></literal></expr>]<pos:position pos:line="117" pos:column="47"/></index></name> <operator pos:line="117" pos:column="48">&lt;&lt;<pos:position pos:line="117" pos:column="56"/></operator> <literal type="number" pos:line="117" pos:column="51">1<pos:position pos:line="117" pos:column="52"/></literal><operator pos:line="117" pos:column="52">)<pos:position pos:line="117" pos:column="53"/></operator></expr></init></decl>;<pos:position pos:line="117" pos:column="54"/></decl_stmt> <comment type="block" pos:line="117" pos:column="55">/* Doubled ref number */</comment>
      <return pos:line="118" pos:column="7">return <expr><call><name pos:line="118" pos:column="14">match<pos:position pos:line="118" pos:column="19"/></name><argument_list pos:line="118" pos:column="19">(<argument><expr><name pos:line="118" pos:column="20">eptr<pos:position pos:line="118" pos:column="24"/></name></expr></argument>,
        <argument><expr><name pos:line="119" pos:column="9">ecode<pos:position pos:line="119" pos:column="14"/></name> <operator pos:line="119" pos:column="15">+<pos:position pos:line="119" pos:column="16"/></operator> <operator pos:line="119" pos:column="17">(<pos:position pos:line="119" pos:column="18"/></operator><ternary><condition><expr><operator pos:line="119" pos:column="18">(<pos:position pos:line="119" pos:column="19"/></operator><name pos:line="119" pos:column="19">offset<pos:position pos:line="119" pos:column="25"/></name> <operator pos:line="119" pos:column="26">&lt;<pos:position pos:line="119" pos:column="30"/></operator> <name pos:line="119" pos:column="28">offset_top<pos:position pos:line="119" pos:column="38"/></name> <operator pos:line="119" pos:column="39">&amp;&amp;<pos:position pos:line="119" pos:column="49"/></operator> <name><name pos:line="119" pos:column="42">md<pos:position pos:line="119" pos:column="44"/></name><operator pos:line="119" pos:column="44">-&gt;<pos:position pos:line="119" pos:column="49"/></operator><name pos:line="119" pos:column="46">offset_vector<pos:position pos:line="119" pos:column="59"/></name><index pos:line="119" pos:column="59">[<expr><name pos:line="119" pos:column="60">offset<pos:position pos:line="119" pos:column="66"/></name></expr>]<pos:position pos:line="119" pos:column="67"/></index></name> <operator pos:line="119" pos:column="68">&gt;=<pos:position pos:line="119" pos:column="73"/></operator> <literal type="number" pos:line="119" pos:column="71">0<pos:position pos:line="119" pos:column="72"/></literal><operator pos:line="119" pos:column="72">)<pos:position pos:line="119" pos:column="73"/></operator></expr>?<pos:position pos:line="119" pos:column="74"/></condition><then pos:line="119" pos:column="74">
          <expr><literal type="number" pos:line="120" pos:column="11">6<pos:position pos:line="120" pos:column="12"/></literal></expr> <pos:position pos:line="120" pos:column="13"/></then><else pos:line="120" pos:column="13">: <expr><literal type="number" pos:line="120" pos:column="15">3<pos:position pos:line="120" pos:column="16"/></literal> <operator pos:line="120" pos:column="17">+<pos:position pos:line="120" pos:column="18"/></operator> <operator pos:line="120" pos:column="19">(<pos:position pos:line="120" pos:column="20"/></operator><name><name pos:line="120" pos:column="20">ecode<pos:position pos:line="120" pos:column="25"/></name><index pos:line="120" pos:column="25">[<expr><literal type="number" pos:line="120" pos:column="26">1<pos:position pos:line="120" pos:column="27"/></literal></expr>]<pos:position pos:line="120" pos:column="28"/></index></name> <operator pos:line="120" pos:column="29">&lt;&lt;<pos:position pos:line="120" pos:column="37"/></operator> <literal type="number" pos:line="120" pos:column="32">8<pos:position pos:line="120" pos:column="33"/></literal><operator pos:line="120" pos:column="33">)<pos:position pos:line="120" pos:column="34"/></operator> <operator pos:line="120" pos:column="35">+<pos:position pos:line="120" pos:column="36"/></operator> <name><name pos:line="120" pos:column="37">ecode<pos:position pos:line="120" pos:column="42"/></name><index pos:line="120" pos:column="42">[<expr><literal type="number" pos:line="120" pos:column="43">2<pos:position pos:line="120" pos:column="44"/></literal></expr>]<pos:position pos:line="120" pos:column="45"/></index></name></expr></else></ternary><operator pos:line="120" pos:column="45">)<pos:position pos:line="120" pos:column="46"/></operator></expr></argument>,
        <argument><expr><name pos:line="121" pos:column="9">offset_top<pos:position pos:line="121" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="21">md<pos:position pos:line="121" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="25">ims<pos:position pos:line="121" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="30">eptrb<pos:position pos:line="121" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="37">match_isgroup<pos:position pos:line="121" pos:column="50"/></name></expr></argument>)<pos:position pos:line="121" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="52"/></return>
      }<pos:position pos:line="122" pos:column="8"/></block></then>

    <comment type="block" pos:line="124" pos:column="5">/* The condition is an assertion. Call match() to evaluate it - setting
    the final argument TRUE causes it to stop at the end of an assertion. */</comment>

    <else pos:line="127" pos:column="5">else
      <block pos:line="128" pos:column="7">{
      <if pos:line="129" pos:column="7">if <condition pos:line="129" pos:column="10">(<expr><call><name pos:line="129" pos:column="11">match<pos:position pos:line="129" pos:column="16"/></name><argument_list pos:line="129" pos:column="16">(<argument><expr><name pos:line="129" pos:column="17">eptr<pos:position pos:line="129" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="23">ecode<pos:position pos:line="129" pos:column="28"/></name><operator pos:line="129" pos:column="28">+<pos:position pos:line="129" pos:column="29"/></operator><literal type="number" pos:line="129" pos:column="29">3<pos:position pos:line="129" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="129" pos:column="32">offset_top<pos:position pos:line="129" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="44">md<pos:position pos:line="129" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="48">ims<pos:position pos:line="129" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="53">NULL<pos:position pos:line="129" pos:column="57"/></name></expr></argument>,
          <argument><expr><name pos:line="130" pos:column="11">match_condassert<pos:position pos:line="130" pos:column="27"/></name> <operator pos:line="130" pos:column="28">|<pos:position pos:line="130" pos:column="29"/></operator> <name pos:line="130" pos:column="30">match_isgroup<pos:position pos:line="130" pos:column="43"/></name></expr></argument>)<pos:position pos:line="130" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="130" pos:column="45"/></condition><then pos:line="130" pos:column="45">
        <block pos:line="131" pos:column="9">{
        <expr_stmt><expr><name pos:line="132" pos:column="9">ecode<pos:position pos:line="132" pos:column="14"/></name> <operator pos:line="132" pos:column="15">+=<pos:position pos:line="132" pos:column="17"/></operator> <literal type="number" pos:line="132" pos:column="18">3<pos:position pos:line="132" pos:column="19"/></literal> <operator pos:line="132" pos:column="20">+<pos:position pos:line="132" pos:column="21"/></operator> <operator pos:line="132" pos:column="22">(<pos:position pos:line="132" pos:column="23"/></operator><name><name pos:line="132" pos:column="23">ecode<pos:position pos:line="132" pos:column="28"/></name><index pos:line="132" pos:column="28">[<expr><literal type="number" pos:line="132" pos:column="29">4<pos:position pos:line="132" pos:column="30"/></literal></expr>]<pos:position pos:line="132" pos:column="31"/></index></name> <operator pos:line="132" pos:column="32">&lt;&lt;<pos:position pos:line="132" pos:column="40"/></operator> <literal type="number" pos:line="132" pos:column="35">8<pos:position pos:line="132" pos:column="36"/></literal><operator pos:line="132" pos:column="36">)<pos:position pos:line="132" pos:column="37"/></operator> <operator pos:line="132" pos:column="38">+<pos:position pos:line="132" pos:column="39"/></operator> <name><name pos:line="132" pos:column="40">ecode<pos:position pos:line="132" pos:column="45"/></name><index pos:line="132" pos:column="45">[<expr><literal type="number" pos:line="132" pos:column="46">5<pos:position pos:line="132" pos:column="47"/></literal></expr>]<pos:position pos:line="132" pos:column="48"/></index></name></expr>;<pos:position pos:line="132" pos:column="49"/></expr_stmt>
        <while pos:line="133" pos:column="9">while <condition pos:line="133" pos:column="15">(<expr><operator pos:line="133" pos:column="16">*<pos:position pos:line="133" pos:column="17"/></operator><name pos:line="133" pos:column="17">ecode<pos:position pos:line="133" pos:column="22"/></name> <operator pos:line="133" pos:column="23">==<pos:position pos:line="133" pos:column="25"/></operator> <name pos:line="133" pos:column="26">OP_ALT<pos:position pos:line="133" pos:column="32"/></name></expr>)<pos:position pos:line="133" pos:column="33"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="133" pos:column="34">ecode<pos:position pos:line="133" pos:column="39"/></name> <operator pos:line="133" pos:column="40">+=<pos:position pos:line="133" pos:column="42"/></operator> <operator pos:line="133" pos:column="43">(<pos:position pos:line="133" pos:column="44"/></operator><name><name pos:line="133" pos:column="44">ecode<pos:position pos:line="133" pos:column="49"/></name><index pos:line="133" pos:column="49">[<expr><literal type="number" pos:line="133" pos:column="50">1<pos:position pos:line="133" pos:column="51"/></literal></expr>]<pos:position pos:line="133" pos:column="52"/></index></name> <operator pos:line="133" pos:column="53">&lt;&lt;<pos:position pos:line="133" pos:column="61"/></operator> <literal type="number" pos:line="133" pos:column="56">8<pos:position pos:line="133" pos:column="57"/></literal><operator pos:line="133" pos:column="57">)<pos:position pos:line="133" pos:column="58"/></operator> <operator pos:line="133" pos:column="59">+<pos:position pos:line="133" pos:column="60"/></operator> <name><name pos:line="133" pos:column="61">ecode<pos:position pos:line="133" pos:column="66"/></name><index pos:line="133" pos:column="66">[<expr><literal type="number" pos:line="133" pos:column="67">2<pos:position pos:line="133" pos:column="68"/></literal></expr>]<pos:position pos:line="133" pos:column="69"/></index></name></expr>;<pos:position pos:line="133" pos:column="70"/></expr_stmt></block></while>
        }<pos:position pos:line="134" pos:column="10"/></block></then>
      <else pos:line="135" pos:column="7">else <block type="pseudo"><expr_stmt><expr><name pos:line="135" pos:column="12">ecode<pos:position pos:line="135" pos:column="17"/></name> <operator pos:line="135" pos:column="18">+=<pos:position pos:line="135" pos:column="20"/></operator> <operator pos:line="135" pos:column="21">(<pos:position pos:line="135" pos:column="22"/></operator><name><name pos:line="135" pos:column="22">ecode<pos:position pos:line="135" pos:column="27"/></name><index pos:line="135" pos:column="27">[<expr><literal type="number" pos:line="135" pos:column="28">1<pos:position pos:line="135" pos:column="29"/></literal></expr>]<pos:position pos:line="135" pos:column="30"/></index></name> <operator pos:line="135" pos:column="31">&lt;&lt;<pos:position pos:line="135" pos:column="39"/></operator> <literal type="number" pos:line="135" pos:column="34">8<pos:position pos:line="135" pos:column="35"/></literal><operator pos:line="135" pos:column="35">)<pos:position pos:line="135" pos:column="36"/></operator> <operator pos:line="135" pos:column="37">+<pos:position pos:line="135" pos:column="38"/></operator> <name><name pos:line="135" pos:column="39">ecode<pos:position pos:line="135" pos:column="44"/></name><index pos:line="135" pos:column="44">[<expr><literal type="number" pos:line="135" pos:column="45">2<pos:position pos:line="135" pos:column="46"/></literal></expr>]<pos:position pos:line="135" pos:column="47"/></index></name></expr>;<pos:position pos:line="135" pos:column="48"/></expr_stmt></block></else></if>
      <return pos:line="136" pos:column="7">return <expr><call><name pos:line="136" pos:column="14">match<pos:position pos:line="136" pos:column="19"/></name><argument_list pos:line="136" pos:column="19">(<argument><expr><name pos:line="136" pos:column="20">eptr<pos:position pos:line="136" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="26">ecode<pos:position pos:line="136" pos:column="31"/></name><operator pos:line="136" pos:column="31">+<pos:position pos:line="136" pos:column="32"/></operator><literal type="number" pos:line="136" pos:column="32">3<pos:position pos:line="136" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="136" pos:column="35">offset_top<pos:position pos:line="136" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="47">md<pos:position pos:line="136" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="51">ims<pos:position pos:line="136" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="56">eptrb<pos:position pos:line="136" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="63">match_isgroup<pos:position pos:line="136" pos:column="76"/></name></expr></argument>)<pos:position pos:line="136" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="78"/></return>
      }<pos:position pos:line="137" pos:column="8"/></block></else></if>
    <comment type="block" pos:line="138" pos:column="5">/* Control never reaches here */</comment>

    <comment type="block" pos:line="140" pos:column="5">/* Skip over conditional reference or large extraction number data if
    encountered. */</comment>

    <case pos:line="143" pos:column="5">case <expr><name pos:line="143" pos:column="10">OP_CREF<pos:position pos:line="143" pos:column="17"/></name></expr>:<pos:position pos:line="143" pos:column="18"/></case>
    <case pos:line="144" pos:column="5">case <expr><name pos:line="144" pos:column="10">OP_BRANUMBER<pos:position pos:line="144" pos:column="22"/></name></expr>:<pos:position pos:line="144" pos:column="23"/></case>
    <expr_stmt><expr><name pos:line="145" pos:column="5">ecode<pos:position pos:line="145" pos:column="10"/></name> <operator pos:line="145" pos:column="11">+=<pos:position pos:line="145" pos:column="13"/></operator> <literal type="number" pos:line="145" pos:column="14">3<pos:position pos:line="145" pos:column="15"/></literal></expr>;<pos:position pos:line="145" pos:column="16"/></expr_stmt>
    <break pos:line="146" pos:column="5">break;<pos:position pos:line="146" pos:column="11"/></break>

    <comment type="block" pos:line="148" pos:column="5">/* End of the pattern. If PCRE_NOTEMPTY is set, fail if we have matched
    an empty string - recursion will then try other alternatives, if any. */</comment>

    <case pos:line="151" pos:column="5">case <expr><name pos:line="151" pos:column="10">OP_END<pos:position pos:line="151" pos:column="16"/></name></expr>:<pos:position pos:line="151" pos:column="17"/></case>
    <if pos:line="152" pos:column="5">if <condition pos:line="152" pos:column="8">(<expr><name><name pos:line="152" pos:column="9">md<pos:position pos:line="152" pos:column="11"/></name><operator pos:line="152" pos:column="11">-&gt;<pos:position pos:line="152" pos:column="16"/></operator><name pos:line="152" pos:column="13">notempty<pos:position pos:line="152" pos:column="21"/></name></name> <operator pos:line="152" pos:column="22">&amp;&amp;<pos:position pos:line="152" pos:column="32"/></operator> <name pos:line="152" pos:column="25">eptr<pos:position pos:line="152" pos:column="29"/></name> <operator pos:line="152" pos:column="30">==<pos:position pos:line="152" pos:column="32"/></operator> <name><name pos:line="152" pos:column="33">md<pos:position pos:line="152" pos:column="35"/></name><operator pos:line="152" pos:column="35">-&gt;<pos:position pos:line="152" pos:column="40"/></operator><name pos:line="152" pos:column="37">start_match<pos:position pos:line="152" pos:column="48"/></name></name></expr>)<pos:position pos:line="152" pos:column="49"/></condition><then pos:line="152" pos:column="49"> <block type="pseudo"><return pos:line="152" pos:column="50">return <expr><name pos:line="152" pos:column="57">FALSE<pos:position pos:line="152" pos:column="62"/></name></expr>;<pos:position pos:line="152" pos:column="63"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="153" pos:column="5">md<pos:position pos:line="153" pos:column="7"/></name><operator pos:line="153" pos:column="7">-&gt;<pos:position pos:line="153" pos:column="12"/></operator><name pos:line="153" pos:column="9">end_match_ptr<pos:position pos:line="153" pos:column="22"/></name></name> <operator pos:line="153" pos:column="23">=<pos:position pos:line="153" pos:column="24"/></operator> <name pos:line="153" pos:column="25">eptr<pos:position pos:line="153" pos:column="29"/></name></expr>;<pos:position pos:line="153" pos:column="30"/></expr_stmt>          <comment type="block" pos:line="153" pos:column="40">/* Record where we ended */</comment>
    <expr_stmt><expr><name><name pos:line="154" pos:column="5">md<pos:position pos:line="154" pos:column="7"/></name><operator pos:line="154" pos:column="7">-&gt;<pos:position pos:line="154" pos:column="12"/></operator><name pos:line="154" pos:column="9">end_offset_top<pos:position pos:line="154" pos:column="23"/></name></name> <operator pos:line="154" pos:column="24">=<pos:position pos:line="154" pos:column="25"/></operator> <name pos:line="154" pos:column="26">offset_top<pos:position pos:line="154" pos:column="36"/></name></expr>;<pos:position pos:line="154" pos:column="37"/></expr_stmt>   <comment type="block" pos:line="154" pos:column="40">/* and how many extracts were taken */</comment>
    <return pos:line="155" pos:column="5">return <expr><name pos:line="155" pos:column="12">TRUE<pos:position pos:line="155" pos:column="16"/></name></expr>;<pos:position pos:line="155" pos:column="17"/></return>

    <comment type="block" pos:line="157" pos:column="5">/* Change option settings */</comment>

    <case pos:line="159" pos:column="5">case <expr><name pos:line="159" pos:column="10">OP_OPT<pos:position pos:line="159" pos:column="16"/></name></expr>:<pos:position pos:line="159" pos:column="17"/></case>
    <expr_stmt><expr><name pos:line="160" pos:column="5">ims<pos:position pos:line="160" pos:column="8"/></name> <operator pos:line="160" pos:column="9">=<pos:position pos:line="160" pos:column="10"/></operator> <name><name pos:line="160" pos:column="11">ecode<pos:position pos:line="160" pos:column="16"/></name><index pos:line="160" pos:column="16">[<expr><literal type="number" pos:line="160" pos:column="17">1<pos:position pos:line="160" pos:column="18"/></literal></expr>]<pos:position pos:line="160" pos:column="19"/></index></name></expr>;<pos:position pos:line="160" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="161" pos:column="5">ecode<pos:position pos:line="161" pos:column="10"/></name> <operator pos:line="161" pos:column="11">+=<pos:position pos:line="161" pos:column="13"/></operator> <literal type="number" pos:line="161" pos:column="14">2<pos:position pos:line="161" pos:column="15"/></literal></expr>;<pos:position pos:line="161" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="162" pos:column="5">DPRINTF<pos:position pos:line="162" pos:column="12"/></name><argument_list pos:line="162" pos:column="12">(<argument><expr><operator pos:line="162" pos:column="13">(<pos:position pos:line="162" pos:column="14"/></operator><literal type="string" pos:line="162" pos:column="14">"ims set to %02lx\n"<pos:position pos:line="162" pos:column="34"/></literal><operator pos:line="162" pos:column="34">,<pos:position pos:line="162" pos:column="35"/></operator> <name pos:line="162" pos:column="36">ims<pos:position pos:line="162" pos:column="39"/></name><operator pos:line="162" pos:column="39">)<pos:position pos:line="162" pos:column="40"/></operator></expr></argument>)<pos:position pos:line="162" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="42"/></expr_stmt>
    <break pos:line="163" pos:column="5">break;<pos:position pos:line="163" pos:column="11"/></break>

    <comment type="block" pos:line="165" pos:column="5">/* Assertion brackets. Check the alternative branches in turn - the
    matching won't pass the KET for an assertion. If any one branch matches,
    the assertion is true. Lookbehind assertions have an OP_REVERSE item at the
    start of each branch to move the current point backwards, so the code at
    this level is identical to the lookahead case. */</comment>

    <case pos:line="171" pos:column="5">case <expr><name pos:line="171" pos:column="10">OP_ASSERT<pos:position pos:line="171" pos:column="19"/></name></expr>:<pos:position pos:line="171" pos:column="20"/></case>
    <case pos:line="172" pos:column="5">case <expr><name pos:line="172" pos:column="10">OP_ASSERTBACK<pos:position pos:line="172" pos:column="23"/></name></expr>:<pos:position pos:line="172" pos:column="24"/></case>
    <do pos:line="173" pos:column="5">do
      <block pos:line="174" pos:column="7">{
      <if pos:line="175" pos:column="7">if <condition pos:line="175" pos:column="10">(<expr><call><name pos:line="175" pos:column="11">match<pos:position pos:line="175" pos:column="16"/></name><argument_list pos:line="175" pos:column="16">(<argument><expr><name pos:line="175" pos:column="17">eptr<pos:position pos:line="175" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="23">ecode<pos:position pos:line="175" pos:column="28"/></name><operator pos:line="175" pos:column="28">+<pos:position pos:line="175" pos:column="29"/></operator><literal type="number" pos:line="175" pos:column="29">3<pos:position pos:line="175" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="175" pos:column="32">offset_top<pos:position pos:line="175" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="44">md<pos:position pos:line="175" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="48">ims<pos:position pos:line="175" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="53">NULL<pos:position pos:line="175" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="59">match_isgroup<pos:position pos:line="175" pos:column="72"/></name></expr></argument>)<pos:position pos:line="175" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="175" pos:column="74"/></condition><then pos:line="175" pos:column="74"> <block type="pseudo"><break pos:line="175" pos:column="75">break;<pos:position pos:line="175" pos:column="81"/></break></block></then></if>
      <expr_stmt><expr><name pos:line="176" pos:column="7">ecode<pos:position pos:line="176" pos:column="12"/></name> <operator pos:line="176" pos:column="13">+=<pos:position pos:line="176" pos:column="15"/></operator> <operator pos:line="176" pos:column="16">(<pos:position pos:line="176" pos:column="17"/></operator><name><name pos:line="176" pos:column="17">ecode<pos:position pos:line="176" pos:column="22"/></name><index pos:line="176" pos:column="22">[<expr><literal type="number" pos:line="176" pos:column="23">1<pos:position pos:line="176" pos:column="24"/></literal></expr>]<pos:position pos:line="176" pos:column="25"/></index></name> <operator pos:line="176" pos:column="26">&lt;&lt;<pos:position pos:line="176" pos:column="34"/></operator> <literal type="number" pos:line="176" pos:column="29">8<pos:position pos:line="176" pos:column="30"/></literal><operator pos:line="176" pos:column="30">)<pos:position pos:line="176" pos:column="31"/></operator> <operator pos:line="176" pos:column="32">+<pos:position pos:line="176" pos:column="33"/></operator> <name><name pos:line="176" pos:column="34">ecode<pos:position pos:line="176" pos:column="39"/></name><index pos:line="176" pos:column="39">[<expr><literal type="number" pos:line="176" pos:column="40">2<pos:position pos:line="176" pos:column="41"/></literal></expr>]<pos:position pos:line="176" pos:column="42"/></index></name></expr>;<pos:position pos:line="176" pos:column="43"/></expr_stmt>
      }<pos:position pos:line="177" pos:column="8"/></block>
    while <condition pos:line="178" pos:column="11">(<expr><operator pos:line="178" pos:column="12">*<pos:position pos:line="178" pos:column="13"/></operator><name pos:line="178" pos:column="13">ecode<pos:position pos:line="178" pos:column="18"/></name> <operator pos:line="178" pos:column="19">==<pos:position pos:line="178" pos:column="21"/></operator> <name pos:line="178" pos:column="22">OP_ALT<pos:position pos:line="178" pos:column="28"/></name></expr>)<pos:position pos:line="178" pos:column="29"/></condition>;<pos:position pos:line="178" pos:column="30"/></do>
    <if pos:line="179" pos:column="5">if <condition pos:line="179" pos:column="8">(<expr><operator pos:line="179" pos:column="9">*<pos:position pos:line="179" pos:column="10"/></operator><name pos:line="179" pos:column="10">ecode<pos:position pos:line="179" pos:column="15"/></name> <operator pos:line="179" pos:column="16">==<pos:position pos:line="179" pos:column="18"/></operator> <name pos:line="179" pos:column="19">OP_KET<pos:position pos:line="179" pos:column="25"/></name></expr>)<pos:position pos:line="179" pos:column="26"/></condition><then pos:line="179" pos:column="26"> <block type="pseudo"><return pos:line="179" pos:column="27">return <expr><name pos:line="179" pos:column="34">FALSE<pos:position pos:line="179" pos:column="39"/></name></expr>;<pos:position pos:line="179" pos:column="40"/></return></block></then></if>

    <comment type="block" pos:line="181" pos:column="5">/* If checking an assertion for a condition, return TRUE. */</comment>

    <if pos:line="183" pos:column="5">if <condition pos:line="183" pos:column="8">(<expr><operator pos:line="183" pos:column="9">(<pos:position pos:line="183" pos:column="10"/></operator><name pos:line="183" pos:column="10">flags<pos:position pos:line="183" pos:column="15"/></name> <operator pos:line="183" pos:column="16">&amp;<pos:position pos:line="183" pos:column="21"/></operator> <name pos:line="183" pos:column="18">match_condassert<pos:position pos:line="183" pos:column="34"/></name><operator pos:line="183" pos:column="34">)<pos:position pos:line="183" pos:column="35"/></operator> <operator pos:line="183" pos:column="36">!=<pos:position pos:line="183" pos:column="38"/></operator> <literal type="number" pos:line="183" pos:column="39">0<pos:position pos:line="183" pos:column="40"/></literal></expr>)<pos:position pos:line="183" pos:column="41"/></condition><then pos:line="183" pos:column="41"> <block type="pseudo"><return pos:line="183" pos:column="42">return <expr><name pos:line="183" pos:column="49">TRUE<pos:position pos:line="183" pos:column="53"/></name></expr>;<pos:position pos:line="183" pos:column="54"/></return></block></then></if>

    <comment type="block" pos:line="185" pos:column="5">/* Continue from after the assertion, updating the offsets high water
    mark, since extracts may have been taken during the assertion. */</comment>

    <do pos:line="188" pos:column="5">do <block type="pseudo"><expr_stmt><expr><name pos:line="188" pos:column="8">ecode<pos:position pos:line="188" pos:column="13"/></name> <operator pos:line="188" pos:column="14">+=<pos:position pos:line="188" pos:column="16"/></operator> <operator pos:line="188" pos:column="17">(<pos:position pos:line="188" pos:column="18"/></operator><name><name pos:line="188" pos:column="18">ecode<pos:position pos:line="188" pos:column="23"/></name><index pos:line="188" pos:column="23">[<expr><literal type="number" pos:line="188" pos:column="24">1<pos:position pos:line="188" pos:column="25"/></literal></expr>]<pos:position pos:line="188" pos:column="26"/></index></name> <operator pos:line="188" pos:column="27">&lt;&lt;<pos:position pos:line="188" pos:column="35"/></operator> <literal type="number" pos:line="188" pos:column="30">8<pos:position pos:line="188" pos:column="31"/></literal><operator pos:line="188" pos:column="31">)<pos:position pos:line="188" pos:column="32"/></operator> <operator pos:line="188" pos:column="33">+<pos:position pos:line="188" pos:column="34"/></operator> <name><name pos:line="188" pos:column="35">ecode<pos:position pos:line="188" pos:column="40"/></name><index pos:line="188" pos:column="40">[<expr><literal type="number" pos:line="188" pos:column="41">2<pos:position pos:line="188" pos:column="42"/></literal></expr>]<pos:position pos:line="188" pos:column="43"/></index></name></expr>;<pos:position pos:line="188" pos:column="44"/></expr_stmt></block> while <condition pos:line="188" pos:column="51">(<expr><operator pos:line="188" pos:column="52">*<pos:position pos:line="188" pos:column="53"/></operator><name pos:line="188" pos:column="53">ecode<pos:position pos:line="188" pos:column="58"/></name> <operator pos:line="188" pos:column="59">==<pos:position pos:line="188" pos:column="61"/></operator> <name pos:line="188" pos:column="62">OP_ALT<pos:position pos:line="188" pos:column="68"/></name></expr>)<pos:position pos:line="188" pos:column="69"/></condition>;<pos:position pos:line="188" pos:column="70"/></do>
    <expr_stmt><expr><name pos:line="189" pos:column="5">ecode<pos:position pos:line="189" pos:column="10"/></name> <operator pos:line="189" pos:column="11">+=<pos:position pos:line="189" pos:column="13"/></operator> <literal type="number" pos:line="189" pos:column="14">3<pos:position pos:line="189" pos:column="15"/></literal></expr>;<pos:position pos:line="189" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="190" pos:column="5">offset_top<pos:position pos:line="190" pos:column="15"/></name> <operator pos:line="190" pos:column="16">=<pos:position pos:line="190" pos:column="17"/></operator> <name><name pos:line="190" pos:column="18">md<pos:position pos:line="190" pos:column="20"/></name><operator pos:line="190" pos:column="20">-&gt;<pos:position pos:line="190" pos:column="25"/></operator><name pos:line="190" pos:column="22">end_offset_top<pos:position pos:line="190" pos:column="36"/></name></name></expr>;<pos:position pos:line="190" pos:column="37"/></expr_stmt>
    <continue pos:line="191" pos:column="5">continue;<pos:position pos:line="191" pos:column="14"/></continue>

    <comment type="block" pos:line="193" pos:column="5">/* Negative assertion: all branches must fail to match */</comment>

    <case pos:line="195" pos:column="5">case <expr><name pos:line="195" pos:column="10">OP_ASSERT_NOT<pos:position pos:line="195" pos:column="23"/></name></expr>:<pos:position pos:line="195" pos:column="24"/></case>
    <case pos:line="196" pos:column="5">case <expr><name pos:line="196" pos:column="10">OP_ASSERTBACK_NOT<pos:position pos:line="196" pos:column="27"/></name></expr>:<pos:position pos:line="196" pos:column="28"/></case>
    <do pos:line="197" pos:column="5">do
      <block pos:line="198" pos:column="7">{
      <if pos:line="199" pos:column="7">if <condition pos:line="199" pos:column="10">(<expr><call><name pos:line="199" pos:column="11">match<pos:position pos:line="199" pos:column="16"/></name><argument_list pos:line="199" pos:column="16">(<argument><expr><name pos:line="199" pos:column="17">eptr<pos:position pos:line="199" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="23">ecode<pos:position pos:line="199" pos:column="28"/></name><operator pos:line="199" pos:column="28">+<pos:position pos:line="199" pos:column="29"/></operator><literal type="number" pos:line="199" pos:column="29">3<pos:position pos:line="199" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="199" pos:column="32">offset_top<pos:position pos:line="199" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="44">md<pos:position pos:line="199" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="48">ims<pos:position pos:line="199" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="53">NULL<pos:position pos:line="199" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="59">match_isgroup<pos:position pos:line="199" pos:column="72"/></name></expr></argument>)<pos:position pos:line="199" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="199" pos:column="74"/></condition><then pos:line="199" pos:column="74">
        <block type="pseudo"><return pos:line="200" pos:column="9">return <expr><name pos:line="200" pos:column="16">FALSE<pos:position pos:line="200" pos:column="21"/></name></expr>;<pos:position pos:line="200" pos:column="22"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="201" pos:column="7">ecode<pos:position pos:line="201" pos:column="12"/></name> <operator pos:line="201" pos:column="13">+=<pos:position pos:line="201" pos:column="15"/></operator> <operator pos:line="201" pos:column="16">(<pos:position pos:line="201" pos:column="17"/></operator><name><name pos:line="201" pos:column="17">ecode<pos:position pos:line="201" pos:column="22"/></name><index pos:line="201" pos:column="22">[<expr><literal type="number" pos:line="201" pos:column="23">1<pos:position pos:line="201" pos:column="24"/></literal></expr>]<pos:position pos:line="201" pos:column="25"/></index></name> <operator pos:line="201" pos:column="26">&lt;&lt;<pos:position pos:line="201" pos:column="34"/></operator> <literal type="number" pos:line="201" pos:column="29">8<pos:position pos:line="201" pos:column="30"/></literal><operator pos:line="201" pos:column="30">)<pos:position pos:line="201" pos:column="31"/></operator> <operator pos:line="201" pos:column="32">+<pos:position pos:line="201" pos:column="33"/></operator> <name><name pos:line="201" pos:column="34">ecode<pos:position pos:line="201" pos:column="39"/></name><index pos:line="201" pos:column="39">[<expr><literal type="number" pos:line="201" pos:column="40">2<pos:position pos:line="201" pos:column="41"/></literal></expr>]<pos:position pos:line="201" pos:column="42"/></index></name></expr>;<pos:position pos:line="201" pos:column="43"/></expr_stmt>
      }<pos:position pos:line="202" pos:column="8"/></block>
    while <condition pos:line="203" pos:column="11">(<expr><operator pos:line="203" pos:column="12">*<pos:position pos:line="203" pos:column="13"/></operator><name pos:line="203" pos:column="13">ecode<pos:position pos:line="203" pos:column="18"/></name> <operator pos:line="203" pos:column="19">==<pos:position pos:line="203" pos:column="21"/></operator> <name pos:line="203" pos:column="22">OP_ALT<pos:position pos:line="203" pos:column="28"/></name></expr>)<pos:position pos:line="203" pos:column="29"/></condition>;<pos:position pos:line="203" pos:column="30"/></do>

    <if pos:line="205" pos:column="5">if <condition pos:line="205" pos:column="8">(<expr><operator pos:line="205" pos:column="9">(<pos:position pos:line="205" pos:column="10"/></operator><name pos:line="205" pos:column="10">flags<pos:position pos:line="205" pos:column="15"/></name> <operator pos:line="205" pos:column="16">&amp;<pos:position pos:line="205" pos:column="21"/></operator> <name pos:line="205" pos:column="18">match_condassert<pos:position pos:line="205" pos:column="34"/></name><operator pos:line="205" pos:column="34">)<pos:position pos:line="205" pos:column="35"/></operator> <operator pos:line="205" pos:column="36">!=<pos:position pos:line="205" pos:column="38"/></operator> <literal type="number" pos:line="205" pos:column="39">0<pos:position pos:line="205" pos:column="40"/></literal></expr>)<pos:position pos:line="205" pos:column="41"/></condition><then pos:line="205" pos:column="41"> <block type="pseudo"><return pos:line="205" pos:column="42">return <expr><name pos:line="205" pos:column="49">TRUE<pos:position pos:line="205" pos:column="53"/></name></expr>;<pos:position pos:line="205" pos:column="54"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="207" pos:column="5">ecode<pos:position pos:line="207" pos:column="10"/></name> <operator pos:line="207" pos:column="11">+=<pos:position pos:line="207" pos:column="13"/></operator> <literal type="number" pos:line="207" pos:column="14">3<pos:position pos:line="207" pos:column="15"/></literal></expr>;<pos:position pos:line="207" pos:column="16"/></expr_stmt>
    <continue pos:line="208" pos:column="5">continue;<pos:position pos:line="208" pos:column="14"/></continue>

    <comment type="block" pos:line="210" pos:column="5">/* Move the subject pointer back. This occurs only at the start of
    each branch of a lookbehind assertion. If we are too close to the start to
    move back, this match function fails. When working with UTF-8 we move
    back a number of characters, not bytes. */</comment>

    <case pos:line="215" pos:column="5">case <expr><name pos:line="215" pos:column="10">OP_REVERSE<pos:position pos:line="215" pos:column="20"/></name></expr>:<pos:position pos:line="215" pos:column="21"/></case>
<cpp:ifdef pos:line="216" pos:column="1">#<cpp:directive pos:line="216" pos:column="2">ifdef<pos:position pos:line="216" pos:column="7"/></cpp:directive> <name pos:line="216" pos:column="8">SUPPORT_UTF8<pos:position pos:line="216" pos:column="20"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="217" pos:column="5">c<pos:position pos:line="217" pos:column="6"/></name> <operator pos:line="217" pos:column="7">=<pos:position pos:line="217" pos:column="8"/></operator> <operator pos:line="217" pos:column="9">(<pos:position pos:line="217" pos:column="10"/></operator><name><name pos:line="217" pos:column="10">ecode<pos:position pos:line="217" pos:column="15"/></name><index pos:line="217" pos:column="15">[<expr><literal type="number" pos:line="217" pos:column="16">1<pos:position pos:line="217" pos:column="17"/></literal></expr>]<pos:position pos:line="217" pos:column="18"/></index></name> <operator pos:line="217" pos:column="19">&lt;&lt;<pos:position pos:line="217" pos:column="27"/></operator> <literal type="number" pos:line="217" pos:column="22">8<pos:position pos:line="217" pos:column="23"/></literal><operator pos:line="217" pos:column="23">)<pos:position pos:line="217" pos:column="24"/></operator> <operator pos:line="217" pos:column="25">+<pos:position pos:line="217" pos:column="26"/></operator> <name><name pos:line="217" pos:column="27">ecode<pos:position pos:line="217" pos:column="32"/></name><index pos:line="217" pos:column="32">[<expr><literal type="number" pos:line="217" pos:column="33">2<pos:position pos:line="217" pos:column="34"/></literal></expr>]<pos:position pos:line="217" pos:column="35"/></index></name></expr>;<pos:position pos:line="217" pos:column="36"/></expr_stmt>
    <for pos:line="218" pos:column="5">for <control pos:line="218" pos:column="9">(<init><expr><name pos:line="218" pos:column="10">i<pos:position pos:line="218" pos:column="11"/></name> <operator pos:line="218" pos:column="12">=<pos:position pos:line="218" pos:column="13"/></operator> <literal type="number" pos:line="218" pos:column="14">0<pos:position pos:line="218" pos:column="15"/></literal></expr>;<pos:position pos:line="218" pos:column="16"/></init> <condition><expr><name pos:line="218" pos:column="17">i<pos:position pos:line="218" pos:column="18"/></name> <operator pos:line="218" pos:column="19">&lt;<pos:position pos:line="218" pos:column="23"/></operator> <name pos:line="218" pos:column="21">c<pos:position pos:line="218" pos:column="22"/></name></expr>;<pos:position pos:line="218" pos:column="23"/></condition> <incr><expr><name pos:line="218" pos:column="24">i<pos:position pos:line="218" pos:column="25"/></name><operator pos:line="218" pos:column="25">++<pos:position pos:line="218" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="218" pos:column="28"/></control>
      <block pos:line="219" pos:column="7">{
      <expr_stmt><expr><name pos:line="220" pos:column="7">eptr<pos:position pos:line="220" pos:column="11"/></name><operator pos:line="220" pos:column="11">--<pos:position pos:line="220" pos:column="13"/></operator></expr>;<pos:position pos:line="220" pos:column="14"/></expr_stmt>
      <macro><name pos:line="221" pos:column="7">BACKCHAR<pos:position pos:line="221" pos:column="15"/></name><argument_list pos:line="221" pos:column="15">(<argument pos:line="221" pos:column="16">eptr<pos:position pos:line="221" pos:column="20"/></argument>)<pos:position pos:line="221" pos:column="21"/></argument_list></macro>
      }<pos:position pos:line="222" pos:column="8"/></block></for>
<cpp:else pos:line="223" pos:column="1">#<cpp:directive pos:line="223" pos:column="2">else<pos:position pos:line="223" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="224" pos:column="5">eptr<pos:position pos:line="224" pos:column="9"/></name> <operator pos:line="224" pos:column="10">-=<pos:position pos:line="224" pos:column="12"/></operator> <operator pos:line="224" pos:column="13">(<pos:position pos:line="224" pos:column="14"/></operator><name><name pos:line="224" pos:column="14">ecode<pos:position pos:line="224" pos:column="19"/></name><index pos:line="224" pos:column="19">[<expr><literal type="number" pos:line="224" pos:column="20">1<pos:position pos:line="224" pos:column="21"/></literal></expr>]<pos:position pos:line="224" pos:column="22"/></index></name> <operator pos:line="224" pos:column="23">&lt;&lt;<pos:position pos:line="224" pos:column="31"/></operator> <literal type="number" pos:line="224" pos:column="26">8<pos:position pos:line="224" pos:column="27"/></literal><operator pos:line="224" pos:column="27">)<pos:position pos:line="224" pos:column="28"/></operator> <operator pos:line="224" pos:column="29">+<pos:position pos:line="224" pos:column="30"/></operator> <name><name pos:line="224" pos:column="31">ecode<pos:position pos:line="224" pos:column="36"/></name><index pos:line="224" pos:column="36">[<expr><literal type="number" pos:line="224" pos:column="37">2<pos:position pos:line="224" pos:column="38"/></literal></expr>]<pos:position pos:line="224" pos:column="39"/></index></name></expr>;<pos:position pos:line="224" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="225" pos:column="1">#<cpp:directive pos:line="225" pos:column="2">endif<pos:position pos:line="225" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="227" pos:column="5">if <condition pos:line="227" pos:column="8">(<expr><name pos:line="227" pos:column="9">eptr<pos:position pos:line="227" pos:column="13"/></name> <operator pos:line="227" pos:column="14">&lt;<pos:position pos:line="227" pos:column="18"/></operator> <name><name pos:line="227" pos:column="16">md<pos:position pos:line="227" pos:column="18"/></name><operator pos:line="227" pos:column="18">-&gt;<pos:position pos:line="227" pos:column="23"/></operator><name pos:line="227" pos:column="20">start_subject<pos:position pos:line="227" pos:column="33"/></name></name></expr>)<pos:position pos:line="227" pos:column="34"/></condition><then pos:line="227" pos:column="34"> <block type="pseudo"><return pos:line="227" pos:column="35">return <expr><name pos:line="227" pos:column="42">FALSE<pos:position pos:line="227" pos:column="47"/></name></expr>;<pos:position pos:line="227" pos:column="48"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="228" pos:column="5">ecode<pos:position pos:line="228" pos:column="10"/></name> <operator pos:line="228" pos:column="11">+=<pos:position pos:line="228" pos:column="13"/></operator> <literal type="number" pos:line="228" pos:column="14">3<pos:position pos:line="228" pos:column="15"/></literal></expr>;<pos:position pos:line="228" pos:column="16"/></expr_stmt>
    <break pos:line="229" pos:column="5">break;<pos:position pos:line="229" pos:column="11"/></break>

    <comment type="block" pos:line="231" pos:column="5">/* Recursion matches the current regex, nested. If there are any capturing
    brackets started but not finished, we have to save their starting points
    and reinstate them after the recursion. However, we don't know how many
    such there are (offset_top records the completed total) so we just have
    to save all the potential data. There may be up to 99 such values, which
    is a bit large to put on the stack, but using malloc for small numbers
    seems expensive. As a compromise, the stack is used when there are fewer
    than 16 values to store; otherwise malloc is used. A problem is what to do
    if the malloc fails ... there is no way of returning to the top level with
    an error. Save the top 15 values on the stack, and accept that the rest
    may be wrong. */</comment>

    <case pos:line="243" pos:column="5">case <expr><name pos:line="243" pos:column="10">OP_RECURSE<pos:position pos:line="243" pos:column="20"/></name></expr>:<pos:position pos:line="243" pos:column="21"/></case>
      <block pos:line="244" pos:column="7">{
      <decl_stmt><decl><type><name pos:line="245" pos:column="7">BOOL<pos:position pos:line="245" pos:column="11"/></name></type> <name pos:line="245" pos:column="12">rc<pos:position pos:line="245" pos:column="14"/></name></decl>;<pos:position pos:line="245" pos:column="15"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="246" pos:column="7">int<pos:position pos:line="246" pos:column="10"/></name> <modifier pos:line="246" pos:column="11">*<pos:position pos:line="246" pos:column="12"/></modifier></type><name pos:line="246" pos:column="12">save<pos:position pos:line="246" pos:column="16"/></name></decl>;<pos:position pos:line="246" pos:column="17"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="247" pos:column="7">int<pos:position pos:line="247" pos:column="10"/></name></type> <name><name pos:line="247" pos:column="11">stacksave<pos:position pos:line="247" pos:column="20"/></name><index pos:line="247" pos:column="20">[<expr><literal type="number" pos:line="247" pos:column="21">15<pos:position pos:line="247" pos:column="23"/></literal></expr>]<pos:position pos:line="247" pos:column="24"/></index></name></decl>;<pos:position pos:line="247" pos:column="25"/></decl_stmt>

      <expr_stmt><expr><name pos:line="249" pos:column="7">c<pos:position pos:line="249" pos:column="8"/></name> <operator pos:line="249" pos:column="9">=<pos:position pos:line="249" pos:column="10"/></operator> <name><name pos:line="249" pos:column="11">md<pos:position pos:line="249" pos:column="13"/></name><operator pos:line="249" pos:column="13">-&gt;<pos:position pos:line="249" pos:column="18"/></operator><name pos:line="249" pos:column="15">offset_max<pos:position pos:line="249" pos:column="25"/></name></name></expr>;<pos:position pos:line="249" pos:column="26"/></expr_stmt>

      <if pos:line="251" pos:column="7">if <condition pos:line="251" pos:column="10">(<expr><name pos:line="251" pos:column="11">c<pos:position pos:line="251" pos:column="12"/></name> <operator pos:line="251" pos:column="13">&lt;<pos:position pos:line="251" pos:column="17"/></operator> <literal type="number" pos:line="251" pos:column="15">16<pos:position pos:line="251" pos:column="17"/></literal></expr>)<pos:position pos:line="251" pos:column="18"/></condition><then pos:line="251" pos:column="18"> <block type="pseudo"><expr_stmt><expr><name pos:line="251" pos:column="19">save<pos:position pos:line="251" pos:column="23"/></name> <operator pos:line="251" pos:column="24">=<pos:position pos:line="251" pos:column="25"/></operator> <name pos:line="251" pos:column="26">stacksave<pos:position pos:line="251" pos:column="35"/></name></expr>;<pos:position pos:line="251" pos:column="36"/></expr_stmt></block></then> <else pos:line="251" pos:column="37">else
        <block pos:line="252" pos:column="9">{
        <expr_stmt><expr><name pos:line="253" pos:column="9">save<pos:position pos:line="253" pos:column="13"/></name> <operator pos:line="253" pos:column="14">=<pos:position pos:line="253" pos:column="15"/></operator> <operator pos:line="253" pos:column="16">(<pos:position pos:line="253" pos:column="17"/></operator><name pos:line="253" pos:column="17">int<pos:position pos:line="253" pos:column="20"/></name> <operator pos:line="253" pos:column="21">*<pos:position pos:line="253" pos:column="22"/></operator><operator pos:line="253" pos:column="22">)<pos:position pos:line="253" pos:column="23"/></operator><call pos:line="253" pos:column="23">(<name pos:line="253" pos:column="24">pcre_malloc<pos:position pos:line="253" pos:column="35"/></name>)<argument_list pos:line="253" pos:column="36">(<argument><expr><operator pos:line="253" pos:column="37">(<pos:position pos:line="253" pos:column="38"/></operator><name pos:line="253" pos:column="38">c<pos:position pos:line="253" pos:column="39"/></name><operator pos:line="253" pos:column="39">+<pos:position pos:line="253" pos:column="40"/></operator><literal type="number" pos:line="253" pos:column="40">1<pos:position pos:line="253" pos:column="41"/></literal><operator pos:line="253" pos:column="41">)<pos:position pos:line="253" pos:column="42"/></operator> <operator pos:line="253" pos:column="43">*<pos:position pos:line="253" pos:column="44"/></operator> <sizeof pos:line="253" pos:column="45">sizeof<argument_list pos:line="253" pos:column="51">(<argument><expr><name pos:line="253" pos:column="52">int<pos:position pos:line="253" pos:column="55"/></name></expr></argument>)<pos:position pos:line="253" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="253" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="58"/></expr_stmt>
        <if pos:line="254" pos:column="9">if <condition pos:line="254" pos:column="12">(<expr><name pos:line="254" pos:column="13">save<pos:position pos:line="254" pos:column="17"/></name> <operator pos:line="254" pos:column="18">==<pos:position pos:line="254" pos:column="20"/></operator> <name pos:line="254" pos:column="21">NULL<pos:position pos:line="254" pos:column="25"/></name></expr>)<pos:position pos:line="254" pos:column="26"/></condition><then pos:line="254" pos:column="26">
          <block pos:line="255" pos:column="11">{
          <expr_stmt><expr><name pos:line="256" pos:column="11">save<pos:position pos:line="256" pos:column="15"/></name> <operator pos:line="256" pos:column="16">=<pos:position pos:line="256" pos:column="17"/></operator> <name pos:line="256" pos:column="18">stacksave<pos:position pos:line="256" pos:column="27"/></name></expr>;<pos:position pos:line="256" pos:column="28"/></expr_stmt>
          <expr_stmt><expr><name pos:line="257" pos:column="11">c<pos:position pos:line="257" pos:column="12"/></name> <operator pos:line="257" pos:column="13">=<pos:position pos:line="257" pos:column="14"/></operator> <literal type="number" pos:line="257" pos:column="15">15<pos:position pos:line="257" pos:column="17"/></literal></expr>;<pos:position pos:line="257" pos:column="18"/></expr_stmt>
          }<pos:position pos:line="258" pos:column="12"/></block></then></if>
        }<pos:position pos:line="259" pos:column="10"/></block></else></if>

      <for pos:line="261" pos:column="7">for <control pos:line="261" pos:column="11">(<init><expr><name pos:line="261" pos:column="12">i<pos:position pos:line="261" pos:column="13"/></name> <operator pos:line="261" pos:column="14">=<pos:position pos:line="261" pos:column="15"/></operator> <literal type="number" pos:line="261" pos:column="16">1<pos:position pos:line="261" pos:column="17"/></literal></expr>;<pos:position pos:line="261" pos:column="18"/></init> <condition><expr><name pos:line="261" pos:column="19">i<pos:position pos:line="261" pos:column="20"/></name> <operator pos:line="261" pos:column="21">&lt;=<pos:position pos:line="261" pos:column="26"/></operator> <name pos:line="261" pos:column="24">c<pos:position pos:line="261" pos:column="25"/></name></expr>;<pos:position pos:line="261" pos:column="26"/></condition> <incr><expr><name pos:line="261" pos:column="27">i<pos:position pos:line="261" pos:column="28"/></name><operator pos:line="261" pos:column="28">++<pos:position pos:line="261" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="261" pos:column="31"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="262" pos:column="9">save<pos:position pos:line="262" pos:column="13"/></name><index pos:line="262" pos:column="13">[<expr><name pos:line="262" pos:column="14">i<pos:position pos:line="262" pos:column="15"/></name></expr>]<pos:position pos:line="262" pos:column="16"/></index></name> <operator pos:line="262" pos:column="17">=<pos:position pos:line="262" pos:column="18"/></operator> <name><name pos:line="262" pos:column="19">md<pos:position pos:line="262" pos:column="21"/></name><operator pos:line="262" pos:column="21">-&gt;<pos:position pos:line="262" pos:column="26"/></operator><name pos:line="262" pos:column="23">offset_vector<pos:position pos:line="262" pos:column="36"/></name><index pos:line="262" pos:column="36">[<expr><name><name pos:line="262" pos:column="37">md<pos:position pos:line="262" pos:column="39"/></name><operator pos:line="262" pos:column="39">-&gt;<pos:position pos:line="262" pos:column="44"/></operator><name pos:line="262" pos:column="41">offset_end<pos:position pos:line="262" pos:column="51"/></name></name> <operator pos:line="262" pos:column="52">-<pos:position pos:line="262" pos:column="53"/></operator> <name pos:line="262" pos:column="54">i<pos:position pos:line="262" pos:column="55"/></name></expr>]<pos:position pos:line="262" pos:column="56"/></index></name></expr>;<pos:position pos:line="262" pos:column="57"/></expr_stmt></block></for>
      <expr_stmt><expr><name pos:line="263" pos:column="7">rc<pos:position pos:line="263" pos:column="9"/></name> <operator pos:line="263" pos:column="10">=<pos:position pos:line="263" pos:column="11"/></operator> <call><name pos:line="263" pos:column="12">match<pos:position pos:line="263" pos:column="17"/></name><argument_list pos:line="263" pos:column="17">(<argument><expr><name pos:line="263" pos:column="18">eptr<pos:position pos:line="263" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="263" pos:column="24">md<pos:position pos:line="263" pos:column="26"/></name><operator pos:line="263" pos:column="26">-&gt;<pos:position pos:line="263" pos:column="31"/></operator><name pos:line="263" pos:column="28">start_pattern<pos:position pos:line="263" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="43">offset_top<pos:position pos:line="263" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="55">md<pos:position pos:line="263" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="59">ims<pos:position pos:line="263" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="64">eptrb<pos:position pos:line="263" pos:column="69"/></name></expr></argument>,
        <argument><expr><name pos:line="264" pos:column="9">match_isgroup<pos:position pos:line="264" pos:column="22"/></name></expr></argument>)<pos:position pos:line="264" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="24"/></expr_stmt>
      <for pos:line="265" pos:column="7">for <control pos:line="265" pos:column="11">(<init><expr><name pos:line="265" pos:column="12">i<pos:position pos:line="265" pos:column="13"/></name> <operator pos:line="265" pos:column="14">=<pos:position pos:line="265" pos:column="15"/></operator> <literal type="number" pos:line="265" pos:column="16">1<pos:position pos:line="265" pos:column="17"/></literal></expr>;<pos:position pos:line="265" pos:column="18"/></init> <condition><expr><name pos:line="265" pos:column="19">i<pos:position pos:line="265" pos:column="20"/></name> <operator pos:line="265" pos:column="21">&lt;=<pos:position pos:line="265" pos:column="26"/></operator> <name pos:line="265" pos:column="24">c<pos:position pos:line="265" pos:column="25"/></name></expr>;<pos:position pos:line="265" pos:column="26"/></condition> <incr><expr><name pos:line="265" pos:column="27">i<pos:position pos:line="265" pos:column="28"/></name><operator pos:line="265" pos:column="28">++<pos:position pos:line="265" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="265" pos:column="31"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="266" pos:column="9">md<pos:position pos:line="266" pos:column="11"/></name><operator pos:line="266" pos:column="11">-&gt;<pos:position pos:line="266" pos:column="16"/></operator><name pos:line="266" pos:column="13">offset_vector<pos:position pos:line="266" pos:column="26"/></name><index pos:line="266" pos:column="26">[<expr><name><name pos:line="266" pos:column="27">md<pos:position pos:line="266" pos:column="29"/></name><operator pos:line="266" pos:column="29">-&gt;<pos:position pos:line="266" pos:column="34"/></operator><name pos:line="266" pos:column="31">offset_end<pos:position pos:line="266" pos:column="41"/></name></name> <operator pos:line="266" pos:column="42">-<pos:position pos:line="266" pos:column="43"/></operator> <name pos:line="266" pos:column="44">i<pos:position pos:line="266" pos:column="45"/></name></expr>]<pos:position pos:line="266" pos:column="46"/></index></name> <operator pos:line="266" pos:column="47">=<pos:position pos:line="266" pos:column="48"/></operator> <name><name pos:line="266" pos:column="49">save<pos:position pos:line="266" pos:column="53"/></name><index pos:line="266" pos:column="53">[<expr><name pos:line="266" pos:column="54">i<pos:position pos:line="266" pos:column="55"/></name></expr>]<pos:position pos:line="266" pos:column="56"/></index></name></expr>;<pos:position pos:line="266" pos:column="57"/></expr_stmt></block></for>
      <if pos:line="267" pos:column="7">if <condition pos:line="267" pos:column="10">(<expr><name pos:line="267" pos:column="11">save<pos:position pos:line="267" pos:column="15"/></name> <operator pos:line="267" pos:column="16">!=<pos:position pos:line="267" pos:column="18"/></operator> <name pos:line="267" pos:column="19">stacksave<pos:position pos:line="267" pos:column="28"/></name></expr>)<pos:position pos:line="267" pos:column="29"/></condition><then pos:line="267" pos:column="29"> <block type="pseudo"><expr_stmt><expr><call pos:line="267" pos:column="30">(<name pos:line="267" pos:column="31">pcre_free<pos:position pos:line="267" pos:column="40"/></name>)<argument_list pos:line="267" pos:column="41">(<argument><expr><name pos:line="267" pos:column="42">save<pos:position pos:line="267" pos:column="46"/></name></expr></argument>)<pos:position pos:line="267" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="48"/></expr_stmt></block></then></if>
      <if pos:line="268" pos:column="7">if <condition pos:line="268" pos:column="10">(<expr><operator pos:line="268" pos:column="11">!<pos:position pos:line="268" pos:column="12"/></operator><name pos:line="268" pos:column="12">rc<pos:position pos:line="268" pos:column="14"/></name></expr>)<pos:position pos:line="268" pos:column="15"/></condition><then pos:line="268" pos:column="15"> <block type="pseudo"><return pos:line="268" pos:column="16">return <expr><name pos:line="268" pos:column="23">FALSE<pos:position pos:line="268" pos:column="28"/></name></expr>;<pos:position pos:line="268" pos:column="29"/></return></block></then></if>

      <comment type="block" pos:line="270" pos:column="7">/* In case the recursion has set more capturing values, save the final
      number, then move along the subject till after the recursive match,
      and advance one byte in the pattern code. */</comment>

      <expr_stmt><expr><name pos:line="274" pos:column="7">offset_top<pos:position pos:line="274" pos:column="17"/></name> <operator pos:line="274" pos:column="18">=<pos:position pos:line="274" pos:column="19"/></operator> <name><name pos:line="274" pos:column="20">md<pos:position pos:line="274" pos:column="22"/></name><operator pos:line="274" pos:column="22">-&gt;<pos:position pos:line="274" pos:column="27"/></operator><name pos:line="274" pos:column="24">end_offset_top<pos:position pos:line="274" pos:column="38"/></name></name></expr>;<pos:position pos:line="274" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name pos:line="275" pos:column="7">eptr<pos:position pos:line="275" pos:column="11"/></name> <operator pos:line="275" pos:column="12">=<pos:position pos:line="275" pos:column="13"/></operator> <name><name pos:line="275" pos:column="14">md<pos:position pos:line="275" pos:column="16"/></name><operator pos:line="275" pos:column="16">-&gt;<pos:position pos:line="275" pos:column="21"/></operator><name pos:line="275" pos:column="18">end_match_ptr<pos:position pos:line="275" pos:column="31"/></name></name></expr>;<pos:position pos:line="275" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name pos:line="276" pos:column="7">ecode<pos:position pos:line="276" pos:column="12"/></name><operator pos:line="276" pos:column="12">++<pos:position pos:line="276" pos:column="14"/></operator></expr>;<pos:position pos:line="276" pos:column="15"/></expr_stmt>
      }<pos:position pos:line="277" pos:column="8"/></block>
    <break pos:line="278" pos:column="5">break;<pos:position pos:line="278" pos:column="11"/></break>

    <comment type="block" pos:line="280" pos:column="5">/* "Once" brackets are like assertion brackets except that after a match,
    the point in the subject string is not moved back. Thus there can never be
    a move back into the brackets. Check the alternative branches in turn - the
    matching won't pass the KET for this kind of subpattern. If any one branch
    matches, we carry on as at the end of a normal bracket, leaving the subject
    pointer. */</comment>

    <case pos:line="287" pos:column="5">case <expr><name pos:line="287" pos:column="10">OP_ONCE<pos:position pos:line="287" pos:column="17"/></name></expr>:<pos:position pos:line="287" pos:column="18"/></case>
      <block pos:line="288" pos:column="7">{
      <decl_stmt><decl><type><specifier pos:line="289" pos:column="7">const<pos:position pos:line="289" pos:column="12"/></specifier> <name pos:line="289" pos:column="13">uschar<pos:position pos:line="289" pos:column="19"/></name> <modifier pos:line="289" pos:column="20">*<pos:position pos:line="289" pos:column="21"/></modifier></type><name pos:line="289" pos:column="21">prev<pos:position pos:line="289" pos:column="25"/></name> <init pos:line="289" pos:column="26">= <expr><name pos:line="289" pos:column="28">ecode<pos:position pos:line="289" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="289" pos:column="34"/></decl_stmt>
      <decl_stmt><decl><type><specifier pos:line="290" pos:column="7">const<pos:position pos:line="290" pos:column="12"/></specifier> <name pos:line="290" pos:column="13">uschar<pos:position pos:line="290" pos:column="19"/></name> <modifier pos:line="290" pos:column="20">*<pos:position pos:line="290" pos:column="21"/></modifier></type><name pos:line="290" pos:column="21">saved_eptr<pos:position pos:line="290" pos:column="31"/></name> <init pos:line="290" pos:column="32">= <expr><name pos:line="290" pos:column="34">eptr<pos:position pos:line="290" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="290" pos:column="39"/></decl_stmt>

      <do pos:line="292" pos:column="7">do
        <block pos:line="293" pos:column="9">{
        <if pos:line="294" pos:column="9">if <condition pos:line="294" pos:column="12">(<expr><call><name pos:line="294" pos:column="13">match<pos:position pos:line="294" pos:column="18"/></name><argument_list pos:line="294" pos:column="18">(<argument><expr><name pos:line="294" pos:column="19">eptr<pos:position pos:line="294" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="294" pos:column="25">ecode<pos:position pos:line="294" pos:column="30"/></name><operator pos:line="294" pos:column="30">+<pos:position pos:line="294" pos:column="31"/></operator><literal type="number" pos:line="294" pos:column="31">3<pos:position pos:line="294" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="294" pos:column="34">offset_top<pos:position pos:line="294" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="294" pos:column="46">md<pos:position pos:line="294" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="294" pos:column="50">ims<pos:position pos:line="294" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="294" pos:column="55">eptrb<pos:position pos:line="294" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="294" pos:column="62">match_isgroup<pos:position pos:line="294" pos:column="75"/></name></expr></argument>)<pos:position pos:line="294" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="294" pos:column="77"/></condition><then pos:line="294" pos:column="77">
          <block type="pseudo"><break pos:line="295" pos:column="11">break;<pos:position pos:line="295" pos:column="17"/></break></block></then></if>
        <expr_stmt><expr><name pos:line="296" pos:column="9">ecode<pos:position pos:line="296" pos:column="14"/></name> <operator pos:line="296" pos:column="15">+=<pos:position pos:line="296" pos:column="17"/></operator> <operator pos:line="296" pos:column="18">(<pos:position pos:line="296" pos:column="19"/></operator><name><name pos:line="296" pos:column="19">ecode<pos:position pos:line="296" pos:column="24"/></name><index pos:line="296" pos:column="24">[<expr><literal type="number" pos:line="296" pos:column="25">1<pos:position pos:line="296" pos:column="26"/></literal></expr>]<pos:position pos:line="296" pos:column="27"/></index></name> <operator pos:line="296" pos:column="28">&lt;&lt;<pos:position pos:line="296" pos:column="36"/></operator> <literal type="number" pos:line="296" pos:column="31">8<pos:position pos:line="296" pos:column="32"/></literal><operator pos:line="296" pos:column="32">)<pos:position pos:line="296" pos:column="33"/></operator> <operator pos:line="296" pos:column="34">+<pos:position pos:line="296" pos:column="35"/></operator> <name><name pos:line="296" pos:column="36">ecode<pos:position pos:line="296" pos:column="41"/></name><index pos:line="296" pos:column="41">[<expr><literal type="number" pos:line="296" pos:column="42">2<pos:position pos:line="296" pos:column="43"/></literal></expr>]<pos:position pos:line="296" pos:column="44"/></index></name></expr>;<pos:position pos:line="296" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="297" pos:column="10"/></block>
      while <condition pos:line="298" pos:column="13">(<expr><operator pos:line="298" pos:column="14">*<pos:position pos:line="298" pos:column="15"/></operator><name pos:line="298" pos:column="15">ecode<pos:position pos:line="298" pos:column="20"/></name> <operator pos:line="298" pos:column="21">==<pos:position pos:line="298" pos:column="23"/></operator> <name pos:line="298" pos:column="24">OP_ALT<pos:position pos:line="298" pos:column="30"/></name></expr>)<pos:position pos:line="298" pos:column="31"/></condition>;<pos:position pos:line="298" pos:column="32"/></do>

      <comment type="block" pos:line="300" pos:column="7">/* If hit the end of the group (which could be repeated), fail */</comment>

      <if pos:line="302" pos:column="7">if <condition pos:line="302" pos:column="10">(<expr><operator pos:line="302" pos:column="11">*<pos:position pos:line="302" pos:column="12"/></operator><name pos:line="302" pos:column="12">ecode<pos:position pos:line="302" pos:column="17"/></name> <operator pos:line="302" pos:column="18">!=<pos:position pos:line="302" pos:column="20"/></operator> <name pos:line="302" pos:column="21">OP_ONCE<pos:position pos:line="302" pos:column="28"/></name> <operator pos:line="302" pos:column="29">&amp;&amp;<pos:position pos:line="302" pos:column="39"/></operator> <operator pos:line="302" pos:column="32">*<pos:position pos:line="302" pos:column="33"/></operator><name pos:line="302" pos:column="33">ecode<pos:position pos:line="302" pos:column="38"/></name> <operator pos:line="302" pos:column="39">!=<pos:position pos:line="302" pos:column="41"/></operator> <name pos:line="302" pos:column="42">OP_ALT<pos:position pos:line="302" pos:column="48"/></name></expr>)<pos:position pos:line="302" pos:column="49"/></condition><then pos:line="302" pos:column="49"> <block type="pseudo"><return pos:line="302" pos:column="50">return <expr><name pos:line="302" pos:column="57">FALSE<pos:position pos:line="302" pos:column="62"/></name></expr>;<pos:position pos:line="302" pos:column="63"/></return></block></then></if>

      <comment type="block" pos:line="304" pos:column="7">/* Continue as from after the assertion, updating the offsets high water
      mark, since extracts may have been taken. */</comment>

      <do pos:line="307" pos:column="7">do <block type="pseudo"><expr_stmt><expr><name pos:line="307" pos:column="10">ecode<pos:position pos:line="307" pos:column="15"/></name> <operator pos:line="307" pos:column="16">+=<pos:position pos:line="307" pos:column="18"/></operator> <operator pos:line="307" pos:column="19">(<pos:position pos:line="307" pos:column="20"/></operator><name><name pos:line="307" pos:column="20">ecode<pos:position pos:line="307" pos:column="25"/></name><index pos:line="307" pos:column="25">[<expr><literal type="number" pos:line="307" pos:column="26">1<pos:position pos:line="307" pos:column="27"/></literal></expr>]<pos:position pos:line="307" pos:column="28"/></index></name> <operator pos:line="307" pos:column="29">&lt;&lt;<pos:position pos:line="307" pos:column="37"/></operator> <literal type="number" pos:line="307" pos:column="32">8<pos:position pos:line="307" pos:column="33"/></literal><operator pos:line="307" pos:column="33">)<pos:position pos:line="307" pos:column="34"/></operator> <operator pos:line="307" pos:column="35">+<pos:position pos:line="307" pos:column="36"/></operator> <name><name pos:line="307" pos:column="37">ecode<pos:position pos:line="307" pos:column="42"/></name><index pos:line="307" pos:column="42">[<expr><literal type="number" pos:line="307" pos:column="43">2<pos:position pos:line="307" pos:column="44"/></literal></expr>]<pos:position pos:line="307" pos:column="45"/></index></name></expr>;<pos:position pos:line="307" pos:column="46"/></expr_stmt></block> while <condition pos:line="307" pos:column="53">(<expr><operator pos:line="307" pos:column="54">*<pos:position pos:line="307" pos:column="55"/></operator><name pos:line="307" pos:column="55">ecode<pos:position pos:line="307" pos:column="60"/></name> <operator pos:line="307" pos:column="61">==<pos:position pos:line="307" pos:column="63"/></operator> <name pos:line="307" pos:column="64">OP_ALT<pos:position pos:line="307" pos:column="70"/></name></expr>)<pos:position pos:line="307" pos:column="71"/></condition>;<pos:position pos:line="307" pos:column="72"/></do>

      <expr_stmt><expr><name pos:line="309" pos:column="7">offset_top<pos:position pos:line="309" pos:column="17"/></name> <operator pos:line="309" pos:column="18">=<pos:position pos:line="309" pos:column="19"/></operator> <name><name pos:line="309" pos:column="20">md<pos:position pos:line="309" pos:column="22"/></name><operator pos:line="309" pos:column="22">-&gt;<pos:position pos:line="309" pos:column="27"/></operator><name pos:line="309" pos:column="24">end_offset_top<pos:position pos:line="309" pos:column="38"/></name></name></expr>;<pos:position pos:line="309" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name pos:line="310" pos:column="7">eptr<pos:position pos:line="310" pos:column="11"/></name> <operator pos:line="310" pos:column="12">=<pos:position pos:line="310" pos:column="13"/></operator> <name><name pos:line="310" pos:column="14">md<pos:position pos:line="310" pos:column="16"/></name><operator pos:line="310" pos:column="16">-&gt;<pos:position pos:line="310" pos:column="21"/></operator><name pos:line="310" pos:column="18">end_match_ptr<pos:position pos:line="310" pos:column="31"/></name></name></expr>;<pos:position pos:line="310" pos:column="32"/></expr_stmt>

      <comment type="block" pos:line="312" pos:column="7">/* For a non-repeating ket, just continue at this level. This also
      happens for a repeating ket if no characters were matched in the group.
      This is the forcible breaking of infinite loops as implemented in Perl
      5.005. If there is an options reset, it will get obeyed in the normal
      course of events. */</comment>

      <if pos:line="318" pos:column="7">if <condition pos:line="318" pos:column="10">(<expr><operator pos:line="318" pos:column="11">*<pos:position pos:line="318" pos:column="12"/></operator><name pos:line="318" pos:column="12">ecode<pos:position pos:line="318" pos:column="17"/></name> <operator pos:line="318" pos:column="18">==<pos:position pos:line="318" pos:column="20"/></operator> <name pos:line="318" pos:column="21">OP_KET<pos:position pos:line="318" pos:column="27"/></name> <operator pos:line="318" pos:column="28">||<pos:position pos:line="318" pos:column="30"/></operator> <name pos:line="318" pos:column="31">eptr<pos:position pos:line="318" pos:column="35"/></name> <operator pos:line="318" pos:column="36">==<pos:position pos:line="318" pos:column="38"/></operator> <name pos:line="318" pos:column="39">saved_eptr<pos:position pos:line="318" pos:column="49"/></name></expr>)<pos:position pos:line="318" pos:column="50"/></condition><then pos:line="318" pos:column="50">
        <block pos:line="319" pos:column="9">{
        <expr_stmt><expr><name pos:line="320" pos:column="9">ecode<pos:position pos:line="320" pos:column="14"/></name> <operator pos:line="320" pos:column="15">+=<pos:position pos:line="320" pos:column="17"/></operator> <literal type="number" pos:line="320" pos:column="18">3<pos:position pos:line="320" pos:column="19"/></literal></expr>;<pos:position pos:line="320" pos:column="20"/></expr_stmt>
        <break pos:line="321" pos:column="9">break;<pos:position pos:line="321" pos:column="15"/></break>
        }<pos:position pos:line="322" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="324" pos:column="7">/* The repeating kets try the rest of the pattern or restart from the
      preceding bracket, in the appropriate order. We need to reset any options
      that changed within the bracket before re-running it, so check the next
      opcode. */</comment>

      <if pos:line="329" pos:column="7">if <condition pos:line="329" pos:column="10">(<expr><name><name pos:line="329" pos:column="11">ecode<pos:position pos:line="329" pos:column="16"/></name><index pos:line="329" pos:column="16">[<expr><literal type="number" pos:line="329" pos:column="17">3<pos:position pos:line="329" pos:column="18"/></literal></expr>]<pos:position pos:line="329" pos:column="19"/></index></name> <operator pos:line="329" pos:column="20">==<pos:position pos:line="329" pos:column="22"/></operator> <name pos:line="329" pos:column="23">OP_OPT<pos:position pos:line="329" pos:column="29"/></name></expr>)<pos:position pos:line="329" pos:column="30"/></condition><then pos:line="329" pos:column="30">
        <block pos:line="330" pos:column="9">{
        <expr_stmt><expr><name pos:line="331" pos:column="9">ims<pos:position pos:line="331" pos:column="12"/></name> <operator pos:line="331" pos:column="13">=<pos:position pos:line="331" pos:column="14"/></operator> <operator pos:line="331" pos:column="15">(<pos:position pos:line="331" pos:column="16"/></operator><name pos:line="331" pos:column="16">ims<pos:position pos:line="331" pos:column="19"/></name> <operator pos:line="331" pos:column="20">&amp;<pos:position pos:line="331" pos:column="25"/></operator> <operator pos:line="331" pos:column="22">~<pos:position pos:line="331" pos:column="23"/></operator><name pos:line="331" pos:column="23">PCRE_IMS<pos:position pos:line="331" pos:column="31"/></name><operator pos:line="331" pos:column="31">)<pos:position pos:line="331" pos:column="32"/></operator> <operator pos:line="331" pos:column="33">|<pos:position pos:line="331" pos:column="34"/></operator> <name><name pos:line="331" pos:column="35">ecode<pos:position pos:line="331" pos:column="40"/></name><index pos:line="331" pos:column="40">[<expr><literal type="number" pos:line="331" pos:column="41">4<pos:position pos:line="331" pos:column="42"/></literal></expr>]<pos:position pos:line="331" pos:column="43"/></index></name></expr>;<pos:position pos:line="331" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="332" pos:column="9">DPRINTF<pos:position pos:line="332" pos:column="16"/></name><argument_list pos:line="332" pos:column="16">(<argument><expr><operator pos:line="332" pos:column="17">(<pos:position pos:line="332" pos:column="18"/></operator><literal type="string" pos:line="332" pos:column="18">"ims set to %02lx at group repeat\n"<pos:position pos:line="332" pos:column="54"/></literal><operator pos:line="332" pos:column="54">,<pos:position pos:line="332" pos:column="55"/></operator> <name pos:line="332" pos:column="56">ims<pos:position pos:line="332" pos:column="59"/></name><operator pos:line="332" pos:column="59">)<pos:position pos:line="332" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="332" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="333" pos:column="10"/></block></then></if>

      <if pos:line="335" pos:column="7">if <condition pos:line="335" pos:column="10">(<expr><operator pos:line="335" pos:column="11">*<pos:position pos:line="335" pos:column="12"/></operator><name pos:line="335" pos:column="12">ecode<pos:position pos:line="335" pos:column="17"/></name> <operator pos:line="335" pos:column="18">==<pos:position pos:line="335" pos:column="20"/></operator> <name pos:line="335" pos:column="21">OP_KETRMIN<pos:position pos:line="335" pos:column="31"/></name></expr>)<pos:position pos:line="335" pos:column="32"/></condition><then pos:line="335" pos:column="32">
        <block pos:line="336" pos:column="9">{
        <if pos:line="337" pos:column="9">if <condition pos:line="337" pos:column="12">(<expr><call><name pos:line="337" pos:column="13">match<pos:position pos:line="337" pos:column="18"/></name><argument_list pos:line="337" pos:column="18">(<argument><expr><name pos:line="337" pos:column="19">eptr<pos:position pos:line="337" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="337" pos:column="25">ecode<pos:position pos:line="337" pos:column="30"/></name><operator pos:line="337" pos:column="30">+<pos:position pos:line="337" pos:column="31"/></operator><literal type="number" pos:line="337" pos:column="31">3<pos:position pos:line="337" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="337" pos:column="34">offset_top<pos:position pos:line="337" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="337" pos:column="46">md<pos:position pos:line="337" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="337" pos:column="50">ims<pos:position pos:line="337" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="337" pos:column="55">eptrb<pos:position pos:line="337" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="337" pos:column="62">0<pos:position pos:line="337" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="337" pos:column="64"/></argument_list></call> <operator pos:line="337" pos:column="65">||<pos:position pos:line="337" pos:column="67"/></operator>
            <call><name pos:line="338" pos:column="13">match<pos:position pos:line="338" pos:column="18"/></name><argument_list pos:line="338" pos:column="18">(<argument><expr><name pos:line="338" pos:column="19">eptr<pos:position pos:line="338" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="338" pos:column="25">prev<pos:position pos:line="338" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="338" pos:column="31">offset_top<pos:position pos:line="338" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="338" pos:column="43">md<pos:position pos:line="338" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="338" pos:column="47">ims<pos:position pos:line="338" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="338" pos:column="52">eptrb<pos:position pos:line="338" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="338" pos:column="59">match_isgroup<pos:position pos:line="338" pos:column="72"/></name></expr></argument>)<pos:position pos:line="338" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="338" pos:column="74"/></condition><then pos:line="338" pos:column="74">
              <block type="pseudo"><return pos:line="339" pos:column="15">return <expr><name pos:line="339" pos:column="22">TRUE<pos:position pos:line="339" pos:column="26"/></name></expr>;<pos:position pos:line="339" pos:column="27"/></return></block></then></if>
        }<pos:position pos:line="340" pos:column="10"/></block></then>
      <else pos:line="341" pos:column="7">else  <comment type="block" pos:line="341" pos:column="13">/* OP_KETRMAX */</comment>
        <block pos:line="342" pos:column="9">{
        <if pos:line="343" pos:column="9">if <condition pos:line="343" pos:column="12">(<expr><call><name pos:line="343" pos:column="13">match<pos:position pos:line="343" pos:column="18"/></name><argument_list pos:line="343" pos:column="18">(<argument><expr><name pos:line="343" pos:column="19">eptr<pos:position pos:line="343" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="343" pos:column="25">prev<pos:position pos:line="343" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="343" pos:column="31">offset_top<pos:position pos:line="343" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="343" pos:column="43">md<pos:position pos:line="343" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="343" pos:column="47">ims<pos:position pos:line="343" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="343" pos:column="52">eptrb<pos:position pos:line="343" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="343" pos:column="59">match_isgroup<pos:position pos:line="343" pos:column="72"/></name></expr></argument>)<pos:position pos:line="343" pos:column="73"/></argument_list></call> <operator pos:line="343" pos:column="74">||<pos:position pos:line="343" pos:column="76"/></operator>
            <call><name pos:line="344" pos:column="13">match<pos:position pos:line="344" pos:column="18"/></name><argument_list pos:line="344" pos:column="18">(<argument><expr><name pos:line="344" pos:column="19">eptr<pos:position pos:line="344" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="344" pos:column="25">ecode<pos:position pos:line="344" pos:column="30"/></name><operator pos:line="344" pos:column="30">+<pos:position pos:line="344" pos:column="31"/></operator><literal type="number" pos:line="344" pos:column="31">3<pos:position pos:line="344" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="344" pos:column="34">offset_top<pos:position pos:line="344" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="344" pos:column="46">md<pos:position pos:line="344" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="344" pos:column="50">ims<pos:position pos:line="344" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="344" pos:column="55">eptrb<pos:position pos:line="344" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="344" pos:column="62">0<pos:position pos:line="344" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="344" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="344" pos:column="65"/></condition><then pos:line="344" pos:column="65"> <block type="pseudo"><return pos:line="344" pos:column="66">return <expr><name pos:line="344" pos:column="73">TRUE<pos:position pos:line="344" pos:column="77"/></name></expr>;<pos:position pos:line="344" pos:column="78"/></return></block></then></if>
        }<pos:position pos:line="345" pos:column="10"/></block></else></if>
      }<pos:position pos:line="346" pos:column="8"/></block>
    <return pos:line="347" pos:column="5">return <expr><name pos:line="347" pos:column="12">FALSE<pos:position pos:line="347" pos:column="17"/></name></expr>;<pos:position pos:line="347" pos:column="18"/></return>

    <comment type="block" pos:line="349" pos:column="5">/* An alternation is the end of a branch; scan along to find the end of the
    bracketed group and go to there. */</comment>

    <case pos:line="352" pos:column="5">case <expr><name pos:line="352" pos:column="10">OP_ALT<pos:position pos:line="352" pos:column="16"/></name></expr>:<pos:position pos:line="352" pos:column="17"/></case>
    <do pos:line="353" pos:column="5">do <block type="pseudo"><expr_stmt><expr><name pos:line="353" pos:column="8">ecode<pos:position pos:line="353" pos:column="13"/></name> <operator pos:line="353" pos:column="14">+=<pos:position pos:line="353" pos:column="16"/></operator> <operator pos:line="353" pos:column="17">(<pos:position pos:line="353" pos:column="18"/></operator><name><name pos:line="353" pos:column="18">ecode<pos:position pos:line="353" pos:column="23"/></name><index pos:line="353" pos:column="23">[<expr><literal type="number" pos:line="353" pos:column="24">1<pos:position pos:line="353" pos:column="25"/></literal></expr>]<pos:position pos:line="353" pos:column="26"/></index></name> <operator pos:line="353" pos:column="27">&lt;&lt;<pos:position pos:line="353" pos:column="35"/></operator> <literal type="number" pos:line="353" pos:column="30">8<pos:position pos:line="353" pos:column="31"/></literal><operator pos:line="353" pos:column="31">)<pos:position pos:line="353" pos:column="32"/></operator> <operator pos:line="353" pos:column="33">+<pos:position pos:line="353" pos:column="34"/></operator> <name><name pos:line="353" pos:column="35">ecode<pos:position pos:line="353" pos:column="40"/></name><index pos:line="353" pos:column="40">[<expr><literal type="number" pos:line="353" pos:column="41">2<pos:position pos:line="353" pos:column="42"/></literal></expr>]<pos:position pos:line="353" pos:column="43"/></index></name></expr>;<pos:position pos:line="353" pos:column="44"/></expr_stmt></block> while <condition pos:line="353" pos:column="51">(<expr><operator pos:line="353" pos:column="52">*<pos:position pos:line="353" pos:column="53"/></operator><name pos:line="353" pos:column="53">ecode<pos:position pos:line="353" pos:column="58"/></name> <operator pos:line="353" pos:column="59">==<pos:position pos:line="353" pos:column="61"/></operator> <name pos:line="353" pos:column="62">OP_ALT<pos:position pos:line="353" pos:column="68"/></name></expr>)<pos:position pos:line="353" pos:column="69"/></condition>;<pos:position pos:line="353" pos:column="70"/></do>
    <break pos:line="354" pos:column="5">break;<pos:position pos:line="354" pos:column="11"/></break>

    <comment type="block" pos:line="356" pos:column="5">/* BRAZERO and BRAMINZERO occur just before a bracket group, indicating
    that it may occur zero times. It may repeat infinitely, or not at all -
    i.e. it could be ()* or ()? in the pattern. Brackets with fixed upper
    repeat limits are compiled as a number of copies, with the optional ones
    preceded by BRAZERO or BRAMINZERO. */</comment>

    <case pos:line="362" pos:column="5">case <expr><name pos:line="362" pos:column="10">OP_BRAZERO<pos:position pos:line="362" pos:column="20"/></name></expr>:<pos:position pos:line="362" pos:column="21"/></case>
      <block pos:line="363" pos:column="7">{
      <decl_stmt><decl><type><specifier pos:line="364" pos:column="7">const<pos:position pos:line="364" pos:column="12"/></specifier> <name pos:line="364" pos:column="13">uschar<pos:position pos:line="364" pos:column="19"/></name> <modifier pos:line="364" pos:column="20">*<pos:position pos:line="364" pos:column="21"/></modifier></type><name pos:line="364" pos:column="21">next<pos:position pos:line="364" pos:column="25"/></name> <init pos:line="364" pos:column="26">= <expr><name pos:line="364" pos:column="28">ecode<pos:position pos:line="364" pos:column="33"/></name><operator pos:line="364" pos:column="33">+<pos:position pos:line="364" pos:column="34"/></operator><literal type="number" pos:line="364" pos:column="34">1<pos:position pos:line="364" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="364" pos:column="36"/></decl_stmt>
      <if pos:line="365" pos:column="7">if <condition pos:line="365" pos:column="10">(<expr><call><name pos:line="365" pos:column="11">match<pos:position pos:line="365" pos:column="16"/></name><argument_list pos:line="365" pos:column="16">(<argument><expr><name pos:line="365" pos:column="17">eptr<pos:position pos:line="365" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="365" pos:column="23">next<pos:position pos:line="365" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="365" pos:column="29">offset_top<pos:position pos:line="365" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="365" pos:column="41">md<pos:position pos:line="365" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="365" pos:column="45">ims<pos:position pos:line="365" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="365" pos:column="50">eptrb<pos:position pos:line="365" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="365" pos:column="57">match_isgroup<pos:position pos:line="365" pos:column="70"/></name></expr></argument>)<pos:position pos:line="365" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="365" pos:column="72"/></condition><then pos:line="365" pos:column="72">
        <block type="pseudo"><return pos:line="366" pos:column="9">return <expr><name pos:line="366" pos:column="16">TRUE<pos:position pos:line="366" pos:column="20"/></name></expr>;<pos:position pos:line="366" pos:column="21"/></return></block></then></if>
      <do pos:line="367" pos:column="7">do <block type="pseudo"><expr_stmt><expr><name pos:line="367" pos:column="10">next<pos:position pos:line="367" pos:column="14"/></name> <operator pos:line="367" pos:column="15">+=<pos:position pos:line="367" pos:column="17"/></operator> <operator pos:line="367" pos:column="18">(<pos:position pos:line="367" pos:column="19"/></operator><name><name pos:line="367" pos:column="19">next<pos:position pos:line="367" pos:column="23"/></name><index pos:line="367" pos:column="23">[<expr><literal type="number" pos:line="367" pos:column="24">1<pos:position pos:line="367" pos:column="25"/></literal></expr>]<pos:position pos:line="367" pos:column="26"/></index></name> <operator pos:line="367" pos:column="27">&lt;&lt;<pos:position pos:line="367" pos:column="35"/></operator> <literal type="number" pos:line="367" pos:column="30">8<pos:position pos:line="367" pos:column="31"/></literal><operator pos:line="367" pos:column="31">)<pos:position pos:line="367" pos:column="32"/></operator> <operator pos:line="367" pos:column="33">+<pos:position pos:line="367" pos:column="34"/></operator> <name><name pos:line="367" pos:column="35">next<pos:position pos:line="367" pos:column="39"/></name><index pos:line="367" pos:column="39">[<expr><literal type="number" pos:line="367" pos:column="40">2<pos:position pos:line="367" pos:column="41"/></literal></expr>]<pos:position pos:line="367" pos:column="42"/></index></name></expr>;<pos:position pos:line="367" pos:column="43"/></expr_stmt></block> while <condition pos:line="367" pos:column="50">(<expr><operator pos:line="367" pos:column="51">*<pos:position pos:line="367" pos:column="52"/></operator><name pos:line="367" pos:column="52">next<pos:position pos:line="367" pos:column="56"/></name> <operator pos:line="367" pos:column="57">==<pos:position pos:line="367" pos:column="59"/></operator> <name pos:line="367" pos:column="60">OP_ALT<pos:position pos:line="367" pos:column="66"/></name></expr>)<pos:position pos:line="367" pos:column="67"/></condition>;<pos:position pos:line="367" pos:column="68"/></do>
      <expr_stmt><expr><name pos:line="368" pos:column="7">ecode<pos:position pos:line="368" pos:column="12"/></name> <operator pos:line="368" pos:column="13">=<pos:position pos:line="368" pos:column="14"/></operator> <name pos:line="368" pos:column="15">next<pos:position pos:line="368" pos:column="19"/></name> <operator pos:line="368" pos:column="20">+<pos:position pos:line="368" pos:column="21"/></operator> <literal type="number" pos:line="368" pos:column="22">3<pos:position pos:line="368" pos:column="23"/></literal></expr>;<pos:position pos:line="368" pos:column="24"/></expr_stmt>
      }<pos:position pos:line="369" pos:column="8"/></block>
    <break pos:line="370" pos:column="5">break;<pos:position pos:line="370" pos:column="11"/></break>

    <case pos:line="372" pos:column="5">case <expr><name pos:line="372" pos:column="10">OP_BRAMINZERO<pos:position pos:line="372" pos:column="23"/></name></expr>:<pos:position pos:line="372" pos:column="24"/></case>
      <block pos:line="373" pos:column="7">{
      <decl_stmt><decl><type><specifier pos:line="374" pos:column="7">const<pos:position pos:line="374" pos:column="12"/></specifier> <name pos:line="374" pos:column="13">uschar<pos:position pos:line="374" pos:column="19"/></name> <modifier pos:line="374" pos:column="20">*<pos:position pos:line="374" pos:column="21"/></modifier></type><name pos:line="374" pos:column="21">next<pos:position pos:line="374" pos:column="25"/></name> <init pos:line="374" pos:column="26">= <expr><name pos:line="374" pos:column="28">ecode<pos:position pos:line="374" pos:column="33"/></name><operator pos:line="374" pos:column="33">+<pos:position pos:line="374" pos:column="34"/></operator><literal type="number" pos:line="374" pos:column="34">1<pos:position pos:line="374" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="374" pos:column="36"/></decl_stmt>
      <do pos:line="375" pos:column="7">do <block type="pseudo"><expr_stmt><expr><name pos:line="375" pos:column="10">next<pos:position pos:line="375" pos:column="14"/></name> <operator pos:line="375" pos:column="15">+=<pos:position pos:line="375" pos:column="17"/></operator> <operator pos:line="375" pos:column="18">(<pos:position pos:line="375" pos:column="19"/></operator><name><name pos:line="375" pos:column="19">next<pos:position pos:line="375" pos:column="23"/></name><index pos:line="375" pos:column="23">[<expr><literal type="number" pos:line="375" pos:column="24">1<pos:position pos:line="375" pos:column="25"/></literal></expr>]<pos:position pos:line="375" pos:column="26"/></index></name> <operator pos:line="375" pos:column="27">&lt;&lt;<pos:position pos:line="375" pos:column="35"/></operator> <literal type="number" pos:line="375" pos:column="30">8<pos:position pos:line="375" pos:column="31"/></literal><operator pos:line="375" pos:column="31">)<pos:position pos:line="375" pos:column="32"/></operator> <operator pos:line="375" pos:column="33">+<pos:position pos:line="375" pos:column="34"/></operator> <name><name pos:line="375" pos:column="35">next<pos:position pos:line="375" pos:column="39"/></name><index pos:line="375" pos:column="39">[<expr><literal type="number" pos:line="375" pos:column="40">2<pos:position pos:line="375" pos:column="41"/></literal></expr>]<pos:position pos:line="375" pos:column="42"/></index></name></expr>;<pos:position pos:line="375" pos:column="43"/></expr_stmt></block> while <condition pos:line="375" pos:column="50">(<expr><operator pos:line="375" pos:column="51">*<pos:position pos:line="375" pos:column="52"/></operator><name pos:line="375" pos:column="52">next<pos:position pos:line="375" pos:column="56"/></name> <operator pos:line="375" pos:column="57">==<pos:position pos:line="375" pos:column="59"/></operator> <name pos:line="375" pos:column="60">OP_ALT<pos:position pos:line="375" pos:column="66"/></name></expr>)<pos:position pos:line="375" pos:column="67"/></condition>;<pos:position pos:line="375" pos:column="68"/></do>
      <if pos:line="376" pos:column="7">if <condition pos:line="376" pos:column="10">(<expr><call><name pos:line="376" pos:column="11">match<pos:position pos:line="376" pos:column="16"/></name><argument_list pos:line="376" pos:column="16">(<argument><expr><name pos:line="376" pos:column="17">eptr<pos:position pos:line="376" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="376" pos:column="23">next<pos:position pos:line="376" pos:column="27"/></name><operator pos:line="376" pos:column="27">+<pos:position pos:line="376" pos:column="28"/></operator><literal type="number" pos:line="376" pos:column="28">3<pos:position pos:line="376" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="376" pos:column="31">offset_top<pos:position pos:line="376" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="376" pos:column="43">md<pos:position pos:line="376" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="376" pos:column="47">ims<pos:position pos:line="376" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="376" pos:column="52">eptrb<pos:position pos:line="376" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="376" pos:column="59">match_isgroup<pos:position pos:line="376" pos:column="72"/></name></expr></argument>)<pos:position pos:line="376" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="376" pos:column="74"/></condition><then pos:line="376" pos:column="74">
        <block type="pseudo"><return pos:line="377" pos:column="9">return <expr><name pos:line="377" pos:column="16">TRUE<pos:position pos:line="377" pos:column="20"/></name></expr>;<pos:position pos:line="377" pos:column="21"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="378" pos:column="7">ecode<pos:position pos:line="378" pos:column="12"/></name><operator pos:line="378" pos:column="12">++<pos:position pos:line="378" pos:column="14"/></operator></expr>;<pos:position pos:line="378" pos:column="15"/></expr_stmt>
      }<pos:position pos:line="379" pos:column="8"/></block>
    <break pos:line="380" pos:column="5">break;<pos:position pos:line="380" pos:column="11"/></break>

    <comment type="block" pos:line="382" pos:column="5">/* End of a group, repeated or non-repeating. If we are at the end of
    an assertion "group", stop matching and return TRUE, but record the
    current high water mark for use by positive assertions. Do this also
    for the "once" (not-backup up) groups. */</comment>

    <case pos:line="387" pos:column="5">case <expr><name pos:line="387" pos:column="10">OP_KET<pos:position pos:line="387" pos:column="16"/></name></expr>:<pos:position pos:line="387" pos:column="17"/></case>
    <case pos:line="388" pos:column="5">case <expr><name pos:line="388" pos:column="10">OP_KETRMIN<pos:position pos:line="388" pos:column="20"/></name></expr>:<pos:position pos:line="388" pos:column="21"/></case>
    <case pos:line="389" pos:column="5">case <expr><name pos:line="389" pos:column="10">OP_KETRMAX<pos:position pos:line="389" pos:column="20"/></name></expr>:<pos:position pos:line="389" pos:column="21"/></case>
      <block pos:line="390" pos:column="7">{
      <decl_stmt><decl><type><specifier pos:line="391" pos:column="7">const<pos:position pos:line="391" pos:column="12"/></specifier> <name pos:line="391" pos:column="13">uschar<pos:position pos:line="391" pos:column="19"/></name> <modifier pos:line="391" pos:column="20">*<pos:position pos:line="391" pos:column="21"/></modifier></type><name pos:line="391" pos:column="21">prev<pos:position pos:line="391" pos:column="25"/></name> <init pos:line="391" pos:column="26">= <expr><name pos:line="391" pos:column="28">ecode<pos:position pos:line="391" pos:column="33"/></name> <operator pos:line="391" pos:column="34">-<pos:position pos:line="391" pos:column="35"/></operator> <operator pos:line="391" pos:column="36">(<pos:position pos:line="391" pos:column="37"/></operator><name><name pos:line="391" pos:column="37">ecode<pos:position pos:line="391" pos:column="42"/></name><index pos:line="391" pos:column="42">[<expr><literal type="number" pos:line="391" pos:column="43">1<pos:position pos:line="391" pos:column="44"/></literal></expr>]<pos:position pos:line="391" pos:column="45"/></index></name> <operator pos:line="391" pos:column="46">&lt;&lt;<pos:position pos:line="391" pos:column="54"/></operator> <literal type="number" pos:line="391" pos:column="49">8<pos:position pos:line="391" pos:column="50"/></literal><operator pos:line="391" pos:column="50">)<pos:position pos:line="391" pos:column="51"/></operator> <operator pos:line="391" pos:column="52">-<pos:position pos:line="391" pos:column="53"/></operator> <name><name pos:line="391" pos:column="54">ecode<pos:position pos:line="391" pos:column="59"/></name><index pos:line="391" pos:column="59">[<expr><literal type="number" pos:line="391" pos:column="60">2<pos:position pos:line="391" pos:column="61"/></literal></expr>]<pos:position pos:line="391" pos:column="62"/></index></name></expr></init></decl>;<pos:position pos:line="391" pos:column="63"/></decl_stmt>
      <decl_stmt><decl><type><specifier pos:line="392" pos:column="7">const<pos:position pos:line="392" pos:column="12"/></specifier> <name pos:line="392" pos:column="13">uschar<pos:position pos:line="392" pos:column="19"/></name> <modifier pos:line="392" pos:column="20">*<pos:position pos:line="392" pos:column="21"/></modifier></type><name pos:line="392" pos:column="21">saved_eptr<pos:position pos:line="392" pos:column="31"/></name> <init pos:line="392" pos:column="32">= <expr><name><name pos:line="392" pos:column="34">eptrb<pos:position pos:line="392" pos:column="39"/></name><operator pos:line="392" pos:column="39">-&gt;<pos:position pos:line="392" pos:column="44"/></operator><name pos:line="392" pos:column="41">saved_eptr<pos:position pos:line="392" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="392" pos:column="52"/></decl_stmt>

      <expr_stmt><expr><name pos:line="394" pos:column="7">eptrb<pos:position pos:line="394" pos:column="12"/></name> <operator pos:line="394" pos:column="13">=<pos:position pos:line="394" pos:column="14"/></operator> <name><name pos:line="394" pos:column="15">eptrb<pos:position pos:line="394" pos:column="20"/></name><operator pos:line="394" pos:column="20">-&gt;<pos:position pos:line="394" pos:column="25"/></operator><name pos:line="394" pos:column="22">prev<pos:position pos:line="394" pos:column="26"/></name></name></expr>;<pos:position pos:line="394" pos:column="27"/></expr_stmt>    <comment type="block" pos:line="394" pos:column="31">/* Back up the stack of bracket start pointers */</comment>

      <if pos:line="396" pos:column="7">if <condition pos:line="396" pos:column="10">(<expr><operator pos:line="396" pos:column="11">*<pos:position pos:line="396" pos:column="12"/></operator><name pos:line="396" pos:column="12">prev<pos:position pos:line="396" pos:column="16"/></name> <operator pos:line="396" pos:column="17">==<pos:position pos:line="396" pos:column="19"/></operator> <name pos:line="396" pos:column="20">OP_ASSERT<pos:position pos:line="396" pos:column="29"/></name> <operator pos:line="396" pos:column="30">||<pos:position pos:line="396" pos:column="32"/></operator> <operator pos:line="396" pos:column="33">*<pos:position pos:line="396" pos:column="34"/></operator><name pos:line="396" pos:column="34">prev<pos:position pos:line="396" pos:column="38"/></name> <operator pos:line="396" pos:column="39">==<pos:position pos:line="396" pos:column="41"/></operator> <name pos:line="396" pos:column="42">OP_ASSERT_NOT<pos:position pos:line="396" pos:column="55"/></name> <operator pos:line="396" pos:column="56">||<pos:position pos:line="396" pos:column="58"/></operator>
          <operator pos:line="397" pos:column="11">*<pos:position pos:line="397" pos:column="12"/></operator><name pos:line="397" pos:column="12">prev<pos:position pos:line="397" pos:column="16"/></name> <operator pos:line="397" pos:column="17">==<pos:position pos:line="397" pos:column="19"/></operator> <name pos:line="397" pos:column="20">OP_ASSERTBACK<pos:position pos:line="397" pos:column="33"/></name> <operator pos:line="397" pos:column="34">||<pos:position pos:line="397" pos:column="36"/></operator> <operator pos:line="397" pos:column="37">*<pos:position pos:line="397" pos:column="38"/></operator><name pos:line="397" pos:column="38">prev<pos:position pos:line="397" pos:column="42"/></name> <operator pos:line="397" pos:column="43">==<pos:position pos:line="397" pos:column="45"/></operator> <name pos:line="397" pos:column="46">OP_ASSERTBACK_NOT<pos:position pos:line="397" pos:column="63"/></name> <operator pos:line="397" pos:column="64">||<pos:position pos:line="397" pos:column="66"/></operator>
          <operator pos:line="398" pos:column="11">*<pos:position pos:line="398" pos:column="12"/></operator><name pos:line="398" pos:column="12">prev<pos:position pos:line="398" pos:column="16"/></name> <operator pos:line="398" pos:column="17">==<pos:position pos:line="398" pos:column="19"/></operator> <name pos:line="398" pos:column="20">OP_ONCE<pos:position pos:line="398" pos:column="27"/></name></expr>)<pos:position pos:line="398" pos:column="28"/></condition><then pos:line="398" pos:column="28">
        <block pos:line="399" pos:column="9">{
        <expr_stmt><expr><name><name pos:line="400" pos:column="9">md<pos:position pos:line="400" pos:column="11"/></name><operator pos:line="400" pos:column="11">-&gt;<pos:position pos:line="400" pos:column="16"/></operator><name pos:line="400" pos:column="13">end_match_ptr<pos:position pos:line="400" pos:column="26"/></name></name> <operator pos:line="400" pos:column="27">=<pos:position pos:line="400" pos:column="28"/></operator> <name pos:line="400" pos:column="29">eptr<pos:position pos:line="400" pos:column="33"/></name></expr>;<pos:position pos:line="400" pos:column="34"/></expr_stmt>      <comment type="block" pos:line="400" pos:column="40">/* For ONCE */</comment>
        <expr_stmt><expr><name><name pos:line="401" pos:column="9">md<pos:position pos:line="401" pos:column="11"/></name><operator pos:line="401" pos:column="11">-&gt;<pos:position pos:line="401" pos:column="16"/></operator><name pos:line="401" pos:column="13">end_offset_top<pos:position pos:line="401" pos:column="27"/></name></name> <operator pos:line="401" pos:column="28">=<pos:position pos:line="401" pos:column="29"/></operator> <name pos:line="401" pos:column="30">offset_top<pos:position pos:line="401" pos:column="40"/></name></expr>;<pos:position pos:line="401" pos:column="41"/></expr_stmt>
        <return pos:line="402" pos:column="9">return <expr><name pos:line="402" pos:column="16">TRUE<pos:position pos:line="402" pos:column="20"/></name></expr>;<pos:position pos:line="402" pos:column="21"/></return>
        }<pos:position pos:line="403" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="405" pos:column="7">/* In all other cases except a conditional group we have to check the
      group number back at the start and if necessary complete handling an
      extraction by setting the offsets and bumping the high water mark. */</comment>

      <if pos:line="409" pos:column="7">if <condition pos:line="409" pos:column="10">(<expr><operator pos:line="409" pos:column="11">*<pos:position pos:line="409" pos:column="12"/></operator><name pos:line="409" pos:column="12">prev<pos:position pos:line="409" pos:column="16"/></name> <operator pos:line="409" pos:column="17">!=<pos:position pos:line="409" pos:column="19"/></operator> <name pos:line="409" pos:column="20">OP_COND<pos:position pos:line="409" pos:column="27"/></name></expr>)<pos:position pos:line="409" pos:column="28"/></condition><then pos:line="409" pos:column="28">
        <block pos:line="410" pos:column="9">{
        <decl_stmt><decl><type><name pos:line="411" pos:column="9">int<pos:position pos:line="411" pos:column="12"/></name></type> <name pos:line="411" pos:column="13">offset<pos:position pos:line="411" pos:column="19"/></name></decl>;<pos:position pos:line="411" pos:column="20"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="412" pos:column="9">int<pos:position pos:line="412" pos:column="12"/></name></type> <name pos:line="412" pos:column="13">number<pos:position pos:line="412" pos:column="19"/></name> <init pos:line="412" pos:column="20">= <expr><operator pos:line="412" pos:column="22">*<pos:position pos:line="412" pos:column="23"/></operator><name pos:line="412" pos:column="23">prev<pos:position pos:line="412" pos:column="27"/></name> <operator pos:line="412" pos:column="28">-<pos:position pos:line="412" pos:column="29"/></operator> <name pos:line="412" pos:column="30">OP_BRA<pos:position pos:line="412" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="412" pos:column="37"/></decl_stmt>

        <comment type="block" pos:line="414" pos:column="9">/* For extended extraction brackets (large number), we have to fish out
        the number from a dummy opcode at the start. */</comment>

        <if pos:line="417" pos:column="9">if <condition pos:line="417" pos:column="12">(<expr><name pos:line="417" pos:column="13">number<pos:position pos:line="417" pos:column="19"/></name> <operator pos:line="417" pos:column="20">&gt;<pos:position pos:line="417" pos:column="24"/></operator> <name pos:line="417" pos:column="22">EXTRACT_BASIC_MAX<pos:position pos:line="417" pos:column="39"/></name></expr>)<pos:position pos:line="417" pos:column="40"/></condition><then pos:line="417" pos:column="40"> <block type="pseudo"><expr_stmt><expr><name pos:line="417" pos:column="41">number<pos:position pos:line="417" pos:column="47"/></name> <operator pos:line="417" pos:column="48">=<pos:position pos:line="417" pos:column="49"/></operator> <operator pos:line="417" pos:column="50">(<pos:position pos:line="417" pos:column="51"/></operator><name><name pos:line="417" pos:column="51">prev<pos:position pos:line="417" pos:column="55"/></name><index pos:line="417" pos:column="55">[<expr><literal type="number" pos:line="417" pos:column="56">4<pos:position pos:line="417" pos:column="57"/></literal></expr>]<pos:position pos:line="417" pos:column="58"/></index></name> <operator pos:line="417" pos:column="59">&lt;&lt;<pos:position pos:line="417" pos:column="67"/></operator> <literal type="number" pos:line="417" pos:column="62">8<pos:position pos:line="417" pos:column="63"/></literal><operator pos:line="417" pos:column="63">)<pos:position pos:line="417" pos:column="64"/></operator> <operator pos:line="417" pos:column="65">|<pos:position pos:line="417" pos:column="66"/></operator> <name><name pos:line="417" pos:column="67">prev<pos:position pos:line="417" pos:column="71"/></name><index pos:line="417" pos:column="71">[<expr><literal type="number" pos:line="417" pos:column="72">5<pos:position pos:line="417" pos:column="73"/></literal></expr>]<pos:position pos:line="417" pos:column="74"/></index></name></expr>;<pos:position pos:line="417" pos:column="75"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="418" pos:column="9">offset<pos:position pos:line="418" pos:column="15"/></name> <operator pos:line="418" pos:column="16">=<pos:position pos:line="418" pos:column="17"/></operator> <name pos:line="418" pos:column="18">number<pos:position pos:line="418" pos:column="24"/></name> <operator pos:line="418" pos:column="25">&lt;&lt;<pos:position pos:line="418" pos:column="33"/></operator> <literal type="number" pos:line="418" pos:column="28">1<pos:position pos:line="418" pos:column="29"/></literal></expr>;<pos:position pos:line="418" pos:column="30"/></expr_stmt>

<cpp:ifdef pos:line="420" pos:column="1">#<cpp:directive pos:line="420" pos:column="2">ifdef<pos:position pos:line="420" pos:column="7"/></cpp:directive> <name pos:line="420" pos:column="8">DEBUG<pos:position pos:line="420" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="421" pos:column="9">printf<pos:position pos:line="421" pos:column="15"/></name><argument_list pos:line="421" pos:column="15">(<argument><expr><literal type="string" pos:line="421" pos:column="16">"end bracket %d"<pos:position pos:line="421" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="421" pos:column="34">number<pos:position pos:line="421" pos:column="40"/></name></expr></argument>)<pos:position pos:line="421" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="421" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="422" pos:column="9">printf<pos:position pos:line="422" pos:column="15"/></name><argument_list pos:line="422" pos:column="15">(<argument><expr><literal type="string" pos:line="422" pos:column="16">"\n"<pos:position pos:line="422" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="422" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="422" pos:column="22"/></expr_stmt>
<cpp:endif pos:line="423" pos:column="1">#<cpp:directive pos:line="423" pos:column="2">endif<pos:position pos:line="423" pos:column="7"/></cpp:directive></cpp:endif>

        <if pos:line="425" pos:column="9">if <condition pos:line="425" pos:column="12">(<expr><name pos:line="425" pos:column="13">number<pos:position pos:line="425" pos:column="19"/></name> <operator pos:line="425" pos:column="20">&gt;<pos:position pos:line="425" pos:column="24"/></operator> <literal type="number" pos:line="425" pos:column="22">0<pos:position pos:line="425" pos:column="23"/></literal></expr>)<pos:position pos:line="425" pos:column="24"/></condition><then pos:line="425" pos:column="24">
          <block pos:line="426" pos:column="11">{
          <if pos:line="427" pos:column="11">if <condition pos:line="427" pos:column="14">(<expr><name pos:line="427" pos:column="15">offset<pos:position pos:line="427" pos:column="21"/></name> <operator pos:line="427" pos:column="22">&gt;=<pos:position pos:line="427" pos:column="27"/></operator> <name><name pos:line="427" pos:column="25">md<pos:position pos:line="427" pos:column="27"/></name><operator pos:line="427" pos:column="27">-&gt;<pos:position pos:line="427" pos:column="32"/></operator><name pos:line="427" pos:column="29">offset_max<pos:position pos:line="427" pos:column="39"/></name></name></expr>)<pos:position pos:line="427" pos:column="40"/></condition><then pos:line="427" pos:column="40"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="427" pos:column="41">md<pos:position pos:line="427" pos:column="43"/></name><operator pos:line="427" pos:column="43">-&gt;<pos:position pos:line="427" pos:column="48"/></operator><name pos:line="427" pos:column="45">offset_overflow<pos:position pos:line="427" pos:column="60"/></name></name> <operator pos:line="427" pos:column="61">=<pos:position pos:line="427" pos:column="62"/></operator> <name pos:line="427" pos:column="63">TRUE<pos:position pos:line="427" pos:column="67"/></name></expr>;<pos:position pos:line="427" pos:column="68"/></expr_stmt></block></then> <else pos:line="427" pos:column="69">else
            <block pos:line="428" pos:column="13">{
            <expr_stmt><expr><name><name pos:line="429" pos:column="13">md<pos:position pos:line="429" pos:column="15"/></name><operator pos:line="429" pos:column="15">-&gt;<pos:position pos:line="429" pos:column="20"/></operator><name pos:line="429" pos:column="17">offset_vector<pos:position pos:line="429" pos:column="30"/></name><index pos:line="429" pos:column="30">[<expr><name pos:line="429" pos:column="31">offset<pos:position pos:line="429" pos:column="37"/></name></expr>]<pos:position pos:line="429" pos:column="38"/></index></name> <operator pos:line="429" pos:column="39">=<pos:position pos:line="429" pos:column="40"/></operator>
              <name><name pos:line="430" pos:column="15">md<pos:position pos:line="430" pos:column="17"/></name><operator pos:line="430" pos:column="17">-&gt;<pos:position pos:line="430" pos:column="22"/></operator><name pos:line="430" pos:column="19">offset_vector<pos:position pos:line="430" pos:column="32"/></name><index pos:line="430" pos:column="32">[<expr><name><name pos:line="430" pos:column="33">md<pos:position pos:line="430" pos:column="35"/></name><operator pos:line="430" pos:column="35">-&gt;<pos:position pos:line="430" pos:column="40"/></operator><name pos:line="430" pos:column="37">offset_end<pos:position pos:line="430" pos:column="47"/></name></name> <operator pos:line="430" pos:column="48">-<pos:position pos:line="430" pos:column="49"/></operator> <name pos:line="430" pos:column="50">number<pos:position pos:line="430" pos:column="56"/></name></expr>]<pos:position pos:line="430" pos:column="57"/></index></name></expr>;<pos:position pos:line="430" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="431" pos:column="13">md<pos:position pos:line="431" pos:column="15"/></name><operator pos:line="431" pos:column="15">-&gt;<pos:position pos:line="431" pos:column="20"/></operator><name pos:line="431" pos:column="17">offset_vector<pos:position pos:line="431" pos:column="30"/></name><index pos:line="431" pos:column="30">[<expr><name pos:line="431" pos:column="31">offset<pos:position pos:line="431" pos:column="37"/></name><operator pos:line="431" pos:column="37">+<pos:position pos:line="431" pos:column="38"/></operator><literal type="number" pos:line="431" pos:column="38">1<pos:position pos:line="431" pos:column="39"/></literal></expr>]<pos:position pos:line="431" pos:column="40"/></index></name> <operator pos:line="431" pos:column="41">=<pos:position pos:line="431" pos:column="42"/></operator> <name pos:line="431" pos:column="43">eptr<pos:position pos:line="431" pos:column="47"/></name> <operator pos:line="431" pos:column="48">-<pos:position pos:line="431" pos:column="49"/></operator> <name><name pos:line="431" pos:column="50">md<pos:position pos:line="431" pos:column="52"/></name><operator pos:line="431" pos:column="52">-&gt;<pos:position pos:line="431" pos:column="57"/></operator><name pos:line="431" pos:column="54">start_subject<pos:position pos:line="431" pos:column="67"/></name></name></expr>;<pos:position pos:line="431" pos:column="68"/></expr_stmt>
            <if pos:line="432" pos:column="13">if <condition pos:line="432" pos:column="16">(<expr><name pos:line="432" pos:column="17">offset_top<pos:position pos:line="432" pos:column="27"/></name> <operator pos:line="432" pos:column="28">&lt;=<pos:position pos:line="432" pos:column="33"/></operator> <name pos:line="432" pos:column="31">offset<pos:position pos:line="432" pos:column="37"/></name></expr>)<pos:position pos:line="432" pos:column="38"/></condition><then pos:line="432" pos:column="38"> <block type="pseudo"><expr_stmt><expr><name pos:line="432" pos:column="39">offset_top<pos:position pos:line="432" pos:column="49"/></name> <operator pos:line="432" pos:column="50">=<pos:position pos:line="432" pos:column="51"/></operator> <name pos:line="432" pos:column="52">offset<pos:position pos:line="432" pos:column="58"/></name> <operator pos:line="432" pos:column="59">+<pos:position pos:line="432" pos:column="60"/></operator> <literal type="number" pos:line="432" pos:column="61">2<pos:position pos:line="432" pos:column="62"/></literal></expr>;<pos:position pos:line="432" pos:column="63"/></expr_stmt></block></then></if>
            }<pos:position pos:line="433" pos:column="14"/></block></else></if>
          }<pos:position pos:line="434" pos:column="12"/></block></then></if>
        }<pos:position pos:line="435" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="437" pos:column="7">/* Reset the value of the ims flags, in case they got changed during
      the group. */</comment>

      <expr_stmt><expr><name pos:line="440" pos:column="7">ims<pos:position pos:line="440" pos:column="10"/></name> <operator pos:line="440" pos:column="11">=<pos:position pos:line="440" pos:column="12"/></operator> <name pos:line="440" pos:column="13">original_ims<pos:position pos:line="440" pos:column="25"/></name></expr>;<pos:position pos:line="440" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="441" pos:column="7">DPRINTF<pos:position pos:line="441" pos:column="14"/></name><argument_list pos:line="441" pos:column="14">(<argument><expr><operator pos:line="441" pos:column="15">(<pos:position pos:line="441" pos:column="16"/></operator><literal type="string" pos:line="441" pos:column="16">"ims reset to %02lx\n"<pos:position pos:line="441" pos:column="38"/></literal><operator pos:line="441" pos:column="38">,<pos:position pos:line="441" pos:column="39"/></operator> <name pos:line="441" pos:column="40">ims<pos:position pos:line="441" pos:column="43"/></name><operator pos:line="441" pos:column="43">)<pos:position pos:line="441" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="441" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="441" pos:column="46"/></expr_stmt>

      <comment type="block" pos:line="443" pos:column="7">/* For a non-repeating ket, just continue at this level. This also
      happens for a repeating ket if no characters were matched in the group.
      This is the forcible breaking of infinite loops as implemented in Perl
      5.005. If there is an options reset, it will get obeyed in the normal
      course of events. */</comment>

      <if pos:line="449" pos:column="7">if <condition pos:line="449" pos:column="10">(<expr><operator pos:line="449" pos:column="11">*<pos:position pos:line="449" pos:column="12"/></operator><name pos:line="449" pos:column="12">ecode<pos:position pos:line="449" pos:column="17"/></name> <operator pos:line="449" pos:column="18">==<pos:position pos:line="449" pos:column="20"/></operator> <name pos:line="449" pos:column="21">OP_KET<pos:position pos:line="449" pos:column="27"/></name> <operator pos:line="449" pos:column="28">||<pos:position pos:line="449" pos:column="30"/></operator> <name pos:line="449" pos:column="31">eptr<pos:position pos:line="449" pos:column="35"/></name> <operator pos:line="449" pos:column="36">==<pos:position pos:line="449" pos:column="38"/></operator> <name pos:line="449" pos:column="39">saved_eptr<pos:position pos:line="449" pos:column="49"/></name></expr>)<pos:position pos:line="449" pos:column="50"/></condition><then pos:line="449" pos:column="50">
        <block pos:line="450" pos:column="9">{
        <expr_stmt><expr><name pos:line="451" pos:column="9">ecode<pos:position pos:line="451" pos:column="14"/></name> <operator pos:line="451" pos:column="15">+=<pos:position pos:line="451" pos:column="17"/></operator> <literal type="number" pos:line="451" pos:column="18">3<pos:position pos:line="451" pos:column="19"/></literal></expr>;<pos:position pos:line="451" pos:column="20"/></expr_stmt>
        <break pos:line="452" pos:column="9">break;<pos:position pos:line="452" pos:column="15"/></break>
        }<pos:position pos:line="453" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="455" pos:column="7">/* The repeating kets try the rest of the pattern or restart from the
      preceding bracket, in the appropriate order. */</comment>

      <if pos:line="458" pos:column="7">if <condition pos:line="458" pos:column="10">(<expr><operator pos:line="458" pos:column="11">*<pos:position pos:line="458" pos:column="12"/></operator><name pos:line="458" pos:column="12">ecode<pos:position pos:line="458" pos:column="17"/></name> <operator pos:line="458" pos:column="18">==<pos:position pos:line="458" pos:column="20"/></operator> <name pos:line="458" pos:column="21">OP_KETRMIN<pos:position pos:line="458" pos:column="31"/></name></expr>)<pos:position pos:line="458" pos:column="32"/></condition><then pos:line="458" pos:column="32">
        <block pos:line="459" pos:column="9">{
        <if pos:line="460" pos:column="9">if <condition pos:line="460" pos:column="12">(<expr><call><name pos:line="460" pos:column="13">match<pos:position pos:line="460" pos:column="18"/></name><argument_list pos:line="460" pos:column="18">(<argument><expr><name pos:line="460" pos:column="19">eptr<pos:position pos:line="460" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="460" pos:column="25">ecode<pos:position pos:line="460" pos:column="30"/></name><operator pos:line="460" pos:column="30">+<pos:position pos:line="460" pos:column="31"/></operator><literal type="number" pos:line="460" pos:column="31">3<pos:position pos:line="460" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="460" pos:column="34">offset_top<pos:position pos:line="460" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="460" pos:column="46">md<pos:position pos:line="460" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="460" pos:column="50">ims<pos:position pos:line="460" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="460" pos:column="55">eptrb<pos:position pos:line="460" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="460" pos:column="62">0<pos:position pos:line="460" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="460" pos:column="64"/></argument_list></call> <operator pos:line="460" pos:column="65">||<pos:position pos:line="460" pos:column="67"/></operator>
            <call><name pos:line="461" pos:column="13">match<pos:position pos:line="461" pos:column="18"/></name><argument_list pos:line="461" pos:column="18">(<argument><expr><name pos:line="461" pos:column="19">eptr<pos:position pos:line="461" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="461" pos:column="25">prev<pos:position pos:line="461" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="461" pos:column="31">offset_top<pos:position pos:line="461" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="461" pos:column="43">md<pos:position pos:line="461" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="461" pos:column="47">ims<pos:position pos:line="461" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="461" pos:column="52">eptrb<pos:position pos:line="461" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="461" pos:column="59">match_isgroup<pos:position pos:line="461" pos:column="72"/></name></expr></argument>)<pos:position pos:line="461" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="461" pos:column="74"/></condition><then pos:line="461" pos:column="74">
              <block type="pseudo"><return pos:line="462" pos:column="15">return <expr><name pos:line="462" pos:column="22">TRUE<pos:position pos:line="462" pos:column="26"/></name></expr>;<pos:position pos:line="462" pos:column="27"/></return></block></then></if>
        }<pos:position pos:line="463" pos:column="10"/></block></then>
      <else pos:line="464" pos:column="7">else  <comment type="block" pos:line="464" pos:column="13">/* OP_KETRMAX */</comment>
        <block pos:line="465" pos:column="9">{
        <if pos:line="466" pos:column="9">if <condition pos:line="466" pos:column="12">(<expr><call><name pos:line="466" pos:column="13">match<pos:position pos:line="466" pos:column="18"/></name><argument_list pos:line="466" pos:column="18">(<argument><expr><name pos:line="466" pos:column="19">eptr<pos:position pos:line="466" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="466" pos:column="25">prev<pos:position pos:line="466" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="466" pos:column="31">offset_top<pos:position pos:line="466" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="466" pos:column="43">md<pos:position pos:line="466" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="466" pos:column="47">ims<pos:position pos:line="466" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="466" pos:column="52">eptrb<pos:position pos:line="466" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="466" pos:column="59">match_isgroup<pos:position pos:line="466" pos:column="72"/></name></expr></argument>)<pos:position pos:line="466" pos:column="73"/></argument_list></call> <operator pos:line="466" pos:column="74">||<pos:position pos:line="466" pos:column="76"/></operator>
            <call><name pos:line="467" pos:column="13">match<pos:position pos:line="467" pos:column="18"/></name><argument_list pos:line="467" pos:column="18">(<argument><expr><name pos:line="467" pos:column="19">eptr<pos:position pos:line="467" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="467" pos:column="25">ecode<pos:position pos:line="467" pos:column="30"/></name><operator pos:line="467" pos:column="30">+<pos:position pos:line="467" pos:column="31"/></operator><literal type="number" pos:line="467" pos:column="31">3<pos:position pos:line="467" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="467" pos:column="34">offset_top<pos:position pos:line="467" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="467" pos:column="46">md<pos:position pos:line="467" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="467" pos:column="50">ims<pos:position pos:line="467" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="467" pos:column="55">eptrb<pos:position pos:line="467" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="467" pos:column="62">0<pos:position pos:line="467" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="467" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="467" pos:column="65"/></condition><then pos:line="467" pos:column="65"> <block type="pseudo"><return pos:line="467" pos:column="66">return <expr><name pos:line="467" pos:column="73">TRUE<pos:position pos:line="467" pos:column="77"/></name></expr>;<pos:position pos:line="467" pos:column="78"/></return></block></then></if>
        }<pos:position pos:line="468" pos:column="10"/></block></else></if>
      }<pos:position pos:line="469" pos:column="8"/></block>
    <return pos:line="470" pos:column="5">return <expr><name pos:line="470" pos:column="12">FALSE<pos:position pos:line="470" pos:column="17"/></name></expr>;<pos:position pos:line="470" pos:column="18"/></return>

    <comment type="block" pos:line="472" pos:column="5">/* Start of subject unless notbol, or after internal newline if multiline */</comment>

    <case pos:line="474" pos:column="5">case <expr><name pos:line="474" pos:column="10">OP_CIRC<pos:position pos:line="474" pos:column="17"/></name></expr>:<pos:position pos:line="474" pos:column="18"/></case>
    <if pos:line="475" pos:column="5">if <condition pos:line="475" pos:column="8">(<expr><name><name pos:line="475" pos:column="9">md<pos:position pos:line="475" pos:column="11"/></name><operator pos:line="475" pos:column="11">-&gt;<pos:position pos:line="475" pos:column="16"/></operator><name pos:line="475" pos:column="13">notbol<pos:position pos:line="475" pos:column="19"/></name></name> <operator pos:line="475" pos:column="20">&amp;&amp;<pos:position pos:line="475" pos:column="30"/></operator> <name pos:line="475" pos:column="23">eptr<pos:position pos:line="475" pos:column="27"/></name> <operator pos:line="475" pos:column="28">==<pos:position pos:line="475" pos:column="30"/></operator> <name><name pos:line="475" pos:column="31">md<pos:position pos:line="475" pos:column="33"/></name><operator pos:line="475" pos:column="33">-&gt;<pos:position pos:line="475" pos:column="38"/></operator><name pos:line="475" pos:column="35">start_subject<pos:position pos:line="475" pos:column="48"/></name></name></expr>)<pos:position pos:line="475" pos:column="49"/></condition><then pos:line="475" pos:column="49"> <block type="pseudo"><return pos:line="475" pos:column="50">return <expr><name pos:line="475" pos:column="57">FALSE<pos:position pos:line="475" pos:column="62"/></name></expr>;<pos:position pos:line="475" pos:column="63"/></return></block></then></if>
    <if pos:line="476" pos:column="5">if <condition pos:line="476" pos:column="8">(<expr><operator pos:line="476" pos:column="9">(<pos:position pos:line="476" pos:column="10"/></operator><name pos:line="476" pos:column="10">ims<pos:position pos:line="476" pos:column="13"/></name> <operator pos:line="476" pos:column="14">&amp;<pos:position pos:line="476" pos:column="19"/></operator> <name pos:line="476" pos:column="16">PCRE_MULTILINE<pos:position pos:line="476" pos:column="30"/></name><operator pos:line="476" pos:column="30">)<pos:position pos:line="476" pos:column="31"/></operator> <operator pos:line="476" pos:column="32">!=<pos:position pos:line="476" pos:column="34"/></operator> <literal type="number" pos:line="476" pos:column="35">0<pos:position pos:line="476" pos:column="36"/></literal></expr>)<pos:position pos:line="476" pos:column="37"/></condition><then pos:line="476" pos:column="37">
      <block pos:line="477" pos:column="7">{
      <if pos:line="478" pos:column="7">if <condition pos:line="478" pos:column="10">(<expr><name pos:line="478" pos:column="11">eptr<pos:position pos:line="478" pos:column="15"/></name> <operator pos:line="478" pos:column="16">!=<pos:position pos:line="478" pos:column="18"/></operator> <name><name pos:line="478" pos:column="19">md<pos:position pos:line="478" pos:column="21"/></name><operator pos:line="478" pos:column="21">-&gt;<pos:position pos:line="478" pos:column="26"/></operator><name pos:line="478" pos:column="23">start_subject<pos:position pos:line="478" pos:column="36"/></name></name> <operator pos:line="478" pos:column="37">&amp;&amp;<pos:position pos:line="478" pos:column="47"/></operator> <name><name pos:line="478" pos:column="40">eptr<pos:position pos:line="478" pos:column="44"/></name><index pos:line="478" pos:column="44">[<expr><operator pos:line="478" pos:column="45">-<pos:position pos:line="478" pos:column="46"/></operator><literal type="number" pos:line="478" pos:column="46">1<pos:position pos:line="478" pos:column="47"/></literal></expr>]<pos:position pos:line="478" pos:column="48"/></index></name> <operator pos:line="478" pos:column="49">!=<pos:position pos:line="478" pos:column="51"/></operator> <name pos:line="478" pos:column="52">NEWLINE<pos:position pos:line="478" pos:column="59"/></name></expr>)<pos:position pos:line="478" pos:column="60"/></condition><then pos:line="478" pos:column="60"> <block type="pseudo"><return pos:line="478" pos:column="61">return <expr><name pos:line="478" pos:column="68">FALSE<pos:position pos:line="478" pos:column="73"/></name></expr>;<pos:position pos:line="478" pos:column="74"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="479" pos:column="7">ecode<pos:position pos:line="479" pos:column="12"/></name><operator pos:line="479" pos:column="12">++<pos:position pos:line="479" pos:column="14"/></operator></expr>;<pos:position pos:line="479" pos:column="15"/></expr_stmt>
      <break pos:line="480" pos:column="7">break;<pos:position pos:line="480" pos:column="13"/></break>
      }<pos:position pos:line="481" pos:column="8"/></block></then></if>
    <comment type="block" pos:line="482" pos:column="5">/* ... else fall through */</comment>

    <comment type="block" pos:line="484" pos:column="5">/* Start of subject assertion */</comment>

    <case pos:line="486" pos:column="5">case <expr><name pos:line="486" pos:column="10">OP_SOD<pos:position pos:line="486" pos:column="16"/></name></expr>:<pos:position pos:line="486" pos:column="17"/></case>
    <if pos:line="487" pos:column="5">if <condition pos:line="487" pos:column="8">(<expr><name pos:line="487" pos:column="9">eptr<pos:position pos:line="487" pos:column="13"/></name> <operator pos:line="487" pos:column="14">!=<pos:position pos:line="487" pos:column="16"/></operator> <name><name pos:line="487" pos:column="17">md<pos:position pos:line="487" pos:column="19"/></name><operator pos:line="487" pos:column="19">-&gt;<pos:position pos:line="487" pos:column="24"/></operator><name pos:line="487" pos:column="21">start_subject<pos:position pos:line="487" pos:column="34"/></name></name></expr>)<pos:position pos:line="487" pos:column="35"/></condition><then pos:line="487" pos:column="35"> <block type="pseudo"><return pos:line="487" pos:column="36">return <expr><name pos:line="487" pos:column="43">FALSE<pos:position pos:line="487" pos:column="48"/></name></expr>;<pos:position pos:line="487" pos:column="49"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="488" pos:column="5">ecode<pos:position pos:line="488" pos:column="10"/></name><operator pos:line="488" pos:column="10">++<pos:position pos:line="488" pos:column="12"/></operator></expr>;<pos:position pos:line="488" pos:column="13"/></expr_stmt>
    <break pos:line="489" pos:column="5">break;<pos:position pos:line="489" pos:column="11"/></break>

    <comment type="block" pos:line="491" pos:column="5">/* Assert before internal newline if multiline, or before a terminating
    newline unless endonly is set, else end of subject unless noteol is set. */</comment>

    <case pos:line="494" pos:column="5">case <expr><name pos:line="494" pos:column="10">OP_DOLL<pos:position pos:line="494" pos:column="17"/></name></expr>:<pos:position pos:line="494" pos:column="18"/></case>
    <if pos:line="495" pos:column="5">if <condition pos:line="495" pos:column="8">(<expr><operator pos:line="495" pos:column="9">(<pos:position pos:line="495" pos:column="10"/></operator><name pos:line="495" pos:column="10">ims<pos:position pos:line="495" pos:column="13"/></name> <operator pos:line="495" pos:column="14">&amp;<pos:position pos:line="495" pos:column="19"/></operator> <name pos:line="495" pos:column="16">PCRE_MULTILINE<pos:position pos:line="495" pos:column="30"/></name><operator pos:line="495" pos:column="30">)<pos:position pos:line="495" pos:column="31"/></operator> <operator pos:line="495" pos:column="32">!=<pos:position pos:line="495" pos:column="34"/></operator> <literal type="number" pos:line="495" pos:column="35">0<pos:position pos:line="495" pos:column="36"/></literal></expr>)<pos:position pos:line="495" pos:column="37"/></condition><then pos:line="495" pos:column="37">
      <block pos:line="496" pos:column="7">{
      <if pos:line="497" pos:column="7">if <condition pos:line="497" pos:column="10">(<expr><name pos:line="497" pos:column="11">eptr<pos:position pos:line="497" pos:column="15"/></name> <operator pos:line="497" pos:column="16">&lt;<pos:position pos:line="497" pos:column="20"/></operator> <name><name pos:line="497" pos:column="18">md<pos:position pos:line="497" pos:column="20"/></name><operator pos:line="497" pos:column="20">-&gt;<pos:position pos:line="497" pos:column="25"/></operator><name pos:line="497" pos:column="22">end_subject<pos:position pos:line="497" pos:column="33"/></name></name></expr>)<pos:position pos:line="497" pos:column="34"/></condition><then pos:line="497" pos:column="34"> <block pos:line="497" pos:column="35">{ <if pos:line="497" pos:column="37">if <condition pos:line="497" pos:column="40">(<expr><operator pos:line="497" pos:column="41">*<pos:position pos:line="497" pos:column="42"/></operator><name pos:line="497" pos:column="42">eptr<pos:position pos:line="497" pos:column="46"/></name> <operator pos:line="497" pos:column="47">!=<pos:position pos:line="497" pos:column="49"/></operator> <name pos:line="497" pos:column="50">NEWLINE<pos:position pos:line="497" pos:column="57"/></name></expr>)<pos:position pos:line="497" pos:column="58"/></condition><then pos:line="497" pos:column="58"> <block type="pseudo"><return pos:line="497" pos:column="59">return <expr><name pos:line="497" pos:column="66">FALSE<pos:position pos:line="497" pos:column="71"/></name></expr>;<pos:position pos:line="497" pos:column="72"/></return></block></then></if> }<pos:position pos:line="497" pos:column="74"/></block></then>
        <else pos:line="498" pos:column="9">else <block pos:line="498" pos:column="14">{ <if pos:line="498" pos:column="16">if <condition pos:line="498" pos:column="19">(<expr><name><name pos:line="498" pos:column="20">md<pos:position pos:line="498" pos:column="22"/></name><operator pos:line="498" pos:column="22">-&gt;<pos:position pos:line="498" pos:column="27"/></operator><name pos:line="498" pos:column="24">noteol<pos:position pos:line="498" pos:column="30"/></name></name></expr>)<pos:position pos:line="498" pos:column="31"/></condition><then pos:line="498" pos:column="31"> <block type="pseudo"><return pos:line="498" pos:column="32">return <expr><name pos:line="498" pos:column="39">FALSE<pos:position pos:line="498" pos:column="44"/></name></expr>;<pos:position pos:line="498" pos:column="45"/></return></block></then></if> }<pos:position pos:line="498" pos:column="47"/></block></else></if>
      <expr_stmt><expr><name pos:line="499" pos:column="7">ecode<pos:position pos:line="499" pos:column="12"/></name><operator pos:line="499" pos:column="12">++<pos:position pos:line="499" pos:column="14"/></operator></expr>;<pos:position pos:line="499" pos:column="15"/></expr_stmt>
      <break pos:line="500" pos:column="7">break;<pos:position pos:line="500" pos:column="13"/></break>
      }<pos:position pos:line="501" pos:column="8"/></block></then>
    <else pos:line="502" pos:column="5">else
      <block pos:line="503" pos:column="7">{
      <if pos:line="504" pos:column="7">if <condition pos:line="504" pos:column="10">(<expr><name><name pos:line="504" pos:column="11">md<pos:position pos:line="504" pos:column="13"/></name><operator pos:line="504" pos:column="13">-&gt;<pos:position pos:line="504" pos:column="18"/></operator><name pos:line="504" pos:column="15">noteol<pos:position pos:line="504" pos:column="21"/></name></name></expr>)<pos:position pos:line="504" pos:column="22"/></condition><then pos:line="504" pos:column="22"> <block type="pseudo"><return pos:line="504" pos:column="23">return <expr><name pos:line="504" pos:column="30">FALSE<pos:position pos:line="504" pos:column="35"/></name></expr>;<pos:position pos:line="504" pos:column="36"/></return></block></then></if>
      <if pos:line="505" pos:column="7">if <condition pos:line="505" pos:column="10">(<expr><operator pos:line="505" pos:column="11">!<pos:position pos:line="505" pos:column="12"/></operator><name><name pos:line="505" pos:column="12">md<pos:position pos:line="505" pos:column="14"/></name><operator pos:line="505" pos:column="14">-&gt;<pos:position pos:line="505" pos:column="19"/></operator><name pos:line="505" pos:column="16">endonly<pos:position pos:line="505" pos:column="23"/></name></name></expr>)<pos:position pos:line="505" pos:column="24"/></condition><then pos:line="505" pos:column="24">
        <block pos:line="506" pos:column="9">{
        <if pos:line="507" pos:column="9">if <condition pos:line="507" pos:column="12">(<expr><name pos:line="507" pos:column="13">eptr<pos:position pos:line="507" pos:column="17"/></name> <operator pos:line="507" pos:column="18">&lt;<pos:position pos:line="507" pos:column="22"/></operator> <name><name pos:line="507" pos:column="20">md<pos:position pos:line="507" pos:column="22"/></name><operator pos:line="507" pos:column="22">-&gt;<pos:position pos:line="507" pos:column="27"/></operator><name pos:line="507" pos:column="24">end_subject<pos:position pos:line="507" pos:column="35"/></name></name> <operator pos:line="507" pos:column="36">-<pos:position pos:line="507" pos:column="37"/></operator> <literal type="number" pos:line="507" pos:column="38">1<pos:position pos:line="507" pos:column="39"/></literal> <operator pos:line="507" pos:column="40">||<pos:position pos:line="507" pos:column="42"/></operator>
           <operator pos:line="508" pos:column="12">(<pos:position pos:line="508" pos:column="13"/></operator><name pos:line="508" pos:column="13">eptr<pos:position pos:line="508" pos:column="17"/></name> <operator pos:line="508" pos:column="18">==<pos:position pos:line="508" pos:column="20"/></operator> <name><name pos:line="508" pos:column="21">md<pos:position pos:line="508" pos:column="23"/></name><operator pos:line="508" pos:column="23">-&gt;<pos:position pos:line="508" pos:column="28"/></operator><name pos:line="508" pos:column="25">end_subject<pos:position pos:line="508" pos:column="36"/></name></name> <operator pos:line="508" pos:column="37">-<pos:position pos:line="508" pos:column="38"/></operator> <literal type="number" pos:line="508" pos:column="39">1<pos:position pos:line="508" pos:column="40"/></literal> <operator pos:line="508" pos:column="41">&amp;&amp;<pos:position pos:line="508" pos:column="51"/></operator> <operator pos:line="508" pos:column="44">*<pos:position pos:line="508" pos:column="45"/></operator><name pos:line="508" pos:column="45">eptr<pos:position pos:line="508" pos:column="49"/></name> <operator pos:line="508" pos:column="50">!=<pos:position pos:line="508" pos:column="52"/></operator> <name pos:line="508" pos:column="53">NEWLINE<pos:position pos:line="508" pos:column="60"/></name><operator pos:line="508" pos:column="60">)<pos:position pos:line="508" pos:column="61"/></operator></expr>)<pos:position pos:line="508" pos:column="62"/></condition><then pos:line="508" pos:column="62"> <block type="pseudo"><return pos:line="508" pos:column="63">return <expr><name pos:line="508" pos:column="70">FALSE<pos:position pos:line="508" pos:column="75"/></name></expr>;<pos:position pos:line="508" pos:column="76"/></return></block></then></if>

        <expr_stmt><expr><name pos:line="510" pos:column="9">ecode<pos:position pos:line="510" pos:column="14"/></name><operator pos:line="510" pos:column="14">++<pos:position pos:line="510" pos:column="16"/></operator></expr>;<pos:position pos:line="510" pos:column="17"/></expr_stmt>
        <break pos:line="511" pos:column="9">break;<pos:position pos:line="511" pos:column="15"/></break>
        }<pos:position pos:line="512" pos:column="10"/></block></then></if>
      }<pos:position pos:line="513" pos:column="8"/></block></else></if>
    <comment type="block" pos:line="514" pos:column="5">/* ... else fall through */</comment>

    <comment type="block" pos:line="516" pos:column="5">/* End of subject assertion (\z) */</comment>

    <case pos:line="518" pos:column="5">case <expr><name pos:line="518" pos:column="10">OP_EOD<pos:position pos:line="518" pos:column="16"/></name></expr>:<pos:position pos:line="518" pos:column="17"/></case>
    <if pos:line="519" pos:column="5">if <condition pos:line="519" pos:column="8">(<expr><name pos:line="519" pos:column="9">eptr<pos:position pos:line="519" pos:column="13"/></name> <operator pos:line="519" pos:column="14">&lt;<pos:position pos:line="519" pos:column="18"/></operator> <name><name pos:line="519" pos:column="16">md<pos:position pos:line="519" pos:column="18"/></name><operator pos:line="519" pos:column="18">-&gt;<pos:position pos:line="519" pos:column="23"/></operator><name pos:line="519" pos:column="20">end_subject<pos:position pos:line="519" pos:column="31"/></name></name></expr>)<pos:position pos:line="519" pos:column="32"/></condition><then pos:line="519" pos:column="32"> <block type="pseudo"><return pos:line="519" pos:column="33">return <expr><name pos:line="519" pos:column="40">FALSE<pos:position pos:line="519" pos:column="45"/></name></expr>;<pos:position pos:line="519" pos:column="46"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="520" pos:column="5">ecode<pos:position pos:line="520" pos:column="10"/></name><operator pos:line="520" pos:column="10">++<pos:position pos:line="520" pos:column="12"/></operator></expr>;<pos:position pos:line="520" pos:column="13"/></expr_stmt>
    <break pos:line="521" pos:column="5">break;<pos:position pos:line="521" pos:column="11"/></break>

    <comment type="block" pos:line="523" pos:column="5">/* End of subject or ending \n assertion (\Z) */</comment>

    <case pos:line="525" pos:column="5">case <expr><name pos:line="525" pos:column="10">OP_EODN<pos:position pos:line="525" pos:column="17"/></name></expr>:<pos:position pos:line="525" pos:column="18"/></case>
    <if pos:line="526" pos:column="5">if <condition pos:line="526" pos:column="8">(<expr><name pos:line="526" pos:column="9">eptr<pos:position pos:line="526" pos:column="13"/></name> <operator pos:line="526" pos:column="14">&lt;<pos:position pos:line="526" pos:column="18"/></operator> <name><name pos:line="526" pos:column="16">md<pos:position pos:line="526" pos:column="18"/></name><operator pos:line="526" pos:column="18">-&gt;<pos:position pos:line="526" pos:column="23"/></operator><name pos:line="526" pos:column="20">end_subject<pos:position pos:line="526" pos:column="31"/></name></name> <operator pos:line="526" pos:column="32">-<pos:position pos:line="526" pos:column="33"/></operator> <literal type="number" pos:line="526" pos:column="34">1<pos:position pos:line="526" pos:column="35"/></literal> <operator pos:line="526" pos:column="36">||<pos:position pos:line="526" pos:column="38"/></operator>
       <operator pos:line="527" pos:column="8">(<pos:position pos:line="527" pos:column="9"/></operator><name pos:line="527" pos:column="9">eptr<pos:position pos:line="527" pos:column="13"/></name> <operator pos:line="527" pos:column="14">==<pos:position pos:line="527" pos:column="16"/></operator> <name><name pos:line="527" pos:column="17">md<pos:position pos:line="527" pos:column="19"/></name><operator pos:line="527" pos:column="19">-&gt;<pos:position pos:line="527" pos:column="24"/></operator><name pos:line="527" pos:column="21">end_subject<pos:position pos:line="527" pos:column="32"/></name></name> <operator pos:line="527" pos:column="33">-<pos:position pos:line="527" pos:column="34"/></operator> <literal type="number" pos:line="527" pos:column="35">1<pos:position pos:line="527" pos:column="36"/></literal> <operator pos:line="527" pos:column="37">&amp;&amp;<pos:position pos:line="527" pos:column="47"/></operator> <operator pos:line="527" pos:column="40">*<pos:position pos:line="527" pos:column="41"/></operator><name pos:line="527" pos:column="41">eptr<pos:position pos:line="527" pos:column="45"/></name> <operator pos:line="527" pos:column="46">!=<pos:position pos:line="527" pos:column="48"/></operator> <name pos:line="527" pos:column="49">NEWLINE<pos:position pos:line="527" pos:column="56"/></name><operator pos:line="527" pos:column="56">)<pos:position pos:line="527" pos:column="57"/></operator></expr>)<pos:position pos:line="527" pos:column="58"/></condition><then pos:line="527" pos:column="58"> <block type="pseudo"><return pos:line="527" pos:column="59">return <expr><name pos:line="527" pos:column="66">FALSE<pos:position pos:line="527" pos:column="71"/></name></expr>;<pos:position pos:line="527" pos:column="72"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="528" pos:column="5">ecode<pos:position pos:line="528" pos:column="10"/></name><operator pos:line="528" pos:column="10">++<pos:position pos:line="528" pos:column="12"/></operator></expr>;<pos:position pos:line="528" pos:column="13"/></expr_stmt>
    <break pos:line="529" pos:column="5">break;<pos:position pos:line="529" pos:column="11"/></break>

    <comment type="block" pos:line="531" pos:column="5">/* Word boundary assertions */</comment>

    <case pos:line="533" pos:column="5">case <expr><name pos:line="533" pos:column="10">OP_NOT_WORD_BOUNDARY<pos:position pos:line="533" pos:column="30"/></name></expr>:<pos:position pos:line="533" pos:column="31"/></case>
    <case pos:line="534" pos:column="5">case <expr><name pos:line="534" pos:column="10">OP_WORD_BOUNDARY<pos:position pos:line="534" pos:column="26"/></name></expr>:<pos:position pos:line="534" pos:column="27"/></case>
      <block pos:line="535" pos:column="7">{
      <decl_stmt><decl><type><name pos:line="536" pos:column="7">BOOL<pos:position pos:line="536" pos:column="11"/></name></type> <name pos:line="536" pos:column="12">prev_is_word<pos:position pos:line="536" pos:column="24"/></name> <init pos:line="536" pos:column="25">= <expr><operator pos:line="536" pos:column="27">(<pos:position pos:line="536" pos:column="28"/></operator><name pos:line="536" pos:column="28">eptr<pos:position pos:line="536" pos:column="32"/></name> <operator pos:line="536" pos:column="33">!=<pos:position pos:line="536" pos:column="35"/></operator> <name><name pos:line="536" pos:column="36">md<pos:position pos:line="536" pos:column="38"/></name><operator pos:line="536" pos:column="38">-&gt;<pos:position pos:line="536" pos:column="43"/></operator><name pos:line="536" pos:column="40">start_subject<pos:position pos:line="536" pos:column="53"/></name></name><operator pos:line="536" pos:column="53">)<pos:position pos:line="536" pos:column="54"/></operator> <operator pos:line="536" pos:column="55">&amp;&amp;<pos:position pos:line="536" pos:column="65"/></operator>
        <operator pos:line="537" pos:column="9">(<pos:position pos:line="537" pos:column="10"/></operator><operator pos:line="537" pos:column="10">(<pos:position pos:line="537" pos:column="11"/></operator><name><name pos:line="537" pos:column="11">md<pos:position pos:line="537" pos:column="13"/></name><operator pos:line="537" pos:column="13">-&gt;<pos:position pos:line="537" pos:column="18"/></operator><name pos:line="537" pos:column="15">ctypes<pos:position pos:line="537" pos:column="21"/></name><index pos:line="537" pos:column="21">[<expr><name><name pos:line="537" pos:column="22">eptr<pos:position pos:line="537" pos:column="26"/></name><index pos:line="537" pos:column="26">[<expr><operator pos:line="537" pos:column="27">-<pos:position pos:line="537" pos:column="28"/></operator><literal type="number" pos:line="537" pos:column="28">1<pos:position pos:line="537" pos:column="29"/></literal></expr>]<pos:position pos:line="537" pos:column="30"/></index></name></expr>]<pos:position pos:line="537" pos:column="31"/></index></name> <operator pos:line="537" pos:column="32">&amp;<pos:position pos:line="537" pos:column="37"/></operator> <name pos:line="537" pos:column="34">ctype_word<pos:position pos:line="537" pos:column="44"/></name><operator pos:line="537" pos:column="44">)<pos:position pos:line="537" pos:column="45"/></operator> <operator pos:line="537" pos:column="46">!=<pos:position pos:line="537" pos:column="48"/></operator> <literal type="number" pos:line="537" pos:column="49">0<pos:position pos:line="537" pos:column="50"/></literal><operator pos:line="537" pos:column="50">)<pos:position pos:line="537" pos:column="51"/></operator></expr></init></decl>;<pos:position pos:line="537" pos:column="52"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="538" pos:column="7">BOOL<pos:position pos:line="538" pos:column="11"/></name></type> <name pos:line="538" pos:column="12">cur_is_word<pos:position pos:line="538" pos:column="23"/></name> <init pos:line="538" pos:column="24">= <expr><operator pos:line="538" pos:column="26">(<pos:position pos:line="538" pos:column="27"/></operator><name pos:line="538" pos:column="27">eptr<pos:position pos:line="538" pos:column="31"/></name> <operator pos:line="538" pos:column="32">&lt;<pos:position pos:line="538" pos:column="36"/></operator> <name><name pos:line="538" pos:column="34">md<pos:position pos:line="538" pos:column="36"/></name><operator pos:line="538" pos:column="36">-&gt;<pos:position pos:line="538" pos:column="41"/></operator><name pos:line="538" pos:column="38">end_subject<pos:position pos:line="538" pos:column="49"/></name></name><operator pos:line="538" pos:column="49">)<pos:position pos:line="538" pos:column="50"/></operator> <operator pos:line="538" pos:column="51">&amp;&amp;<pos:position pos:line="538" pos:column="61"/></operator>
        <operator pos:line="539" pos:column="9">(<pos:position pos:line="539" pos:column="10"/></operator><operator pos:line="539" pos:column="10">(<pos:position pos:line="539" pos:column="11"/></operator><name><name pos:line="539" pos:column="11">md<pos:position pos:line="539" pos:column="13"/></name><operator pos:line="539" pos:column="13">-&gt;<pos:position pos:line="539" pos:column="18"/></operator><name pos:line="539" pos:column="15">ctypes<pos:position pos:line="539" pos:column="21"/></name><index pos:line="539" pos:column="21">[<expr><operator pos:line="539" pos:column="22">*<pos:position pos:line="539" pos:column="23"/></operator><name pos:line="539" pos:column="23">eptr<pos:position pos:line="539" pos:column="27"/></name></expr>]<pos:position pos:line="539" pos:column="28"/></index></name> <operator pos:line="539" pos:column="29">&amp;<pos:position pos:line="539" pos:column="34"/></operator> <name pos:line="539" pos:column="31">ctype_word<pos:position pos:line="539" pos:column="41"/></name><operator pos:line="539" pos:column="41">)<pos:position pos:line="539" pos:column="42"/></operator> <operator pos:line="539" pos:column="43">!=<pos:position pos:line="539" pos:column="45"/></operator> <literal type="number" pos:line="539" pos:column="46">0<pos:position pos:line="539" pos:column="47"/></literal><operator pos:line="539" pos:column="47">)<pos:position pos:line="539" pos:column="48"/></operator></expr></init></decl>;<pos:position pos:line="539" pos:column="49"/></decl_stmt>
      <if pos:line="540" pos:column="7">if <condition pos:line="540" pos:column="10">(<expr><ternary><condition><expr><operator pos:line="540" pos:column="11">(<pos:position pos:line="540" pos:column="12"/></operator><operator pos:line="540" pos:column="12">*<pos:position pos:line="540" pos:column="13"/></operator><name pos:line="540" pos:column="13">ecode<pos:position pos:line="540" pos:column="18"/></name><operator pos:line="540" pos:column="18">++<pos:position pos:line="540" pos:column="20"/></operator> <operator pos:line="540" pos:column="21">==<pos:position pos:line="540" pos:column="23"/></operator> <name pos:line="540" pos:column="24">OP_WORD_BOUNDARY<pos:position pos:line="540" pos:column="40"/></name><operator pos:line="540" pos:column="40">)<pos:position pos:line="540" pos:column="41"/></operator></expr>?<pos:position pos:line="540" pos:column="42"/></condition><then pos:line="540" pos:column="42">
           <expr><name pos:line="541" pos:column="12">cur_is_word<pos:position pos:line="541" pos:column="23"/></name> <operator pos:line="541" pos:column="24">==<pos:position pos:line="541" pos:column="26"/></operator> <name pos:line="541" pos:column="27">prev_is_word<pos:position pos:line="541" pos:column="39"/></name></expr> <pos:position pos:line="541" pos:column="40"/></then><else pos:line="541" pos:column="40">: <expr><name pos:line="541" pos:column="42">cur_is_word<pos:position pos:line="541" pos:column="53"/></name> <operator pos:line="541" pos:column="54">!=<pos:position pos:line="541" pos:column="56"/></operator> <name pos:line="541" pos:column="57">prev_is_word<pos:position pos:line="541" pos:column="69"/></name></expr></else></ternary></expr>)<pos:position pos:line="541" pos:column="70"/></condition><then pos:line="541" pos:column="70">
        <block type="pseudo"><return pos:line="542" pos:column="9">return <expr><name pos:line="542" pos:column="16">FALSE<pos:position pos:line="542" pos:column="21"/></name></expr>;<pos:position pos:line="542" pos:column="22"/></return></block></then></if>
      }<pos:position pos:line="543" pos:column="8"/></block>
    <break pos:line="544" pos:column="5">break;<pos:position pos:line="544" pos:column="11"/></break>

    <comment type="block" pos:line="546" pos:column="5">/* Match a single character type; inline for speed */</comment>

    <case pos:line="548" pos:column="5">case <expr><name pos:line="548" pos:column="10">OP_ANY<pos:position pos:line="548" pos:column="16"/></name></expr>:<pos:position pos:line="548" pos:column="17"/></case>
    <if pos:line="549" pos:column="5">if <condition pos:line="549" pos:column="8">(<expr><operator pos:line="549" pos:column="9">(<pos:position pos:line="549" pos:column="10"/></operator><name pos:line="549" pos:column="10">ims<pos:position pos:line="549" pos:column="13"/></name> <operator pos:line="549" pos:column="14">&amp;<pos:position pos:line="549" pos:column="19"/></operator> <name pos:line="549" pos:column="16">PCRE_DOTALL<pos:position pos:line="549" pos:column="27"/></name><operator pos:line="549" pos:column="27">)<pos:position pos:line="549" pos:column="28"/></operator> <operator pos:line="549" pos:column="29">==<pos:position pos:line="549" pos:column="31"/></operator> <literal type="number" pos:line="549" pos:column="32">0<pos:position pos:line="549" pos:column="33"/></literal> <operator pos:line="549" pos:column="34">&amp;&amp;<pos:position pos:line="549" pos:column="44"/></operator> <name pos:line="549" pos:column="37">eptr<pos:position pos:line="549" pos:column="41"/></name> <operator pos:line="549" pos:column="42">&lt;<pos:position pos:line="549" pos:column="46"/></operator> <name><name pos:line="549" pos:column="44">md<pos:position pos:line="549" pos:column="46"/></name><operator pos:line="549" pos:column="46">-&gt;<pos:position pos:line="549" pos:column="51"/></operator><name pos:line="549" pos:column="48">end_subject<pos:position pos:line="549" pos:column="59"/></name></name> <operator pos:line="549" pos:column="60">&amp;&amp;<pos:position pos:line="549" pos:column="70"/></operator> <operator pos:line="549" pos:column="63">*<pos:position pos:line="549" pos:column="64"/></operator><name pos:line="549" pos:column="64">eptr<pos:position pos:line="549" pos:column="68"/></name> <operator pos:line="549" pos:column="69">==<pos:position pos:line="549" pos:column="71"/></operator> <name pos:line="549" pos:column="72">NEWLINE<pos:position pos:line="549" pos:column="79"/></name></expr>)<pos:position pos:line="549" pos:column="80"/></condition><then pos:line="549" pos:column="80">
      <block type="pseudo"><return pos:line="550" pos:column="7">return <expr><name pos:line="550" pos:column="14">FALSE<pos:position pos:line="550" pos:column="19"/></name></expr>;<pos:position pos:line="550" pos:column="20"/></return></block></then></if>
    <if pos:line="551" pos:column="5">if <condition pos:line="551" pos:column="8">(<expr><name pos:line="551" pos:column="9">eptr<pos:position pos:line="551" pos:column="13"/></name><operator pos:line="551" pos:column="13">++<pos:position pos:line="551" pos:column="15"/></operator> <operator pos:line="551" pos:column="16">&gt;=<pos:position pos:line="551" pos:column="21"/></operator> <name><name pos:line="551" pos:column="19">md<pos:position pos:line="551" pos:column="21"/></name><operator pos:line="551" pos:column="21">-&gt;<pos:position pos:line="551" pos:column="26"/></operator><name pos:line="551" pos:column="23">end_subject<pos:position pos:line="551" pos:column="34"/></name></name></expr>)<pos:position pos:line="551" pos:column="35"/></condition><then pos:line="551" pos:column="35"> <block type="pseudo"><return pos:line="551" pos:column="36">return <expr><name pos:line="551" pos:column="43">FALSE<pos:position pos:line="551" pos:column="48"/></name></expr>;<pos:position pos:line="551" pos:column="49"/></return></block></then></if>
<cpp:ifdef pos:line="552" pos:column="1">#<cpp:directive pos:line="552" pos:column="2">ifdef<pos:position pos:line="552" pos:column="7"/></cpp:directive> <name pos:line="552" pos:column="8">SUPPORT_UTF8<pos:position pos:line="552" pos:column="20"/></name></cpp:ifdef>
    <if pos:line="553" pos:column="5">if <condition pos:line="553" pos:column="8">(<expr><name><name pos:line="553" pos:column="9">md<pos:position pos:line="553" pos:column="11"/></name><operator pos:line="553" pos:column="11">-&gt;<pos:position pos:line="553" pos:column="16"/></operator><name pos:line="553" pos:column="13">utf8<pos:position pos:line="553" pos:column="17"/></name></name></expr>)<pos:position pos:line="553" pos:column="18"/></condition><then pos:line="553" pos:column="18">
      <block type="pseudo"><while pos:line="554" pos:column="7">while <condition pos:line="554" pos:column="13">(<expr><name pos:line="554" pos:column="14">eptr<pos:position pos:line="554" pos:column="18"/></name> <operator pos:line="554" pos:column="19">&lt;<pos:position pos:line="554" pos:column="23"/></operator> <name><name pos:line="554" pos:column="21">md<pos:position pos:line="554" pos:column="23"/></name><operator pos:line="554" pos:column="23">-&gt;<pos:position pos:line="554" pos:column="28"/></operator><name pos:line="554" pos:column="25">end_subject<pos:position pos:line="554" pos:column="36"/></name></name> <operator pos:line="554" pos:column="37">&amp;&amp;<pos:position pos:line="554" pos:column="47"/></operator> <operator pos:line="554" pos:column="40">(<pos:position pos:line="554" pos:column="41"/></operator><operator pos:line="554" pos:column="41">*<pos:position pos:line="554" pos:column="42"/></operator><name pos:line="554" pos:column="42">eptr<pos:position pos:line="554" pos:column="46"/></name> <operator pos:line="554" pos:column="47">&amp;<pos:position pos:line="554" pos:column="52"/></operator> <literal type="number" pos:line="554" pos:column="49">0xc0<pos:position pos:line="554" pos:column="53"/></literal><operator pos:line="554" pos:column="53">)<pos:position pos:line="554" pos:column="54"/></operator> <operator pos:line="554" pos:column="55">==<pos:position pos:line="554" pos:column="57"/></operator> <literal type="number" pos:line="554" pos:column="58">0x80<pos:position pos:line="554" pos:column="62"/></literal></expr>)<pos:position pos:line="554" pos:column="63"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="554" pos:column="64">eptr<pos:position pos:line="554" pos:column="68"/></name><operator pos:line="554" pos:column="68">++<pos:position pos:line="554" pos:column="70"/></operator></expr>;<pos:position pos:line="554" pos:column="71"/></expr_stmt></block></while></block></then></if>
<cpp:endif pos:line="555" pos:column="1">#<cpp:directive pos:line="555" pos:column="2">endif<pos:position pos:line="555" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="556" pos:column="5">ecode<pos:position pos:line="556" pos:column="10"/></name><operator pos:line="556" pos:column="10">++<pos:position pos:line="556" pos:column="12"/></operator></expr>;<pos:position pos:line="556" pos:column="13"/></expr_stmt>
    <break pos:line="557" pos:column="5">break;<pos:position pos:line="557" pos:column="11"/></break>

    <case pos:line="559" pos:column="5">case <expr><name pos:line="559" pos:column="10">OP_NOT_DIGIT<pos:position pos:line="559" pos:column="22"/></name></expr>:<pos:position pos:line="559" pos:column="23"/></case>
    <if pos:line="560" pos:column="5">if <condition pos:line="560" pos:column="8">(<expr><name pos:line="560" pos:column="9">eptr<pos:position pos:line="560" pos:column="13"/></name> <operator pos:line="560" pos:column="14">&gt;=<pos:position pos:line="560" pos:column="19"/></operator> <name><name pos:line="560" pos:column="17">md<pos:position pos:line="560" pos:column="19"/></name><operator pos:line="560" pos:column="19">-&gt;<pos:position pos:line="560" pos:column="24"/></operator><name pos:line="560" pos:column="21">end_subject<pos:position pos:line="560" pos:column="32"/></name></name> <operator pos:line="560" pos:column="33">||<pos:position pos:line="560" pos:column="35"/></operator>
       <operator pos:line="561" pos:column="8">(<pos:position pos:line="561" pos:column="9"/></operator><name><name pos:line="561" pos:column="9">md<pos:position pos:line="561" pos:column="11"/></name><operator pos:line="561" pos:column="11">-&gt;<pos:position pos:line="561" pos:column="16"/></operator><name pos:line="561" pos:column="13">ctypes<pos:position pos:line="561" pos:column="19"/></name><index pos:line="561" pos:column="19">[<expr><operator pos:line="561" pos:column="20">*<pos:position pos:line="561" pos:column="21"/></operator><name pos:line="561" pos:column="21">eptr<pos:position pos:line="561" pos:column="25"/></name><operator pos:line="561" pos:column="25">++<pos:position pos:line="561" pos:column="27"/></operator></expr>]<pos:position pos:line="561" pos:column="28"/></index></name> <operator pos:line="561" pos:column="29">&amp;<pos:position pos:line="561" pos:column="34"/></operator> <name pos:line="561" pos:column="31">ctype_digit<pos:position pos:line="561" pos:column="42"/></name><operator pos:line="561" pos:column="42">)<pos:position pos:line="561" pos:column="43"/></operator> <operator pos:line="561" pos:column="44">!=<pos:position pos:line="561" pos:column="46"/></operator> <literal type="number" pos:line="561" pos:column="47">0<pos:position pos:line="561" pos:column="48"/></literal></expr>)<pos:position pos:line="561" pos:column="49"/></condition><then pos:line="561" pos:column="49">
      <block type="pseudo"><return pos:line="562" pos:column="7">return <expr><name pos:line="562" pos:column="14">FALSE<pos:position pos:line="562" pos:column="19"/></name></expr>;<pos:position pos:line="562" pos:column="20"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="563" pos:column="5">ecode<pos:position pos:line="563" pos:column="10"/></name><operator pos:line="563" pos:column="10">++<pos:position pos:line="563" pos:column="12"/></operator></expr>;<pos:position pos:line="563" pos:column="13"/></expr_stmt>
    <break pos:line="564" pos:column="5">break;<pos:position pos:line="564" pos:column="11"/></break>

    <case pos:line="566" pos:column="5">case <expr><name pos:line="566" pos:column="10">OP_DIGIT<pos:position pos:line="566" pos:column="18"/></name></expr>:<pos:position pos:line="566" pos:column="19"/></case>
    <if pos:line="567" pos:column="5">if <condition pos:line="567" pos:column="8">(<expr><name pos:line="567" pos:column="9">eptr<pos:position pos:line="567" pos:column="13"/></name> <operator pos:line="567" pos:column="14">&gt;=<pos:position pos:line="567" pos:column="19"/></operator> <name><name pos:line="567" pos:column="17">md<pos:position pos:line="567" pos:column="19"/></name><operator pos:line="567" pos:column="19">-&gt;<pos:position pos:line="567" pos:column="24"/></operator><name pos:line="567" pos:column="21">end_subject<pos:position pos:line="567" pos:column="32"/></name></name> <operator pos:line="567" pos:column="33">||<pos:position pos:line="567" pos:column="35"/></operator>
       <operator pos:line="568" pos:column="8">(<pos:position pos:line="568" pos:column="9"/></operator><name><name pos:line="568" pos:column="9">md<pos:position pos:line="568" pos:column="11"/></name><operator pos:line="568" pos:column="11">-&gt;<pos:position pos:line="568" pos:column="16"/></operator><name pos:line="568" pos:column="13">ctypes<pos:position pos:line="568" pos:column="19"/></name><index pos:line="568" pos:column="19">[<expr><operator pos:line="568" pos:column="20">*<pos:position pos:line="568" pos:column="21"/></operator><name pos:line="568" pos:column="21">eptr<pos:position pos:line="568" pos:column="25"/></name><operator pos:line="568" pos:column="25">++<pos:position pos:line="568" pos:column="27"/></operator></expr>]<pos:position pos:line="568" pos:column="28"/></index></name> <operator pos:line="568" pos:column="29">&amp;<pos:position pos:line="568" pos:column="34"/></operator> <name pos:line="568" pos:column="31">ctype_digit<pos:position pos:line="568" pos:column="42"/></name><operator pos:line="568" pos:column="42">)<pos:position pos:line="568" pos:column="43"/></operator> <operator pos:line="568" pos:column="44">==<pos:position pos:line="568" pos:column="46"/></operator> <literal type="number" pos:line="568" pos:column="47">0<pos:position pos:line="568" pos:column="48"/></literal></expr>)<pos:position pos:line="568" pos:column="49"/></condition><then pos:line="568" pos:column="49">
      <block type="pseudo"><return pos:line="569" pos:column="7">return <expr><name pos:line="569" pos:column="14">FALSE<pos:position pos:line="569" pos:column="19"/></name></expr>;<pos:position pos:line="569" pos:column="20"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="570" pos:column="5">ecode<pos:position pos:line="570" pos:column="10"/></name><operator pos:line="570" pos:column="10">++<pos:position pos:line="570" pos:column="12"/></operator></expr>;<pos:position pos:line="570" pos:column="13"/></expr_stmt>
    <break pos:line="571" pos:column="5">break;<pos:position pos:line="571" pos:column="11"/></break>

    <case pos:line="573" pos:column="5">case <expr><name pos:line="573" pos:column="10">OP_NOT_WHITESPACE<pos:position pos:line="573" pos:column="27"/></name></expr>:<pos:position pos:line="573" pos:column="28"/></case>
    <if pos:line="574" pos:column="5">if <condition pos:line="574" pos:column="8">(<expr><name pos:line="574" pos:column="9">eptr<pos:position pos:line="574" pos:column="13"/></name> <operator pos:line="574" pos:column="14">&gt;=<pos:position pos:line="574" pos:column="19"/></operator> <name><name pos:line="574" pos:column="17">md<pos:position pos:line="574" pos:column="19"/></name><operator pos:line="574" pos:column="19">-&gt;<pos:position pos:line="574" pos:column="24"/></operator><name pos:line="574" pos:column="21">end_subject<pos:position pos:line="574" pos:column="32"/></name></name> <operator pos:line="574" pos:column="33">||<pos:position pos:line="574" pos:column="35"/></operator>
       <operator pos:line="575" pos:column="8">(<pos:position pos:line="575" pos:column="9"/></operator><name><name pos:line="575" pos:column="9">md<pos:position pos:line="575" pos:column="11"/></name><operator pos:line="575" pos:column="11">-&gt;<pos:position pos:line="575" pos:column="16"/></operator><name pos:line="575" pos:column="13">ctypes<pos:position pos:line="575" pos:column="19"/></name><index pos:line="575" pos:column="19">[<expr><operator pos:line="575" pos:column="20">*<pos:position pos:line="575" pos:column="21"/></operator><name pos:line="575" pos:column="21">eptr<pos:position pos:line="575" pos:column="25"/></name><operator pos:line="575" pos:column="25">++<pos:position pos:line="575" pos:column="27"/></operator></expr>]<pos:position pos:line="575" pos:column="28"/></index></name> <operator pos:line="575" pos:column="29">&amp;<pos:position pos:line="575" pos:column="34"/></operator> <name pos:line="575" pos:column="31">ctype_space<pos:position pos:line="575" pos:column="42"/></name><operator pos:line="575" pos:column="42">)<pos:position pos:line="575" pos:column="43"/></operator> <operator pos:line="575" pos:column="44">!=<pos:position pos:line="575" pos:column="46"/></operator> <literal type="number" pos:line="575" pos:column="47">0<pos:position pos:line="575" pos:column="48"/></literal></expr>)<pos:position pos:line="575" pos:column="49"/></condition><then pos:line="575" pos:column="49">
      <block type="pseudo"><return pos:line="576" pos:column="7">return <expr><name pos:line="576" pos:column="14">FALSE<pos:position pos:line="576" pos:column="19"/></name></expr>;<pos:position pos:line="576" pos:column="20"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="577" pos:column="5">ecode<pos:position pos:line="577" pos:column="10"/></name><operator pos:line="577" pos:column="10">++<pos:position pos:line="577" pos:column="12"/></operator></expr>;<pos:position pos:line="577" pos:column="13"/></expr_stmt>
    <break pos:line="578" pos:column="5">break;<pos:position pos:line="578" pos:column="11"/></break>

    <case pos:line="580" pos:column="5">case <expr><name pos:line="580" pos:column="10">OP_WHITESPACE<pos:position pos:line="580" pos:column="23"/></name></expr>:<pos:position pos:line="580" pos:column="24"/></case>
    <if pos:line="581" pos:column="5">if <condition pos:line="581" pos:column="8">(<expr><name pos:line="581" pos:column="9">eptr<pos:position pos:line="581" pos:column="13"/></name> <operator pos:line="581" pos:column="14">&gt;=<pos:position pos:line="581" pos:column="19"/></operator> <name><name pos:line="581" pos:column="17">md<pos:position pos:line="581" pos:column="19"/></name><operator pos:line="581" pos:column="19">-&gt;<pos:position pos:line="581" pos:column="24"/></operator><name pos:line="581" pos:column="21">end_subject<pos:position pos:line="581" pos:column="32"/></name></name> <operator pos:line="581" pos:column="33">||<pos:position pos:line="581" pos:column="35"/></operator>
       <operator pos:line="582" pos:column="8">(<pos:position pos:line="582" pos:column="9"/></operator><name><name pos:line="582" pos:column="9">md<pos:position pos:line="582" pos:column="11"/></name><operator pos:line="582" pos:column="11">-&gt;<pos:position pos:line="582" pos:column="16"/></operator><name pos:line="582" pos:column="13">ctypes<pos:position pos:line="582" pos:column="19"/></name><index pos:line="582" pos:column="19">[<expr><operator pos:line="582" pos:column="20">*<pos:position pos:line="582" pos:column="21"/></operator><name pos:line="582" pos:column="21">eptr<pos:position pos:line="582" pos:column="25"/></name><operator pos:line="582" pos:column="25">++<pos:position pos:line="582" pos:column="27"/></operator></expr>]<pos:position pos:line="582" pos:column="28"/></index></name> <operator pos:line="582" pos:column="29">&amp;<pos:position pos:line="582" pos:column="34"/></operator> <name pos:line="582" pos:column="31">ctype_space<pos:position pos:line="582" pos:column="42"/></name><operator pos:line="582" pos:column="42">)<pos:position pos:line="582" pos:column="43"/></operator> <operator pos:line="582" pos:column="44">==<pos:position pos:line="582" pos:column="46"/></operator> <literal type="number" pos:line="582" pos:column="47">0<pos:position pos:line="582" pos:column="48"/></literal></expr>)<pos:position pos:line="582" pos:column="49"/></condition><then pos:line="582" pos:column="49">
      <block type="pseudo"><return pos:line="583" pos:column="7">return <expr><name pos:line="583" pos:column="14">FALSE<pos:position pos:line="583" pos:column="19"/></name></expr>;<pos:position pos:line="583" pos:column="20"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="584" pos:column="5">ecode<pos:position pos:line="584" pos:column="10"/></name><operator pos:line="584" pos:column="10">++<pos:position pos:line="584" pos:column="12"/></operator></expr>;<pos:position pos:line="584" pos:column="13"/></expr_stmt>
    <break pos:line="585" pos:column="5">break;<pos:position pos:line="585" pos:column="11"/></break>

    <case pos:line="587" pos:column="5">case <expr><name pos:line="587" pos:column="10">OP_NOT_WORDCHAR<pos:position pos:line="587" pos:column="25"/></name></expr>:<pos:position pos:line="587" pos:column="26"/></case>
    <if pos:line="588" pos:column="5">if <condition pos:line="588" pos:column="8">(<expr><name pos:line="588" pos:column="9">eptr<pos:position pos:line="588" pos:column="13"/></name> <operator pos:line="588" pos:column="14">&gt;=<pos:position pos:line="588" pos:column="19"/></operator> <name><name pos:line="588" pos:column="17">md<pos:position pos:line="588" pos:column="19"/></name><operator pos:line="588" pos:column="19">-&gt;<pos:position pos:line="588" pos:column="24"/></operator><name pos:line="588" pos:column="21">end_subject<pos:position pos:line="588" pos:column="32"/></name></name> <operator pos:line="588" pos:column="33">||<pos:position pos:line="588" pos:column="35"/></operator>
       <operator pos:line="589" pos:column="8">(<pos:position pos:line="589" pos:column="9"/></operator><name><name pos:line="589" pos:column="9">md<pos:position pos:line="589" pos:column="11"/></name><operator pos:line="589" pos:column="11">-&gt;<pos:position pos:line="589" pos:column="16"/></operator><name pos:line="589" pos:column="13">ctypes<pos:position pos:line="589" pos:column="19"/></name><index pos:line="589" pos:column="19">[<expr><operator pos:line="589" pos:column="20">*<pos:position pos:line="589" pos:column="21"/></operator><name pos:line="589" pos:column="21">eptr<pos:position pos:line="589" pos:column="25"/></name><operator pos:line="589" pos:column="25">++<pos:position pos:line="589" pos:column="27"/></operator></expr>]<pos:position pos:line="589" pos:column="28"/></index></name> <operator pos:line="589" pos:column="29">&amp;<pos:position pos:line="589" pos:column="34"/></operator> <name pos:line="589" pos:column="31">ctype_word<pos:position pos:line="589" pos:column="41"/></name><operator pos:line="589" pos:column="41">)<pos:position pos:line="589" pos:column="42"/></operator> <operator pos:line="589" pos:column="43">!=<pos:position pos:line="589" pos:column="45"/></operator> <literal type="number" pos:line="589" pos:column="46">0<pos:position pos:line="589" pos:column="47"/></literal></expr>)<pos:position pos:line="589" pos:column="48"/></condition><then pos:line="589" pos:column="48">
      <block type="pseudo"><return pos:line="590" pos:column="7">return <expr><name pos:line="590" pos:column="14">FALSE<pos:position pos:line="590" pos:column="19"/></name></expr>;<pos:position pos:line="590" pos:column="20"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="591" pos:column="5">ecode<pos:position pos:line="591" pos:column="10"/></name><operator pos:line="591" pos:column="10">++<pos:position pos:line="591" pos:column="12"/></operator></expr>;<pos:position pos:line="591" pos:column="13"/></expr_stmt>
    <break pos:line="592" pos:column="5">break;<pos:position pos:line="592" pos:column="11"/></break>

    <case pos:line="594" pos:column="5">case <expr><name pos:line="594" pos:column="10">OP_WORDCHAR<pos:position pos:line="594" pos:column="21"/></name></expr>:<pos:position pos:line="594" pos:column="22"/></case>
    <if pos:line="595" pos:column="5">if <condition pos:line="595" pos:column="8">(<expr><name pos:line="595" pos:column="9">eptr<pos:position pos:line="595" pos:column="13"/></name> <operator pos:line="595" pos:column="14">&gt;=<pos:position pos:line="595" pos:column="19"/></operator> <name><name pos:line="595" pos:column="17">md<pos:position pos:line="595" pos:column="19"/></name><operator pos:line="595" pos:column="19">-&gt;<pos:position pos:line="595" pos:column="24"/></operator><name pos:line="595" pos:column="21">end_subject<pos:position pos:line="595" pos:column="32"/></name></name> <operator pos:line="595" pos:column="33">||<pos:position pos:line="595" pos:column="35"/></operator>
       <operator pos:line="596" pos:column="8">(<pos:position pos:line="596" pos:column="9"/></operator><name><name pos:line="596" pos:column="9">md<pos:position pos:line="596" pos:column="11"/></name><operator pos:line="596" pos:column="11">-&gt;<pos:position pos:line="596" pos:column="16"/></operator><name pos:line="596" pos:column="13">ctypes<pos:position pos:line="596" pos:column="19"/></name><index pos:line="596" pos:column="19">[<expr><operator pos:line="596" pos:column="20">*<pos:position pos:line="596" pos:column="21"/></operator><name pos:line="596" pos:column="21">eptr<pos:position pos:line="596" pos:column="25"/></name><operator pos:line="596" pos:column="25">++<pos:position pos:line="596" pos:column="27"/></operator></expr>]<pos:position pos:line="596" pos:column="28"/></index></name> <operator pos:line="596" pos:column="29">&amp;<pos:position pos:line="596" pos:column="34"/></operator> <name pos:line="596" pos:column="31">ctype_word<pos:position pos:line="596" pos:column="41"/></name><operator pos:line="596" pos:column="41">)<pos:position pos:line="596" pos:column="42"/></operator> <operator pos:line="596" pos:column="43">==<pos:position pos:line="596" pos:column="45"/></operator> <literal type="number" pos:line="596" pos:column="46">0<pos:position pos:line="596" pos:column="47"/></literal></expr>)<pos:position pos:line="596" pos:column="48"/></condition><then pos:line="596" pos:column="48">
      <block type="pseudo"><return pos:line="597" pos:column="7">return <expr><name pos:line="597" pos:column="14">FALSE<pos:position pos:line="597" pos:column="19"/></name></expr>;<pos:position pos:line="597" pos:column="20"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="598" pos:column="5">ecode<pos:position pos:line="598" pos:column="10"/></name><operator pos:line="598" pos:column="10">++<pos:position pos:line="598" pos:column="12"/></operator></expr>;<pos:position pos:line="598" pos:column="13"/></expr_stmt>
    <break pos:line="599" pos:column="5">break;<pos:position pos:line="599" pos:column="11"/></break>

    <comment type="block" pos:line="601" pos:column="5">/* Match a back reference, possibly repeatedly. Look past the end of the
    item to see if there is repeat information following. The code is similar
    to that for character classes, but repeated for efficiency. Then obey
    similar code to character type repeats - written out again for speed.
    However, if the referenced string is the empty string, always treat
    it as matched, any number of times (otherwise there could be infinite
    loops). */</comment>

    <case pos:line="609" pos:column="5">case <expr><name pos:line="609" pos:column="10">OP_REF<pos:position pos:line="609" pos:column="16"/></name></expr>:<pos:position pos:line="609" pos:column="17"/></case>
      <block pos:line="610" pos:column="7">{
      <decl_stmt><decl><type><name pos:line="611" pos:column="7">int<pos:position pos:line="611" pos:column="10"/></name></type> <name pos:line="611" pos:column="11">length<pos:position pos:line="611" pos:column="17"/></name></decl>;<pos:position pos:line="611" pos:column="18"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="612" pos:column="7">int<pos:position pos:line="612" pos:column="10"/></name></type> <name pos:line="612" pos:column="11">offset<pos:position pos:line="612" pos:column="17"/></name> <init pos:line="612" pos:column="18">= <expr><operator pos:line="612" pos:column="20">(<pos:position pos:line="612" pos:column="21"/></operator><name><name pos:line="612" pos:column="21">ecode<pos:position pos:line="612" pos:column="26"/></name><index pos:line="612" pos:column="26">[<expr><literal type="number" pos:line="612" pos:column="27">1<pos:position pos:line="612" pos:column="28"/></literal></expr>]<pos:position pos:line="612" pos:column="29"/></index></name> <operator pos:line="612" pos:column="30">&lt;&lt;<pos:position pos:line="612" pos:column="38"/></operator> <literal type="number" pos:line="612" pos:column="33">9<pos:position pos:line="612" pos:column="34"/></literal><operator pos:line="612" pos:column="34">)<pos:position pos:line="612" pos:column="35"/></operator> <operator pos:line="612" pos:column="36">|<pos:position pos:line="612" pos:column="37"/></operator> <operator pos:line="612" pos:column="38">(<pos:position pos:line="612" pos:column="39"/></operator><name><name pos:line="612" pos:column="39">ecode<pos:position pos:line="612" pos:column="44"/></name><index pos:line="612" pos:column="44">[<expr><literal type="number" pos:line="612" pos:column="45">2<pos:position pos:line="612" pos:column="46"/></literal></expr>]<pos:position pos:line="612" pos:column="47"/></index></name> <operator pos:line="612" pos:column="48">&lt;&lt;<pos:position pos:line="612" pos:column="56"/></operator> <literal type="number" pos:line="612" pos:column="51">1<pos:position pos:line="612" pos:column="52"/></literal><operator pos:line="612" pos:column="52">)<pos:position pos:line="612" pos:column="53"/></operator></expr></init></decl>;<pos:position pos:line="612" pos:column="54"/></decl_stmt> <comment type="block" pos:line="612" pos:column="55">/* Doubled ref number */</comment>
      <expr_stmt><expr><name pos:line="613" pos:column="7">ecode<pos:position pos:line="613" pos:column="12"/></name> <operator pos:line="613" pos:column="13">+=<pos:position pos:line="613" pos:column="15"/></operator> <literal type="number" pos:line="613" pos:column="16">3<pos:position pos:line="613" pos:column="17"/></literal></expr>;<pos:position pos:line="613" pos:column="18"/></expr_stmt>                                     <comment type="block" pos:line="613" pos:column="55">/* Advance past item */</comment>

      <comment type="block" pos:line="615" pos:column="7">/* If the reference is unset, set the length to be longer than the amount
      of subject left; this ensures that every attempt at a match fails. We
      can't just fail here, because of the possibility of quantifiers with zero
      minima. */</comment>

      <expr_stmt><expr><name pos:line="620" pos:column="7">length<pos:position pos:line="620" pos:column="13"/></name> <operator pos:line="620" pos:column="14">=<pos:position pos:line="620" pos:column="15"/></operator> <ternary><condition><expr><operator pos:line="620" pos:column="16">(<pos:position pos:line="620" pos:column="17"/></operator><name pos:line="620" pos:column="17">offset<pos:position pos:line="620" pos:column="23"/></name> <operator pos:line="620" pos:column="24">&gt;=<pos:position pos:line="620" pos:column="29"/></operator> <name pos:line="620" pos:column="27">offset_top<pos:position pos:line="620" pos:column="37"/></name> <operator pos:line="620" pos:column="38">||<pos:position pos:line="620" pos:column="40"/></operator> <name><name pos:line="620" pos:column="41">md<pos:position pos:line="620" pos:column="43"/></name><operator pos:line="620" pos:column="43">-&gt;<pos:position pos:line="620" pos:column="48"/></operator><name pos:line="620" pos:column="45">offset_vector<pos:position pos:line="620" pos:column="58"/></name><index pos:line="620" pos:column="58">[<expr><name pos:line="620" pos:column="59">offset<pos:position pos:line="620" pos:column="65"/></name></expr>]<pos:position pos:line="620" pos:column="66"/></index></name> <operator pos:line="620" pos:column="67">&lt;<pos:position pos:line="620" pos:column="71"/></operator> <literal type="number" pos:line="620" pos:column="69">0<pos:position pos:line="620" pos:column="70"/></literal><operator pos:line="620" pos:column="70">)<pos:position pos:line="620" pos:column="71"/></operator></expr>?<pos:position pos:line="620" pos:column="72"/></condition><then pos:line="620" pos:column="72">
        <expr><name><name pos:line="621" pos:column="9">md<pos:position pos:line="621" pos:column="11"/></name><operator pos:line="621" pos:column="11">-&gt;<pos:position pos:line="621" pos:column="16"/></operator><name pos:line="621" pos:column="13">end_subject<pos:position pos:line="621" pos:column="24"/></name></name> <operator pos:line="621" pos:column="25">-<pos:position pos:line="621" pos:column="26"/></operator> <name pos:line="621" pos:column="27">eptr<pos:position pos:line="621" pos:column="31"/></name> <operator pos:line="621" pos:column="32">+<pos:position pos:line="621" pos:column="33"/></operator> <literal type="number" pos:line="621" pos:column="34">1<pos:position pos:line="621" pos:column="35"/></literal></expr> <pos:position pos:line="621" pos:column="36"/></then><else pos:line="621" pos:column="36">:
        <expr><name><name pos:line="622" pos:column="9">md<pos:position pos:line="622" pos:column="11"/></name><operator pos:line="622" pos:column="11">-&gt;<pos:position pos:line="622" pos:column="16"/></operator><name pos:line="622" pos:column="13">offset_vector<pos:position pos:line="622" pos:column="26"/></name><index pos:line="622" pos:column="26">[<expr><name pos:line="622" pos:column="27">offset<pos:position pos:line="622" pos:column="33"/></name><operator pos:line="622" pos:column="33">+<pos:position pos:line="622" pos:column="34"/></operator><literal type="number" pos:line="622" pos:column="34">1<pos:position pos:line="622" pos:column="35"/></literal></expr>]<pos:position pos:line="622" pos:column="36"/></index></name> <operator pos:line="622" pos:column="37">-<pos:position pos:line="622" pos:column="38"/></operator> <name><name pos:line="622" pos:column="39">md<pos:position pos:line="622" pos:column="41"/></name><operator pos:line="622" pos:column="41">-&gt;<pos:position pos:line="622" pos:column="46"/></operator><name pos:line="622" pos:column="43">offset_vector<pos:position pos:line="622" pos:column="56"/></name><index pos:line="622" pos:column="56">[<expr><name pos:line="622" pos:column="57">offset<pos:position pos:line="622" pos:column="63"/></name></expr>]<pos:position pos:line="622" pos:column="64"/></index></name></expr></else></ternary></expr>;<pos:position pos:line="622" pos:column="65"/></expr_stmt>

      <comment type="block" pos:line="624" pos:column="7">/* Set up for repetition, or handle the non-repeated case */</comment>

      <switch pos:line="626" pos:column="7">switch <condition pos:line="626" pos:column="14">(<expr><operator pos:line="626" pos:column="15">*<pos:position pos:line="626" pos:column="16"/></operator><name pos:line="626" pos:column="16">ecode<pos:position pos:line="626" pos:column="21"/></name></expr>)<pos:position pos:line="626" pos:column="22"/></condition>
        <block pos:line="627" pos:column="9">{
        <case pos:line="628" pos:column="9">case <expr><name pos:line="628" pos:column="14">OP_CRSTAR<pos:position pos:line="628" pos:column="23"/></name></expr>:<pos:position pos:line="628" pos:column="24"/></case>
        <case pos:line="629" pos:column="9">case <expr><name pos:line="629" pos:column="14">OP_CRMINSTAR<pos:position pos:line="629" pos:column="26"/></name></expr>:<pos:position pos:line="629" pos:column="27"/></case>
        <case pos:line="630" pos:column="9">case <expr><name pos:line="630" pos:column="14">OP_CRPLUS<pos:position pos:line="630" pos:column="23"/></name></expr>:<pos:position pos:line="630" pos:column="24"/></case>
        <case pos:line="631" pos:column="9">case <expr><name pos:line="631" pos:column="14">OP_CRMINPLUS<pos:position pos:line="631" pos:column="26"/></name></expr>:<pos:position pos:line="631" pos:column="27"/></case>
        <case pos:line="632" pos:column="9">case <expr><name pos:line="632" pos:column="14">OP_CRQUERY<pos:position pos:line="632" pos:column="24"/></name></expr>:<pos:position pos:line="632" pos:column="25"/></case>
        <case pos:line="633" pos:column="9">case <expr><name pos:line="633" pos:column="14">OP_CRMINQUERY<pos:position pos:line="633" pos:column="27"/></name></expr>:<pos:position pos:line="633" pos:column="28"/></case>
        <expr_stmt><expr><name pos:line="634" pos:column="9">c<pos:position pos:line="634" pos:column="10"/></name> <operator pos:line="634" pos:column="11">=<pos:position pos:line="634" pos:column="12"/></operator> <operator pos:line="634" pos:column="13">*<pos:position pos:line="634" pos:column="14"/></operator><name pos:line="634" pos:column="14">ecode<pos:position pos:line="634" pos:column="19"/></name><operator pos:line="634" pos:column="19">++<pos:position pos:line="634" pos:column="21"/></operator> <operator pos:line="634" pos:column="22">-<pos:position pos:line="634" pos:column="23"/></operator> <name pos:line="634" pos:column="24">OP_CRSTAR<pos:position pos:line="634" pos:column="33"/></name></expr>;<pos:position pos:line="634" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="635" pos:column="9">minimize<pos:position pos:line="635" pos:column="17"/></name> <operator pos:line="635" pos:column="18">=<pos:position pos:line="635" pos:column="19"/></operator> <operator pos:line="635" pos:column="20">(<pos:position pos:line="635" pos:column="21"/></operator><name pos:line="635" pos:column="21">c<pos:position pos:line="635" pos:column="22"/></name> <operator pos:line="635" pos:column="23">&amp;<pos:position pos:line="635" pos:column="28"/></operator> <literal type="number" pos:line="635" pos:column="25">1<pos:position pos:line="635" pos:column="26"/></literal><operator pos:line="635" pos:column="26">)<pos:position pos:line="635" pos:column="27"/></operator> <operator pos:line="635" pos:column="28">!=<pos:position pos:line="635" pos:column="30"/></operator> <literal type="number" pos:line="635" pos:column="31">0<pos:position pos:line="635" pos:column="32"/></literal></expr>;<pos:position pos:line="635" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="636" pos:column="9">min<pos:position pos:line="636" pos:column="12"/></name> <operator pos:line="636" pos:column="13">=<pos:position pos:line="636" pos:column="14"/></operator> <name><name pos:line="636" pos:column="15">rep_min<pos:position pos:line="636" pos:column="22"/></name><index pos:line="636" pos:column="22">[<expr><name pos:line="636" pos:column="23">c<pos:position pos:line="636" pos:column="24"/></name></expr>]<pos:position pos:line="636" pos:column="25"/></index></name></expr>;<pos:position pos:line="636" pos:column="26"/></expr_stmt>                 <comment type="block" pos:line="636" pos:column="43">/* Pick up values from tables; */</comment>
        <expr_stmt><expr><name pos:line="637" pos:column="9">max<pos:position pos:line="637" pos:column="12"/></name> <operator pos:line="637" pos:column="13">=<pos:position pos:line="637" pos:column="14"/></operator> <name><name pos:line="637" pos:column="15">rep_max<pos:position pos:line="637" pos:column="22"/></name><index pos:line="637" pos:column="22">[<expr><name pos:line="637" pos:column="23">c<pos:position pos:line="637" pos:column="24"/></name></expr>]<pos:position pos:line="637" pos:column="25"/></index></name></expr>;<pos:position pos:line="637" pos:column="26"/></expr_stmt>                 <comment type="block" pos:line="637" pos:column="43">/* zero for max =&gt; infinity */</comment>
        <if pos:line="638" pos:column="9">if <condition pos:line="638" pos:column="12">(<expr><name pos:line="638" pos:column="13">max<pos:position pos:line="638" pos:column="16"/></name> <operator pos:line="638" pos:column="17">==<pos:position pos:line="638" pos:column="19"/></operator> <literal type="number" pos:line="638" pos:column="20">0<pos:position pos:line="638" pos:column="21"/></literal></expr>)<pos:position pos:line="638" pos:column="22"/></condition><then pos:line="638" pos:column="22"> <block type="pseudo"><expr_stmt><expr><name pos:line="638" pos:column="23">max<pos:position pos:line="638" pos:column="26"/></name> <operator pos:line="638" pos:column="27">=<pos:position pos:line="638" pos:column="28"/></operator> <name pos:line="638" pos:column="29">INT_MAX<pos:position pos:line="638" pos:column="36"/></name></expr>;<pos:position pos:line="638" pos:column="37"/></expr_stmt></block></then></if>
        <break pos:line="639" pos:column="9">break;<pos:position pos:line="639" pos:column="15"/></break>

        <case pos:line="641" pos:column="9">case <expr><name pos:line="641" pos:column="14">OP_CRRANGE<pos:position pos:line="641" pos:column="24"/></name></expr>:<pos:position pos:line="641" pos:column="25"/></case>
        <case pos:line="642" pos:column="9">case <expr><name pos:line="642" pos:column="14">OP_CRMINRANGE<pos:position pos:line="642" pos:column="27"/></name></expr>:<pos:position pos:line="642" pos:column="28"/></case>
        <expr_stmt><expr><name pos:line="643" pos:column="9">minimize<pos:position pos:line="643" pos:column="17"/></name> <operator pos:line="643" pos:column="18">=<pos:position pos:line="643" pos:column="19"/></operator> <operator pos:line="643" pos:column="20">(<pos:position pos:line="643" pos:column="21"/></operator><operator pos:line="643" pos:column="21">*<pos:position pos:line="643" pos:column="22"/></operator><name pos:line="643" pos:column="22">ecode<pos:position pos:line="643" pos:column="27"/></name> <operator pos:line="643" pos:column="28">==<pos:position pos:line="643" pos:column="30"/></operator> <name pos:line="643" pos:column="31">OP_CRMINRANGE<pos:position pos:line="643" pos:column="44"/></name><operator pos:line="643" pos:column="44">)<pos:position pos:line="643" pos:column="45"/></operator></expr>;<pos:position pos:line="643" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="644" pos:column="9">min<pos:position pos:line="644" pos:column="12"/></name> <operator pos:line="644" pos:column="13">=<pos:position pos:line="644" pos:column="14"/></operator> <operator pos:line="644" pos:column="15">(<pos:position pos:line="644" pos:column="16"/></operator><name><name pos:line="644" pos:column="16">ecode<pos:position pos:line="644" pos:column="21"/></name><index pos:line="644" pos:column="21">[<expr><literal type="number" pos:line="644" pos:column="22">1<pos:position pos:line="644" pos:column="23"/></literal></expr>]<pos:position pos:line="644" pos:column="24"/></index></name> <operator pos:line="644" pos:column="25">&lt;&lt;<pos:position pos:line="644" pos:column="33"/></operator> <literal type="number" pos:line="644" pos:column="28">8<pos:position pos:line="644" pos:column="29"/></literal><operator pos:line="644" pos:column="29">)<pos:position pos:line="644" pos:column="30"/></operator> <operator pos:line="644" pos:column="31">+<pos:position pos:line="644" pos:column="32"/></operator> <name><name pos:line="644" pos:column="33">ecode<pos:position pos:line="644" pos:column="38"/></name><index pos:line="644" pos:column="38">[<expr><literal type="number" pos:line="644" pos:column="39">2<pos:position pos:line="644" pos:column="40"/></literal></expr>]<pos:position pos:line="644" pos:column="41"/></index></name></expr>;<pos:position pos:line="644" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="645" pos:column="9">max<pos:position pos:line="645" pos:column="12"/></name> <operator pos:line="645" pos:column="13">=<pos:position pos:line="645" pos:column="14"/></operator> <operator pos:line="645" pos:column="15">(<pos:position pos:line="645" pos:column="16"/></operator><name><name pos:line="645" pos:column="16">ecode<pos:position pos:line="645" pos:column="21"/></name><index pos:line="645" pos:column="21">[<expr><literal type="number" pos:line="645" pos:column="22">3<pos:position pos:line="645" pos:column="23"/></literal></expr>]<pos:position pos:line="645" pos:column="24"/></index></name> <operator pos:line="645" pos:column="25">&lt;&lt;<pos:position pos:line="645" pos:column="33"/></operator> <literal type="number" pos:line="645" pos:column="28">8<pos:position pos:line="645" pos:column="29"/></literal><operator pos:line="645" pos:column="29">)<pos:position pos:line="645" pos:column="30"/></operator> <operator pos:line="645" pos:column="31">+<pos:position pos:line="645" pos:column="32"/></operator> <name><name pos:line="645" pos:column="33">ecode<pos:position pos:line="645" pos:column="38"/></name><index pos:line="645" pos:column="38">[<expr><literal type="number" pos:line="645" pos:column="39">4<pos:position pos:line="645" pos:column="40"/></literal></expr>]<pos:position pos:line="645" pos:column="41"/></index></name></expr>;<pos:position pos:line="645" pos:column="42"/></expr_stmt>
        <if pos:line="646" pos:column="9">if <condition pos:line="646" pos:column="12">(<expr><name pos:line="646" pos:column="13">max<pos:position pos:line="646" pos:column="16"/></name> <operator pos:line="646" pos:column="17">==<pos:position pos:line="646" pos:column="19"/></operator> <literal type="number" pos:line="646" pos:column="20">0<pos:position pos:line="646" pos:column="21"/></literal></expr>)<pos:position pos:line="646" pos:column="22"/></condition><then pos:line="646" pos:column="22"> <block type="pseudo"><expr_stmt><expr><name pos:line="646" pos:column="23">max<pos:position pos:line="646" pos:column="26"/></name> <operator pos:line="646" pos:column="27">=<pos:position pos:line="646" pos:column="28"/></operator> <name pos:line="646" pos:column="29">INT_MAX<pos:position pos:line="646" pos:column="36"/></name></expr>;<pos:position pos:line="646" pos:column="37"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="647" pos:column="9">ecode<pos:position pos:line="647" pos:column="14"/></name> <operator pos:line="647" pos:column="15">+=<pos:position pos:line="647" pos:column="17"/></operator> <literal type="number" pos:line="647" pos:column="18">5<pos:position pos:line="647" pos:column="19"/></literal></expr>;<pos:position pos:line="647" pos:column="20"/></expr_stmt>
        <break pos:line="648" pos:column="9">break;<pos:position pos:line="648" pos:column="15"/></break>

        <default pos:line="650" pos:column="9">default:<pos:position pos:line="650" pos:column="17"/></default>               <comment type="block" pos:line="650" pos:column="32">/* No repeat follows */</comment>
        <if pos:line="651" pos:column="9">if <condition pos:line="651" pos:column="12">(<expr><operator pos:line="651" pos:column="13">!<pos:position pos:line="651" pos:column="14"/></operator><call><name pos:line="651" pos:column="14">match_ref<pos:position pos:line="651" pos:column="23"/></name><argument_list pos:line="651" pos:column="23">(<argument><expr><name pos:line="651" pos:column="24">offset<pos:position pos:line="651" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="651" pos:column="32">eptr<pos:position pos:line="651" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="651" pos:column="38">length<pos:position pos:line="651" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="651" pos:column="46">md<pos:position pos:line="651" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="651" pos:column="50">ims<pos:position pos:line="651" pos:column="53"/></name></expr></argument>)<pos:position pos:line="651" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="651" pos:column="55"/></condition><then pos:line="651" pos:column="55"> <block type="pseudo"><return pos:line="651" pos:column="56">return <expr><name pos:line="651" pos:column="63">FALSE<pos:position pos:line="651" pos:column="68"/></name></expr>;<pos:position pos:line="651" pos:column="69"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="652" pos:column="9">eptr<pos:position pos:line="652" pos:column="13"/></name> <operator pos:line="652" pos:column="14">+=<pos:position pos:line="652" pos:column="16"/></operator> <name pos:line="652" pos:column="17">length<pos:position pos:line="652" pos:column="23"/></name></expr>;<pos:position pos:line="652" pos:column="24"/></expr_stmt>
        <continue pos:line="653" pos:column="9">continue;<pos:position pos:line="653" pos:column="18"/></continue>              <comment type="block" pos:line="653" pos:column="32">/* With the main loop */</comment>
        }<pos:position pos:line="654" pos:column="10"/></block></switch>

      <comment type="block" pos:line="656" pos:column="7">/* If the length of the reference is zero, just continue with the
      main loop. */</comment>

      <if pos:line="659" pos:column="7">if <condition pos:line="659" pos:column="10">(<expr><name pos:line="659" pos:column="11">length<pos:position pos:line="659" pos:column="17"/></name> <operator pos:line="659" pos:column="18">==<pos:position pos:line="659" pos:column="20"/></operator> <literal type="number" pos:line="659" pos:column="21">0<pos:position pos:line="659" pos:column="22"/></literal></expr>)<pos:position pos:line="659" pos:column="23"/></condition><then pos:line="659" pos:column="23"> <block type="pseudo"><continue pos:line="659" pos:column="24">continue;<pos:position pos:line="659" pos:column="33"/></continue></block></then></if>

      <comment type="block" pos:line="661" pos:column="7">/* First, ensure the minimum number of matches are present. We get back
      the length of the reference string explicitly rather than passing the
      address of eptr, so that eptr can be a register variable. */</comment>

      <for pos:line="665" pos:column="7">for <control pos:line="665" pos:column="11">(<init><expr><name pos:line="665" pos:column="12">i<pos:position pos:line="665" pos:column="13"/></name> <operator pos:line="665" pos:column="14">=<pos:position pos:line="665" pos:column="15"/></operator> <literal type="number" pos:line="665" pos:column="16">1<pos:position pos:line="665" pos:column="17"/></literal></expr>;<pos:position pos:line="665" pos:column="18"/></init> <condition><expr><name pos:line="665" pos:column="19">i<pos:position pos:line="665" pos:column="20"/></name> <operator pos:line="665" pos:column="21">&lt;=<pos:position pos:line="665" pos:column="26"/></operator> <name pos:line="665" pos:column="24">min<pos:position pos:line="665" pos:column="27"/></name></expr>;<pos:position pos:line="665" pos:column="28"/></condition> <incr><expr><name pos:line="665" pos:column="29">i<pos:position pos:line="665" pos:column="30"/></name><operator pos:line="665" pos:column="30">++<pos:position pos:line="665" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="665" pos:column="33"/></control>
        <block pos:line="666" pos:column="9">{
        <if pos:line="667" pos:column="9">if <condition pos:line="667" pos:column="12">(<expr><operator pos:line="667" pos:column="13">!<pos:position pos:line="667" pos:column="14"/></operator><call><name pos:line="667" pos:column="14">match_ref<pos:position pos:line="667" pos:column="23"/></name><argument_list pos:line="667" pos:column="23">(<argument><expr><name pos:line="667" pos:column="24">offset<pos:position pos:line="667" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="667" pos:column="32">eptr<pos:position pos:line="667" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="667" pos:column="38">length<pos:position pos:line="667" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="667" pos:column="46">md<pos:position pos:line="667" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="667" pos:column="50">ims<pos:position pos:line="667" pos:column="53"/></name></expr></argument>)<pos:position pos:line="667" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="667" pos:column="55"/></condition><then pos:line="667" pos:column="55"> <block type="pseudo"><return pos:line="667" pos:column="56">return <expr><name pos:line="667" pos:column="63">FALSE<pos:position pos:line="667" pos:column="68"/></name></expr>;<pos:position pos:line="667" pos:column="69"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="668" pos:column="9">eptr<pos:position pos:line="668" pos:column="13"/></name> <operator pos:line="668" pos:column="14">+=<pos:position pos:line="668" pos:column="16"/></operator> <name pos:line="668" pos:column="17">length<pos:position pos:line="668" pos:column="23"/></name></expr>;<pos:position pos:line="668" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="669" pos:column="10"/></block></for>

      <comment type="block" pos:line="671" pos:column="7">/* If min = max, continue at the same level without recursion.
      They are not both allowed to be zero. */</comment>

      <if pos:line="674" pos:column="7">if <condition pos:line="674" pos:column="10">(<expr><name pos:line="674" pos:column="11">min<pos:position pos:line="674" pos:column="14"/></name> <operator pos:line="674" pos:column="15">==<pos:position pos:line="674" pos:column="17"/></operator> <name pos:line="674" pos:column="18">max<pos:position pos:line="674" pos:column="21"/></name></expr>)<pos:position pos:line="674" pos:column="22"/></condition><then pos:line="674" pos:column="22"> <block type="pseudo"><continue pos:line="674" pos:column="23">continue;<pos:position pos:line="674" pos:column="32"/></continue></block></then></if>

      <comment type="block" pos:line="676" pos:column="7">/* If minimizing, keep trying and advancing the pointer */</comment>

      <if pos:line="678" pos:column="7">if <condition pos:line="678" pos:column="10">(<expr><name pos:line="678" pos:column="11">minimize<pos:position pos:line="678" pos:column="19"/></name></expr>)<pos:position pos:line="678" pos:column="20"/></condition><then pos:line="678" pos:column="20">
        <block pos:line="679" pos:column="9">{
        <for pos:line="680" pos:column="9">for <control pos:line="680" pos:column="13">(<init><expr><name pos:line="680" pos:column="14">i<pos:position pos:line="680" pos:column="15"/></name> <operator pos:line="680" pos:column="16">=<pos:position pos:line="680" pos:column="17"/></operator> <name pos:line="680" pos:column="18">min<pos:position pos:line="680" pos:column="21"/></name></expr>;<pos:position pos:line="680" pos:column="22"/></init><condition pos:line="680" pos:column="22">;<pos:position pos:line="680" pos:column="23"/></condition> <incr><expr><name pos:line="680" pos:column="24">i<pos:position pos:line="680" pos:column="25"/></name><operator pos:line="680" pos:column="25">++<pos:position pos:line="680" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="680" pos:column="28"/></control>
          <block pos:line="681" pos:column="11">{
          <if pos:line="682" pos:column="11">if <condition pos:line="682" pos:column="14">(<expr><call><name pos:line="682" pos:column="15">match<pos:position pos:line="682" pos:column="20"/></name><argument_list pos:line="682" pos:column="20">(<argument><expr><name pos:line="682" pos:column="21">eptr<pos:position pos:line="682" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="682" pos:column="27">ecode<pos:position pos:line="682" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="682" pos:column="34">offset_top<pos:position pos:line="682" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="682" pos:column="46">md<pos:position pos:line="682" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="682" pos:column="50">ims<pos:position pos:line="682" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="682" pos:column="55">eptrb<pos:position pos:line="682" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="682" pos:column="62">0<pos:position pos:line="682" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="682" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="682" pos:column="65"/></condition><then pos:line="682" pos:column="65">
            <block type="pseudo"><return pos:line="683" pos:column="13">return <expr><name pos:line="683" pos:column="20">TRUE<pos:position pos:line="683" pos:column="24"/></name></expr>;<pos:position pos:line="683" pos:column="25"/></return></block></then></if>
          <if pos:line="684" pos:column="11">if <condition pos:line="684" pos:column="14">(<expr><name pos:line="684" pos:column="15">i<pos:position pos:line="684" pos:column="16"/></name> <operator pos:line="684" pos:column="17">&gt;=<pos:position pos:line="684" pos:column="22"/></operator> <name pos:line="684" pos:column="20">max<pos:position pos:line="684" pos:column="23"/></name> <operator pos:line="684" pos:column="24">||<pos:position pos:line="684" pos:column="26"/></operator> <operator pos:line="684" pos:column="27">!<pos:position pos:line="684" pos:column="28"/></operator><call><name pos:line="684" pos:column="28">match_ref<pos:position pos:line="684" pos:column="37"/></name><argument_list pos:line="684" pos:column="37">(<argument><expr><name pos:line="684" pos:column="38">offset<pos:position pos:line="684" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="684" pos:column="46">eptr<pos:position pos:line="684" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="684" pos:column="52">length<pos:position pos:line="684" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="684" pos:column="60">md<pos:position pos:line="684" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="684" pos:column="64">ims<pos:position pos:line="684" pos:column="67"/></name></expr></argument>)<pos:position pos:line="684" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="684" pos:column="69"/></condition><then pos:line="684" pos:column="69">
            <block type="pseudo"><return pos:line="685" pos:column="13">return <expr><name pos:line="685" pos:column="20">FALSE<pos:position pos:line="685" pos:column="25"/></name></expr>;<pos:position pos:line="685" pos:column="26"/></return></block></then></if>
          <expr_stmt><expr><name pos:line="686" pos:column="11">eptr<pos:position pos:line="686" pos:column="15"/></name> <operator pos:line="686" pos:column="16">+=<pos:position pos:line="686" pos:column="18"/></operator> <name pos:line="686" pos:column="19">length<pos:position pos:line="686" pos:column="25"/></name></expr>;<pos:position pos:line="686" pos:column="26"/></expr_stmt>
          }<pos:position pos:line="687" pos:column="12"/></block></for>
        <comment type="block" pos:line="688" pos:column="9">/* Control never gets here */</comment>
        }<pos:position pos:line="689" pos:column="10"/></block></then>

      <comment type="block" pos:line="691" pos:column="7">/* If maximizing, find the longest string and work backwards */</comment>

      <else pos:line="693" pos:column="7">else
        <block pos:line="694" pos:column="9">{
        <decl_stmt><decl><type><specifier pos:line="695" pos:column="9">const<pos:position pos:line="695" pos:column="14"/></specifier> <name pos:line="695" pos:column="15">uschar<pos:position pos:line="695" pos:column="21"/></name> <modifier pos:line="695" pos:column="22">*<pos:position pos:line="695" pos:column="23"/></modifier></type><name pos:line="695" pos:column="23">pp<pos:position pos:line="695" pos:column="25"/></name> <init pos:line="695" pos:column="26">= <expr><name pos:line="695" pos:column="28">eptr<pos:position pos:line="695" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="695" pos:column="33"/></decl_stmt>
        <for pos:line="696" pos:column="9">for <control pos:line="696" pos:column="13">(<init><expr><name pos:line="696" pos:column="14">i<pos:position pos:line="696" pos:column="15"/></name> <operator pos:line="696" pos:column="16">=<pos:position pos:line="696" pos:column="17"/></operator> <name pos:line="696" pos:column="18">min<pos:position pos:line="696" pos:column="21"/></name></expr>;<pos:position pos:line="696" pos:column="22"/></init> <condition><expr><name pos:line="696" pos:column="23">i<pos:position pos:line="696" pos:column="24"/></name> <operator pos:line="696" pos:column="25">&lt;<pos:position pos:line="696" pos:column="29"/></operator> <name pos:line="696" pos:column="27">max<pos:position pos:line="696" pos:column="30"/></name></expr>;<pos:position pos:line="696" pos:column="31"/></condition> <incr><expr><name pos:line="696" pos:column="32">i<pos:position pos:line="696" pos:column="33"/></name><operator pos:line="696" pos:column="33">++<pos:position pos:line="696" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="696" pos:column="36"/></control>
          <block pos:line="697" pos:column="11">{
          <if pos:line="698" pos:column="11">if <condition pos:line="698" pos:column="14">(<expr><operator pos:line="698" pos:column="15">!<pos:position pos:line="698" pos:column="16"/></operator><call><name pos:line="698" pos:column="16">match_ref<pos:position pos:line="698" pos:column="25"/></name><argument_list pos:line="698" pos:column="25">(<argument><expr><name pos:line="698" pos:column="26">offset<pos:position pos:line="698" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="698" pos:column="34">eptr<pos:position pos:line="698" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="698" pos:column="40">length<pos:position pos:line="698" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="698" pos:column="48">md<pos:position pos:line="698" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="698" pos:column="52">ims<pos:position pos:line="698" pos:column="55"/></name></expr></argument>)<pos:position pos:line="698" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="698" pos:column="57"/></condition><then pos:line="698" pos:column="57"> <block type="pseudo"><break pos:line="698" pos:column="58">break;<pos:position pos:line="698" pos:column="64"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="699" pos:column="11">eptr<pos:position pos:line="699" pos:column="15"/></name> <operator pos:line="699" pos:column="16">+=<pos:position pos:line="699" pos:column="18"/></operator> <name pos:line="699" pos:column="19">length<pos:position pos:line="699" pos:column="25"/></name></expr>;<pos:position pos:line="699" pos:column="26"/></expr_stmt>
          }<pos:position pos:line="700" pos:column="12"/></block></for>
        <while pos:line="701" pos:column="9">while <condition pos:line="701" pos:column="15">(<expr><name pos:line="701" pos:column="16">eptr<pos:position pos:line="701" pos:column="20"/></name> <operator pos:line="701" pos:column="21">&gt;=<pos:position pos:line="701" pos:column="26"/></operator> <name pos:line="701" pos:column="24">pp<pos:position pos:line="701" pos:column="26"/></name></expr>)<pos:position pos:line="701" pos:column="27"/></condition>
          <block pos:line="702" pos:column="11">{
          <if pos:line="703" pos:column="11">if <condition pos:line="703" pos:column="14">(<expr><call><name pos:line="703" pos:column="15">match<pos:position pos:line="703" pos:column="20"/></name><argument_list pos:line="703" pos:column="20">(<argument><expr><name pos:line="703" pos:column="21">eptr<pos:position pos:line="703" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="703" pos:column="27">ecode<pos:position pos:line="703" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="703" pos:column="34">offset_top<pos:position pos:line="703" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="703" pos:column="46">md<pos:position pos:line="703" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="703" pos:column="50">ims<pos:position pos:line="703" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="703" pos:column="55">eptrb<pos:position pos:line="703" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="703" pos:column="62">0<pos:position pos:line="703" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="703" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="703" pos:column="65"/></condition><then pos:line="703" pos:column="65">
            <block type="pseudo"><return pos:line="704" pos:column="13">return <expr><name pos:line="704" pos:column="20">TRUE<pos:position pos:line="704" pos:column="24"/></name></expr>;<pos:position pos:line="704" pos:column="25"/></return></block></then></if>
          <expr_stmt><expr><name pos:line="705" pos:column="11">eptr<pos:position pos:line="705" pos:column="15"/></name> <operator pos:line="705" pos:column="16">-=<pos:position pos:line="705" pos:column="18"/></operator> <name pos:line="705" pos:column="19">length<pos:position pos:line="705" pos:column="25"/></name></expr>;<pos:position pos:line="705" pos:column="26"/></expr_stmt>
          }<pos:position pos:line="706" pos:column="12"/></block></while>
        <return pos:line="707" pos:column="9">return <expr><name pos:line="707" pos:column="16">FALSE<pos:position pos:line="707" pos:column="21"/></name></expr>;<pos:position pos:line="707" pos:column="22"/></return>
        }<pos:position pos:line="708" pos:column="10"/></block></else></if>
      }<pos:position pos:line="709" pos:column="8"/></block>
    <comment type="block" pos:line="710" pos:column="5">/* Control never gets here */</comment>



    <comment type="block" pos:line="714" pos:column="5">/* Match a character class, possibly repeatedly. Look past the end of the
    item to see if there is repeat information following. Then obey similar
    code to character type repeats - written out again for speed. */</comment>

    <case pos:line="718" pos:column="5">case <expr><name pos:line="718" pos:column="10">OP_CLASS<pos:position pos:line="718" pos:column="18"/></name></expr>:<pos:position pos:line="718" pos:column="19"/></case>
      <block pos:line="719" pos:column="7">{
      <decl_stmt><decl><type><specifier pos:line="720" pos:column="7">const<pos:position pos:line="720" pos:column="12"/></specifier> <name pos:line="720" pos:column="13">uschar<pos:position pos:line="720" pos:column="19"/></name> <modifier pos:line="720" pos:column="20">*<pos:position pos:line="720" pos:column="21"/></modifier></type><name pos:line="720" pos:column="21">data<pos:position pos:line="720" pos:column="25"/></name> <init pos:line="720" pos:column="26">= <expr><name pos:line="720" pos:column="28">ecode<pos:position pos:line="720" pos:column="33"/></name> <operator pos:line="720" pos:column="34">+<pos:position pos:line="720" pos:column="35"/></operator> <literal type="number" pos:line="720" pos:column="36">1<pos:position pos:line="720" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="720" pos:column="38"/></decl_stmt>  <comment type="block" pos:line="720" pos:column="40">/* Save for matching */</comment>
      <expr_stmt><expr><name pos:line="721" pos:column="7">ecode<pos:position pos:line="721" pos:column="12"/></name> <operator pos:line="721" pos:column="13">+=<pos:position pos:line="721" pos:column="15"/></operator> <literal type="number" pos:line="721" pos:column="16">33<pos:position pos:line="721" pos:column="18"/></literal></expr>;<pos:position pos:line="721" pos:column="19"/></expr_stmt>                     <comment type="block" pos:line="721" pos:column="40">/* Advance past the item */</comment>

      <switch pos:line="723" pos:column="7">switch <condition pos:line="723" pos:column="14">(<expr><operator pos:line="723" pos:column="15">*<pos:position pos:line="723" pos:column="16"/></operator><name pos:line="723" pos:column="16">ecode<pos:position pos:line="723" pos:column="21"/></name></expr>)<pos:position pos:line="723" pos:column="22"/></condition>
        <block pos:line="724" pos:column="9">{
        <case pos:line="725" pos:column="9">case <expr><name pos:line="725" pos:column="14">OP_CRSTAR<pos:position pos:line="725" pos:column="23"/></name></expr>:<pos:position pos:line="725" pos:column="24"/></case>
        <case pos:line="726" pos:column="9">case <expr><name pos:line="726" pos:column="14">OP_CRMINSTAR<pos:position pos:line="726" pos:column="26"/></name></expr>:<pos:position pos:line="726" pos:column="27"/></case>
        <case pos:line="727" pos:column="9">case <expr><name pos:line="727" pos:column="14">OP_CRPLUS<pos:position pos:line="727" pos:column="23"/></name></expr>:<pos:position pos:line="727" pos:column="24"/></case>
        <case pos:line="728" pos:column="9">case <expr><name pos:line="728" pos:column="14">OP_CRMINPLUS<pos:position pos:line="728" pos:column="26"/></name></expr>:<pos:position pos:line="728" pos:column="27"/></case>
        <case pos:line="729" pos:column="9">case <expr><name pos:line="729" pos:column="14">OP_CRQUERY<pos:position pos:line="729" pos:column="24"/></name></expr>:<pos:position pos:line="729" pos:column="25"/></case>
        <case pos:line="730" pos:column="9">case <expr><name pos:line="730" pos:column="14">OP_CRMINQUERY<pos:position pos:line="730" pos:column="27"/></name></expr>:<pos:position pos:line="730" pos:column="28"/></case>
        <expr_stmt><expr><name pos:line="731" pos:column="9">c<pos:position pos:line="731" pos:column="10"/></name> <operator pos:line="731" pos:column="11">=<pos:position pos:line="731" pos:column="12"/></operator> <operator pos:line="731" pos:column="13">*<pos:position pos:line="731" pos:column="14"/></operator><name pos:line="731" pos:column="14">ecode<pos:position pos:line="731" pos:column="19"/></name><operator pos:line="731" pos:column="19">++<pos:position pos:line="731" pos:column="21"/></operator> <operator pos:line="731" pos:column="22">-<pos:position pos:line="731" pos:column="23"/></operator> <name pos:line="731" pos:column="24">OP_CRSTAR<pos:position pos:line="731" pos:column="33"/></name></expr>;<pos:position pos:line="731" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="732" pos:column="9">minimize<pos:position pos:line="732" pos:column="17"/></name> <operator pos:line="732" pos:column="18">=<pos:position pos:line="732" pos:column="19"/></operator> <operator pos:line="732" pos:column="20">(<pos:position pos:line="732" pos:column="21"/></operator><name pos:line="732" pos:column="21">c<pos:position pos:line="732" pos:column="22"/></name> <operator pos:line="732" pos:column="23">&amp;<pos:position pos:line="732" pos:column="28"/></operator> <literal type="number" pos:line="732" pos:column="25">1<pos:position pos:line="732" pos:column="26"/></literal><operator pos:line="732" pos:column="26">)<pos:position pos:line="732" pos:column="27"/></operator> <operator pos:line="732" pos:column="28">!=<pos:position pos:line="732" pos:column="30"/></operator> <literal type="number" pos:line="732" pos:column="31">0<pos:position pos:line="732" pos:column="32"/></literal></expr>;<pos:position pos:line="732" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="733" pos:column="9">min<pos:position pos:line="733" pos:column="12"/></name> <operator pos:line="733" pos:column="13">=<pos:position pos:line="733" pos:column="14"/></operator> <name><name pos:line="733" pos:column="15">rep_min<pos:position pos:line="733" pos:column="22"/></name><index pos:line="733" pos:column="22">[<expr><name pos:line="733" pos:column="23">c<pos:position pos:line="733" pos:column="24"/></name></expr>]<pos:position pos:line="733" pos:column="25"/></index></name></expr>;<pos:position pos:line="733" pos:column="26"/></expr_stmt>                 <comment type="block" pos:line="733" pos:column="43">/* Pick up values from tables; */</comment>
        <expr_stmt><expr><name pos:line="734" pos:column="9">max<pos:position pos:line="734" pos:column="12"/></name> <operator pos:line="734" pos:column="13">=<pos:position pos:line="734" pos:column="14"/></operator> <name><name pos:line="734" pos:column="15">rep_max<pos:position pos:line="734" pos:column="22"/></name><index pos:line="734" pos:column="22">[<expr><name pos:line="734" pos:column="23">c<pos:position pos:line="734" pos:column="24"/></name></expr>]<pos:position pos:line="734" pos:column="25"/></index></name></expr>;<pos:position pos:line="734" pos:column="26"/></expr_stmt>                 <comment type="block" pos:line="734" pos:column="43">/* zero for max =&gt; infinity */</comment>
        <if pos:line="735" pos:column="9">if <condition pos:line="735" pos:column="12">(<expr><name pos:line="735" pos:column="13">max<pos:position pos:line="735" pos:column="16"/></name> <operator pos:line="735" pos:column="17">==<pos:position pos:line="735" pos:column="19"/></operator> <literal type="number" pos:line="735" pos:column="20">0<pos:position pos:line="735" pos:column="21"/></literal></expr>)<pos:position pos:line="735" pos:column="22"/></condition><then pos:line="735" pos:column="22"> <block type="pseudo"><expr_stmt><expr><name pos:line="735" pos:column="23">max<pos:position pos:line="735" pos:column="26"/></name> <operator pos:line="735" pos:column="27">=<pos:position pos:line="735" pos:column="28"/></operator> <name pos:line="735" pos:column="29">INT_MAX<pos:position pos:line="735" pos:column="36"/></name></expr>;<pos:position pos:line="735" pos:column="37"/></expr_stmt></block></then></if>
        <break pos:line="736" pos:column="9">break;<pos:position pos:line="736" pos:column="15"/></break>

        <case pos:line="738" pos:column="9">case <expr><name pos:line="738" pos:column="14">OP_CRRANGE<pos:position pos:line="738" pos:column="24"/></name></expr>:<pos:position pos:line="738" pos:column="25"/></case>
        <case pos:line="739" pos:column="9">case <expr><name pos:line="739" pos:column="14">OP_CRMINRANGE<pos:position pos:line="739" pos:column="27"/></name></expr>:<pos:position pos:line="739" pos:column="28"/></case>
        <expr_stmt><expr><name pos:line="740" pos:column="9">minimize<pos:position pos:line="740" pos:column="17"/></name> <operator pos:line="740" pos:column="18">=<pos:position pos:line="740" pos:column="19"/></operator> <operator pos:line="740" pos:column="20">(<pos:position pos:line="740" pos:column="21"/></operator><operator pos:line="740" pos:column="21">*<pos:position pos:line="740" pos:column="22"/></operator><name pos:line="740" pos:column="22">ecode<pos:position pos:line="740" pos:column="27"/></name> <operator pos:line="740" pos:column="28">==<pos:position pos:line="740" pos:column="30"/></operator> <name pos:line="740" pos:column="31">OP_CRMINRANGE<pos:position pos:line="740" pos:column="44"/></name><operator pos:line="740" pos:column="44">)<pos:position pos:line="740" pos:column="45"/></operator></expr>;<pos:position pos:line="740" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="741" pos:column="9">min<pos:position pos:line="741" pos:column="12"/></name> <operator pos:line="741" pos:column="13">=<pos:position pos:line="741" pos:column="14"/></operator> <operator pos:line="741" pos:column="15">(<pos:position pos:line="741" pos:column="16"/></operator><name><name pos:line="741" pos:column="16">ecode<pos:position pos:line="741" pos:column="21"/></name><index pos:line="741" pos:column="21">[<expr><literal type="number" pos:line="741" pos:column="22">1<pos:position pos:line="741" pos:column="23"/></literal></expr>]<pos:position pos:line="741" pos:column="24"/></index></name> <operator pos:line="741" pos:column="25">&lt;&lt;<pos:position pos:line="741" pos:column="33"/></operator> <literal type="number" pos:line="741" pos:column="28">8<pos:position pos:line="741" pos:column="29"/></literal><operator pos:line="741" pos:column="29">)<pos:position pos:line="741" pos:column="30"/></operator> <operator pos:line="741" pos:column="31">+<pos:position pos:line="741" pos:column="32"/></operator> <name><name pos:line="741" pos:column="33">ecode<pos:position pos:line="741" pos:column="38"/></name><index pos:line="741" pos:column="38">[<expr><literal type="number" pos:line="741" pos:column="39">2<pos:position pos:line="741" pos:column="40"/></literal></expr>]<pos:position pos:line="741" pos:column="41"/></index></name></expr>;<pos:position pos:line="741" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="742" pos:column="9">max<pos:position pos:line="742" pos:column="12"/></name> <operator pos:line="742" pos:column="13">=<pos:position pos:line="742" pos:column="14"/></operator> <operator pos:line="742" pos:column="15">(<pos:position pos:line="742" pos:column="16"/></operator><name><name pos:line="742" pos:column="16">ecode<pos:position pos:line="742" pos:column="21"/></name><index pos:line="742" pos:column="21">[<expr><literal type="number" pos:line="742" pos:column="22">3<pos:position pos:line="742" pos:column="23"/></literal></expr>]<pos:position pos:line="742" pos:column="24"/></index></name> <operator pos:line="742" pos:column="25">&lt;&lt;<pos:position pos:line="742" pos:column="33"/></operator> <literal type="number" pos:line="742" pos:column="28">8<pos:position pos:line="742" pos:column="29"/></literal><operator pos:line="742" pos:column="29">)<pos:position pos:line="742" pos:column="30"/></operator> <operator pos:line="742" pos:column="31">+<pos:position pos:line="742" pos:column="32"/></operator> <name><name pos:line="742" pos:column="33">ecode<pos:position pos:line="742" pos:column="38"/></name><index pos:line="742" pos:column="38">[<expr><literal type="number" pos:line="742" pos:column="39">4<pos:position pos:line="742" pos:column="40"/></literal></expr>]<pos:position pos:line="742" pos:column="41"/></index></name></expr>;<pos:position pos:line="742" pos:column="42"/></expr_stmt>
        <if pos:line="743" pos:column="9">if <condition pos:line="743" pos:column="12">(<expr><name pos:line="743" pos:column="13">max<pos:position pos:line="743" pos:column="16"/></name> <operator pos:line="743" pos:column="17">==<pos:position pos:line="743" pos:column="19"/></operator> <literal type="number" pos:line="743" pos:column="20">0<pos:position pos:line="743" pos:column="21"/></literal></expr>)<pos:position pos:line="743" pos:column="22"/></condition><then pos:line="743" pos:column="22"> <block type="pseudo"><expr_stmt><expr><name pos:line="743" pos:column="23">max<pos:position pos:line="743" pos:column="26"/></name> <operator pos:line="743" pos:column="27">=<pos:position pos:line="743" pos:column="28"/></operator> <name pos:line="743" pos:column="29">INT_MAX<pos:position pos:line="743" pos:column="36"/></name></expr>;<pos:position pos:line="743" pos:column="37"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="744" pos:column="9">ecode<pos:position pos:line="744" pos:column="14"/></name> <operator pos:line="744" pos:column="15">+=<pos:position pos:line="744" pos:column="17"/></operator> <literal type="number" pos:line="744" pos:column="18">5<pos:position pos:line="744" pos:column="19"/></literal></expr>;<pos:position pos:line="744" pos:column="20"/></expr_stmt>
        <break pos:line="745" pos:column="9">break;<pos:position pos:line="745" pos:column="15"/></break>

        <default pos:line="747" pos:column="9">default:<pos:position pos:line="747" pos:column="17"/></default>               <comment type="block" pos:line="747" pos:column="32">/* No repeat follows */</comment>
        <expr_stmt><expr><name pos:line="748" pos:column="9">min<pos:position pos:line="748" pos:column="12"/></name> <operator pos:line="748" pos:column="13">=<pos:position pos:line="748" pos:column="14"/></operator> <name pos:line="748" pos:column="15">max<pos:position pos:line="748" pos:column="18"/></name> <operator pos:line="748" pos:column="19">=<pos:position pos:line="748" pos:column="20"/></operator> <literal type="number" pos:line="748" pos:column="21">1<pos:position pos:line="748" pos:column="22"/></literal></expr>;<pos:position pos:line="748" pos:column="23"/></expr_stmt>
        <break pos:line="749" pos:column="9">break;<pos:position pos:line="749" pos:column="15"/></break>
        }<pos:position pos:line="750" pos:column="10"/></block></switch>

      <comment type="block" pos:line="752" pos:column="7">/* First, ensure the minimum number of matches are present. */</comment>

      <for pos:line="754" pos:column="7">for <control pos:line="754" pos:column="11">(<init><expr><name pos:line="754" pos:column="12">i<pos:position pos:line="754" pos:column="13"/></name> <operator pos:line="754" pos:column="14">=<pos:position pos:line="754" pos:column="15"/></operator> <literal type="number" pos:line="754" pos:column="16">1<pos:position pos:line="754" pos:column="17"/></literal></expr>;<pos:position pos:line="754" pos:column="18"/></init> <condition><expr><name pos:line="754" pos:column="19">i<pos:position pos:line="754" pos:column="20"/></name> <operator pos:line="754" pos:column="21">&lt;=<pos:position pos:line="754" pos:column="26"/></operator> <name pos:line="754" pos:column="24">min<pos:position pos:line="754" pos:column="27"/></name></expr>;<pos:position pos:line="754" pos:column="28"/></condition> <incr><expr><name pos:line="754" pos:column="29">i<pos:position pos:line="754" pos:column="30"/></name><operator pos:line="754" pos:column="30">++<pos:position pos:line="754" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="754" pos:column="33"/></control>
        <block pos:line="755" pos:column="9">{
        <if pos:line="756" pos:column="9">if <condition pos:line="756" pos:column="12">(<expr><name pos:line="756" pos:column="13">eptr<pos:position pos:line="756" pos:column="17"/></name> <operator pos:line="756" pos:column="18">&gt;=<pos:position pos:line="756" pos:column="23"/></operator> <name><name pos:line="756" pos:column="21">md<pos:position pos:line="756" pos:column="23"/></name><operator pos:line="756" pos:column="23">-&gt;<pos:position pos:line="756" pos:column="28"/></operator><name pos:line="756" pos:column="25">end_subject<pos:position pos:line="756" pos:column="36"/></name></name></expr>)<pos:position pos:line="756" pos:column="37"/></condition><then pos:line="756" pos:column="37"> <block type="pseudo"><return pos:line="756" pos:column="38">return <expr><name pos:line="756" pos:column="45">FALSE<pos:position pos:line="756" pos:column="50"/></name></expr>;<pos:position pos:line="756" pos:column="51"/></return></block></then></if>
        <macro><name pos:line="757" pos:column="9">GETCHARINC<pos:position pos:line="757" pos:column="19"/></name><argument_list pos:line="757" pos:column="19">(<argument pos:line="757" pos:column="20">c<pos:position pos:line="757" pos:column="21"/></argument>, <argument pos:line="757" pos:column="23">eptr<pos:position pos:line="757" pos:column="27"/></argument>)<pos:position pos:line="757" pos:column="28"/></argument_list></macro>         <comment type="block" pos:line="757" pos:column="37">/* Get character; increment eptr */</comment>

<cpp:ifdef pos:line="759" pos:column="1">#<cpp:directive pos:line="759" pos:column="2">ifdef<pos:position pos:line="759" pos:column="7"/></cpp:directive> <name pos:line="759" pos:column="8">SUPPORT_UTF8<pos:position pos:line="759" pos:column="20"/></name></cpp:ifdef>
        <comment type="block" pos:line="760" pos:column="9">/* We do not yet support class members &gt; 255 */</comment>
        <if pos:line="761" pos:column="9">if <condition pos:line="761" pos:column="12">(<expr><name pos:line="761" pos:column="13">c<pos:position pos:line="761" pos:column="14"/></name> <operator pos:line="761" pos:column="15">&gt;<pos:position pos:line="761" pos:column="19"/></operator> <literal type="number" pos:line="761" pos:column="17">255<pos:position pos:line="761" pos:column="20"/></literal></expr>)<pos:position pos:line="761" pos:column="21"/></condition><then pos:line="761" pos:column="21"> <block type="pseudo"><return pos:line="761" pos:column="22">return <expr><name pos:line="761" pos:column="29">FALSE<pos:position pos:line="761" pos:column="34"/></name></expr>;<pos:position pos:line="761" pos:column="35"/></return></block></then></if>
<cpp:endif pos:line="762" pos:column="1">#<cpp:directive pos:line="762" pos:column="2">endif<pos:position pos:line="762" pos:column="7"/></cpp:directive></cpp:endif>

        <if pos:line="764" pos:column="9">if <condition pos:line="764" pos:column="12">(<expr><operator pos:line="764" pos:column="13">(<pos:position pos:line="764" pos:column="14"/></operator><name><name pos:line="764" pos:column="14">data<pos:position pos:line="764" pos:column="18"/></name><index pos:line="764" pos:column="18">[<expr><name pos:line="764" pos:column="19">c<pos:position pos:line="764" pos:column="20"/></name><operator pos:line="764" pos:column="20">/<pos:position pos:line="764" pos:column="21"/></operator><literal type="number" pos:line="764" pos:column="21">8<pos:position pos:line="764" pos:column="22"/></literal></expr>]<pos:position pos:line="764" pos:column="23"/></index></name> <operator pos:line="764" pos:column="24">&amp;<pos:position pos:line="764" pos:column="29"/></operator> <operator pos:line="764" pos:column="26">(<pos:position pos:line="764" pos:column="27"/></operator><literal type="number" pos:line="764" pos:column="27">1<pos:position pos:line="764" pos:column="28"/></literal> <operator pos:line="764" pos:column="29">&lt;&lt;<pos:position pos:line="764" pos:column="37"/></operator> <operator pos:line="764" pos:column="32">(<pos:position pos:line="764" pos:column="33"/></operator><name pos:line="764" pos:column="33">c<pos:position pos:line="764" pos:column="34"/></name><operator pos:line="764" pos:column="34">&amp;<pos:position pos:line="764" pos:column="39"/></operator><literal type="number" pos:line="764" pos:column="35">7<pos:position pos:line="764" pos:column="36"/></literal><operator pos:line="764" pos:column="36">)<pos:position pos:line="764" pos:column="37"/></operator><operator pos:line="764" pos:column="37">)<pos:position pos:line="764" pos:column="38"/></operator><operator pos:line="764" pos:column="38">)<pos:position pos:line="764" pos:column="39"/></operator> <operator pos:line="764" pos:column="40">!=<pos:position pos:line="764" pos:column="42"/></operator> <literal type="number" pos:line="764" pos:column="43">0<pos:position pos:line="764" pos:column="44"/></literal></expr>)<pos:position pos:line="764" pos:column="45"/></condition><then pos:line="764" pos:column="45"> <block type="pseudo"><continue pos:line="764" pos:column="46">continue;<pos:position pos:line="764" pos:column="55"/></continue></block></then></if>
        <return pos:line="765" pos:column="9">return <expr><name pos:line="765" pos:column="16">FALSE<pos:position pos:line="765" pos:column="21"/></name></expr>;<pos:position pos:line="765" pos:column="22"/></return>
        }<pos:position pos:line="766" pos:column="10"/></block></for>

      <comment type="block" pos:line="768" pos:column="7">/* If max == min we can continue with the main loop without the
      need to recurse. */</comment>

      <if pos:line="771" pos:column="7">if <condition pos:line="771" pos:column="10">(<expr><name pos:line="771" pos:column="11">min<pos:position pos:line="771" pos:column="14"/></name> <operator pos:line="771" pos:column="15">==<pos:position pos:line="771" pos:column="17"/></operator> <name pos:line="771" pos:column="18">max<pos:position pos:line="771" pos:column="21"/></name></expr>)<pos:position pos:line="771" pos:column="22"/></condition><then pos:line="771" pos:column="22"> <block type="pseudo"><continue pos:line="771" pos:column="23">continue;<pos:position pos:line="771" pos:column="32"/></continue></block></then></if>

      <comment type="block" pos:line="773" pos:column="7">/* If minimizing, keep testing the rest of the expression and advancing
      the pointer while it matches the class. */</comment>

      <if pos:line="776" pos:column="7">if <condition pos:line="776" pos:column="10">(<expr><name pos:line="776" pos:column="11">minimize<pos:position pos:line="776" pos:column="19"/></name></expr>)<pos:position pos:line="776" pos:column="20"/></condition><then pos:line="776" pos:column="20">
        <block pos:line="777" pos:column="9">{
        <for pos:line="778" pos:column="9">for <control pos:line="778" pos:column="13">(<init><expr><name pos:line="778" pos:column="14">i<pos:position pos:line="778" pos:column="15"/></name> <operator pos:line="778" pos:column="16">=<pos:position pos:line="778" pos:column="17"/></operator> <name pos:line="778" pos:column="18">min<pos:position pos:line="778" pos:column="21"/></name></expr>;<pos:position pos:line="778" pos:column="22"/></init><condition pos:line="778" pos:column="22">;<pos:position pos:line="778" pos:column="23"/></condition> <incr><expr><name pos:line="778" pos:column="24">i<pos:position pos:line="778" pos:column="25"/></name><operator pos:line="778" pos:column="25">++<pos:position pos:line="778" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="778" pos:column="28"/></control>
          <block pos:line="779" pos:column="11">{
          <if pos:line="780" pos:column="11">if <condition pos:line="780" pos:column="14">(<expr><call><name pos:line="780" pos:column="15">match<pos:position pos:line="780" pos:column="20"/></name><argument_list pos:line="780" pos:column="20">(<argument><expr><name pos:line="780" pos:column="21">eptr<pos:position pos:line="780" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="780" pos:column="27">ecode<pos:position pos:line="780" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="780" pos:column="34">offset_top<pos:position pos:line="780" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="780" pos:column="46">md<pos:position pos:line="780" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="780" pos:column="50">ims<pos:position pos:line="780" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="780" pos:column="55">eptrb<pos:position pos:line="780" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="780" pos:column="62">0<pos:position pos:line="780" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="780" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="780" pos:column="65"/></condition><then pos:line="780" pos:column="65">
            <block type="pseudo"><return pos:line="781" pos:column="13">return <expr><name pos:line="781" pos:column="20">TRUE<pos:position pos:line="781" pos:column="24"/></name></expr>;<pos:position pos:line="781" pos:column="25"/></return></block></then></if>
          <if pos:line="782" pos:column="11">if <condition pos:line="782" pos:column="14">(<expr><name pos:line="782" pos:column="15">i<pos:position pos:line="782" pos:column="16"/></name> <operator pos:line="782" pos:column="17">&gt;=<pos:position pos:line="782" pos:column="22"/></operator> <name pos:line="782" pos:column="20">max<pos:position pos:line="782" pos:column="23"/></name> <operator pos:line="782" pos:column="24">||<pos:position pos:line="782" pos:column="26"/></operator> <name pos:line="782" pos:column="27">eptr<pos:position pos:line="782" pos:column="31"/></name> <operator pos:line="782" pos:column="32">&gt;=<pos:position pos:line="782" pos:column="37"/></operator> <name><name pos:line="782" pos:column="35">md<pos:position pos:line="782" pos:column="37"/></name><operator pos:line="782" pos:column="37">-&gt;<pos:position pos:line="782" pos:column="42"/></operator><name pos:line="782" pos:column="39">end_subject<pos:position pos:line="782" pos:column="50"/></name></name></expr>)<pos:position pos:line="782" pos:column="51"/></condition><then pos:line="782" pos:column="51"> <block type="pseudo"><return pos:line="782" pos:column="52">return <expr><name pos:line="782" pos:column="59">FALSE<pos:position pos:line="782" pos:column="64"/></name></expr>;<pos:position pos:line="782" pos:column="65"/></return></block></then></if>
          <macro><name pos:line="783" pos:column="11">GETCHARINC<pos:position pos:line="783" pos:column="21"/></name><argument_list pos:line="783" pos:column="21">(<argument pos:line="783" pos:column="22">c<pos:position pos:line="783" pos:column="23"/></argument>, <argument pos:line="783" pos:column="25">eptr<pos:position pos:line="783" pos:column="29"/></argument>)<pos:position pos:line="783" pos:column="30"/></argument_list></macro>       <comment type="block" pos:line="783" pos:column="37">/* Get character; increment eptr */</comment>

<cpp:ifdef pos:line="785" pos:column="1">#<cpp:directive pos:line="785" pos:column="2">ifdef<pos:position pos:line="785" pos:column="7"/></cpp:directive> <name pos:line="785" pos:column="8">SUPPORT_UTF8<pos:position pos:line="785" pos:column="20"/></name></cpp:ifdef>
          <comment type="block" pos:line="786" pos:column="11">/* We do not yet support class members &gt; 255 */</comment>
          <if pos:line="787" pos:column="11">if <condition pos:line="787" pos:column="14">(<expr><name pos:line="787" pos:column="15">c<pos:position pos:line="787" pos:column="16"/></name> <operator pos:line="787" pos:column="17">&gt;<pos:position pos:line="787" pos:column="21"/></operator> <literal type="number" pos:line="787" pos:column="19">255<pos:position pos:line="787" pos:column="22"/></literal></expr>)<pos:position pos:line="787" pos:column="23"/></condition><then pos:line="787" pos:column="23"> <block type="pseudo"><return pos:line="787" pos:column="24">return <expr><name pos:line="787" pos:column="31">FALSE<pos:position pos:line="787" pos:column="36"/></name></expr>;<pos:position pos:line="787" pos:column="37"/></return></block></then></if>
<cpp:endif pos:line="788" pos:column="1">#<cpp:directive pos:line="788" pos:column="2">endif<pos:position pos:line="788" pos:column="7"/></cpp:directive></cpp:endif>
          <if pos:line="789" pos:column="11">if <condition pos:line="789" pos:column="14">(<expr><operator pos:line="789" pos:column="15">(<pos:position pos:line="789" pos:column="16"/></operator><name><name pos:line="789" pos:column="16">data<pos:position pos:line="789" pos:column="20"/></name><index pos:line="789" pos:column="20">[<expr><name pos:line="789" pos:column="21">c<pos:position pos:line="789" pos:column="22"/></name><operator pos:line="789" pos:column="22">/<pos:position pos:line="789" pos:column="23"/></operator><literal type="number" pos:line="789" pos:column="23">8<pos:position pos:line="789" pos:column="24"/></literal></expr>]<pos:position pos:line="789" pos:column="25"/></index></name> <operator pos:line="789" pos:column="26">&amp;<pos:position pos:line="789" pos:column="31"/></operator> <operator pos:line="789" pos:column="28">(<pos:position pos:line="789" pos:column="29"/></operator><literal type="number" pos:line="789" pos:column="29">1<pos:position pos:line="789" pos:column="30"/></literal> <operator pos:line="789" pos:column="31">&lt;&lt;<pos:position pos:line="789" pos:column="39"/></operator> <operator pos:line="789" pos:column="34">(<pos:position pos:line="789" pos:column="35"/></operator><name pos:line="789" pos:column="35">c<pos:position pos:line="789" pos:column="36"/></name><operator pos:line="789" pos:column="36">&amp;<pos:position pos:line="789" pos:column="41"/></operator><literal type="number" pos:line="789" pos:column="37">7<pos:position pos:line="789" pos:column="38"/></literal><operator pos:line="789" pos:column="38">)<pos:position pos:line="789" pos:column="39"/></operator><operator pos:line="789" pos:column="39">)<pos:position pos:line="789" pos:column="40"/></operator><operator pos:line="789" pos:column="40">)<pos:position pos:line="789" pos:column="41"/></operator> <operator pos:line="789" pos:column="42">!=<pos:position pos:line="789" pos:column="44"/></operator> <literal type="number" pos:line="789" pos:column="45">0<pos:position pos:line="789" pos:column="46"/></literal></expr>)<pos:position pos:line="789" pos:column="47"/></condition><then pos:line="789" pos:column="47"> <block type="pseudo"><continue pos:line="789" pos:column="48">continue;<pos:position pos:line="789" pos:column="57"/></continue></block></then></if>
          <return pos:line="790" pos:column="11">return <expr><name pos:line="790" pos:column="18">FALSE<pos:position pos:line="790" pos:column="23"/></name></expr>;<pos:position pos:line="790" pos:column="24"/></return>
          }<pos:position pos:line="791" pos:column="12"/></block></for>
        <comment type="block" pos:line="792" pos:column="9">/* Control never gets here */</comment>
        }<pos:position pos:line="793" pos:column="10"/></block></then>

      <comment type="block" pos:line="795" pos:column="7">/* If maximizing, find the longest possible run, then work backwards. */</comment>

      <else pos:line="797" pos:column="7">else
        <block pos:line="798" pos:column="9">{
        <decl_stmt><decl><type><specifier pos:line="799" pos:column="9">const<pos:position pos:line="799" pos:column="14"/></specifier> <name pos:line="799" pos:column="15">uschar<pos:position pos:line="799" pos:column="21"/></name> <modifier pos:line="799" pos:column="22">*<pos:position pos:line="799" pos:column="23"/></modifier></type><name pos:line="799" pos:column="23">pp<pos:position pos:line="799" pos:column="25"/></name> <init pos:line="799" pos:column="26">= <expr><name pos:line="799" pos:column="28">eptr<pos:position pos:line="799" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="799" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="800" pos:column="9">int<pos:position pos:line="800" pos:column="12"/></name></type> <name pos:line="800" pos:column="13">len<pos:position pos:line="800" pos:column="16"/></name> <init pos:line="800" pos:column="17">= <expr><literal type="number" pos:line="800" pos:column="19">1<pos:position pos:line="800" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="800" pos:column="21"/></decl_stmt>
        <for pos:line="801" pos:column="9">for <control pos:line="801" pos:column="13">(<init><expr><name pos:line="801" pos:column="14">i<pos:position pos:line="801" pos:column="15"/></name> <operator pos:line="801" pos:column="16">=<pos:position pos:line="801" pos:column="17"/></operator> <name pos:line="801" pos:column="18">min<pos:position pos:line="801" pos:column="21"/></name></expr>;<pos:position pos:line="801" pos:column="22"/></init> <condition><expr><name pos:line="801" pos:column="23">i<pos:position pos:line="801" pos:column="24"/></name> <operator pos:line="801" pos:column="25">&lt;<pos:position pos:line="801" pos:column="29"/></operator> <name pos:line="801" pos:column="27">max<pos:position pos:line="801" pos:column="30"/></name></expr>;<pos:position pos:line="801" pos:column="31"/></condition> <incr><expr><name pos:line="801" pos:column="32">i<pos:position pos:line="801" pos:column="33"/></name><operator pos:line="801" pos:column="33">++<pos:position pos:line="801" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="801" pos:column="36"/></control>
          <block pos:line="802" pos:column="11">{
          <if pos:line="803" pos:column="11">if <condition pos:line="803" pos:column="14">(<expr><name pos:line="803" pos:column="15">eptr<pos:position pos:line="803" pos:column="19"/></name> <operator pos:line="803" pos:column="20">&gt;=<pos:position pos:line="803" pos:column="25"/></operator> <name><name pos:line="803" pos:column="23">md<pos:position pos:line="803" pos:column="25"/></name><operator pos:line="803" pos:column="25">-&gt;<pos:position pos:line="803" pos:column="30"/></operator><name pos:line="803" pos:column="27">end_subject<pos:position pos:line="803" pos:column="38"/></name></name></expr>)<pos:position pos:line="803" pos:column="39"/></condition><then pos:line="803" pos:column="39"> <block type="pseudo"><break pos:line="803" pos:column="40">break;<pos:position pos:line="803" pos:column="46"/></break></block></then></if>
          <macro><name pos:line="804" pos:column="11">GETCHARLEN<pos:position pos:line="804" pos:column="21"/></name><argument_list pos:line="804" pos:column="21">(<argument pos:line="804" pos:column="22">c<pos:position pos:line="804" pos:column="23"/></argument>, <argument pos:line="804" pos:column="25">eptr<pos:position pos:line="804" pos:column="29"/></argument>, <argument pos:line="804" pos:column="31">len<pos:position pos:line="804" pos:column="34"/></argument>)<pos:position pos:line="804" pos:column="35"/></argument_list></macro>  <comment type="block" pos:line="804" pos:column="37">/* Get character, set length if UTF-8 */</comment>

<cpp:ifdef pos:line="806" pos:column="1">#<cpp:directive pos:line="806" pos:column="2">ifdef<pos:position pos:line="806" pos:column="7"/></cpp:directive> <name pos:line="806" pos:column="8">SUPPORT_UTF8<pos:position pos:line="806" pos:column="20"/></name></cpp:ifdef>
          <comment type="block" pos:line="807" pos:column="11">/* We do not yet support class members &gt; 255 */</comment>
          <if pos:line="808" pos:column="11">if <condition pos:line="808" pos:column="14">(<expr><name pos:line="808" pos:column="15">c<pos:position pos:line="808" pos:column="16"/></name> <operator pos:line="808" pos:column="17">&gt;<pos:position pos:line="808" pos:column="21"/></operator> <literal type="number" pos:line="808" pos:column="19">255<pos:position pos:line="808" pos:column="22"/></literal></expr>)<pos:position pos:line="808" pos:column="23"/></condition><then pos:line="808" pos:column="23"> <block type="pseudo"><break pos:line="808" pos:column="24">break;<pos:position pos:line="808" pos:column="30"/></break></block></then></if>
<cpp:endif pos:line="809" pos:column="1">#<cpp:directive pos:line="809" pos:column="2">endif<pos:position pos:line="809" pos:column="7"/></cpp:directive></cpp:endif>
          <if pos:line="810" pos:column="11">if <condition pos:line="810" pos:column="14">(<expr><operator pos:line="810" pos:column="15">(<pos:position pos:line="810" pos:column="16"/></operator><name><name pos:line="810" pos:column="16">data<pos:position pos:line="810" pos:column="20"/></name><index pos:line="810" pos:column="20">[<expr><name pos:line="810" pos:column="21">c<pos:position pos:line="810" pos:column="22"/></name><operator pos:line="810" pos:column="22">/<pos:position pos:line="810" pos:column="23"/></operator><literal type="number" pos:line="810" pos:column="23">8<pos:position pos:line="810" pos:column="24"/></literal></expr>]<pos:position pos:line="810" pos:column="25"/></index></name> <operator pos:line="810" pos:column="26">&amp;<pos:position pos:line="810" pos:column="31"/></operator> <operator pos:line="810" pos:column="28">(<pos:position pos:line="810" pos:column="29"/></operator><literal type="number" pos:line="810" pos:column="29">1<pos:position pos:line="810" pos:column="30"/></literal> <operator pos:line="810" pos:column="31">&lt;&lt;<pos:position pos:line="810" pos:column="39"/></operator> <operator pos:line="810" pos:column="34">(<pos:position pos:line="810" pos:column="35"/></operator><name pos:line="810" pos:column="35">c<pos:position pos:line="810" pos:column="36"/></name><operator pos:line="810" pos:column="36">&amp;<pos:position pos:line="810" pos:column="41"/></operator><literal type="number" pos:line="810" pos:column="37">7<pos:position pos:line="810" pos:column="38"/></literal><operator pos:line="810" pos:column="38">)<pos:position pos:line="810" pos:column="39"/></operator><operator pos:line="810" pos:column="39">)<pos:position pos:line="810" pos:column="40"/></operator><operator pos:line="810" pos:column="40">)<pos:position pos:line="810" pos:column="41"/></operator> <operator pos:line="810" pos:column="42">==<pos:position pos:line="810" pos:column="44"/></operator> <literal type="number" pos:line="810" pos:column="45">0<pos:position pos:line="810" pos:column="46"/></literal></expr>)<pos:position pos:line="810" pos:column="47"/></condition><then pos:line="810" pos:column="47"> <block type="pseudo"><break pos:line="810" pos:column="48">break;<pos:position pos:line="810" pos:column="54"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="811" pos:column="11">eptr<pos:position pos:line="811" pos:column="15"/></name> <operator pos:line="811" pos:column="16">+=<pos:position pos:line="811" pos:column="18"/></operator> <name pos:line="811" pos:column="19">len<pos:position pos:line="811" pos:column="22"/></name></expr>;<pos:position pos:line="811" pos:column="23"/></expr_stmt>
          }<pos:position pos:line="812" pos:column="12"/></block></for>

        <while pos:line="814" pos:column="9">while <condition pos:line="814" pos:column="15">(<expr><name pos:line="814" pos:column="16">eptr<pos:position pos:line="814" pos:column="20"/></name> <operator pos:line="814" pos:column="21">&gt;=<pos:position pos:line="814" pos:column="26"/></operator> <name pos:line="814" pos:column="24">pp<pos:position pos:line="814" pos:column="26"/></name></expr>)<pos:position pos:line="814" pos:column="27"/></condition>
          <block pos:line="815" pos:column="11">{
          <if pos:line="816" pos:column="11">if <condition pos:line="816" pos:column="14">(<expr><call><name pos:line="816" pos:column="15">match<pos:position pos:line="816" pos:column="20"/></name><argument_list pos:line="816" pos:column="20">(<argument><expr><name pos:line="816" pos:column="21">eptr<pos:position pos:line="816" pos:column="25"/></name><operator pos:line="816" pos:column="25">--<pos:position pos:line="816" pos:column="27"/></operator></expr></argument>, <argument><expr><name pos:line="816" pos:column="29">ecode<pos:position pos:line="816" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="816" pos:column="36">offset_top<pos:position pos:line="816" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="816" pos:column="48">md<pos:position pos:line="816" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="816" pos:column="52">ims<pos:position pos:line="816" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="816" pos:column="57">eptrb<pos:position pos:line="816" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="816" pos:column="64">0<pos:position pos:line="816" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="816" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="816" pos:column="67"/></condition><then pos:line="816" pos:column="67">
            <block type="pseudo"><return pos:line="817" pos:column="13">return <expr><name pos:line="817" pos:column="20">TRUE<pos:position pos:line="817" pos:column="24"/></name></expr>;<pos:position pos:line="817" pos:column="25"/></return></block></then></if>

<cpp:ifdef pos:line="819" pos:column="1">#<cpp:directive pos:line="819" pos:column="2">ifdef<pos:position pos:line="819" pos:column="7"/></cpp:directive> <name pos:line="819" pos:column="8">SUPPORT_UTF8<pos:position pos:line="819" pos:column="20"/></name></cpp:ifdef>
          <macro><name pos:line="820" pos:column="11">BACKCHAR<pos:position pos:line="820" pos:column="19"/></name><argument_list pos:line="820" pos:column="19">(<argument pos:line="820" pos:column="20">eptr<pos:position pos:line="820" pos:column="24"/></argument>)<pos:position pos:line="820" pos:column="25"/></argument_list></macro>
<cpp:endif pos:line="821" pos:column="1">#<cpp:directive pos:line="821" pos:column="2">endif<pos:position pos:line="821" pos:column="7"/></cpp:directive></cpp:endif>
          }<pos:position pos:line="822" pos:column="12"/></block></while>
        <return pos:line="823" pos:column="9">return <expr><name pos:line="823" pos:column="16">FALSE<pos:position pos:line="823" pos:column="21"/></name></expr>;<pos:position pos:line="823" pos:column="22"/></return>
        }<pos:position pos:line="824" pos:column="10"/></block></else></if>
      }<pos:position pos:line="825" pos:column="8"/></block>
    <comment type="block" pos:line="826" pos:column="5">/* Control never gets here */</comment>

    <comment type="block" pos:line="828" pos:column="5">/* Match a run of characters */</comment>

    <case pos:line="830" pos:column="5">case <expr><name pos:line="830" pos:column="10">OP_CHARS<pos:position pos:line="830" pos:column="18"/></name></expr>:<pos:position pos:line="830" pos:column="19"/></case>
      <block pos:line="831" pos:column="7">{
      <decl_stmt><decl><type><specifier pos:line="832" pos:column="7">register<pos:position pos:line="832" pos:column="15"/></specifier> <name pos:line="832" pos:column="16">int<pos:position pos:line="832" pos:column="19"/></name></type> <name pos:line="832" pos:column="20">length<pos:position pos:line="832" pos:column="26"/></name> <init pos:line="832" pos:column="27">= <expr><name><name pos:line="832" pos:column="29">ecode<pos:position pos:line="832" pos:column="34"/></name><index pos:line="832" pos:column="34">[<expr><literal type="number" pos:line="832" pos:column="35">1<pos:position pos:line="832" pos:column="36"/></literal></expr>]<pos:position pos:line="832" pos:column="37"/></index></name></expr></init></decl>;<pos:position pos:line="832" pos:column="38"/></decl_stmt>
      <expr_stmt><expr><name pos:line="833" pos:column="7">ecode<pos:position pos:line="833" pos:column="12"/></name> <operator pos:line="833" pos:column="13">+=<pos:position pos:line="833" pos:column="15"/></operator> <literal type="number" pos:line="833" pos:column="16">2<pos:position pos:line="833" pos:column="17"/></literal></expr>;<pos:position pos:line="833" pos:column="18"/></expr_stmt>

<cpp:ifdef pos:line="835" pos:column="1">#<cpp:directive pos:line="835" pos:column="2">ifdef<pos:position pos:line="835" pos:column="7"/></cpp:directive> <name pos:line="835" pos:column="8">DEBUG<pos:position pos:line="835" pos:column="13"/></name></cpp:ifdef>    <comment type="block" pos:line="835" pos:column="17">/* Sigh. Some compilers never learn. */</comment>
      <if pos:line="836" pos:column="7">if <condition pos:line="836" pos:column="10">(<expr><name pos:line="836" pos:column="11">eptr<pos:position pos:line="836" pos:column="15"/></name> <operator pos:line="836" pos:column="16">&gt;=<pos:position pos:line="836" pos:column="21"/></operator> <name><name pos:line="836" pos:column="19">md<pos:position pos:line="836" pos:column="21"/></name><operator pos:line="836" pos:column="21">-&gt;<pos:position pos:line="836" pos:column="26"/></operator><name pos:line="836" pos:column="23">end_subject<pos:position pos:line="836" pos:column="34"/></name></name></expr>)<pos:position pos:line="836" pos:column="35"/></condition><then pos:line="836" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="837" pos:column="9">printf<pos:position pos:line="837" pos:column="15"/></name><argument_list pos:line="837" pos:column="15">(<argument><expr><literal type="string" pos:line="837" pos:column="16">"matching subject &lt;null&gt; against pattern "<pos:position pos:line="837" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="837" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="837" pos:column="60"/></expr_stmt></block></then>
      <else pos:line="838" pos:column="7">else
        <block pos:line="839" pos:column="9">{
        <expr_stmt><expr><call><name pos:line="840" pos:column="9">printf<pos:position pos:line="840" pos:column="15"/></name><argument_list pos:line="840" pos:column="15">(<argument><expr><literal type="string" pos:line="840" pos:column="16">"matching subject "<pos:position pos:line="840" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="840" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="840" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="841" pos:column="9">pchars<pos:position pos:line="841" pos:column="15"/></name><argument_list pos:line="841" pos:column="15">(<argument><expr><name pos:line="841" pos:column="16">eptr<pos:position pos:line="841" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="841" pos:column="22">length<pos:position pos:line="841" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="841" pos:column="30">TRUE<pos:position pos:line="841" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="841" pos:column="36">md<pos:position pos:line="841" pos:column="38"/></name></expr></argument>)<pos:position pos:line="841" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="841" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="842" pos:column="9">printf<pos:position pos:line="842" pos:column="15"/></name><argument_list pos:line="842" pos:column="15">(<argument><expr><literal type="string" pos:line="842" pos:column="16">" against pattern "<pos:position pos:line="842" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="842" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="842" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="843" pos:column="10"/></block></else></if>
      <expr_stmt><expr><call><name pos:line="844" pos:column="7">pchars<pos:position pos:line="844" pos:column="13"/></name><argument_list pos:line="844" pos:column="13">(<argument><expr><name pos:line="844" pos:column="14">ecode<pos:position pos:line="844" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="844" pos:column="21">length<pos:position pos:line="844" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="844" pos:column="29">FALSE<pos:position pos:line="844" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="844" pos:column="36">md<pos:position pos:line="844" pos:column="38"/></name></expr></argument>)<pos:position pos:line="844" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="844" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="845" pos:column="7">printf<pos:position pos:line="845" pos:column="13"/></name><argument_list pos:line="845" pos:column="13">(<argument><expr><literal type="string" pos:line="845" pos:column="14">"\n"<pos:position pos:line="845" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="845" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="845" pos:column="20"/></expr_stmt>
<cpp:endif pos:line="846" pos:column="1">#<cpp:directive pos:line="846" pos:column="2">endif<pos:position pos:line="846" pos:column="7"/></cpp:directive></cpp:endif>

      <if pos:line="848" pos:column="7">if <condition pos:line="848" pos:column="10">(<expr><name pos:line="848" pos:column="11">length<pos:position pos:line="848" pos:column="17"/></name> <operator pos:line="848" pos:column="18">&gt;<pos:position pos:line="848" pos:column="22"/></operator> <name><name pos:line="848" pos:column="20">md<pos:position pos:line="848" pos:column="22"/></name><operator pos:line="848" pos:column="22">-&gt;<pos:position pos:line="848" pos:column="27"/></operator><name pos:line="848" pos:column="24">end_subject<pos:position pos:line="848" pos:column="35"/></name></name> <operator pos:line="848" pos:column="36">-<pos:position pos:line="848" pos:column="37"/></operator> <name pos:line="848" pos:column="38">eptr<pos:position pos:line="848" pos:column="42"/></name></expr>)<pos:position pos:line="848" pos:column="43"/></condition><then pos:line="848" pos:column="43"> <block type="pseudo"><return pos:line="848" pos:column="44">return <expr><name pos:line="848" pos:column="51">FALSE<pos:position pos:line="848" pos:column="56"/></name></expr>;<pos:position pos:line="848" pos:column="57"/></return></block></then></if>
      <if pos:line="849" pos:column="7">if <condition pos:line="849" pos:column="10">(<expr><operator pos:line="849" pos:column="11">(<pos:position pos:line="849" pos:column="12"/></operator><name pos:line="849" pos:column="12">ims<pos:position pos:line="849" pos:column="15"/></name> <operator pos:line="849" pos:column="16">&amp;<pos:position pos:line="849" pos:column="21"/></operator> <name pos:line="849" pos:column="18">PCRE_CASELESS<pos:position pos:line="849" pos:column="31"/></name><operator pos:line="849" pos:column="31">)<pos:position pos:line="849" pos:column="32"/></operator> <operator pos:line="849" pos:column="33">!=<pos:position pos:line="849" pos:column="35"/></operator> <literal type="number" pos:line="849" pos:column="36">0<pos:position pos:line="849" pos:column="37"/></literal></expr>)<pos:position pos:line="849" pos:column="38"/></condition><then pos:line="849" pos:column="38">
        <block pos:line="850" pos:column="9">{
        <while pos:line="851" pos:column="9">while <condition pos:line="851" pos:column="15">(<expr><name pos:line="851" pos:column="16">length<pos:position pos:line="851" pos:column="22"/></name><operator pos:line="851" pos:column="22">--<pos:position pos:line="851" pos:column="24"/></operator> <operator pos:line="851" pos:column="25">&gt;<pos:position pos:line="851" pos:column="29"/></operator> <literal type="number" pos:line="851" pos:column="27">0<pos:position pos:line="851" pos:column="28"/></literal></expr>)<pos:position pos:line="851" pos:column="29"/></condition>
          <block type="pseudo"><if pos:line="852" pos:column="11">if <condition pos:line="852" pos:column="14">(<expr><name><name pos:line="852" pos:column="15">md<pos:position pos:line="852" pos:column="17"/></name><operator pos:line="852" pos:column="17">-&gt;<pos:position pos:line="852" pos:column="22"/></operator><name pos:line="852" pos:column="19">lcc<pos:position pos:line="852" pos:column="22"/></name><index pos:line="852" pos:column="22">[<expr><operator pos:line="852" pos:column="23">*<pos:position pos:line="852" pos:column="24"/></operator><name pos:line="852" pos:column="24">ecode<pos:position pos:line="852" pos:column="29"/></name><operator pos:line="852" pos:column="29">++<pos:position pos:line="852" pos:column="31"/></operator></expr>]<pos:position pos:line="852" pos:column="32"/></index></name> <operator pos:line="852" pos:column="33">!=<pos:position pos:line="852" pos:column="35"/></operator> <name><name pos:line="852" pos:column="36">md<pos:position pos:line="852" pos:column="38"/></name><operator pos:line="852" pos:column="38">-&gt;<pos:position pos:line="852" pos:column="43"/></operator><name pos:line="852" pos:column="40">lcc<pos:position pos:line="852" pos:column="43"/></name><index pos:line="852" pos:column="43">[<expr><operator pos:line="852" pos:column="44">*<pos:position pos:line="852" pos:column="45"/></operator><name pos:line="852" pos:column="45">eptr<pos:position pos:line="852" pos:column="49"/></name><operator pos:line="852" pos:column="49">++<pos:position pos:line="852" pos:column="51"/></operator></expr>]<pos:position pos:line="852" pos:column="52"/></index></name></expr>)<pos:position pos:line="852" pos:column="53"/></condition><then pos:line="852" pos:column="53">
            <block type="pseudo"><return pos:line="853" pos:column="13">return <expr><name pos:line="853" pos:column="20">FALSE<pos:position pos:line="853" pos:column="25"/></name></expr>;<pos:position pos:line="853" pos:column="26"/></return></block></then></if></block></while>
        }<pos:position pos:line="854" pos:column="10"/></block></then>
      <else pos:line="855" pos:column="7">else
        <block pos:line="856" pos:column="9">{
        <while pos:line="857" pos:column="9">while <condition pos:line="857" pos:column="15">(<expr><name pos:line="857" pos:column="16">length<pos:position pos:line="857" pos:column="22"/></name><operator pos:line="857" pos:column="22">--<pos:position pos:line="857" pos:column="24"/></operator> <operator pos:line="857" pos:column="25">&gt;<pos:position pos:line="857" pos:column="29"/></operator> <literal type="number" pos:line="857" pos:column="27">0<pos:position pos:line="857" pos:column="28"/></literal></expr>)<pos:position pos:line="857" pos:column="29"/></condition> <block type="pseudo"><if pos:line="857" pos:column="30">if <condition pos:line="857" pos:column="33">(<expr><operator pos:line="857" pos:column="34">*<pos:position pos:line="857" pos:column="35"/></operator><name pos:line="857" pos:column="35">ecode<pos:position pos:line="857" pos:column="40"/></name><operator pos:line="857" pos:column="40">++<pos:position pos:line="857" pos:column="42"/></operator> <operator pos:line="857" pos:column="43">!=<pos:position pos:line="857" pos:column="45"/></operator> <operator pos:line="857" pos:column="46">*<pos:position pos:line="857" pos:column="47"/></operator><name pos:line="857" pos:column="47">eptr<pos:position pos:line="857" pos:column="51"/></name><operator pos:line="857" pos:column="51">++<pos:position pos:line="857" pos:column="53"/></operator></expr>)<pos:position pos:line="857" pos:column="54"/></condition><then pos:line="857" pos:column="54"> <block type="pseudo"><return pos:line="857" pos:column="55">return <expr><name pos:line="857" pos:column="62">FALSE<pos:position pos:line="857" pos:column="67"/></name></expr>;<pos:position pos:line="857" pos:column="68"/></return></block></then></if></block></while>
        }<pos:position pos:line="858" pos:column="10"/></block></else></if>
      }<pos:position pos:line="859" pos:column="8"/></block>
    <break pos:line="860" pos:column="5">break;<pos:position pos:line="860" pos:column="11"/></break>

    <comment type="block" pos:line="862" pos:column="5">/* Match a single character repeatedly; different opcodes share code. */</comment>

    <case pos:line="864" pos:column="5">case <expr><name pos:line="864" pos:column="10">OP_EXACT<pos:position pos:line="864" pos:column="18"/></name></expr>:<pos:position pos:line="864" pos:column="19"/></case>
    <expr_stmt><expr><name pos:line="865" pos:column="5">min<pos:position pos:line="865" pos:column="8"/></name> <operator pos:line="865" pos:column="9">=<pos:position pos:line="865" pos:column="10"/></operator> <name pos:line="865" pos:column="11">max<pos:position pos:line="865" pos:column="14"/></name> <operator pos:line="865" pos:column="15">=<pos:position pos:line="865" pos:column="16"/></operator> <operator pos:line="865" pos:column="17">(<pos:position pos:line="865" pos:column="18"/></operator><name><name pos:line="865" pos:column="18">ecode<pos:position pos:line="865" pos:column="23"/></name><index pos:line="865" pos:column="23">[<expr><literal type="number" pos:line="865" pos:column="24">1<pos:position pos:line="865" pos:column="25"/></literal></expr>]<pos:position pos:line="865" pos:column="26"/></index></name> <operator pos:line="865" pos:column="27">&lt;&lt;<pos:position pos:line="865" pos:column="35"/></operator> <literal type="number" pos:line="865" pos:column="30">8<pos:position pos:line="865" pos:column="31"/></literal><operator pos:line="865" pos:column="31">)<pos:position pos:line="865" pos:column="32"/></operator> <operator pos:line="865" pos:column="33">+<pos:position pos:line="865" pos:column="34"/></operator> <name><name pos:line="865" pos:column="35">ecode<pos:position pos:line="865" pos:column="40"/></name><index pos:line="865" pos:column="40">[<expr><literal type="number" pos:line="865" pos:column="41">2<pos:position pos:line="865" pos:column="42"/></literal></expr>]<pos:position pos:line="865" pos:column="43"/></index></name></expr>;<pos:position pos:line="865" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="866" pos:column="5">ecode<pos:position pos:line="866" pos:column="10"/></name> <operator pos:line="866" pos:column="11">+=<pos:position pos:line="866" pos:column="13"/></operator> <literal type="number" pos:line="866" pos:column="14">3<pos:position pos:line="866" pos:column="15"/></literal></expr>;<pos:position pos:line="866" pos:column="16"/></expr_stmt>
    <goto pos:line="867" pos:column="5">goto <name pos:line="867" pos:column="10">REPEATCHAR<pos:position pos:line="867" pos:column="20"/></name>;<pos:position pos:line="867" pos:column="21"/></goto>

    <case pos:line="869" pos:column="5">case <expr><name pos:line="869" pos:column="10">OP_UPTO<pos:position pos:line="869" pos:column="17"/></name></expr>:<pos:position pos:line="869" pos:column="18"/></case>
    <case pos:line="870" pos:column="5">case <expr><name pos:line="870" pos:column="10">OP_MINUPTO<pos:position pos:line="870" pos:column="20"/></name></expr>:<pos:position pos:line="870" pos:column="21"/></case>
    <expr_stmt><expr><name pos:line="871" pos:column="5">min<pos:position pos:line="871" pos:column="8"/></name> <operator pos:line="871" pos:column="9">=<pos:position pos:line="871" pos:column="10"/></operator> <literal type="number" pos:line="871" pos:column="11">0<pos:position pos:line="871" pos:column="12"/></literal></expr>;<pos:position pos:line="871" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="872" pos:column="5">max<pos:position pos:line="872" pos:column="8"/></name> <operator pos:line="872" pos:column="9">=<pos:position pos:line="872" pos:column="10"/></operator> <operator pos:line="872" pos:column="11">(<pos:position pos:line="872" pos:column="12"/></operator><name><name pos:line="872" pos:column="12">ecode<pos:position pos:line="872" pos:column="17"/></name><index pos:line="872" pos:column="17">[<expr><literal type="number" pos:line="872" pos:column="18">1<pos:position pos:line="872" pos:column="19"/></literal></expr>]<pos:position pos:line="872" pos:column="20"/></index></name> <operator pos:line="872" pos:column="21">&lt;&lt;<pos:position pos:line="872" pos:column="29"/></operator> <literal type="number" pos:line="872" pos:column="24">8<pos:position pos:line="872" pos:column="25"/></literal><operator pos:line="872" pos:column="25">)<pos:position pos:line="872" pos:column="26"/></operator> <operator pos:line="872" pos:column="27">+<pos:position pos:line="872" pos:column="28"/></operator> <name><name pos:line="872" pos:column="29">ecode<pos:position pos:line="872" pos:column="34"/></name><index pos:line="872" pos:column="34">[<expr><literal type="number" pos:line="872" pos:column="35">2<pos:position pos:line="872" pos:column="36"/></literal></expr>]<pos:position pos:line="872" pos:column="37"/></index></name></expr>;<pos:position pos:line="872" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="873" pos:column="5">minimize<pos:position pos:line="873" pos:column="13"/></name> <operator pos:line="873" pos:column="14">=<pos:position pos:line="873" pos:column="15"/></operator> <operator pos:line="873" pos:column="16">*<pos:position pos:line="873" pos:column="17"/></operator><name pos:line="873" pos:column="17">ecode<pos:position pos:line="873" pos:column="22"/></name> <operator pos:line="873" pos:column="23">==<pos:position pos:line="873" pos:column="25"/></operator> <name pos:line="873" pos:column="26">OP_MINUPTO<pos:position pos:line="873" pos:column="36"/></name></expr>;<pos:position pos:line="873" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="874" pos:column="5">ecode<pos:position pos:line="874" pos:column="10"/></name> <operator pos:line="874" pos:column="11">+=<pos:position pos:line="874" pos:column="13"/></operator> <literal type="number" pos:line="874" pos:column="14">3<pos:position pos:line="874" pos:column="15"/></literal></expr>;<pos:position pos:line="874" pos:column="16"/></expr_stmt>
    <goto pos:line="875" pos:column="5">goto <name pos:line="875" pos:column="10">REPEATCHAR<pos:position pos:line="875" pos:column="20"/></name>;<pos:position pos:line="875" pos:column="21"/></goto>

    <case pos:line="877" pos:column="5">case <expr><name pos:line="877" pos:column="10">OP_STAR<pos:position pos:line="877" pos:column="17"/></name></expr>:<pos:position pos:line="877" pos:column="18"/></case>
    <case pos:line="878" pos:column="5">case <expr><name pos:line="878" pos:column="10">OP_MINSTAR<pos:position pos:line="878" pos:column="20"/></name></expr>:<pos:position pos:line="878" pos:column="21"/></case>
    <case pos:line="879" pos:column="5">case <expr><name pos:line="879" pos:column="10">OP_PLUS<pos:position pos:line="879" pos:column="17"/></name></expr>:<pos:position pos:line="879" pos:column="18"/></case>
    <case pos:line="880" pos:column="5">case <expr><name pos:line="880" pos:column="10">OP_MINPLUS<pos:position pos:line="880" pos:column="20"/></name></expr>:<pos:position pos:line="880" pos:column="21"/></case>
    <case pos:line="881" pos:column="5">case <expr><name pos:line="881" pos:column="10">OP_QUERY<pos:position pos:line="881" pos:column="18"/></name></expr>:<pos:position pos:line="881" pos:column="19"/></case>
    <case pos:line="882" pos:column="5">case <expr><name pos:line="882" pos:column="10">OP_MINQUERY<pos:position pos:line="882" pos:column="21"/></name></expr>:<pos:position pos:line="882" pos:column="22"/></case>
    <expr_stmt><expr><name pos:line="883" pos:column="5">c<pos:position pos:line="883" pos:column="6"/></name> <operator pos:line="883" pos:column="7">=<pos:position pos:line="883" pos:column="8"/></operator> <operator pos:line="883" pos:column="9">*<pos:position pos:line="883" pos:column="10"/></operator><name pos:line="883" pos:column="10">ecode<pos:position pos:line="883" pos:column="15"/></name><operator pos:line="883" pos:column="15">++<pos:position pos:line="883" pos:column="17"/></operator> <operator pos:line="883" pos:column="18">-<pos:position pos:line="883" pos:column="19"/></operator> <name pos:line="883" pos:column="20">OP_STAR<pos:position pos:line="883" pos:column="27"/></name></expr>;<pos:position pos:line="883" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="884" pos:column="5">minimize<pos:position pos:line="884" pos:column="13"/></name> <operator pos:line="884" pos:column="14">=<pos:position pos:line="884" pos:column="15"/></operator> <operator pos:line="884" pos:column="16">(<pos:position pos:line="884" pos:column="17"/></operator><name pos:line="884" pos:column="17">c<pos:position pos:line="884" pos:column="18"/></name> <operator pos:line="884" pos:column="19">&amp;<pos:position pos:line="884" pos:column="24"/></operator> <literal type="number" pos:line="884" pos:column="21">1<pos:position pos:line="884" pos:column="22"/></literal><operator pos:line="884" pos:column="22">)<pos:position pos:line="884" pos:column="23"/></operator> <operator pos:line="884" pos:column="24">!=<pos:position pos:line="884" pos:column="26"/></operator> <literal type="number" pos:line="884" pos:column="27">0<pos:position pos:line="884" pos:column="28"/></literal></expr>;<pos:position pos:line="884" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="885" pos:column="5">min<pos:position pos:line="885" pos:column="8"/></name> <operator pos:line="885" pos:column="9">=<pos:position pos:line="885" pos:column="10"/></operator> <name><name pos:line="885" pos:column="11">rep_min<pos:position pos:line="885" pos:column="18"/></name><index pos:line="885" pos:column="18">[<expr><name pos:line="885" pos:column="19">c<pos:position pos:line="885" pos:column="20"/></name></expr>]<pos:position pos:line="885" pos:column="21"/></index></name></expr>;<pos:position pos:line="885" pos:column="22"/></expr_stmt>                 <comment type="block" pos:line="885" pos:column="39">/* Pick up values from tables; */</comment>
    <expr_stmt><expr><name pos:line="886" pos:column="5">max<pos:position pos:line="886" pos:column="8"/></name> <operator pos:line="886" pos:column="9">=<pos:position pos:line="886" pos:column="10"/></operator> <name><name pos:line="886" pos:column="11">rep_max<pos:position pos:line="886" pos:column="18"/></name><index pos:line="886" pos:column="18">[<expr><name pos:line="886" pos:column="19">c<pos:position pos:line="886" pos:column="20"/></name></expr>]<pos:position pos:line="886" pos:column="21"/></index></name></expr>;<pos:position pos:line="886" pos:column="22"/></expr_stmt>                 <comment type="block" pos:line="886" pos:column="39">/* zero for max =&gt; infinity */</comment>
    <if pos:line="887" pos:column="5">if <condition pos:line="887" pos:column="8">(<expr><name pos:line="887" pos:column="9">max<pos:position pos:line="887" pos:column="12"/></name> <operator pos:line="887" pos:column="13">==<pos:position pos:line="887" pos:column="15"/></operator> <literal type="number" pos:line="887" pos:column="16">0<pos:position pos:line="887" pos:column="17"/></literal></expr>)<pos:position pos:line="887" pos:column="18"/></condition><then pos:line="887" pos:column="18"> <block type="pseudo"><expr_stmt><expr><name pos:line="887" pos:column="19">max<pos:position pos:line="887" pos:column="22"/></name> <operator pos:line="887" pos:column="23">=<pos:position pos:line="887" pos:column="24"/></operator> <name pos:line="887" pos:column="25">INT_MAX<pos:position pos:line="887" pos:column="32"/></name></expr>;<pos:position pos:line="887" pos:column="33"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="889" pos:column="5">/* Common code for all repeated single-character matches. We can give
    up quickly if there are fewer than the minimum number of characters left in
    the subject. */</comment>

    <label><name pos:line="893" pos:column="5">REPEATCHAR<pos:position pos:line="893" pos:column="15"/></name>:<pos:position pos:line="893" pos:column="16"/></label>
    <if pos:line="894" pos:column="5">if <condition pos:line="894" pos:column="8">(<expr><name pos:line="894" pos:column="9">min<pos:position pos:line="894" pos:column="12"/></name> <operator pos:line="894" pos:column="13">&gt;<pos:position pos:line="894" pos:column="17"/></operator> <name><name pos:line="894" pos:column="15">md<pos:position pos:line="894" pos:column="17"/></name><operator pos:line="894" pos:column="17">-&gt;<pos:position pos:line="894" pos:column="22"/></operator><name pos:line="894" pos:column="19">end_subject<pos:position pos:line="894" pos:column="30"/></name></name> <operator pos:line="894" pos:column="31">-<pos:position pos:line="894" pos:column="32"/></operator> <name pos:line="894" pos:column="33">eptr<pos:position pos:line="894" pos:column="37"/></name></expr>)<pos:position pos:line="894" pos:column="38"/></condition><then pos:line="894" pos:column="38"> <block type="pseudo"><return pos:line="894" pos:column="39">return <expr><name pos:line="894" pos:column="46">FALSE<pos:position pos:line="894" pos:column="51"/></name></expr>;<pos:position pos:line="894" pos:column="52"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="895" pos:column="5">c<pos:position pos:line="895" pos:column="6"/></name> <operator pos:line="895" pos:column="7">=<pos:position pos:line="895" pos:column="8"/></operator> <operator pos:line="895" pos:column="9">*<pos:position pos:line="895" pos:column="10"/></operator><name pos:line="895" pos:column="10">ecode<pos:position pos:line="895" pos:column="15"/></name><operator pos:line="895" pos:column="15">++<pos:position pos:line="895" pos:column="17"/></operator></expr>;<pos:position pos:line="895" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="897" pos:column="5">/* The code is duplicated for the caseless and caseful cases, for speed,
    since matching characters is likely to be quite common. First, ensure the
    minimum number of matches are present. If min = max, continue at the same
    level without recursing. Otherwise, if minimizing, keep trying the rest of
    the expression and advancing one matching character if failing, up to the
    maximum. Alternatively, if maximizing, find the maximum number of
    characters and work backwards. */</comment>

    <expr_stmt><expr><call><name pos:line="905" pos:column="5">DPRINTF<pos:position pos:line="905" pos:column="12"/></name><argument_list pos:line="905" pos:column="12">(<argument><expr><operator pos:line="905" pos:column="13">(<pos:position pos:line="905" pos:column="14"/></operator><literal type="string" pos:line="905" pos:column="14">"matching %c{%d,%d} against subject %.*s\n"<pos:position pos:line="905" pos:column="57"/></literal><operator pos:line="905" pos:column="57">,<pos:position pos:line="905" pos:column="58"/></operator> <name pos:line="905" pos:column="59">c<pos:position pos:line="905" pos:column="60"/></name><operator pos:line="905" pos:column="60">,<pos:position pos:line="905" pos:column="61"/></operator> <name pos:line="905" pos:column="62">min<pos:position pos:line="905" pos:column="65"/></name><operator pos:line="905" pos:column="65">,<pos:position pos:line="905" pos:column="66"/></operator> <name pos:line="905" pos:column="67">max<pos:position pos:line="905" pos:column="70"/></name><operator pos:line="905" pos:column="70">,<pos:position pos:line="905" pos:column="71"/></operator>
      <name pos:line="906" pos:column="7">max<pos:position pos:line="906" pos:column="10"/></name><operator pos:line="906" pos:column="10">,<pos:position pos:line="906" pos:column="11"/></operator> <name pos:line="906" pos:column="12">eptr<pos:position pos:line="906" pos:column="16"/></name><operator pos:line="906" pos:column="16">)<pos:position pos:line="906" pos:column="17"/></operator></expr></argument>)<pos:position pos:line="906" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="906" pos:column="19"/></expr_stmt>

    <if pos:line="908" pos:column="5">if <condition pos:line="908" pos:column="8">(<expr><operator pos:line="908" pos:column="9">(<pos:position pos:line="908" pos:column="10"/></operator><name pos:line="908" pos:column="10">ims<pos:position pos:line="908" pos:column="13"/></name> <operator pos:line="908" pos:column="14">&amp;<pos:position pos:line="908" pos:column="19"/></operator> <name pos:line="908" pos:column="16">PCRE_CASELESS<pos:position pos:line="908" pos:column="29"/></name><operator pos:line="908" pos:column="29">)<pos:position pos:line="908" pos:column="30"/></operator> <operator pos:line="908" pos:column="31">!=<pos:position pos:line="908" pos:column="33"/></operator> <literal type="number" pos:line="908" pos:column="34">0<pos:position pos:line="908" pos:column="35"/></literal></expr>)<pos:position pos:line="908" pos:column="36"/></condition><then pos:line="908" pos:column="36">
      <block pos:line="909" pos:column="7">{
      <expr_stmt><expr><name pos:line="910" pos:column="7">c<pos:position pos:line="910" pos:column="8"/></name> <operator pos:line="910" pos:column="9">=<pos:position pos:line="910" pos:column="10"/></operator> <name><name pos:line="910" pos:column="11">md<pos:position pos:line="910" pos:column="13"/></name><operator pos:line="910" pos:column="13">-&gt;<pos:position pos:line="910" pos:column="18"/></operator><name pos:line="910" pos:column="15">lcc<pos:position pos:line="910" pos:column="18"/></name><index pos:line="910" pos:column="18">[<expr><name pos:line="910" pos:column="19">c<pos:position pos:line="910" pos:column="20"/></name></expr>]<pos:position pos:line="910" pos:column="21"/></index></name></expr>;<pos:position pos:line="910" pos:column="22"/></expr_stmt>
      <for pos:line="911" pos:column="7">for <control pos:line="911" pos:column="11">(<init><expr><name pos:line="911" pos:column="12">i<pos:position pos:line="911" pos:column="13"/></name> <operator pos:line="911" pos:column="14">=<pos:position pos:line="911" pos:column="15"/></operator> <literal type="number" pos:line="911" pos:column="16">1<pos:position pos:line="911" pos:column="17"/></literal></expr>;<pos:position pos:line="911" pos:column="18"/></init> <condition><expr><name pos:line="911" pos:column="19">i<pos:position pos:line="911" pos:column="20"/></name> <operator pos:line="911" pos:column="21">&lt;=<pos:position pos:line="911" pos:column="26"/></operator> <name pos:line="911" pos:column="24">min<pos:position pos:line="911" pos:column="27"/></name></expr>;<pos:position pos:line="911" pos:column="28"/></condition> <incr><expr><name pos:line="911" pos:column="29">i<pos:position pos:line="911" pos:column="30"/></name><operator pos:line="911" pos:column="30">++<pos:position pos:line="911" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="911" pos:column="33"/></control>
        <block type="pseudo"><if pos:line="912" pos:column="9">if <condition pos:line="912" pos:column="12">(<expr><name pos:line="912" pos:column="13">c<pos:position pos:line="912" pos:column="14"/></name> <operator pos:line="912" pos:column="15">!=<pos:position pos:line="912" pos:column="17"/></operator> <name><name pos:line="912" pos:column="18">md<pos:position pos:line="912" pos:column="20"/></name><operator pos:line="912" pos:column="20">-&gt;<pos:position pos:line="912" pos:column="25"/></operator><name pos:line="912" pos:column="22">lcc<pos:position pos:line="912" pos:column="25"/></name><index pos:line="912" pos:column="25">[<expr><operator pos:line="912" pos:column="26">*<pos:position pos:line="912" pos:column="27"/></operator><name pos:line="912" pos:column="27">eptr<pos:position pos:line="912" pos:column="31"/></name><operator pos:line="912" pos:column="31">++<pos:position pos:line="912" pos:column="33"/></operator></expr>]<pos:position pos:line="912" pos:column="34"/></index></name></expr>)<pos:position pos:line="912" pos:column="35"/></condition><then pos:line="912" pos:column="35"> <block type="pseudo"><return pos:line="912" pos:column="36">return <expr><name pos:line="912" pos:column="43">FALSE<pos:position pos:line="912" pos:column="48"/></name></expr>;<pos:position pos:line="912" pos:column="49"/></return></block></then></if></block></for>
      <if pos:line="913" pos:column="7">if <condition pos:line="913" pos:column="10">(<expr><name pos:line="913" pos:column="11">min<pos:position pos:line="913" pos:column="14"/></name> <operator pos:line="913" pos:column="15">==<pos:position pos:line="913" pos:column="17"/></operator> <name pos:line="913" pos:column="18">max<pos:position pos:line="913" pos:column="21"/></name></expr>)<pos:position pos:line="913" pos:column="22"/></condition><then pos:line="913" pos:column="22"> <block type="pseudo"><continue pos:line="913" pos:column="23">continue;<pos:position pos:line="913" pos:column="32"/></continue></block></then></if>
      <if pos:line="914" pos:column="7">if <condition pos:line="914" pos:column="10">(<expr><name pos:line="914" pos:column="11">minimize<pos:position pos:line="914" pos:column="19"/></name></expr>)<pos:position pos:line="914" pos:column="20"/></condition><then pos:line="914" pos:column="20">
        <block pos:line="915" pos:column="9">{
        <for pos:line="916" pos:column="9">for <control pos:line="916" pos:column="13">(<init><expr><name pos:line="916" pos:column="14">i<pos:position pos:line="916" pos:column="15"/></name> <operator pos:line="916" pos:column="16">=<pos:position pos:line="916" pos:column="17"/></operator> <name pos:line="916" pos:column="18">min<pos:position pos:line="916" pos:column="21"/></name></expr>;<pos:position pos:line="916" pos:column="22"/></init><condition pos:line="916" pos:column="22">;<pos:position pos:line="916" pos:column="23"/></condition> <incr><expr><name pos:line="916" pos:column="24">i<pos:position pos:line="916" pos:column="25"/></name><operator pos:line="916" pos:column="25">++<pos:position pos:line="916" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="916" pos:column="28"/></control>
          <block pos:line="917" pos:column="11">{
          <if pos:line="918" pos:column="11">if <condition pos:line="918" pos:column="14">(<expr><call><name pos:line="918" pos:column="15">match<pos:position pos:line="918" pos:column="20"/></name><argument_list pos:line="918" pos:column="20">(<argument><expr><name pos:line="918" pos:column="21">eptr<pos:position pos:line="918" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="918" pos:column="27">ecode<pos:position pos:line="918" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="918" pos:column="34">offset_top<pos:position pos:line="918" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="918" pos:column="46">md<pos:position pos:line="918" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="918" pos:column="50">ims<pos:position pos:line="918" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="918" pos:column="55">eptrb<pos:position pos:line="918" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="918" pos:column="62">0<pos:position pos:line="918" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="918" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="918" pos:column="65"/></condition><then pos:line="918" pos:column="65">
            <block type="pseudo"><return pos:line="919" pos:column="13">return <expr><name pos:line="919" pos:column="20">TRUE<pos:position pos:line="919" pos:column="24"/></name></expr>;<pos:position pos:line="919" pos:column="25"/></return></block></then></if>
          <if pos:line="920" pos:column="11">if <condition pos:line="920" pos:column="14">(<expr><name pos:line="920" pos:column="15">i<pos:position pos:line="920" pos:column="16"/></name> <operator pos:line="920" pos:column="17">&gt;=<pos:position pos:line="920" pos:column="22"/></operator> <name pos:line="920" pos:column="20">max<pos:position pos:line="920" pos:column="23"/></name> <operator pos:line="920" pos:column="24">||<pos:position pos:line="920" pos:column="26"/></operator> <name pos:line="920" pos:column="27">eptr<pos:position pos:line="920" pos:column="31"/></name> <operator pos:line="920" pos:column="32">&gt;=<pos:position pos:line="920" pos:column="37"/></operator> <name><name pos:line="920" pos:column="35">md<pos:position pos:line="920" pos:column="37"/></name><operator pos:line="920" pos:column="37">-&gt;<pos:position pos:line="920" pos:column="42"/></operator><name pos:line="920" pos:column="39">end_subject<pos:position pos:line="920" pos:column="50"/></name></name> <operator pos:line="920" pos:column="51">||<pos:position pos:line="920" pos:column="53"/></operator>
              <name pos:line="921" pos:column="15">c<pos:position pos:line="921" pos:column="16"/></name> <operator pos:line="921" pos:column="17">!=<pos:position pos:line="921" pos:column="19"/></operator> <name><name pos:line="921" pos:column="20">md<pos:position pos:line="921" pos:column="22"/></name><operator pos:line="921" pos:column="22">-&gt;<pos:position pos:line="921" pos:column="27"/></operator><name pos:line="921" pos:column="24">lcc<pos:position pos:line="921" pos:column="27"/></name><index pos:line="921" pos:column="27">[<expr><operator pos:line="921" pos:column="28">*<pos:position pos:line="921" pos:column="29"/></operator><name pos:line="921" pos:column="29">eptr<pos:position pos:line="921" pos:column="33"/></name><operator pos:line="921" pos:column="33">++<pos:position pos:line="921" pos:column="35"/></operator></expr>]<pos:position pos:line="921" pos:column="36"/></index></name></expr>)<pos:position pos:line="921" pos:column="37"/></condition><then pos:line="921" pos:column="37">
            <block type="pseudo"><return pos:line="922" pos:column="13">return <expr><name pos:line="922" pos:column="20">FALSE<pos:position pos:line="922" pos:column="25"/></name></expr>;<pos:position pos:line="922" pos:column="26"/></return></block></then></if>
          }<pos:position pos:line="923" pos:column="12"/></block></for>
        <comment type="block" pos:line="924" pos:column="9">/* Control never gets here */</comment>
        }<pos:position pos:line="925" pos:column="10"/></block></then>
      <else pos:line="926" pos:column="7">else
        <block pos:line="927" pos:column="9">{
        <decl_stmt><decl><type><specifier pos:line="928" pos:column="9">const<pos:position pos:line="928" pos:column="14"/></specifier> <name pos:line="928" pos:column="15">uschar<pos:position pos:line="928" pos:column="21"/></name> <modifier pos:line="928" pos:column="22">*<pos:position pos:line="928" pos:column="23"/></modifier></type><name pos:line="928" pos:column="23">pp<pos:position pos:line="928" pos:column="25"/></name> <init pos:line="928" pos:column="26">= <expr><name pos:line="928" pos:column="28">eptr<pos:position pos:line="928" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="928" pos:column="33"/></decl_stmt>
        <for pos:line="929" pos:column="9">for <control pos:line="929" pos:column="13">(<init><expr><name pos:line="929" pos:column="14">i<pos:position pos:line="929" pos:column="15"/></name> <operator pos:line="929" pos:column="16">=<pos:position pos:line="929" pos:column="17"/></operator> <name pos:line="929" pos:column="18">min<pos:position pos:line="929" pos:column="21"/></name></expr>;<pos:position pos:line="929" pos:column="22"/></init> <condition><expr><name pos:line="929" pos:column="23">i<pos:position pos:line="929" pos:column="24"/></name> <operator pos:line="929" pos:column="25">&lt;<pos:position pos:line="929" pos:column="29"/></operator> <name pos:line="929" pos:column="27">max<pos:position pos:line="929" pos:column="30"/></name></expr>;<pos:position pos:line="929" pos:column="31"/></condition> <incr><expr><name pos:line="929" pos:column="32">i<pos:position pos:line="929" pos:column="33"/></name><operator pos:line="929" pos:column="33">++<pos:position pos:line="929" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="929" pos:column="36"/></control>
          <block pos:line="930" pos:column="11">{
          <if pos:line="931" pos:column="11">if <condition pos:line="931" pos:column="14">(<expr><name pos:line="931" pos:column="15">eptr<pos:position pos:line="931" pos:column="19"/></name> <operator pos:line="931" pos:column="20">&gt;=<pos:position pos:line="931" pos:column="25"/></operator> <name><name pos:line="931" pos:column="23">md<pos:position pos:line="931" pos:column="25"/></name><operator pos:line="931" pos:column="25">-&gt;<pos:position pos:line="931" pos:column="30"/></operator><name pos:line="931" pos:column="27">end_subject<pos:position pos:line="931" pos:column="38"/></name></name> <operator pos:line="931" pos:column="39">||<pos:position pos:line="931" pos:column="41"/></operator> <name pos:line="931" pos:column="42">c<pos:position pos:line="931" pos:column="43"/></name> <operator pos:line="931" pos:column="44">!=<pos:position pos:line="931" pos:column="46"/></operator> <name><name pos:line="931" pos:column="47">md<pos:position pos:line="931" pos:column="49"/></name><operator pos:line="931" pos:column="49">-&gt;<pos:position pos:line="931" pos:column="54"/></operator><name pos:line="931" pos:column="51">lcc<pos:position pos:line="931" pos:column="54"/></name><index pos:line="931" pos:column="54">[<expr><operator pos:line="931" pos:column="55">*<pos:position pos:line="931" pos:column="56"/></operator><name pos:line="931" pos:column="56">eptr<pos:position pos:line="931" pos:column="60"/></name></expr>]<pos:position pos:line="931" pos:column="61"/></index></name></expr>)<pos:position pos:line="931" pos:column="62"/></condition><then pos:line="931" pos:column="62"> <block type="pseudo"><break pos:line="931" pos:column="63">break;<pos:position pos:line="931" pos:column="69"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="932" pos:column="11">eptr<pos:position pos:line="932" pos:column="15"/></name><operator pos:line="932" pos:column="15">++<pos:position pos:line="932" pos:column="17"/></operator></expr>;<pos:position pos:line="932" pos:column="18"/></expr_stmt>
          }<pos:position pos:line="933" pos:column="12"/></block></for>
        <while pos:line="934" pos:column="9">while <condition pos:line="934" pos:column="15">(<expr><name pos:line="934" pos:column="16">eptr<pos:position pos:line="934" pos:column="20"/></name> <operator pos:line="934" pos:column="21">&gt;=<pos:position pos:line="934" pos:column="26"/></operator> <name pos:line="934" pos:column="24">pp<pos:position pos:line="934" pos:column="26"/></name></expr>)<pos:position pos:line="934" pos:column="27"/></condition>
          <block type="pseudo"><if pos:line="935" pos:column="11">if <condition pos:line="935" pos:column="14">(<expr><call><name pos:line="935" pos:column="15">match<pos:position pos:line="935" pos:column="20"/></name><argument_list pos:line="935" pos:column="20">(<argument><expr><name pos:line="935" pos:column="21">eptr<pos:position pos:line="935" pos:column="25"/></name><operator pos:line="935" pos:column="25">--<pos:position pos:line="935" pos:column="27"/></operator></expr></argument>, <argument><expr><name pos:line="935" pos:column="29">ecode<pos:position pos:line="935" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="935" pos:column="36">offset_top<pos:position pos:line="935" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="935" pos:column="48">md<pos:position pos:line="935" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="935" pos:column="52">ims<pos:position pos:line="935" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="935" pos:column="57">eptrb<pos:position pos:line="935" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="935" pos:column="64">0<pos:position pos:line="935" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="935" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="935" pos:column="67"/></condition><then pos:line="935" pos:column="67">
            <block type="pseudo"><return pos:line="936" pos:column="13">return <expr><name pos:line="936" pos:column="20">TRUE<pos:position pos:line="936" pos:column="24"/></name></expr>;<pos:position pos:line="936" pos:column="25"/></return></block></then></if></block></while>
        <return pos:line="937" pos:column="9">return <expr><name pos:line="937" pos:column="16">FALSE<pos:position pos:line="937" pos:column="21"/></name></expr>;<pos:position pos:line="937" pos:column="22"/></return>
        }<pos:position pos:line="938" pos:column="10"/></block></else></if>
      <comment type="block" pos:line="939" pos:column="7">/* Control never gets here */</comment>
      }<pos:position pos:line="940" pos:column="8"/></block></then>

    <comment type="block" pos:line="942" pos:column="5">/* Caseful comparisons */</comment>

    <else pos:line="944" pos:column="5">else
      <block pos:line="945" pos:column="7">{
      <for pos:line="946" pos:column="7">for <control pos:line="946" pos:column="11">(<init><expr><name pos:line="946" pos:column="12">i<pos:position pos:line="946" pos:column="13"/></name> <operator pos:line="946" pos:column="14">=<pos:position pos:line="946" pos:column="15"/></operator> <literal type="number" pos:line="946" pos:column="16">1<pos:position pos:line="946" pos:column="17"/></literal></expr>;<pos:position pos:line="946" pos:column="18"/></init> <condition><expr><name pos:line="946" pos:column="19">i<pos:position pos:line="946" pos:column="20"/></name> <operator pos:line="946" pos:column="21">&lt;=<pos:position pos:line="946" pos:column="26"/></operator> <name pos:line="946" pos:column="24">min<pos:position pos:line="946" pos:column="27"/></name></expr>;<pos:position pos:line="946" pos:column="28"/></condition> <incr><expr><name pos:line="946" pos:column="29">i<pos:position pos:line="946" pos:column="30"/></name><operator pos:line="946" pos:column="30">++<pos:position pos:line="946" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="946" pos:column="33"/></control> <block type="pseudo"><if pos:line="946" pos:column="34">if <condition pos:line="946" pos:column="37">(<expr><name pos:line="946" pos:column="38">c<pos:position pos:line="946" pos:column="39"/></name> <operator pos:line="946" pos:column="40">!=<pos:position pos:line="946" pos:column="42"/></operator> <operator pos:line="946" pos:column="43">*<pos:position pos:line="946" pos:column="44"/></operator><name pos:line="946" pos:column="44">eptr<pos:position pos:line="946" pos:column="48"/></name><operator pos:line="946" pos:column="48">++<pos:position pos:line="946" pos:column="50"/></operator></expr>)<pos:position pos:line="946" pos:column="51"/></condition><then pos:line="946" pos:column="51"> <block type="pseudo"><return pos:line="946" pos:column="52">return <expr><name pos:line="946" pos:column="59">FALSE<pos:position pos:line="946" pos:column="64"/></name></expr>;<pos:position pos:line="946" pos:column="65"/></return></block></then></if></block></for>
      <if pos:line="947" pos:column="7">if <condition pos:line="947" pos:column="10">(<expr><name pos:line="947" pos:column="11">min<pos:position pos:line="947" pos:column="14"/></name> <operator pos:line="947" pos:column="15">==<pos:position pos:line="947" pos:column="17"/></operator> <name pos:line="947" pos:column="18">max<pos:position pos:line="947" pos:column="21"/></name></expr>)<pos:position pos:line="947" pos:column="22"/></condition><then pos:line="947" pos:column="22"> <block type="pseudo"><continue pos:line="947" pos:column="23">continue;<pos:position pos:line="947" pos:column="32"/></continue></block></then></if>
      <if pos:line="948" pos:column="7">if <condition pos:line="948" pos:column="10">(<expr><name pos:line="948" pos:column="11">minimize<pos:position pos:line="948" pos:column="19"/></name></expr>)<pos:position pos:line="948" pos:column="20"/></condition><then pos:line="948" pos:column="20">
        <block pos:line="949" pos:column="9">{
        <for pos:line="950" pos:column="9">for <control pos:line="950" pos:column="13">(<init><expr><name pos:line="950" pos:column="14">i<pos:position pos:line="950" pos:column="15"/></name> <operator pos:line="950" pos:column="16">=<pos:position pos:line="950" pos:column="17"/></operator> <name pos:line="950" pos:column="18">min<pos:position pos:line="950" pos:column="21"/></name></expr>;<pos:position pos:line="950" pos:column="22"/></init><condition pos:line="950" pos:column="22">;<pos:position pos:line="950" pos:column="23"/></condition> <incr><expr><name pos:line="950" pos:column="24">i<pos:position pos:line="950" pos:column="25"/></name><operator pos:line="950" pos:column="25">++<pos:position pos:line="950" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="950" pos:column="28"/></control>
          <block pos:line="951" pos:column="11">{
          <if pos:line="952" pos:column="11">if <condition pos:line="952" pos:column="14">(<expr><call><name pos:line="952" pos:column="15">match<pos:position pos:line="952" pos:column="20"/></name><argument_list pos:line="952" pos:column="20">(<argument><expr><name pos:line="952" pos:column="21">eptr<pos:position pos:line="952" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="952" pos:column="27">ecode<pos:position pos:line="952" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="952" pos:column="34">offset_top<pos:position pos:line="952" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="952" pos:column="46">md<pos:position pos:line="952" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="952" pos:column="50">ims<pos:position pos:line="952" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="952" pos:column="55">eptrb<pos:position pos:line="952" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="952" pos:column="62">0<pos:position pos:line="952" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="952" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="952" pos:column="65"/></condition><then pos:line="952" pos:column="65">
            <block type="pseudo"><return pos:line="953" pos:column="13">return <expr><name pos:line="953" pos:column="20">TRUE<pos:position pos:line="953" pos:column="24"/></name></expr>;<pos:position pos:line="953" pos:column="25"/></return></block></then></if>
          <if pos:line="954" pos:column="11">if <condition pos:line="954" pos:column="14">(<expr><name pos:line="954" pos:column="15">i<pos:position pos:line="954" pos:column="16"/></name> <operator pos:line="954" pos:column="17">&gt;=<pos:position pos:line="954" pos:column="22"/></operator> <name pos:line="954" pos:column="20">max<pos:position pos:line="954" pos:column="23"/></name> <operator pos:line="954" pos:column="24">||<pos:position pos:line="954" pos:column="26"/></operator> <name pos:line="954" pos:column="27">eptr<pos:position pos:line="954" pos:column="31"/></name> <operator pos:line="954" pos:column="32">&gt;=<pos:position pos:line="954" pos:column="37"/></operator> <name><name pos:line="954" pos:column="35">md<pos:position pos:line="954" pos:column="37"/></name><operator pos:line="954" pos:column="37">-&gt;<pos:position pos:line="954" pos:column="42"/></operator><name pos:line="954" pos:column="39">end_subject<pos:position pos:line="954" pos:column="50"/></name></name> <operator pos:line="954" pos:column="51">||<pos:position pos:line="954" pos:column="53"/></operator> <name pos:line="954" pos:column="54">c<pos:position pos:line="954" pos:column="55"/></name> <operator pos:line="954" pos:column="56">!=<pos:position pos:line="954" pos:column="58"/></operator> <operator pos:line="954" pos:column="59">*<pos:position pos:line="954" pos:column="60"/></operator><name pos:line="954" pos:column="60">eptr<pos:position pos:line="954" pos:column="64"/></name><operator pos:line="954" pos:column="64">++<pos:position pos:line="954" pos:column="66"/></operator></expr>)<pos:position pos:line="954" pos:column="67"/></condition><then pos:line="954" pos:column="67"> <block type="pseudo"><return pos:line="954" pos:column="68">return <expr><name pos:line="954" pos:column="75">FALSE<pos:position pos:line="954" pos:column="80"/></name></expr>;<pos:position pos:line="954" pos:column="81"/></return></block></then></if>
          }<pos:position pos:line="955" pos:column="12"/></block></for>
        <comment type="block" pos:line="956" pos:column="9">/* Control never gets here */</comment>
        }<pos:position pos:line="957" pos:column="10"/></block></then>
      <else pos:line="958" pos:column="7">else
        <block pos:line="959" pos:column="9">{
        <decl_stmt><decl><type><specifier pos:line="960" pos:column="9">const<pos:position pos:line="960" pos:column="14"/></specifier> <name pos:line="960" pos:column="15">uschar<pos:position pos:line="960" pos:column="21"/></name> <modifier pos:line="960" pos:column="22">*<pos:position pos:line="960" pos:column="23"/></modifier></type><name pos:line="960" pos:column="23">pp<pos:position pos:line="960" pos:column="25"/></name> <init pos:line="960" pos:column="26">= <expr><name pos:line="960" pos:column="28">eptr<pos:position pos:line="960" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="960" pos:column="33"/></decl_stmt>
        <for pos:line="961" pos:column="9">for <control pos:line="961" pos:column="13">(<init><expr><name pos:line="961" pos:column="14">i<pos:position pos:line="961" pos:column="15"/></name> <operator pos:line="961" pos:column="16">=<pos:position pos:line="961" pos:column="17"/></operator> <name pos:line="961" pos:column="18">min<pos:position pos:line="961" pos:column="21"/></name></expr>;<pos:position pos:line="961" pos:column="22"/></init> <condition><expr><name pos:line="961" pos:column="23">i<pos:position pos:line="961" pos:column="24"/></name> <operator pos:line="961" pos:column="25">&lt;<pos:position pos:line="961" pos:column="29"/></operator> <name pos:line="961" pos:column="27">max<pos:position pos:line="961" pos:column="30"/></name></expr>;<pos:position pos:line="961" pos:column="31"/></condition> <incr><expr><name pos:line="961" pos:column="32">i<pos:position pos:line="961" pos:column="33"/></name><operator pos:line="961" pos:column="33">++<pos:position pos:line="961" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="961" pos:column="36"/></control>
          <block pos:line="962" pos:column="11">{
          <if pos:line="963" pos:column="11">if <condition pos:line="963" pos:column="14">(<expr><name pos:line="963" pos:column="15">eptr<pos:position pos:line="963" pos:column="19"/></name> <operator pos:line="963" pos:column="20">&gt;=<pos:position pos:line="963" pos:column="25"/></operator> <name><name pos:line="963" pos:column="23">md<pos:position pos:line="963" pos:column="25"/></name><operator pos:line="963" pos:column="25">-&gt;<pos:position pos:line="963" pos:column="30"/></operator><name pos:line="963" pos:column="27">end_subject<pos:position pos:line="963" pos:column="38"/></name></name> <operator pos:line="963" pos:column="39">||<pos:position pos:line="963" pos:column="41"/></operator> <name pos:line="963" pos:column="42">c<pos:position pos:line="963" pos:column="43"/></name> <operator pos:line="963" pos:column="44">!=<pos:position pos:line="963" pos:column="46"/></operator> <operator pos:line="963" pos:column="47">*<pos:position pos:line="963" pos:column="48"/></operator><name pos:line="963" pos:column="48">eptr<pos:position pos:line="963" pos:column="52"/></name></expr>)<pos:position pos:line="963" pos:column="53"/></condition><then pos:line="963" pos:column="53"> <block type="pseudo"><break pos:line="963" pos:column="54">break;<pos:position pos:line="963" pos:column="60"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="964" pos:column="11">eptr<pos:position pos:line="964" pos:column="15"/></name><operator pos:line="964" pos:column="15">++<pos:position pos:line="964" pos:column="17"/></operator></expr>;<pos:position pos:line="964" pos:column="18"/></expr_stmt>
          }<pos:position pos:line="965" pos:column="12"/></block></for>
        <while pos:line="966" pos:column="9">while <condition pos:line="966" pos:column="15">(<expr><name pos:line="966" pos:column="16">eptr<pos:position pos:line="966" pos:column="20"/></name> <operator pos:line="966" pos:column="21">&gt;=<pos:position pos:line="966" pos:column="26"/></operator> <name pos:line="966" pos:column="24">pp<pos:position pos:line="966" pos:column="26"/></name></expr>)<pos:position pos:line="966" pos:column="27"/></condition>
         <block type="pseudo"><if pos:line="967" pos:column="10">if <condition pos:line="967" pos:column="13">(<expr><call><name pos:line="967" pos:column="14">match<pos:position pos:line="967" pos:column="19"/></name><argument_list pos:line="967" pos:column="19">(<argument><expr><name pos:line="967" pos:column="20">eptr<pos:position pos:line="967" pos:column="24"/></name><operator pos:line="967" pos:column="24">--<pos:position pos:line="967" pos:column="26"/></operator></expr></argument>, <argument><expr><name pos:line="967" pos:column="28">ecode<pos:position pos:line="967" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="967" pos:column="35">offset_top<pos:position pos:line="967" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="967" pos:column="47">md<pos:position pos:line="967" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="967" pos:column="51">ims<pos:position pos:line="967" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="967" pos:column="56">eptrb<pos:position pos:line="967" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="967" pos:column="63">0<pos:position pos:line="967" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="967" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="967" pos:column="66"/></condition><then pos:line="967" pos:column="66">
           <block type="pseudo"><return pos:line="968" pos:column="12">return <expr><name pos:line="968" pos:column="19">TRUE<pos:position pos:line="968" pos:column="23"/></name></expr>;<pos:position pos:line="968" pos:column="24"/></return></block></then></if></block></while>
        <return pos:line="969" pos:column="9">return <expr><name pos:line="969" pos:column="16">FALSE<pos:position pos:line="969" pos:column="21"/></name></expr>;<pos:position pos:line="969" pos:column="22"/></return>
        }<pos:position pos:line="970" pos:column="10"/></block></else></if>
      }<pos:position pos:line="971" pos:column="8"/></block></else></if>
    <comment type="block" pos:line="972" pos:column="5">/* Control never gets here */</comment>

    <comment type="block" pos:line="974" pos:column="5">/* Match a negated single character */</comment>

    <case pos:line="976" pos:column="5">case <expr><name pos:line="976" pos:column="10">OP_NOT<pos:position pos:line="976" pos:column="16"/></name></expr>:<pos:position pos:line="976" pos:column="17"/></case>
    <if pos:line="977" pos:column="5">if <condition pos:line="977" pos:column="8">(<expr><name pos:line="977" pos:column="9">eptr<pos:position pos:line="977" pos:column="13"/></name> <operator pos:line="977" pos:column="14">&gt;=<pos:position pos:line="977" pos:column="19"/></operator> <name><name pos:line="977" pos:column="17">md<pos:position pos:line="977" pos:column="19"/></name><operator pos:line="977" pos:column="19">-&gt;<pos:position pos:line="977" pos:column="24"/></operator><name pos:line="977" pos:column="21">end_subject<pos:position pos:line="977" pos:column="32"/></name></name></expr>)<pos:position pos:line="977" pos:column="33"/></condition><then pos:line="977" pos:column="33"> <block type="pseudo"><return pos:line="977" pos:column="34">return <expr><name pos:line="977" pos:column="41">FALSE<pos:position pos:line="977" pos:column="46"/></name></expr>;<pos:position pos:line="977" pos:column="47"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="978" pos:column="5">ecode<pos:position pos:line="978" pos:column="10"/></name><operator pos:line="978" pos:column="10">++<pos:position pos:line="978" pos:column="12"/></operator></expr>;<pos:position pos:line="978" pos:column="13"/></expr_stmt>
    <if pos:line="979" pos:column="5">if <condition pos:line="979" pos:column="8">(<expr><operator pos:line="979" pos:column="9">(<pos:position pos:line="979" pos:column="10"/></operator><name pos:line="979" pos:column="10">ims<pos:position pos:line="979" pos:column="13"/></name> <operator pos:line="979" pos:column="14">&amp;<pos:position pos:line="979" pos:column="19"/></operator> <name pos:line="979" pos:column="16">PCRE_CASELESS<pos:position pos:line="979" pos:column="29"/></name><operator pos:line="979" pos:column="29">)<pos:position pos:line="979" pos:column="30"/></operator> <operator pos:line="979" pos:column="31">!=<pos:position pos:line="979" pos:column="33"/></operator> <literal type="number" pos:line="979" pos:column="34">0<pos:position pos:line="979" pos:column="35"/></literal></expr>)<pos:position pos:line="979" pos:column="36"/></condition><then pos:line="979" pos:column="36">
      <block pos:line="980" pos:column="7">{
      <if pos:line="981" pos:column="7">if <condition pos:line="981" pos:column="10">(<expr><name><name pos:line="981" pos:column="11">md<pos:position pos:line="981" pos:column="13"/></name><operator pos:line="981" pos:column="13">-&gt;<pos:position pos:line="981" pos:column="18"/></operator><name pos:line="981" pos:column="15">lcc<pos:position pos:line="981" pos:column="18"/></name><index pos:line="981" pos:column="18">[<expr><operator pos:line="981" pos:column="19">*<pos:position pos:line="981" pos:column="20"/></operator><name pos:line="981" pos:column="20">ecode<pos:position pos:line="981" pos:column="25"/></name><operator pos:line="981" pos:column="25">++<pos:position pos:line="981" pos:column="27"/></operator></expr>]<pos:position pos:line="981" pos:column="28"/></index></name> <operator pos:line="981" pos:column="29">==<pos:position pos:line="981" pos:column="31"/></operator> <name><name pos:line="981" pos:column="32">md<pos:position pos:line="981" pos:column="34"/></name><operator pos:line="981" pos:column="34">-&gt;<pos:position pos:line="981" pos:column="39"/></operator><name pos:line="981" pos:column="36">lcc<pos:position pos:line="981" pos:column="39"/></name><index pos:line="981" pos:column="39">[<expr><operator pos:line="981" pos:column="40">*<pos:position pos:line="981" pos:column="41"/></operator><name pos:line="981" pos:column="41">eptr<pos:position pos:line="981" pos:column="45"/></name><operator pos:line="981" pos:column="45">++<pos:position pos:line="981" pos:column="47"/></operator></expr>]<pos:position pos:line="981" pos:column="48"/></index></name></expr>)<pos:position pos:line="981" pos:column="49"/></condition><then pos:line="981" pos:column="49"> <block type="pseudo"><return pos:line="981" pos:column="50">return <expr><name pos:line="981" pos:column="57">FALSE<pos:position pos:line="981" pos:column="62"/></name></expr>;<pos:position pos:line="981" pos:column="63"/></return></block></then></if>
      }<pos:position pos:line="982" pos:column="8"/></block></then>
    <else pos:line="983" pos:column="5">else
      <block pos:line="984" pos:column="7">{
      <if pos:line="985" pos:column="7">if <condition pos:line="985" pos:column="10">(<expr><operator pos:line="985" pos:column="11">*<pos:position pos:line="985" pos:column="12"/></operator><name pos:line="985" pos:column="12">ecode<pos:position pos:line="985" pos:column="17"/></name><operator pos:line="985" pos:column="17">++<pos:position pos:line="985" pos:column="19"/></operator> <operator pos:line="985" pos:column="20">==<pos:position pos:line="985" pos:column="22"/></operator> <operator pos:line="985" pos:column="23">*<pos:position pos:line="985" pos:column="24"/></operator><name pos:line="985" pos:column="24">eptr<pos:position pos:line="985" pos:column="28"/></name><operator pos:line="985" pos:column="28">++<pos:position pos:line="985" pos:column="30"/></operator></expr>)<pos:position pos:line="985" pos:column="31"/></condition><then pos:line="985" pos:column="31"> <block type="pseudo"><return pos:line="985" pos:column="32">return <expr><name pos:line="985" pos:column="39">FALSE<pos:position pos:line="985" pos:column="44"/></name></expr>;<pos:position pos:line="985" pos:column="45"/></return></block></then></if>
      }<pos:position pos:line="986" pos:column="8"/></block></else></if>
    <break pos:line="987" pos:column="5">break;<pos:position pos:line="987" pos:column="11"/></break>

    <comment type="block" pos:line="989" pos:column="5">/* Match a negated single character repeatedly. This is almost a repeat of
    the code for a repeated single character, but I haven't found a nice way of
    commoning these up that doesn't require a test of the positive/negative
    option for each character match. Maybe that wouldn't add very much to the
    time taken, but character matching *is* what this is all about... */</comment>

    <case pos:line="995" pos:column="5">case <expr><name pos:line="995" pos:column="10">OP_NOTEXACT<pos:position pos:line="995" pos:column="21"/></name></expr>:<pos:position pos:line="995" pos:column="22"/></case>
    <expr_stmt><expr><name pos:line="996" pos:column="5">min<pos:position pos:line="996" pos:column="8"/></name> <operator pos:line="996" pos:column="9">=<pos:position pos:line="996" pos:column="10"/></operator> <name pos:line="996" pos:column="11">max<pos:position pos:line="996" pos:column="14"/></name> <operator pos:line="996" pos:column="15">=<pos:position pos:line="996" pos:column="16"/></operator> <operator pos:line="996" pos:column="17">(<pos:position pos:line="996" pos:column="18"/></operator><name><name pos:line="996" pos:column="18">ecode<pos:position pos:line="996" pos:column="23"/></name><index pos:line="996" pos:column="23">[<expr><literal type="number" pos:line="996" pos:column="24">1<pos:position pos:line="996" pos:column="25"/></literal></expr>]<pos:position pos:line="996" pos:column="26"/></index></name> <operator pos:line="996" pos:column="27">&lt;&lt;<pos:position pos:line="996" pos:column="35"/></operator> <literal type="number" pos:line="996" pos:column="30">8<pos:position pos:line="996" pos:column="31"/></literal><operator pos:line="996" pos:column="31">)<pos:position pos:line="996" pos:column="32"/></operator> <operator pos:line="996" pos:column="33">+<pos:position pos:line="996" pos:column="34"/></operator> <name><name pos:line="996" pos:column="35">ecode<pos:position pos:line="996" pos:column="40"/></name><index pos:line="996" pos:column="40">[<expr><literal type="number" pos:line="996" pos:column="41">2<pos:position pos:line="996" pos:column="42"/></literal></expr>]<pos:position pos:line="996" pos:column="43"/></index></name></expr>;<pos:position pos:line="996" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="997" pos:column="5">ecode<pos:position pos:line="997" pos:column="10"/></name> <operator pos:line="997" pos:column="11">+=<pos:position pos:line="997" pos:column="13"/></operator> <literal type="number" pos:line="997" pos:column="14">3<pos:position pos:line="997" pos:column="15"/></literal></expr>;<pos:position pos:line="997" pos:column="16"/></expr_stmt>
    <goto pos:line="998" pos:column="5">goto <name pos:line="998" pos:column="10">REPEATNOTCHAR<pos:position pos:line="998" pos:column="23"/></name>;<pos:position pos:line="998" pos:column="24"/></goto>

    <case pos:line="1000" pos:column="5">case <expr><name pos:line="1000" pos:column="10">OP_NOTUPTO<pos:position pos:line="1000" pos:column="20"/></name></expr>:<pos:position pos:line="1000" pos:column="21"/></case>
    <case pos:line="1001" pos:column="5">case <expr><name pos:line="1001" pos:column="10">OP_NOTMINUPTO<pos:position pos:line="1001" pos:column="23"/></name></expr>:<pos:position pos:line="1001" pos:column="24"/></case>
    <expr_stmt><expr><name pos:line="1002" pos:column="5">min<pos:position pos:line="1002" pos:column="8"/></name> <operator pos:line="1002" pos:column="9">=<pos:position pos:line="1002" pos:column="10"/></operator> <literal type="number" pos:line="1002" pos:column="11">0<pos:position pos:line="1002" pos:column="12"/></literal></expr>;<pos:position pos:line="1002" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1003" pos:column="5">max<pos:position pos:line="1003" pos:column="8"/></name> <operator pos:line="1003" pos:column="9">=<pos:position pos:line="1003" pos:column="10"/></operator> <operator pos:line="1003" pos:column="11">(<pos:position pos:line="1003" pos:column="12"/></operator><name><name pos:line="1003" pos:column="12">ecode<pos:position pos:line="1003" pos:column="17"/></name><index pos:line="1003" pos:column="17">[<expr><literal type="number" pos:line="1003" pos:column="18">1<pos:position pos:line="1003" pos:column="19"/></literal></expr>]<pos:position pos:line="1003" pos:column="20"/></index></name> <operator pos:line="1003" pos:column="21">&lt;&lt;<pos:position pos:line="1003" pos:column="29"/></operator> <literal type="number" pos:line="1003" pos:column="24">8<pos:position pos:line="1003" pos:column="25"/></literal><operator pos:line="1003" pos:column="25">)<pos:position pos:line="1003" pos:column="26"/></operator> <operator pos:line="1003" pos:column="27">+<pos:position pos:line="1003" pos:column="28"/></operator> <name><name pos:line="1003" pos:column="29">ecode<pos:position pos:line="1003" pos:column="34"/></name><index pos:line="1003" pos:column="34">[<expr><literal type="number" pos:line="1003" pos:column="35">2<pos:position pos:line="1003" pos:column="36"/></literal></expr>]<pos:position pos:line="1003" pos:column="37"/></index></name></expr>;<pos:position pos:line="1003" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1004" pos:column="5">minimize<pos:position pos:line="1004" pos:column="13"/></name> <operator pos:line="1004" pos:column="14">=<pos:position pos:line="1004" pos:column="15"/></operator> <operator pos:line="1004" pos:column="16">*<pos:position pos:line="1004" pos:column="17"/></operator><name pos:line="1004" pos:column="17">ecode<pos:position pos:line="1004" pos:column="22"/></name> <operator pos:line="1004" pos:column="23">==<pos:position pos:line="1004" pos:column="25"/></operator> <name pos:line="1004" pos:column="26">OP_NOTMINUPTO<pos:position pos:line="1004" pos:column="39"/></name></expr>;<pos:position pos:line="1004" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1005" pos:column="5">ecode<pos:position pos:line="1005" pos:column="10"/></name> <operator pos:line="1005" pos:column="11">+=<pos:position pos:line="1005" pos:column="13"/></operator> <literal type="number" pos:line="1005" pos:column="14">3<pos:position pos:line="1005" pos:column="15"/></literal></expr>;<pos:position pos:line="1005" pos:column="16"/></expr_stmt>
    <goto pos:line="1006" pos:column="5">goto <name pos:line="1006" pos:column="10">REPEATNOTCHAR<pos:position pos:line="1006" pos:column="23"/></name>;<pos:position pos:line="1006" pos:column="24"/></goto>

    <case pos:line="1008" pos:column="5">case <expr><name pos:line="1008" pos:column="10">OP_NOTSTAR<pos:position pos:line="1008" pos:column="20"/></name></expr>:<pos:position pos:line="1008" pos:column="21"/></case>
    <case pos:line="1009" pos:column="5">case <expr><name pos:line="1009" pos:column="10">OP_NOTMINSTAR<pos:position pos:line="1009" pos:column="23"/></name></expr>:<pos:position pos:line="1009" pos:column="24"/></case>
    <case pos:line="1010" pos:column="5">case <expr><name pos:line="1010" pos:column="10">OP_NOTPLUS<pos:position pos:line="1010" pos:column="20"/></name></expr>:<pos:position pos:line="1010" pos:column="21"/></case>
    <case pos:line="1011" pos:column="5">case <expr><name pos:line="1011" pos:column="10">OP_NOTMINPLUS<pos:position pos:line="1011" pos:column="23"/></name></expr>:<pos:position pos:line="1011" pos:column="24"/></case>
    <case pos:line="1012" pos:column="5">case <expr><name pos:line="1012" pos:column="10">OP_NOTQUERY<pos:position pos:line="1012" pos:column="21"/></name></expr>:<pos:position pos:line="1012" pos:column="22"/></case>
    <case pos:line="1013" pos:column="5">case <expr><name pos:line="1013" pos:column="10">OP_NOTMINQUERY<pos:position pos:line="1013" pos:column="24"/></name></expr>:<pos:position pos:line="1013" pos:column="25"/></case>
    <expr_stmt><expr><name pos:line="1014" pos:column="5">c<pos:position pos:line="1014" pos:column="6"/></name> <operator pos:line="1014" pos:column="7">=<pos:position pos:line="1014" pos:column="8"/></operator> <operator pos:line="1014" pos:column="9">*<pos:position pos:line="1014" pos:column="10"/></operator><name pos:line="1014" pos:column="10">ecode<pos:position pos:line="1014" pos:column="15"/></name><operator pos:line="1014" pos:column="15">++<pos:position pos:line="1014" pos:column="17"/></operator> <operator pos:line="1014" pos:column="18">-<pos:position pos:line="1014" pos:column="19"/></operator> <name pos:line="1014" pos:column="20">OP_NOTSTAR<pos:position pos:line="1014" pos:column="30"/></name></expr>;<pos:position pos:line="1014" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1015" pos:column="5">minimize<pos:position pos:line="1015" pos:column="13"/></name> <operator pos:line="1015" pos:column="14">=<pos:position pos:line="1015" pos:column="15"/></operator> <operator pos:line="1015" pos:column="16">(<pos:position pos:line="1015" pos:column="17"/></operator><name pos:line="1015" pos:column="17">c<pos:position pos:line="1015" pos:column="18"/></name> <operator pos:line="1015" pos:column="19">&amp;<pos:position pos:line="1015" pos:column="24"/></operator> <literal type="number" pos:line="1015" pos:column="21">1<pos:position pos:line="1015" pos:column="22"/></literal><operator pos:line="1015" pos:column="22">)<pos:position pos:line="1015" pos:column="23"/></operator> <operator pos:line="1015" pos:column="24">!=<pos:position pos:line="1015" pos:column="26"/></operator> <literal type="number" pos:line="1015" pos:column="27">0<pos:position pos:line="1015" pos:column="28"/></literal></expr>;<pos:position pos:line="1015" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1016" pos:column="5">min<pos:position pos:line="1016" pos:column="8"/></name> <operator pos:line="1016" pos:column="9">=<pos:position pos:line="1016" pos:column="10"/></operator> <name><name pos:line="1016" pos:column="11">rep_min<pos:position pos:line="1016" pos:column="18"/></name><index pos:line="1016" pos:column="18">[<expr><name pos:line="1016" pos:column="19">c<pos:position pos:line="1016" pos:column="20"/></name></expr>]<pos:position pos:line="1016" pos:column="21"/></index></name></expr>;<pos:position pos:line="1016" pos:column="22"/></expr_stmt>                 <comment type="block" pos:line="1016" pos:column="39">/* Pick up values from tables; */</comment>
    <expr_stmt><expr><name pos:line="1017" pos:column="5">max<pos:position pos:line="1017" pos:column="8"/></name> <operator pos:line="1017" pos:column="9">=<pos:position pos:line="1017" pos:column="10"/></operator> <name><name pos:line="1017" pos:column="11">rep_max<pos:position pos:line="1017" pos:column="18"/></name><index pos:line="1017" pos:column="18">[<expr><name pos:line="1017" pos:column="19">c<pos:position pos:line="1017" pos:column="20"/></name></expr>]<pos:position pos:line="1017" pos:column="21"/></index></name></expr>;<pos:position pos:line="1017" pos:column="22"/></expr_stmt>                 <comment type="block" pos:line="1017" pos:column="39">/* zero for max =&gt; infinity */</comment>
    <if pos:line="1018" pos:column="5">if <condition pos:line="1018" pos:column="8">(<expr><name pos:line="1018" pos:column="9">max<pos:position pos:line="1018" pos:column="12"/></name> <operator pos:line="1018" pos:column="13">==<pos:position pos:line="1018" pos:column="15"/></operator> <literal type="number" pos:line="1018" pos:column="16">0<pos:position pos:line="1018" pos:column="17"/></literal></expr>)<pos:position pos:line="1018" pos:column="18"/></condition><then pos:line="1018" pos:column="18"> <block type="pseudo"><expr_stmt><expr><name pos:line="1018" pos:column="19">max<pos:position pos:line="1018" pos:column="22"/></name> <operator pos:line="1018" pos:column="23">=<pos:position pos:line="1018" pos:column="24"/></operator> <name pos:line="1018" pos:column="25">INT_MAX<pos:position pos:line="1018" pos:column="32"/></name></expr>;<pos:position pos:line="1018" pos:column="33"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="1020" pos:column="5">/* Common code for all repeated single-character matches. We can give
    up quickly if there are fewer than the minimum number of characters left in
    the subject. */</comment>

    <label><name pos:line="1024" pos:column="5">REPEATNOTCHAR<pos:position pos:line="1024" pos:column="18"/></name>:<pos:position pos:line="1024" pos:column="19"/></label>
    <if pos:line="1025" pos:column="5">if <condition pos:line="1025" pos:column="8">(<expr><name pos:line="1025" pos:column="9">min<pos:position pos:line="1025" pos:column="12"/></name> <operator pos:line="1025" pos:column="13">&gt;<pos:position pos:line="1025" pos:column="17"/></operator> <name><name pos:line="1025" pos:column="15">md<pos:position pos:line="1025" pos:column="17"/></name><operator pos:line="1025" pos:column="17">-&gt;<pos:position pos:line="1025" pos:column="22"/></operator><name pos:line="1025" pos:column="19">end_subject<pos:position pos:line="1025" pos:column="30"/></name></name> <operator pos:line="1025" pos:column="31">-<pos:position pos:line="1025" pos:column="32"/></operator> <name pos:line="1025" pos:column="33">eptr<pos:position pos:line="1025" pos:column="37"/></name></expr>)<pos:position pos:line="1025" pos:column="38"/></condition><then pos:line="1025" pos:column="38"> <block type="pseudo"><return pos:line="1025" pos:column="39">return <expr><name pos:line="1025" pos:column="46">FALSE<pos:position pos:line="1025" pos:column="51"/></name></expr>;<pos:position pos:line="1025" pos:column="52"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="1026" pos:column="5">c<pos:position pos:line="1026" pos:column="6"/></name> <operator pos:line="1026" pos:column="7">=<pos:position pos:line="1026" pos:column="8"/></operator> <operator pos:line="1026" pos:column="9">*<pos:position pos:line="1026" pos:column="10"/></operator><name pos:line="1026" pos:column="10">ecode<pos:position pos:line="1026" pos:column="15"/></name><operator pos:line="1026" pos:column="15">++<pos:position pos:line="1026" pos:column="17"/></operator></expr>;<pos:position pos:line="1026" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="1028" pos:column="5">/* The code is duplicated for the caseless and caseful cases, for speed,
    since matching characters is likely to be quite common. First, ensure the
    minimum number of matches are present. If min = max, continue at the same
    level without recursing. Otherwise, if minimizing, keep trying the rest of
    the expression and advancing one matching character if failing, up to the
    maximum. Alternatively, if maximizing, find the maximum number of
    characters and work backwards. */</comment>

    <expr_stmt><expr><call><name pos:line="1036" pos:column="5">DPRINTF<pos:position pos:line="1036" pos:column="12"/></name><argument_list pos:line="1036" pos:column="12">(<argument><expr><operator pos:line="1036" pos:column="13">(<pos:position pos:line="1036" pos:column="14"/></operator><literal type="string" pos:line="1036" pos:column="14">"negative matching %c{%d,%d} against subject %.*s\n"<pos:position pos:line="1036" pos:column="66"/></literal><operator pos:line="1036" pos:column="66">,<pos:position pos:line="1036" pos:column="67"/></operator> <name pos:line="1036" pos:column="68">c<pos:position pos:line="1036" pos:column="69"/></name><operator pos:line="1036" pos:column="69">,<pos:position pos:line="1036" pos:column="70"/></operator> <name pos:line="1036" pos:column="71">min<pos:position pos:line="1036" pos:column="74"/></name><operator pos:line="1036" pos:column="74">,<pos:position pos:line="1036" pos:column="75"/></operator> <name pos:line="1036" pos:column="76">max<pos:position pos:line="1036" pos:column="79"/></name><operator pos:line="1036" pos:column="79">,<pos:position pos:line="1036" pos:column="80"/></operator>
      <name pos:line="1037" pos:column="7">max<pos:position pos:line="1037" pos:column="10"/></name><operator pos:line="1037" pos:column="10">,<pos:position pos:line="1037" pos:column="11"/></operator> <name pos:line="1037" pos:column="12">eptr<pos:position pos:line="1037" pos:column="16"/></name><operator pos:line="1037" pos:column="16">)<pos:position pos:line="1037" pos:column="17"/></operator></expr></argument>)<pos:position pos:line="1037" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="1037" pos:column="19"/></expr_stmt>

    <if pos:line="1039" pos:column="5">if <condition pos:line="1039" pos:column="8">(<expr><operator pos:line="1039" pos:column="9">(<pos:position pos:line="1039" pos:column="10"/></operator><name pos:line="1039" pos:column="10">ims<pos:position pos:line="1039" pos:column="13"/></name> <operator pos:line="1039" pos:column="14">&amp;<pos:position pos:line="1039" pos:column="19"/></operator> <name pos:line="1039" pos:column="16">PCRE_CASELESS<pos:position pos:line="1039" pos:column="29"/></name><operator pos:line="1039" pos:column="29">)<pos:position pos:line="1039" pos:column="30"/></operator> <operator pos:line="1039" pos:column="31">!=<pos:position pos:line="1039" pos:column="33"/></operator> <literal type="number" pos:line="1039" pos:column="34">0<pos:position pos:line="1039" pos:column="35"/></literal></expr>)<pos:position pos:line="1039" pos:column="36"/></condition><then pos:line="1039" pos:column="36">
      <block pos:line="1040" pos:column="7">{
      <expr_stmt><expr><name pos:line="1041" pos:column="7">c<pos:position pos:line="1041" pos:column="8"/></name> <operator pos:line="1041" pos:column="9">=<pos:position pos:line="1041" pos:column="10"/></operator> <name><name pos:line="1041" pos:column="11">md<pos:position pos:line="1041" pos:column="13"/></name><operator pos:line="1041" pos:column="13">-&gt;<pos:position pos:line="1041" pos:column="18"/></operator><name pos:line="1041" pos:column="15">lcc<pos:position pos:line="1041" pos:column="18"/></name><index pos:line="1041" pos:column="18">[<expr><name pos:line="1041" pos:column="19">c<pos:position pos:line="1041" pos:column="20"/></name></expr>]<pos:position pos:line="1041" pos:column="21"/></index></name></expr>;<pos:position pos:line="1041" pos:column="22"/></expr_stmt>
      <for pos:line="1042" pos:column="7">for <control pos:line="1042" pos:column="11">(<init><expr><name pos:line="1042" pos:column="12">i<pos:position pos:line="1042" pos:column="13"/></name> <operator pos:line="1042" pos:column="14">=<pos:position pos:line="1042" pos:column="15"/></operator> <literal type="number" pos:line="1042" pos:column="16">1<pos:position pos:line="1042" pos:column="17"/></literal></expr>;<pos:position pos:line="1042" pos:column="18"/></init> <condition><expr><name pos:line="1042" pos:column="19">i<pos:position pos:line="1042" pos:column="20"/></name> <operator pos:line="1042" pos:column="21">&lt;=<pos:position pos:line="1042" pos:column="26"/></operator> <name pos:line="1042" pos:column="24">min<pos:position pos:line="1042" pos:column="27"/></name></expr>;<pos:position pos:line="1042" pos:column="28"/></condition> <incr><expr><name pos:line="1042" pos:column="29">i<pos:position pos:line="1042" pos:column="30"/></name><operator pos:line="1042" pos:column="30">++<pos:position pos:line="1042" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="1042" pos:column="33"/></control>
        <block type="pseudo"><if pos:line="1043" pos:column="9">if <condition pos:line="1043" pos:column="12">(<expr><name pos:line="1043" pos:column="13">c<pos:position pos:line="1043" pos:column="14"/></name> <operator pos:line="1043" pos:column="15">==<pos:position pos:line="1043" pos:column="17"/></operator> <name><name pos:line="1043" pos:column="18">md<pos:position pos:line="1043" pos:column="20"/></name><operator pos:line="1043" pos:column="20">-&gt;<pos:position pos:line="1043" pos:column="25"/></operator><name pos:line="1043" pos:column="22">lcc<pos:position pos:line="1043" pos:column="25"/></name><index pos:line="1043" pos:column="25">[<expr><operator pos:line="1043" pos:column="26">*<pos:position pos:line="1043" pos:column="27"/></operator><name pos:line="1043" pos:column="27">eptr<pos:position pos:line="1043" pos:column="31"/></name><operator pos:line="1043" pos:column="31">++<pos:position pos:line="1043" pos:column="33"/></operator></expr>]<pos:position pos:line="1043" pos:column="34"/></index></name></expr>)<pos:position pos:line="1043" pos:column="35"/></condition><then pos:line="1043" pos:column="35"> <block type="pseudo"><return pos:line="1043" pos:column="36">return <expr><name pos:line="1043" pos:column="43">FALSE<pos:position pos:line="1043" pos:column="48"/></name></expr>;<pos:position pos:line="1043" pos:column="49"/></return></block></then></if></block></for>
      <if pos:line="1044" pos:column="7">if <condition pos:line="1044" pos:column="10">(<expr><name pos:line="1044" pos:column="11">min<pos:position pos:line="1044" pos:column="14"/></name> <operator pos:line="1044" pos:column="15">==<pos:position pos:line="1044" pos:column="17"/></operator> <name pos:line="1044" pos:column="18">max<pos:position pos:line="1044" pos:column="21"/></name></expr>)<pos:position pos:line="1044" pos:column="22"/></condition><then pos:line="1044" pos:column="22"> <block type="pseudo"><continue pos:line="1044" pos:column="23">continue;<pos:position pos:line="1044" pos:column="32"/></continue></block></then></if>
      <if pos:line="1045" pos:column="7">if <condition pos:line="1045" pos:column="10">(<expr><name pos:line="1045" pos:column="11">minimize<pos:position pos:line="1045" pos:column="19"/></name></expr>)<pos:position pos:line="1045" pos:column="20"/></condition><then pos:line="1045" pos:column="20">
        <block pos:line="1046" pos:column="9">{
        <for pos:line="1047" pos:column="9">for <control pos:line="1047" pos:column="13">(<init><expr><name pos:line="1047" pos:column="14">i<pos:position pos:line="1047" pos:column="15"/></name> <operator pos:line="1047" pos:column="16">=<pos:position pos:line="1047" pos:column="17"/></operator> <name pos:line="1047" pos:column="18">min<pos:position pos:line="1047" pos:column="21"/></name></expr>;<pos:position pos:line="1047" pos:column="22"/></init><condition pos:line="1047" pos:column="22">;<pos:position pos:line="1047" pos:column="23"/></condition> <incr><expr><name pos:line="1047" pos:column="24">i<pos:position pos:line="1047" pos:column="25"/></name><operator pos:line="1047" pos:column="25">++<pos:position pos:line="1047" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="1047" pos:column="28"/></control>
          <block pos:line="1048" pos:column="11">{
          <if pos:line="1049" pos:column="11">if <condition pos:line="1049" pos:column="14">(<expr><call><name pos:line="1049" pos:column="15">match<pos:position pos:line="1049" pos:column="20"/></name><argument_list pos:line="1049" pos:column="20">(<argument><expr><name pos:line="1049" pos:column="21">eptr<pos:position pos:line="1049" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="1049" pos:column="27">ecode<pos:position pos:line="1049" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1049" pos:column="34">offset_top<pos:position pos:line="1049" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1049" pos:column="46">md<pos:position pos:line="1049" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1049" pos:column="50">ims<pos:position pos:line="1049" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="1049" pos:column="55">eptrb<pos:position pos:line="1049" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1049" pos:column="62">0<pos:position pos:line="1049" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="1049" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="1049" pos:column="65"/></condition><then pos:line="1049" pos:column="65">
            <block type="pseudo"><return pos:line="1050" pos:column="13">return <expr><name pos:line="1050" pos:column="20">TRUE<pos:position pos:line="1050" pos:column="24"/></name></expr>;<pos:position pos:line="1050" pos:column="25"/></return></block></then></if>
          <if pos:line="1051" pos:column="11">if <condition pos:line="1051" pos:column="14">(<expr><name pos:line="1051" pos:column="15">i<pos:position pos:line="1051" pos:column="16"/></name> <operator pos:line="1051" pos:column="17">&gt;=<pos:position pos:line="1051" pos:column="22"/></operator> <name pos:line="1051" pos:column="20">max<pos:position pos:line="1051" pos:column="23"/></name> <operator pos:line="1051" pos:column="24">||<pos:position pos:line="1051" pos:column="26"/></operator> <name pos:line="1051" pos:column="27">eptr<pos:position pos:line="1051" pos:column="31"/></name> <operator pos:line="1051" pos:column="32">&gt;=<pos:position pos:line="1051" pos:column="37"/></operator> <name><name pos:line="1051" pos:column="35">md<pos:position pos:line="1051" pos:column="37"/></name><operator pos:line="1051" pos:column="37">-&gt;<pos:position pos:line="1051" pos:column="42"/></operator><name pos:line="1051" pos:column="39">end_subject<pos:position pos:line="1051" pos:column="50"/></name></name> <operator pos:line="1051" pos:column="51">||<pos:position pos:line="1051" pos:column="53"/></operator>
              <name pos:line="1052" pos:column="15">c<pos:position pos:line="1052" pos:column="16"/></name> <operator pos:line="1052" pos:column="17">==<pos:position pos:line="1052" pos:column="19"/></operator> <name><name pos:line="1052" pos:column="20">md<pos:position pos:line="1052" pos:column="22"/></name><operator pos:line="1052" pos:column="22">-&gt;<pos:position pos:line="1052" pos:column="27"/></operator><name pos:line="1052" pos:column="24">lcc<pos:position pos:line="1052" pos:column="27"/></name><index pos:line="1052" pos:column="27">[<expr><operator pos:line="1052" pos:column="28">*<pos:position pos:line="1052" pos:column="29"/></operator><name pos:line="1052" pos:column="29">eptr<pos:position pos:line="1052" pos:column="33"/></name><operator pos:line="1052" pos:column="33">++<pos:position pos:line="1052" pos:column="35"/></operator></expr>]<pos:position pos:line="1052" pos:column="36"/></index></name></expr>)<pos:position pos:line="1052" pos:column="37"/></condition><then pos:line="1052" pos:column="37">
            <block type="pseudo"><return pos:line="1053" pos:column="13">return <expr><name pos:line="1053" pos:column="20">FALSE<pos:position pos:line="1053" pos:column="25"/></name></expr>;<pos:position pos:line="1053" pos:column="26"/></return></block></then></if>
          }<pos:position pos:line="1054" pos:column="12"/></block></for>
        <comment type="block" pos:line="1055" pos:column="9">/* Control never gets here */</comment>
        }<pos:position pos:line="1056" pos:column="10"/></block></then>
      <else pos:line="1057" pos:column="7">else
        <block pos:line="1058" pos:column="9">{
        <decl_stmt><decl><type><specifier pos:line="1059" pos:column="9">const<pos:position pos:line="1059" pos:column="14"/></specifier> <name pos:line="1059" pos:column="15">uschar<pos:position pos:line="1059" pos:column="21"/></name> <modifier pos:line="1059" pos:column="22">*<pos:position pos:line="1059" pos:column="23"/></modifier></type><name pos:line="1059" pos:column="23">pp<pos:position pos:line="1059" pos:column="25"/></name> <init pos:line="1059" pos:column="26">= <expr><name pos:line="1059" pos:column="28">eptr<pos:position pos:line="1059" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="1059" pos:column="33"/></decl_stmt>
        <for pos:line="1060" pos:column="9">for <control pos:line="1060" pos:column="13">(<init><expr><name pos:line="1060" pos:column="14">i<pos:position pos:line="1060" pos:column="15"/></name> <operator pos:line="1060" pos:column="16">=<pos:position pos:line="1060" pos:column="17"/></operator> <name pos:line="1060" pos:column="18">min<pos:position pos:line="1060" pos:column="21"/></name></expr>;<pos:position pos:line="1060" pos:column="22"/></init> <condition><expr><name pos:line="1060" pos:column="23">i<pos:position pos:line="1060" pos:column="24"/></name> <operator pos:line="1060" pos:column="25">&lt;<pos:position pos:line="1060" pos:column="29"/></operator> <name pos:line="1060" pos:column="27">max<pos:position pos:line="1060" pos:column="30"/></name></expr>;<pos:position pos:line="1060" pos:column="31"/></condition> <incr><expr><name pos:line="1060" pos:column="32">i<pos:position pos:line="1060" pos:column="33"/></name><operator pos:line="1060" pos:column="33">++<pos:position pos:line="1060" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="1060" pos:column="36"/></control>
          <block pos:line="1061" pos:column="11">{
          <if pos:line="1062" pos:column="11">if <condition pos:line="1062" pos:column="14">(<expr><name pos:line="1062" pos:column="15">eptr<pos:position pos:line="1062" pos:column="19"/></name> <operator pos:line="1062" pos:column="20">&gt;=<pos:position pos:line="1062" pos:column="25"/></operator> <name><name pos:line="1062" pos:column="23">md<pos:position pos:line="1062" pos:column="25"/></name><operator pos:line="1062" pos:column="25">-&gt;<pos:position pos:line="1062" pos:column="30"/></operator><name pos:line="1062" pos:column="27">end_subject<pos:position pos:line="1062" pos:column="38"/></name></name> <operator pos:line="1062" pos:column="39">||<pos:position pos:line="1062" pos:column="41"/></operator> <name pos:line="1062" pos:column="42">c<pos:position pos:line="1062" pos:column="43"/></name> <operator pos:line="1062" pos:column="44">==<pos:position pos:line="1062" pos:column="46"/></operator> <name><name pos:line="1062" pos:column="47">md<pos:position pos:line="1062" pos:column="49"/></name><operator pos:line="1062" pos:column="49">-&gt;<pos:position pos:line="1062" pos:column="54"/></operator><name pos:line="1062" pos:column="51">lcc<pos:position pos:line="1062" pos:column="54"/></name><index pos:line="1062" pos:column="54">[<expr><operator pos:line="1062" pos:column="55">*<pos:position pos:line="1062" pos:column="56"/></operator><name pos:line="1062" pos:column="56">eptr<pos:position pos:line="1062" pos:column="60"/></name></expr>]<pos:position pos:line="1062" pos:column="61"/></index></name></expr>)<pos:position pos:line="1062" pos:column="62"/></condition><then pos:line="1062" pos:column="62"> <block type="pseudo"><break pos:line="1062" pos:column="63">break;<pos:position pos:line="1062" pos:column="69"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="1063" pos:column="11">eptr<pos:position pos:line="1063" pos:column="15"/></name><operator pos:line="1063" pos:column="15">++<pos:position pos:line="1063" pos:column="17"/></operator></expr>;<pos:position pos:line="1063" pos:column="18"/></expr_stmt>
          }<pos:position pos:line="1064" pos:column="12"/></block></for>
        <while pos:line="1065" pos:column="9">while <condition pos:line="1065" pos:column="15">(<expr><name pos:line="1065" pos:column="16">eptr<pos:position pos:line="1065" pos:column="20"/></name> <operator pos:line="1065" pos:column="21">&gt;=<pos:position pos:line="1065" pos:column="26"/></operator> <name pos:line="1065" pos:column="24">pp<pos:position pos:line="1065" pos:column="26"/></name></expr>)<pos:position pos:line="1065" pos:column="27"/></condition>
          <block type="pseudo"><if pos:line="1066" pos:column="11">if <condition pos:line="1066" pos:column="14">(<expr><call><name pos:line="1066" pos:column="15">match<pos:position pos:line="1066" pos:column="20"/></name><argument_list pos:line="1066" pos:column="20">(<argument><expr><name pos:line="1066" pos:column="21">eptr<pos:position pos:line="1066" pos:column="25"/></name><operator pos:line="1066" pos:column="25">--<pos:position pos:line="1066" pos:column="27"/></operator></expr></argument>, <argument><expr><name pos:line="1066" pos:column="29">ecode<pos:position pos:line="1066" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1066" pos:column="36">offset_top<pos:position pos:line="1066" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1066" pos:column="48">md<pos:position pos:line="1066" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1066" pos:column="52">ims<pos:position pos:line="1066" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="1066" pos:column="57">eptrb<pos:position pos:line="1066" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1066" pos:column="64">0<pos:position pos:line="1066" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="1066" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="1066" pos:column="67"/></condition><then pos:line="1066" pos:column="67">
            <block type="pseudo"><return pos:line="1067" pos:column="13">return <expr><name pos:line="1067" pos:column="20">TRUE<pos:position pos:line="1067" pos:column="24"/></name></expr>;<pos:position pos:line="1067" pos:column="25"/></return></block></then></if></block></while>
        <return pos:line="1068" pos:column="9">return <expr><name pos:line="1068" pos:column="16">FALSE<pos:position pos:line="1068" pos:column="21"/></name></expr>;<pos:position pos:line="1068" pos:column="22"/></return>
        }<pos:position pos:line="1069" pos:column="10"/></block></else></if>
      <comment type="block" pos:line="1070" pos:column="7">/* Control never gets here */</comment>
      }<pos:position pos:line="1071" pos:column="8"/></block></then>

    <comment type="block" pos:line="1073" pos:column="5">/* Caseful comparisons */</comment>

    <else pos:line="1075" pos:column="5">else
      <block pos:line="1076" pos:column="7">{
      <for pos:line="1077" pos:column="7">for <control pos:line="1077" pos:column="11">(<init><expr><name pos:line="1077" pos:column="12">i<pos:position pos:line="1077" pos:column="13"/></name> <operator pos:line="1077" pos:column="14">=<pos:position pos:line="1077" pos:column="15"/></operator> <literal type="number" pos:line="1077" pos:column="16">1<pos:position pos:line="1077" pos:column="17"/></literal></expr>;<pos:position pos:line="1077" pos:column="18"/></init> <condition><expr><name pos:line="1077" pos:column="19">i<pos:position pos:line="1077" pos:column="20"/></name> <operator pos:line="1077" pos:column="21">&lt;=<pos:position pos:line="1077" pos:column="26"/></operator> <name pos:line="1077" pos:column="24">min<pos:position pos:line="1077" pos:column="27"/></name></expr>;<pos:position pos:line="1077" pos:column="28"/></condition> <incr><expr><name pos:line="1077" pos:column="29">i<pos:position pos:line="1077" pos:column="30"/></name><operator pos:line="1077" pos:column="30">++<pos:position pos:line="1077" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="1077" pos:column="33"/></control> <block type="pseudo"><if pos:line="1077" pos:column="34">if <condition pos:line="1077" pos:column="37">(<expr><name pos:line="1077" pos:column="38">c<pos:position pos:line="1077" pos:column="39"/></name> <operator pos:line="1077" pos:column="40">==<pos:position pos:line="1077" pos:column="42"/></operator> <operator pos:line="1077" pos:column="43">*<pos:position pos:line="1077" pos:column="44"/></operator><name pos:line="1077" pos:column="44">eptr<pos:position pos:line="1077" pos:column="48"/></name><operator pos:line="1077" pos:column="48">++<pos:position pos:line="1077" pos:column="50"/></operator></expr>)<pos:position pos:line="1077" pos:column="51"/></condition><then pos:line="1077" pos:column="51"> <block type="pseudo"><return pos:line="1077" pos:column="52">return <expr><name pos:line="1077" pos:column="59">FALSE<pos:position pos:line="1077" pos:column="64"/></name></expr>;<pos:position pos:line="1077" pos:column="65"/></return></block></then></if></block></for>
      <if pos:line="1078" pos:column="7">if <condition pos:line="1078" pos:column="10">(<expr><name pos:line="1078" pos:column="11">min<pos:position pos:line="1078" pos:column="14"/></name> <operator pos:line="1078" pos:column="15">==<pos:position pos:line="1078" pos:column="17"/></operator> <name pos:line="1078" pos:column="18">max<pos:position pos:line="1078" pos:column="21"/></name></expr>)<pos:position pos:line="1078" pos:column="22"/></condition><then pos:line="1078" pos:column="22"> <block type="pseudo"><continue pos:line="1078" pos:column="23">continue;<pos:position pos:line="1078" pos:column="32"/></continue></block></then></if>
      <if pos:line="1079" pos:column="7">if <condition pos:line="1079" pos:column="10">(<expr><name pos:line="1079" pos:column="11">minimize<pos:position pos:line="1079" pos:column="19"/></name></expr>)<pos:position pos:line="1079" pos:column="20"/></condition><then pos:line="1079" pos:column="20">
        <block pos:line="1080" pos:column="9">{
        <for pos:line="1081" pos:column="9">for <control pos:line="1081" pos:column="13">(<init><expr><name pos:line="1081" pos:column="14">i<pos:position pos:line="1081" pos:column="15"/></name> <operator pos:line="1081" pos:column="16">=<pos:position pos:line="1081" pos:column="17"/></operator> <name pos:line="1081" pos:column="18">min<pos:position pos:line="1081" pos:column="21"/></name></expr>;<pos:position pos:line="1081" pos:column="22"/></init><condition pos:line="1081" pos:column="22">;<pos:position pos:line="1081" pos:column="23"/></condition> <incr><expr><name pos:line="1081" pos:column="24">i<pos:position pos:line="1081" pos:column="25"/></name><operator pos:line="1081" pos:column="25">++<pos:position pos:line="1081" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="1081" pos:column="28"/></control>
          <block pos:line="1082" pos:column="11">{
          <if pos:line="1083" pos:column="11">if <condition pos:line="1083" pos:column="14">(<expr><call><name pos:line="1083" pos:column="15">match<pos:position pos:line="1083" pos:column="20"/></name><argument_list pos:line="1083" pos:column="20">(<argument><expr><name pos:line="1083" pos:column="21">eptr<pos:position pos:line="1083" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="1083" pos:column="27">ecode<pos:position pos:line="1083" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1083" pos:column="34">offset_top<pos:position pos:line="1083" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1083" pos:column="46">md<pos:position pos:line="1083" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1083" pos:column="50">ims<pos:position pos:line="1083" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="1083" pos:column="55">eptrb<pos:position pos:line="1083" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1083" pos:column="62">0<pos:position pos:line="1083" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="1083" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="1083" pos:column="65"/></condition><then pos:line="1083" pos:column="65">
            <block type="pseudo"><return pos:line="1084" pos:column="13">return <expr><name pos:line="1084" pos:column="20">TRUE<pos:position pos:line="1084" pos:column="24"/></name></expr>;<pos:position pos:line="1084" pos:column="25"/></return></block></then></if>
          <if pos:line="1085" pos:column="11">if <condition pos:line="1085" pos:column="14">(<expr><name pos:line="1085" pos:column="15">i<pos:position pos:line="1085" pos:column="16"/></name> <operator pos:line="1085" pos:column="17">&gt;=<pos:position pos:line="1085" pos:column="22"/></operator> <name pos:line="1085" pos:column="20">max<pos:position pos:line="1085" pos:column="23"/></name> <operator pos:line="1085" pos:column="24">||<pos:position pos:line="1085" pos:column="26"/></operator> <name pos:line="1085" pos:column="27">eptr<pos:position pos:line="1085" pos:column="31"/></name> <operator pos:line="1085" pos:column="32">&gt;=<pos:position pos:line="1085" pos:column="37"/></operator> <name><name pos:line="1085" pos:column="35">md<pos:position pos:line="1085" pos:column="37"/></name><operator pos:line="1085" pos:column="37">-&gt;<pos:position pos:line="1085" pos:column="42"/></operator><name pos:line="1085" pos:column="39">end_subject<pos:position pos:line="1085" pos:column="50"/></name></name> <operator pos:line="1085" pos:column="51">||<pos:position pos:line="1085" pos:column="53"/></operator> <name pos:line="1085" pos:column="54">c<pos:position pos:line="1085" pos:column="55"/></name> <operator pos:line="1085" pos:column="56">==<pos:position pos:line="1085" pos:column="58"/></operator> <operator pos:line="1085" pos:column="59">*<pos:position pos:line="1085" pos:column="60"/></operator><name pos:line="1085" pos:column="60">eptr<pos:position pos:line="1085" pos:column="64"/></name><operator pos:line="1085" pos:column="64">++<pos:position pos:line="1085" pos:column="66"/></operator></expr>)<pos:position pos:line="1085" pos:column="67"/></condition><then pos:line="1085" pos:column="67"> <block type="pseudo"><return pos:line="1085" pos:column="68">return <expr><name pos:line="1085" pos:column="75">FALSE<pos:position pos:line="1085" pos:column="80"/></name></expr>;<pos:position pos:line="1085" pos:column="81"/></return></block></then></if>
          }<pos:position pos:line="1086" pos:column="12"/></block></for>
        <comment type="block" pos:line="1087" pos:column="9">/* Control never gets here */</comment>
        }<pos:position pos:line="1088" pos:column="10"/></block></then>
      <else pos:line="1089" pos:column="7">else
        <block pos:line="1090" pos:column="9">{
        <decl_stmt><decl><type><specifier pos:line="1091" pos:column="9">const<pos:position pos:line="1091" pos:column="14"/></specifier> <name pos:line="1091" pos:column="15">uschar<pos:position pos:line="1091" pos:column="21"/></name> <modifier pos:line="1091" pos:column="22">*<pos:position pos:line="1091" pos:column="23"/></modifier></type><name pos:line="1091" pos:column="23">pp<pos:position pos:line="1091" pos:column="25"/></name> <init pos:line="1091" pos:column="26">= <expr><name pos:line="1091" pos:column="28">eptr<pos:position pos:line="1091" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="1091" pos:column="33"/></decl_stmt>
        <for pos:line="1092" pos:column="9">for <control pos:line="1092" pos:column="13">(<init><expr><name pos:line="1092" pos:column="14">i<pos:position pos:line="1092" pos:column="15"/></name> <operator pos:line="1092" pos:column="16">=<pos:position pos:line="1092" pos:column="17"/></operator> <name pos:line="1092" pos:column="18">min<pos:position pos:line="1092" pos:column="21"/></name></expr>;<pos:position pos:line="1092" pos:column="22"/></init> <condition><expr><name pos:line="1092" pos:column="23">i<pos:position pos:line="1092" pos:column="24"/></name> <operator pos:line="1092" pos:column="25">&lt;<pos:position pos:line="1092" pos:column="29"/></operator> <name pos:line="1092" pos:column="27">max<pos:position pos:line="1092" pos:column="30"/></name></expr>;<pos:position pos:line="1092" pos:column="31"/></condition> <incr><expr><name pos:line="1092" pos:column="32">i<pos:position pos:line="1092" pos:column="33"/></name><operator pos:line="1092" pos:column="33">++<pos:position pos:line="1092" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="1092" pos:column="36"/></control>
          <block pos:line="1093" pos:column="11">{
          <if pos:line="1094" pos:column="11">if <condition pos:line="1094" pos:column="14">(<expr><name pos:line="1094" pos:column="15">eptr<pos:position pos:line="1094" pos:column="19"/></name> <operator pos:line="1094" pos:column="20">&gt;=<pos:position pos:line="1094" pos:column="25"/></operator> <name><name pos:line="1094" pos:column="23">md<pos:position pos:line="1094" pos:column="25"/></name><operator pos:line="1094" pos:column="25">-&gt;<pos:position pos:line="1094" pos:column="30"/></operator><name pos:line="1094" pos:column="27">end_subject<pos:position pos:line="1094" pos:column="38"/></name></name> <operator pos:line="1094" pos:column="39">||<pos:position pos:line="1094" pos:column="41"/></operator> <name pos:line="1094" pos:column="42">c<pos:position pos:line="1094" pos:column="43"/></name> <operator pos:line="1094" pos:column="44">==<pos:position pos:line="1094" pos:column="46"/></operator> <operator pos:line="1094" pos:column="47">*<pos:position pos:line="1094" pos:column="48"/></operator><name pos:line="1094" pos:column="48">eptr<pos:position pos:line="1094" pos:column="52"/></name></expr>)<pos:position pos:line="1094" pos:column="53"/></condition><then pos:line="1094" pos:column="53"> <block type="pseudo"><break pos:line="1094" pos:column="54">break;<pos:position pos:line="1094" pos:column="60"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="1095" pos:column="11">eptr<pos:position pos:line="1095" pos:column="15"/></name><operator pos:line="1095" pos:column="15">++<pos:position pos:line="1095" pos:column="17"/></operator></expr>;<pos:position pos:line="1095" pos:column="18"/></expr_stmt>
          }<pos:position pos:line="1096" pos:column="12"/></block></for>
        <while pos:line="1097" pos:column="9">while <condition pos:line="1097" pos:column="15">(<expr><name pos:line="1097" pos:column="16">eptr<pos:position pos:line="1097" pos:column="20"/></name> <operator pos:line="1097" pos:column="21">&gt;=<pos:position pos:line="1097" pos:column="26"/></operator> <name pos:line="1097" pos:column="24">pp<pos:position pos:line="1097" pos:column="26"/></name></expr>)<pos:position pos:line="1097" pos:column="27"/></condition>
         <block type="pseudo"><if pos:line="1098" pos:column="10">if <condition pos:line="1098" pos:column="13">(<expr><call><name pos:line="1098" pos:column="14">match<pos:position pos:line="1098" pos:column="19"/></name><argument_list pos:line="1098" pos:column="19">(<argument><expr><name pos:line="1098" pos:column="20">eptr<pos:position pos:line="1098" pos:column="24"/></name><operator pos:line="1098" pos:column="24">--<pos:position pos:line="1098" pos:column="26"/></operator></expr></argument>, <argument><expr><name pos:line="1098" pos:column="28">ecode<pos:position pos:line="1098" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="1098" pos:column="35">offset_top<pos:position pos:line="1098" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="1098" pos:column="47">md<pos:position pos:line="1098" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="1098" pos:column="51">ims<pos:position pos:line="1098" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="1098" pos:column="56">eptrb<pos:position pos:line="1098" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1098" pos:column="63">0<pos:position pos:line="1098" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="1098" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="1098" pos:column="66"/></condition><then pos:line="1098" pos:column="66">
           <block type="pseudo"><return pos:line="1099" pos:column="12">return <expr><name pos:line="1099" pos:column="19">TRUE<pos:position pos:line="1099" pos:column="23"/></name></expr>;<pos:position pos:line="1099" pos:column="24"/></return></block></then></if></block></while>
        <return pos:line="1100" pos:column="9">return <expr><name pos:line="1100" pos:column="16">FALSE<pos:position pos:line="1100" pos:column="21"/></name></expr>;<pos:position pos:line="1100" pos:column="22"/></return>
        }<pos:position pos:line="1101" pos:column="10"/></block></else></if>
      }<pos:position pos:line="1102" pos:column="8"/></block></else></if>
    <comment type="block" pos:line="1103" pos:column="5">/* Control never gets here */</comment>

    <comment type="block" pos:line="1105" pos:column="5">/* Match a single character type repeatedly; several different opcodes
    share code. This is very similar to the code for single characters, but we
    repeat it in the interests of efficiency. */</comment>

    <case pos:line="1109" pos:column="5">case <expr><name pos:line="1109" pos:column="10">OP_TYPEEXACT<pos:position pos:line="1109" pos:column="22"/></name></expr>:<pos:position pos:line="1109" pos:column="23"/></case>
    <expr_stmt><expr><name pos:line="1110" pos:column="5">min<pos:position pos:line="1110" pos:column="8"/></name> <operator pos:line="1110" pos:column="9">=<pos:position pos:line="1110" pos:column="10"/></operator> <name pos:line="1110" pos:column="11">max<pos:position pos:line="1110" pos:column="14"/></name> <operator pos:line="1110" pos:column="15">=<pos:position pos:line="1110" pos:column="16"/></operator> <operator pos:line="1110" pos:column="17">(<pos:position pos:line="1110" pos:column="18"/></operator><name><name pos:line="1110" pos:column="18">ecode<pos:position pos:line="1110" pos:column="23"/></name><index pos:line="1110" pos:column="23">[<expr><literal type="number" pos:line="1110" pos:column="24">1<pos:position pos:line="1110" pos:column="25"/></literal></expr>]<pos:position pos:line="1110" pos:column="26"/></index></name> <operator pos:line="1110" pos:column="27">&lt;&lt;<pos:position pos:line="1110" pos:column="35"/></operator> <literal type="number" pos:line="1110" pos:column="30">8<pos:position pos:line="1110" pos:column="31"/></literal><operator pos:line="1110" pos:column="31">)<pos:position pos:line="1110" pos:column="32"/></operator> <operator pos:line="1110" pos:column="33">+<pos:position pos:line="1110" pos:column="34"/></operator> <name><name pos:line="1110" pos:column="35">ecode<pos:position pos:line="1110" pos:column="40"/></name><index pos:line="1110" pos:column="40">[<expr><literal type="number" pos:line="1110" pos:column="41">2<pos:position pos:line="1110" pos:column="42"/></literal></expr>]<pos:position pos:line="1110" pos:column="43"/></index></name></expr>;<pos:position pos:line="1110" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1111" pos:column="5">minimize<pos:position pos:line="1111" pos:column="13"/></name> <operator pos:line="1111" pos:column="14">=<pos:position pos:line="1111" pos:column="15"/></operator> <name pos:line="1111" pos:column="16">TRUE<pos:position pos:line="1111" pos:column="20"/></name></expr>;<pos:position pos:line="1111" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1112" pos:column="5">ecode<pos:position pos:line="1112" pos:column="10"/></name> <operator pos:line="1112" pos:column="11">+=<pos:position pos:line="1112" pos:column="13"/></operator> <literal type="number" pos:line="1112" pos:column="14">3<pos:position pos:line="1112" pos:column="15"/></literal></expr>;<pos:position pos:line="1112" pos:column="16"/></expr_stmt>
    <goto pos:line="1113" pos:column="5">goto <name pos:line="1113" pos:column="10">REPEATTYPE<pos:position pos:line="1113" pos:column="20"/></name>;<pos:position pos:line="1113" pos:column="21"/></goto>

    <case pos:line="1115" pos:column="5">case <expr><name pos:line="1115" pos:column="10">OP_TYPEUPTO<pos:position pos:line="1115" pos:column="21"/></name></expr>:<pos:position pos:line="1115" pos:column="22"/></case>
    <case pos:line="1116" pos:column="5">case <expr><name pos:line="1116" pos:column="10">OP_TYPEMINUPTO<pos:position pos:line="1116" pos:column="24"/></name></expr>:<pos:position pos:line="1116" pos:column="25"/></case>
    <expr_stmt><expr><name pos:line="1117" pos:column="5">min<pos:position pos:line="1117" pos:column="8"/></name> <operator pos:line="1117" pos:column="9">=<pos:position pos:line="1117" pos:column="10"/></operator> <literal type="number" pos:line="1117" pos:column="11">0<pos:position pos:line="1117" pos:column="12"/></literal></expr>;<pos:position pos:line="1117" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1118" pos:column="5">max<pos:position pos:line="1118" pos:column="8"/></name> <operator pos:line="1118" pos:column="9">=<pos:position pos:line="1118" pos:column="10"/></operator> <operator pos:line="1118" pos:column="11">(<pos:position pos:line="1118" pos:column="12"/></operator><name><name pos:line="1118" pos:column="12">ecode<pos:position pos:line="1118" pos:column="17"/></name><index pos:line="1118" pos:column="17">[<expr><literal type="number" pos:line="1118" pos:column="18">1<pos:position pos:line="1118" pos:column="19"/></literal></expr>]<pos:position pos:line="1118" pos:column="20"/></index></name> <operator pos:line="1118" pos:column="21">&lt;&lt;<pos:position pos:line="1118" pos:column="29"/></operator> <literal type="number" pos:line="1118" pos:column="24">8<pos:position pos:line="1118" pos:column="25"/></literal><operator pos:line="1118" pos:column="25">)<pos:position pos:line="1118" pos:column="26"/></operator> <operator pos:line="1118" pos:column="27">+<pos:position pos:line="1118" pos:column="28"/></operator> <name><name pos:line="1118" pos:column="29">ecode<pos:position pos:line="1118" pos:column="34"/></name><index pos:line="1118" pos:column="34">[<expr><literal type="number" pos:line="1118" pos:column="35">2<pos:position pos:line="1118" pos:column="36"/></literal></expr>]<pos:position pos:line="1118" pos:column="37"/></index></name></expr>;<pos:position pos:line="1118" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1119" pos:column="5">minimize<pos:position pos:line="1119" pos:column="13"/></name> <operator pos:line="1119" pos:column="14">=<pos:position pos:line="1119" pos:column="15"/></operator> <operator pos:line="1119" pos:column="16">*<pos:position pos:line="1119" pos:column="17"/></operator><name pos:line="1119" pos:column="17">ecode<pos:position pos:line="1119" pos:column="22"/></name> <operator pos:line="1119" pos:column="23">==<pos:position pos:line="1119" pos:column="25"/></operator> <name pos:line="1119" pos:column="26">OP_TYPEMINUPTO<pos:position pos:line="1119" pos:column="40"/></name></expr>;<pos:position pos:line="1119" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1120" pos:column="5">ecode<pos:position pos:line="1120" pos:column="10"/></name> <operator pos:line="1120" pos:column="11">+=<pos:position pos:line="1120" pos:column="13"/></operator> <literal type="number" pos:line="1120" pos:column="14">3<pos:position pos:line="1120" pos:column="15"/></literal></expr>;<pos:position pos:line="1120" pos:column="16"/></expr_stmt>
    <goto pos:line="1121" pos:column="5">goto <name pos:line="1121" pos:column="10">REPEATTYPE<pos:position pos:line="1121" pos:column="20"/></name>;<pos:position pos:line="1121" pos:column="21"/></goto>

    <case pos:line="1123" pos:column="5">case <expr><name pos:line="1123" pos:column="10">OP_TYPESTAR<pos:position pos:line="1123" pos:column="21"/></name></expr>:<pos:position pos:line="1123" pos:column="22"/></case>
    <case pos:line="1124" pos:column="5">case <expr><name pos:line="1124" pos:column="10">OP_TYPEMINSTAR<pos:position pos:line="1124" pos:column="24"/></name></expr>:<pos:position pos:line="1124" pos:column="25"/></case>
    <case pos:line="1125" pos:column="5">case <expr><name pos:line="1125" pos:column="10">OP_TYPEPLUS<pos:position pos:line="1125" pos:column="21"/></name></expr>:<pos:position pos:line="1125" pos:column="22"/></case>
    <case pos:line="1126" pos:column="5">case <expr><name pos:line="1126" pos:column="10">OP_TYPEMINPLUS<pos:position pos:line="1126" pos:column="24"/></name></expr>:<pos:position pos:line="1126" pos:column="25"/></case>
    <case pos:line="1127" pos:column="5">case <expr><name pos:line="1127" pos:column="10">OP_TYPEQUERY<pos:position pos:line="1127" pos:column="22"/></name></expr>:<pos:position pos:line="1127" pos:column="23"/></case>
    <case pos:line="1128" pos:column="5">case <expr><name pos:line="1128" pos:column="10">OP_TYPEMINQUERY<pos:position pos:line="1128" pos:column="25"/></name></expr>:<pos:position pos:line="1128" pos:column="26"/></case>
    <expr_stmt><expr><name pos:line="1129" pos:column="5">c<pos:position pos:line="1129" pos:column="6"/></name> <operator pos:line="1129" pos:column="7">=<pos:position pos:line="1129" pos:column="8"/></operator> <operator pos:line="1129" pos:column="9">*<pos:position pos:line="1129" pos:column="10"/></operator><name pos:line="1129" pos:column="10">ecode<pos:position pos:line="1129" pos:column="15"/></name><operator pos:line="1129" pos:column="15">++<pos:position pos:line="1129" pos:column="17"/></operator> <operator pos:line="1129" pos:column="18">-<pos:position pos:line="1129" pos:column="19"/></operator> <name pos:line="1129" pos:column="20">OP_TYPESTAR<pos:position pos:line="1129" pos:column="31"/></name></expr>;<pos:position pos:line="1129" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1130" pos:column="5">minimize<pos:position pos:line="1130" pos:column="13"/></name> <operator pos:line="1130" pos:column="14">=<pos:position pos:line="1130" pos:column="15"/></operator> <operator pos:line="1130" pos:column="16">(<pos:position pos:line="1130" pos:column="17"/></operator><name pos:line="1130" pos:column="17">c<pos:position pos:line="1130" pos:column="18"/></name> <operator pos:line="1130" pos:column="19">&amp;<pos:position pos:line="1130" pos:column="24"/></operator> <literal type="number" pos:line="1130" pos:column="21">1<pos:position pos:line="1130" pos:column="22"/></literal><operator pos:line="1130" pos:column="22">)<pos:position pos:line="1130" pos:column="23"/></operator> <operator pos:line="1130" pos:column="24">!=<pos:position pos:line="1130" pos:column="26"/></operator> <literal type="number" pos:line="1130" pos:column="27">0<pos:position pos:line="1130" pos:column="28"/></literal></expr>;<pos:position pos:line="1130" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1131" pos:column="5">min<pos:position pos:line="1131" pos:column="8"/></name> <operator pos:line="1131" pos:column="9">=<pos:position pos:line="1131" pos:column="10"/></operator> <name><name pos:line="1131" pos:column="11">rep_min<pos:position pos:line="1131" pos:column="18"/></name><index pos:line="1131" pos:column="18">[<expr><name pos:line="1131" pos:column="19">c<pos:position pos:line="1131" pos:column="20"/></name></expr>]<pos:position pos:line="1131" pos:column="21"/></index></name></expr>;<pos:position pos:line="1131" pos:column="22"/></expr_stmt>                 <comment type="block" pos:line="1131" pos:column="39">/* Pick up values from tables; */</comment>
    <expr_stmt><expr><name pos:line="1132" pos:column="5">max<pos:position pos:line="1132" pos:column="8"/></name> <operator pos:line="1132" pos:column="9">=<pos:position pos:line="1132" pos:column="10"/></operator> <name><name pos:line="1132" pos:column="11">rep_max<pos:position pos:line="1132" pos:column="18"/></name><index pos:line="1132" pos:column="18">[<expr><name pos:line="1132" pos:column="19">c<pos:position pos:line="1132" pos:column="20"/></name></expr>]<pos:position pos:line="1132" pos:column="21"/></index></name></expr>;<pos:position pos:line="1132" pos:column="22"/></expr_stmt>                 <comment type="block" pos:line="1132" pos:column="39">/* zero for max =&gt; infinity */</comment>
    <if pos:line="1133" pos:column="5">if <condition pos:line="1133" pos:column="8">(<expr><name pos:line="1133" pos:column="9">max<pos:position pos:line="1133" pos:column="12"/></name> <operator pos:line="1133" pos:column="13">==<pos:position pos:line="1133" pos:column="15"/></operator> <literal type="number" pos:line="1133" pos:column="16">0<pos:position pos:line="1133" pos:column="17"/></literal></expr>)<pos:position pos:line="1133" pos:column="18"/></condition><then pos:line="1133" pos:column="18"> <block type="pseudo"><expr_stmt><expr><name pos:line="1133" pos:column="19">max<pos:position pos:line="1133" pos:column="22"/></name> <operator pos:line="1133" pos:column="23">=<pos:position pos:line="1133" pos:column="24"/></operator> <name pos:line="1133" pos:column="25">INT_MAX<pos:position pos:line="1133" pos:column="32"/></name></expr>;<pos:position pos:line="1133" pos:column="33"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="1135" pos:column="5">/* Common code for all repeated single character type matches */</comment>

    <label><name pos:line="1137" pos:column="5">REPEATTYPE<pos:position pos:line="1137" pos:column="15"/></name>:<pos:position pos:line="1137" pos:column="16"/></label>
    <expr_stmt><expr><name pos:line="1138" pos:column="5">ctype<pos:position pos:line="1138" pos:column="10"/></name> <operator pos:line="1138" pos:column="11">=<pos:position pos:line="1138" pos:column="12"/></operator> <operator pos:line="1138" pos:column="13">*<pos:position pos:line="1138" pos:column="14"/></operator><name pos:line="1138" pos:column="14">ecode<pos:position pos:line="1138" pos:column="19"/></name><operator pos:line="1138" pos:column="19">++<pos:position pos:line="1138" pos:column="21"/></operator></expr>;<pos:position pos:line="1138" pos:column="22"/></expr_stmt>      <comment type="block" pos:line="1138" pos:column="28">/* Code for the character type */</comment>

    <comment type="block" pos:line="1140" pos:column="5">/* First, ensure the minimum number of matches are present. Use inline
    code for maximizing the speed, and do the type test once at the start
    (i.e. keep it out of the loop). Also we can test that there are at least
    the minimum number of bytes before we start, except when doing '.' in
    UTF8 mode. Leave the test in in all cases; in the special case we have
    to test after each character. */</comment>

    <if pos:line="1147" pos:column="5">if <condition pos:line="1147" pos:column="8">(<expr><name pos:line="1147" pos:column="9">min<pos:position pos:line="1147" pos:column="12"/></name> <operator pos:line="1147" pos:column="13">&gt;<pos:position pos:line="1147" pos:column="17"/></operator> <name><name pos:line="1147" pos:column="15">md<pos:position pos:line="1147" pos:column="17"/></name><operator pos:line="1147" pos:column="17">-&gt;<pos:position pos:line="1147" pos:column="22"/></operator><name pos:line="1147" pos:column="19">end_subject<pos:position pos:line="1147" pos:column="30"/></name></name> <operator pos:line="1147" pos:column="31">-<pos:position pos:line="1147" pos:column="32"/></operator> <name pos:line="1147" pos:column="33">eptr<pos:position pos:line="1147" pos:column="37"/></name></expr>)<pos:position pos:line="1147" pos:column="38"/></condition><then pos:line="1147" pos:column="38"> <block type="pseudo"><return pos:line="1147" pos:column="39">return <expr><name pos:line="1147" pos:column="46">FALSE<pos:position pos:line="1147" pos:column="51"/></name></expr>;<pos:position pos:line="1147" pos:column="52"/></return></block></then></if>
    <if pos:line="1148" pos:column="5">if <condition pos:line="1148" pos:column="8">(<expr><name pos:line="1148" pos:column="9">min<pos:position pos:line="1148" pos:column="12"/></name> <operator pos:line="1148" pos:column="13">&gt;<pos:position pos:line="1148" pos:column="17"/></operator> <literal type="number" pos:line="1148" pos:column="15">0<pos:position pos:line="1148" pos:column="16"/></literal></expr>)<pos:position pos:line="1148" pos:column="17"/></condition><then pos:line="1148" pos:column="17"> <block type="pseudo"><switch pos:line="1148" pos:column="18">switch<condition pos:line="1148" pos:column="24">(<expr><name pos:line="1148" pos:column="25">ctype<pos:position pos:line="1148" pos:column="30"/></name></expr>)<pos:position pos:line="1148" pos:column="31"/></condition>
      <block pos:line="1149" pos:column="7">{
      <case pos:line="1150" pos:column="7">case <expr><name pos:line="1150" pos:column="12">OP_ANY<pos:position pos:line="1150" pos:column="18"/></name></expr>:<pos:position pos:line="1150" pos:column="19"/></case>
<cpp:ifdef pos:line="1151" pos:column="1">#<cpp:directive pos:line="1151" pos:column="2">ifdef<pos:position pos:line="1151" pos:column="7"/></cpp:directive> <name pos:line="1151" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1151" pos:column="20"/></name></cpp:ifdef>
      <if pos:line="1152" pos:column="7">if <condition pos:line="1152" pos:column="10">(<expr><name><name pos:line="1152" pos:column="11">md<pos:position pos:line="1152" pos:column="13"/></name><operator pos:line="1152" pos:column="13">-&gt;<pos:position pos:line="1152" pos:column="18"/></operator><name pos:line="1152" pos:column="15">utf8<pos:position pos:line="1152" pos:column="19"/></name></name></expr>)<pos:position pos:line="1152" pos:column="20"/></condition><then pos:line="1152" pos:column="20">
        <block pos:line="1153" pos:column="9">{
        <for pos:line="1154" pos:column="9">for <control pos:line="1154" pos:column="13">(<init><expr><name pos:line="1154" pos:column="14">i<pos:position pos:line="1154" pos:column="15"/></name> <operator pos:line="1154" pos:column="16">=<pos:position pos:line="1154" pos:column="17"/></operator> <literal type="number" pos:line="1154" pos:column="18">1<pos:position pos:line="1154" pos:column="19"/></literal></expr>;<pos:position pos:line="1154" pos:column="20"/></init> <condition><expr><name pos:line="1154" pos:column="21">i<pos:position pos:line="1154" pos:column="22"/></name> <operator pos:line="1154" pos:column="23">&lt;=<pos:position pos:line="1154" pos:column="28"/></operator> <name pos:line="1154" pos:column="26">min<pos:position pos:line="1154" pos:column="29"/></name></expr>;<pos:position pos:line="1154" pos:column="30"/></condition> <incr><expr><name pos:line="1154" pos:column="31">i<pos:position pos:line="1154" pos:column="32"/></name><operator pos:line="1154" pos:column="32">++<pos:position pos:line="1154" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="1154" pos:column="35"/></control>
          <block pos:line="1155" pos:column="11">{
          <if pos:line="1156" pos:column="11">if <condition pos:line="1156" pos:column="14">(<expr><name pos:line="1156" pos:column="15">eptr<pos:position pos:line="1156" pos:column="19"/></name> <operator pos:line="1156" pos:column="20">&gt;=<pos:position pos:line="1156" pos:column="25"/></operator> <name><name pos:line="1156" pos:column="23">md<pos:position pos:line="1156" pos:column="25"/></name><operator pos:line="1156" pos:column="25">-&gt;<pos:position pos:line="1156" pos:column="30"/></operator><name pos:line="1156" pos:column="27">end_subject<pos:position pos:line="1156" pos:column="38"/></name></name> <operator pos:line="1156" pos:column="39">||<pos:position pos:line="1156" pos:column="41"/></operator>
             <operator pos:line="1157" pos:column="14">(<pos:position pos:line="1157" pos:column="15"/></operator><operator pos:line="1157" pos:column="15">*<pos:position pos:line="1157" pos:column="16"/></operator><name pos:line="1157" pos:column="16">eptr<pos:position pos:line="1157" pos:column="20"/></name><operator pos:line="1157" pos:column="20">++<pos:position pos:line="1157" pos:column="22"/></operator> <operator pos:line="1157" pos:column="23">==<pos:position pos:line="1157" pos:column="25"/></operator> <name pos:line="1157" pos:column="26">NEWLINE<pos:position pos:line="1157" pos:column="33"/></name> <operator pos:line="1157" pos:column="34">&amp;&amp;<pos:position pos:line="1157" pos:column="44"/></operator> <operator pos:line="1157" pos:column="37">(<pos:position pos:line="1157" pos:column="38"/></operator><name pos:line="1157" pos:column="38">ims<pos:position pos:line="1157" pos:column="41"/></name> <operator pos:line="1157" pos:column="42">&amp;<pos:position pos:line="1157" pos:column="47"/></operator> <name pos:line="1157" pos:column="44">PCRE_DOTALL<pos:position pos:line="1157" pos:column="55"/></name><operator pos:line="1157" pos:column="55">)<pos:position pos:line="1157" pos:column="56"/></operator> <operator pos:line="1157" pos:column="57">==<pos:position pos:line="1157" pos:column="59"/></operator> <literal type="number" pos:line="1157" pos:column="60">0<pos:position pos:line="1157" pos:column="61"/></literal><operator pos:line="1157" pos:column="61">)<pos:position pos:line="1157" pos:column="62"/></operator></expr>)<pos:position pos:line="1157" pos:column="63"/></condition><then pos:line="1157" pos:column="63">
            <block type="pseudo"><return pos:line="1158" pos:column="13">return <expr><name pos:line="1158" pos:column="20">FALSE<pos:position pos:line="1158" pos:column="25"/></name></expr>;<pos:position pos:line="1158" pos:column="26"/></return></block></then></if>
          <while pos:line="1159" pos:column="11">while <condition pos:line="1159" pos:column="17">(<expr><name pos:line="1159" pos:column="18">eptr<pos:position pos:line="1159" pos:column="22"/></name> <operator pos:line="1159" pos:column="23">&lt;<pos:position pos:line="1159" pos:column="27"/></operator> <name><name pos:line="1159" pos:column="25">md<pos:position pos:line="1159" pos:column="27"/></name><operator pos:line="1159" pos:column="27">-&gt;<pos:position pos:line="1159" pos:column="32"/></operator><name pos:line="1159" pos:column="29">end_subject<pos:position pos:line="1159" pos:column="40"/></name></name> <operator pos:line="1159" pos:column="41">&amp;&amp;<pos:position pos:line="1159" pos:column="51"/></operator> <operator pos:line="1159" pos:column="44">(<pos:position pos:line="1159" pos:column="45"/></operator><operator pos:line="1159" pos:column="45">*<pos:position pos:line="1159" pos:column="46"/></operator><name pos:line="1159" pos:column="46">eptr<pos:position pos:line="1159" pos:column="50"/></name> <operator pos:line="1159" pos:column="51">&amp;<pos:position pos:line="1159" pos:column="56"/></operator> <literal type="number" pos:line="1159" pos:column="53">0xc0<pos:position pos:line="1159" pos:column="57"/></literal><operator pos:line="1159" pos:column="57">)<pos:position pos:line="1159" pos:column="58"/></operator> <operator pos:line="1159" pos:column="59">==<pos:position pos:line="1159" pos:column="61"/></operator> <literal type="number" pos:line="1159" pos:column="62">0x80<pos:position pos:line="1159" pos:column="66"/></literal></expr>)<pos:position pos:line="1159" pos:column="67"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="1159" pos:column="68">eptr<pos:position pos:line="1159" pos:column="72"/></name><operator pos:line="1159" pos:column="72">++<pos:position pos:line="1159" pos:column="74"/></operator></expr>;<pos:position pos:line="1159" pos:column="75"/></expr_stmt></block></while>
          }<pos:position pos:line="1160" pos:column="12"/></block></for>
        <break pos:line="1161" pos:column="9">break;<pos:position pos:line="1161" pos:column="15"/></break>
        }<pos:position pos:line="1162" pos:column="10"/></block></then></if>
<cpp:endif pos:line="1163" pos:column="1">#<cpp:directive pos:line="1163" pos:column="2">endif<pos:position pos:line="1163" pos:column="7"/></cpp:directive></cpp:endif>
      <comment type="block" pos:line="1164" pos:column="7">/* Non-UTF8 can be faster */</comment>
      <if pos:line="1165" pos:column="7">if <condition pos:line="1165" pos:column="10">(<expr><operator pos:line="1165" pos:column="11">(<pos:position pos:line="1165" pos:column="12"/></operator><name pos:line="1165" pos:column="12">ims<pos:position pos:line="1165" pos:column="15"/></name> <operator pos:line="1165" pos:column="16">&amp;<pos:position pos:line="1165" pos:column="21"/></operator> <name pos:line="1165" pos:column="18">PCRE_DOTALL<pos:position pos:line="1165" pos:column="29"/></name><operator pos:line="1165" pos:column="29">)<pos:position pos:line="1165" pos:column="30"/></operator> <operator pos:line="1165" pos:column="31">==<pos:position pos:line="1165" pos:column="33"/></operator> <literal type="number" pos:line="1165" pos:column="34">0<pos:position pos:line="1165" pos:column="35"/></literal></expr>)<pos:position pos:line="1165" pos:column="36"/></condition><then pos:line="1165" pos:column="36">
        <block pos:line="1166" pos:column="9">{ <for pos:line="1166" pos:column="11">for <control pos:line="1166" pos:column="15">(<init><expr><name pos:line="1166" pos:column="16">i<pos:position pos:line="1166" pos:column="17"/></name> <operator pos:line="1166" pos:column="18">=<pos:position pos:line="1166" pos:column="19"/></operator> <literal type="number" pos:line="1166" pos:column="20">1<pos:position pos:line="1166" pos:column="21"/></literal></expr>;<pos:position pos:line="1166" pos:column="22"/></init> <condition><expr><name pos:line="1166" pos:column="23">i<pos:position pos:line="1166" pos:column="24"/></name> <operator pos:line="1166" pos:column="25">&lt;=<pos:position pos:line="1166" pos:column="30"/></operator> <name pos:line="1166" pos:column="28">min<pos:position pos:line="1166" pos:column="31"/></name></expr>;<pos:position pos:line="1166" pos:column="32"/></condition> <incr><expr><name pos:line="1166" pos:column="33">i<pos:position pos:line="1166" pos:column="34"/></name><operator pos:line="1166" pos:column="34">++<pos:position pos:line="1166" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="1166" pos:column="37"/></control> <block type="pseudo"><if pos:line="1166" pos:column="38">if <condition pos:line="1166" pos:column="41">(<expr><operator pos:line="1166" pos:column="42">*<pos:position pos:line="1166" pos:column="43"/></operator><name pos:line="1166" pos:column="43">eptr<pos:position pos:line="1166" pos:column="47"/></name><operator pos:line="1166" pos:column="47">++<pos:position pos:line="1166" pos:column="49"/></operator> <operator pos:line="1166" pos:column="50">==<pos:position pos:line="1166" pos:column="52"/></operator> <name pos:line="1166" pos:column="53">NEWLINE<pos:position pos:line="1166" pos:column="60"/></name></expr>)<pos:position pos:line="1166" pos:column="61"/></condition><then pos:line="1166" pos:column="61"> <block type="pseudo"><return pos:line="1166" pos:column="62">return <expr><name pos:line="1166" pos:column="69">FALSE<pos:position pos:line="1166" pos:column="74"/></name></expr>;<pos:position pos:line="1166" pos:column="75"/></return></block></then></if></block></for> }<pos:position pos:line="1166" pos:column="77"/></block></then>
      <else pos:line="1167" pos:column="7">else <block type="pseudo"><expr_stmt><expr><name pos:line="1167" pos:column="12">eptr<pos:position pos:line="1167" pos:column="16"/></name> <operator pos:line="1167" pos:column="17">+=<pos:position pos:line="1167" pos:column="19"/></operator> <name pos:line="1167" pos:column="20">min<pos:position pos:line="1167" pos:column="23"/></name></expr>;<pos:position pos:line="1167" pos:column="24"/></expr_stmt></block></else></if>
      <break pos:line="1168" pos:column="7">break;<pos:position pos:line="1168" pos:column="13"/></break>

      <case pos:line="1170" pos:column="7">case <expr><name pos:line="1170" pos:column="12">OP_NOT_DIGIT<pos:position pos:line="1170" pos:column="24"/></name></expr>:<pos:position pos:line="1170" pos:column="25"/></case>
      <for pos:line="1171" pos:column="7">for <control pos:line="1171" pos:column="11">(<init><expr><name pos:line="1171" pos:column="12">i<pos:position pos:line="1171" pos:column="13"/></name> <operator pos:line="1171" pos:column="14">=<pos:position pos:line="1171" pos:column="15"/></operator> <literal type="number" pos:line="1171" pos:column="16">1<pos:position pos:line="1171" pos:column="17"/></literal></expr>;<pos:position pos:line="1171" pos:column="18"/></init> <condition><expr><name pos:line="1171" pos:column="19">i<pos:position pos:line="1171" pos:column="20"/></name> <operator pos:line="1171" pos:column="21">&lt;=<pos:position pos:line="1171" pos:column="26"/></operator> <name pos:line="1171" pos:column="24">min<pos:position pos:line="1171" pos:column="27"/></name></expr>;<pos:position pos:line="1171" pos:column="28"/></condition> <incr><expr><name pos:line="1171" pos:column="29">i<pos:position pos:line="1171" pos:column="30"/></name><operator pos:line="1171" pos:column="30">++<pos:position pos:line="1171" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="1171" pos:column="33"/></control>
        <block type="pseudo"><if pos:line="1172" pos:column="9">if <condition pos:line="1172" pos:column="12">(<expr><operator pos:line="1172" pos:column="13">(<pos:position pos:line="1172" pos:column="14"/></operator><name><name pos:line="1172" pos:column="14">md<pos:position pos:line="1172" pos:column="16"/></name><operator pos:line="1172" pos:column="16">-&gt;<pos:position pos:line="1172" pos:column="21"/></operator><name pos:line="1172" pos:column="18">ctypes<pos:position pos:line="1172" pos:column="24"/></name><index pos:line="1172" pos:column="24">[<expr><operator pos:line="1172" pos:column="25">*<pos:position pos:line="1172" pos:column="26"/></operator><name pos:line="1172" pos:column="26">eptr<pos:position pos:line="1172" pos:column="30"/></name><operator pos:line="1172" pos:column="30">++<pos:position pos:line="1172" pos:column="32"/></operator></expr>]<pos:position pos:line="1172" pos:column="33"/></index></name> <operator pos:line="1172" pos:column="34">&amp;<pos:position pos:line="1172" pos:column="39"/></operator> <name pos:line="1172" pos:column="36">ctype_digit<pos:position pos:line="1172" pos:column="47"/></name><operator pos:line="1172" pos:column="47">)<pos:position pos:line="1172" pos:column="48"/></operator> <operator pos:line="1172" pos:column="49">!=<pos:position pos:line="1172" pos:column="51"/></operator> <literal type="number" pos:line="1172" pos:column="52">0<pos:position pos:line="1172" pos:column="53"/></literal></expr>)<pos:position pos:line="1172" pos:column="54"/></condition><then pos:line="1172" pos:column="54"> <block type="pseudo"><return pos:line="1172" pos:column="55">return <expr><name pos:line="1172" pos:column="62">FALSE<pos:position pos:line="1172" pos:column="67"/></name></expr>;<pos:position pos:line="1172" pos:column="68"/></return></block></then></if></block></for>
      <break pos:line="1173" pos:column="7">break;<pos:position pos:line="1173" pos:column="13"/></break>

      <case pos:line="1175" pos:column="7">case <expr><name pos:line="1175" pos:column="12">OP_DIGIT<pos:position pos:line="1175" pos:column="20"/></name></expr>:<pos:position pos:line="1175" pos:column="21"/></case>
      <for pos:line="1176" pos:column="7">for <control pos:line="1176" pos:column="11">(<init><expr><name pos:line="1176" pos:column="12">i<pos:position pos:line="1176" pos:column="13"/></name> <operator pos:line="1176" pos:column="14">=<pos:position pos:line="1176" pos:column="15"/></operator> <literal type="number" pos:line="1176" pos:column="16">1<pos:position pos:line="1176" pos:column="17"/></literal></expr>;<pos:position pos:line="1176" pos:column="18"/></init> <condition><expr><name pos:line="1176" pos:column="19">i<pos:position pos:line="1176" pos:column="20"/></name> <operator pos:line="1176" pos:column="21">&lt;=<pos:position pos:line="1176" pos:column="26"/></operator> <name pos:line="1176" pos:column="24">min<pos:position pos:line="1176" pos:column="27"/></name></expr>;<pos:position pos:line="1176" pos:column="28"/></condition> <incr><expr><name pos:line="1176" pos:column="29">i<pos:position pos:line="1176" pos:column="30"/></name><operator pos:line="1176" pos:column="30">++<pos:position pos:line="1176" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="1176" pos:column="33"/></control>
        <block type="pseudo"><if pos:line="1177" pos:column="9">if <condition pos:line="1177" pos:column="12">(<expr><operator pos:line="1177" pos:column="13">(<pos:position pos:line="1177" pos:column="14"/></operator><name><name pos:line="1177" pos:column="14">md<pos:position pos:line="1177" pos:column="16"/></name><operator pos:line="1177" pos:column="16">-&gt;<pos:position pos:line="1177" pos:column="21"/></operator><name pos:line="1177" pos:column="18">ctypes<pos:position pos:line="1177" pos:column="24"/></name><index pos:line="1177" pos:column="24">[<expr><operator pos:line="1177" pos:column="25">*<pos:position pos:line="1177" pos:column="26"/></operator><name pos:line="1177" pos:column="26">eptr<pos:position pos:line="1177" pos:column="30"/></name><operator pos:line="1177" pos:column="30">++<pos:position pos:line="1177" pos:column="32"/></operator></expr>]<pos:position pos:line="1177" pos:column="33"/></index></name> <operator pos:line="1177" pos:column="34">&amp;<pos:position pos:line="1177" pos:column="39"/></operator> <name pos:line="1177" pos:column="36">ctype_digit<pos:position pos:line="1177" pos:column="47"/></name><operator pos:line="1177" pos:column="47">)<pos:position pos:line="1177" pos:column="48"/></operator> <operator pos:line="1177" pos:column="49">==<pos:position pos:line="1177" pos:column="51"/></operator> <literal type="number" pos:line="1177" pos:column="52">0<pos:position pos:line="1177" pos:column="53"/></literal></expr>)<pos:position pos:line="1177" pos:column="54"/></condition><then pos:line="1177" pos:column="54"> <block type="pseudo"><return pos:line="1177" pos:column="55">return <expr><name pos:line="1177" pos:column="62">FALSE<pos:position pos:line="1177" pos:column="67"/></name></expr>;<pos:position pos:line="1177" pos:column="68"/></return></block></then></if></block></for>
      <break pos:line="1178" pos:column="7">break;<pos:position pos:line="1178" pos:column="13"/></break>

      <case pos:line="1180" pos:column="7">case <expr><name pos:line="1180" pos:column="12">OP_NOT_WHITESPACE<pos:position pos:line="1180" pos:column="29"/></name></expr>:<pos:position pos:line="1180" pos:column="30"/></case>
      <for pos:line="1181" pos:column="7">for <control pos:line="1181" pos:column="11">(<init><expr><name pos:line="1181" pos:column="12">i<pos:position pos:line="1181" pos:column="13"/></name> <operator pos:line="1181" pos:column="14">=<pos:position pos:line="1181" pos:column="15"/></operator> <literal type="number" pos:line="1181" pos:column="16">1<pos:position pos:line="1181" pos:column="17"/></literal></expr>;<pos:position pos:line="1181" pos:column="18"/></init> <condition><expr><name pos:line="1181" pos:column="19">i<pos:position pos:line="1181" pos:column="20"/></name> <operator pos:line="1181" pos:column="21">&lt;=<pos:position pos:line="1181" pos:column="26"/></operator> <name pos:line="1181" pos:column="24">min<pos:position pos:line="1181" pos:column="27"/></name></expr>;<pos:position pos:line="1181" pos:column="28"/></condition> <incr><expr><name pos:line="1181" pos:column="29">i<pos:position pos:line="1181" pos:column="30"/></name><operator pos:line="1181" pos:column="30">++<pos:position pos:line="1181" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="1181" pos:column="33"/></control>
        <block type="pseudo"><if pos:line="1182" pos:column="9">if <condition pos:line="1182" pos:column="12">(<expr><operator pos:line="1182" pos:column="13">(<pos:position pos:line="1182" pos:column="14"/></operator><name><name pos:line="1182" pos:column="14">md<pos:position pos:line="1182" pos:column="16"/></name><operator pos:line="1182" pos:column="16">-&gt;<pos:position pos:line="1182" pos:column="21"/></operator><name pos:line="1182" pos:column="18">ctypes<pos:position pos:line="1182" pos:column="24"/></name><index pos:line="1182" pos:column="24">[<expr><operator pos:line="1182" pos:column="25">*<pos:position pos:line="1182" pos:column="26"/></operator><name pos:line="1182" pos:column="26">eptr<pos:position pos:line="1182" pos:column="30"/></name><operator pos:line="1182" pos:column="30">++<pos:position pos:line="1182" pos:column="32"/></operator></expr>]<pos:position pos:line="1182" pos:column="33"/></index></name> <operator pos:line="1182" pos:column="34">&amp;<pos:position pos:line="1182" pos:column="39"/></operator> <name pos:line="1182" pos:column="36">ctype_space<pos:position pos:line="1182" pos:column="47"/></name><operator pos:line="1182" pos:column="47">)<pos:position pos:line="1182" pos:column="48"/></operator> <operator pos:line="1182" pos:column="49">!=<pos:position pos:line="1182" pos:column="51"/></operator> <literal type="number" pos:line="1182" pos:column="52">0<pos:position pos:line="1182" pos:column="53"/></literal></expr>)<pos:position pos:line="1182" pos:column="54"/></condition><then pos:line="1182" pos:column="54"> <block type="pseudo"><return pos:line="1182" pos:column="55">return <expr><name pos:line="1182" pos:column="62">FALSE<pos:position pos:line="1182" pos:column="67"/></name></expr>;<pos:position pos:line="1182" pos:column="68"/></return></block></then></if></block></for>
      <break pos:line="1183" pos:column="7">break;<pos:position pos:line="1183" pos:column="13"/></break>

      <case pos:line="1185" pos:column="7">case <expr><name pos:line="1185" pos:column="12">OP_WHITESPACE<pos:position pos:line="1185" pos:column="25"/></name></expr>:<pos:position pos:line="1185" pos:column="26"/></case>
      <for pos:line="1186" pos:column="7">for <control pos:line="1186" pos:column="11">(<init><expr><name pos:line="1186" pos:column="12">i<pos:position pos:line="1186" pos:column="13"/></name> <operator pos:line="1186" pos:column="14">=<pos:position pos:line="1186" pos:column="15"/></operator> <literal type="number" pos:line="1186" pos:column="16">1<pos:position pos:line="1186" pos:column="17"/></literal></expr>;<pos:position pos:line="1186" pos:column="18"/></init> <condition><expr><name pos:line="1186" pos:column="19">i<pos:position pos:line="1186" pos:column="20"/></name> <operator pos:line="1186" pos:column="21">&lt;=<pos:position pos:line="1186" pos:column="26"/></operator> <name pos:line="1186" pos:column="24">min<pos:position pos:line="1186" pos:column="27"/></name></expr>;<pos:position pos:line="1186" pos:column="28"/></condition> <incr><expr><name pos:line="1186" pos:column="29">i<pos:position pos:line="1186" pos:column="30"/></name><operator pos:line="1186" pos:column="30">++<pos:position pos:line="1186" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="1186" pos:column="33"/></control>
        <block type="pseudo"><if pos:line="1187" pos:column="9">if <condition pos:line="1187" pos:column="12">(<expr><operator pos:line="1187" pos:column="13">(<pos:position pos:line="1187" pos:column="14"/></operator><name><name pos:line="1187" pos:column="14">md<pos:position pos:line="1187" pos:column="16"/></name><operator pos:line="1187" pos:column="16">-&gt;<pos:position pos:line="1187" pos:column="21"/></operator><name pos:line="1187" pos:column="18">ctypes<pos:position pos:line="1187" pos:column="24"/></name><index pos:line="1187" pos:column="24">[<expr><operator pos:line="1187" pos:column="25">*<pos:position pos:line="1187" pos:column="26"/></operator><name pos:line="1187" pos:column="26">eptr<pos:position pos:line="1187" pos:column="30"/></name><operator pos:line="1187" pos:column="30">++<pos:position pos:line="1187" pos:column="32"/></operator></expr>]<pos:position pos:line="1187" pos:column="33"/></index></name> <operator pos:line="1187" pos:column="34">&amp;<pos:position pos:line="1187" pos:column="39"/></operator> <name pos:line="1187" pos:column="36">ctype_space<pos:position pos:line="1187" pos:column="47"/></name><operator pos:line="1187" pos:column="47">)<pos:position pos:line="1187" pos:column="48"/></operator> <operator pos:line="1187" pos:column="49">==<pos:position pos:line="1187" pos:column="51"/></operator> <literal type="number" pos:line="1187" pos:column="52">0<pos:position pos:line="1187" pos:column="53"/></literal></expr>)<pos:position pos:line="1187" pos:column="54"/></condition><then pos:line="1187" pos:column="54"> <block type="pseudo"><return pos:line="1187" pos:column="55">return <expr><name pos:line="1187" pos:column="62">FALSE<pos:position pos:line="1187" pos:column="67"/></name></expr>;<pos:position pos:line="1187" pos:column="68"/></return></block></then></if></block></for>
      <break pos:line="1188" pos:column="7">break;<pos:position pos:line="1188" pos:column="13"/></break>

      <case pos:line="1190" pos:column="7">case <expr><name pos:line="1190" pos:column="12">OP_NOT_WORDCHAR<pos:position pos:line="1190" pos:column="27"/></name></expr>:<pos:position pos:line="1190" pos:column="28"/></case>
      <for pos:line="1191" pos:column="7">for <control pos:line="1191" pos:column="11">(<init><expr><name pos:line="1191" pos:column="12">i<pos:position pos:line="1191" pos:column="13"/></name> <operator pos:line="1191" pos:column="14">=<pos:position pos:line="1191" pos:column="15"/></operator> <literal type="number" pos:line="1191" pos:column="16">1<pos:position pos:line="1191" pos:column="17"/></literal></expr>;<pos:position pos:line="1191" pos:column="18"/></init> <condition><expr><name pos:line="1191" pos:column="19">i<pos:position pos:line="1191" pos:column="20"/></name> <operator pos:line="1191" pos:column="21">&lt;=<pos:position pos:line="1191" pos:column="26"/></operator> <name pos:line="1191" pos:column="24">min<pos:position pos:line="1191" pos:column="27"/></name></expr>;<pos:position pos:line="1191" pos:column="28"/></condition> <incr><expr><name pos:line="1191" pos:column="29">i<pos:position pos:line="1191" pos:column="30"/></name><operator pos:line="1191" pos:column="30">++<pos:position pos:line="1191" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="1191" pos:column="33"/></control>
        <block type="pseudo"><if pos:line="1192" pos:column="9">if <condition pos:line="1192" pos:column="12">(<expr><operator pos:line="1192" pos:column="13">(<pos:position pos:line="1192" pos:column="14"/></operator><name><name pos:line="1192" pos:column="14">md<pos:position pos:line="1192" pos:column="16"/></name><operator pos:line="1192" pos:column="16">-&gt;<pos:position pos:line="1192" pos:column="21"/></operator><name pos:line="1192" pos:column="18">ctypes<pos:position pos:line="1192" pos:column="24"/></name><index pos:line="1192" pos:column="24">[<expr><operator pos:line="1192" pos:column="25">*<pos:position pos:line="1192" pos:column="26"/></operator><name pos:line="1192" pos:column="26">eptr<pos:position pos:line="1192" pos:column="30"/></name><operator pos:line="1192" pos:column="30">++<pos:position pos:line="1192" pos:column="32"/></operator></expr>]<pos:position pos:line="1192" pos:column="33"/></index></name> <operator pos:line="1192" pos:column="34">&amp;<pos:position pos:line="1192" pos:column="39"/></operator> <name pos:line="1192" pos:column="36">ctype_word<pos:position pos:line="1192" pos:column="46"/></name><operator pos:line="1192" pos:column="46">)<pos:position pos:line="1192" pos:column="47"/></operator> <operator pos:line="1192" pos:column="48">!=<pos:position pos:line="1192" pos:column="50"/></operator> <literal type="number" pos:line="1192" pos:column="51">0<pos:position pos:line="1192" pos:column="52"/></literal></expr>)<pos:position pos:line="1192" pos:column="53"/></condition><then pos:line="1192" pos:column="53">
          <block type="pseudo"><return pos:line="1193" pos:column="11">return <expr><name pos:line="1193" pos:column="18">FALSE<pos:position pos:line="1193" pos:column="23"/></name></expr>;<pos:position pos:line="1193" pos:column="24"/></return></block></then></if></block></for>
      <break pos:line="1194" pos:column="7">break;<pos:position pos:line="1194" pos:column="13"/></break>

      <case pos:line="1196" pos:column="7">case <expr><name pos:line="1196" pos:column="12">OP_WORDCHAR<pos:position pos:line="1196" pos:column="23"/></name></expr>:<pos:position pos:line="1196" pos:column="24"/></case>
      <for pos:line="1197" pos:column="7">for <control pos:line="1197" pos:column="11">(<init><expr><name pos:line="1197" pos:column="12">i<pos:position pos:line="1197" pos:column="13"/></name> <operator pos:line="1197" pos:column="14">=<pos:position pos:line="1197" pos:column="15"/></operator> <literal type="number" pos:line="1197" pos:column="16">1<pos:position pos:line="1197" pos:column="17"/></literal></expr>;<pos:position pos:line="1197" pos:column="18"/></init> <condition><expr><name pos:line="1197" pos:column="19">i<pos:position pos:line="1197" pos:column="20"/></name> <operator pos:line="1197" pos:column="21">&lt;=<pos:position pos:line="1197" pos:column="26"/></operator> <name pos:line="1197" pos:column="24">min<pos:position pos:line="1197" pos:column="27"/></name></expr>;<pos:position pos:line="1197" pos:column="28"/></condition> <incr><expr><name pos:line="1197" pos:column="29">i<pos:position pos:line="1197" pos:column="30"/></name><operator pos:line="1197" pos:column="30">++<pos:position pos:line="1197" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="1197" pos:column="33"/></control>
        <block type="pseudo"><if pos:line="1198" pos:column="9">if <condition pos:line="1198" pos:column="12">(<expr><operator pos:line="1198" pos:column="13">(<pos:position pos:line="1198" pos:column="14"/></operator><name><name pos:line="1198" pos:column="14">md<pos:position pos:line="1198" pos:column="16"/></name><operator pos:line="1198" pos:column="16">-&gt;<pos:position pos:line="1198" pos:column="21"/></operator><name pos:line="1198" pos:column="18">ctypes<pos:position pos:line="1198" pos:column="24"/></name><index pos:line="1198" pos:column="24">[<expr><operator pos:line="1198" pos:column="25">*<pos:position pos:line="1198" pos:column="26"/></operator><name pos:line="1198" pos:column="26">eptr<pos:position pos:line="1198" pos:column="30"/></name><operator pos:line="1198" pos:column="30">++<pos:position pos:line="1198" pos:column="32"/></operator></expr>]<pos:position pos:line="1198" pos:column="33"/></index></name> <operator pos:line="1198" pos:column="34">&amp;<pos:position pos:line="1198" pos:column="39"/></operator> <name pos:line="1198" pos:column="36">ctype_word<pos:position pos:line="1198" pos:column="46"/></name><operator pos:line="1198" pos:column="46">)<pos:position pos:line="1198" pos:column="47"/></operator> <operator pos:line="1198" pos:column="48">==<pos:position pos:line="1198" pos:column="50"/></operator> <literal type="number" pos:line="1198" pos:column="51">0<pos:position pos:line="1198" pos:column="52"/></literal></expr>)<pos:position pos:line="1198" pos:column="53"/></condition><then pos:line="1198" pos:column="53">
          <block type="pseudo"><return pos:line="1199" pos:column="11">return <expr><name pos:line="1199" pos:column="18">FALSE<pos:position pos:line="1199" pos:column="23"/></name></expr>;<pos:position pos:line="1199" pos:column="24"/></return></block></then></if></block></for>
      <break pos:line="1200" pos:column="7">break;<pos:position pos:line="1200" pos:column="13"/></break>
      }<pos:position pos:line="1201" pos:column="8"/></block></switch></block></then></if>

    <comment type="block" pos:line="1203" pos:column="5">/* If min = max, continue at the same level without recursing */</comment>

    <if pos:line="1205" pos:column="5">if <condition pos:line="1205" pos:column="8">(<expr><name pos:line="1205" pos:column="9">min<pos:position pos:line="1205" pos:column="12"/></name> <operator pos:line="1205" pos:column="13">==<pos:position pos:line="1205" pos:column="15"/></operator> <name pos:line="1205" pos:column="16">max<pos:position pos:line="1205" pos:column="19"/></name></expr>)<pos:position pos:line="1205" pos:column="20"/></condition><then pos:line="1205" pos:column="20"> <block type="pseudo"><continue pos:line="1205" pos:column="21">continue;<pos:position pos:line="1205" pos:column="30"/></continue></block></then></if>

    <comment type="block" pos:line="1207" pos:column="5">/* If minimizing, we have to test the rest of the pattern before each
    subsequent match. */</comment>

    <if pos:line="1210" pos:column="5">if <condition pos:line="1210" pos:column="8">(<expr><name pos:line="1210" pos:column="9">minimize<pos:position pos:line="1210" pos:column="17"/></name></expr>)<pos:position pos:line="1210" pos:column="18"/></condition><then pos:line="1210" pos:column="18">
      <block pos:line="1211" pos:column="7">{
      <for pos:line="1212" pos:column="7">for <control pos:line="1212" pos:column="11">(<init><expr><name pos:line="1212" pos:column="12">i<pos:position pos:line="1212" pos:column="13"/></name> <operator pos:line="1212" pos:column="14">=<pos:position pos:line="1212" pos:column="15"/></operator> <name pos:line="1212" pos:column="16">min<pos:position pos:line="1212" pos:column="19"/></name></expr>;<pos:position pos:line="1212" pos:column="20"/></init><condition pos:line="1212" pos:column="20">;<pos:position pos:line="1212" pos:column="21"/></condition> <incr><expr><name pos:line="1212" pos:column="22">i<pos:position pos:line="1212" pos:column="23"/></name><operator pos:line="1212" pos:column="23">++<pos:position pos:line="1212" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="1212" pos:column="26"/></control>
        <block pos:line="1213" pos:column="9">{
        <if pos:line="1214" pos:column="9">if <condition pos:line="1214" pos:column="12">(<expr><call><name pos:line="1214" pos:column="13">match<pos:position pos:line="1214" pos:column="18"/></name><argument_list pos:line="1214" pos:column="18">(<argument><expr><name pos:line="1214" pos:column="19">eptr<pos:position pos:line="1214" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1214" pos:column="25">ecode<pos:position pos:line="1214" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1214" pos:column="32">offset_top<pos:position pos:line="1214" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1214" pos:column="44">md<pos:position pos:line="1214" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1214" pos:column="48">ims<pos:position pos:line="1214" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="1214" pos:column="53">eptrb<pos:position pos:line="1214" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1214" pos:column="60">0<pos:position pos:line="1214" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="1214" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="1214" pos:column="63"/></condition><then pos:line="1214" pos:column="63"> <block type="pseudo"><return pos:line="1214" pos:column="64">return <expr><name pos:line="1214" pos:column="71">TRUE<pos:position pos:line="1214" pos:column="75"/></name></expr>;<pos:position pos:line="1214" pos:column="76"/></return></block></then></if>
        <if pos:line="1215" pos:column="9">if <condition pos:line="1215" pos:column="12">(<expr><name pos:line="1215" pos:column="13">i<pos:position pos:line="1215" pos:column="14"/></name> <operator pos:line="1215" pos:column="15">&gt;=<pos:position pos:line="1215" pos:column="20"/></operator> <name pos:line="1215" pos:column="18">max<pos:position pos:line="1215" pos:column="21"/></name> <operator pos:line="1215" pos:column="22">||<pos:position pos:line="1215" pos:column="24"/></operator> <name pos:line="1215" pos:column="25">eptr<pos:position pos:line="1215" pos:column="29"/></name> <operator pos:line="1215" pos:column="30">&gt;=<pos:position pos:line="1215" pos:column="35"/></operator> <name><name pos:line="1215" pos:column="33">md<pos:position pos:line="1215" pos:column="35"/></name><operator pos:line="1215" pos:column="35">-&gt;<pos:position pos:line="1215" pos:column="40"/></operator><name pos:line="1215" pos:column="37">end_subject<pos:position pos:line="1215" pos:column="48"/></name></name></expr>)<pos:position pos:line="1215" pos:column="49"/></condition><then pos:line="1215" pos:column="49"> <block type="pseudo"><return pos:line="1215" pos:column="50">return <expr><name pos:line="1215" pos:column="57">FALSE<pos:position pos:line="1215" pos:column="62"/></name></expr>;<pos:position pos:line="1215" pos:column="63"/></return></block></then></if>

        <expr_stmt><expr><name pos:line="1217" pos:column="9">c<pos:position pos:line="1217" pos:column="10"/></name> <operator pos:line="1217" pos:column="11">=<pos:position pos:line="1217" pos:column="12"/></operator> <operator pos:line="1217" pos:column="13">*<pos:position pos:line="1217" pos:column="14"/></operator><name pos:line="1217" pos:column="14">eptr<pos:position pos:line="1217" pos:column="18"/></name><operator pos:line="1217" pos:column="18">++<pos:position pos:line="1217" pos:column="20"/></operator></expr>;<pos:position pos:line="1217" pos:column="21"/></expr_stmt>
        <switch pos:line="1218" pos:column="9">switch<condition pos:line="1218" pos:column="15">(<expr><name pos:line="1218" pos:column="16">ctype<pos:position pos:line="1218" pos:column="21"/></name></expr>)<pos:position pos:line="1218" pos:column="22"/></condition>
          <block pos:line="1219" pos:column="11">{
          <case pos:line="1220" pos:column="11">case <expr><name pos:line="1220" pos:column="16">OP_ANY<pos:position pos:line="1220" pos:column="22"/></name></expr>:<pos:position pos:line="1220" pos:column="23"/></case>
          <if pos:line="1221" pos:column="11">if <condition pos:line="1221" pos:column="14">(<expr><operator pos:line="1221" pos:column="15">(<pos:position pos:line="1221" pos:column="16"/></operator><name pos:line="1221" pos:column="16">ims<pos:position pos:line="1221" pos:column="19"/></name> <operator pos:line="1221" pos:column="20">&amp;<pos:position pos:line="1221" pos:column="25"/></operator> <name pos:line="1221" pos:column="22">PCRE_DOTALL<pos:position pos:line="1221" pos:column="33"/></name><operator pos:line="1221" pos:column="33">)<pos:position pos:line="1221" pos:column="34"/></operator> <operator pos:line="1221" pos:column="35">==<pos:position pos:line="1221" pos:column="37"/></operator> <literal type="number" pos:line="1221" pos:column="38">0<pos:position pos:line="1221" pos:column="39"/></literal> <operator pos:line="1221" pos:column="40">&amp;&amp;<pos:position pos:line="1221" pos:column="50"/></operator> <name pos:line="1221" pos:column="43">c<pos:position pos:line="1221" pos:column="44"/></name> <operator pos:line="1221" pos:column="45">==<pos:position pos:line="1221" pos:column="47"/></operator> <name pos:line="1221" pos:column="48">NEWLINE<pos:position pos:line="1221" pos:column="55"/></name></expr>)<pos:position pos:line="1221" pos:column="56"/></condition><then pos:line="1221" pos:column="56"> <block type="pseudo"><return pos:line="1221" pos:column="57">return <expr><name pos:line="1221" pos:column="64">FALSE<pos:position pos:line="1221" pos:column="69"/></name></expr>;<pos:position pos:line="1221" pos:column="70"/></return></block></then></if>
<cpp:ifdef pos:line="1222" pos:column="1">#<cpp:directive pos:line="1222" pos:column="2">ifdef<pos:position pos:line="1222" pos:column="7"/></cpp:directive> <name pos:line="1222" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1222" pos:column="20"/></name></cpp:ifdef>
          <if pos:line="1223" pos:column="11">if <condition pos:line="1223" pos:column="14">(<expr><name><name pos:line="1223" pos:column="15">md<pos:position pos:line="1223" pos:column="17"/></name><operator pos:line="1223" pos:column="17">-&gt;<pos:position pos:line="1223" pos:column="22"/></operator><name pos:line="1223" pos:column="19">utf8<pos:position pos:line="1223" pos:column="23"/></name></name></expr>)<pos:position pos:line="1223" pos:column="24"/></condition><then pos:line="1223" pos:column="24">
            <block type="pseudo"><while pos:line="1224" pos:column="13">while <condition pos:line="1224" pos:column="19">(<expr><name pos:line="1224" pos:column="20">eptr<pos:position pos:line="1224" pos:column="24"/></name> <operator pos:line="1224" pos:column="25">&lt;<pos:position pos:line="1224" pos:column="29"/></operator> <name><name pos:line="1224" pos:column="27">md<pos:position pos:line="1224" pos:column="29"/></name><operator pos:line="1224" pos:column="29">-&gt;<pos:position pos:line="1224" pos:column="34"/></operator><name pos:line="1224" pos:column="31">end_subject<pos:position pos:line="1224" pos:column="42"/></name></name> <operator pos:line="1224" pos:column="43">&amp;&amp;<pos:position pos:line="1224" pos:column="53"/></operator> <operator pos:line="1224" pos:column="46">(<pos:position pos:line="1224" pos:column="47"/></operator><operator pos:line="1224" pos:column="47">*<pos:position pos:line="1224" pos:column="48"/></operator><name pos:line="1224" pos:column="48">eptr<pos:position pos:line="1224" pos:column="52"/></name> <operator pos:line="1224" pos:column="53">&amp;<pos:position pos:line="1224" pos:column="58"/></operator> <literal type="number" pos:line="1224" pos:column="55">0xc0<pos:position pos:line="1224" pos:column="59"/></literal><operator pos:line="1224" pos:column="59">)<pos:position pos:line="1224" pos:column="60"/></operator> <operator pos:line="1224" pos:column="61">==<pos:position pos:line="1224" pos:column="63"/></operator> <literal type="number" pos:line="1224" pos:column="64">0x80<pos:position pos:line="1224" pos:column="68"/></literal></expr>)<pos:position pos:line="1224" pos:column="69"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="1224" pos:column="70">eptr<pos:position pos:line="1224" pos:column="74"/></name><operator pos:line="1224" pos:column="74">++<pos:position pos:line="1224" pos:column="76"/></operator></expr>;<pos:position pos:line="1224" pos:column="77"/></expr_stmt></block></while></block></then></if>
<cpp:endif pos:line="1225" pos:column="1">#<cpp:directive pos:line="1225" pos:column="2">endif<pos:position pos:line="1225" pos:column="7"/></cpp:directive></cpp:endif>
          <break pos:line="1226" pos:column="11">break;<pos:position pos:line="1226" pos:column="17"/></break>

          <case pos:line="1228" pos:column="11">case <expr><name pos:line="1228" pos:column="16">OP_NOT_DIGIT<pos:position pos:line="1228" pos:column="28"/></name></expr>:<pos:position pos:line="1228" pos:column="29"/></case>
          <if pos:line="1229" pos:column="11">if <condition pos:line="1229" pos:column="14">(<expr><operator pos:line="1229" pos:column="15">(<pos:position pos:line="1229" pos:column="16"/></operator><name><name pos:line="1229" pos:column="16">md<pos:position pos:line="1229" pos:column="18"/></name><operator pos:line="1229" pos:column="18">-&gt;<pos:position pos:line="1229" pos:column="23"/></operator><name pos:line="1229" pos:column="20">ctypes<pos:position pos:line="1229" pos:column="26"/></name><index pos:line="1229" pos:column="26">[<expr><name pos:line="1229" pos:column="27">c<pos:position pos:line="1229" pos:column="28"/></name></expr>]<pos:position pos:line="1229" pos:column="29"/></index></name> <operator pos:line="1229" pos:column="30">&amp;<pos:position pos:line="1229" pos:column="35"/></operator> <name pos:line="1229" pos:column="32">ctype_digit<pos:position pos:line="1229" pos:column="43"/></name><operator pos:line="1229" pos:column="43">)<pos:position pos:line="1229" pos:column="44"/></operator> <operator pos:line="1229" pos:column="45">!=<pos:position pos:line="1229" pos:column="47"/></operator> <literal type="number" pos:line="1229" pos:column="48">0<pos:position pos:line="1229" pos:column="49"/></literal></expr>)<pos:position pos:line="1229" pos:column="50"/></condition><then pos:line="1229" pos:column="50"> <block type="pseudo"><return pos:line="1229" pos:column="51">return <expr><name pos:line="1229" pos:column="58">FALSE<pos:position pos:line="1229" pos:column="63"/></name></expr>;<pos:position pos:line="1229" pos:column="64"/></return></block></then></if>
          <break pos:line="1230" pos:column="11">break;<pos:position pos:line="1230" pos:column="17"/></break>

          <case pos:line="1232" pos:column="11">case <expr><name pos:line="1232" pos:column="16">OP_DIGIT<pos:position pos:line="1232" pos:column="24"/></name></expr>:<pos:position pos:line="1232" pos:column="25"/></case>
          <if pos:line="1233" pos:column="11">if <condition pos:line="1233" pos:column="14">(<expr><operator pos:line="1233" pos:column="15">(<pos:position pos:line="1233" pos:column="16"/></operator><name><name pos:line="1233" pos:column="16">md<pos:position pos:line="1233" pos:column="18"/></name><operator pos:line="1233" pos:column="18">-&gt;<pos:position pos:line="1233" pos:column="23"/></operator><name pos:line="1233" pos:column="20">ctypes<pos:position pos:line="1233" pos:column="26"/></name><index pos:line="1233" pos:column="26">[<expr><name pos:line="1233" pos:column="27">c<pos:position pos:line="1233" pos:column="28"/></name></expr>]<pos:position pos:line="1233" pos:column="29"/></index></name> <operator pos:line="1233" pos:column="30">&amp;<pos:position pos:line="1233" pos:column="35"/></operator> <name pos:line="1233" pos:column="32">ctype_digit<pos:position pos:line="1233" pos:column="43"/></name><operator pos:line="1233" pos:column="43">)<pos:position pos:line="1233" pos:column="44"/></operator> <operator pos:line="1233" pos:column="45">==<pos:position pos:line="1233" pos:column="47"/></operator> <literal type="number" pos:line="1233" pos:column="48">0<pos:position pos:line="1233" pos:column="49"/></literal></expr>)<pos:position pos:line="1233" pos:column="50"/></condition><then pos:line="1233" pos:column="50"> <block type="pseudo"><return pos:line="1233" pos:column="51">return <expr><name pos:line="1233" pos:column="58">FALSE<pos:position pos:line="1233" pos:column="63"/></name></expr>;<pos:position pos:line="1233" pos:column="64"/></return></block></then></if>
          <break pos:line="1234" pos:column="11">break;<pos:position pos:line="1234" pos:column="17"/></break>

          <case pos:line="1236" pos:column="11">case <expr><name pos:line="1236" pos:column="16">OP_NOT_WHITESPACE<pos:position pos:line="1236" pos:column="33"/></name></expr>:<pos:position pos:line="1236" pos:column="34"/></case>
          <if pos:line="1237" pos:column="11">if <condition pos:line="1237" pos:column="14">(<expr><operator pos:line="1237" pos:column="15">(<pos:position pos:line="1237" pos:column="16"/></operator><name><name pos:line="1237" pos:column="16">md<pos:position pos:line="1237" pos:column="18"/></name><operator pos:line="1237" pos:column="18">-&gt;<pos:position pos:line="1237" pos:column="23"/></operator><name pos:line="1237" pos:column="20">ctypes<pos:position pos:line="1237" pos:column="26"/></name><index pos:line="1237" pos:column="26">[<expr><name pos:line="1237" pos:column="27">c<pos:position pos:line="1237" pos:column="28"/></name></expr>]<pos:position pos:line="1237" pos:column="29"/></index></name> <operator pos:line="1237" pos:column="30">&amp;<pos:position pos:line="1237" pos:column="35"/></operator> <name pos:line="1237" pos:column="32">ctype_space<pos:position pos:line="1237" pos:column="43"/></name><operator pos:line="1237" pos:column="43">)<pos:position pos:line="1237" pos:column="44"/></operator> <operator pos:line="1237" pos:column="45">!=<pos:position pos:line="1237" pos:column="47"/></operator> <literal type="number" pos:line="1237" pos:column="48">0<pos:position pos:line="1237" pos:column="49"/></literal></expr>)<pos:position pos:line="1237" pos:column="50"/></condition><then pos:line="1237" pos:column="50"> <block type="pseudo"><return pos:line="1237" pos:column="51">return <expr><name pos:line="1237" pos:column="58">FALSE<pos:position pos:line="1237" pos:column="63"/></name></expr>;<pos:position pos:line="1237" pos:column="64"/></return></block></then></if>
          <break pos:line="1238" pos:column="11">break;<pos:position pos:line="1238" pos:column="17"/></break>

          <case pos:line="1240" pos:column="11">case <expr><name pos:line="1240" pos:column="16">OP_WHITESPACE<pos:position pos:line="1240" pos:column="29"/></name></expr>:<pos:position pos:line="1240" pos:column="30"/></case>
          <if pos:line="1241" pos:column="11">if  <condition pos:line="1241" pos:column="15">(<expr><operator pos:line="1241" pos:column="16">(<pos:position pos:line="1241" pos:column="17"/></operator><name><name pos:line="1241" pos:column="17">md<pos:position pos:line="1241" pos:column="19"/></name><operator pos:line="1241" pos:column="19">-&gt;<pos:position pos:line="1241" pos:column="24"/></operator><name pos:line="1241" pos:column="21">ctypes<pos:position pos:line="1241" pos:column="27"/></name><index pos:line="1241" pos:column="27">[<expr><name pos:line="1241" pos:column="28">c<pos:position pos:line="1241" pos:column="29"/></name></expr>]<pos:position pos:line="1241" pos:column="30"/></index></name> <operator pos:line="1241" pos:column="31">&amp;<pos:position pos:line="1241" pos:column="36"/></operator> <name pos:line="1241" pos:column="33">ctype_space<pos:position pos:line="1241" pos:column="44"/></name><operator pos:line="1241" pos:column="44">)<pos:position pos:line="1241" pos:column="45"/></operator> <operator pos:line="1241" pos:column="46">==<pos:position pos:line="1241" pos:column="48"/></operator> <literal type="number" pos:line="1241" pos:column="49">0<pos:position pos:line="1241" pos:column="50"/></literal></expr>)<pos:position pos:line="1241" pos:column="51"/></condition><then pos:line="1241" pos:column="51"> <block type="pseudo"><return pos:line="1241" pos:column="52">return <expr><name pos:line="1241" pos:column="59">FALSE<pos:position pos:line="1241" pos:column="64"/></name></expr>;<pos:position pos:line="1241" pos:column="65"/></return></block></then></if>
          <break pos:line="1242" pos:column="11">break;<pos:position pos:line="1242" pos:column="17"/></break>

          <case pos:line="1244" pos:column="11">case <expr><name pos:line="1244" pos:column="16">OP_NOT_WORDCHAR<pos:position pos:line="1244" pos:column="31"/></name></expr>:<pos:position pos:line="1244" pos:column="32"/></case>
          <if pos:line="1245" pos:column="11">if <condition pos:line="1245" pos:column="14">(<expr><operator pos:line="1245" pos:column="15">(<pos:position pos:line="1245" pos:column="16"/></operator><name><name pos:line="1245" pos:column="16">md<pos:position pos:line="1245" pos:column="18"/></name><operator pos:line="1245" pos:column="18">-&gt;<pos:position pos:line="1245" pos:column="23"/></operator><name pos:line="1245" pos:column="20">ctypes<pos:position pos:line="1245" pos:column="26"/></name><index pos:line="1245" pos:column="26">[<expr><name pos:line="1245" pos:column="27">c<pos:position pos:line="1245" pos:column="28"/></name></expr>]<pos:position pos:line="1245" pos:column="29"/></index></name> <operator pos:line="1245" pos:column="30">&amp;<pos:position pos:line="1245" pos:column="35"/></operator> <name pos:line="1245" pos:column="32">ctype_word<pos:position pos:line="1245" pos:column="42"/></name><operator pos:line="1245" pos:column="42">)<pos:position pos:line="1245" pos:column="43"/></operator> <operator pos:line="1245" pos:column="44">!=<pos:position pos:line="1245" pos:column="46"/></operator> <literal type="number" pos:line="1245" pos:column="47">0<pos:position pos:line="1245" pos:column="48"/></literal></expr>)<pos:position pos:line="1245" pos:column="49"/></condition><then pos:line="1245" pos:column="49"> <block type="pseudo"><return pos:line="1245" pos:column="50">return <expr><name pos:line="1245" pos:column="57">FALSE<pos:position pos:line="1245" pos:column="62"/></name></expr>;<pos:position pos:line="1245" pos:column="63"/></return></block></then></if>
          <break pos:line="1246" pos:column="11">break;<pos:position pos:line="1246" pos:column="17"/></break>

          <case pos:line="1248" pos:column="11">case <expr><name pos:line="1248" pos:column="16">OP_WORDCHAR<pos:position pos:line="1248" pos:column="27"/></name></expr>:<pos:position pos:line="1248" pos:column="28"/></case>
          <if pos:line="1249" pos:column="11">if <condition pos:line="1249" pos:column="14">(<expr><operator pos:line="1249" pos:column="15">(<pos:position pos:line="1249" pos:column="16"/></operator><name><name pos:line="1249" pos:column="16">md<pos:position pos:line="1249" pos:column="18"/></name><operator pos:line="1249" pos:column="18">-&gt;<pos:position pos:line="1249" pos:column="23"/></operator><name pos:line="1249" pos:column="20">ctypes<pos:position pos:line="1249" pos:column="26"/></name><index pos:line="1249" pos:column="26">[<expr><name pos:line="1249" pos:column="27">c<pos:position pos:line="1249" pos:column="28"/></name></expr>]<pos:position pos:line="1249" pos:column="29"/></index></name> <operator pos:line="1249" pos:column="30">&amp;<pos:position pos:line="1249" pos:column="35"/></operator> <name pos:line="1249" pos:column="32">ctype_word<pos:position pos:line="1249" pos:column="42"/></name><operator pos:line="1249" pos:column="42">)<pos:position pos:line="1249" pos:column="43"/></operator> <operator pos:line="1249" pos:column="44">==<pos:position pos:line="1249" pos:column="46"/></operator> <literal type="number" pos:line="1249" pos:column="47">0<pos:position pos:line="1249" pos:column="48"/></literal></expr>)<pos:position pos:line="1249" pos:column="49"/></condition><then pos:line="1249" pos:column="49"> <block type="pseudo"><return pos:line="1249" pos:column="50">return <expr><name pos:line="1249" pos:column="57">FALSE<pos:position pos:line="1249" pos:column="62"/></name></expr>;<pos:position pos:line="1249" pos:column="63"/></return></block></then></if>
          <break pos:line="1250" pos:column="11">break;<pos:position pos:line="1250" pos:column="17"/></break>
          }<pos:position pos:line="1251" pos:column="12"/></block></switch>
        }<pos:position pos:line="1252" pos:column="10"/></block></for>
      <comment type="block" pos:line="1253" pos:column="7">/* Control never gets here */</comment>
      }<pos:position pos:line="1254" pos:column="8"/></block></then>

    <comment type="block" pos:line="1256" pos:column="5">/* If maximizing it is worth using inline code for speed, doing the type
    test once at the start (i.e. keep it out of the loop). */</comment>

    <else pos:line="1259" pos:column="5">else
      <block pos:line="1260" pos:column="7">{
      <decl_stmt><decl><type><specifier pos:line="1261" pos:column="7">const<pos:position pos:line="1261" pos:column="12"/></specifier> <name pos:line="1261" pos:column="13">uschar<pos:position pos:line="1261" pos:column="19"/></name> <modifier pos:line="1261" pos:column="20">*<pos:position pos:line="1261" pos:column="21"/></modifier></type><name pos:line="1261" pos:column="21">pp<pos:position pos:line="1261" pos:column="23"/></name> <init pos:line="1261" pos:column="24">= <expr><name pos:line="1261" pos:column="26">eptr<pos:position pos:line="1261" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="1261" pos:column="31"/></decl_stmt>
      <switch pos:line="1262" pos:column="7">switch<condition pos:line="1262" pos:column="13">(<expr><name pos:line="1262" pos:column="14">ctype<pos:position pos:line="1262" pos:column="19"/></name></expr>)<pos:position pos:line="1262" pos:column="20"/></condition>
        <block pos:line="1263" pos:column="9">{
        <case pos:line="1264" pos:column="9">case <expr><name pos:line="1264" pos:column="14">OP_ANY<pos:position pos:line="1264" pos:column="20"/></name></expr>:<pos:position pos:line="1264" pos:column="21"/></case>

        <comment type="block" pos:line="1266" pos:column="9">/* Special code is required for UTF8, but when the maximum is unlimited
        we don't need it. */</comment>

<cpp:ifdef pos:line="1269" pos:column="1">#<cpp:directive pos:line="1269" pos:column="2">ifdef<pos:position pos:line="1269" pos:column="7"/></cpp:directive> <name pos:line="1269" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1269" pos:column="20"/></name></cpp:ifdef>
        <if pos:line="1270" pos:column="9">if <condition pos:line="1270" pos:column="12">(<expr><name><name pos:line="1270" pos:column="13">md<pos:position pos:line="1270" pos:column="15"/></name><operator pos:line="1270" pos:column="15">-&gt;<pos:position pos:line="1270" pos:column="20"/></operator><name pos:line="1270" pos:column="17">utf8<pos:position pos:line="1270" pos:column="21"/></name></name> <operator pos:line="1270" pos:column="22">&amp;&amp;<pos:position pos:line="1270" pos:column="32"/></operator> <name pos:line="1270" pos:column="25">max<pos:position pos:line="1270" pos:column="28"/></name> <operator pos:line="1270" pos:column="29">&lt;<pos:position pos:line="1270" pos:column="33"/></operator> <name pos:line="1270" pos:column="31">INT_MAX<pos:position pos:line="1270" pos:column="38"/></name></expr>)<pos:position pos:line="1270" pos:column="39"/></condition><then pos:line="1270" pos:column="39">
          <block pos:line="1271" pos:column="11">{
          <if pos:line="1272" pos:column="11">if <condition pos:line="1272" pos:column="14">(<expr><operator pos:line="1272" pos:column="15">(<pos:position pos:line="1272" pos:column="16"/></operator><name pos:line="1272" pos:column="16">ims<pos:position pos:line="1272" pos:column="19"/></name> <operator pos:line="1272" pos:column="20">&amp;<pos:position pos:line="1272" pos:column="25"/></operator> <name pos:line="1272" pos:column="22">PCRE_DOTALL<pos:position pos:line="1272" pos:column="33"/></name><operator pos:line="1272" pos:column="33">)<pos:position pos:line="1272" pos:column="34"/></operator> <operator pos:line="1272" pos:column="35">==<pos:position pos:line="1272" pos:column="37"/></operator> <literal type="number" pos:line="1272" pos:column="38">0<pos:position pos:line="1272" pos:column="39"/></literal></expr>)<pos:position pos:line="1272" pos:column="40"/></condition><then pos:line="1272" pos:column="40">
            <block pos:line="1273" pos:column="13">{
            <for pos:line="1274" pos:column="13">for <control pos:line="1274" pos:column="17">(<init><expr><name pos:line="1274" pos:column="18">i<pos:position pos:line="1274" pos:column="19"/></name> <operator pos:line="1274" pos:column="20">=<pos:position pos:line="1274" pos:column="21"/></operator> <name pos:line="1274" pos:column="22">min<pos:position pos:line="1274" pos:column="25"/></name></expr>;<pos:position pos:line="1274" pos:column="26"/></init> <condition><expr><name pos:line="1274" pos:column="27">i<pos:position pos:line="1274" pos:column="28"/></name> <operator pos:line="1274" pos:column="29">&lt;<pos:position pos:line="1274" pos:column="33"/></operator> <name pos:line="1274" pos:column="31">max<pos:position pos:line="1274" pos:column="34"/></name></expr>;<pos:position pos:line="1274" pos:column="35"/></condition> <incr><expr><name pos:line="1274" pos:column="36">i<pos:position pos:line="1274" pos:column="37"/></name><operator pos:line="1274" pos:column="37">++<pos:position pos:line="1274" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="1274" pos:column="40"/></control>
              <block pos:line="1275" pos:column="15">{
              <if pos:line="1276" pos:column="15">if <condition pos:line="1276" pos:column="18">(<expr><name pos:line="1276" pos:column="19">eptr<pos:position pos:line="1276" pos:column="23"/></name> <operator pos:line="1276" pos:column="24">&gt;=<pos:position pos:line="1276" pos:column="29"/></operator> <name><name pos:line="1276" pos:column="27">md<pos:position pos:line="1276" pos:column="29"/></name><operator pos:line="1276" pos:column="29">-&gt;<pos:position pos:line="1276" pos:column="34"/></operator><name pos:line="1276" pos:column="31">end_subject<pos:position pos:line="1276" pos:column="42"/></name></name> <operator pos:line="1276" pos:column="43">||<pos:position pos:line="1276" pos:column="45"/></operator> <operator pos:line="1276" pos:column="46">*<pos:position pos:line="1276" pos:column="47"/></operator><name pos:line="1276" pos:column="47">eptr<pos:position pos:line="1276" pos:column="51"/></name><operator pos:line="1276" pos:column="51">++<pos:position pos:line="1276" pos:column="53"/></operator> <operator pos:line="1276" pos:column="54">==<pos:position pos:line="1276" pos:column="56"/></operator> <name pos:line="1276" pos:column="57">NEWLINE<pos:position pos:line="1276" pos:column="64"/></name></expr>)<pos:position pos:line="1276" pos:column="65"/></condition><then pos:line="1276" pos:column="65"> <block type="pseudo"><break pos:line="1276" pos:column="66">break;<pos:position pos:line="1276" pos:column="72"/></break></block></then></if>
              <while pos:line="1277" pos:column="15">while <condition pos:line="1277" pos:column="21">(<expr><name pos:line="1277" pos:column="22">eptr<pos:position pos:line="1277" pos:column="26"/></name> <operator pos:line="1277" pos:column="27">&lt;<pos:position pos:line="1277" pos:column="31"/></operator> <name><name pos:line="1277" pos:column="29">md<pos:position pos:line="1277" pos:column="31"/></name><operator pos:line="1277" pos:column="31">-&gt;<pos:position pos:line="1277" pos:column="36"/></operator><name pos:line="1277" pos:column="33">end_subject<pos:position pos:line="1277" pos:column="44"/></name></name> <operator pos:line="1277" pos:column="45">&amp;&amp;<pos:position pos:line="1277" pos:column="55"/></operator> <operator pos:line="1277" pos:column="48">(<pos:position pos:line="1277" pos:column="49"/></operator><operator pos:line="1277" pos:column="49">*<pos:position pos:line="1277" pos:column="50"/></operator><name pos:line="1277" pos:column="50">eptr<pos:position pos:line="1277" pos:column="54"/></name> <operator pos:line="1277" pos:column="55">&amp;<pos:position pos:line="1277" pos:column="60"/></operator> <literal type="number" pos:line="1277" pos:column="57">0xc0<pos:position pos:line="1277" pos:column="61"/></literal><operator pos:line="1277" pos:column="61">)<pos:position pos:line="1277" pos:column="62"/></operator> <operator pos:line="1277" pos:column="63">==<pos:position pos:line="1277" pos:column="65"/></operator> <literal type="number" pos:line="1277" pos:column="66">0x80<pos:position pos:line="1277" pos:column="70"/></literal></expr>)<pos:position pos:line="1277" pos:column="71"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="1277" pos:column="72">eptr<pos:position pos:line="1277" pos:column="76"/></name><operator pos:line="1277" pos:column="76">++<pos:position pos:line="1277" pos:column="78"/></operator></expr>;<pos:position pos:line="1277" pos:column="79"/></expr_stmt></block></while>
              }<pos:position pos:line="1278" pos:column="16"/></block></for>
            }<pos:position pos:line="1279" pos:column="14"/></block></then>
          <else pos:line="1280" pos:column="11">else
            <block pos:line="1281" pos:column="13">{
            <for pos:line="1282" pos:column="13">for <control pos:line="1282" pos:column="17">(<init><expr><name pos:line="1282" pos:column="18">i<pos:position pos:line="1282" pos:column="19"/></name> <operator pos:line="1282" pos:column="20">=<pos:position pos:line="1282" pos:column="21"/></operator> <name pos:line="1282" pos:column="22">min<pos:position pos:line="1282" pos:column="25"/></name></expr>;<pos:position pos:line="1282" pos:column="26"/></init> <condition><expr><name pos:line="1282" pos:column="27">i<pos:position pos:line="1282" pos:column="28"/></name> <operator pos:line="1282" pos:column="29">&lt;<pos:position pos:line="1282" pos:column="33"/></operator> <name pos:line="1282" pos:column="31">max<pos:position pos:line="1282" pos:column="34"/></name></expr>;<pos:position pos:line="1282" pos:column="35"/></condition> <incr><expr><name pos:line="1282" pos:column="36">i<pos:position pos:line="1282" pos:column="37"/></name><operator pos:line="1282" pos:column="37">++<pos:position pos:line="1282" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="1282" pos:column="40"/></control>
              <block pos:line="1283" pos:column="15">{
              <expr_stmt><expr><name pos:line="1284" pos:column="15">eptr<pos:position pos:line="1284" pos:column="19"/></name><operator pos:line="1284" pos:column="19">++<pos:position pos:line="1284" pos:column="21"/></operator></expr>;<pos:position pos:line="1284" pos:column="22"/></expr_stmt>
              <while pos:line="1285" pos:column="15">while <condition pos:line="1285" pos:column="21">(<expr><name pos:line="1285" pos:column="22">eptr<pos:position pos:line="1285" pos:column="26"/></name> <operator pos:line="1285" pos:column="27">&lt;<pos:position pos:line="1285" pos:column="31"/></operator> <name><name pos:line="1285" pos:column="29">md<pos:position pos:line="1285" pos:column="31"/></name><operator pos:line="1285" pos:column="31">-&gt;<pos:position pos:line="1285" pos:column="36"/></operator><name pos:line="1285" pos:column="33">end_subject<pos:position pos:line="1285" pos:column="44"/></name></name> <operator pos:line="1285" pos:column="45">&amp;&amp;<pos:position pos:line="1285" pos:column="55"/></operator> <operator pos:line="1285" pos:column="48">(<pos:position pos:line="1285" pos:column="49"/></operator><operator pos:line="1285" pos:column="49">*<pos:position pos:line="1285" pos:column="50"/></operator><name pos:line="1285" pos:column="50">eptr<pos:position pos:line="1285" pos:column="54"/></name> <operator pos:line="1285" pos:column="55">&amp;<pos:position pos:line="1285" pos:column="60"/></operator> <literal type="number" pos:line="1285" pos:column="57">0xc0<pos:position pos:line="1285" pos:column="61"/></literal><operator pos:line="1285" pos:column="61">)<pos:position pos:line="1285" pos:column="62"/></operator> <operator pos:line="1285" pos:column="63">==<pos:position pos:line="1285" pos:column="65"/></operator> <literal type="number" pos:line="1285" pos:column="66">0x80<pos:position pos:line="1285" pos:column="70"/></literal></expr>)<pos:position pos:line="1285" pos:column="71"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="1285" pos:column="72">eptr<pos:position pos:line="1285" pos:column="76"/></name><operator pos:line="1285" pos:column="76">++<pos:position pos:line="1285" pos:column="78"/></operator></expr>;<pos:position pos:line="1285" pos:column="79"/></expr_stmt></block></while>
              }<pos:position pos:line="1286" pos:column="16"/></block></for>
            }<pos:position pos:line="1287" pos:column="14"/></block></else></if>
          <break pos:line="1288" pos:column="11">break;<pos:position pos:line="1288" pos:column="17"/></break>
          }<pos:position pos:line="1289" pos:column="12"/></block></then></if>
<cpp:endif pos:line="1290" pos:column="1">#<cpp:directive pos:line="1290" pos:column="2">endif<pos:position pos:line="1290" pos:column="7"/></cpp:directive></cpp:endif>
        <comment type="block" pos:line="1291" pos:column="9">/* Non-UTF8 can be faster */</comment>
        <if pos:line="1292" pos:column="9">if <condition pos:line="1292" pos:column="12">(<expr><operator pos:line="1292" pos:column="13">(<pos:position pos:line="1292" pos:column="14"/></operator><name pos:line="1292" pos:column="14">ims<pos:position pos:line="1292" pos:column="17"/></name> <operator pos:line="1292" pos:column="18">&amp;<pos:position pos:line="1292" pos:column="23"/></operator> <name pos:line="1292" pos:column="20">PCRE_DOTALL<pos:position pos:line="1292" pos:column="31"/></name><operator pos:line="1292" pos:column="31">)<pos:position pos:line="1292" pos:column="32"/></operator> <operator pos:line="1292" pos:column="33">==<pos:position pos:line="1292" pos:column="35"/></operator> <literal type="number" pos:line="1292" pos:column="36">0<pos:position pos:line="1292" pos:column="37"/></literal></expr>)<pos:position pos:line="1292" pos:column="38"/></condition><then pos:line="1292" pos:column="38">
          <block pos:line="1293" pos:column="11">{
          <for pos:line="1294" pos:column="11">for <control pos:line="1294" pos:column="15">(<init><expr><name pos:line="1294" pos:column="16">i<pos:position pos:line="1294" pos:column="17"/></name> <operator pos:line="1294" pos:column="18">=<pos:position pos:line="1294" pos:column="19"/></operator> <name pos:line="1294" pos:column="20">min<pos:position pos:line="1294" pos:column="23"/></name></expr>;<pos:position pos:line="1294" pos:column="24"/></init> <condition><expr><name pos:line="1294" pos:column="25">i<pos:position pos:line="1294" pos:column="26"/></name> <operator pos:line="1294" pos:column="27">&lt;<pos:position pos:line="1294" pos:column="31"/></operator> <name pos:line="1294" pos:column="29">max<pos:position pos:line="1294" pos:column="32"/></name></expr>;<pos:position pos:line="1294" pos:column="33"/></condition> <incr><expr><name pos:line="1294" pos:column="34">i<pos:position pos:line="1294" pos:column="35"/></name><operator pos:line="1294" pos:column="35">++<pos:position pos:line="1294" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="1294" pos:column="38"/></control>
            <block pos:line="1295" pos:column="13">{
            <if pos:line="1296" pos:column="13">if <condition pos:line="1296" pos:column="16">(<expr><name pos:line="1296" pos:column="17">eptr<pos:position pos:line="1296" pos:column="21"/></name> <operator pos:line="1296" pos:column="22">&gt;=<pos:position pos:line="1296" pos:column="27"/></operator> <name><name pos:line="1296" pos:column="25">md<pos:position pos:line="1296" pos:column="27"/></name><operator pos:line="1296" pos:column="27">-&gt;<pos:position pos:line="1296" pos:column="32"/></operator><name pos:line="1296" pos:column="29">end_subject<pos:position pos:line="1296" pos:column="40"/></name></name> <operator pos:line="1296" pos:column="41">||<pos:position pos:line="1296" pos:column="43"/></operator> <operator pos:line="1296" pos:column="44">*<pos:position pos:line="1296" pos:column="45"/></operator><name pos:line="1296" pos:column="45">eptr<pos:position pos:line="1296" pos:column="49"/></name> <operator pos:line="1296" pos:column="50">==<pos:position pos:line="1296" pos:column="52"/></operator> <name pos:line="1296" pos:column="53">NEWLINE<pos:position pos:line="1296" pos:column="60"/></name></expr>)<pos:position pos:line="1296" pos:column="61"/></condition><then pos:line="1296" pos:column="61"> <block type="pseudo"><break pos:line="1296" pos:column="62">break;<pos:position pos:line="1296" pos:column="68"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="1297" pos:column="13">eptr<pos:position pos:line="1297" pos:column="17"/></name><operator pos:line="1297" pos:column="17">++<pos:position pos:line="1297" pos:column="19"/></operator></expr>;<pos:position pos:line="1297" pos:column="20"/></expr_stmt>
            }<pos:position pos:line="1298" pos:column="14"/></block></for>
          }<pos:position pos:line="1299" pos:column="12"/></block></then>
        <else pos:line="1300" pos:column="9">else
          <block pos:line="1301" pos:column="11">{
          <expr_stmt><expr><name pos:line="1302" pos:column="11">c<pos:position pos:line="1302" pos:column="12"/></name> <operator pos:line="1302" pos:column="13">=<pos:position pos:line="1302" pos:column="14"/></operator> <name pos:line="1302" pos:column="15">max<pos:position pos:line="1302" pos:column="18"/></name> <operator pos:line="1302" pos:column="19">-<pos:position pos:line="1302" pos:column="20"/></operator> <name pos:line="1302" pos:column="21">min<pos:position pos:line="1302" pos:column="24"/></name></expr>;<pos:position pos:line="1302" pos:column="25"/></expr_stmt>
          <if pos:line="1303" pos:column="11">if <condition pos:line="1303" pos:column="14">(<expr><name pos:line="1303" pos:column="15">c<pos:position pos:line="1303" pos:column="16"/></name> <operator pos:line="1303" pos:column="17">&gt;<pos:position pos:line="1303" pos:column="21"/></operator> <name><name pos:line="1303" pos:column="19">md<pos:position pos:line="1303" pos:column="21"/></name><operator pos:line="1303" pos:column="21">-&gt;<pos:position pos:line="1303" pos:column="26"/></operator><name pos:line="1303" pos:column="23">end_subject<pos:position pos:line="1303" pos:column="34"/></name></name> <operator pos:line="1303" pos:column="35">-<pos:position pos:line="1303" pos:column="36"/></operator> <name pos:line="1303" pos:column="37">eptr<pos:position pos:line="1303" pos:column="41"/></name></expr>)<pos:position pos:line="1303" pos:column="42"/></condition><then pos:line="1303" pos:column="42"> <block type="pseudo"><expr_stmt><expr><name pos:line="1303" pos:column="43">c<pos:position pos:line="1303" pos:column="44"/></name> <operator pos:line="1303" pos:column="45">=<pos:position pos:line="1303" pos:column="46"/></operator> <name><name pos:line="1303" pos:column="47">md<pos:position pos:line="1303" pos:column="49"/></name><operator pos:line="1303" pos:column="49">-&gt;<pos:position pos:line="1303" pos:column="54"/></operator><name pos:line="1303" pos:column="51">end_subject<pos:position pos:line="1303" pos:column="62"/></name></name> <operator pos:line="1303" pos:column="63">-<pos:position pos:line="1303" pos:column="64"/></operator> <name pos:line="1303" pos:column="65">eptr<pos:position pos:line="1303" pos:column="69"/></name></expr>;<pos:position pos:line="1303" pos:column="70"/></expr_stmt></block></then></if>
          <expr_stmt><expr><name pos:line="1304" pos:column="11">eptr<pos:position pos:line="1304" pos:column="15"/></name> <operator pos:line="1304" pos:column="16">+=<pos:position pos:line="1304" pos:column="18"/></operator> <name pos:line="1304" pos:column="19">c<pos:position pos:line="1304" pos:column="20"/></name></expr>;<pos:position pos:line="1304" pos:column="21"/></expr_stmt>
          }<pos:position pos:line="1305" pos:column="12"/></block></else></if>
        <break pos:line="1306" pos:column="9">break;<pos:position pos:line="1306" pos:column="15"/></break>

        <case pos:line="1308" pos:column="9">case <expr><name pos:line="1308" pos:column="14">OP_NOT_DIGIT<pos:position pos:line="1308" pos:column="26"/></name></expr>:<pos:position pos:line="1308" pos:column="27"/></case>
        <for pos:line="1309" pos:column="9">for <control pos:line="1309" pos:column="13">(<init><expr><name pos:line="1309" pos:column="14">i<pos:position pos:line="1309" pos:column="15"/></name> <operator pos:line="1309" pos:column="16">=<pos:position pos:line="1309" pos:column="17"/></operator> <name pos:line="1309" pos:column="18">min<pos:position pos:line="1309" pos:column="21"/></name></expr>;<pos:position pos:line="1309" pos:column="22"/></init> <condition><expr><name pos:line="1309" pos:column="23">i<pos:position pos:line="1309" pos:column="24"/></name> <operator pos:line="1309" pos:column="25">&lt;<pos:position pos:line="1309" pos:column="29"/></operator> <name pos:line="1309" pos:column="27">max<pos:position pos:line="1309" pos:column="30"/></name></expr>;<pos:position pos:line="1309" pos:column="31"/></condition> <incr><expr><name pos:line="1309" pos:column="32">i<pos:position pos:line="1309" pos:column="33"/></name><operator pos:line="1309" pos:column="33">++<pos:position pos:line="1309" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="1309" pos:column="36"/></control>
          <block pos:line="1310" pos:column="11">{
          <if pos:line="1311" pos:column="11">if <condition pos:line="1311" pos:column="14">(<expr><name pos:line="1311" pos:column="15">eptr<pos:position pos:line="1311" pos:column="19"/></name> <operator pos:line="1311" pos:column="20">&gt;=<pos:position pos:line="1311" pos:column="25"/></operator> <name><name pos:line="1311" pos:column="23">md<pos:position pos:line="1311" pos:column="25"/></name><operator pos:line="1311" pos:column="25">-&gt;<pos:position pos:line="1311" pos:column="30"/></operator><name pos:line="1311" pos:column="27">end_subject<pos:position pos:line="1311" pos:column="38"/></name></name> <operator pos:line="1311" pos:column="39">||<pos:position pos:line="1311" pos:column="41"/></operator> <operator pos:line="1311" pos:column="42">(<pos:position pos:line="1311" pos:column="43"/></operator><name><name pos:line="1311" pos:column="43">md<pos:position pos:line="1311" pos:column="45"/></name><operator pos:line="1311" pos:column="45">-&gt;<pos:position pos:line="1311" pos:column="50"/></operator><name pos:line="1311" pos:column="47">ctypes<pos:position pos:line="1311" pos:column="53"/></name><index pos:line="1311" pos:column="53">[<expr><operator pos:line="1311" pos:column="54">*<pos:position pos:line="1311" pos:column="55"/></operator><name pos:line="1311" pos:column="55">eptr<pos:position pos:line="1311" pos:column="59"/></name></expr>]<pos:position pos:line="1311" pos:column="60"/></index></name> <operator pos:line="1311" pos:column="61">&amp;<pos:position pos:line="1311" pos:column="66"/></operator> <name pos:line="1311" pos:column="63">ctype_digit<pos:position pos:line="1311" pos:column="74"/></name><operator pos:line="1311" pos:column="74">)<pos:position pos:line="1311" pos:column="75"/></operator> <operator pos:line="1311" pos:column="76">!=<pos:position pos:line="1311" pos:column="78"/></operator> <literal type="number" pos:line="1311" pos:column="79">0<pos:position pos:line="1311" pos:column="80"/></literal></expr>)<pos:position pos:line="1311" pos:column="81"/></condition><then pos:line="1311" pos:column="81">
            <block type="pseudo"><break pos:line="1312" pos:column="13">break;<pos:position pos:line="1312" pos:column="19"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="1313" pos:column="11">eptr<pos:position pos:line="1313" pos:column="15"/></name><operator pos:line="1313" pos:column="15">++<pos:position pos:line="1313" pos:column="17"/></operator></expr>;<pos:position pos:line="1313" pos:column="18"/></expr_stmt>
          }<pos:position pos:line="1314" pos:column="12"/></block></for>
        <break pos:line="1315" pos:column="9">break;<pos:position pos:line="1315" pos:column="15"/></break>

        <case pos:line="1317" pos:column="9">case <expr><name pos:line="1317" pos:column="14">OP_DIGIT<pos:position pos:line="1317" pos:column="22"/></name></expr>:<pos:position pos:line="1317" pos:column="23"/></case>
        <for pos:line="1318" pos:column="9">for <control pos:line="1318" pos:column="13">(<init><expr><name pos:line="1318" pos:column="14">i<pos:position pos:line="1318" pos:column="15"/></name> <operator pos:line="1318" pos:column="16">=<pos:position pos:line="1318" pos:column="17"/></operator> <name pos:line="1318" pos:column="18">min<pos:position pos:line="1318" pos:column="21"/></name></expr>;<pos:position pos:line="1318" pos:column="22"/></init> <condition><expr><name pos:line="1318" pos:column="23">i<pos:position pos:line="1318" pos:column="24"/></name> <operator pos:line="1318" pos:column="25">&lt;<pos:position pos:line="1318" pos:column="29"/></operator> <name pos:line="1318" pos:column="27">max<pos:position pos:line="1318" pos:column="30"/></name></expr>;<pos:position pos:line="1318" pos:column="31"/></condition> <incr><expr><name pos:line="1318" pos:column="32">i<pos:position pos:line="1318" pos:column="33"/></name><operator pos:line="1318" pos:column="33">++<pos:position pos:line="1318" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="1318" pos:column="36"/></control>
          <block pos:line="1319" pos:column="11">{
          <if pos:line="1320" pos:column="11">if <condition pos:line="1320" pos:column="14">(<expr><name pos:line="1320" pos:column="15">eptr<pos:position pos:line="1320" pos:column="19"/></name> <operator pos:line="1320" pos:column="20">&gt;=<pos:position pos:line="1320" pos:column="25"/></operator> <name><name pos:line="1320" pos:column="23">md<pos:position pos:line="1320" pos:column="25"/></name><operator pos:line="1320" pos:column="25">-&gt;<pos:position pos:line="1320" pos:column="30"/></operator><name pos:line="1320" pos:column="27">end_subject<pos:position pos:line="1320" pos:column="38"/></name></name> <operator pos:line="1320" pos:column="39">||<pos:position pos:line="1320" pos:column="41"/></operator> <operator pos:line="1320" pos:column="42">(<pos:position pos:line="1320" pos:column="43"/></operator><name><name pos:line="1320" pos:column="43">md<pos:position pos:line="1320" pos:column="45"/></name><operator pos:line="1320" pos:column="45">-&gt;<pos:position pos:line="1320" pos:column="50"/></operator><name pos:line="1320" pos:column="47">ctypes<pos:position pos:line="1320" pos:column="53"/></name><index pos:line="1320" pos:column="53">[<expr><operator pos:line="1320" pos:column="54">*<pos:position pos:line="1320" pos:column="55"/></operator><name pos:line="1320" pos:column="55">eptr<pos:position pos:line="1320" pos:column="59"/></name></expr>]<pos:position pos:line="1320" pos:column="60"/></index></name> <operator pos:line="1320" pos:column="61">&amp;<pos:position pos:line="1320" pos:column="66"/></operator> <name pos:line="1320" pos:column="63">ctype_digit<pos:position pos:line="1320" pos:column="74"/></name><operator pos:line="1320" pos:column="74">)<pos:position pos:line="1320" pos:column="75"/></operator> <operator pos:line="1320" pos:column="76">==<pos:position pos:line="1320" pos:column="78"/></operator> <literal type="number" pos:line="1320" pos:column="79">0<pos:position pos:line="1320" pos:column="80"/></literal></expr>)<pos:position pos:line="1320" pos:column="81"/></condition><then pos:line="1320" pos:column="81">
            <block type="pseudo"><break pos:line="1321" pos:column="13">break;<pos:position pos:line="1321" pos:column="19"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="1322" pos:column="11">eptr<pos:position pos:line="1322" pos:column="15"/></name><operator pos:line="1322" pos:column="15">++<pos:position pos:line="1322" pos:column="17"/></operator></expr>;<pos:position pos:line="1322" pos:column="18"/></expr_stmt>
          }<pos:position pos:line="1323" pos:column="12"/></block></for>
        <break pos:line="1324" pos:column="9">break;<pos:position pos:line="1324" pos:column="15"/></break>

        <case pos:line="1326" pos:column="9">case <expr><name pos:line="1326" pos:column="14">OP_NOT_WHITESPACE<pos:position pos:line="1326" pos:column="31"/></name></expr>:<pos:position pos:line="1326" pos:column="32"/></case>
        <for pos:line="1327" pos:column="9">for <control pos:line="1327" pos:column="13">(<init><expr><name pos:line="1327" pos:column="14">i<pos:position pos:line="1327" pos:column="15"/></name> <operator pos:line="1327" pos:column="16">=<pos:position pos:line="1327" pos:column="17"/></operator> <name pos:line="1327" pos:column="18">min<pos:position pos:line="1327" pos:column="21"/></name></expr>;<pos:position pos:line="1327" pos:column="22"/></init> <condition><expr><name pos:line="1327" pos:column="23">i<pos:position pos:line="1327" pos:column="24"/></name> <operator pos:line="1327" pos:column="25">&lt;<pos:position pos:line="1327" pos:column="29"/></operator> <name pos:line="1327" pos:column="27">max<pos:position pos:line="1327" pos:column="30"/></name></expr>;<pos:position pos:line="1327" pos:column="31"/></condition> <incr><expr><name pos:line="1327" pos:column="32">i<pos:position pos:line="1327" pos:column="33"/></name><operator pos:line="1327" pos:column="33">++<pos:position pos:line="1327" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="1327" pos:column="36"/></control>
          <block pos:line="1328" pos:column="11">{
          <if pos:line="1329" pos:column="11">if <condition pos:line="1329" pos:column="14">(<expr><name pos:line="1329" pos:column="15">eptr<pos:position pos:line="1329" pos:column="19"/></name> <operator pos:line="1329" pos:column="20">&gt;=<pos:position pos:line="1329" pos:column="25"/></operator> <name><name pos:line="1329" pos:column="23">md<pos:position pos:line="1329" pos:column="25"/></name><operator pos:line="1329" pos:column="25">-&gt;<pos:position pos:line="1329" pos:column="30"/></operator><name pos:line="1329" pos:column="27">end_subject<pos:position pos:line="1329" pos:column="38"/></name></name> <operator pos:line="1329" pos:column="39">||<pos:position pos:line="1329" pos:column="41"/></operator> <operator pos:line="1329" pos:column="42">(<pos:position pos:line="1329" pos:column="43"/></operator><name><name pos:line="1329" pos:column="43">md<pos:position pos:line="1329" pos:column="45"/></name><operator pos:line="1329" pos:column="45">-&gt;<pos:position pos:line="1329" pos:column="50"/></operator><name pos:line="1329" pos:column="47">ctypes<pos:position pos:line="1329" pos:column="53"/></name><index pos:line="1329" pos:column="53">[<expr><operator pos:line="1329" pos:column="54">*<pos:position pos:line="1329" pos:column="55"/></operator><name pos:line="1329" pos:column="55">eptr<pos:position pos:line="1329" pos:column="59"/></name></expr>]<pos:position pos:line="1329" pos:column="60"/></index></name> <operator pos:line="1329" pos:column="61">&amp;<pos:position pos:line="1329" pos:column="66"/></operator> <name pos:line="1329" pos:column="63">ctype_space<pos:position pos:line="1329" pos:column="74"/></name><operator pos:line="1329" pos:column="74">)<pos:position pos:line="1329" pos:column="75"/></operator> <operator pos:line="1329" pos:column="76">!=<pos:position pos:line="1329" pos:column="78"/></operator> <literal type="number" pos:line="1329" pos:column="79">0<pos:position pos:line="1329" pos:column="80"/></literal></expr>)<pos:position pos:line="1329" pos:column="81"/></condition><then pos:line="1329" pos:column="81">
            <block type="pseudo"><break pos:line="1330" pos:column="13">break;<pos:position pos:line="1330" pos:column="19"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="1331" pos:column="11">eptr<pos:position pos:line="1331" pos:column="15"/></name><operator pos:line="1331" pos:column="15">++<pos:position pos:line="1331" pos:column="17"/></operator></expr>;<pos:position pos:line="1331" pos:column="18"/></expr_stmt>
          }<pos:position pos:line="1332" pos:column="12"/></block></for>
        <break pos:line="1333" pos:column="9">break;<pos:position pos:line="1333" pos:column="15"/></break>

        <case pos:line="1335" pos:column="9">case <expr><name pos:line="1335" pos:column="14">OP_WHITESPACE<pos:position pos:line="1335" pos:column="27"/></name></expr>:<pos:position pos:line="1335" pos:column="28"/></case>
        <for pos:line="1336" pos:column="9">for <control pos:line="1336" pos:column="13">(<init><expr><name pos:line="1336" pos:column="14">i<pos:position pos:line="1336" pos:column="15"/></name> <operator pos:line="1336" pos:column="16">=<pos:position pos:line="1336" pos:column="17"/></operator> <name pos:line="1336" pos:column="18">min<pos:position pos:line="1336" pos:column="21"/></name></expr>;<pos:position pos:line="1336" pos:column="22"/></init> <condition><expr><name pos:line="1336" pos:column="23">i<pos:position pos:line="1336" pos:column="24"/></name> <operator pos:line="1336" pos:column="25">&lt;<pos:position pos:line="1336" pos:column="29"/></operator> <name pos:line="1336" pos:column="27">max<pos:position pos:line="1336" pos:column="30"/></name></expr>;<pos:position pos:line="1336" pos:column="31"/></condition> <incr><expr><name pos:line="1336" pos:column="32">i<pos:position pos:line="1336" pos:column="33"/></name><operator pos:line="1336" pos:column="33">++<pos:position pos:line="1336" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="1336" pos:column="36"/></control>
          <block pos:line="1337" pos:column="11">{
          <if pos:line="1338" pos:column="11">if <condition pos:line="1338" pos:column="14">(<expr><name pos:line="1338" pos:column="15">eptr<pos:position pos:line="1338" pos:column="19"/></name> <operator pos:line="1338" pos:column="20">&gt;=<pos:position pos:line="1338" pos:column="25"/></operator> <name><name pos:line="1338" pos:column="23">md<pos:position pos:line="1338" pos:column="25"/></name><operator pos:line="1338" pos:column="25">-&gt;<pos:position pos:line="1338" pos:column="30"/></operator><name pos:line="1338" pos:column="27">end_subject<pos:position pos:line="1338" pos:column="38"/></name></name> <operator pos:line="1338" pos:column="39">||<pos:position pos:line="1338" pos:column="41"/></operator> <operator pos:line="1338" pos:column="42">(<pos:position pos:line="1338" pos:column="43"/></operator><name><name pos:line="1338" pos:column="43">md<pos:position pos:line="1338" pos:column="45"/></name><operator pos:line="1338" pos:column="45">-&gt;<pos:position pos:line="1338" pos:column="50"/></operator><name pos:line="1338" pos:column="47">ctypes<pos:position pos:line="1338" pos:column="53"/></name><index pos:line="1338" pos:column="53">[<expr><operator pos:line="1338" pos:column="54">*<pos:position pos:line="1338" pos:column="55"/></operator><name pos:line="1338" pos:column="55">eptr<pos:position pos:line="1338" pos:column="59"/></name></expr>]<pos:position pos:line="1338" pos:column="60"/></index></name> <operator pos:line="1338" pos:column="61">&amp;<pos:position pos:line="1338" pos:column="66"/></operator> <name pos:line="1338" pos:column="63">ctype_space<pos:position pos:line="1338" pos:column="74"/></name><operator pos:line="1338" pos:column="74">)<pos:position pos:line="1338" pos:column="75"/></operator> <operator pos:line="1338" pos:column="76">==<pos:position pos:line="1338" pos:column="78"/></operator> <literal type="number" pos:line="1338" pos:column="79">0<pos:position pos:line="1338" pos:column="80"/></literal></expr>)<pos:position pos:line="1338" pos:column="81"/></condition><then pos:line="1338" pos:column="81">
            <block type="pseudo"><break pos:line="1339" pos:column="13">break;<pos:position pos:line="1339" pos:column="19"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="1340" pos:column="11">eptr<pos:position pos:line="1340" pos:column="15"/></name><operator pos:line="1340" pos:column="15">++<pos:position pos:line="1340" pos:column="17"/></operator></expr>;<pos:position pos:line="1340" pos:column="18"/></expr_stmt>
          }<pos:position pos:line="1341" pos:column="12"/></block></for>
        <break pos:line="1342" pos:column="9">break;<pos:position pos:line="1342" pos:column="15"/></break>

        <case pos:line="1344" pos:column="9">case <expr><name pos:line="1344" pos:column="14">OP_NOT_WORDCHAR<pos:position pos:line="1344" pos:column="29"/></name></expr>:<pos:position pos:line="1344" pos:column="30"/></case>
        <for pos:line="1345" pos:column="9">for <control pos:line="1345" pos:column="13">(<init><expr><name pos:line="1345" pos:column="14">i<pos:position pos:line="1345" pos:column="15"/></name> <operator pos:line="1345" pos:column="16">=<pos:position pos:line="1345" pos:column="17"/></operator> <name pos:line="1345" pos:column="18">min<pos:position pos:line="1345" pos:column="21"/></name></expr>;<pos:position pos:line="1345" pos:column="22"/></init> <condition><expr><name pos:line="1345" pos:column="23">i<pos:position pos:line="1345" pos:column="24"/></name> <operator pos:line="1345" pos:column="25">&lt;<pos:position pos:line="1345" pos:column="29"/></operator> <name pos:line="1345" pos:column="27">max<pos:position pos:line="1345" pos:column="30"/></name></expr>;<pos:position pos:line="1345" pos:column="31"/></condition> <incr><expr><name pos:line="1345" pos:column="32">i<pos:position pos:line="1345" pos:column="33"/></name><operator pos:line="1345" pos:column="33">++<pos:position pos:line="1345" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="1345" pos:column="36"/></control>
          <block pos:line="1346" pos:column="11">{
          <if pos:line="1347" pos:column="11">if <condition pos:line="1347" pos:column="14">(<expr><name pos:line="1347" pos:column="15">eptr<pos:position pos:line="1347" pos:column="19"/></name> <operator pos:line="1347" pos:column="20">&gt;=<pos:position pos:line="1347" pos:column="25"/></operator> <name><name pos:line="1347" pos:column="23">md<pos:position pos:line="1347" pos:column="25"/></name><operator pos:line="1347" pos:column="25">-&gt;<pos:position pos:line="1347" pos:column="30"/></operator><name pos:line="1347" pos:column="27">end_subject<pos:position pos:line="1347" pos:column="38"/></name></name> <operator pos:line="1347" pos:column="39">||<pos:position pos:line="1347" pos:column="41"/></operator> <operator pos:line="1347" pos:column="42">(<pos:position pos:line="1347" pos:column="43"/></operator><name><name pos:line="1347" pos:column="43">md<pos:position pos:line="1347" pos:column="45"/></name><operator pos:line="1347" pos:column="45">-&gt;<pos:position pos:line="1347" pos:column="50"/></operator><name pos:line="1347" pos:column="47">ctypes<pos:position pos:line="1347" pos:column="53"/></name><index pos:line="1347" pos:column="53">[<expr><operator pos:line="1347" pos:column="54">*<pos:position pos:line="1347" pos:column="55"/></operator><name pos:line="1347" pos:column="55">eptr<pos:position pos:line="1347" pos:column="59"/></name></expr>]<pos:position pos:line="1347" pos:column="60"/></index></name> <operator pos:line="1347" pos:column="61">&amp;<pos:position pos:line="1347" pos:column="66"/></operator> <name pos:line="1347" pos:column="63">ctype_word<pos:position pos:line="1347" pos:column="73"/></name><operator pos:line="1347" pos:column="73">)<pos:position pos:line="1347" pos:column="74"/></operator> <operator pos:line="1347" pos:column="75">!=<pos:position pos:line="1347" pos:column="77"/></operator> <literal type="number" pos:line="1347" pos:column="78">0<pos:position pos:line="1347" pos:column="79"/></literal></expr>)<pos:position pos:line="1347" pos:column="80"/></condition><then pos:line="1347" pos:column="80">
            <block type="pseudo"><break pos:line="1348" pos:column="13">break;<pos:position pos:line="1348" pos:column="19"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="1349" pos:column="11">eptr<pos:position pos:line="1349" pos:column="15"/></name><operator pos:line="1349" pos:column="15">++<pos:position pos:line="1349" pos:column="17"/></operator></expr>;<pos:position pos:line="1349" pos:column="18"/></expr_stmt>
          }<pos:position pos:line="1350" pos:column="12"/></block></for>
        <break pos:line="1351" pos:column="9">break;<pos:position pos:line="1351" pos:column="15"/></break>

        <case pos:line="1353" pos:column="9">case <expr><name pos:line="1353" pos:column="14">OP_WORDCHAR<pos:position pos:line="1353" pos:column="25"/></name></expr>:<pos:position pos:line="1353" pos:column="26"/></case>
        <for pos:line="1354" pos:column="9">for <control pos:line="1354" pos:column="13">(<init><expr><name pos:line="1354" pos:column="14">i<pos:position pos:line="1354" pos:column="15"/></name> <operator pos:line="1354" pos:column="16">=<pos:position pos:line="1354" pos:column="17"/></operator> <name pos:line="1354" pos:column="18">min<pos:position pos:line="1354" pos:column="21"/></name></expr>;<pos:position pos:line="1354" pos:column="22"/></init> <condition><expr><name pos:line="1354" pos:column="23">i<pos:position pos:line="1354" pos:column="24"/></name> <operator pos:line="1354" pos:column="25">&lt;<pos:position pos:line="1354" pos:column="29"/></operator> <name pos:line="1354" pos:column="27">max<pos:position pos:line="1354" pos:column="30"/></name></expr>;<pos:position pos:line="1354" pos:column="31"/></condition> <incr><expr><name pos:line="1354" pos:column="32">i<pos:position pos:line="1354" pos:column="33"/></name><operator pos:line="1354" pos:column="33">++<pos:position pos:line="1354" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="1354" pos:column="36"/></control>
          <block pos:line="1355" pos:column="11">{
          <if pos:line="1356" pos:column="11">if <condition pos:line="1356" pos:column="14">(<expr><name pos:line="1356" pos:column="15">eptr<pos:position pos:line="1356" pos:column="19"/></name> <operator pos:line="1356" pos:column="20">&gt;=<pos:position pos:line="1356" pos:column="25"/></operator> <name><name pos:line="1356" pos:column="23">md<pos:position pos:line="1356" pos:column="25"/></name><operator pos:line="1356" pos:column="25">-&gt;<pos:position pos:line="1356" pos:column="30"/></operator><name pos:line="1356" pos:column="27">end_subject<pos:position pos:line="1356" pos:column="38"/></name></name> <operator pos:line="1356" pos:column="39">||<pos:position pos:line="1356" pos:column="41"/></operator> <operator pos:line="1356" pos:column="42">(<pos:position pos:line="1356" pos:column="43"/></operator><name><name pos:line="1356" pos:column="43">md<pos:position pos:line="1356" pos:column="45"/></name><operator pos:line="1356" pos:column="45">-&gt;<pos:position pos:line="1356" pos:column="50"/></operator><name pos:line="1356" pos:column="47">ctypes<pos:position pos:line="1356" pos:column="53"/></name><index pos:line="1356" pos:column="53">[<expr><operator pos:line="1356" pos:column="54">*<pos:position pos:line="1356" pos:column="55"/></operator><name pos:line="1356" pos:column="55">eptr<pos:position pos:line="1356" pos:column="59"/></name></expr>]<pos:position pos:line="1356" pos:column="60"/></index></name> <operator pos:line="1356" pos:column="61">&amp;<pos:position pos:line="1356" pos:column="66"/></operator> <name pos:line="1356" pos:column="63">ctype_word<pos:position pos:line="1356" pos:column="73"/></name><operator pos:line="1356" pos:column="73">)<pos:position pos:line="1356" pos:column="74"/></operator> <operator pos:line="1356" pos:column="75">==<pos:position pos:line="1356" pos:column="77"/></operator> <literal type="number" pos:line="1356" pos:column="78">0<pos:position pos:line="1356" pos:column="79"/></literal></expr>)<pos:position pos:line="1356" pos:column="80"/></condition><then pos:line="1356" pos:column="80">
            <block type="pseudo"><break pos:line="1357" pos:column="13">break;<pos:position pos:line="1357" pos:column="19"/></break></block></then></if>
          <expr_stmt><expr><name pos:line="1358" pos:column="11">eptr<pos:position pos:line="1358" pos:column="15"/></name><operator pos:line="1358" pos:column="15">++<pos:position pos:line="1358" pos:column="17"/></operator></expr>;<pos:position pos:line="1358" pos:column="18"/></expr_stmt>
          }<pos:position pos:line="1359" pos:column="12"/></block></for>
        <break pos:line="1360" pos:column="9">break;<pos:position pos:line="1360" pos:column="15"/></break>
        }<pos:position pos:line="1361" pos:column="10"/></block></switch>

      <while pos:line="1363" pos:column="7">while <condition pos:line="1363" pos:column="13">(<expr><name pos:line="1363" pos:column="14">eptr<pos:position pos:line="1363" pos:column="18"/></name> <operator pos:line="1363" pos:column="19">&gt;=<pos:position pos:line="1363" pos:column="24"/></operator> <name pos:line="1363" pos:column="22">pp<pos:position pos:line="1363" pos:column="24"/></name></expr>)<pos:position pos:line="1363" pos:column="25"/></condition>
        <block pos:line="1364" pos:column="9">{
        <if pos:line="1365" pos:column="9">if <condition pos:line="1365" pos:column="12">(<expr><call><name pos:line="1365" pos:column="13">match<pos:position pos:line="1365" pos:column="18"/></name><argument_list pos:line="1365" pos:column="18">(<argument><expr><name pos:line="1365" pos:column="19">eptr<pos:position pos:line="1365" pos:column="23"/></name><operator pos:line="1365" pos:column="23">--<pos:position pos:line="1365" pos:column="25"/></operator></expr></argument>, <argument><expr><name pos:line="1365" pos:column="27">ecode<pos:position pos:line="1365" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1365" pos:column="34">offset_top<pos:position pos:line="1365" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1365" pos:column="46">md<pos:position pos:line="1365" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1365" pos:column="50">ims<pos:position pos:line="1365" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="1365" pos:column="55">eptrb<pos:position pos:line="1365" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1365" pos:column="62">0<pos:position pos:line="1365" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="1365" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="1365" pos:column="65"/></condition><then pos:line="1365" pos:column="65">
          <block type="pseudo"><return pos:line="1366" pos:column="11">return <expr><name pos:line="1366" pos:column="18">TRUE<pos:position pos:line="1366" pos:column="22"/></name></expr>;<pos:position pos:line="1366" pos:column="23"/></return></block></then></if>
<cpp:ifdef pos:line="1367" pos:column="1">#<cpp:directive pos:line="1367" pos:column="2">ifdef<pos:position pos:line="1367" pos:column="7"/></cpp:directive> <name pos:line="1367" pos:column="8">SUPPORT_UTF8<pos:position pos:line="1367" pos:column="20"/></name></cpp:ifdef>
        <if pos:line="1368" pos:column="9">if <condition pos:line="1368" pos:column="12">(<expr><name><name pos:line="1368" pos:column="13">md<pos:position pos:line="1368" pos:column="15"/></name><operator pos:line="1368" pos:column="15">-&gt;<pos:position pos:line="1368" pos:column="20"/></operator><name pos:line="1368" pos:column="17">utf8<pos:position pos:line="1368" pos:column="21"/></name></name></expr>)<pos:position pos:line="1368" pos:column="22"/></condition><then pos:line="1368" pos:column="22">
          <block type="pseudo"><while pos:line="1369" pos:column="11">while <condition pos:line="1369" pos:column="17">(<expr><name pos:line="1369" pos:column="18">eptr<pos:position pos:line="1369" pos:column="22"/></name> <operator pos:line="1369" pos:column="23">&gt;<pos:position pos:line="1369" pos:column="27"/></operator> <name pos:line="1369" pos:column="25">pp<pos:position pos:line="1369" pos:column="27"/></name> <operator pos:line="1369" pos:column="28">&amp;&amp;<pos:position pos:line="1369" pos:column="38"/></operator> <operator pos:line="1369" pos:column="31">(<pos:position pos:line="1369" pos:column="32"/></operator><operator pos:line="1369" pos:column="32">*<pos:position pos:line="1369" pos:column="33"/></operator><name pos:line="1369" pos:column="33">eptr<pos:position pos:line="1369" pos:column="37"/></name> <operator pos:line="1369" pos:column="38">&amp;<pos:position pos:line="1369" pos:column="43"/></operator> <literal type="number" pos:line="1369" pos:column="40">0xc0<pos:position pos:line="1369" pos:column="44"/></literal><operator pos:line="1369" pos:column="44">)<pos:position pos:line="1369" pos:column="45"/></operator> <operator pos:line="1369" pos:column="46">==<pos:position pos:line="1369" pos:column="48"/></operator> <literal type="number" pos:line="1369" pos:column="49">0x80<pos:position pos:line="1369" pos:column="53"/></literal></expr>)<pos:position pos:line="1369" pos:column="54"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="1369" pos:column="55">eptr<pos:position pos:line="1369" pos:column="59"/></name><operator pos:line="1369" pos:column="59">--<pos:position pos:line="1369" pos:column="61"/></operator></expr>;<pos:position pos:line="1369" pos:column="62"/></expr_stmt></block></while></block></then></if>
<cpp:endif pos:line="1370" pos:column="1">#<cpp:directive pos:line="1370" pos:column="2">endif<pos:position pos:line="1370" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="1371" pos:column="10"/></block></while>
      <return pos:line="1372" pos:column="7">return <expr><name pos:line="1372" pos:column="14">FALSE<pos:position pos:line="1372" pos:column="19"/></name></expr>;<pos:position pos:line="1372" pos:column="20"/></return>
      }<pos:position pos:line="1373" pos:column="8"/></block></else></if>
    <comment type="block" pos:line="1374" pos:column="5">/* Control never gets here */</comment>

    <comment type="block" pos:line="1376" pos:column="5">/* There's been some horrible disaster. */</comment>

    <default pos:line="1378" pos:column="5">default:<pos:position pos:line="1378" pos:column="13"/></default>
    <expr_stmt><expr><call><name pos:line="1379" pos:column="5">DPRINTF<pos:position pos:line="1379" pos:column="12"/></name><argument_list pos:line="1379" pos:column="12">(<argument><expr><operator pos:line="1379" pos:column="13">(<pos:position pos:line="1379" pos:column="14"/></operator><literal type="string" pos:line="1379" pos:column="14">"Unknown opcode %d\n"<pos:position pos:line="1379" pos:column="35"/></literal><operator pos:line="1379" pos:column="35">,<pos:position pos:line="1379" pos:column="36"/></operator> <operator pos:line="1379" pos:column="37">*<pos:position pos:line="1379" pos:column="38"/></operator><name pos:line="1379" pos:column="38">ecode<pos:position pos:line="1379" pos:column="43"/></name><operator pos:line="1379" pos:column="43">)<pos:position pos:line="1379" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="1379" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="1379" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1380" pos:column="5">md<pos:position pos:line="1380" pos:column="7"/></name><operator pos:line="1380" pos:column="7">-&gt;<pos:position pos:line="1380" pos:column="12"/></operator><name pos:line="1380" pos:column="9">errorcode<pos:position pos:line="1380" pos:column="18"/></name></name> <operator pos:line="1380" pos:column="19">=<pos:position pos:line="1380" pos:column="20"/></operator> <name pos:line="1380" pos:column="21">PCRE_ERROR_UNKNOWN_NODE<pos:position pos:line="1380" pos:column="44"/></name></expr>;<pos:position pos:line="1380" pos:column="45"/></expr_stmt>
    <return pos:line="1381" pos:column="5">return <expr><name pos:line="1381" pos:column="12">FALSE<pos:position pos:line="1381" pos:column="17"/></name></expr>;<pos:position pos:line="1381" pos:column="18"/></return>
    }<pos:position pos:line="1382" pos:column="6"/></block></switch>

  <comment type="block" pos:line="1384" pos:column="3">/* Do not stick any code in here without much thought; it is assumed
  that "continue" in the code above comes out to here to repeat the main
  loop. */</comment>

  }<pos:position pos:line="1388" pos:column="4"/></block></for>             <comment type="block" pos:line="1388" pos:column="17">/* End of main loop */</comment>
<comment type="block" pos:line="1389" pos:column="1">/* Control never reaches here */</comment>
}<pos:position pos:line="1390" pos:column="2"/></block></function></unit>

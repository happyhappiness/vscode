<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3936_httpd-2.2.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">APR_INLINE<pos:position pos:line="1" pos:column="18"/></name>
<name pos:line="2" pos:column="1">void<pos:position pos:line="2" pos:column="5"/></name></type> <name pos:line="2" pos:column="6">allocator_free<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">apr_allocator_t<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">allocator<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">apr_memnode_t<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">node<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_memnode_t<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">next<pos:position pos:line="4" pos:column="24"/></name></decl>, <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="27">freelist<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><name pos:line="4" pos:column="38">NULL<pos:position pos:line="4" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_uint32_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">index<pos:position pos:line="5" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="25">max_index<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_uint32_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">max_free_index<pos:position pos:line="6" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="34">current_free_index<pos:position pos:line="6" pos:column="52"/></name></decl>;<pos:position pos:line="6" pos:column="53"/></decl_stmt>

<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">APR_HAS_THREADS<pos:position pos:line="8" pos:column="20"/></name></expr></cpp:if>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">allocator<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">mutex<pos:position pos:line="9" pos:column="25"/></name></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="9">apr_thread_mutex_lock<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name><name pos:line="10" pos:column="31">allocator<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">-&gt;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="42">mutex<pos:position pos:line="10" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="49"/></expr_stmt></block></then></if>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="11" pos:column="8">/* APR_HAS_THREADS */</comment>

    <expr_stmt><expr><name pos:line="13" pos:column="5">max_index<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <name><name pos:line="13" pos:column="17">allocator<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">-&gt;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="28">max_index<pos:position pos:line="13" pos:column="37"/></name></name></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">max_free_index<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <name><name pos:line="14" pos:column="22">allocator<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">max_free_index<pos:position pos:line="14" pos:column="47"/></name></name></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">current_free_index<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <name><name pos:line="15" pos:column="26">allocator<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">current_free_index<pos:position pos:line="15" pos:column="55"/></name></name></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* Walk the list of submitted nodes and free them one by one,
     * shoving them in the right 'size' buckets as we go.
     */</comment>
    <do pos:line="20" pos:column="5">do <block pos:line="20" pos:column="8">{
        <expr_stmt><expr><name pos:line="21" pos:column="9">next<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <name><name pos:line="21" pos:column="16">node<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">next<pos:position pos:line="21" pos:column="26"/></name></name></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="22" pos:column="9">index<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <name><name pos:line="22" pos:column="17">node<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">index<pos:position pos:line="22" pos:column="28"/></name></name></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">max_free_index<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">!=<pos:position pos:line="24" pos:column="30"/></operator> <name pos:line="24" pos:column="31">APR_ALLOCATOR_MAX_FREE_UNLIMITED<pos:position pos:line="24" pos:column="63"/></name>
            <operator pos:line="25" pos:column="13">&amp;&amp;<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="16">index<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">&gt;<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="24">current_free_index<pos:position pos:line="25" pos:column="42"/></name></expr>)<pos:position pos:line="25" pos:column="43"/></condition><then pos:line="25" pos:column="43"> <block pos:line="25" pos:column="44">{
            <expr_stmt><expr><name><name pos:line="26" pos:column="13">node<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">next<pos:position pos:line="26" pos:column="23"/></name></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <name pos:line="26" pos:column="26">freelist<pos:position pos:line="26" pos:column="34"/></name></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="27" pos:column="13">freelist<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="24">node<pos:position pos:line="27" pos:column="28"/></name></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then>
        <elseif pos:line="29" pos:column="9">else <if pos:line="29" pos:column="14">if <condition pos:line="29" pos:column="17">(<expr><name pos:line="29" pos:column="18">index<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">&lt;<pos:position pos:line="29" pos:column="28"/></operator> <name pos:line="29" pos:column="26">MAX_INDEX<pos:position pos:line="29" pos:column="35"/></name></expr>)<pos:position pos:line="29" pos:column="36"/></condition><then pos:line="29" pos:column="36"> <block pos:line="29" pos:column="37">{
            <comment type="block" pos:line="30" pos:column="13">/* Add the node to the appropiate 'size' bucket.  Adjust
             * the max_index when appropiate.
             */</comment>
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><operator pos:line="33" pos:column="17">(<pos:position pos:line="33" pos:column="18"/></operator><name><name pos:line="33" pos:column="18">node<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">-&gt;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="24">next<pos:position pos:line="33" pos:column="28"/></name></name> <operator pos:line="33" pos:column="29">=<pos:position pos:line="33" pos:column="30"/></operator> <name><name pos:line="33" pos:column="31">allocator<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">-&gt;<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="42">free<pos:position pos:line="33" pos:column="46"/></name><index pos:line="33" pos:column="46">[<expr><name pos:line="33" pos:column="47">index<pos:position pos:line="33" pos:column="52"/></name></expr>]<pos:position pos:line="33" pos:column="53"/></index></name><operator pos:line="33" pos:column="53">)<pos:position pos:line="33" pos:column="54"/></operator> <operator pos:line="33" pos:column="55">==<pos:position pos:line="33" pos:column="57"/></operator> <name pos:line="33" pos:column="58">NULL<pos:position pos:line="33" pos:column="62"/></name>
                <operator pos:line="34" pos:column="17">&amp;&amp;<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="20">index<pos:position pos:line="34" pos:column="25"/></name> <operator pos:line="34" pos:column="26">&gt;<pos:position pos:line="34" pos:column="30"/></operator> <name pos:line="34" pos:column="28">max_index<pos:position pos:line="34" pos:column="37"/></name></expr>)<pos:position pos:line="34" pos:column="38"/></condition><then pos:line="34" pos:column="38"> <block pos:line="34" pos:column="39">{
                <expr_stmt><expr><name pos:line="35" pos:column="17">max_index<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">=<pos:position pos:line="35" pos:column="28"/></operator> <name pos:line="35" pos:column="29">index<pos:position pos:line="35" pos:column="34"/></name></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="36" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="37" pos:column="13">allocator<pos:position pos:line="37" pos:column="22"/></name><operator pos:line="37" pos:column="22">-&gt;<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="24">free<pos:position pos:line="37" pos:column="28"/></name><index pos:line="37" pos:column="28">[<expr><name pos:line="37" pos:column="29">index<pos:position pos:line="37" pos:column="34"/></name></expr>]<pos:position pos:line="37" pos:column="35"/></index></name> <operator pos:line="37" pos:column="36">=<pos:position pos:line="37" pos:column="37"/></operator> <name pos:line="37" pos:column="38">node<pos:position pos:line="37" pos:column="42"/></name></expr>;<pos:position pos:line="37" pos:column="43"/></expr_stmt>
            <if pos:line="38" pos:column="13">if <condition pos:line="38" pos:column="16">(<expr><name pos:line="38" pos:column="17">current_free_index<pos:position pos:line="38" pos:column="35"/></name> <operator pos:line="38" pos:column="36">&gt;=<pos:position pos:line="38" pos:column="41"/></operator> <name pos:line="38" pos:column="39">index<pos:position pos:line="38" pos:column="44"/></name></expr>)<pos:position pos:line="38" pos:column="45"/></condition><then pos:line="38" pos:column="45">
                <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="17">current_free_index<pos:position pos:line="39" pos:column="35"/></name> <operator pos:line="39" pos:column="36">-=<pos:position pos:line="39" pos:column="38"/></operator> <name pos:line="39" pos:column="39">index<pos:position pos:line="39" pos:column="44"/></name></expr>;<pos:position pos:line="39" pos:column="45"/></expr_stmt></block></then>
            <else pos:line="40" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="17">current_free_index<pos:position pos:line="41" pos:column="35"/></name> <operator pos:line="41" pos:column="36">=<pos:position pos:line="41" pos:column="37"/></operator> <literal type="number" pos:line="41" pos:column="38">0<pos:position pos:line="41" pos:column="39"/></literal></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt></block></else></if>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if></elseif>
        <else pos:line="43" pos:column="9">else <block pos:line="43" pos:column="14">{
            <comment type="block" pos:line="44" pos:column="13">/* This node is too large to keep in a specific size bucket,
             * just add it to the sink (at index 0).
             */</comment>
            <expr_stmt><expr><name><name pos:line="47" pos:column="13">node<pos:position pos:line="47" pos:column="17"/></name><operator pos:line="47" pos:column="17">-&gt;<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="19">next<pos:position pos:line="47" pos:column="23"/></name></name> <operator pos:line="47" pos:column="24">=<pos:position pos:line="47" pos:column="25"/></operator> <name><name pos:line="47" pos:column="26">allocator<pos:position pos:line="47" pos:column="35"/></name><operator pos:line="47" pos:column="35">-&gt;<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="37">free<pos:position pos:line="47" pos:column="41"/></name><index pos:line="47" pos:column="41">[<expr><literal type="number" pos:line="47" pos:column="42">0<pos:position pos:line="47" pos:column="43"/></literal></expr>]<pos:position pos:line="47" pos:column="44"/></index></name></expr>;<pos:position pos:line="47" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="48" pos:column="13">allocator<pos:position pos:line="48" pos:column="22"/></name><operator pos:line="48" pos:column="22">-&gt;<pos:position pos:line="48" pos:column="27"/></operator><name pos:line="48" pos:column="24">free<pos:position pos:line="48" pos:column="28"/></name><index pos:line="48" pos:column="28">[<expr><literal type="number" pos:line="48" pos:column="29">0<pos:position pos:line="48" pos:column="30"/></literal></expr>]<pos:position pos:line="48" pos:column="31"/></index></name> <operator pos:line="48" pos:column="32">=<pos:position pos:line="48" pos:column="33"/></operator> <name pos:line="48" pos:column="34">node<pos:position pos:line="48" pos:column="38"/></name></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>
            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<expr><name pos:line="49" pos:column="17">current_free_index<pos:position pos:line="49" pos:column="35"/></name> <operator pos:line="49" pos:column="36">&gt;=<pos:position pos:line="49" pos:column="41"/></operator> <name pos:line="49" pos:column="39">index<pos:position pos:line="49" pos:column="44"/></name></expr>)<pos:position pos:line="49" pos:column="45"/></condition><then pos:line="49" pos:column="45">
                <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="17">current_free_index<pos:position pos:line="50" pos:column="35"/></name> <operator pos:line="50" pos:column="36">-=<pos:position pos:line="50" pos:column="38"/></operator> <name pos:line="50" pos:column="39">index<pos:position pos:line="50" pos:column="44"/></name></expr>;<pos:position pos:line="50" pos:column="45"/></expr_stmt></block></then>
            <else pos:line="51" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="17">current_free_index<pos:position pos:line="52" pos:column="35"/></name> <operator pos:line="52" pos:column="36">=<pos:position pos:line="52" pos:column="37"/></operator> <literal type="number" pos:line="52" pos:column="38">0<pos:position pos:line="52" pos:column="39"/></literal></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt></block></else></if>
        }<pos:position pos:line="53" pos:column="10"/></block></else></if>
    }<pos:position pos:line="54" pos:column="6"/></block> while <condition pos:line="54" pos:column="13">(<expr><operator pos:line="54" pos:column="14">(<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="15">node<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <name pos:line="54" pos:column="22">next<pos:position pos:line="54" pos:column="26"/></name><operator pos:line="54" pos:column="26">)<pos:position pos:line="54" pos:column="27"/></operator> <operator pos:line="54" pos:column="28">!=<pos:position pos:line="54" pos:column="30"/></operator> <name pos:line="54" pos:column="31">NULL<pos:position pos:line="54" pos:column="35"/></name></expr>)<pos:position pos:line="54" pos:column="36"/></condition>;<pos:position pos:line="54" pos:column="37"/></do>

    <expr_stmt><expr><name><name pos:line="56" pos:column="5">allocator<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">max_index<pos:position pos:line="56" pos:column="25"/></name></name> <operator pos:line="56" pos:column="26">=<pos:position pos:line="56" pos:column="27"/></operator> <name pos:line="56" pos:column="28">max_index<pos:position pos:line="56" pos:column="37"/></name></expr>;<pos:position pos:line="56" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="57" pos:column="5">allocator<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">-&gt;<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="16">current_free_index<pos:position pos:line="57" pos:column="34"/></name></name> <operator pos:line="57" pos:column="35">=<pos:position pos:line="57" pos:column="36"/></operator> <name pos:line="57" pos:column="37">current_free_index<pos:position pos:line="57" pos:column="55"/></name></expr>;<pos:position pos:line="57" pos:column="56"/></expr_stmt>

<cpp:if pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">if<pos:position pos:line="59" pos:column="4"/></cpp:directive> <expr><name pos:line="59" pos:column="5">APR_HAS_THREADS<pos:position pos:line="59" pos:column="20"/></name></expr></cpp:if>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name><name pos:line="60" pos:column="9">allocator<pos:position pos:line="60" pos:column="18"/></name><operator pos:line="60" pos:column="18">-&gt;<pos:position pos:line="60" pos:column="23"/></operator><name pos:line="60" pos:column="20">mutex<pos:position pos:line="60" pos:column="25"/></name></name></expr>)<pos:position pos:line="60" pos:column="26"/></condition><then pos:line="60" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="61" pos:column="32"/></name><argument_list pos:line="61" pos:column="32">(<argument><expr><name><name pos:line="61" pos:column="33">allocator<pos:position pos:line="61" pos:column="42"/></name><operator pos:line="61" pos:column="42">-&gt;<pos:position pos:line="61" pos:column="47"/></operator><name pos:line="61" pos:column="44">mutex<pos:position pos:line="61" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="51"/></expr_stmt></block></then></if>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif<pos:position pos:line="62" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="62" pos:column="8">/* APR_HAS_THREADS */</comment>

    <while pos:line="64" pos:column="5">while <condition pos:line="64" pos:column="11">(<expr><name pos:line="64" pos:column="12">freelist<pos:position pos:line="64" pos:column="20"/></name> <operator pos:line="64" pos:column="21">!=<pos:position pos:line="64" pos:column="23"/></operator> <name pos:line="64" pos:column="24">NULL<pos:position pos:line="64" pos:column="28"/></name></expr>)<pos:position pos:line="64" pos:column="29"/></condition> <block pos:line="64" pos:column="30">{
        <expr_stmt><expr><name pos:line="65" pos:column="9">node<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">=<pos:position pos:line="65" pos:column="15"/></operator> <name pos:line="65" pos:column="16">freelist<pos:position pos:line="65" pos:column="24"/></name></expr>;<pos:position pos:line="65" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="66" pos:column="9">freelist<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">=<pos:position pos:line="66" pos:column="19"/></operator> <name><name pos:line="66" pos:column="20">node<pos:position pos:line="66" pos:column="24"/></name><operator pos:line="66" pos:column="24">-&gt;<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="26">next<pos:position pos:line="66" pos:column="30"/></name></name></expr>;<pos:position pos:line="66" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">free<pos:position pos:line="67" pos:column="13"/></name><argument_list pos:line="67" pos:column="13">(<argument><expr><name pos:line="67" pos:column="14">node<pos:position pos:line="67" pos:column="18"/></name></expr></argument>)<pos:position pos:line="67" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></while>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

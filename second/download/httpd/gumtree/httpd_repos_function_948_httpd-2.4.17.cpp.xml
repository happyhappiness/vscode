<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_948_httpd-2.4.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">ssl_var_lookup_ssl_cert<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">apr_pool_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">p<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">request_rec<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">r<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">X509<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">xs<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">var<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">result<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">BOOL<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">resdup<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">X509_NAME<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">xsname<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">nid<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">result<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">NULL<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">resdup<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">TRUE<pos:position pos:line="10" pos:column="18"/></name></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">strcEQ<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">var<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="21">"M_VERSION"<pos:position pos:line="12" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="34"/></condition><then pos:line="12" pos:column="34"> <block pos:line="12" pos:column="35">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">result<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">apr_psprintf<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">p<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="34">"%lu"<pos:position pos:line="13" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="41">X509_get_version<pos:position pos:line="13" pos:column="57"/></name><argument_list pos:line="13" pos:column="57">(<argument><expr><name pos:line="13" pos:column="58">xs<pos:position pos:line="13" pos:column="60"/></name></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call><operator pos:line="13" pos:column="61">+<pos:position pos:line="13" pos:column="62"/></operator><literal type="number" pos:line="13" pos:column="62">1<pos:position pos:line="13" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">resdup<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">FALSE<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then>
    <elseif pos:line="16" pos:column="5">else <if pos:line="16" pos:column="10">if <condition pos:line="16" pos:column="13">(<expr><call><name pos:line="16" pos:column="14">strcEQ<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">var<pos:position pos:line="16" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="26">"M_SERIAL"<pos:position pos:line="16" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="38"/></condition><then pos:line="16" pos:column="38"> <block pos:line="16" pos:column="39">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">result<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">ssl_var_lookup_ssl_cert_serial<pos:position pos:line="17" pos:column="48"/></name><argument_list pos:line="17" pos:column="48">(<argument><expr><name pos:line="17" pos:column="49">p<pos:position pos:line="17" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="52">xs<pos:position pos:line="17" pos:column="54"/></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="19" pos:column="5">else <if pos:line="19" pos:column="10">if <condition pos:line="19" pos:column="13">(<expr><call><name pos:line="19" pos:column="14">strcEQ<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">var<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="26">"V_START"<pos:position pos:line="19" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37"> <block pos:line="19" pos:column="38">{
        <expr_stmt><expr><name pos:line="20" pos:column="9">result<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <call><name pos:line="20" pos:column="18">ssl_var_lookup_ssl_cert_valid<pos:position pos:line="20" pos:column="47"/></name><argument_list pos:line="20" pos:column="47">(<argument><expr><name pos:line="20" pos:column="48">p<pos:position pos:line="20" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="51">X509_get_notBefore<pos:position pos:line="20" pos:column="69"/></name><argument_list pos:line="20" pos:column="69">(<argument><expr><name pos:line="20" pos:column="70">xs<pos:position pos:line="20" pos:column="72"/></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="22" pos:column="5">else <if pos:line="22" pos:column="10">if <condition pos:line="22" pos:column="13">(<expr><call><name pos:line="22" pos:column="14">strcEQ<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">var<pos:position pos:line="22" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="26">"V_END"<pos:position pos:line="22" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="35"/></condition><then pos:line="22" pos:column="35"> <block pos:line="22" pos:column="36">{
        <expr_stmt><expr><name pos:line="23" pos:column="9">result<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <call><name pos:line="23" pos:column="18">ssl_var_lookup_ssl_cert_valid<pos:position pos:line="23" pos:column="47"/></name><argument_list pos:line="23" pos:column="47">(<argument><expr><name pos:line="23" pos:column="48">p<pos:position pos:line="23" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="51">X509_get_notAfter<pos:position pos:line="23" pos:column="68"/></name><argument_list pos:line="23" pos:column="68">(<argument><expr><name pos:line="23" pos:column="69">xs<pos:position pos:line="23" pos:column="71"/></name></expr></argument>)<pos:position pos:line="23" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><call><name pos:line="25" pos:column="14">strcEQ<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">var<pos:position pos:line="25" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="26">"V_REMAIN"<pos:position pos:line="25" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="38"/></condition><then pos:line="25" pos:column="38"> <block pos:line="25" pos:column="39">{
        <expr_stmt><expr><name pos:line="26" pos:column="9">result<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <call><name pos:line="26" pos:column="18">ssl_var_lookup_ssl_cert_remain<pos:position pos:line="26" pos:column="48"/></name><argument_list pos:line="26" pos:column="48">(<argument><expr><name pos:line="26" pos:column="49">p<pos:position pos:line="26" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="52">X509_get_notAfter<pos:position pos:line="26" pos:column="69"/></name><argument_list pos:line="26" pos:column="69">(<argument><expr><name pos:line="26" pos:column="70">xs<pos:position pos:line="26" pos:column="72"/></name></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">resdup<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">FALSE<pos:position pos:line="27" pos:column="23"/></name></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><operator pos:line="29" pos:column="14">*<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">var<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">&amp;&amp;<pos:position pos:line="29" pos:column="29"/></operator> <call><name pos:line="29" pos:column="22">strcEQ<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><name pos:line="29" pos:column="29">var<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">+<pos:position pos:line="29" pos:column="33"/></operator><literal type="number" pos:line="29" pos:column="33">1<pos:position pos:line="29" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="36">"_DN"<pos:position pos:line="29" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="43"/></condition><then pos:line="29" pos:column="43"> <block pos:line="29" pos:column="44">{
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">*<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">var<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">==<pos:position pos:line="30" pos:column="20"/></operator> <literal type="char" pos:line="30" pos:column="21">'S'<pos:position pos:line="30" pos:column="24"/></literal></expr>)<pos:position pos:line="30" pos:column="25"/></condition><then pos:line="30" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="13">xsname<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <call><name pos:line="31" pos:column="22">X509_get_subject_name<pos:position pos:line="31" pos:column="43"/></name><argument_list pos:line="31" pos:column="43">(<argument><expr><name pos:line="31" pos:column="44">xs<pos:position pos:line="31" pos:column="46"/></name></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt></block></then>
        <elseif pos:line="32" pos:column="9">else <if pos:line="32" pos:column="14">if <condition pos:line="32" pos:column="17">(<expr><operator pos:line="32" pos:column="18">*<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="19">var<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">==<pos:position pos:line="32" pos:column="25"/></operator> <literal type="char" pos:line="32" pos:column="26">'I'<pos:position pos:line="32" pos:column="29"/></literal></expr>)<pos:position pos:line="32" pos:column="30"/></condition><then pos:line="32" pos:column="30">
            <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="13">xsname<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <call><name pos:line="33" pos:column="22">X509_get_issuer_name<pos:position pos:line="33" pos:column="42"/></name><argument_list pos:line="33" pos:column="42">(<argument><expr><name pos:line="33" pos:column="43">xs<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt></block></then></if></elseif>
        <else pos:line="34" pos:column="9">else
            <block type="pseudo"><return pos:line="35" pos:column="13">return <expr><name pos:line="35" pos:column="20">NULL<pos:position pos:line="35" pos:column="24"/></name></expr>;<pos:position pos:line="35" pos:column="25"/></return></block></else></if>
        <expr_stmt><expr><name pos:line="36" pos:column="9">result<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <call><name pos:line="36" pos:column="18">ssl_var_lookup_ssl_cert_dn_oneline<pos:position pos:line="36" pos:column="52"/></name><argument_list pos:line="36" pos:column="52">(<argument><expr><name pos:line="36" pos:column="53">p<pos:position pos:line="36" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="56">r<pos:position pos:line="36" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="59">xsname<pos:position pos:line="36" pos:column="65"/></name></expr></argument>)<pos:position pos:line="36" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">resdup<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <name pos:line="37" pos:column="18">FALSE<pos:position pos:line="37" pos:column="23"/></name></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(<expr><call><name pos:line="39" pos:column="14">strlen<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">(<argument><expr><name pos:line="39" pos:column="21">var<pos:position pos:line="39" pos:column="24"/></name></expr></argument>)<pos:position pos:line="39" pos:column="25"/></argument_list></call> <operator pos:line="39" pos:column="26">&gt;<pos:position pos:line="39" pos:column="30"/></operator> <literal type="number" pos:line="39" pos:column="28">5<pos:position pos:line="39" pos:column="29"/></literal> <operator pos:line="39" pos:column="30">&amp;&amp;<pos:position pos:line="39" pos:column="40"/></operator> <call><name pos:line="39" pos:column="33">strcEQn<pos:position pos:line="39" pos:column="40"/></name><argument_list pos:line="39" pos:column="40">(<argument><expr><name pos:line="39" pos:column="41">var<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">+<pos:position pos:line="39" pos:column="45"/></operator><literal type="number" pos:line="39" pos:column="45">1<pos:position pos:line="39" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="48">"_DN_"<pos:position pos:line="39" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="56">4<pos:position pos:line="39" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="59"/></condition><then pos:line="39" pos:column="59"> <block pos:line="39" pos:column="60">{
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">*<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">var<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">==<pos:position pos:line="40" pos:column="20"/></operator> <literal type="char" pos:line="40" pos:column="21">'S'<pos:position pos:line="40" pos:column="24"/></literal></expr>)<pos:position pos:line="40" pos:column="25"/></condition><then pos:line="40" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="13">xsname<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">=<pos:position pos:line="41" pos:column="21"/></operator> <call><name pos:line="41" pos:column="22">X509_get_subject_name<pos:position pos:line="41" pos:column="43"/></name><argument_list pos:line="41" pos:column="43">(<argument><expr><name pos:line="41" pos:column="44">xs<pos:position pos:line="41" pos:column="46"/></name></expr></argument>)<pos:position pos:line="41" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="48"/></expr_stmt></block></then>
        <elseif pos:line="42" pos:column="9">else <if pos:line="42" pos:column="14">if <condition pos:line="42" pos:column="17">(<expr><operator pos:line="42" pos:column="18">*<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="19">var<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">==<pos:position pos:line="42" pos:column="25"/></operator> <literal type="char" pos:line="42" pos:column="26">'I'<pos:position pos:line="42" pos:column="29"/></literal></expr>)<pos:position pos:line="42" pos:column="30"/></condition><then pos:line="42" pos:column="30">
            <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="13">xsname<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <call><name pos:line="43" pos:column="22">X509_get_issuer_name<pos:position pos:line="43" pos:column="42"/></name><argument_list pos:line="43" pos:column="42">(<argument><expr><name pos:line="43" pos:column="43">xs<pos:position pos:line="43" pos:column="45"/></name></expr></argument>)<pos:position pos:line="43" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="47"/></expr_stmt></block></then></if></elseif>
        <else pos:line="44" pos:column="9">else
            <block type="pseudo"><return pos:line="45" pos:column="13">return <expr><name pos:line="45" pos:column="20">NULL<pos:position pos:line="45" pos:column="24"/></name></expr>;<pos:position pos:line="45" pos:column="25"/></return></block></else></if>
        <expr_stmt><expr><name pos:line="46" pos:column="9">result<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <call><name pos:line="46" pos:column="18">ssl_var_lookup_ssl_cert_dn<pos:position pos:line="46" pos:column="44"/></name><argument_list pos:line="46" pos:column="44">(<argument><expr><name pos:line="46" pos:column="45">p<pos:position pos:line="46" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="48">xsname<pos:position pos:line="46" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="56">var<pos:position pos:line="46" pos:column="59"/></name><operator pos:line="46" pos:column="59">+<pos:position pos:line="46" pos:column="60"/></operator><literal type="number" pos:line="46" pos:column="60">5<pos:position pos:line="46" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><name pos:line="47" pos:column="9">resdup<pos:position pos:line="47" pos:column="15"/></name> <operator pos:line="47" pos:column="16">=<pos:position pos:line="47" pos:column="17"/></operator> <name pos:line="47" pos:column="18">FALSE<pos:position pos:line="47" pos:column="23"/></name></expr>;<pos:position pos:line="47" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="49" pos:column="5">else <if pos:line="49" pos:column="10">if <condition pos:line="49" pos:column="13">(<expr><call><name pos:line="49" pos:column="14">strlen<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><name pos:line="49" pos:column="21">var<pos:position pos:line="49" pos:column="24"/></name></expr></argument>)<pos:position pos:line="49" pos:column="25"/></argument_list></call> <operator pos:line="49" pos:column="26">&gt;<pos:position pos:line="49" pos:column="30"/></operator> <literal type="number" pos:line="49" pos:column="28">4<pos:position pos:line="49" pos:column="29"/></literal> <operator pos:line="49" pos:column="30">&amp;&amp;<pos:position pos:line="49" pos:column="40"/></operator> <call><name pos:line="49" pos:column="33">strcEQn<pos:position pos:line="49" pos:column="40"/></name><argument_list pos:line="49" pos:column="40">(<argument><expr><name pos:line="49" pos:column="41">var<pos:position pos:line="49" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="46">"SAN_"<pos:position pos:line="49" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="54">4<pos:position pos:line="49" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="57"/></condition><then pos:line="49" pos:column="57"> <block pos:line="49" pos:column="58">{
        <expr_stmt><expr><name pos:line="50" pos:column="9">result<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <call><name pos:line="50" pos:column="18">ssl_var_lookup_ssl_cert_san<pos:position pos:line="50" pos:column="45"/></name><argument_list pos:line="50" pos:column="45">(<argument><expr><name pos:line="50" pos:column="46">p<pos:position pos:line="50" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="49">xs<pos:position pos:line="50" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="53">var<pos:position pos:line="50" pos:column="56"/></name><operator pos:line="50" pos:column="56">+<pos:position pos:line="50" pos:column="57"/></operator><literal type="number" pos:line="50" pos:column="57">4<pos:position pos:line="50" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">resdup<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <name pos:line="51" pos:column="18">FALSE<pos:position pos:line="51" pos:column="23"/></name></expr>;<pos:position pos:line="51" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="53" pos:column="5">else <if pos:line="53" pos:column="10">if <condition pos:line="53" pos:column="13">(<expr><call><name pos:line="53" pos:column="14">strcEQ<pos:position pos:line="53" pos:column="20"/></name><argument_list pos:line="53" pos:column="20">(<argument><expr><name pos:line="53" pos:column="21">var<pos:position pos:line="53" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="26">"A_SIG"<pos:position pos:line="53" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="35"/></condition><then pos:line="53" pos:column="35"> <block pos:line="53" pos:column="36">{
        <expr_stmt><expr><name pos:line="54" pos:column="9">nid<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">=<pos:position pos:line="54" pos:column="14"/></operator> <call><name pos:line="54" pos:column="15">OBJ_obj2nid<pos:position pos:line="54" pos:column="26"/></name><argument_list pos:line="54" pos:column="26">(<argument><expr><operator pos:line="54" pos:column="27">(<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="28">ASN1_OBJECT<pos:position pos:line="54" pos:column="39"/></name> <operator pos:line="54" pos:column="40">*<pos:position pos:line="54" pos:column="41"/></operator><operator pos:line="54" pos:column="41">)<pos:position pos:line="54" pos:column="42"/></operator><operator pos:line="54" pos:column="42">(<pos:position pos:line="54" pos:column="43"/></operator><name><name pos:line="54" pos:column="43">xs<pos:position pos:line="54" pos:column="45"/></name><operator pos:line="54" pos:column="45">-&gt;<pos:position pos:line="54" pos:column="50"/></operator><name pos:line="54" pos:column="47">cert_info<pos:position pos:line="54" pos:column="56"/></name><operator pos:line="54" pos:column="56">-&gt;<pos:position pos:line="54" pos:column="61"/></operator><name pos:line="54" pos:column="58">signature<pos:position pos:line="54" pos:column="67"/></name><operator pos:line="54" pos:column="67">-&gt;<pos:position pos:line="54" pos:column="72"/></operator><name pos:line="54" pos:column="69">algorithm<pos:position pos:line="54" pos:column="78"/></name></name><operator pos:line="54" pos:column="78">)<pos:position pos:line="54" pos:column="79"/></operator></expr></argument>)<pos:position pos:line="54" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><name pos:line="55" pos:column="9">result<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">=<pos:position pos:line="55" pos:column="17"/></operator> <call><name pos:line="55" pos:column="18">apr_pstrdup<pos:position pos:line="55" pos:column="29"/></name><argument_list pos:line="55" pos:column="29">(<argument><expr><name pos:line="55" pos:column="30">p<pos:position pos:line="55" pos:column="31"/></name></expr></argument>,
                             <argument><expr><ternary><condition><expr><operator pos:line="56" pos:column="30">(<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="31">nid<pos:position pos:line="56" pos:column="34"/></name> <operator pos:line="56" pos:column="35">==<pos:position pos:line="56" pos:column="37"/></operator> <name pos:line="56" pos:column="38">NID_undef<pos:position pos:line="56" pos:column="47"/></name><operator pos:line="56" pos:column="47">)<pos:position pos:line="56" pos:column="48"/></operator></expr> ?<pos:position pos:line="56" pos:column="50"/></condition><then pos:line="56" pos:column="50"> <expr><literal type="string" pos:line="56" pos:column="51">"UNKNOWN"<pos:position pos:line="56" pos:column="60"/></literal></expr> <pos:position pos:line="56" pos:column="61"/></then><else pos:line="56" pos:column="61">: <expr><call><name pos:line="56" pos:column="63">OBJ_nid2ln<pos:position pos:line="56" pos:column="73"/></name><argument_list pos:line="56" pos:column="73">(<argument><expr><name pos:line="56" pos:column="74">nid<pos:position pos:line="56" pos:column="77"/></name></expr></argument>)<pos:position pos:line="56" pos:column="78"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="56" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><name pos:line="57" pos:column="9">resdup<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">=<pos:position pos:line="57" pos:column="17"/></operator> <name pos:line="57" pos:column="18">FALSE<pos:position pos:line="57" pos:column="23"/></name></expr>;<pos:position pos:line="57" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="59" pos:column="5">else <if pos:line="59" pos:column="10">if <condition pos:line="59" pos:column="13">(<expr><call><name pos:line="59" pos:column="14">strcEQ<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">(<argument><expr><name pos:line="59" pos:column="21">var<pos:position pos:line="59" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="26">"A_KEY"<pos:position pos:line="59" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="35"/></condition><then pos:line="59" pos:column="35"> <block pos:line="59" pos:column="36">{
        <expr_stmt><expr><name pos:line="60" pos:column="9">nid<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">=<pos:position pos:line="60" pos:column="14"/></operator> <call><name pos:line="60" pos:column="15">OBJ_obj2nid<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><operator pos:line="60" pos:column="27">(<pos:position pos:line="60" pos:column="28"/></operator><name pos:line="60" pos:column="28">ASN1_OBJECT<pos:position pos:line="60" pos:column="39"/></name> <operator pos:line="60" pos:column="40">*<pos:position pos:line="60" pos:column="41"/></operator><operator pos:line="60" pos:column="41">)<pos:position pos:line="60" pos:column="42"/></operator><operator pos:line="60" pos:column="42">(<pos:position pos:line="60" pos:column="43"/></operator><name><name pos:line="60" pos:column="43">xs<pos:position pos:line="60" pos:column="45"/></name><operator pos:line="60" pos:column="45">-&gt;<pos:position pos:line="60" pos:column="50"/></operator><name pos:line="60" pos:column="47">cert_info<pos:position pos:line="60" pos:column="56"/></name><operator pos:line="60" pos:column="56">-&gt;<pos:position pos:line="60" pos:column="61"/></operator><name pos:line="60" pos:column="58">key<pos:position pos:line="60" pos:column="61"/></name><operator pos:line="60" pos:column="61">-&gt;<pos:position pos:line="60" pos:column="66"/></operator><name pos:line="60" pos:column="63">algor<pos:position pos:line="60" pos:column="68"/></name><operator pos:line="60" pos:column="68">-&gt;<pos:position pos:line="60" pos:column="73"/></operator><name pos:line="60" pos:column="70">algorithm<pos:position pos:line="60" pos:column="79"/></name></name><operator pos:line="60" pos:column="79">)<pos:position pos:line="60" pos:column="80"/></operator></expr></argument>)<pos:position pos:line="60" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="82"/></expr_stmt>
        <expr_stmt><expr><name pos:line="61" pos:column="9">result<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <call><name pos:line="61" pos:column="18">apr_pstrdup<pos:position pos:line="61" pos:column="29"/></name><argument_list pos:line="61" pos:column="29">(<argument><expr><name pos:line="61" pos:column="30">p<pos:position pos:line="61" pos:column="31"/></name></expr></argument>,
                             <argument><expr><ternary><condition><expr><operator pos:line="62" pos:column="30">(<pos:position pos:line="62" pos:column="31"/></operator><name pos:line="62" pos:column="31">nid<pos:position pos:line="62" pos:column="34"/></name> <operator pos:line="62" pos:column="35">==<pos:position pos:line="62" pos:column="37"/></operator> <name pos:line="62" pos:column="38">NID_undef<pos:position pos:line="62" pos:column="47"/></name><operator pos:line="62" pos:column="47">)<pos:position pos:line="62" pos:column="48"/></operator></expr> ?<pos:position pos:line="62" pos:column="50"/></condition><then pos:line="62" pos:column="50"> <expr><literal type="string" pos:line="62" pos:column="51">"UNKNOWN"<pos:position pos:line="62" pos:column="60"/></literal></expr> <pos:position pos:line="62" pos:column="61"/></then><else pos:line="62" pos:column="61">: <expr><call><name pos:line="62" pos:column="63">OBJ_nid2ln<pos:position pos:line="62" pos:column="73"/></name><argument_list pos:line="62" pos:column="73">(<argument><expr><name pos:line="62" pos:column="74">nid<pos:position pos:line="62" pos:column="77"/></name></expr></argument>)<pos:position pos:line="62" pos:column="78"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="62" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><name pos:line="63" pos:column="9">resdup<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">=<pos:position pos:line="63" pos:column="17"/></operator> <name pos:line="63" pos:column="18">FALSE<pos:position pos:line="63" pos:column="23"/></name></expr>;<pos:position pos:line="63" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="65" pos:column="5">else <if pos:line="65" pos:column="10">if <condition pos:line="65" pos:column="13">(<expr><call><name pos:line="65" pos:column="14">strcEQ<pos:position pos:line="65" pos:column="20"/></name><argument_list pos:line="65" pos:column="20">(<argument><expr><name pos:line="65" pos:column="21">var<pos:position pos:line="65" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="26">"CERT"<pos:position pos:line="65" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="34"/></condition><then pos:line="65" pos:column="34"> <block pos:line="65" pos:column="35">{
        <expr_stmt><expr><name pos:line="66" pos:column="9">result<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">=<pos:position pos:line="66" pos:column="17"/></operator> <call><name pos:line="66" pos:column="18">ssl_var_lookup_ssl_cert_PEM<pos:position pos:line="66" pos:column="45"/></name><argument_list pos:line="66" pos:column="45">(<argument><expr><name pos:line="66" pos:column="46">p<pos:position pos:line="66" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="49">xs<pos:position pos:line="66" pos:column="51"/></name></expr></argument>)<pos:position pos:line="66" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><name pos:line="69" pos:column="9">resdup<pos:position pos:line="69" pos:column="15"/></name></expr>)<pos:position pos:line="69" pos:column="16"/></condition><then pos:line="69" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><name pos:line="70" pos:column="9">result<pos:position pos:line="70" pos:column="15"/></name> <operator pos:line="70" pos:column="16">=<pos:position pos:line="70" pos:column="17"/></operator> <call><name pos:line="70" pos:column="18">apr_pstrdup<pos:position pos:line="70" pos:column="29"/></name><argument_list pos:line="70" pos:column="29">(<argument><expr><name pos:line="70" pos:column="30">p<pos:position pos:line="70" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="33">result<pos:position pos:line="70" pos:column="39"/></name></expr></argument>)<pos:position pos:line="70" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="41"/></expr_stmt></block></then></if>
    <return pos:line="71" pos:column="5">return <expr><name pos:line="71" pos:column="12">result<pos:position pos:line="71" pos:column="18"/></name></expr>;<pos:position pos:line="71" pos:column="19"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

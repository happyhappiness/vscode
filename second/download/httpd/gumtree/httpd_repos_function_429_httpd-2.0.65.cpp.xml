<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_429_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">merge_env_dir_configs<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">apr_pool_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">p<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">void<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">basev<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">void<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">addv<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">env_dir_config_rec<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">base<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name pos:line="3" pos:column="32">basev<pos:position pos:line="3" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">env_dir_config_rec<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">add<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name pos:line="4" pos:column="31">addv<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">env_dir_config_rec<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">res<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><call><name pos:line="5" pos:column="31">apr_palloc<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">(<argument><expr><name pos:line="5" pos:column="42">p<pos:position pos:line="5" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="45">sizeof<argument_list pos:line="5" pos:column="51">(<argument><expr><operator pos:line="5" pos:column="52">*<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="53">res<pos:position pos:line="5" pos:column="56"/></name></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="59"/></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">apr_table_entry_t<pos:position pos:line="7" pos:column="28"/></name> <modifier pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></modifier></type><name pos:line="7" pos:column="30">elts<pos:position pos:line="7" pos:column="34"/></name></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">apr_array_header_t<pos:position pos:line="8" pos:column="29"/></name> <modifier pos:line="8" pos:column="30">*<pos:position pos:line="8" pos:column="31"/></modifier></type><name pos:line="8" pos:column="31">arr<pos:position pos:line="8" pos:column="34"/></name></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">i<pos:position pos:line="10" pos:column="10"/></name></decl>;<pos:position pos:line="10" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* 
     * res-&gt;vars = copy_table( p, base-&gt;vars );
     * foreach $unsetenv ( @add-&gt;unsetenv )
     *     table_unset( res-&gt;vars, $unsetenv );
     * foreach $element ( @add-&gt;vars )
     *     table_set( res-&gt;vars, $element.key, $element.val );
     *
     * add-&gt;unsetenv already removed the vars from add-&gt;vars, 
     * if they preceeded the UnsetEnv directive.
     */</comment>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">res<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">-&gt;<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="10">vars<pos:position pos:line="22" pos:column="14"/></name></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <call><name pos:line="22" pos:column="17">apr_table_copy<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">p<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="35">base<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">-&gt;<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="41">vars<pos:position pos:line="22" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">res<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">-&gt;<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="10">unsetenv<pos:position pos:line="23" pos:column="18"/></name></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <name pos:line="23" pos:column="21">NULL<pos:position pos:line="23" pos:column="25"/></name></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name pos:line="25" pos:column="5">arr<pos:position pos:line="25" pos:column="8"/></name> <operator pos:line="25" pos:column="9">=<pos:position pos:line="25" pos:column="10"/></operator> <call><name pos:line="25" pos:column="11">apr_table_elts<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name><name pos:line="25" pos:column="26">add<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">-&gt;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="31">unsetenv<pos:position pos:line="25" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">arr<pos:position pos:line="26" pos:column="12"/></name></expr>)<pos:position pos:line="26" pos:column="13"/></condition><then pos:line="26" pos:column="13"> <block pos:line="26" pos:column="14">{
        <expr_stmt><expr><name pos:line="27" pos:column="9">elts<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <operator pos:line="27" pos:column="16">(<pos:position pos:line="27" pos:column="17"/></operator><specifier pos:line="27" pos:column="17">const<pos:position pos:line="27" pos:column="22"/></specifier> <name pos:line="27" pos:column="23">apr_table_entry_t<pos:position pos:line="27" pos:column="40"/></name> <operator pos:line="27" pos:column="41">*<pos:position pos:line="27" pos:column="42"/></operator><operator pos:line="27" pos:column="42">)<pos:position pos:line="27" pos:column="43"/></operator><name><name pos:line="27" pos:column="43">arr<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">-&gt;<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="48">elts<pos:position pos:line="27" pos:column="52"/></name></name></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>

        <for pos:line="29" pos:column="9">for <control pos:line="29" pos:column="13">(<init><expr><name pos:line="29" pos:column="14">i<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <literal type="number" pos:line="29" pos:column="18">0<pos:position pos:line="29" pos:column="19"/></literal></expr>;<pos:position pos:line="29" pos:column="20"/></init> <condition><expr><name pos:line="29" pos:column="21">i<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">&lt;<pos:position pos:line="29" pos:column="27"/></operator> <name><name pos:line="29" pos:column="25">arr<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">-&gt;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="30">nelts<pos:position pos:line="29" pos:column="35"/></name></name></expr>;<pos:position pos:line="29" pos:column="36"/></condition> <incr><expr><operator pos:line="29" pos:column="37">++<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="39">i<pos:position pos:line="29" pos:column="40"/></name></expr></incr>)<pos:position pos:line="29" pos:column="41"/></control> <block pos:line="29" pos:column="42">{
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">apr_table_unset<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><name><name pos:line="30" pos:column="29">res<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">-&gt;<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="34">vars<pos:position pos:line="30" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="40">elts<pos:position pos:line="30" pos:column="44"/></name><index pos:line="30" pos:column="44">[<expr><name pos:line="30" pos:column="45">i<pos:position pos:line="30" pos:column="46"/></name></expr>]<pos:position pos:line="30" pos:column="47"/></index></name><operator pos:line="30" pos:column="47">.<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="48">key<pos:position pos:line="30" pos:column="51"/></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></for>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="34" pos:column="5">arr<pos:position pos:line="34" pos:column="8"/></name> <operator pos:line="34" pos:column="9">=<pos:position pos:line="34" pos:column="10"/></operator> <call><name pos:line="34" pos:column="11">apr_table_elts<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name><name pos:line="34" pos:column="26">add<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">vars<pos:position pos:line="34" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="37"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">arr<pos:position pos:line="35" pos:column="12"/></name></expr>)<pos:position pos:line="35" pos:column="13"/></condition><then pos:line="35" pos:column="13"> <block pos:line="35" pos:column="14">{
        <expr_stmt><expr><name pos:line="36" pos:column="9">elts<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <operator pos:line="36" pos:column="16">(<pos:position pos:line="36" pos:column="17"/></operator><specifier pos:line="36" pos:column="17">const<pos:position pos:line="36" pos:column="22"/></specifier> <name pos:line="36" pos:column="23">apr_table_entry_t<pos:position pos:line="36" pos:column="40"/></name> <operator pos:line="36" pos:column="41">*<pos:position pos:line="36" pos:column="42"/></operator><operator pos:line="36" pos:column="42">)<pos:position pos:line="36" pos:column="43"/></operator><name><name pos:line="36" pos:column="43">arr<pos:position pos:line="36" pos:column="46"/></name><operator pos:line="36" pos:column="46">-&gt;<pos:position pos:line="36" pos:column="51"/></operator><name pos:line="36" pos:column="48">elts<pos:position pos:line="36" pos:column="52"/></name></name></expr>;<pos:position pos:line="36" pos:column="53"/></expr_stmt>

        <for pos:line="38" pos:column="9">for <control pos:line="38" pos:column="13">(<init><expr><name pos:line="38" pos:column="14">i<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <literal type="number" pos:line="38" pos:column="18">0<pos:position pos:line="38" pos:column="19"/></literal></expr>;<pos:position pos:line="38" pos:column="20"/></init> <condition><expr><name pos:line="38" pos:column="21">i<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">&lt;<pos:position pos:line="38" pos:column="27"/></operator> <name><name pos:line="38" pos:column="25">arr<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">-&gt;<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="30">nelts<pos:position pos:line="38" pos:column="35"/></name></name></expr>;<pos:position pos:line="38" pos:column="36"/></condition> <incr><expr><operator pos:line="38" pos:column="37">++<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="39">i<pos:position pos:line="38" pos:column="40"/></name></expr></incr>)<pos:position pos:line="38" pos:column="41"/></control> <block pos:line="38" pos:column="42">{
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">apr_table_setn<pos:position pos:line="39" pos:column="27"/></name><argument_list pos:line="39" pos:column="27">(<argument><expr><name><name pos:line="39" pos:column="28">res<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">-&gt;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="33">vars<pos:position pos:line="39" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="39">elts<pos:position pos:line="39" pos:column="43"/></name><index pos:line="39" pos:column="43">[<expr><name pos:line="39" pos:column="44">i<pos:position pos:line="39" pos:column="45"/></name></expr>]<pos:position pos:line="39" pos:column="46"/></index></name><operator pos:line="39" pos:column="46">.<pos:position pos:line="39" pos:column="47"/></operator><name pos:line="39" pos:column="47">key<pos:position pos:line="39" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="52">elts<pos:position pos:line="39" pos:column="56"/></name><index pos:line="39" pos:column="56">[<expr><name pos:line="39" pos:column="57">i<pos:position pos:line="39" pos:column="58"/></name></expr>]<pos:position pos:line="39" pos:column="59"/></index></name><operator pos:line="39" pos:column="59">.<pos:position pos:line="39" pos:column="60"/></operator><name pos:line="39" pos:column="60">val<pos:position pos:line="39" pos:column="63"/></name></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></for>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">res<pos:position pos:line="43" pos:column="15"/></name></expr>;<pos:position pos:line="43" pos:column="16"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

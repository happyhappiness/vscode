<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_934_httpd-2.2.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name>
<modifier pos:line="2" pos:column="1">*<pos:position pos:line="2" pos:column="2"/></modifier></type><name pos:line="2" pos:column="2">set_cache_removal_algorithm<pos:position pos:line="2" pos:column="29"/></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name pos:line="2" pos:column="30">cmd_parms<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">parms<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">void<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">name<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="60">const<pos:position pos:line="2" pos:column="65"/></specifier> <name pos:line="2" pos:column="66">char<pos:position pos:line="2" pos:column="70"/></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">arg<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">strcasecmp<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><literal type="string" pos:line="4" pos:column="20">"LRU"<pos:position pos:line="4" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="27">arg<pos:position pos:line="4" pos:column="30"/></name></expr></argument>)<pos:position pos:line="4" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="32"/></condition><then pos:line="4" pos:column="32"> <block pos:line="4" pos:column="33">{
        <expr_stmt><expr><name><name pos:line="5" pos:column="9">sconf<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">cache_remove_algorithm<pos:position pos:line="5" pos:column="38"/></name></name> <operator pos:line="5" pos:column="39">=<pos:position pos:line="5" pos:column="40"/></operator> <name pos:line="5" pos:column="41">memcache_lru_algorithm<pos:position pos:line="5" pos:column="63"/></name></expr>;<pos:position pos:line="5" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="6" pos:column="6"/></block></then>
    <else pos:line="7" pos:column="5">else <block pos:line="7" pos:column="10">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">strcasecmp<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><literal type="string" pos:line="8" pos:column="24">"GDSF"<pos:position pos:line="8" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="32">arg<pos:position pos:line="8" pos:column="35"/></name></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="37"/></condition><then pos:line="8" pos:column="37"> <block pos:line="8" pos:column="38">{
            <expr_stmt><expr><name><name pos:line="9" pos:column="13">sconf<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">cache_remove_algorithm<pos:position pos:line="9" pos:column="42"/></name></name> <operator pos:line="9" pos:column="43">=<pos:position pos:line="9" pos:column="44"/></operator> <name pos:line="9" pos:column="45">memcache_gdsf_algorithm<pos:position pos:line="9" pos:column="68"/></name></expr>;<pos:position pos:line="9" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="10" pos:column="10"/></block></then>
        <else pos:line="11" pos:column="9">else <block pos:line="11" pos:column="14">{
            <return pos:line="12" pos:column="13">return <expr><literal type="string" pos:line="12" pos:column="20">"currently implemented algorithms are LRU and GDSF"<pos:position pos:line="12" pos:column="71"/></literal></expr>;<pos:position pos:line="12" pos:column="72"/></return>
        }<pos:position pos:line="13" pos:column="10"/></block></else></if>
    }<pos:position pos:line="14" pos:column="6"/></block></else></if>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">NULL<pos:position pos:line="15" pos:column="16"/></name></expr>;<pos:position pos:line="15" pos:column="17"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

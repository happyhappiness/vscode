<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_26_httpd-2.4.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">htdbm_init<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">apr_pool_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">pool<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">htdbm_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier><modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">hdbm<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{

<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">APR_CHARSET_EBCDIC<pos:position pos:line="4" pos:column="23"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">apr_pool_create<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">( <argument><expr><name pos:line="8" pos:column="22">pool<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="28">NULL<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">apr_pool_abort_set<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">abort_on_oom<pos:position pos:line="9" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="38">*<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="39">pool<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">apr_file_open_stderr<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><operator pos:line="10" pos:column="26">&amp;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="27">errfile<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="36">*<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="37">pool<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">apr_signal<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">SIGINT<pos:position pos:line="11" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><call><call><name pos:line="11" pos:column="25">void<pos:position pos:line="11" pos:column="29"/></name> <argument_list pos:line="11" pos:column="30">(<argument><expr><operator pos:line="11" pos:column="31">*<pos:position pos:line="11" pos:column="32"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">int<pos:position pos:line="11" pos:column="37"/></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call><operator pos:line="11" pos:column="38">)<pos:position pos:line="11" pos:column="39"/></operator> <name pos:line="11" pos:column="40">htdbm_interrupted<pos:position pos:line="11" pos:column="57"/></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="13" pos:column="5">(<pos:position pos:line="13" pos:column="6"/></operator><operator pos:line="13" pos:column="6">*<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">hdbm<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">)<pos:position pos:line="13" pos:column="12"/></operator> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <operator pos:line="13" pos:column="15">(<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">htdbm_t<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></operator><operator pos:line="13" pos:column="25">)<pos:position pos:line="13" pos:column="26"/></operator><call><name pos:line="13" pos:column="26">apr_pcalloc<pos:position pos:line="13" pos:column="37"/></name><argument_list pos:line="13" pos:column="37">(<argument><expr><operator pos:line="13" pos:column="38">*<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="39">pool<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="45">sizeof<argument_list pos:line="13" pos:column="51">(<argument><expr><name pos:line="13" pos:column="52">htdbm_t<pos:position pos:line="13" pos:column="59"/></name></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="14" pos:column="5">(<pos:position pos:line="14" pos:column="6"/></operator><operator pos:line="14" pos:column="6">*<pos:position pos:line="14" pos:column="7"/></operator><name pos:line="14" pos:column="7">hdbm<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">)<pos:position pos:line="14" pos:column="12"/></operator><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name><name pos:line="14" pos:column="14">ctx<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">.<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">pool<pos:position pos:line="14" pos:column="22"/></name></name></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <operator pos:line="14" pos:column="25">*<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">pool<pos:position pos:line="14" pos:column="30"/></name></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>

<cpp:if pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">if<pos:position pos:line="16" pos:column="4"/></cpp:directive> <expr><name pos:line="16" pos:column="5">APR_CHARSET_EBCDIC<pos:position pos:line="16" pos:column="23"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="17" pos:column="5">rv<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">apr_xlate_open<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><operator pos:line="17" pos:column="25">&amp;<pos:position pos:line="17" pos:column="30"/></operator><operator pos:line="17" pos:column="26">(<pos:position pos:line="17" pos:column="27"/></operator><name><operator pos:line="17" pos:column="27">(<pos:position pos:line="17" pos:column="28"/></operator><operator pos:line="17" pos:column="28">*<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="29">hdbm<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">)<pos:position pos:line="17" pos:column="34"/></operator><operator pos:line="17" pos:column="34">-&gt;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="36">to_ascii<pos:position pos:line="17" pos:column="44"/></name></name><operator pos:line="17" pos:column="44">)<pos:position pos:line="17" pos:column="45"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="47">"ISO-8859-1"<pos:position pos:line="17" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="61">APR_DEFAULT_CHARSET<pos:position pos:line="17" pos:column="80"/></name></expr></argument>, <argument><expr><name><operator pos:line="17" pos:column="82">(<pos:position pos:line="17" pos:column="83"/></operator><operator pos:line="17" pos:column="83">*<pos:position pos:line="17" pos:column="84"/></operator><name pos:line="17" pos:column="84">hdbm<pos:position pos:line="17" pos:column="88"/></name><operator pos:line="17" pos:column="88">)<pos:position pos:line="17" pos:column="89"/></operator><operator pos:line="17" pos:column="89">-&gt;<pos:position pos:line="17" pos:column="94"/></operator><name><name pos:line="17" pos:column="91">ctx<pos:position pos:line="17" pos:column="94"/></name><operator pos:line="17" pos:column="94">.<pos:position pos:line="17" pos:column="95"/></operator><name pos:line="17" pos:column="95">pool<pos:position pos:line="17" pos:column="99"/></name></name></name></expr></argument>)<pos:position pos:line="17" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="101"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">rv<pos:position pos:line="18" pos:column="11"/></name></expr>)<pos:position pos:line="18" pos:column="12"/></condition><then pos:line="18" pos:column="12"> <block pos:line="18" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">fprintf<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">stderr<pos:position pos:line="19" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="25">"apr_xlate_open(to ASCII)-&gt;%d\n"<pos:position pos:line="19" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="59">rv<pos:position pos:line="19" pos:column="61"/></name></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">APR_EGENERAL<pos:position pos:line="20" pos:column="28"/></name></expr>;<pos:position pos:line="20" pos:column="29"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="22" pos:column="5">rv<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <call><name pos:line="22" pos:column="10">apr_SHA1InitEBCDIC<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name><operator pos:line="22" pos:column="29">(<pos:position pos:line="22" pos:column="30"/></operator><operator pos:line="22" pos:column="30">*<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="31">hdbm<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">)<pos:position pos:line="22" pos:column="36"/></operator><operator pos:line="22" pos:column="36">-&gt;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="38">to_ascii<pos:position pos:line="22" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">rv<pos:position pos:line="23" pos:column="11"/></name></expr>)<pos:position pos:line="23" pos:column="12"/></condition><then pos:line="23" pos:column="12"> <block pos:line="23" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">fprintf<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">stderr<pos:position pos:line="24" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="25">"apr_SHA1InitEBCDIC()-&gt;%d\n"<pos:position pos:line="24" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="55">rv<pos:position pos:line="24" pos:column="57"/></name></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="59"/></expr_stmt>
        <return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">APR_EGENERAL<pos:position pos:line="25" pos:column="28"/></name></expr>;<pos:position pos:line="25" pos:column="29"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="27" pos:column="5">rv<pos:position pos:line="27" pos:column="7"/></name> <operator pos:line="27" pos:column="8">=<pos:position pos:line="27" pos:column="9"/></operator> <call><name pos:line="27" pos:column="10">apr_MD5InitEBCDIC<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name><operator pos:line="27" pos:column="28">(<pos:position pos:line="27" pos:column="29"/></operator><operator pos:line="27" pos:column="29">*<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">hdbm<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">)<pos:position pos:line="27" pos:column="35"/></operator><operator pos:line="27" pos:column="35">-&gt;<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="37">to_ascii<pos:position pos:line="27" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">rv<pos:position pos:line="28" pos:column="11"/></name></expr>)<pos:position pos:line="28" pos:column="12"/></condition><then pos:line="28" pos:column="12"> <block pos:line="28" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">fprintf<pos:position pos:line="29" pos:column="16"/></name><argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">stderr<pos:position pos:line="29" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="25">"apr_MD5InitEBCDIC()-&gt;%d\n"<pos:position pos:line="29" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="54">rv<pos:position pos:line="29" pos:column="56"/></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt>
        <return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">APR_EGENERAL<pos:position pos:line="30" pos:column="28"/></name></expr>;<pos:position pos:line="30" pos:column="29"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="32" pos:column="8">/*APR_CHARSET_EBCDIC*/</comment>

    <comment type="block" pos:line="34" pos:column="5">/* Set MD5 as default */</comment>
    <expr_stmt><expr><name><operator pos:line="35" pos:column="5">(<pos:position pos:line="35" pos:column="6"/></operator><operator pos:line="35" pos:column="6">*<pos:position pos:line="35" pos:column="7"/></operator><name pos:line="35" pos:column="7">hdbm<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">)<pos:position pos:line="35" pos:column="12"/></operator><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name><name pos:line="35" pos:column="14">ctx<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">.<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">alg<pos:position pos:line="35" pos:column="21"/></name></name></name> <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <name pos:line="35" pos:column="24">ALG_APMD5<pos:position pos:line="35" pos:column="33"/></name></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="36" pos:column="5">(<pos:position pos:line="36" pos:column="6"/></operator><operator pos:line="36" pos:column="6">*<pos:position pos:line="36" pos:column="7"/></operator><name pos:line="36" pos:column="7">hdbm<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">)<pos:position pos:line="36" pos:column="12"/></operator><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">type<pos:position pos:line="36" pos:column="18"/></name></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <literal type="string" pos:line="36" pos:column="21">"default"<pos:position pos:line="36" pos:column="30"/></literal></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
    <return pos:line="37" pos:column="5">return <expr><name pos:line="37" pos:column="12">APR_SUCCESS<pos:position pos:line="37" pos:column="23"/></name></expr>;<pos:position pos:line="37" pos:column="24"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6138.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">h2_task_process_request<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">h2_task<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">task<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">conn_rec<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">c<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">h2_request<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">req<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name><name pos:line="3" pos:column="29">task<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">-&gt;<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="35">request<pos:position pos:line="3" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">conn_state_t<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">cs<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name><name pos:line="4" pos:column="24">c<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">cs<pos:position pos:line="4" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">request_rec<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">r<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">ap_log_cerror<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">APLOG_MARK<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="31">APLOG_TRACE1<pos:position pos:line="7" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="45">0<pos:position pos:line="7" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="48">c<pos:position pos:line="7" pos:column="49"/></name></expr></argument>,
                  <argument><expr><literal type="string" pos:line="8" pos:column="19">"h2_task(%s): create request_rec"<pos:position pos:line="8" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="54">task<pos:position pos:line="8" pos:column="58"/></name><operator pos:line="8" pos:column="58">-&gt;<pos:position pos:line="8" pos:column="63"/></operator><name pos:line="8" pos:column="60">id<pos:position pos:line="8" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">r<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <call><name pos:line="9" pos:column="9">h2_request_create_rec<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">req<pos:position pos:line="9" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="36">c<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">r<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">&amp;&amp;<pos:position pos:line="10" pos:column="21"/></operator> <operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><name><name pos:line="10" pos:column="15">r<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">status<pos:position pos:line="10" pos:column="24"/></name></name> <operator pos:line="10" pos:column="25">==<pos:position pos:line="10" pos:column="27"/></operator> <name pos:line="10" pos:column="28">HTTP_OK<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">)<pos:position pos:line="10" pos:column="36"/></operator></expr>)<pos:position pos:line="10" pos:column="37"/></condition><then pos:line="10" pos:column="37"> <block pos:line="10" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">ap_update_child_status<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name><name pos:line="11" pos:column="32">c<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">-&gt;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="35">sbh<pos:position pos:line="11" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">SERVER_BUSY_READ<pos:position pos:line="11" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="58">r<pos:position pos:line="11" pos:column="59"/></name></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="61"/></expr_stmt>
        
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">cs<pos:position pos:line="13" pos:column="15"/></name></expr>)<pos:position pos:line="13" pos:column="16"/></condition><then pos:line="13" pos:column="16"> <block pos:line="13" pos:column="17">{
            <expr_stmt><expr><name><name pos:line="14" pos:column="13">cs<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">-&gt;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="17">state<pos:position pos:line="14" pos:column="22"/></name></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">CONN_STATE_HANDLER<pos:position pos:line="14" pos:column="43"/></name></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">ap_log_cerror<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">APLOG_MARK<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="35">APLOG_TRACE1<pos:position pos:line="16" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="49">0<pos:position pos:line="16" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="52">c<pos:position pos:line="16" pos:column="53"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="17" pos:column="23">"h2_task(%s): start process_request"<pos:position pos:line="17" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="61">task<pos:position pos:line="17" pos:column="65"/></name><operator pos:line="17" pos:column="65">-&gt;<pos:position pos:line="17" pos:column="70"/></operator><name pos:line="17" pos:column="67">id<pos:position pos:line="17" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">ap_process_request<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">r<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">task<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">frozen<pos:position pos:line="19" pos:column="25"/></name></name></expr>)<pos:position pos:line="19" pos:column="26"/></condition><then pos:line="19" pos:column="26"> <block pos:line="19" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">ap_log_cerror<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">APLOG_MARK<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="39">APLOG_TRACE1<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="53">0<pos:position pos:line="20" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="56">c<pos:position pos:line="20" pos:column="57"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="21" pos:column="27">"h2_task(%s): process_request frozen"<pos:position pos:line="21" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="66">task<pos:position pos:line="21" pos:column="70"/></name><operator pos:line="21" pos:column="70">-&gt;<pos:position pos:line="21" pos:column="75"/></operator><name pos:line="21" pos:column="72">id<pos:position pos:line="21" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">ap_log_cerror<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">APLOG_MARK<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="35">APLOG_TRACE1<pos:position pos:line="23" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="49">0<pos:position pos:line="23" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="52">c<pos:position pos:line="23" pos:column="53"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="24" pos:column="23">"h2_task(%s): process_request done"<pos:position pos:line="24" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="60">task<pos:position pos:line="24" pos:column="64"/></name><operator pos:line="24" pos:column="64">-&gt;<pos:position pos:line="24" pos:column="69"/></operator><name pos:line="24" pos:column="66">id<pos:position pos:line="24" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="70"/></expr_stmt>
        
        <comment type="block" pos:line="26" pos:column="9">/* After the call to ap_process_request, the
         * request pool will have been deleted.  We set
         * r=NULL here to ensure that any dereference
         * of r that might be added later in this function
         * will result in a segfault immediately instead
         * of nondeterministic failures later.
         */</comment>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">cs<pos:position pos:line="33" pos:column="15"/></name></expr>)<pos:position pos:line="33" pos:column="16"/></condition><then pos:line="33" pos:column="16"> 
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="34" pos:column="13">cs<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">-&gt;<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="17">state<pos:position pos:line="34" pos:column="22"/></name></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <name pos:line="34" pos:column="25">CONN_STATE_WRITE_COMPLETION<pos:position pos:line="34" pos:column="52"/></name></expr>;<pos:position pos:line="34" pos:column="53"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="35" pos:column="9">r<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <name pos:line="35" pos:column="13">NULL<pos:position pos:line="35" pos:column="17"/></name></expr>;<pos:position pos:line="35" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then>
    <elseif pos:line="37" pos:column="5">else <if pos:line="37" pos:column="10">if <condition pos:line="37" pos:column="13">(<expr><operator pos:line="37" pos:column="14">!<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">r<pos:position pos:line="37" pos:column="16"/></name></expr>)<pos:position pos:line="37" pos:column="17"/></condition><then pos:line="37" pos:column="17"> <block pos:line="37" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">ap_log_cerror<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">(<argument><expr><name pos:line="38" pos:column="23">APLOG_MARK<pos:position pos:line="38" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="35">APLOG_TRACE1<pos:position pos:line="38" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="49">0<pos:position pos:line="38" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="52">c<pos:position pos:line="38" pos:column="53"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="39" pos:column="23">"h2_task(%s): create request_rec failed, r=NULL"<pos:position pos:line="39" pos:column="71"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="73">task<pos:position pos:line="39" pos:column="77"/></name><operator pos:line="39" pos:column="77">-&gt;<pos:position pos:line="39" pos:column="82"/></operator><name pos:line="39" pos:column="79">id<pos:position pos:line="39" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="83"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if></elseif>
    <else pos:line="41" pos:column="5">else <block pos:line="41" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">ap_log_cerror<pos:position pos:line="42" pos:column="22"/></name><argument_list pos:line="42" pos:column="22">(<argument><expr><name pos:line="42" pos:column="23">APLOG_MARK<pos:position pos:line="42" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="35">APLOG_TRACE1<pos:position pos:line="42" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="49">0<pos:position pos:line="42" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="52">c<pos:position pos:line="42" pos:column="53"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="43" pos:column="23">"h2_task(%s): create request_rec failed, r-&gt;status=%d"<pos:position pos:line="43" pos:column="80"/></literal></expr></argument>, 
                      <argument><expr><name><name pos:line="44" pos:column="23">task<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">-&gt;<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="29">id<pos:position pos:line="44" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="33">r<pos:position pos:line="44" pos:column="34"/></name><operator pos:line="44" pos:column="34">-&gt;<pos:position pos:line="44" pos:column="39"/></operator><name pos:line="44" pos:column="36">status<pos:position pos:line="44" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></else></if>

    <return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">APR_SUCCESS<pos:position pos:line="47" pos:column="23"/></name></expr>;<pos:position pos:line="47" pos:column="24"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3404_httpd-2.2.17.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier></type> <name><name pos:line="1" pos:column="38">argv<pos:position pos:line="1" pos:column="42"/></name><index pos:line="1" pos:column="42">[]<pos:position pos:line="1" pos:column="44"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list> <block pos:line="1" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="2" pos:column="5">int<pos:position pos:line="2" pos:column="8"/></name></type> <name pos:line="2" pos:column="9">i<pos:position pos:line="2" pos:column="10"/></name></decl>;<pos:position pos:line="2" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">rv<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">list_provided<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><literal type="number" pos:line="4" pos:column="25">0<pos:position pos:line="4" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">abts_suite<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">suite<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><name pos:line="5" pos:column="25">NULL<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
   
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">initialize<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">()<pos:position pos:line="7" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">quiet<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><call><name pos:line="9" pos:column="14">isatty<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">STDOUT_FILENO<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>

    <for pos:line="11" pos:column="5">for <control pos:line="11" pos:column="9">(<init><expr><name pos:line="11" pos:column="10">i<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal></expr>;<pos:position pos:line="11" pos:column="16"/></init> <condition><expr><name pos:line="11" pos:column="17">i<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">&lt;<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="21">argc<pos:position pos:line="11" pos:column="25"/></name></expr>;<pos:position pos:line="11" pos:column="26"/></condition> <incr><expr><name pos:line="11" pos:column="27">i<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">++<pos:position pos:line="11" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="31"/></control> <block pos:line="11" pos:column="32">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><call><name pos:line="12" pos:column="14">strcmp<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name><name pos:line="12" pos:column="21">argv<pos:position pos:line="12" pos:column="25"/></name><index pos:line="12" pos:column="25">[<expr><name pos:line="12" pos:column="26">i<pos:position pos:line="12" pos:column="27"/></name></expr>]<pos:position pos:line="12" pos:column="28"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="30">"-v"<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="36"/></condition><then pos:line="12" pos:column="36"> <block pos:line="12" pos:column="37">{
            <expr_stmt><expr><name pos:line="13" pos:column="13">verbose<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <literal type="number" pos:line="13" pos:column="23">1<pos:position pos:line="13" pos:column="24"/></literal></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
            <continue pos:line="14" pos:column="13">continue;<pos:position pos:line="14" pos:column="22"/></continue>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><call><name pos:line="16" pos:column="14">strcmp<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name><name pos:line="16" pos:column="21">argv<pos:position pos:line="16" pos:column="25"/></name><index pos:line="16" pos:column="25">[<expr><name pos:line="16" pos:column="26">i<pos:position pos:line="16" pos:column="27"/></name></expr>]<pos:position pos:line="16" pos:column="28"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="30">"-x"<pos:position pos:line="16" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="36"/></condition><then pos:line="16" pos:column="36"> <block pos:line="16" pos:column="37">{
            <expr_stmt><expr><name pos:line="17" pos:column="13">exclude<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <literal type="number" pos:line="17" pos:column="23">1<pos:position pos:line="17" pos:column="24"/></literal></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
            <continue pos:line="18" pos:column="13">continue;<pos:position pos:line="18" pos:column="22"/></continue>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><call><name pos:line="20" pos:column="14">strcmp<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><name><name pos:line="20" pos:column="21">argv<pos:position pos:line="20" pos:column="25"/></name><index pos:line="20" pos:column="25">[<expr><name pos:line="20" pos:column="26">i<pos:position pos:line="20" pos:column="27"/></name></expr>]<pos:position pos:line="20" pos:column="28"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="30">"-l"<pos:position pos:line="20" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="36"/></condition><then pos:line="20" pos:column="36"> <block pos:line="20" pos:column="37">{
            <expr_stmt><expr><name pos:line="21" pos:column="13">list_tests<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <literal type="number" pos:line="21" pos:column="26">1<pos:position pos:line="21" pos:column="27"/></literal></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
            <continue pos:line="22" pos:column="13">continue;<pos:position pos:line="22" pos:column="22"/></continue>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><call><name pos:line="24" pos:column="14">strcmp<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name><name pos:line="24" pos:column="21">argv<pos:position pos:line="24" pos:column="25"/></name><index pos:line="24" pos:column="25">[<expr><name pos:line="24" pos:column="26">i<pos:position pos:line="24" pos:column="27"/></name></expr>]<pos:position pos:line="24" pos:column="28"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="30">"-q"<pos:position pos:line="24" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="36"/></condition><then pos:line="24" pos:column="36"> <block pos:line="24" pos:column="37">{
            <expr_stmt><expr><name pos:line="25" pos:column="13">quiet<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <literal type="number" pos:line="25" pos:column="21">1<pos:position pos:line="25" pos:column="22"/></literal></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
            <continue pos:line="26" pos:column="13">continue;<pos:position pos:line="26" pos:column="22"/></continue>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">argv<pos:position pos:line="28" pos:column="17"/></name><index pos:line="28" pos:column="17">[<expr><name pos:line="28" pos:column="18">i<pos:position pos:line="28" pos:column="19"/></name></expr>]<pos:position pos:line="28" pos:column="20"/></index><index pos:line="28" pos:column="20">[<expr><literal type="number" pos:line="28" pos:column="21">0<pos:position pos:line="28" pos:column="22"/></literal></expr>]<pos:position pos:line="28" pos:column="23"/></index></name> <operator pos:line="28" pos:column="24">==<pos:position pos:line="28" pos:column="26"/></operator> <literal type="char" pos:line="28" pos:column="27">'-'<pos:position pos:line="28" pos:column="30"/></literal></expr>)<pos:position pos:line="28" pos:column="31"/></condition><then pos:line="28" pos:column="31"> <block pos:line="28" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">fprintf<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">stderr<pos:position pos:line="29" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="29">"Invalid option: `%s'\n"<pos:position pos:line="29" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="55">argv<pos:position pos:line="29" pos:column="59"/></name><index pos:line="29" pos:column="59">[<expr><name pos:line="29" pos:column="60">i<pos:position pos:line="29" pos:column="61"/></name></expr>]<pos:position pos:line="29" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">exit<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><literal type="number" pos:line="30" pos:column="18">1<pos:position pos:line="30" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="32" pos:column="9">list_provided<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <literal type="number" pos:line="32" pos:column="25">1<pos:position pos:line="32" pos:column="26"/></literal></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></for>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">list_provided<pos:position pos:line="35" pos:column="22"/></name></expr>)<pos:position pos:line="35" pos:column="23"/></condition><then pos:line="35" pos:column="23"> <block pos:line="35" pos:column="24">{
        <comment type="block" pos:line="36" pos:column="9">/* Waste a little space here, because it is easier than counting the
         * number of tests listed.  Besides it is at most three char *.
         */</comment>
        <expr_stmt><expr><name pos:line="39" pos:column="9">testlist<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">=<pos:position pos:line="39" pos:column="19"/></operator> <call><name pos:line="39" pos:column="20">calloc<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">argc<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">+<pos:position pos:line="39" pos:column="33"/></operator> <literal type="number" pos:line="39" pos:column="34">1<pos:position pos:line="39" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="37">sizeof<argument_list pos:line="39" pos:column="43">(<argument><expr><name pos:line="39" pos:column="44">char<pos:position pos:line="39" pos:column="48"/></name> <operator pos:line="39" pos:column="49">*<pos:position pos:line="39" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="39" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="53"/></expr_stmt>
        <for pos:line="40" pos:column="9">for <control pos:line="40" pos:column="13">(<init><expr><name pos:line="40" pos:column="14">i<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <literal type="number" pos:line="40" pos:column="18">1<pos:position pos:line="40" pos:column="19"/></literal></expr>;<pos:position pos:line="40" pos:column="20"/></init> <condition><expr><name pos:line="40" pos:column="21">i<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">&lt;<pos:position pos:line="40" pos:column="27"/></operator> <name pos:line="40" pos:column="25">argc<pos:position pos:line="40" pos:column="29"/></name></expr>;<pos:position pos:line="40" pos:column="30"/></condition> <incr><expr><name pos:line="40" pos:column="31">i<pos:position pos:line="40" pos:column="32"/></name><operator pos:line="40" pos:column="32">++<pos:position pos:line="40" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="35"/></control> <block pos:line="40" pos:column="36">{
            <expr_stmt><expr><name><name pos:line="41" pos:column="13">testlist<pos:position pos:line="41" pos:column="21"/></name><index pos:line="41" pos:column="21">[<expr><name pos:line="41" pos:column="22">i<pos:position pos:line="41" pos:column="23"/></name> <operator pos:line="41" pos:column="24">-<pos:position pos:line="41" pos:column="25"/></operator> <literal type="number" pos:line="41" pos:column="26">1<pos:position pos:line="41" pos:column="27"/></literal></expr>]<pos:position pos:line="41" pos:column="28"/></index></name> <operator pos:line="41" pos:column="29">=<pos:position pos:line="41" pos:column="30"/></operator> <name><name pos:line="41" pos:column="31">argv<pos:position pos:line="41" pos:column="35"/></name><index pos:line="41" pos:column="35">[<expr><name pos:line="41" pos:column="36">i<pos:position pos:line="41" pos:column="37"/></name></expr>]<pos:position pos:line="41" pos:column="38"/></index></name></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></for>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <for pos:line="45" pos:column="5">for <control pos:line="45" pos:column="9">(<init><expr><name pos:line="45" pos:column="10">i<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <literal type="number" pos:line="45" pos:column="14">0<pos:position pos:line="45" pos:column="15"/></literal></expr>;<pos:position pos:line="45" pos:column="16"/></init> <condition><expr><name pos:line="45" pos:column="17">i<pos:position pos:line="45" pos:column="18"/></name> <operator pos:line="45" pos:column="19">&lt;<pos:position pos:line="45" pos:column="23"/></operator> <operator pos:line="45" pos:column="21">(<pos:position pos:line="45" pos:column="22"/></operator><sizeof pos:line="45" pos:column="22">sizeof<argument_list pos:line="45" pos:column="28">(<argument><expr><name pos:line="45" pos:column="29">alltests<pos:position pos:line="45" pos:column="37"/></name></expr></argument>)<pos:position pos:line="45" pos:column="38"/></argument_list></sizeof> <operator pos:line="45" pos:column="39">/<pos:position pos:line="45" pos:column="40"/></operator> <sizeof pos:line="45" pos:column="41">sizeof<argument_list pos:line="45" pos:column="47">(<argument><expr pos:line="45" pos:column="48">struct <name pos:line="45" pos:column="55">testlist<pos:position pos:line="45" pos:column="63"/></name> <operator pos:line="45" pos:column="64">*<pos:position pos:line="45" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="45" pos:column="66"/></argument_list></sizeof><operator pos:line="45" pos:column="66">)<pos:position pos:line="45" pos:column="67"/></operator></expr>;<pos:position pos:line="45" pos:column="68"/></condition> <incr><expr><name pos:line="45" pos:column="69">i<pos:position pos:line="45" pos:column="70"/></name><operator pos:line="45" pos:column="70">++<pos:position pos:line="45" pos:column="72"/></operator></expr></incr>)<pos:position pos:line="45" pos:column="73"/></control> <block pos:line="45" pos:column="74">{
        <expr_stmt><expr><name pos:line="46" pos:column="9">suite<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">=<pos:position pos:line="46" pos:column="16"/></operator> <name><name pos:line="46" pos:column="17">alltests<pos:position pos:line="46" pos:column="25"/></name><index pos:line="46" pos:column="25">[<expr><name pos:line="46" pos:column="26">i<pos:position pos:line="46" pos:column="27"/></name></expr>]<pos:position pos:line="46" pos:column="28"/></index></name><operator pos:line="46" pos:column="28">.<pos:position pos:line="46" pos:column="29"/></operator><call><name pos:line="46" pos:column="29">func<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">suite<pos:position pos:line="46" pos:column="39"/></name></expr></argument>)<pos:position pos:line="46" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="49" pos:column="5">rv<pos:position pos:line="49" pos:column="7"/></name> <operator pos:line="49" pos:column="8">=<pos:position pos:line="49" pos:column="9"/></operator> <call><name pos:line="49" pos:column="10">report<pos:position pos:line="49" pos:column="16"/></name><argument_list pos:line="49" pos:column="16">(<argument><expr><name pos:line="49" pos:column="17">suite<pos:position pos:line="49" pos:column="22"/></name></expr></argument>)<pos:position pos:line="49" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt>
    <return pos:line="50" pos:column="5">return <expr><name pos:line="50" pos:column="12">rv<pos:position pos:line="50" pos:column="14"/></name></expr>;<pos:position pos:line="50" pos:column="15"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2750_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name> <name pos:line="1" pos:column="12">PTRFASTCALL<pos:position pos:line="1" pos:column="23"/></name>
<name pos:line="2" pos:column="1">PREFIX<pos:position pos:line="2" pos:column="7"/></name></type>(<name pos:line="2" pos:column="8">charRefNumber<pos:position pos:line="2" pos:column="21"/></name>)<parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">ENCODING<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">enc<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier> <name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">ptr<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">result<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <comment type="block" pos:line="5" pos:column="3">/* skip &amp;# */</comment>
  <expr_stmt><expr><name pos:line="6" pos:column="3">ptr<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">+=<pos:position pos:line="6" pos:column="9"/></operator> <literal type="number" pos:line="6" pos:column="10">2<pos:position pos:line="6" pos:column="11"/></literal><operator pos:line="6" pos:column="11">*<pos:position pos:line="6" pos:column="12"/></operator><call><name pos:line="6" pos:column="12">MINBPC<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><name pos:line="6" pos:column="19">enc<pos:position pos:line="6" pos:column="22"/></name></expr></argument>)<pos:position pos:line="6" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name pos:line="7" pos:column="7">CHAR_MATCHES<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">enc<pos:position pos:line="7" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="25">ptr<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="30">ASCII_x<pos:position pos:line="7" pos:column="37"/></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="39"/></condition><then pos:line="7" pos:column="39"> <block pos:line="7" pos:column="40">{
    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">ptr<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">+=<pos:position pos:line="8" pos:column="16"/></operator> <call><name pos:line="8" pos:column="17">MINBPC<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">enc<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></init>
         <condition><expr><operator pos:line="9" pos:column="10">!<pos:position pos:line="9" pos:column="11"/></operator><call><name pos:line="9" pos:column="11">CHAR_MATCHES<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">enc<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="29">ptr<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="34">ASCII_SEMI<pos:position pos:line="9" pos:column="44"/></name></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></condition>
         <incr><expr><name pos:line="10" pos:column="10">ptr<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">+=<pos:position pos:line="10" pos:column="16"/></operator> <call><name pos:line="10" pos:column="17">MINBPC<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">enc<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr></incr>)<pos:position pos:line="10" pos:column="29"/></control> <block pos:line="10" pos:column="30">{
      <decl_stmt><decl><type><name pos:line="11" pos:column="7">int<pos:position pos:line="11" pos:column="10"/></name></type> <name pos:line="11" pos:column="11">c<pos:position pos:line="11" pos:column="12"/></name> <init pos:line="11" pos:column="13">= <expr><call><name pos:line="11" pos:column="15">BYTE_TO_ASCII<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">enc<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">ptr<pos:position pos:line="11" pos:column="37"/></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="39"/></decl_stmt>
      <switch pos:line="12" pos:column="7">switch <condition pos:line="12" pos:column="14">(<expr><name pos:line="12" pos:column="15">c<pos:position pos:line="12" pos:column="16"/></name></expr>)<pos:position pos:line="12" pos:column="17"/></condition> <block pos:line="12" pos:column="18">{
      <case pos:line="13" pos:column="7">case <expr><name pos:line="13" pos:column="12">ASCII_0<pos:position pos:line="13" pos:column="19"/></name></expr>:<pos:position pos:line="13" pos:column="20"/></case> <case pos:line="13" pos:column="21">case <expr><name pos:line="13" pos:column="26">ASCII_1<pos:position pos:line="13" pos:column="33"/></name></expr>:<pos:position pos:line="13" pos:column="34"/></case> <case pos:line="13" pos:column="35">case <expr><name pos:line="13" pos:column="40">ASCII_2<pos:position pos:line="13" pos:column="47"/></name></expr>:<pos:position pos:line="13" pos:column="48"/></case> <case pos:line="13" pos:column="49">case <expr><name pos:line="13" pos:column="54">ASCII_3<pos:position pos:line="13" pos:column="61"/></name></expr>:<pos:position pos:line="13" pos:column="62"/></case> <case pos:line="13" pos:column="63">case <expr><name pos:line="13" pos:column="68">ASCII_4<pos:position pos:line="13" pos:column="75"/></name></expr>:<pos:position pos:line="13" pos:column="76"/></case>
      <case pos:line="14" pos:column="7">case <expr><name pos:line="14" pos:column="12">ASCII_5<pos:position pos:line="14" pos:column="19"/></name></expr>:<pos:position pos:line="14" pos:column="20"/></case> <case pos:line="14" pos:column="21">case <expr><name pos:line="14" pos:column="26">ASCII_6<pos:position pos:line="14" pos:column="33"/></name></expr>:<pos:position pos:line="14" pos:column="34"/></case> <case pos:line="14" pos:column="35">case <expr><name pos:line="14" pos:column="40">ASCII_7<pos:position pos:line="14" pos:column="47"/></name></expr>:<pos:position pos:line="14" pos:column="48"/></case> <case pos:line="14" pos:column="49">case <expr><name pos:line="14" pos:column="54">ASCII_8<pos:position pos:line="14" pos:column="61"/></name></expr>:<pos:position pos:line="14" pos:column="62"/></case> <case pos:line="14" pos:column="63">case <expr><name pos:line="14" pos:column="68">ASCII_9<pos:position pos:line="14" pos:column="75"/></name></expr>:<pos:position pos:line="14" pos:column="76"/></case>
        <expr_stmt><expr><name pos:line="15" pos:column="9">result<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">&lt;&lt;=<pos:position pos:line="15" pos:column="25"/></operator> <literal type="number" pos:line="15" pos:column="20">4<pos:position pos:line="15" pos:column="21"/></literal></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">result<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">|=<pos:position pos:line="16" pos:column="18"/></operator> <operator pos:line="16" pos:column="19">(<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="20">c<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">-<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="24">ASCII_0<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">)<pos:position pos:line="16" pos:column="32"/></operator></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
        <break pos:line="17" pos:column="9">break;<pos:position pos:line="17" pos:column="15"/></break>
      <case pos:line="18" pos:column="7">case <expr><name pos:line="18" pos:column="12">ASCII_A<pos:position pos:line="18" pos:column="19"/></name></expr>:<pos:position pos:line="18" pos:column="20"/></case> <case pos:line="18" pos:column="21">case <expr><name pos:line="18" pos:column="26">ASCII_B<pos:position pos:line="18" pos:column="33"/></name></expr>:<pos:position pos:line="18" pos:column="34"/></case> <case pos:line="18" pos:column="35">case <expr><name pos:line="18" pos:column="40">ASCII_C<pos:position pos:line="18" pos:column="47"/></name></expr>:<pos:position pos:line="18" pos:column="48"/></case>
      <case pos:line="19" pos:column="7">case <expr><name pos:line="19" pos:column="12">ASCII_D<pos:position pos:line="19" pos:column="19"/></name></expr>:<pos:position pos:line="19" pos:column="20"/></case> <case pos:line="19" pos:column="21">case <expr><name pos:line="19" pos:column="26">ASCII_E<pos:position pos:line="19" pos:column="33"/></name></expr>:<pos:position pos:line="19" pos:column="34"/></case> <case pos:line="19" pos:column="35">case <expr><name pos:line="19" pos:column="40">ASCII_F<pos:position pos:line="19" pos:column="47"/></name></expr>:<pos:position pos:line="19" pos:column="48"/></case>
        <expr_stmt><expr><name pos:line="20" pos:column="9">result<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">&lt;&lt;=<pos:position pos:line="20" pos:column="25"/></operator> <literal type="number" pos:line="20" pos:column="20">4<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">result<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">+=<pos:position pos:line="21" pos:column="18"/></operator> <literal type="number" pos:line="21" pos:column="19">10<pos:position pos:line="21" pos:column="21"/></literal> <operator pos:line="21" pos:column="22">+<pos:position pos:line="21" pos:column="23"/></operator> <operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">c<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">-<pos:position pos:line="21" pos:column="28"/></operator> <name pos:line="21" pos:column="29">ASCII_A<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">)<pos:position pos:line="21" pos:column="37"/></operator></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
        <break pos:line="22" pos:column="9">break;<pos:position pos:line="22" pos:column="15"/></break>
      <case pos:line="23" pos:column="7">case <expr><name pos:line="23" pos:column="12">ASCII_a<pos:position pos:line="23" pos:column="19"/></name></expr>:<pos:position pos:line="23" pos:column="20"/></case> <case pos:line="23" pos:column="21">case <expr><name pos:line="23" pos:column="26">ASCII_b<pos:position pos:line="23" pos:column="33"/></name></expr>:<pos:position pos:line="23" pos:column="34"/></case> <case pos:line="23" pos:column="35">case <expr><name pos:line="23" pos:column="40">ASCII_c<pos:position pos:line="23" pos:column="47"/></name></expr>:<pos:position pos:line="23" pos:column="48"/></case>
      <case pos:line="24" pos:column="7">case <expr><name pos:line="24" pos:column="12">ASCII_d<pos:position pos:line="24" pos:column="19"/></name></expr>:<pos:position pos:line="24" pos:column="20"/></case> <case pos:line="24" pos:column="21">case <expr><name pos:line="24" pos:column="26">ASCII_e<pos:position pos:line="24" pos:column="33"/></name></expr>:<pos:position pos:line="24" pos:column="34"/></case> <case pos:line="24" pos:column="35">case <expr><name pos:line="24" pos:column="40">ASCII_f<pos:position pos:line="24" pos:column="47"/></name></expr>:<pos:position pos:line="24" pos:column="48"/></case>
        <expr_stmt><expr><name pos:line="25" pos:column="9">result<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">&lt;&lt;=<pos:position pos:line="25" pos:column="25"/></operator> <literal type="number" pos:line="25" pos:column="20">4<pos:position pos:line="25" pos:column="21"/></literal></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="26" pos:column="9">result<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">+=<pos:position pos:line="26" pos:column="18"/></operator> <literal type="number" pos:line="26" pos:column="19">10<pos:position pos:line="26" pos:column="21"/></literal> <operator pos:line="26" pos:column="22">+<pos:position pos:line="26" pos:column="23"/></operator> <operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">c<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">-<pos:position pos:line="26" pos:column="28"/></operator> <name pos:line="26" pos:column="29">ASCII_a<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">)<pos:position pos:line="26" pos:column="37"/></operator></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
        <break pos:line="27" pos:column="9">break;<pos:position pos:line="27" pos:column="15"/></break>
      }<pos:position pos:line="28" pos:column="8"/></block></switch>
      <if pos:line="29" pos:column="7">if <condition pos:line="29" pos:column="10">(<expr><name pos:line="29" pos:column="11">result<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">&gt;=<pos:position pos:line="29" pos:column="23"/></operator> <literal type="number" pos:line="29" pos:column="21">0x110000<pos:position pos:line="29" pos:column="29"/></literal></expr>)<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30">
        <block type="pseudo"><return pos:line="30" pos:column="9">return <expr><operator pos:line="30" pos:column="16">-<pos:position pos:line="30" pos:column="17"/></operator><literal type="number" pos:line="30" pos:column="17">1<pos:position pos:line="30" pos:column="18"/></literal></expr>;<pos:position pos:line="30" pos:column="19"/></return></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></for>
  }<pos:position pos:line="32" pos:column="4"/></block></then>
  <else pos:line="33" pos:column="3">else <block pos:line="33" pos:column="8">{
    <for pos:line="34" pos:column="5">for <control pos:line="34" pos:column="9">(<init pos:line="34" pos:column="10">;<pos:position pos:line="34" pos:column="11"/></init> <condition><expr><operator pos:line="34" pos:column="12">!<pos:position pos:line="34" pos:column="13"/></operator><call><name pos:line="34" pos:column="13">CHAR_MATCHES<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">enc<pos:position pos:line="34" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="31">ptr<pos:position pos:line="34" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="36">ASCII_SEMI<pos:position pos:line="34" pos:column="46"/></name></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="48"/></condition> <incr><expr><name pos:line="34" pos:column="49">ptr<pos:position pos:line="34" pos:column="52"/></name> <operator pos:line="34" pos:column="53">+=<pos:position pos:line="34" pos:column="55"/></operator> <call><name pos:line="34" pos:column="56">MINBPC<pos:position pos:line="34" pos:column="62"/></name><argument_list pos:line="34" pos:column="62">(<argument><expr><name pos:line="34" pos:column="63">enc<pos:position pos:line="34" pos:column="66"/></name></expr></argument>)<pos:position pos:line="34" pos:column="67"/></argument_list></call></expr></incr>)<pos:position pos:line="34" pos:column="68"/></control> <block pos:line="34" pos:column="69">{
      <decl_stmt><decl><type><name pos:line="35" pos:column="7">int<pos:position pos:line="35" pos:column="10"/></name></type> <name pos:line="35" pos:column="11">c<pos:position pos:line="35" pos:column="12"/></name> <init pos:line="35" pos:column="13">= <expr><call><name pos:line="35" pos:column="15">BYTE_TO_ASCII<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><name pos:line="35" pos:column="29">enc<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="34">ptr<pos:position pos:line="35" pos:column="37"/></name></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="39"/></decl_stmt>
      <expr_stmt><expr><name pos:line="36" pos:column="7">result<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">*=<pos:position pos:line="36" pos:column="16"/></operator> <literal type="number" pos:line="36" pos:column="17">10<pos:position pos:line="36" pos:column="19"/></literal></expr>;<pos:position pos:line="36" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="37" pos:column="7">result<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">+=<pos:position pos:line="37" pos:column="16"/></operator> <operator pos:line="37" pos:column="17">(<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="18">c<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">-<pos:position pos:line="37" pos:column="21"/></operator> <name pos:line="37" pos:column="22">ASCII_0<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">)<pos:position pos:line="37" pos:column="30"/></operator></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>
      <if pos:line="38" pos:column="7">if <condition pos:line="38" pos:column="10">(<expr><name pos:line="38" pos:column="11">result<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">&gt;=<pos:position pos:line="38" pos:column="23"/></operator> <literal type="number" pos:line="38" pos:column="21">0x110000<pos:position pos:line="38" pos:column="29"/></literal></expr>)<pos:position pos:line="38" pos:column="30"/></condition><then pos:line="38" pos:column="30">
        <block type="pseudo"><return pos:line="39" pos:column="9">return <expr><operator pos:line="39" pos:column="16">-<pos:position pos:line="39" pos:column="17"/></operator><literal type="number" pos:line="39" pos:column="17">1<pos:position pos:line="39" pos:column="18"/></literal></expr>;<pos:position pos:line="39" pos:column="19"/></return></block></then></if>
    }<pos:position pos:line="40" pos:column="6"/></block></for>
  }<pos:position pos:line="41" pos:column="4"/></block></else></if>
  <return pos:line="42" pos:column="3">return <expr><call><name pos:line="42" pos:column="10">checkCharRefNumber<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">result<pos:position pos:line="42" pos:column="35"/></name></expr></argument>)<pos:position pos:line="42" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="37"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

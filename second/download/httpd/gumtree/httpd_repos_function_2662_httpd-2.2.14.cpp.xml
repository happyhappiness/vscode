<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2662_httpd-2.2.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">ms_find_conn<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">apr_memcache_server_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">ms<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">apr_memcache_conn_t<pos:position pos:line="1" pos:column="80"/></name> <modifier pos:line="1" pos:column="81">*<pos:position pos:line="1" pos:column="82"/></modifier><modifier pos:line="1" pos:column="82">*<pos:position pos:line="1" pos:column="83"/></modifier></type><name pos:line="1" pos:column="83">conn<pos:position pos:line="1" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="88"/></parameter_list> 
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_bucket_alloc_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">balloc<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_bucket<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">e<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">APR_HAS_THREADS<pos:position pos:line="7" pos:column="20"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="8" pos:column="5">rv<pos:position pos:line="8" pos:column="7"/></name> <operator pos:line="8" pos:column="8">=<pos:position pos:line="8" pos:column="9"/></operator> <call><name pos:line="8" pos:column="10">apr_reslist_acquire<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name><name pos:line="8" pos:column="30">ms<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">conns<pos:position pos:line="8" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="41">(<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="42">void<pos:position pos:line="8" pos:column="46"/></name> <operator pos:line="8" pos:column="47">*<pos:position pos:line="8" pos:column="48"/></operator><operator pos:line="8" pos:column="48">*<pos:position pos:line="8" pos:column="49"/></operator><operator pos:line="8" pos:column="49">)<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="50">conn<pos:position pos:line="8" pos:column="54"/></name></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="56"/></expr_stmt>
<cpp:else pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">else<pos:position pos:line="9" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><operator pos:line="10" pos:column="5">*<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">conn<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <name><name pos:line="10" pos:column="13">ms<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">conn<pos:position pos:line="10" pos:column="21"/></name></name></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">rv<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <name pos:line="11" pos:column="10">APR_SUCCESS<pos:position pos:line="11" pos:column="21"/></name></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">rv<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">!=<pos:position pos:line="14" pos:column="14"/></operator> <name pos:line="14" pos:column="15">APR_SUCCESS<pos:position pos:line="14" pos:column="26"/></name></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27"> <block pos:line="14" pos:column="28">{
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">rv<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">balloc<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">apr_bucket_alloc_create<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name><operator pos:line="18" pos:column="38">(<pos:position pos:line="18" pos:column="39"/></operator><operator pos:line="18" pos:column="39">*<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="40">conn<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">)<pos:position pos:line="18" pos:column="45"/></operator><operator pos:line="18" pos:column="45">-&gt;<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="47">tp<pos:position pos:line="18" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="19" pos:column="5">(<pos:position pos:line="19" pos:column="6"/></operator><operator pos:line="19" pos:column="6">*<pos:position pos:line="19" pos:column="7"/></operator><name pos:line="19" pos:column="7">conn<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">)<pos:position pos:line="19" pos:column="12"/></operator><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">bb<pos:position pos:line="19" pos:column="16"/></name></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <call><name pos:line="19" pos:column="19">apr_brigade_create<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><name><operator pos:line="19" pos:column="38">(<pos:position pos:line="19" pos:column="39"/></operator><operator pos:line="19" pos:column="39">*<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="40">conn<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">)<pos:position pos:line="19" pos:column="45"/></operator><operator pos:line="19" pos:column="45">-&gt;<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="47">tp<pos:position pos:line="19" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="51">balloc<pos:position pos:line="19" pos:column="57"/></name></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name><operator pos:line="20" pos:column="5">(<pos:position pos:line="20" pos:column="6"/></operator><operator pos:line="20" pos:column="6">*<pos:position pos:line="20" pos:column="7"/></operator><name pos:line="20" pos:column="7">conn<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">)<pos:position pos:line="20" pos:column="12"/></operator><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">tb<pos:position pos:line="20" pos:column="16"/></name></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <call><name pos:line="20" pos:column="19">apr_brigade_create<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name><operator pos:line="20" pos:column="38">(<pos:position pos:line="20" pos:column="39"/></operator><operator pos:line="20" pos:column="39">*<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="40">conn<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">)<pos:position pos:line="20" pos:column="45"/></operator><operator pos:line="20" pos:column="45">-&gt;<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="47">tp<pos:position pos:line="20" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="51">balloc<pos:position pos:line="20" pos:column="57"/></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">e<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <call><name pos:line="22" pos:column="9">apr_bucket_socket_create<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><name><operator pos:line="22" pos:column="34">(<pos:position pos:line="22" pos:column="35"/></operator><operator pos:line="22" pos:column="35">*<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="36">conn<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">)<pos:position pos:line="22" pos:column="41"/></operator><operator pos:line="22" pos:column="41">-&gt;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="43">sock<pos:position pos:line="22" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="49">balloc<pos:position pos:line="22" pos:column="55"/></name></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name><operator pos:line="23" pos:column="29">(<pos:position pos:line="23" pos:column="30"/></operator><operator pos:line="23" pos:column="30">*<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">conn<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">)<pos:position pos:line="23" pos:column="36"/></operator><operator pos:line="23" pos:column="36">-&gt;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="38">bb<pos:position pos:line="23" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="42">e<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>

    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">rv<pos:position pos:line="25" pos:column="14"/></name></expr>;<pos:position pos:line="25" pos:column="15"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2953_httpd-2.4.12.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">authz_status<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">fcgi_authz_check<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">request_rec<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">r<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
                                     <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">require_line<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
                                     <parameter><decl><type><specifier pos:line="3" pos:column="38">const<pos:position pos:line="3" pos:column="43"/></specifier> <name pos:line="3" pos:column="44">void<pos:position pos:line="3" pos:column="48"/></name> <modifier pos:line="3" pos:column="49">*<pos:position pos:line="3" pos:column="50"/></modifier></type><name pos:line="3" pos:column="50">parsed_require_line<pos:position pos:line="3" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="70"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">fn<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="string" pos:line="5" pos:column="22">"fcgi_authz_check"<pos:position pos:line="5" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">prov<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><call><name pos:line="6" pos:column="24">apr_table_get<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">(<argument><expr><name><name pos:line="6" pos:column="38">r<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">-&gt;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="41">notes<pos:position pos:line="6" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="48">AUTHZ_PROVIDER_NAME_NOTE<pos:position pos:line="6" pos:column="72"/></name></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="74"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">fcgi_provider_conf<pos:position pos:line="7" pos:column="29"/></name> <modifier pos:line="7" pos:column="30">*<pos:position pos:line="7" pos:column="31"/></modifier></type><name pos:line="7" pos:column="31">conf<pos:position pos:line="7" pos:column="35"/></name></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ap_log_rerror<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><name pos:line="9" pos:column="19">APLOG_MARK<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="31">APLOG_DEBUG<pos:position pos:line="9" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="44">0<pos:position pos:line="9" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="47">r<pos:position pos:line="9" pos:column="48"/></name></expr></argument>,
                  <argument><expr><call><name pos:line="10" pos:column="19">APLOGNO<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><literal type="number" pos:line="10" pos:column="27">02527<pos:position pos:line="10" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call> <literal type="string" pos:line="10" pos:column="34">"%s(%s)"<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">fn<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="48">require_line<pos:position pos:line="10" pos:column="60"/></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">prov<pos:position pos:line="12" pos:column="14"/></name></expr>)<pos:position pos:line="12" pos:column="15"/></condition><then pos:line="12" pos:column="15"> <block pos:line="12" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ap_log_rerror<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">APLOG_MARK<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">APLOG_CRIT<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="47">0<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="50">r<pos:position pos:line="13" pos:column="51"/></name></expr></argument>,
                      <argument><expr><call><name pos:line="14" pos:column="23">APLOGNO<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><literal type="number" pos:line="14" pos:column="31">02528<pos:position pos:line="14" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call> <literal type="string" pos:line="14" pos:column="38">"%s: provider note isn't set"<pos:position pos:line="14" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="69">fn<pos:position pos:line="14" pos:column="71"/></name></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="73"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">AUTHZ_GENERAL_ERROR<pos:position pos:line="15" pos:column="35"/></name></expr>;<pos:position pos:line="15" pos:column="36"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">conf<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <call><name pos:line="18" pos:column="12">apr_hash_get<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">fcgi_authz_providers<pos:position pos:line="18" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="47">prov<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="53">APR_HASH_KEY_STRING<pos:position pos:line="18" pos:column="72"/></name></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="74"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">conf<pos:position pos:line="19" pos:column="14"/></name></expr>)<pos:position pos:line="19" pos:column="15"/></condition><then pos:line="19" pos:column="15"> <block pos:line="19" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">ap_log_rerror<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">APLOG_MARK<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">APLOG_CRIT<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="47">0<pos:position pos:line="20" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="50">r<pos:position pos:line="20" pos:column="51"/></name></expr></argument>,
                      <argument><expr><call><name pos:line="21" pos:column="23">APLOGNO<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><literal type="number" pos:line="21" pos:column="31">02529<pos:position pos:line="21" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call> <literal type="string" pos:line="21" pos:column="38">"%s: can't find config for provider %s"<pos:position pos:line="21" pos:column="77"/></literal></expr></argument>,
                      <argument><expr><name pos:line="22" pos:column="23">fn<pos:position pos:line="22" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="27">prov<pos:position pos:line="22" pos:column="31"/></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">AUTHZ_GENERAL_ERROR<pos:position pos:line="23" pos:column="35"/></name></expr>;<pos:position pos:line="23" pos:column="36"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name pos:line="26" pos:column="9">APLOGrdebug<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">r<pos:position pos:line="26" pos:column="22"/></name></expr></argument>)<pos:position pos:line="26" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="24"/></condition><then pos:line="26" pos:column="24"> <block pos:line="26" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">log_provider_info<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><name pos:line="27" pos:column="27">conf<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="33">r<pos:position pos:line="27" pos:column="34"/></name></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">!<pos:position pos:line="30" pos:column="10"/></operator><name><name pos:line="30" pos:column="10">r<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">user<pos:position pos:line="30" pos:column="17"/></name></name></expr>)<pos:position pos:line="30" pos:column="18"/></condition><then pos:line="30" pos:column="18"> <block pos:line="30" pos:column="19">{
        <return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">AUTHZ_DENIED_NO_USER<pos:position pos:line="31" pos:column="36"/></name></expr>;<pos:position pos:line="31" pos:column="37"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name><name pos:line="34" pos:column="9">conf<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">-&gt;<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="15">is_authn<pos:position pos:line="34" pos:column="23"/></name></name></expr>)<pos:position pos:line="34" pos:column="24"/></condition><then pos:line="34" pos:column="24"> <block pos:line="34" pos:column="25">{
        <comment type="block" pos:line="35" pos:column="9">/* combined authn/authz phase, so app won't be invoked for authz
         *
         * If the provider already successfully authorized this request, 
         * success.
         */</comment>
        <decl_stmt><decl><type><name pos:line="40" pos:column="9">fcgi_request_notes<pos:position pos:line="40" pos:column="27"/></name> <modifier pos:line="40" pos:column="28">*<pos:position pos:line="40" pos:column="29"/></modifier></type><name pos:line="40" pos:column="29">rnotes<pos:position pos:line="40" pos:column="35"/></name> <init pos:line="40" pos:column="36">= <expr><call><name pos:line="40" pos:column="38">ap_get_module_config<pos:position pos:line="40" pos:column="58"/></name><argument_list pos:line="40" pos:column="58">(<argument><expr><name><name pos:line="40" pos:column="59">r<pos:position pos:line="40" pos:column="60"/></name><operator pos:line="40" pos:column="60">-&gt;<pos:position pos:line="40" pos:column="65"/></operator><name pos:line="40" pos:column="62">request_config<pos:position pos:line="40" pos:column="76"/></name></name></expr></argument>,
                                                        <argument><expr><operator pos:line="41" pos:column="57">&amp;<pos:position pos:line="41" pos:column="62"/></operator><name pos:line="41" pos:column="58">authnz_fcgi_module<pos:position pos:line="41" pos:column="76"/></name></expr></argument>)<pos:position pos:line="41" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="78"/></decl_stmt>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">rnotes<pos:position pos:line="42" pos:column="19"/></name>
            <operator pos:line="43" pos:column="13">&amp;&amp;<pos:position pos:line="43" pos:column="23"/></operator> <name><name pos:line="43" pos:column="16">rnotes<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">-&gt;<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="24">successful_authnz_provider<pos:position pos:line="43" pos:column="50"/></name></name>
            <operator pos:line="44" pos:column="13">&amp;&amp;<pos:position pos:line="44" pos:column="23"/></operator> <operator pos:line="44" pos:column="16">!<pos:position pos:line="44" pos:column="17"/></operator><call><name pos:line="44" pos:column="17">strcmp<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><name><name pos:line="44" pos:column="24">rnotes<pos:position pos:line="44" pos:column="30"/></name><operator pos:line="44" pos:column="30">-&gt;<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="32">successful_authnz_provider<pos:position pos:line="44" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="60">conf<pos:position pos:line="44" pos:column="64"/></name><operator pos:line="44" pos:column="64">-&gt;<pos:position pos:line="44" pos:column="69"/></operator><name pos:line="44" pos:column="66">name<pos:position pos:line="44" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="72"/></condition><then pos:line="44" pos:column="72"> <block pos:line="44" pos:column="73">{
            <return pos:line="45" pos:column="13">return <expr><name pos:line="45" pos:column="20">AUTHZ_GRANTED<pos:position pos:line="45" pos:column="33"/></name></expr>;<pos:position pos:line="45" pos:column="34"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></then>
        <else pos:line="47" pos:column="9">else <block pos:line="47" pos:column="14">{
            <return pos:line="48" pos:column="13">return <expr><name pos:line="48" pos:column="20">AUTHZ_DENIED<pos:position pos:line="48" pos:column="32"/></name></expr>;<pos:position pos:line="48" pos:column="33"/></return>
        }<pos:position pos:line="49" pos:column="10"/></block></else></if>
    }<pos:position pos:line="50" pos:column="6"/></block></then>
    <else pos:line="51" pos:column="5">else <block pos:line="51" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">req_rsp<pos:position pos:line="52" pos:column="16"/></name><argument_list pos:line="52" pos:column="16">(<argument><expr><name pos:line="52" pos:column="17">r<pos:position pos:line="52" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="20">conf<pos:position pos:line="52" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="26">NULL<pos:position pos:line="52" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="32">AP_FCGI_APACHE_ROLE_AUTHORIZER_STR<pos:position pos:line="52" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="68">NULL<pos:position pos:line="52" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="74">NULL<pos:position pos:line="52" pos:column="78"/></name></expr></argument>)<pos:position pos:line="52" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="80"/></expr_stmt>

        <if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name><name pos:line="54" pos:column="13">r<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">-&gt;<pos:position pos:line="54" pos:column="19"/></operator><name pos:line="54" pos:column="16">status<pos:position pos:line="54" pos:column="22"/></name></name> <operator pos:line="54" pos:column="23">==<pos:position pos:line="54" pos:column="25"/></operator> <name pos:line="54" pos:column="26">HTTP_OK<pos:position pos:line="54" pos:column="33"/></name></expr>)<pos:position pos:line="54" pos:column="34"/></condition><then pos:line="54" pos:column="34"> <block pos:line="54" pos:column="35">{
            <return pos:line="55" pos:column="13">return <expr><name pos:line="55" pos:column="20">AUTHZ_GRANTED<pos:position pos:line="55" pos:column="33"/></name></expr>;<pos:position pos:line="55" pos:column="34"/></return>
        }<pos:position pos:line="56" pos:column="10"/></block></then>
        <elseif pos:line="57" pos:column="9">else <if pos:line="57" pos:column="14">if <condition pos:line="57" pos:column="17">(<expr><name><name pos:line="57" pos:column="18">r<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">-&gt;<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="21">status<pos:position pos:line="57" pos:column="27"/></name></name> <operator pos:line="57" pos:column="28">==<pos:position pos:line="57" pos:column="30"/></operator> <name pos:line="57" pos:column="31">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="57" pos:column="57"/></name></expr>)<pos:position pos:line="57" pos:column="58"/></condition><then pos:line="57" pos:column="58"> <block pos:line="57" pos:column="59">{
            <return pos:line="58" pos:column="13">return <expr><name pos:line="58" pos:column="20">AUTHZ_GENERAL_ERROR<pos:position pos:line="58" pos:column="39"/></name></expr>;<pos:position pos:line="58" pos:column="40"/></return>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if></elseif>
        <else pos:line="60" pos:column="9">else <block pos:line="60" pos:column="14">{
            <return pos:line="61" pos:column="13">return <expr><name pos:line="61" pos:column="20">AUTHZ_DENIED<pos:position pos:line="61" pos:column="32"/></name></expr>;<pos:position pos:line="61" pos:column="33"/></return>
        }<pos:position pos:line="62" pos:column="10"/></block></else></if>
    }<pos:position pos:line="63" pos:column="6"/></block></else></if>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

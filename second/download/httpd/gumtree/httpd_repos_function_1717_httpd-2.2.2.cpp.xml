<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1717_httpd-2.2.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name><modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type> <name pos:line="1" pos:column="14">get_interpreter_from_win32_registry<pos:position pos:line="1" pos:column="49"/></name><parameter_list pos:line="1" pos:column="49">(<parameter><decl><type><name pos:line="1" pos:column="50">apr_pool_t<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">p<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                                                 <parameter><decl><type><specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier> <name pos:line="2" pos:column="56">char<pos:position pos:line="2" pos:column="60"/></name><modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type> <name pos:line="2" pos:column="62">ext<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
                                                 <parameter><decl><type><name pos:line="3" pos:column="50">int<pos:position pos:line="3" pos:column="53"/></name></type> <name pos:line="3" pos:column="54">strict<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="61"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">rv<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">ap_regkey_t<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">name_key<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">NULL<pos:position pos:line="6" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ap_regkey_t<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">type_key<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ap_regkey_t<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">key<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">execcgi_path<pos:position pos:line="9" pos:column="22"/></name><index pos:line="9" pos:column="22">[]<pos:position pos:line="9" pos:column="24"/></index></name> <init pos:line="9" pos:column="25">= <expr><literal type="string" pos:line="9" pos:column="27">"SHELL\\EXECCGI\\COMMAND"<pos:position pos:line="9" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type> <name><name pos:line="10" pos:column="10">execopen_path<pos:position pos:line="10" pos:column="23"/></name><index pos:line="10" pos:column="23">[]<pos:position pos:line="10" pos:column="25"/></index></name> <init pos:line="10" pos:column="26">= <expr><literal type="string" pos:line="10" pos:column="28">"SHELL\\OPEN\\COMMAND"<pos:position pos:line="10" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">type_name<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">buffer<pos:position pos:line="12" pos:column="17"/></name></decl>;<pos:position pos:line="12" pos:column="18"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">ext<pos:position pos:line="14" pos:column="13"/></name></expr>)<pos:position pos:line="14" pos:column="14"/></condition><then pos:line="14" pos:column="14"> <block pos:line="14" pos:column="15">{
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">NULL<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="17" pos:column="5">/*
     * Future optimization:
     * When the registry is successfully searched, store the strings for
     * interpreter and arguments in an ext hash to speed up subsequent look-ups
     */</comment>

    <comment type="block" pos:line="23" pos:column="5">/* Open the key associated with the script filetype extension */</comment>
    <expr_stmt><expr><name pos:line="24" pos:column="5">rv<pos:position pos:line="24" pos:column="7"/></name> <operator pos:line="24" pos:column="8">=<pos:position pos:line="24" pos:column="9"/></operator> <call><name pos:line="24" pos:column="10">ap_regkey_open<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><operator pos:line="24" pos:column="25">&amp;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="26">type_key<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="36">AP_REGKEY_CLASSES_ROOT<pos:position pos:line="24" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="60">ext<pos:position pos:line="24" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="65">APR_READ<pos:position pos:line="24" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="75">p<pos:position pos:line="24" pos:column="76"/></name></expr></argument>)<pos:position pos:line="24" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="78"/></expr_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">rv<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">!=<pos:position pos:line="26" pos:column="14"/></operator> <name pos:line="26" pos:column="15">APR_SUCCESS<pos:position pos:line="26" pos:column="26"/></name></expr>)<pos:position pos:line="26" pos:column="27"/></condition><then pos:line="26" pos:column="27"> <block pos:line="26" pos:column="28">{
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">NULL<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="30" pos:column="5">/* Retrieve the name of the script filetype extension */</comment>
    <expr_stmt><expr><name pos:line="31" pos:column="5">rv<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <call><name pos:line="31" pos:column="10">ap_regkey_value_get<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><operator pos:line="31" pos:column="30">&amp;<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="31">type_name<pos:position pos:line="31" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="42">type_key<pos:position pos:line="31" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="52">""<pos:position pos:line="31" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="56">p<pos:position pos:line="31" pos:column="57"/></name></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">rv<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">==<pos:position pos:line="33" pos:column="14"/></operator> <name pos:line="33" pos:column="15">APR_SUCCESS<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">&amp;&amp;<pos:position pos:line="33" pos:column="37"/></operator> <name><name pos:line="33" pos:column="30">type_name<pos:position pos:line="33" pos:column="39"/></name><index pos:line="33" pos:column="39">[<expr><literal type="number" pos:line="33" pos:column="40">0<pos:position pos:line="33" pos:column="41"/></literal></expr>]<pos:position pos:line="33" pos:column="42"/></index></name></expr>)<pos:position pos:line="33" pos:column="43"/></condition><then pos:line="33" pos:column="43"> <block pos:line="33" pos:column="44">{
        <comment type="block" pos:line="34" pos:column="9">/* Open the key associated with the script filetype extension */</comment>
        <expr_stmt><expr><name pos:line="35" pos:column="9">rv<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <call><name pos:line="35" pos:column="14">ap_regkey_open<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><operator pos:line="35" pos:column="29">&amp;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="30">name_key<pos:position pos:line="35" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="40">AP_REGKEY_CLASSES_ROOT<pos:position pos:line="35" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="64">type_name<pos:position pos:line="35" pos:column="73"/></name></expr></argument>,
                            <argument><expr><name pos:line="36" pos:column="29">APR_READ<pos:position pos:line="36" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="39">p<pos:position pos:line="36" pos:column="40"/></name></expr></argument>)<pos:position pos:line="36" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="39" pos:column="5">/* Open the key for the script command path by:
     *
     *   1) the 'named' filetype key for ExecCGI/Command
     *   2) the extension's type key for ExecCGI/Command
     *
     * and if the strict arg is false, then continue trying:
     *
     *   3) the 'named' filetype key for Open/Command
     *   4) the extension's type key for Open/Command
     */</comment>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">name_key<pos:position pos:line="50" pos:column="17"/></name></expr>)<pos:position pos:line="50" pos:column="18"/></condition><then pos:line="50" pos:column="18"> <block pos:line="50" pos:column="19">{
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">(<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">rv<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">=<pos:position pos:line="51" pos:column="18"/></operator> <call><name pos:line="51" pos:column="19">ap_regkey_open<pos:position pos:line="51" pos:column="33"/></name><argument_list pos:line="51" pos:column="33">(<argument><expr><operator pos:line="51" pos:column="34">&amp;<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="35">key<pos:position pos:line="51" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="40">name_key<pos:position pos:line="51" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="50">execcgi_path<pos:position pos:line="51" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="64">APR_READ<pos:position pos:line="51" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="74">p<pos:position pos:line="51" pos:column="75"/></name></expr></argument>)<pos:position pos:line="51" pos:column="76"/></argument_list></call><operator pos:line="51" pos:column="76">)<pos:position pos:line="51" pos:column="77"/></operator>
                <operator pos:line="52" pos:column="17">==<pos:position pos:line="52" pos:column="19"/></operator> <name pos:line="52" pos:column="20">APR_SUCCESS<pos:position pos:line="52" pos:column="31"/></name></expr>)<pos:position pos:line="52" pos:column="32"/></condition><then pos:line="52" pos:column="32"> <block pos:line="52" pos:column="33">{
            <expr_stmt><expr><name pos:line="53" pos:column="13">rv<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <call><name pos:line="53" pos:column="18">ap_regkey_value_get<pos:position pos:line="53" pos:column="37"/></name><argument_list pos:line="53" pos:column="37">(<argument><expr><operator pos:line="53" pos:column="38">&amp;<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="39">buffer<pos:position pos:line="53" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="47">key<pos:position pos:line="53" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="52">""<pos:position pos:line="53" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="56">p<pos:position pos:line="53" pos:column="57"/></name></expr></argument>)<pos:position pos:line="53" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">ap_regkey_close<pos:position pos:line="54" pos:column="28"/></name><argument_list pos:line="54" pos:column="28">(<argument><expr><name pos:line="54" pos:column="29">name_key<pos:position pos:line="54" pos:column="37"/></name></expr></argument>)<pos:position pos:line="54" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><operator pos:line="58" pos:column="9">!<pos:position pos:line="58" pos:column="10"/></operator><name pos:line="58" pos:column="10">name_key<pos:position pos:line="58" pos:column="18"/></name> <operator pos:line="58" pos:column="19">||<pos:position pos:line="58" pos:column="21"/></operator> <operator pos:line="58" pos:column="22">(<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="23">rv<pos:position pos:line="58" pos:column="25"/></name> <operator pos:line="58" pos:column="26">!=<pos:position pos:line="58" pos:column="28"/></operator> <name pos:line="58" pos:column="29">APR_SUCCESS<pos:position pos:line="58" pos:column="40"/></name><operator pos:line="58" pos:column="40">)<pos:position pos:line="58" pos:column="41"/></operator></expr>)<pos:position pos:line="58" pos:column="42"/></condition><then pos:line="58" pos:column="42"> <block pos:line="58" pos:column="43">{
        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><operator pos:line="59" pos:column="13">(<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="14">rv<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">=<pos:position pos:line="59" pos:column="18"/></operator> <call><name pos:line="59" pos:column="19">ap_regkey_open<pos:position pos:line="59" pos:column="33"/></name><argument_list pos:line="59" pos:column="33">(<argument><expr><operator pos:line="59" pos:column="34">&amp;<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="35">key<pos:position pos:line="59" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="40">type_key<pos:position pos:line="59" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="50">execcgi_path<pos:position pos:line="59" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="64">APR_READ<pos:position pos:line="59" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="74">p<pos:position pos:line="59" pos:column="75"/></name></expr></argument>)<pos:position pos:line="59" pos:column="76"/></argument_list></call><operator pos:line="59" pos:column="76">)<pos:position pos:line="59" pos:column="77"/></operator>
                <operator pos:line="60" pos:column="17">==<pos:position pos:line="60" pos:column="19"/></operator> <name pos:line="60" pos:column="20">APR_SUCCESS<pos:position pos:line="60" pos:column="31"/></name></expr>)<pos:position pos:line="60" pos:column="32"/></condition><then pos:line="60" pos:column="32"> <block pos:line="60" pos:column="33">{
            <expr_stmt><expr><name pos:line="61" pos:column="13">rv<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <call><name pos:line="61" pos:column="18">ap_regkey_value_get<pos:position pos:line="61" pos:column="37"/></name><argument_list pos:line="61" pos:column="37">(<argument><expr><operator pos:line="61" pos:column="38">&amp;<pos:position pos:line="61" pos:column="43"/></operator><name pos:line="61" pos:column="39">buffer<pos:position pos:line="61" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="47">key<pos:position pos:line="61" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="52">""<pos:position pos:line="61" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="56">p<pos:position pos:line="61" pos:column="57"/></name></expr></argument>)<pos:position pos:line="61" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">ap_regkey_close<pos:position pos:line="62" pos:column="28"/></name><argument_list pos:line="62" pos:column="28">(<argument><expr><name pos:line="62" pos:column="29">type_key<pos:position pos:line="62" pos:column="37"/></name></expr></argument>)<pos:position pos:line="62" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>

    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><operator pos:line="66" pos:column="9">!<pos:position pos:line="66" pos:column="10"/></operator><name pos:line="66" pos:column="10">strict<pos:position pos:line="66" pos:column="16"/></name> <operator pos:line="66" pos:column="17">&amp;&amp;<pos:position pos:line="66" pos:column="27"/></operator> <name pos:line="66" pos:column="20">name_key<pos:position pos:line="66" pos:column="28"/></name> <operator pos:line="66" pos:column="29">&amp;&amp;<pos:position pos:line="66" pos:column="39"/></operator> <operator pos:line="66" pos:column="32">(<pos:position pos:line="66" pos:column="33"/></operator><name pos:line="66" pos:column="33">rv<pos:position pos:line="66" pos:column="35"/></name> <operator pos:line="66" pos:column="36">!=<pos:position pos:line="66" pos:column="38"/></operator> <name pos:line="66" pos:column="39">APR_SUCCESS<pos:position pos:line="66" pos:column="50"/></name><operator pos:line="66" pos:column="50">)<pos:position pos:line="66" pos:column="51"/></operator></expr>)<pos:position pos:line="66" pos:column="52"/></condition><then pos:line="66" pos:column="52"> <block pos:line="66" pos:column="53">{
        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><operator pos:line="67" pos:column="13">(<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="14">rv<pos:position pos:line="67" pos:column="16"/></name> <operator pos:line="67" pos:column="17">=<pos:position pos:line="67" pos:column="18"/></operator> <call><name pos:line="67" pos:column="19">ap_regkey_open<pos:position pos:line="67" pos:column="33"/></name><argument_list pos:line="67" pos:column="33">(<argument><expr><operator pos:line="67" pos:column="34">&amp;<pos:position pos:line="67" pos:column="39"/></operator><name pos:line="67" pos:column="35">key<pos:position pos:line="67" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="40">name_key<pos:position pos:line="67" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="50">execopen_path<pos:position pos:line="67" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="65">APR_READ<pos:position pos:line="67" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="75">p<pos:position pos:line="67" pos:column="76"/></name></expr></argument>)<pos:position pos:line="67" pos:column="77"/></argument_list></call><operator pos:line="67" pos:column="77">)<pos:position pos:line="67" pos:column="78"/></operator>
                <operator pos:line="68" pos:column="17">==<pos:position pos:line="68" pos:column="19"/></operator> <name pos:line="68" pos:column="20">APR_SUCCESS<pos:position pos:line="68" pos:column="31"/></name></expr>)<pos:position pos:line="68" pos:column="32"/></condition><then pos:line="68" pos:column="32"> <block pos:line="68" pos:column="33">{
            <expr_stmt><expr><name pos:line="69" pos:column="13">rv<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">=<pos:position pos:line="69" pos:column="17"/></operator> <call><name pos:line="69" pos:column="18">ap_regkey_value_get<pos:position pos:line="69" pos:column="37"/></name><argument_list pos:line="69" pos:column="37">(<argument><expr><operator pos:line="69" pos:column="38">&amp;<pos:position pos:line="69" pos:column="43"/></operator><name pos:line="69" pos:column="39">buffer<pos:position pos:line="69" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="47">key<pos:position pos:line="69" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="52">""<pos:position pos:line="69" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="56">p<pos:position pos:line="69" pos:column="57"/></name></expr></argument>)<pos:position pos:line="69" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="70" pos:column="13">ap_regkey_close<pos:position pos:line="70" pos:column="28"/></name><argument_list pos:line="70" pos:column="28">(<argument><expr><name pos:line="70" pos:column="29">name_key<pos:position pos:line="70" pos:column="37"/></name></expr></argument>)<pos:position pos:line="70" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>

    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><operator pos:line="74" pos:column="9">!<pos:position pos:line="74" pos:column="10"/></operator><name pos:line="74" pos:column="10">strict<pos:position pos:line="74" pos:column="16"/></name> <operator pos:line="74" pos:column="17">&amp;&amp;<pos:position pos:line="74" pos:column="27"/></operator> <operator pos:line="74" pos:column="20">(<pos:position pos:line="74" pos:column="21"/></operator><name pos:line="74" pos:column="21">rv<pos:position pos:line="74" pos:column="23"/></name> <operator pos:line="74" pos:column="24">!=<pos:position pos:line="74" pos:column="26"/></operator> <name pos:line="74" pos:column="27">APR_SUCCESS<pos:position pos:line="74" pos:column="38"/></name><operator pos:line="74" pos:column="38">)<pos:position pos:line="74" pos:column="39"/></operator></expr>)<pos:position pos:line="74" pos:column="40"/></condition><then pos:line="74" pos:column="40"> <block pos:line="74" pos:column="41">{
        <if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><operator pos:line="75" pos:column="13">(<pos:position pos:line="75" pos:column="14"/></operator><name pos:line="75" pos:column="14">rv<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">=<pos:position pos:line="75" pos:column="18"/></operator> <call><name pos:line="75" pos:column="19">ap_regkey_open<pos:position pos:line="75" pos:column="33"/></name><argument_list pos:line="75" pos:column="33">(<argument><expr><operator pos:line="75" pos:column="34">&amp;<pos:position pos:line="75" pos:column="39"/></operator><name pos:line="75" pos:column="35">key<pos:position pos:line="75" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="40">type_key<pos:position pos:line="75" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="50">execopen_path<pos:position pos:line="75" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="65">APR_READ<pos:position pos:line="75" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="75">p<pos:position pos:line="75" pos:column="76"/></name></expr></argument>)<pos:position pos:line="75" pos:column="77"/></argument_list></call><operator pos:line="75" pos:column="77">)<pos:position pos:line="75" pos:column="78"/></operator>
                <operator pos:line="76" pos:column="17">==<pos:position pos:line="76" pos:column="19"/></operator> <name pos:line="76" pos:column="20">APR_SUCCESS<pos:position pos:line="76" pos:column="31"/></name></expr>)<pos:position pos:line="76" pos:column="32"/></condition><then pos:line="76" pos:column="32"> <block pos:line="76" pos:column="33">{
            <expr_stmt><expr><name pos:line="77" pos:column="13">rv<pos:position pos:line="77" pos:column="15"/></name> <operator pos:line="77" pos:column="16">=<pos:position pos:line="77" pos:column="17"/></operator> <call><name pos:line="77" pos:column="18">ap_regkey_value_get<pos:position pos:line="77" pos:column="37"/></name><argument_list pos:line="77" pos:column="37">(<argument><expr><operator pos:line="77" pos:column="38">&amp;<pos:position pos:line="77" pos:column="43"/></operator><name pos:line="77" pos:column="39">buffer<pos:position pos:line="77" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="47">key<pos:position pos:line="77" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="52">""<pos:position pos:line="77" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="56">p<pos:position pos:line="77" pos:column="57"/></name></expr></argument>)<pos:position pos:line="77" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">ap_regkey_close<pos:position pos:line="78" pos:column="28"/></name><argument_list pos:line="78" pos:column="28">(<argument><expr><name pos:line="78" pos:column="29">type_key<pos:position pos:line="78" pos:column="37"/></name></expr></argument>)<pos:position pos:line="78" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="79" pos:column="10"/></block></then></if>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>

    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><name pos:line="82" pos:column="9">name_key<pos:position pos:line="82" pos:column="17"/></name></expr>)<pos:position pos:line="82" pos:column="18"/></condition><then pos:line="82" pos:column="18"> <block pos:line="82" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">ap_regkey_close<pos:position pos:line="83" pos:column="24"/></name><argument_list pos:line="83" pos:column="24">(<argument><expr><name pos:line="83" pos:column="25">name_key<pos:position pos:line="83" pos:column="33"/></name></expr></argument>)<pos:position pos:line="83" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="86" pos:column="5">ap_regkey_close<pos:position pos:line="86" pos:column="20"/></name><argument_list pos:line="86" pos:column="20">(<argument><expr><name pos:line="86" pos:column="21">type_key<pos:position pos:line="86" pos:column="29"/></name></expr></argument>)<pos:position pos:line="86" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="31"/></expr_stmt>

    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><name pos:line="88" pos:column="9">rv<pos:position pos:line="88" pos:column="11"/></name> <operator pos:line="88" pos:column="12">!=<pos:position pos:line="88" pos:column="14"/></operator> <name pos:line="88" pos:column="15">APR_SUCCESS<pos:position pos:line="88" pos:column="26"/></name> <operator pos:line="88" pos:column="27">||<pos:position pos:line="88" pos:column="29"/></operator> <operator pos:line="88" pos:column="30">!<pos:position pos:line="88" pos:column="31"/></operator><name><name pos:line="88" pos:column="31">buffer<pos:position pos:line="88" pos:column="37"/></name><index pos:line="88" pos:column="37">[<expr><literal type="number" pos:line="88" pos:column="38">0<pos:position pos:line="88" pos:column="39"/></literal></expr>]<pos:position pos:line="88" pos:column="40"/></index></name></expr>)<pos:position pos:line="88" pos:column="41"/></condition><then pos:line="88" pos:column="41"> <block pos:line="88" pos:column="42">{
        <return pos:line="89" pos:column="9">return <expr><name pos:line="89" pos:column="16">NULL<pos:position pos:line="89" pos:column="20"/></name></expr>;<pos:position pos:line="89" pos:column="21"/></return>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>

    <return pos:line="92" pos:column="5">return <expr><name pos:line="92" pos:column="12">buffer<pos:position pos:line="92" pos:column="18"/></name></expr>;<pos:position pos:line="92" pos:column="19"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_198.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">send_parsed_content<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">apr_bucket_brigade<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier><modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">bb<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, 
                                        <parameter><decl><type><name pos:line="2" pos:column="41">request_rec<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">r<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">ap_filter_t<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type><name pos:line="2" pos:column="70">f<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">include_ctx_t<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">ctx<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name><name pos:line="4" pos:column="26">f<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">-&gt;<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="29">ctx<pos:position pos:line="4" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_bucket<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">dptr<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><call><name pos:line="5" pos:column="24">APR_BRIGADE_FIRST<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">(<argument><expr><operator pos:line="5" pos:column="42">*<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="43">bb<pos:position pos:line="5" pos:column="45"/></name></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_bucket<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">tmp_dptr<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_bucket_brigade<pos:position pos:line="7" pos:column="23"/></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">tag_and_after<pos:position pos:line="7" pos:column="38"/></name></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">rv<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><name pos:line="8" pos:column="23">APR_SUCCESS<pos:position pos:line="8" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">r<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">args<pos:position pos:line="10" pos:column="16"/></name></name></expr>)<pos:position pos:line="10" pos:column="17"/></condition><then pos:line="10" pos:column="17"> <block pos:line="10" pos:column="18">{               <comment type="block" pos:line="10" pos:column="34">/* add QUERY stuff to env cause it ain't yet */</comment>
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">arg_copy<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><call><name pos:line="11" pos:column="26">apr_pstrdup<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name><name pos:line="11" pos:column="38">r<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">-&gt;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="41">pool<pos:position pos:line="11" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="47">r<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">-&gt;<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="50">args<pos:position pos:line="11" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="56"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="13" pos:column="9">apr_table_setn<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name><name pos:line="13" pos:column="24">r<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">-&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">subprocess_env<pos:position pos:line="13" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="43">"QUERY_STRING"<pos:position pos:line="13" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="59">r<pos:position pos:line="13" pos:column="60"/></name><operator pos:line="13" pos:column="60">-&gt;<pos:position pos:line="13" pos:column="65"/></operator><name pos:line="13" pos:column="62">args<pos:position pos:line="13" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">ap_unescape_url<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">arg_copy<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">apr_table_setn<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name><name pos:line="15" pos:column="24">r<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">subprocess_env<pos:position pos:line="15" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="43">"QUERY_STRING_UNESCAPED"<pos:position pos:line="15" pos:column="67"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="16" pos:column="19">ap_escape_shell_cmd<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name><name pos:line="16" pos:column="39">r<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">-&gt;<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="42">pool<pos:position pos:line="16" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="48">arg_copy<pos:position pos:line="16" pos:column="56"/></name></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <while pos:line="19" pos:column="5">while <condition pos:line="19" pos:column="11">(<expr><name pos:line="19" pos:column="12">dptr<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">!=<pos:position pos:line="19" pos:column="19"/></operator> <call><name pos:line="19" pos:column="20">APR_BRIGADE_SENTINEL<pos:position pos:line="19" pos:column="40"/></name><argument_list pos:line="19" pos:column="40">(<argument><expr><operator pos:line="19" pos:column="41">*<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="42">bb<pos:position pos:line="19" pos:column="44"/></name></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></call> <operator pos:line="19" pos:column="46">&amp;&amp;<pos:position pos:line="19" pos:column="56"/></operator> <operator pos:line="19" pos:column="49">!<pos:position pos:line="19" pos:column="50"/></operator><call><name pos:line="19" pos:column="50">APR_BUCKET_IS_EOS<pos:position pos:line="19" pos:column="67"/></name><argument_list pos:line="19" pos:column="67">(<argument><expr><name pos:line="19" pos:column="68">dptr<pos:position pos:line="19" pos:column="72"/></name></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="74"/></condition> <block pos:line="19" pos:column="75">{
        <comment type="block" pos:line="20" pos:column="9">/* State to check for the STARTING_SEQUENCE. */</comment>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">(<pos:position pos:line="21" pos:column="14"/></operator><name><name pos:line="21" pos:column="14">ctx<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">-&gt;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="19">state<pos:position pos:line="21" pos:column="24"/></name></name> <operator pos:line="21" pos:column="25">==<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="28">PRE_HEAD<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">)<pos:position pos:line="21" pos:column="37"/></operator> <operator pos:line="21" pos:column="38">||<pos:position pos:line="21" pos:column="40"/></operator> <operator pos:line="21" pos:column="41">(<pos:position pos:line="21" pos:column="42"/></operator><name><name pos:line="21" pos:column="42">ctx<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">-&gt;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="47">state<pos:position pos:line="21" pos:column="52"/></name></name> <operator pos:line="21" pos:column="53">==<pos:position pos:line="21" pos:column="55"/></operator> <name pos:line="21" pos:column="56">PARSE_HEAD<pos:position pos:line="21" pos:column="66"/></name><operator pos:line="21" pos:column="66">)<pos:position pos:line="21" pos:column="67"/></operator></expr>)<pos:position pos:line="21" pos:column="68"/></condition><then pos:line="21" pos:column="68"> <block pos:line="21" pos:column="69">{
            <decl_stmt><decl><type><name pos:line="22" pos:column="13">int<pos:position pos:line="22" pos:column="16"/></name></type> <name pos:line="22" pos:column="17">do_cleanup<pos:position pos:line="22" pos:column="27"/></name> <init pos:line="22" pos:column="28">= <expr><literal type="number" pos:line="22" pos:column="30">0<pos:position pos:line="22" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="32"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="23" pos:column="13">apr_size_t<pos:position pos:line="23" pos:column="23"/></name></type> <name pos:line="23" pos:column="24">cleanup_bytes<pos:position pos:line="23" pos:column="37"/></name> <init pos:line="23" pos:column="38">= <expr><name><name pos:line="23" pos:column="40">ctx<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">parse_pos<pos:position pos:line="23" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="23" pos:column="55"/></decl_stmt>

            <expr_stmt><expr><name pos:line="25" pos:column="13">tmp_dptr<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <call><name pos:line="25" pos:column="24">find_start_sequence<pos:position pos:line="25" pos:column="43"/></name><argument_list pos:line="25" pos:column="43">(<argument><expr><name pos:line="25" pos:column="44">dptr<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="50">ctx<pos:position pos:line="25" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="55">*<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="56">bb<pos:position pos:line="25" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="60">&amp;<pos:position pos:line="25" pos:column="65"/></operator><name pos:line="25" pos:column="61">do_cleanup<pos:position pos:line="25" pos:column="71"/></name></expr></argument>)<pos:position pos:line="25" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="73"/></expr_stmt>
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><operator pos:line="26" pos:column="17">!<pos:position pos:line="26" pos:column="18"/></operator><call><name pos:line="26" pos:column="18">APR_STATUS_IS_SUCCESS<pos:position pos:line="26" pos:column="39"/></name><argument_list pos:line="26" pos:column="39">(<argument><expr><name><name pos:line="26" pos:column="40">ctx<pos:position pos:line="26" pos:column="43"/></name><operator pos:line="26" pos:column="43">-&gt;<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="45">status<pos:position pos:line="26" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53"> <block pos:line="26" pos:column="54">{
                <return pos:line="27" pos:column="17">return <expr><name><name pos:line="27" pos:column="24">ctx<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">status<pos:position pos:line="27" pos:column="35"/></name></name></expr>;<pos:position pos:line="27" pos:column="36"/></return>
            }<pos:position pos:line="28" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="30" pos:column="13">/* The few bytes stored in the ssi_tag_brigade turned out not to
             * be a tag after all. This can only happen if the starting
             * tag actually spans brigades. This should be very rare.
             */</comment>
            <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><operator pos:line="34" pos:column="17">(<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">do_cleanup<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">)<pos:position pos:line="34" pos:column="29"/></operator> <operator pos:line="34" pos:column="30">&amp;&amp;<pos:position pos:line="34" pos:column="40"/></operator> <operator pos:line="34" pos:column="33">(<pos:position pos:line="34" pos:column="34"/></operator><operator pos:line="34" pos:column="34">!<pos:position pos:line="34" pos:column="35"/></operator><call><name pos:line="34" pos:column="35">APR_BRIGADE_EMPTY<pos:position pos:line="34" pos:column="52"/></name><argument_list pos:line="34" pos:column="52">(<argument><expr><name><name pos:line="34" pos:column="53">ctx<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">-&gt;<pos:position pos:line="34" pos:column="61"/></operator><name pos:line="34" pos:column="58">ssi_tag_brigade<pos:position pos:line="34" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="74"/></argument_list></call><operator pos:line="34" pos:column="74">)<pos:position pos:line="34" pos:column="75"/></operator></expr>)<pos:position pos:line="34" pos:column="76"/></condition><then pos:line="34" pos:column="76"> <block pos:line="34" pos:column="77">{
                <decl_stmt><decl><type><name pos:line="35" pos:column="17">apr_bucket<pos:position pos:line="35" pos:column="27"/></name> <modifier pos:line="35" pos:column="28">*<pos:position pos:line="35" pos:column="29"/></modifier></type><name pos:line="35" pos:column="29">tmp_bkt<pos:position pos:line="35" pos:column="36"/></name></decl>;<pos:position pos:line="35" pos:column="37"/></decl_stmt>

                <expr_stmt><expr><name pos:line="37" pos:column="17">tmp_bkt<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <call><name pos:line="37" pos:column="27">apr_bucket_immortal_create<pos:position pos:line="37" pos:column="53"/></name><argument_list pos:line="37" pos:column="53">(<argument><expr><name><name pos:line="37" pos:column="54">ctx<pos:position pos:line="37" pos:column="57"/></name><operator pos:line="37" pos:column="57">-&gt;<pos:position pos:line="37" pos:column="62"/></operator><name pos:line="37" pos:column="59">start_seq<pos:position pos:line="37" pos:column="68"/></name></name></expr></argument>,
                                                  <argument><expr><name pos:line="38" pos:column="51">cleanup_bytes<pos:position pos:line="38" pos:column="64"/></name></expr></argument>,
                                                  <argument><expr><name><name pos:line="39" pos:column="51">r<pos:position pos:line="39" pos:column="52"/></name><operator pos:line="39" pos:column="52">-&gt;<pos:position pos:line="39" pos:column="57"/></operator><name pos:line="39" pos:column="54">connection<pos:position pos:line="39" pos:column="64"/></name><operator pos:line="39" pos:column="64">-&gt;<pos:position pos:line="39" pos:column="69"/></operator><name pos:line="39" pos:column="66">bucket_alloc<pos:position pos:line="39" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="80"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="40" pos:column="17">APR_BRIGADE_INSERT_HEAD<pos:position pos:line="40" pos:column="40"/></name><argument_list pos:line="40" pos:column="40">(<argument><expr><operator pos:line="40" pos:column="41">*<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="42">bb<pos:position pos:line="40" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="46">tmp_bkt<pos:position pos:line="40" pos:column="53"/></name></expr></argument>)<pos:position pos:line="40" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="41" pos:column="17">apr_brigade_cleanup<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><name><name pos:line="41" pos:column="37">ctx<pos:position pos:line="41" pos:column="40"/></name><operator pos:line="41" pos:column="40">-&gt;<pos:position pos:line="41" pos:column="45"/></operator><name pos:line="41" pos:column="42">ssi_tag_brigade<pos:position pos:line="41" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="42" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="44" pos:column="13">/* If I am inside a conditional (if, elif, else) that is false
             *   then I need to throw away anything contained in it.
             */</comment>
            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><operator pos:line="47" pos:column="17">(<pos:position pos:line="47" pos:column="18"/></operator><operator pos:line="47" pos:column="18">!<pos:position pos:line="47" pos:column="19"/></operator><operator pos:line="47" pos:column="19">(<pos:position pos:line="47" pos:column="20"/></operator><name><name pos:line="47" pos:column="20">ctx<pos:position pos:line="47" pos:column="23"/></name><operator pos:line="47" pos:column="23">-&gt;<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="25">flags<pos:position pos:line="47" pos:column="30"/></name></name> <operator pos:line="47" pos:column="31">&amp;<pos:position pos:line="47" pos:column="36"/></operator> <name pos:line="47" pos:column="33">FLAG_PRINTING<pos:position pos:line="47" pos:column="46"/></name><operator pos:line="47" pos:column="46">)<pos:position pos:line="47" pos:column="47"/></operator><operator pos:line="47" pos:column="47">)<pos:position pos:line="47" pos:column="48"/></operator> <operator pos:line="47" pos:column="49">&amp;&amp;<pos:position pos:line="47" pos:column="59"/></operator> <operator pos:line="47" pos:column="52">(<pos:position pos:line="47" pos:column="53"/></operator><name pos:line="47" pos:column="53">tmp_dptr<pos:position pos:line="47" pos:column="61"/></name> <operator pos:line="47" pos:column="62">!=<pos:position pos:line="47" pos:column="64"/></operator> <name pos:line="47" pos:column="65">NULL<pos:position pos:line="47" pos:column="69"/></name><operator pos:line="47" pos:column="69">)<pos:position pos:line="47" pos:column="70"/></operator> <operator pos:line="47" pos:column="71">&amp;&amp;<pos:position pos:line="47" pos:column="81"/></operator>
                <operator pos:line="48" pos:column="17">(<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="18">dptr<pos:position pos:line="48" pos:column="22"/></name> <operator pos:line="48" pos:column="23">!=<pos:position pos:line="48" pos:column="25"/></operator> <call><name pos:line="48" pos:column="26">APR_BRIGADE_SENTINEL<pos:position pos:line="48" pos:column="46"/></name><argument_list pos:line="48" pos:column="46">(<argument><expr><operator pos:line="48" pos:column="47">*<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="48">bb<pos:position pos:line="48" pos:column="50"/></name></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></call><operator pos:line="48" pos:column="51">)<pos:position pos:line="48" pos:column="52"/></operator></expr>)<pos:position pos:line="48" pos:column="53"/></condition><then pos:line="48" pos:column="53"> <block pos:line="48" pos:column="54">{
                <while pos:line="49" pos:column="17">while <condition pos:line="49" pos:column="23">(<expr><operator pos:line="49" pos:column="24">(<pos:position pos:line="49" pos:column="25"/></operator><name pos:line="49" pos:column="25">dptr<pos:position pos:line="49" pos:column="29"/></name> <operator pos:line="49" pos:column="30">!=<pos:position pos:line="49" pos:column="32"/></operator> <call><name pos:line="49" pos:column="33">APR_BRIGADE_SENTINEL<pos:position pos:line="49" pos:column="53"/></name><argument_list pos:line="49" pos:column="53">(<argument><expr><operator pos:line="49" pos:column="54">*<pos:position pos:line="49" pos:column="55"/></operator><name pos:line="49" pos:column="55">bb<pos:position pos:line="49" pos:column="57"/></name></expr></argument>)<pos:position pos:line="49" pos:column="58"/></argument_list></call><operator pos:line="49" pos:column="58">)<pos:position pos:line="49" pos:column="59"/></operator> <operator pos:line="49" pos:column="60">&amp;&amp;<pos:position pos:line="49" pos:column="70"/></operator>
                       <operator pos:line="50" pos:column="24">(<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="25">dptr<pos:position pos:line="50" pos:column="29"/></name> <operator pos:line="50" pos:column="30">!=<pos:position pos:line="50" pos:column="32"/></operator> <name pos:line="50" pos:column="33">tmp_dptr<pos:position pos:line="50" pos:column="41"/></name><operator pos:line="50" pos:column="41">)<pos:position pos:line="50" pos:column="42"/></operator></expr>)<pos:position pos:line="50" pos:column="43"/></condition> <block pos:line="50" pos:column="44">{
                    <decl_stmt><decl><type><name pos:line="51" pos:column="21">apr_bucket<pos:position pos:line="51" pos:column="31"/></name> <modifier pos:line="51" pos:column="32">*<pos:position pos:line="51" pos:column="33"/></modifier></type><name pos:line="51" pos:column="33">free_bucket<pos:position pos:line="51" pos:column="44"/></name> <init pos:line="51" pos:column="45">= <expr><name pos:line="51" pos:column="47">dptr<pos:position pos:line="51" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="51" pos:column="52"/></decl_stmt>

                    <expr_stmt><expr><name pos:line="53" pos:column="21">dptr<pos:position pos:line="53" pos:column="25"/></name> <operator pos:line="53" pos:column="26">=<pos:position pos:line="53" pos:column="27"/></operator> <call><name pos:line="53" pos:column="28">APR_BUCKET_NEXT<pos:position pos:line="53" pos:column="43"/></name> <argument_list pos:line="53" pos:column="44">(<argument><expr><name pos:line="53" pos:column="45">dptr<pos:position pos:line="53" pos:column="49"/></name></expr></argument>)<pos:position pos:line="53" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="51"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="54" pos:column="21">apr_bucket_delete<pos:position pos:line="54" pos:column="38"/></name><argument_list pos:line="54" pos:column="38">(<argument><expr><name pos:line="54" pos:column="39">free_bucket<pos:position pos:line="54" pos:column="50"/></name></expr></argument>)<pos:position pos:line="54" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="52"/></expr_stmt>
                }<pos:position pos:line="55" pos:column="18"/></block></while>
            }<pos:position pos:line="56" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="58" pos:column="13">/* Adjust the current bucket position based on what was found... */</comment>
            <if pos:line="59" pos:column="13">if <condition pos:line="59" pos:column="16">(<expr><operator pos:line="59" pos:column="17">(<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="18">tmp_dptr<pos:position pos:line="59" pos:column="26"/></name> <operator pos:line="59" pos:column="27">!=<pos:position pos:line="59" pos:column="29"/></operator> <name pos:line="59" pos:column="30">NULL<pos:position pos:line="59" pos:column="34"/></name><operator pos:line="59" pos:column="34">)<pos:position pos:line="59" pos:column="35"/></operator> <operator pos:line="59" pos:column="36">&amp;&amp;<pos:position pos:line="59" pos:column="46"/></operator> <operator pos:line="59" pos:column="39">(<pos:position pos:line="59" pos:column="40"/></operator><name><name pos:line="59" pos:column="40">ctx<pos:position pos:line="59" pos:column="43"/></name><operator pos:line="59" pos:column="43">-&gt;<pos:position pos:line="59" pos:column="48"/></operator><name pos:line="59" pos:column="45">state<pos:position pos:line="59" pos:column="50"/></name></name> <operator pos:line="59" pos:column="51">==<pos:position pos:line="59" pos:column="53"/></operator> <name pos:line="59" pos:column="54">PARSE_DIRECTIVE<pos:position pos:line="59" pos:column="69"/></name><operator pos:line="59" pos:column="69">)<pos:position pos:line="59" pos:column="70"/></operator></expr>)<pos:position pos:line="59" pos:column="71"/></condition><then pos:line="59" pos:column="71"> <block pos:line="59" pos:column="72">{
                <if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name><name pos:line="60" pos:column="21">ctx<pos:position pos:line="60" pos:column="24"/></name><operator pos:line="60" pos:column="24">-&gt;<pos:position pos:line="60" pos:column="29"/></operator><name pos:line="60" pos:column="26">tag_start_bucket<pos:position pos:line="60" pos:column="42"/></name></name> <operator pos:line="60" pos:column="43">!=<pos:position pos:line="60" pos:column="45"/></operator> <name pos:line="60" pos:column="46">NULL<pos:position pos:line="60" pos:column="50"/></name></expr>)<pos:position pos:line="60" pos:column="51"/></condition><then pos:line="60" pos:column="51"> <block pos:line="60" pos:column="52">{
                    <expr_stmt><expr><name pos:line="61" pos:column="21">dptr<pos:position pos:line="61" pos:column="25"/></name> <operator pos:line="61" pos:column="26">=<pos:position pos:line="61" pos:column="27"/></operator> <name><name pos:line="61" pos:column="28">ctx<pos:position pos:line="61" pos:column="31"/></name><operator pos:line="61" pos:column="31">-&gt;<pos:position pos:line="61" pos:column="36"/></operator><name pos:line="61" pos:column="33">tag_start_bucket<pos:position pos:line="61" pos:column="49"/></name></name></expr>;<pos:position pos:line="61" pos:column="50"/></expr_stmt>
                }<pos:position pos:line="62" pos:column="18"/></block></then>
                <else pos:line="63" pos:column="17">else <block pos:line="63" pos:column="22">{
                    <expr_stmt><expr><name pos:line="64" pos:column="21">dptr<pos:position pos:line="64" pos:column="25"/></name> <operator pos:line="64" pos:column="26">=<pos:position pos:line="64" pos:column="27"/></operator> <call><name pos:line="64" pos:column="28">APR_BRIGADE_SENTINEL<pos:position pos:line="64" pos:column="48"/></name><argument_list pos:line="64" pos:column="48">(<argument><expr><operator pos:line="64" pos:column="49">*<pos:position pos:line="64" pos:column="50"/></operator><name pos:line="64" pos:column="50">bb<pos:position pos:line="64" pos:column="52"/></name></expr></argument>)<pos:position pos:line="64" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="54"/></expr_stmt>
                }<pos:position pos:line="65" pos:column="18"/></block></else></if>
            }<pos:position pos:line="66" pos:column="14"/></block></then>
            <elseif pos:line="67" pos:column="13">else <if pos:line="67" pos:column="18">if <condition pos:line="67" pos:column="21">(<expr><operator pos:line="67" pos:column="22">(<pos:position pos:line="67" pos:column="23"/></operator><name pos:line="67" pos:column="23">tmp_dptr<pos:position pos:line="67" pos:column="31"/></name> <operator pos:line="67" pos:column="32">!=<pos:position pos:line="67" pos:column="34"/></operator> <name pos:line="67" pos:column="35">NULL<pos:position pos:line="67" pos:column="39"/></name><operator pos:line="67" pos:column="39">)<pos:position pos:line="67" pos:column="40"/></operator> <operator pos:line="67" pos:column="41">&amp;&amp;<pos:position pos:line="67" pos:column="51"/></operator>
                     <operator pos:line="68" pos:column="22">(<pos:position pos:line="68" pos:column="23"/></operator><name><name pos:line="68" pos:column="23">ctx<pos:position pos:line="68" pos:column="26"/></name><operator pos:line="68" pos:column="26">-&gt;<pos:position pos:line="68" pos:column="31"/></operator><name pos:line="68" pos:column="28">output_now<pos:position pos:line="68" pos:column="38"/></name></name> <operator pos:line="68" pos:column="39">||<pos:position pos:line="68" pos:column="41"/></operator>
                      <operator pos:line="69" pos:column="23">(<pos:position pos:line="69" pos:column="24"/></operator><name><name pos:line="69" pos:column="24">ctx<pos:position pos:line="69" pos:column="27"/></name><operator pos:line="69" pos:column="27">-&gt;<pos:position pos:line="69" pos:column="32"/></operator><name pos:line="69" pos:column="29">bytes_parsed<pos:position pos:line="69" pos:column="41"/></name></name> <operator pos:line="69" pos:column="42">&gt;=<pos:position pos:line="69" pos:column="47"/></operator> <name pos:line="69" pos:column="45">BYTE_COUNT_THRESHOLD<pos:position pos:line="69" pos:column="65"/></name><operator pos:line="69" pos:column="65">)<pos:position pos:line="69" pos:column="66"/></operator><operator pos:line="69" pos:column="66">)<pos:position pos:line="69" pos:column="67"/></operator></expr>)<pos:position pos:line="69" pos:column="68"/></condition><then pos:line="69" pos:column="68"> <block pos:line="69" pos:column="69">{
                <comment type="block" pos:line="70" pos:column="17">/* Send the large chunk of pre-tag bytes...  */</comment>
                <expr_stmt><expr><name pos:line="71" pos:column="17">tag_and_after<pos:position pos:line="71" pos:column="30"/></name> <operator pos:line="71" pos:column="31">=<pos:position pos:line="71" pos:column="32"/></operator> <call><name pos:line="71" pos:column="33">apr_brigade_split<pos:position pos:line="71" pos:column="50"/></name><argument_list pos:line="71" pos:column="50">(<argument><expr><operator pos:line="71" pos:column="51">*<pos:position pos:line="71" pos:column="52"/></operator><name pos:line="71" pos:column="52">bb<pos:position pos:line="71" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="56">tmp_dptr<pos:position pos:line="71" pos:column="64"/></name></expr></argument>)<pos:position pos:line="71" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="66"/></expr_stmt>
                <if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><name><name pos:line="72" pos:column="21">ctx<pos:position pos:line="72" pos:column="24"/></name><operator pos:line="72" pos:column="24">-&gt;<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="26">output_flush<pos:position pos:line="72" pos:column="38"/></name></name></expr>)<pos:position pos:line="72" pos:column="39"/></condition><then pos:line="72" pos:column="39"> <block pos:line="72" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="73" pos:column="21">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="73" pos:column="44"/></name><argument_list pos:line="73" pos:column="44">(<argument><expr><operator pos:line="73" pos:column="45">*<pos:position pos:line="73" pos:column="46"/></operator><name pos:line="73" pos:column="46">bb<pos:position pos:line="73" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="50">apr_bucket_flush_create<pos:position pos:line="73" pos:column="73"/></name><argument_list pos:line="73" pos:column="73">(<argument><expr><name><operator pos:line="73" pos:column="74">(<pos:position pos:line="73" pos:column="75"/></operator><operator pos:line="73" pos:column="75">*<pos:position pos:line="73" pos:column="76"/></operator><name pos:line="73" pos:column="76">bb<pos:position pos:line="73" pos:column="78"/></name><operator pos:line="73" pos:column="78">)<pos:position pos:line="73" pos:column="79"/></operator><operator pos:line="73" pos:column="79">-&gt;<pos:position pos:line="73" pos:column="84"/></operator><name pos:line="73" pos:column="81">bucket_alloc<pos:position pos:line="73" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="96"/></expr_stmt>
                }<pos:position pos:line="74" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name pos:line="76" pos:column="17">rv<pos:position pos:line="76" pos:column="19"/></name> <operator pos:line="76" pos:column="20">=<pos:position pos:line="76" pos:column="21"/></operator> <call><name pos:line="76" pos:column="22">ap_pass_brigade<pos:position pos:line="76" pos:column="37"/></name><argument_list pos:line="76" pos:column="37">(<argument><expr><name><name pos:line="76" pos:column="38">f<pos:position pos:line="76" pos:column="39"/></name><operator pos:line="76" pos:column="39">-&gt;<pos:position pos:line="76" pos:column="44"/></operator><name pos:line="76" pos:column="41">next<pos:position pos:line="76" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="47">*<pos:position pos:line="76" pos:column="48"/></operator><name pos:line="76" pos:column="48">bb<pos:position pos:line="76" pos:column="50"/></name></expr></argument>)<pos:position pos:line="76" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="52"/></expr_stmt>
                <if pos:line="77" pos:column="17">if <condition pos:line="77" pos:column="20">(<expr><name pos:line="77" pos:column="21">rv<pos:position pos:line="77" pos:column="23"/></name> <operator pos:line="77" pos:column="24">!=<pos:position pos:line="77" pos:column="26"/></operator> <name pos:line="77" pos:column="27">APR_SUCCESS<pos:position pos:line="77" pos:column="38"/></name></expr>)<pos:position pos:line="77" pos:column="39"/></condition><then pos:line="77" pos:column="39"> <block pos:line="77" pos:column="40">{
                    <return pos:line="78" pos:column="21">return <expr><name pos:line="78" pos:column="28">rv<pos:position pos:line="78" pos:column="30"/></name></expr>;<pos:position pos:line="78" pos:column="31"/></return>
                }<pos:position pos:line="79" pos:column="18"/></block></then></if>
                <expr_stmt><expr><operator pos:line="80" pos:column="17">*<pos:position pos:line="80" pos:column="18"/></operator><name pos:line="80" pos:column="18">bb<pos:position pos:line="80" pos:column="20"/></name>  <operator pos:line="80" pos:column="22">=<pos:position pos:line="80" pos:column="23"/></operator> <name pos:line="80" pos:column="24">tag_and_after<pos:position pos:line="80" pos:column="37"/></name></expr>;<pos:position pos:line="80" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="81" pos:column="17">dptr<pos:position pos:line="81" pos:column="21"/></name> <operator pos:line="81" pos:column="22">=<pos:position pos:line="81" pos:column="23"/></operator> <name pos:line="81" pos:column="24">tmp_dptr<pos:position pos:line="81" pos:column="32"/></name></expr>;<pos:position pos:line="81" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="82" pos:column="17">ctx<pos:position pos:line="82" pos:column="20"/></name><operator pos:line="82" pos:column="20">-&gt;<pos:position pos:line="82" pos:column="25"/></operator><name pos:line="82" pos:column="22">output_flush<pos:position pos:line="82" pos:column="34"/></name></name> <operator pos:line="82" pos:column="35">=<pos:position pos:line="82" pos:column="36"/></operator> <literal type="number" pos:line="82" pos:column="37">0<pos:position pos:line="82" pos:column="38"/></literal></expr>;<pos:position pos:line="82" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="83" pos:column="17">ctx<pos:position pos:line="83" pos:column="20"/></name><operator pos:line="83" pos:column="20">-&gt;<pos:position pos:line="83" pos:column="25"/></operator><name pos:line="83" pos:column="22">bytes_parsed<pos:position pos:line="83" pos:column="34"/></name></name> <operator pos:line="83" pos:column="35">=<pos:position pos:line="83" pos:column="36"/></operator> <literal type="number" pos:line="83" pos:column="37">0<pos:position pos:line="83" pos:column="38"/></literal></expr>;<pos:position pos:line="83" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="84" pos:column="17">ctx<pos:position pos:line="84" pos:column="20"/></name><operator pos:line="84" pos:column="20">-&gt;<pos:position pos:line="84" pos:column="25"/></operator><name pos:line="84" pos:column="22">output_now<pos:position pos:line="84" pos:column="32"/></name></name> <operator pos:line="84" pos:column="33">=<pos:position pos:line="84" pos:column="34"/></operator> <literal type="number" pos:line="84" pos:column="35">0<pos:position pos:line="84" pos:column="36"/></literal></expr>;<pos:position pos:line="84" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="85" pos:column="14"/></block></then></if></elseif>
            <elseif pos:line="86" pos:column="13">else <if pos:line="86" pos:column="18">if <condition pos:line="86" pos:column="21">(<expr><name pos:line="86" pos:column="22">tmp_dptr<pos:position pos:line="86" pos:column="30"/></name> <operator pos:line="86" pos:column="31">==<pos:position pos:line="86" pos:column="33"/></operator> <name pos:line="86" pos:column="34">NULL<pos:position pos:line="86" pos:column="38"/></name></expr>)<pos:position pos:line="86" pos:column="39"/></condition><then pos:line="86" pos:column="39"> <block pos:line="86" pos:column="40">{ 
                <comment type="block" pos:line="87" pos:column="17">/* There was no possible SSI tag in the
                 * remainder of this brigade... */</comment>
                <expr_stmt><expr><name pos:line="89" pos:column="17">dptr<pos:position pos:line="89" pos:column="21"/></name> <operator pos:line="89" pos:column="22">=<pos:position pos:line="89" pos:column="23"/></operator> <call><name pos:line="89" pos:column="24">APR_BRIGADE_SENTINEL<pos:position pos:line="89" pos:column="44"/></name><argument_list pos:line="89" pos:column="44">(<argument><expr><operator pos:line="89" pos:column="45">*<pos:position pos:line="89" pos:column="46"/></operator><name pos:line="89" pos:column="46">bb<pos:position pos:line="89" pos:column="48"/></name></expr></argument>)<pos:position pos:line="89" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="50"/></expr_stmt>  
            }<pos:position pos:line="90" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="91" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="93" pos:column="9">/* State to check for the ENDING_SEQUENCE. */</comment>
        <if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><operator pos:line="94" pos:column="13">(<pos:position pos:line="94" pos:column="14"/></operator><operator pos:line="94" pos:column="14">(<pos:position pos:line="94" pos:column="15"/></operator><name><name pos:line="94" pos:column="15">ctx<pos:position pos:line="94" pos:column="18"/></name><operator pos:line="94" pos:column="18">-&gt;<pos:position pos:line="94" pos:column="23"/></operator><name pos:line="94" pos:column="20">state<pos:position pos:line="94" pos:column="25"/></name></name> <operator pos:line="94" pos:column="26">==<pos:position pos:line="94" pos:column="28"/></operator> <name pos:line="94" pos:column="29">PARSE_DIRECTIVE<pos:position pos:line="94" pos:column="44"/></name><operator pos:line="94" pos:column="44">)<pos:position pos:line="94" pos:column="45"/></operator> <operator pos:line="94" pos:column="46">||<pos:position pos:line="94" pos:column="48"/></operator>
             <operator pos:line="95" pos:column="14">(<pos:position pos:line="95" pos:column="15"/></operator><name><name pos:line="95" pos:column="15">ctx<pos:position pos:line="95" pos:column="18"/></name><operator pos:line="95" pos:column="18">-&gt;<pos:position pos:line="95" pos:column="23"/></operator><name pos:line="95" pos:column="20">state<pos:position pos:line="95" pos:column="25"/></name></name> <operator pos:line="95" pos:column="26">==<pos:position pos:line="95" pos:column="28"/></operator> <name pos:line="95" pos:column="29">PARSE_TAG<pos:position pos:line="95" pos:column="38"/></name><operator pos:line="95" pos:column="38">)<pos:position pos:line="95" pos:column="39"/></operator>       <operator pos:line="95" pos:column="46">||<pos:position pos:line="95" pos:column="48"/></operator>
             <operator pos:line="96" pos:column="14">(<pos:position pos:line="96" pos:column="15"/></operator><name><name pos:line="96" pos:column="15">ctx<pos:position pos:line="96" pos:column="18"/></name><operator pos:line="96" pos:column="18">-&gt;<pos:position pos:line="96" pos:column="23"/></operator><name pos:line="96" pos:column="20">state<pos:position pos:line="96" pos:column="25"/></name></name> <operator pos:line="96" pos:column="26">==<pos:position pos:line="96" pos:column="28"/></operator> <name pos:line="96" pos:column="29">PARSE_TAIL<pos:position pos:line="96" pos:column="39"/></name><operator pos:line="96" pos:column="39">)<pos:position pos:line="96" pos:column="40"/></operator><operator pos:line="96" pos:column="40">)<pos:position pos:line="96" pos:column="41"/></operator>       <operator pos:line="96" pos:column="48">&amp;&amp;<pos:position pos:line="96" pos:column="58"/></operator>
            <operator pos:line="97" pos:column="13">(<pos:position pos:line="97" pos:column="14"/></operator><name pos:line="97" pos:column="14">dptr<pos:position pos:line="97" pos:column="18"/></name> <operator pos:line="97" pos:column="19">!=<pos:position pos:line="97" pos:column="21"/></operator> <call><name pos:line="97" pos:column="22">APR_BRIGADE_SENTINEL<pos:position pos:line="97" pos:column="42"/></name><argument_list pos:line="97" pos:column="42">(<argument><expr><operator pos:line="97" pos:column="43">*<pos:position pos:line="97" pos:column="44"/></operator><name pos:line="97" pos:column="44">bb<pos:position pos:line="97" pos:column="46"/></name></expr></argument>)<pos:position pos:line="97" pos:column="47"/></argument_list></call><operator pos:line="97" pos:column="47">)<pos:position pos:line="97" pos:column="48"/></operator></expr>)<pos:position pos:line="97" pos:column="49"/></condition><then pos:line="97" pos:column="49"> <block pos:line="97" pos:column="50">{
            <expr_stmt><expr><name pos:line="98" pos:column="13">tmp_dptr<pos:position pos:line="98" pos:column="21"/></name> <operator pos:line="98" pos:column="22">=<pos:position pos:line="98" pos:column="23"/></operator> <call><name pos:line="98" pos:column="24">find_end_sequence<pos:position pos:line="98" pos:column="41"/></name><argument_list pos:line="98" pos:column="41">(<argument><expr><name pos:line="98" pos:column="42">dptr<pos:position pos:line="98" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="48">ctx<pos:position pos:line="98" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="53">*<pos:position pos:line="98" pos:column="54"/></operator><name pos:line="98" pos:column="54">bb<pos:position pos:line="98" pos:column="56"/></name></expr></argument>)<pos:position pos:line="98" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="58"/></expr_stmt>
            <if pos:line="99" pos:column="13">if <condition pos:line="99" pos:column="16">(<expr><operator pos:line="99" pos:column="17">!<pos:position pos:line="99" pos:column="18"/></operator><call><name pos:line="99" pos:column="18">APR_STATUS_IS_SUCCESS<pos:position pos:line="99" pos:column="39"/></name><argument_list pos:line="99" pos:column="39">(<argument><expr><name><name pos:line="99" pos:column="40">ctx<pos:position pos:line="99" pos:column="43"/></name><operator pos:line="99" pos:column="43">-&gt;<pos:position pos:line="99" pos:column="48"/></operator><name pos:line="99" pos:column="45">status<pos:position pos:line="99" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="53"/></condition><then pos:line="99" pos:column="53"> <block pos:line="99" pos:column="54">{
                <return pos:line="100" pos:column="17">return <expr><name><name pos:line="100" pos:column="24">ctx<pos:position pos:line="100" pos:column="27"/></name><operator pos:line="100" pos:column="27">-&gt;<pos:position pos:line="100" pos:column="32"/></operator><name pos:line="100" pos:column="29">status<pos:position pos:line="100" pos:column="35"/></name></name></expr>;<pos:position pos:line="100" pos:column="36"/></return>
            }<pos:position pos:line="101" pos:column="14"/></block></then></if>

            <if pos:line="103" pos:column="13">if <condition pos:line="103" pos:column="16">(<expr><name pos:line="103" pos:column="17">tmp_dptr<pos:position pos:line="103" pos:column="25"/></name> <operator pos:line="103" pos:column="26">!=<pos:position pos:line="103" pos:column="28"/></operator> <name pos:line="103" pos:column="29">NULL<pos:position pos:line="103" pos:column="33"/></name></expr>)<pos:position pos:line="103" pos:column="34"/></condition><then pos:line="103" pos:column="34"> <block pos:line="103" pos:column="35">{
                <expr_stmt><expr><name pos:line="104" pos:column="17">dptr<pos:position pos:line="104" pos:column="21"/></name> <operator pos:line="104" pos:column="22">=<pos:position pos:line="104" pos:column="23"/></operator> <name pos:line="104" pos:column="24">tmp_dptr<pos:position pos:line="104" pos:column="32"/></name></expr>;<pos:position pos:line="104" pos:column="33"/></expr_stmt>  <comment type="block" pos:line="104" pos:column="35">/* Adjust bucket pos... */</comment>
                
                <comment type="block" pos:line="106" pos:column="17">/* If some of the tag has already been set aside then set
                 * aside remainder of tag. Now the full tag is in 
                 * ssi_tag_brigade.
                 * If none has yet been set aside, then leave it all where it 
                 * is.
                 * In any event after this the entire set of tag buckets will 
                 * be in one place or another.
                 */</comment>
                <if pos:line="114" pos:column="17">if <condition pos:line="114" pos:column="20">(<expr><operator pos:line="114" pos:column="21">!<pos:position pos:line="114" pos:column="22"/></operator><call><name pos:line="114" pos:column="22">APR_BRIGADE_EMPTY<pos:position pos:line="114" pos:column="39"/></name><argument_list pos:line="114" pos:column="39">(<argument><expr><name><name pos:line="114" pos:column="40">ctx<pos:position pos:line="114" pos:column="43"/></name><operator pos:line="114" pos:column="43">-&gt;<pos:position pos:line="114" pos:column="48"/></operator><name pos:line="114" pos:column="45">ssi_tag_brigade<pos:position pos:line="114" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="114" pos:column="62"/></condition><then pos:line="114" pos:column="62"> <block pos:line="114" pos:column="63">{
                    <expr_stmt><expr><name pos:line="115" pos:column="21">tag_and_after<pos:position pos:line="115" pos:column="34"/></name> <operator pos:line="115" pos:column="35">=<pos:position pos:line="115" pos:column="36"/></operator> <call><name pos:line="115" pos:column="37">apr_brigade_split<pos:position pos:line="115" pos:column="54"/></name><argument_list pos:line="115" pos:column="54">(<argument><expr><operator pos:line="115" pos:column="55">*<pos:position pos:line="115" pos:column="56"/></operator><name pos:line="115" pos:column="56">bb<pos:position pos:line="115" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="60">dptr<pos:position pos:line="115" pos:column="64"/></name></expr></argument>)<pos:position pos:line="115" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="66"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="116" pos:column="21">APR_BRIGADE_CONCAT<pos:position pos:line="116" pos:column="39"/></name><argument_list pos:line="116" pos:column="39">(<argument><expr><name><name pos:line="116" pos:column="40">ctx<pos:position pos:line="116" pos:column="43"/></name><operator pos:line="116" pos:column="43">-&gt;<pos:position pos:line="116" pos:column="48"/></operator><name pos:line="116" pos:column="45">ssi_tag_brigade<pos:position pos:line="116" pos:column="60"/></name></name></expr></argument>, <argument><expr><operator pos:line="116" pos:column="62">*<pos:position pos:line="116" pos:column="63"/></operator><name pos:line="116" pos:column="63">bb<pos:position pos:line="116" pos:column="65"/></name></expr></argument>)<pos:position pos:line="116" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="67"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="117" pos:column="21">*<pos:position pos:line="117" pos:column="22"/></operator><name pos:line="117" pos:column="22">bb<pos:position pos:line="117" pos:column="24"/></name> <operator pos:line="117" pos:column="25">=<pos:position pos:line="117" pos:column="26"/></operator> <name pos:line="117" pos:column="27">tag_and_after<pos:position pos:line="117" pos:column="40"/></name></expr>;<pos:position pos:line="117" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="118" pos:column="18"/></block></then>
                <elseif pos:line="119" pos:column="17">else <if pos:line="119" pos:column="22">if <condition pos:line="119" pos:column="25">(<expr><name><name pos:line="119" pos:column="26">ctx<pos:position pos:line="119" pos:column="29"/></name><operator pos:line="119" pos:column="29">-&gt;<pos:position pos:line="119" pos:column="34"/></operator><name pos:line="119" pos:column="31">output_now<pos:position pos:line="119" pos:column="41"/></name></name> <operator pos:line="119" pos:column="42">||<pos:position pos:line="119" pos:column="44"/></operator>
                         <operator pos:line="120" pos:column="26">(<pos:position pos:line="120" pos:column="27"/></operator><name><name pos:line="120" pos:column="27">ctx<pos:position pos:line="120" pos:column="30"/></name><operator pos:line="120" pos:column="30">-&gt;<pos:position pos:line="120" pos:column="35"/></operator><name pos:line="120" pos:column="32">bytes_parsed<pos:position pos:line="120" pos:column="44"/></name></name> <operator pos:line="120" pos:column="45">&gt;=<pos:position pos:line="120" pos:column="50"/></operator> <name pos:line="120" pos:column="48">BYTE_COUNT_THRESHOLD<pos:position pos:line="120" pos:column="68"/></name><operator pos:line="120" pos:column="68">)<pos:position pos:line="120" pos:column="69"/></operator></expr>)<pos:position pos:line="120" pos:column="70"/></condition><then pos:line="120" pos:column="70"> <block pos:line="120" pos:column="71">{
                    <expr_stmt><expr><call><name pos:line="121" pos:column="21">SPLIT_AND_PASS_PRETAG_BUCKETS<pos:position pos:line="121" pos:column="50"/></name><argument_list pos:line="121" pos:column="50">(<argument><expr><operator pos:line="121" pos:column="51">*<pos:position pos:line="121" pos:column="52"/></operator><name pos:line="121" pos:column="52">bb<pos:position pos:line="121" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="56">ctx<pos:position pos:line="121" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="121" pos:column="61">f<pos:position pos:line="121" pos:column="62"/></name><operator pos:line="121" pos:column="62">-&gt;<pos:position pos:line="121" pos:column="67"/></operator><name pos:line="121" pos:column="64">next<pos:position pos:line="121" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="70">rv<pos:position pos:line="121" pos:column="72"/></name></expr></argument>)<pos:position pos:line="121" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="74"/></expr_stmt>
                    <if pos:line="122" pos:column="21">if <condition pos:line="122" pos:column="24">(<expr><name pos:line="122" pos:column="25">rv<pos:position pos:line="122" pos:column="27"/></name> <operator pos:line="122" pos:column="28">!=<pos:position pos:line="122" pos:column="30"/></operator> <name pos:line="122" pos:column="31">APR_SUCCESS<pos:position pos:line="122" pos:column="42"/></name></expr>)<pos:position pos:line="122" pos:column="43"/></condition><then pos:line="122" pos:column="43"> <block pos:line="122" pos:column="44">{
                        <return pos:line="123" pos:column="25">return <expr><name pos:line="123" pos:column="32">rv<pos:position pos:line="123" pos:column="34"/></name></expr>;<pos:position pos:line="123" pos:column="35"/></return>
                    }<pos:position pos:line="124" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name><name pos:line="125" pos:column="21">ctx<pos:position pos:line="125" pos:column="24"/></name><operator pos:line="125" pos:column="24">-&gt;<pos:position pos:line="125" pos:column="29"/></operator><name pos:line="125" pos:column="26">output_flush<pos:position pos:line="125" pos:column="38"/></name></name> <operator pos:line="125" pos:column="39">=<pos:position pos:line="125" pos:column="40"/></operator> <literal type="number" pos:line="125" pos:column="41">0<pos:position pos:line="125" pos:column="42"/></literal></expr>;<pos:position pos:line="125" pos:column="43"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="126" pos:column="21">ctx<pos:position pos:line="126" pos:column="24"/></name><operator pos:line="126" pos:column="24">-&gt;<pos:position pos:line="126" pos:column="29"/></operator><name pos:line="126" pos:column="26">output_now<pos:position pos:line="126" pos:column="36"/></name></name> <operator pos:line="126" pos:column="37">=<pos:position pos:line="126" pos:column="38"/></operator> <literal type="number" pos:line="126" pos:column="39">0<pos:position pos:line="126" pos:column="40"/></literal></expr>;<pos:position pos:line="126" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="127" pos:column="18"/></block></then></if></elseif></if>
            }<pos:position pos:line="128" pos:column="14"/></block></then>
            <else pos:line="129" pos:column="13">else <block pos:line="129" pos:column="18">{
                <comment type="block" pos:line="130" pos:column="17">/* remainder of this brigade...    */</comment>
                <expr_stmt><expr><name pos:line="131" pos:column="17">dptr<pos:position pos:line="131" pos:column="21"/></name> <operator pos:line="131" pos:column="22">=<pos:position pos:line="131" pos:column="23"/></operator> <call><name pos:line="131" pos:column="24">APR_BRIGADE_SENTINEL<pos:position pos:line="131" pos:column="44"/></name><argument_list pos:line="131" pos:column="44">(<argument><expr><operator pos:line="131" pos:column="45">*<pos:position pos:line="131" pos:column="46"/></operator><name pos:line="131" pos:column="46">bb<pos:position pos:line="131" pos:column="48"/></name></expr></argument>)<pos:position pos:line="131" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="50"/></expr_stmt>  
            }<pos:position pos:line="132" pos:column="14"/></block></else></if>
        }<pos:position pos:line="133" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="135" pos:column="9">/* State to processed the directive... */</comment>
        <if pos:line="136" pos:column="9">if <condition pos:line="136" pos:column="12">(<expr><name><name pos:line="136" pos:column="13">ctx<pos:position pos:line="136" pos:column="16"/></name><operator pos:line="136" pos:column="16">-&gt;<pos:position pos:line="136" pos:column="21"/></operator><name pos:line="136" pos:column="18">state<pos:position pos:line="136" pos:column="23"/></name></name> <operator pos:line="136" pos:column="24">==<pos:position pos:line="136" pos:column="26"/></operator> <name pos:line="136" pos:column="27">PARSED<pos:position pos:line="136" pos:column="33"/></name></expr>)<pos:position pos:line="136" pos:column="34"/></condition><then pos:line="136" pos:column="34"> <block pos:line="136" pos:column="35">{
            <decl_stmt><decl><type><name pos:line="137" pos:column="13">apr_bucket<pos:position pos:line="137" pos:column="23"/></name>    <modifier pos:line="137" pos:column="27">*<pos:position pos:line="137" pos:column="28"/></modifier></type><name pos:line="137" pos:column="28">content_head<pos:position pos:line="137" pos:column="40"/></name> <init pos:line="137" pos:column="41">= <expr><name pos:line="137" pos:column="43">NULL<pos:position pos:line="137" pos:column="47"/></name></expr></init></decl>, <modifier pos:line="137" pos:column="49">*<pos:position pos:line="137" pos:column="50"/></modifier><decl><type ref="prev"/><name pos:line="137" pos:column="50">tmp_bkt<pos:position pos:line="137" pos:column="57"/></name></decl>;<pos:position pos:line="137" pos:column="58"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="138" pos:column="13">apr_size_t<pos:position pos:line="138" pos:column="23"/></name></type>    <name pos:line="138" pos:column="27">tmp_i<pos:position pos:line="138" pos:column="32"/></name></decl>;<pos:position pos:line="138" pos:column="33"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="139" pos:column="13">char<pos:position pos:line="139" pos:column="17"/></name></type>          <name><name pos:line="139" pos:column="27">tmp_buf<pos:position pos:line="139" pos:column="34"/></name><index pos:line="139" pos:column="34">[<expr><name pos:line="139" pos:column="35">TMP_BUF_SIZE<pos:position pos:line="139" pos:column="47"/></name></expr>]<pos:position pos:line="139" pos:column="48"/></index></name></decl>;<pos:position pos:line="139" pos:column="49"/></decl_stmt>
            <function_decl><type><name pos:line="140" pos:column="13">int<pos:position pos:line="140" pos:column="16"/></name></type> (<modifier pos:line="140" pos:column="18">*<pos:position pos:line="140" pos:column="19"/></modifier><name pos:line="140" pos:column="19">handle_func<pos:position pos:line="140" pos:column="30"/></name>)<parameter_list pos:line="140" pos:column="31">(<parameter><decl><type><name pos:line="140" pos:column="32">include_ctx_t<pos:position pos:line="140" pos:column="45"/></name> <modifier pos:line="140" pos:column="46">*<pos:position pos:line="140" pos:column="47"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="140" pos:column="49">apr_bucket_brigade<pos:position pos:line="140" pos:column="67"/></name> <modifier pos:line="140" pos:column="68">*<pos:position pos:line="140" pos:column="69"/></modifier><modifier pos:line="140" pos:column="69">*<pos:position pos:line="140" pos:column="70"/></modifier></type></decl></parameter>,
                               <parameter><decl><type><name pos:line="141" pos:column="32">request_rec<pos:position pos:line="141" pos:column="43"/></name> <modifier pos:line="141" pos:column="44">*<pos:position pos:line="141" pos:column="45"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="141" pos:column="47">ap_filter_t<pos:position pos:line="141" pos:column="58"/></name> <modifier pos:line="141" pos:column="59">*<pos:position pos:line="141" pos:column="60"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="141" pos:column="62">apr_bucket<pos:position pos:line="141" pos:column="72"/></name> <modifier pos:line="141" pos:column="73">*<pos:position pos:line="141" pos:column="74"/></modifier></type></decl></parameter>,
                               <parameter><decl><type><name pos:line="142" pos:column="32">apr_bucket<pos:position pos:line="142" pos:column="42"/></name> <modifier pos:line="142" pos:column="43">*<pos:position pos:line="142" pos:column="44"/></modifier><modifier pos:line="142" pos:column="44">*<pos:position pos:line="142" pos:column="45"/></modifier></type></decl></parameter>)<pos:position pos:line="142" pos:column="46"/></parameter_list>;<pos:position pos:line="142" pos:column="47"/></function_decl>

            <comment type="block" pos:line="144" pos:column="13">/* By now the full tag (all buckets) should either be set aside into
             *  ssi_tag_brigade or contained within the current bb. All tag
             *  processing from here on can assume that.
             */</comment>

            <comment type="block" pos:line="149" pos:column="13">/* At this point, everything between ctx-&gt;head_start_bucket and
             * ctx-&gt;tail_start_bucket is an SSI
             * directive, we just have to deal with it now.
             */</comment>
            <if pos:line="153" pos:column="13">if <condition pos:line="153" pos:column="16">(<expr><call><name pos:line="153" pos:column="17">get_combined_directive<pos:position pos:line="153" pos:column="39"/></name><argument_list pos:line="153" pos:column="39">(<argument><expr><name pos:line="153" pos:column="40">ctx<pos:position pos:line="153" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="45">r<pos:position pos:line="153" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="153" pos:column="48">*<pos:position pos:line="153" pos:column="49"/></operator><name pos:line="153" pos:column="49">bb<pos:position pos:line="153" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="53">tmp_buf<pos:position pos:line="153" pos:column="60"/></name></expr></argument>,
                                        <argument><expr><name pos:line="154" pos:column="41">TMP_BUF_SIZE<pos:position pos:line="154" pos:column="53"/></name></expr></argument>)<pos:position pos:line="154" pos:column="54"/></argument_list></call> <operator pos:line="154" pos:column="55">!=<pos:position pos:line="154" pos:column="57"/></operator> <name pos:line="154" pos:column="58">APR_SUCCESS<pos:position pos:line="154" pos:column="69"/></name></expr>)<pos:position pos:line="154" pos:column="70"/></condition><then pos:line="154" pos:column="70"> <block pos:line="154" pos:column="71">{
                <expr_stmt><expr><call><name pos:line="155" pos:column="17">ap_log_rerror<pos:position pos:line="155" pos:column="30"/></name><argument_list pos:line="155" pos:column="30">(<argument><expr><name pos:line="155" pos:column="31">APLOG_MARK<pos:position pos:line="155" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="155" pos:column="43">APLOG_ERR<pos:position pos:line="155" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="155" pos:column="54">0<pos:position pos:line="155" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="155" pos:column="57">r<pos:position pos:line="155" pos:column="58"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="156" pos:column="29">"mod_include: error copying directive in %s"<pos:position pos:line="156" pos:column="73"/></literal></expr></argument>,
                            <argument><expr><name><name pos:line="157" pos:column="29">r<pos:position pos:line="157" pos:column="30"/></name><operator pos:line="157" pos:column="30">-&gt;<pos:position pos:line="157" pos:column="35"/></operator><name pos:line="157" pos:column="32">filename<pos:position pos:line="157" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="157" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="158" pos:column="17">CREATE_ERROR_BUCKET<pos:position pos:line="158" pos:column="36"/></name><argument_list pos:line="158" pos:column="36">(<argument><expr><name pos:line="158" pos:column="37">ctx<pos:position pos:line="158" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="42">tmp_bkt<pos:position pos:line="158" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="51">dptr<pos:position pos:line="158" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="57">content_head<pos:position pos:line="158" pos:column="69"/></name></expr></argument>)<pos:position pos:line="158" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="71"/></expr_stmt>

                <comment type="block" pos:line="160" pos:column="17">/* DO CLEANUP HERE!!!!! */</comment>
                <expr_stmt><expr><name pos:line="161" pos:column="17">tmp_dptr<pos:position pos:line="161" pos:column="25"/></name> <operator pos:line="161" pos:column="26">=<pos:position pos:line="161" pos:column="27"/></operator> <name><name pos:line="161" pos:column="28">ctx<pos:position pos:line="161" pos:column="31"/></name><operator pos:line="161" pos:column="31">-&gt;<pos:position pos:line="161" pos:column="36"/></operator><name pos:line="161" pos:column="33">head_start_bucket<pos:position pos:line="161" pos:column="50"/></name></name></expr>;<pos:position pos:line="161" pos:column="51"/></expr_stmt>
                <if pos:line="162" pos:column="17">if <condition pos:line="162" pos:column="20">(<expr><operator pos:line="162" pos:column="21">!<pos:position pos:line="162" pos:column="22"/></operator><call><name pos:line="162" pos:column="22">APR_BRIGADE_EMPTY<pos:position pos:line="162" pos:column="39"/></name><argument_list pos:line="162" pos:column="39">(<argument><expr><name><name pos:line="162" pos:column="40">ctx<pos:position pos:line="162" pos:column="43"/></name><operator pos:line="162" pos:column="43">-&gt;<pos:position pos:line="162" pos:column="48"/></operator><name pos:line="162" pos:column="45">ssi_tag_brigade<pos:position pos:line="162" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="162" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="162" pos:column="62"/></condition><then pos:line="162" pos:column="62"> <block pos:line="162" pos:column="63">{
                    <expr_stmt><expr><call><name pos:line="163" pos:column="21">apr_brigade_cleanup<pos:position pos:line="163" pos:column="40"/></name><argument_list pos:line="163" pos:column="40">(<argument><expr><name><name pos:line="163" pos:column="41">ctx<pos:position pos:line="163" pos:column="44"/></name><operator pos:line="163" pos:column="44">-&gt;<pos:position pos:line="163" pos:column="49"/></operator><name pos:line="163" pos:column="46">ssi_tag_brigade<pos:position pos:line="163" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="163" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="63"/></expr_stmt>
                }<pos:position pos:line="164" pos:column="18"/></block></then>
                <else pos:line="165" pos:column="17">else <block pos:line="165" pos:column="22">{
                    <do pos:line="166" pos:column="21">do <block pos:line="166" pos:column="24">{
                        <expr_stmt><expr><name pos:line="167" pos:column="25">tmp_bkt<pos:position pos:line="167" pos:column="32"/></name>  <operator pos:line="167" pos:column="34">=<pos:position pos:line="167" pos:column="35"/></operator> <name pos:line="167" pos:column="36">tmp_dptr<pos:position pos:line="167" pos:column="44"/></name></expr>;<pos:position pos:line="167" pos:column="45"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="168" pos:column="25">tmp_dptr<pos:position pos:line="168" pos:column="33"/></name> <operator pos:line="168" pos:column="34">=<pos:position pos:line="168" pos:column="35"/></operator> <call><name pos:line="168" pos:column="36">APR_BUCKET_NEXT<pos:position pos:line="168" pos:column="51"/></name> <argument_list pos:line="168" pos:column="52">(<argument><expr><name pos:line="168" pos:column="53">tmp_dptr<pos:position pos:line="168" pos:column="61"/></name></expr></argument>)<pos:position pos:line="168" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="63"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="169" pos:column="25">apr_bucket_delete<pos:position pos:line="169" pos:column="42"/></name><argument_list pos:line="169" pos:column="42">(<argument><expr><name pos:line="169" pos:column="43">tmp_bkt<pos:position pos:line="169" pos:column="50"/></name></expr></argument>)<pos:position pos:line="169" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="52"/></expr_stmt>
                    }<pos:position pos:line="170" pos:column="22"/></block> while <condition pos:line="170" pos:column="29">(<expr><operator pos:line="170" pos:column="30">(<pos:position pos:line="170" pos:column="31"/></operator><name pos:line="170" pos:column="31">tmp_dptr<pos:position pos:line="170" pos:column="39"/></name> <operator pos:line="170" pos:column="40">!=<pos:position pos:line="170" pos:column="42"/></operator> <name pos:line="170" pos:column="43">dptr<pos:position pos:line="170" pos:column="47"/></name><operator pos:line="170" pos:column="47">)<pos:position pos:line="170" pos:column="48"/></operator> <operator pos:line="170" pos:column="49">&amp;&amp;<pos:position pos:line="170" pos:column="59"/></operator>
                             <operator pos:line="171" pos:column="30">(<pos:position pos:line="171" pos:column="31"/></operator><name pos:line="171" pos:column="31">tmp_dptr<pos:position pos:line="171" pos:column="39"/></name> <operator pos:line="171" pos:column="40">!=<pos:position pos:line="171" pos:column="42"/></operator> <call><name pos:line="171" pos:column="43">APR_BRIGADE_SENTINEL<pos:position pos:line="171" pos:column="63"/></name><argument_list pos:line="171" pos:column="63">(<argument><expr><operator pos:line="171" pos:column="64">*<pos:position pos:line="171" pos:column="65"/></operator><name pos:line="171" pos:column="65">bb<pos:position pos:line="171" pos:column="67"/></name></expr></argument>)<pos:position pos:line="171" pos:column="68"/></argument_list></call><operator pos:line="171" pos:column="68">)<pos:position pos:line="171" pos:column="69"/></operator></expr>)<pos:position pos:line="171" pos:column="70"/></condition>;<pos:position pos:line="171" pos:column="71"/></do>
                }<pos:position pos:line="172" pos:column="18"/></block></else></if>

                <return pos:line="174" pos:column="17">return <expr><name pos:line="174" pos:column="24">APR_SUCCESS<pos:position pos:line="174" pos:column="35"/></name></expr>;<pos:position pos:line="174" pos:column="36"/></return>
            }<pos:position pos:line="175" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="177" pos:column="13">/* Can't destroy the tag buckets until I'm done processing
             * because the combined_tag might just be pointing to
             * the contents of a single bucket!
             */</comment>

            <comment type="block" pos:line="182" pos:column="13">/* Retrieve the handler function to be called for this directive 
             * from the functions registered in the hash table.
             * Need to lower case the directive for proper matching. Also need 
             * to have it NULL terminated for proper hash matching.
             */</comment>
            <for pos:line="187" pos:column="13">for <control pos:line="187" pos:column="17">(<init><expr><name pos:line="187" pos:column="18">tmp_i<pos:position pos:line="187" pos:column="23"/></name> <operator pos:line="187" pos:column="24">=<pos:position pos:line="187" pos:column="25"/></operator> <literal type="number" pos:line="187" pos:column="26">0<pos:position pos:line="187" pos:column="27"/></literal></expr>;<pos:position pos:line="187" pos:column="28"/></init> <condition><expr><name pos:line="187" pos:column="29">tmp_i<pos:position pos:line="187" pos:column="34"/></name> <operator pos:line="187" pos:column="35">&lt;<pos:position pos:line="187" pos:column="39"/></operator> <name><name pos:line="187" pos:column="37">ctx<pos:position pos:line="187" pos:column="40"/></name><operator pos:line="187" pos:column="40">-&gt;<pos:position pos:line="187" pos:column="45"/></operator><name pos:line="187" pos:column="42">directive_length<pos:position pos:line="187" pos:column="58"/></name></name></expr>;<pos:position pos:line="187" pos:column="59"/></condition> <incr><expr><name pos:line="187" pos:column="60">tmp_i<pos:position pos:line="187" pos:column="65"/></name><operator pos:line="187" pos:column="65">++<pos:position pos:line="187" pos:column="67"/></operator></expr></incr>)<pos:position pos:line="187" pos:column="68"/></control> <block pos:line="187" pos:column="69">{
                <expr_stmt><expr><name><name pos:line="188" pos:column="17">ctx<pos:position pos:line="188" pos:column="20"/></name><operator pos:line="188" pos:column="20">-&gt;<pos:position pos:line="188" pos:column="25"/></operator><name pos:line="188" pos:column="22">combined_tag<pos:position pos:line="188" pos:column="34"/></name><index pos:line="188" pos:column="34">[<expr><name pos:line="188" pos:column="35">tmp_i<pos:position pos:line="188" pos:column="40"/></name></expr>]<pos:position pos:line="188" pos:column="41"/></index></name> <operator pos:line="188" pos:column="42">=<pos:position pos:line="188" pos:column="43"/></operator> 
                                          <call><name pos:line="189" pos:column="43">apr_tolower<pos:position pos:line="189" pos:column="54"/></name><argument_list pos:line="189" pos:column="54">(<argument><expr><name><name pos:line="189" pos:column="55">ctx<pos:position pos:line="189" pos:column="58"/></name><operator pos:line="189" pos:column="58">-&gt;<pos:position pos:line="189" pos:column="63"/></operator><name pos:line="189" pos:column="60">combined_tag<pos:position pos:line="189" pos:column="72"/></name><index pos:line="189" pos:column="72">[<expr><name pos:line="189" pos:column="73">tmp_i<pos:position pos:line="189" pos:column="78"/></name></expr>]<pos:position pos:line="189" pos:column="79"/></index></name></expr></argument>)<pos:position pos:line="189" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="81"/></expr_stmt>
            }<pos:position pos:line="190" pos:column="14"/></block></for>
            <expr_stmt><expr><name><name pos:line="191" pos:column="13">ctx<pos:position pos:line="191" pos:column="16"/></name><operator pos:line="191" pos:column="16">-&gt;<pos:position pos:line="191" pos:column="21"/></operator><name pos:line="191" pos:column="18">combined_tag<pos:position pos:line="191" pos:column="30"/></name><index pos:line="191" pos:column="30">[<expr><name><name pos:line="191" pos:column="31">ctx<pos:position pos:line="191" pos:column="34"/></name><operator pos:line="191" pos:column="34">-&gt;<pos:position pos:line="191" pos:column="39"/></operator><name pos:line="191" pos:column="36">directive_length<pos:position pos:line="191" pos:column="52"/></name></name></expr>]<pos:position pos:line="191" pos:column="53"/></index></name> <operator pos:line="191" pos:column="54">=<pos:position pos:line="191" pos:column="55"/></operator> <literal type="char" pos:line="191" pos:column="56">'\0'<pos:position pos:line="191" pos:column="60"/></literal></expr>;<pos:position pos:line="191" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="192" pos:column="13">ctx<pos:position pos:line="192" pos:column="16"/></name><operator pos:line="192" pos:column="16">-&gt;<pos:position pos:line="192" pos:column="21"/></operator><name pos:line="192" pos:column="18">curr_tag_pos<pos:position pos:line="192" pos:column="30"/></name></name> <operator pos:line="192" pos:column="31">=<pos:position pos:line="192" pos:column="32"/></operator> <operator pos:line="192" pos:column="33">&amp;<pos:position pos:line="192" pos:column="38"/></operator><name><name pos:line="192" pos:column="34">ctx<pos:position pos:line="192" pos:column="37"/></name><operator pos:line="192" pos:column="37">-&gt;<pos:position pos:line="192" pos:column="42"/></operator><name pos:line="192" pos:column="39">combined_tag<pos:position pos:line="192" pos:column="51"/></name><index pos:line="192" pos:column="51">[<expr><name><name pos:line="192" pos:column="52">ctx<pos:position pos:line="192" pos:column="55"/></name><operator pos:line="192" pos:column="55">-&gt;<pos:position pos:line="192" pos:column="60"/></operator><name pos:line="192" pos:column="57">directive_length<pos:position pos:line="192" pos:column="73"/></name></name><operator pos:line="192" pos:column="73">+<pos:position pos:line="192" pos:column="74"/></operator><literal type="number" pos:line="192" pos:column="74">1<pos:position pos:line="192" pos:column="75"/></literal></expr>]<pos:position pos:line="192" pos:column="76"/></index></name></expr>;<pos:position pos:line="192" pos:column="77"/></expr_stmt>

            <expr_stmt><expr><name pos:line="194" pos:column="13">handle_func<pos:position pos:line="194" pos:column="24"/></name> <operator pos:line="194" pos:column="25">=<pos:position pos:line="194" pos:column="26"/></operator> 
                <operator pos:line="195" pos:column="17">(<pos:position pos:line="195" pos:column="18"/></operator><name pos:line="195" pos:column="18">include_handler_fn_t<pos:position pos:line="195" pos:column="38"/></name> <operator pos:line="195" pos:column="39">*<pos:position pos:line="195" pos:column="40"/></operator><operator pos:line="195" pos:column="40">)<pos:position pos:line="195" pos:column="41"/></operator><call><name pos:line="195" pos:column="41">apr_hash_get<pos:position pos:line="195" pos:column="53"/></name><argument_list pos:line="195" pos:column="53">(<argument><expr><name pos:line="195" pos:column="54">include_hash<pos:position pos:line="195" pos:column="66"/></name></expr></argument>, 
                                                     <argument><expr><name><name pos:line="196" pos:column="54">ctx<pos:position pos:line="196" pos:column="57"/></name><operator pos:line="196" pos:column="57">-&gt;<pos:position pos:line="196" pos:column="62"/></operator><name pos:line="196" pos:column="59">combined_tag<pos:position pos:line="196" pos:column="71"/></name></name></expr></argument>, 
                                                     <argument><expr><name><name pos:line="197" pos:column="54">ctx<pos:position pos:line="197" pos:column="57"/></name><operator pos:line="197" pos:column="57">-&gt;<pos:position pos:line="197" pos:column="62"/></operator><name pos:line="197" pos:column="59">directive_length<pos:position pos:line="197" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="197" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="77"/></expr_stmt>
            <if pos:line="198" pos:column="13">if <condition pos:line="198" pos:column="16">(<expr><name pos:line="198" pos:column="17">handle_func<pos:position pos:line="198" pos:column="28"/></name> <operator pos:line="198" pos:column="29">!=<pos:position pos:line="198" pos:column="31"/></operator> <name pos:line="198" pos:column="32">NULL<pos:position pos:line="198" pos:column="36"/></name></expr>)<pos:position pos:line="198" pos:column="37"/></condition><then pos:line="198" pos:column="37"> <block pos:line="198" pos:column="38">{
                <expr_stmt><expr><name pos:line="199" pos:column="17">rv<pos:position pos:line="199" pos:column="19"/></name> <operator pos:line="199" pos:column="20">=<pos:position pos:line="199" pos:column="21"/></operator> <call pos:line="199" pos:column="22">(<modifier pos:line="199" pos:column="23">*<pos:position pos:line="199" pos:column="24"/></modifier><name pos:line="199" pos:column="24">handle_func<pos:position pos:line="199" pos:column="35"/></name>)<argument_list pos:line="199" pos:column="36">(<argument><expr><name pos:line="199" pos:column="37">ctx<pos:position pos:line="199" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="42">bb<pos:position pos:line="199" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="46">r<pos:position pos:line="199" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="49">f<pos:position pos:line="199" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="52">dptr<pos:position pos:line="199" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="199" pos:column="58">&amp;<pos:position pos:line="199" pos:column="63"/></operator><name pos:line="199" pos:column="59">content_head<pos:position pos:line="199" pos:column="71"/></name></expr></argument>)<pos:position pos:line="199" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="73"/></expr_stmt>
                <if pos:line="200" pos:column="17">if <condition pos:line="200" pos:column="20">(<expr><operator pos:line="200" pos:column="21">(<pos:position pos:line="200" pos:column="22"/></operator><name pos:line="200" pos:column="22">rv<pos:position pos:line="200" pos:column="24"/></name> <operator pos:line="200" pos:column="25">!=<pos:position pos:line="200" pos:column="27"/></operator> <literal type="number" pos:line="200" pos:column="28">0<pos:position pos:line="200" pos:column="29"/></literal><operator pos:line="200" pos:column="29">)<pos:position pos:line="200" pos:column="30"/></operator> <operator pos:line="200" pos:column="31">&amp;&amp;<pos:position pos:line="200" pos:column="41"/></operator> <operator pos:line="200" pos:column="34">(<pos:position pos:line="200" pos:column="35"/></operator><name pos:line="200" pos:column="35">rv<pos:position pos:line="200" pos:column="37"/></name> <operator pos:line="200" pos:column="38">!=<pos:position pos:line="200" pos:column="40"/></operator> <literal type="number" pos:line="200" pos:column="41">1<pos:position pos:line="200" pos:column="42"/></literal><operator pos:line="200" pos:column="42">)<pos:position pos:line="200" pos:column="43"/></operator></expr>)<pos:position pos:line="200" pos:column="44"/></condition><then pos:line="200" pos:column="44"> <block pos:line="200" pos:column="45">{
                    <return pos:line="201" pos:column="21">return <expr><operator pos:line="201" pos:column="28">(<pos:position pos:line="201" pos:column="29"/></operator><name pos:line="201" pos:column="29">rv<pos:position pos:line="201" pos:column="31"/></name><operator pos:line="201" pos:column="31">)<pos:position pos:line="201" pos:column="32"/></operator></expr>;<pos:position pos:line="201" pos:column="33"/></return>
                }<pos:position pos:line="202" pos:column="18"/></block></then></if>
            }<pos:position pos:line="203" pos:column="14"/></block></then>
            <else pos:line="204" pos:column="13">else <block pos:line="204" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="205" pos:column="17">ap_log_rerror<pos:position pos:line="205" pos:column="30"/></name><argument_list pos:line="205" pos:column="30">(<argument><expr><name pos:line="205" pos:column="31">APLOG_MARK<pos:position pos:line="205" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="205" pos:column="43">APLOG_ERR<pos:position pos:line="205" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="205" pos:column="54">0<pos:position pos:line="205" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="205" pos:column="57">r<pos:position pos:line="205" pos:column="58"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="206" pos:column="31">"unknown directive \"%s\" in parsed doc %s"<pos:position pos:line="206" pos:column="74"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="207" pos:column="31">ctx<pos:position pos:line="207" pos:column="34"/></name><operator pos:line="207" pos:column="34">-&gt;<pos:position pos:line="207" pos:column="39"/></operator><name pos:line="207" pos:column="36">combined_tag<pos:position pos:line="207" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="207" pos:column="50">r<pos:position pos:line="207" pos:column="51"/></name><operator pos:line="207" pos:column="51">-&gt;<pos:position pos:line="207" pos:column="56"/></operator><name pos:line="207" pos:column="53">filename<pos:position pos:line="207" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="207" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="208" pos:column="17">CREATE_ERROR_BUCKET<pos:position pos:line="208" pos:column="36"/></name><argument_list pos:line="208" pos:column="36">(<argument><expr><name pos:line="208" pos:column="37">ctx<pos:position pos:line="208" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="42">tmp_bkt<pos:position pos:line="208" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="51">dptr<pos:position pos:line="208" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="57">content_head<pos:position pos:line="208" pos:column="69"/></name></expr></argument>)<pos:position pos:line="208" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="71"/></expr_stmt>
            }<pos:position pos:line="209" pos:column="14"/></block></else></if>

            <comment type="block" pos:line="211" pos:column="13">/* This chunk of code starts at the first bucket in the chain
             * of tag buckets (assuming that by this point the bucket for
             * the STARTING_SEQUENCE has been split) and loops through to
             * the end of the tag buckets freeing them all.
             *
             * Remember that some part of this may have been set aside
             * into the ssi_tag_brigade and the remainder (possibly as
             * little as one byte) will be in the current brigade.
             *
             * The value of dptr should have been set during the
             * PARSE_TAIL state to the first bucket after the
             * ENDING_SEQUENCE.
             *
             * The value of content_head may have been set during processing
             * of the directive. If so, the content was inserted in front
             * of the dptr bucket. The inserted buckets should not be thrown
             * away here, but they should also not be parsed later.
             */</comment>
            <if pos:line="229" pos:column="13">if <condition pos:line="229" pos:column="16">(<expr><name pos:line="229" pos:column="17">content_head<pos:position pos:line="229" pos:column="29"/></name> <operator pos:line="229" pos:column="30">==<pos:position pos:line="229" pos:column="32"/></operator> <name pos:line="229" pos:column="33">NULL<pos:position pos:line="229" pos:column="37"/></name></expr>)<pos:position pos:line="229" pos:column="38"/></condition><then pos:line="229" pos:column="38"> <block pos:line="229" pos:column="39">{
                <expr_stmt><expr><name pos:line="230" pos:column="17">content_head<pos:position pos:line="230" pos:column="29"/></name> <operator pos:line="230" pos:column="30">=<pos:position pos:line="230" pos:column="31"/></operator> <name pos:line="230" pos:column="32">dptr<pos:position pos:line="230" pos:column="36"/></name></expr>;<pos:position pos:line="230" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="231" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="232" pos:column="13">tmp_dptr<pos:position pos:line="232" pos:column="21"/></name> <operator pos:line="232" pos:column="22">=<pos:position pos:line="232" pos:column="23"/></operator> <name><name pos:line="232" pos:column="24">ctx<pos:position pos:line="232" pos:column="27"/></name><operator pos:line="232" pos:column="27">-&gt;<pos:position pos:line="232" pos:column="32"/></operator><name pos:line="232" pos:column="29">head_start_bucket<pos:position pos:line="232" pos:column="46"/></name></name></expr>;<pos:position pos:line="232" pos:column="47"/></expr_stmt>
            <if pos:line="233" pos:column="13">if <condition pos:line="233" pos:column="16">(<expr><operator pos:line="233" pos:column="17">!<pos:position pos:line="233" pos:column="18"/></operator><call><name pos:line="233" pos:column="18">APR_BRIGADE_EMPTY<pos:position pos:line="233" pos:column="35"/></name><argument_list pos:line="233" pos:column="35">(<argument><expr><name><name pos:line="233" pos:column="36">ctx<pos:position pos:line="233" pos:column="39"/></name><operator pos:line="233" pos:column="39">-&gt;<pos:position pos:line="233" pos:column="44"/></operator><name pos:line="233" pos:column="41">ssi_tag_brigade<pos:position pos:line="233" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="233" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="233" pos:column="58"/></condition><then pos:line="233" pos:column="58"> <block pos:line="233" pos:column="59">{
                <expr_stmt><expr><call><name pos:line="234" pos:column="17">apr_brigade_cleanup<pos:position pos:line="234" pos:column="36"/></name><argument_list pos:line="234" pos:column="36">(<argument><expr><name><name pos:line="234" pos:column="37">ctx<pos:position pos:line="234" pos:column="40"/></name><operator pos:line="234" pos:column="40">-&gt;<pos:position pos:line="234" pos:column="45"/></operator><name pos:line="234" pos:column="42">ssi_tag_brigade<pos:position pos:line="234" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="234" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="235" pos:column="14"/></block></then>
            <else pos:line="236" pos:column="13">else <block pos:line="236" pos:column="18">{
                <do pos:line="237" pos:column="17">do <block pos:line="237" pos:column="20">{
                    <expr_stmt><expr><name pos:line="238" pos:column="21">tmp_bkt<pos:position pos:line="238" pos:column="28"/></name>  <operator pos:line="238" pos:column="30">=<pos:position pos:line="238" pos:column="31"/></operator> <name pos:line="238" pos:column="32">tmp_dptr<pos:position pos:line="238" pos:column="40"/></name></expr>;<pos:position pos:line="238" pos:column="41"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="239" pos:column="21">tmp_dptr<pos:position pos:line="239" pos:column="29"/></name> <operator pos:line="239" pos:column="30">=<pos:position pos:line="239" pos:column="31"/></operator> <call><name pos:line="239" pos:column="32">APR_BUCKET_NEXT<pos:position pos:line="239" pos:column="47"/></name> <argument_list pos:line="239" pos:column="48">(<argument><expr><name pos:line="239" pos:column="49">tmp_dptr<pos:position pos:line="239" pos:column="57"/></name></expr></argument>)<pos:position pos:line="239" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="59"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="240" pos:column="21">apr_bucket_delete<pos:position pos:line="240" pos:column="38"/></name><argument_list pos:line="240" pos:column="38">(<argument><expr><name pos:line="240" pos:column="39">tmp_bkt<pos:position pos:line="240" pos:column="46"/></name></expr></argument>)<pos:position pos:line="240" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="48"/></expr_stmt>
                }<pos:position pos:line="241" pos:column="18"/></block> while <condition pos:line="241" pos:column="25">(<expr><operator pos:line="241" pos:column="26">(<pos:position pos:line="241" pos:column="27"/></operator><name pos:line="241" pos:column="27">tmp_dptr<pos:position pos:line="241" pos:column="35"/></name> <operator pos:line="241" pos:column="36">!=<pos:position pos:line="241" pos:column="38"/></operator> <name pos:line="241" pos:column="39">content_head<pos:position pos:line="241" pos:column="51"/></name><operator pos:line="241" pos:column="51">)<pos:position pos:line="241" pos:column="52"/></operator> <operator pos:line="241" pos:column="53">&amp;&amp;<pos:position pos:line="241" pos:column="63"/></operator>
                         <operator pos:line="242" pos:column="26">(<pos:position pos:line="242" pos:column="27"/></operator><name pos:line="242" pos:column="27">tmp_dptr<pos:position pos:line="242" pos:column="35"/></name> <operator pos:line="242" pos:column="36">!=<pos:position pos:line="242" pos:column="38"/></operator> <call><name pos:line="242" pos:column="39">APR_BRIGADE_SENTINEL<pos:position pos:line="242" pos:column="59"/></name><argument_list pos:line="242" pos:column="59">(<argument><expr><operator pos:line="242" pos:column="60">*<pos:position pos:line="242" pos:column="61"/></operator><name pos:line="242" pos:column="61">bb<pos:position pos:line="242" pos:column="63"/></name></expr></argument>)<pos:position pos:line="242" pos:column="64"/></argument_list></call><operator pos:line="242" pos:column="64">)<pos:position pos:line="242" pos:column="65"/></operator></expr>)<pos:position pos:line="242" pos:column="66"/></condition>;<pos:position pos:line="242" pos:column="67"/></do>
            }<pos:position pos:line="243" pos:column="14"/></block></else></if>
            <if pos:line="244" pos:column="13">if <condition pos:line="244" pos:column="16">(<expr><name><name pos:line="244" pos:column="17">ctx<pos:position pos:line="244" pos:column="20"/></name><operator pos:line="244" pos:column="20">-&gt;<pos:position pos:line="244" pos:column="25"/></operator><name pos:line="244" pos:column="22">combined_tag<pos:position pos:line="244" pos:column="34"/></name></name> <operator pos:line="244" pos:column="35">==<pos:position pos:line="244" pos:column="37"/></operator> <name pos:line="244" pos:column="38">tmp_buf<pos:position pos:line="244" pos:column="45"/></name></expr>)<pos:position pos:line="244" pos:column="46"/></condition><then pos:line="244" pos:column="46"> <block pos:line="244" pos:column="47">{
                <expr_stmt><expr><name><name pos:line="245" pos:column="17">ctx<pos:position pos:line="245" pos:column="20"/></name><operator pos:line="245" pos:column="20">-&gt;<pos:position pos:line="245" pos:column="25"/></operator><name pos:line="245" pos:column="22">combined_tag<pos:position pos:line="245" pos:column="34"/></name></name> <operator pos:line="245" pos:column="35">=<pos:position pos:line="245" pos:column="36"/></operator> <name pos:line="245" pos:column="37">NULL<pos:position pos:line="245" pos:column="41"/></name></expr>;<pos:position pos:line="245" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="246" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="248" pos:column="13">/* Don't reset the flags or the nesting level!!! */</comment>
            <expr_stmt><expr><name><name pos:line="249" pos:column="13">ctx<pos:position pos:line="249" pos:column="16"/></name><operator pos:line="249" pos:column="16">-&gt;<pos:position pos:line="249" pos:column="21"/></operator><name pos:line="249" pos:column="18">parse_pos<pos:position pos:line="249" pos:column="27"/></name></name>         <operator pos:line="249" pos:column="36">=<pos:position pos:line="249" pos:column="37"/></operator> <literal type="number" pos:line="249" pos:column="38">0<pos:position pos:line="249" pos:column="39"/></literal></expr>;<pos:position pos:line="249" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="250" pos:column="13">ctx<pos:position pos:line="250" pos:column="16"/></name><operator pos:line="250" pos:column="16">-&gt;<pos:position pos:line="250" pos:column="21"/></operator><name pos:line="250" pos:column="18">head_start_bucket<pos:position pos:line="250" pos:column="35"/></name></name> <operator pos:line="250" pos:column="36">=<pos:position pos:line="250" pos:column="37"/></operator> <name pos:line="250" pos:column="38">NULL<pos:position pos:line="250" pos:column="42"/></name></expr>;<pos:position pos:line="250" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="251" pos:column="13">ctx<pos:position pos:line="251" pos:column="16"/></name><operator pos:line="251" pos:column="16">-&gt;<pos:position pos:line="251" pos:column="21"/></operator><name pos:line="251" pos:column="18">head_start_index<pos:position pos:line="251" pos:column="34"/></name></name>  <operator pos:line="251" pos:column="36">=<pos:position pos:line="251" pos:column="37"/></operator> <literal type="number" pos:line="251" pos:column="38">0<pos:position pos:line="251" pos:column="39"/></literal></expr>;<pos:position pos:line="251" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="252" pos:column="13">ctx<pos:position pos:line="252" pos:column="16"/></name><operator pos:line="252" pos:column="16">-&gt;<pos:position pos:line="252" pos:column="21"/></operator><name pos:line="252" pos:column="18">tag_start_bucket<pos:position pos:line="252" pos:column="34"/></name></name>  <operator pos:line="252" pos:column="36">=<pos:position pos:line="252" pos:column="37"/></operator> <name pos:line="252" pos:column="38">NULL<pos:position pos:line="252" pos:column="42"/></name></expr>;<pos:position pos:line="252" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="253" pos:column="13">ctx<pos:position pos:line="253" pos:column="16"/></name><operator pos:line="253" pos:column="16">-&gt;<pos:position pos:line="253" pos:column="21"/></operator><name pos:line="253" pos:column="18">tag_start_index<pos:position pos:line="253" pos:column="33"/></name></name>   <operator pos:line="253" pos:column="36">=<pos:position pos:line="253" pos:column="37"/></operator> <literal type="number" pos:line="253" pos:column="38">0<pos:position pos:line="253" pos:column="39"/></literal></expr>;<pos:position pos:line="253" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="254" pos:column="13">ctx<pos:position pos:line="254" pos:column="16"/></name><operator pos:line="254" pos:column="16">-&gt;<pos:position pos:line="254" pos:column="21"/></operator><name pos:line="254" pos:column="18">tail_start_bucket<pos:position pos:line="254" pos:column="35"/></name></name> <operator pos:line="254" pos:column="36">=<pos:position pos:line="254" pos:column="37"/></operator> <name pos:line="254" pos:column="38">NULL<pos:position pos:line="254" pos:column="42"/></name></expr>;<pos:position pos:line="254" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="255" pos:column="13">ctx<pos:position pos:line="255" pos:column="16"/></name><operator pos:line="255" pos:column="16">-&gt;<pos:position pos:line="255" pos:column="21"/></operator><name pos:line="255" pos:column="18">tail_start_index<pos:position pos:line="255" pos:column="34"/></name></name>  <operator pos:line="255" pos:column="36">=<pos:position pos:line="255" pos:column="37"/></operator> <literal type="number" pos:line="255" pos:column="38">0<pos:position pos:line="255" pos:column="39"/></literal></expr>;<pos:position pos:line="255" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="256" pos:column="13">ctx<pos:position pos:line="256" pos:column="16"/></name><operator pos:line="256" pos:column="16">-&gt;<pos:position pos:line="256" pos:column="21"/></operator><name pos:line="256" pos:column="18">curr_tag_pos<pos:position pos:line="256" pos:column="30"/></name></name>      <operator pos:line="256" pos:column="36">=<pos:position pos:line="256" pos:column="37"/></operator> <name pos:line="256" pos:column="38">NULL<pos:position pos:line="256" pos:column="42"/></name></expr>;<pos:position pos:line="256" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="257" pos:column="13">ctx<pos:position pos:line="257" pos:column="16"/></name><operator pos:line="257" pos:column="16">-&gt;<pos:position pos:line="257" pos:column="21"/></operator><name pos:line="257" pos:column="18">tag_length<pos:position pos:line="257" pos:column="28"/></name></name>        <operator pos:line="257" pos:column="36">=<pos:position pos:line="257" pos:column="37"/></operator> <literal type="number" pos:line="257" pos:column="38">0<pos:position pos:line="257" pos:column="39"/></literal></expr>;<pos:position pos:line="257" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="258" pos:column="13">ctx<pos:position pos:line="258" pos:column="16"/></name><operator pos:line="258" pos:column="16">-&gt;<pos:position pos:line="258" pos:column="21"/></operator><name pos:line="258" pos:column="18">directive_length<pos:position pos:line="258" pos:column="34"/></name></name>  <operator pos:line="258" pos:column="36">=<pos:position pos:line="258" pos:column="37"/></operator> <literal type="number" pos:line="258" pos:column="38">0<pos:position pos:line="258" pos:column="39"/></literal></expr>;<pos:position pos:line="258" pos:column="40"/></expr_stmt>

            <if pos:line="260" pos:column="13">if <condition pos:line="260" pos:column="16">(<expr><operator pos:line="260" pos:column="17">!<pos:position pos:line="260" pos:column="18"/></operator><call><name pos:line="260" pos:column="18">APR_BRIGADE_EMPTY<pos:position pos:line="260" pos:column="35"/></name><argument_list pos:line="260" pos:column="35">(<argument><expr><name><name pos:line="260" pos:column="36">ctx<pos:position pos:line="260" pos:column="39"/></name><operator pos:line="260" pos:column="39">-&gt;<pos:position pos:line="260" pos:column="44"/></operator><name pos:line="260" pos:column="41">ssi_tag_brigade<pos:position pos:line="260" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="260" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="260" pos:column="58"/></condition><then pos:line="260" pos:column="58"> <block pos:line="260" pos:column="59">{
                <expr_stmt><expr><call><name pos:line="261" pos:column="17">apr_brigade_cleanup<pos:position pos:line="261" pos:column="36"/></name><argument_list pos:line="261" pos:column="36">(<argument><expr><name><name pos:line="261" pos:column="37">ctx<pos:position pos:line="261" pos:column="40"/></name><operator pos:line="261" pos:column="40">-&gt;<pos:position pos:line="261" pos:column="45"/></operator><name pos:line="261" pos:column="42">ssi_tag_brigade<pos:position pos:line="261" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="261" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="262" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name><name pos:line="264" pos:column="13">ctx<pos:position pos:line="264" pos:column="16"/></name><operator pos:line="264" pos:column="16">-&gt;<pos:position pos:line="264" pos:column="21"/></operator><name pos:line="264" pos:column="18">state<pos:position pos:line="264" pos:column="23"/></name></name>     <operator pos:line="264" pos:column="28">=<pos:position pos:line="264" pos:column="29"/></operator> <name pos:line="264" pos:column="30">PRE_HEAD<pos:position pos:line="264" pos:column="38"/></name></expr>;<pos:position pos:line="264" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="265" pos:column="10"/></block></then></if>
    }<pos:position pos:line="266" pos:column="6"/></block></while>

    <comment type="block" pos:line="268" pos:column="5">/* We have nothing more to send, stop now. */</comment>
    <if pos:line="269" pos:column="5">if <condition pos:line="269" pos:column="8">(<expr><name pos:line="269" pos:column="9">dptr<pos:position pos:line="269" pos:column="13"/></name> <operator pos:line="269" pos:column="14">!=<pos:position pos:line="269" pos:column="16"/></operator> <call><name pos:line="269" pos:column="17">APR_BRIGADE_SENTINEL<pos:position pos:line="269" pos:column="37"/></name><argument_list pos:line="269" pos:column="37">(<argument><expr><operator pos:line="269" pos:column="38">*<pos:position pos:line="269" pos:column="39"/></operator><name pos:line="269" pos:column="39">bb<pos:position pos:line="269" pos:column="41"/></name></expr></argument>)<pos:position pos:line="269" pos:column="42"/></argument_list></call> <operator pos:line="269" pos:column="43">&amp;&amp;<pos:position pos:line="269" pos:column="53"/></operator>
        <call><name pos:line="270" pos:column="9">APR_BUCKET_IS_EOS<pos:position pos:line="270" pos:column="26"/></name><argument_list pos:line="270" pos:column="26">(<argument><expr><name pos:line="270" pos:column="27">dptr<pos:position pos:line="270" pos:column="31"/></name></expr></argument>)<pos:position pos:line="270" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="270" pos:column="33"/></condition><then pos:line="270" pos:column="33"> <block pos:line="270" pos:column="34">{
        <comment type="block" pos:line="271" pos:column="9">/* We might have something saved that we never completed, but send
         * down unparsed.  This allows for &lt;!-- at the end of files to be
         * sent correctly. */</comment>
        <if pos:line="274" pos:column="9">if <condition pos:line="274" pos:column="12">(<expr><operator pos:line="274" pos:column="13">!<pos:position pos:line="274" pos:column="14"/></operator><call><name pos:line="274" pos:column="14">APR_BRIGADE_EMPTY<pos:position pos:line="274" pos:column="31"/></name><argument_list pos:line="274" pos:column="31">(<argument><expr><name><name pos:line="274" pos:column="32">ctx<pos:position pos:line="274" pos:column="35"/></name><operator pos:line="274" pos:column="35">-&gt;<pos:position pos:line="274" pos:column="40"/></operator><name pos:line="274" pos:column="37">ssi_tag_brigade<pos:position pos:line="274" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="274" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="274" pos:column="54"/></condition><then pos:line="274" pos:column="54"> <block pos:line="274" pos:column="55">{
            <expr_stmt><expr><call><name pos:line="275" pos:column="13">APR_BRIGADE_CONCAT<pos:position pos:line="275" pos:column="31"/></name><argument_list pos:line="275" pos:column="31">(<argument><expr><name><name pos:line="275" pos:column="32">ctx<pos:position pos:line="275" pos:column="35"/></name><operator pos:line="275" pos:column="35">-&gt;<pos:position pos:line="275" pos:column="40"/></operator><name pos:line="275" pos:column="37">ssi_tag_brigade<pos:position pos:line="275" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="275" pos:column="54">*<pos:position pos:line="275" pos:column="55"/></operator><name pos:line="275" pos:column="55">bb<pos:position pos:line="275" pos:column="57"/></name></expr></argument>)<pos:position pos:line="275" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="59"/></expr_stmt>
            <return pos:line="276" pos:column="13">return <expr><call><name pos:line="276" pos:column="20">ap_pass_brigade<pos:position pos:line="276" pos:column="35"/></name><argument_list pos:line="276" pos:column="35">(<argument><expr><name><name pos:line="276" pos:column="36">f<pos:position pos:line="276" pos:column="37"/></name><operator pos:line="276" pos:column="37">-&gt;<pos:position pos:line="276" pos:column="42"/></operator><name pos:line="276" pos:column="39">next<pos:position pos:line="276" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="276" pos:column="45">ctx<pos:position pos:line="276" pos:column="48"/></name><operator pos:line="276" pos:column="48">-&gt;<pos:position pos:line="276" pos:column="53"/></operator><name pos:line="276" pos:column="50">ssi_tag_brigade<pos:position pos:line="276" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="276" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="67"/></return>
        }<pos:position pos:line="277" pos:column="10"/></block></then></if>
        <return pos:line="278" pos:column="9">return <expr><call><name pos:line="278" pos:column="16">ap_pass_brigade<pos:position pos:line="278" pos:column="31"/></name><argument_list pos:line="278" pos:column="31">(<argument><expr><name><name pos:line="278" pos:column="32">f<pos:position pos:line="278" pos:column="33"/></name><operator pos:line="278" pos:column="33">-&gt;<pos:position pos:line="278" pos:column="38"/></operator><name pos:line="278" pos:column="35">next<pos:position pos:line="278" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="278" pos:column="41">*<pos:position pos:line="278" pos:column="42"/></operator><name pos:line="278" pos:column="42">bb<pos:position pos:line="278" pos:column="44"/></name></expr></argument>)<pos:position pos:line="278" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="46"/></return>
    }<pos:position pos:line="279" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="281" pos:column="5">/* If I am in the middle of parsing an SSI tag then I need to set aside
     *   the pertinent trailing buckets and pass on the initial part of the
     *   brigade. The pertinent parts of the next brigades will be added to
     *   these set aside buckets to form the whole tag and will be processed
     *   once the whole tag has been found.
     */</comment>
    <if pos:line="287" pos:column="5">if <condition pos:line="287" pos:column="8">(<expr><name><name pos:line="287" pos:column="9">ctx<pos:position pos:line="287" pos:column="12"/></name><operator pos:line="287" pos:column="12">-&gt;<pos:position pos:line="287" pos:column="17"/></operator><name pos:line="287" pos:column="14">state<pos:position pos:line="287" pos:column="19"/></name></name> <operator pos:line="287" pos:column="20">==<pos:position pos:line="287" pos:column="22"/></operator> <name pos:line="287" pos:column="23">PRE_HEAD<pos:position pos:line="287" pos:column="31"/></name></expr>)<pos:position pos:line="287" pos:column="32"/></condition><then pos:line="287" pos:column="32"> <block pos:line="287" pos:column="33">{
        <comment type="block" pos:line="288" pos:column="9">/* Inside a false conditional (if, elif, else), so toss it all... */</comment>
        <if pos:line="289" pos:column="9">if <condition pos:line="289" pos:column="12">(<expr><operator pos:line="289" pos:column="13">(<pos:position pos:line="289" pos:column="14"/></operator><name pos:line="289" pos:column="14">dptr<pos:position pos:line="289" pos:column="18"/></name> <operator pos:line="289" pos:column="19">!=<pos:position pos:line="289" pos:column="21"/></operator> <call><name pos:line="289" pos:column="22">APR_BRIGADE_SENTINEL<pos:position pos:line="289" pos:column="42"/></name><argument_list pos:line="289" pos:column="42">(<argument><expr><operator pos:line="289" pos:column="43">*<pos:position pos:line="289" pos:column="44"/></operator><name pos:line="289" pos:column="44">bb<pos:position pos:line="289" pos:column="46"/></name></expr></argument>)<pos:position pos:line="289" pos:column="47"/></argument_list></call><operator pos:line="289" pos:column="47">)<pos:position pos:line="289" pos:column="48"/></operator> <operator pos:line="289" pos:column="49">&amp;&amp;<pos:position pos:line="289" pos:column="59"/></operator>
            <operator pos:line="290" pos:column="13">(<pos:position pos:line="290" pos:column="14"/></operator><operator pos:line="290" pos:column="14">!<pos:position pos:line="290" pos:column="15"/></operator><operator pos:line="290" pos:column="15">(<pos:position pos:line="290" pos:column="16"/></operator><name><name pos:line="290" pos:column="16">ctx<pos:position pos:line="290" pos:column="19"/></name><operator pos:line="290" pos:column="19">-&gt;<pos:position pos:line="290" pos:column="24"/></operator><name pos:line="290" pos:column="21">flags<pos:position pos:line="290" pos:column="26"/></name></name> <operator pos:line="290" pos:column="27">&amp;<pos:position pos:line="290" pos:column="32"/></operator> <name pos:line="290" pos:column="29">FLAG_PRINTING<pos:position pos:line="290" pos:column="42"/></name><operator pos:line="290" pos:column="42">)<pos:position pos:line="290" pos:column="43"/></operator><operator pos:line="290" pos:column="43">)<pos:position pos:line="290" pos:column="44"/></operator></expr>)<pos:position pos:line="290" pos:column="45"/></condition><then pos:line="290" pos:column="45"> <block pos:line="290" pos:column="46">{
            <decl_stmt><decl><type><name pos:line="291" pos:column="13">apr_bucket<pos:position pos:line="291" pos:column="23"/></name> <modifier pos:line="291" pos:column="24">*<pos:position pos:line="291" pos:column="25"/></modifier></type><name pos:line="291" pos:column="25">free_bucket<pos:position pos:line="291" pos:column="36"/></name></decl>;<pos:position pos:line="291" pos:column="37"/></decl_stmt>
            <do pos:line="292" pos:column="13">do <block pos:line="292" pos:column="16">{
                <expr_stmt><expr><name pos:line="293" pos:column="17">free_bucket<pos:position pos:line="293" pos:column="28"/></name> <operator pos:line="293" pos:column="29">=<pos:position pos:line="293" pos:column="30"/></operator> <name pos:line="293" pos:column="31">dptr<pos:position pos:line="293" pos:column="35"/></name></expr>;<pos:position pos:line="293" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><name pos:line="294" pos:column="17">dptr<pos:position pos:line="294" pos:column="21"/></name> <operator pos:line="294" pos:column="22">=<pos:position pos:line="294" pos:column="23"/></operator> <call><name pos:line="294" pos:column="24">APR_BUCKET_NEXT<pos:position pos:line="294" pos:column="39"/></name> <argument_list pos:line="294" pos:column="40">(<argument><expr><name pos:line="294" pos:column="41">dptr<pos:position pos:line="294" pos:column="45"/></name></expr></argument>)<pos:position pos:line="294" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="295" pos:column="17">apr_bucket_delete<pos:position pos:line="295" pos:column="34"/></name><argument_list pos:line="295" pos:column="34">(<argument><expr><name pos:line="295" pos:column="35">free_bucket<pos:position pos:line="295" pos:column="46"/></name></expr></argument>)<pos:position pos:line="295" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="48"/></expr_stmt>
            }<pos:position pos:line="296" pos:column="14"/></block> while <condition pos:line="296" pos:column="21">(<expr><name pos:line="296" pos:column="22">dptr<pos:position pos:line="296" pos:column="26"/></name> <operator pos:line="296" pos:column="27">!=<pos:position pos:line="296" pos:column="29"/></operator> <call><name pos:line="296" pos:column="30">APR_BRIGADE_SENTINEL<pos:position pos:line="296" pos:column="50"/></name><argument_list pos:line="296" pos:column="50">(<argument><expr><operator pos:line="296" pos:column="51">*<pos:position pos:line="296" pos:column="52"/></operator><name pos:line="296" pos:column="52">bb<pos:position pos:line="296" pos:column="54"/></name></expr></argument>)<pos:position pos:line="296" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="296" pos:column="56"/></condition>;<pos:position pos:line="296" pos:column="57"/></do>
        }<pos:position pos:line="297" pos:column="10"/></block></then>
        <else pos:line="298" pos:column="9">else <block pos:line="298" pos:column="14">{ 
            <comment type="block" pos:line="299" pos:column="13">/* Otherwise pass it along...
             * No SSI tags in this brigade... */</comment>
            <expr_stmt><expr><name pos:line="301" pos:column="13">rv<pos:position pos:line="301" pos:column="15"/></name> <operator pos:line="301" pos:column="16">=<pos:position pos:line="301" pos:column="17"/></operator> <call><name pos:line="301" pos:column="18">ap_pass_brigade<pos:position pos:line="301" pos:column="33"/></name><argument_list pos:line="301" pos:column="33">(<argument><expr><name><name pos:line="301" pos:column="34">f<pos:position pos:line="301" pos:column="35"/></name><operator pos:line="301" pos:column="35">-&gt;<pos:position pos:line="301" pos:column="40"/></operator><name pos:line="301" pos:column="37">next<pos:position pos:line="301" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="301" pos:column="43">*<pos:position pos:line="301" pos:column="44"/></operator><name pos:line="301" pos:column="44">bb<pos:position pos:line="301" pos:column="46"/></name></expr></argument>)<pos:position pos:line="301" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="48"/></expr_stmt>  
            <if pos:line="302" pos:column="13">if <condition pos:line="302" pos:column="16">(<expr><name pos:line="302" pos:column="17">rv<pos:position pos:line="302" pos:column="19"/></name> <operator pos:line="302" pos:column="20">!=<pos:position pos:line="302" pos:column="22"/></operator> <name pos:line="302" pos:column="23">APR_SUCCESS<pos:position pos:line="302" pos:column="34"/></name></expr>)<pos:position pos:line="302" pos:column="35"/></condition><then pos:line="302" pos:column="35"> <block pos:line="302" pos:column="36">{
                <return pos:line="303" pos:column="17">return <expr><name pos:line="303" pos:column="24">rv<pos:position pos:line="303" pos:column="26"/></name></expr>;<pos:position pos:line="303" pos:column="27"/></return>
            }<pos:position pos:line="304" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="305" pos:column="13">ctx<pos:position pos:line="305" pos:column="16"/></name><operator pos:line="305" pos:column="16">-&gt;<pos:position pos:line="305" pos:column="21"/></operator><name pos:line="305" pos:column="18">bytes_parsed<pos:position pos:line="305" pos:column="30"/></name></name> <operator pos:line="305" pos:column="31">=<pos:position pos:line="305" pos:column="32"/></operator> <literal type="number" pos:line="305" pos:column="33">0<pos:position pos:line="305" pos:column="34"/></literal></expr>;<pos:position pos:line="305" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="306" pos:column="10"/></block></else></if>
    }<pos:position pos:line="307" pos:column="6"/></block></then>
    <elseif pos:line="308" pos:column="5">else <if pos:line="308" pos:column="10">if <condition pos:line="308" pos:column="13">(<expr><name><name pos:line="308" pos:column="14">ctx<pos:position pos:line="308" pos:column="17"/></name><operator pos:line="308" pos:column="17">-&gt;<pos:position pos:line="308" pos:column="22"/></operator><name pos:line="308" pos:column="19">state<pos:position pos:line="308" pos:column="24"/></name></name> <operator pos:line="308" pos:column="25">==<pos:position pos:line="308" pos:column="27"/></operator> <name pos:line="308" pos:column="28">PARSED<pos:position pos:line="308" pos:column="34"/></name></expr>)<pos:position pos:line="308" pos:column="35"/></condition><then pos:line="308" pos:column="35"> <block pos:line="308" pos:column="36">{         <comment type="block" pos:line="308" pos:column="46">/* Invalid internal condition... */</comment>
        <decl_stmt><decl><type><name pos:line="309" pos:column="9">apr_bucket<pos:position pos:line="309" pos:column="19"/></name> <modifier pos:line="309" pos:column="20">*<pos:position pos:line="309" pos:column="21"/></modifier></type><name pos:line="309" pos:column="21">content_head<pos:position pos:line="309" pos:column="33"/></name> <init pos:line="309" pos:column="34">= <expr><name pos:line="309" pos:column="36">NULL<pos:position pos:line="309" pos:column="40"/></name></expr></init></decl>, <modifier pos:line="309" pos:column="42">*<pos:position pos:line="309" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="309" pos:column="43">tmp_bkt<pos:position pos:line="309" pos:column="50"/></name></decl>;<pos:position pos:line="309" pos:column="51"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="310" pos:column="9">ap_log_rerror<pos:position pos:line="310" pos:column="22"/></name><argument_list pos:line="310" pos:column="22">(<argument><expr><name pos:line="310" pos:column="23">APLOG_MARK<pos:position pos:line="310" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="35">APLOG_ERR<pos:position pos:line="310" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="310" pos:column="46">0<pos:position pos:line="310" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="310" pos:column="49">r<pos:position pos:line="310" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="311" pos:column="23">"Invalid mod_include state during file %s"<pos:position pos:line="311" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="311" pos:column="67">r<pos:position pos:line="311" pos:column="68"/></name><operator pos:line="311" pos:column="68">-&gt;<pos:position pos:line="311" pos:column="73"/></operator><name pos:line="311" pos:column="70">filename<pos:position pos:line="311" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="311" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="311" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="312" pos:column="9">CREATE_ERROR_BUCKET<pos:position pos:line="312" pos:column="28"/></name><argument_list pos:line="312" pos:column="28">(<argument><expr><name pos:line="312" pos:column="29">ctx<pos:position pos:line="312" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="312" pos:column="34">tmp_bkt<pos:position pos:line="312" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="312" pos:column="43">APR_BRIGADE_FIRST<pos:position pos:line="312" pos:column="60"/></name><argument_list pos:line="312" pos:column="60">(<argument><expr><operator pos:line="312" pos:column="61">*<pos:position pos:line="312" pos:column="62"/></operator><name pos:line="312" pos:column="62">bb<pos:position pos:line="312" pos:column="64"/></name></expr></argument>)<pos:position pos:line="312" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="312" pos:column="67">content_head<pos:position pos:line="312" pos:column="79"/></name></expr></argument>)<pos:position pos:line="312" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="312" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="313" pos:column="6"/></block></then></if></elseif>
    <else pos:line="314" pos:column="5">else <block pos:line="314" pos:column="10">{                    <comment type="block" pos:line="314" pos:column="31">/* Entire brigade is middle chunk of SSI tag... */</comment>
        <if pos:line="315" pos:column="9">if <condition pos:line="315" pos:column="12">(<expr><operator pos:line="315" pos:column="13">!<pos:position pos:line="315" pos:column="14"/></operator><call><name pos:line="315" pos:column="14">APR_BRIGADE_EMPTY<pos:position pos:line="315" pos:column="31"/></name><argument_list pos:line="315" pos:column="31">(<argument><expr><name><name pos:line="315" pos:column="32">ctx<pos:position pos:line="315" pos:column="35"/></name><operator pos:line="315" pos:column="35">-&gt;<pos:position pos:line="315" pos:column="40"/></operator><name pos:line="315" pos:column="37">ssi_tag_brigade<pos:position pos:line="315" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="315" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="315" pos:column="54"/></condition><then pos:line="315" pos:column="54"> <block pos:line="315" pos:column="55">{
            <expr_stmt><expr><call><name pos:line="316" pos:column="13">APR_BRIGADE_CONCAT<pos:position pos:line="316" pos:column="31"/></name><argument_list pos:line="316" pos:column="31">(<argument><expr><name><name pos:line="316" pos:column="32">ctx<pos:position pos:line="316" pos:column="35"/></name><operator pos:line="316" pos:column="35">-&gt;<pos:position pos:line="316" pos:column="40"/></operator><name pos:line="316" pos:column="37">ssi_tag_brigade<pos:position pos:line="316" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="316" pos:column="54">*<pos:position pos:line="316" pos:column="55"/></operator><name pos:line="316" pos:column="55">bb<pos:position pos:line="316" pos:column="57"/></name></expr></argument>)<pos:position pos:line="316" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="317" pos:column="10"/></block></then>
        <else pos:line="318" pos:column="9">else <block pos:line="318" pos:column="14">{                  <comment type="block" pos:line="318" pos:column="33">/* End of brigade contains part of SSI tag... */</comment>
            <decl_stmt><decl><type><name pos:line="319" pos:column="13">apr_bucket<pos:position pos:line="319" pos:column="23"/></name> <modifier pos:line="319" pos:column="24">*<pos:position pos:line="319" pos:column="25"/></modifier></type><name pos:line="319" pos:column="25">last<pos:position pos:line="319" pos:column="29"/></name></decl>;<pos:position pos:line="319" pos:column="30"/></decl_stmt>
            <if pos:line="320" pos:column="13">if <condition pos:line="320" pos:column="16">(<expr><name><name pos:line="320" pos:column="17">ctx<pos:position pos:line="320" pos:column="20"/></name><operator pos:line="320" pos:column="20">-&gt;<pos:position pos:line="320" pos:column="25"/></operator><name pos:line="320" pos:column="22">head_start_index<pos:position pos:line="320" pos:column="38"/></name></name> <operator pos:line="320" pos:column="39">&gt;<pos:position pos:line="320" pos:column="43"/></operator> <literal type="number" pos:line="320" pos:column="41">0<pos:position pos:line="320" pos:column="42"/></literal></expr>)<pos:position pos:line="320" pos:column="43"/></condition><then pos:line="320" pos:column="43"> <block pos:line="320" pos:column="44">{
                <expr_stmt><expr><call><name pos:line="321" pos:column="17">apr_bucket_split<pos:position pos:line="321" pos:column="33"/></name><argument_list pos:line="321" pos:column="33">(<argument><expr><name><name pos:line="321" pos:column="34">ctx<pos:position pos:line="321" pos:column="37"/></name><operator pos:line="321" pos:column="37">-&gt;<pos:position pos:line="321" pos:column="42"/></operator><name pos:line="321" pos:column="39">head_start_bucket<pos:position pos:line="321" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="321" pos:column="58">ctx<pos:position pos:line="321" pos:column="61"/></name><operator pos:line="321" pos:column="61">-&gt;<pos:position pos:line="321" pos:column="66"/></operator><name pos:line="321" pos:column="63">head_start_index<pos:position pos:line="321" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="321" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="321" pos:column="81"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="322" pos:column="17">ctx<pos:position pos:line="322" pos:column="20"/></name><operator pos:line="322" pos:column="20">-&gt;<pos:position pos:line="322" pos:column="25"/></operator><name pos:line="322" pos:column="22">head_start_bucket<pos:position pos:line="322" pos:column="39"/></name></name> <operator pos:line="322" pos:column="40">=<pos:position pos:line="322" pos:column="41"/></operator> 
                                        <call><name pos:line="323" pos:column="41">APR_BUCKET_NEXT<pos:position pos:line="323" pos:column="56"/></name><argument_list pos:line="323" pos:column="56">(<argument><expr><name><name pos:line="323" pos:column="57">ctx<pos:position pos:line="323" pos:column="60"/></name><operator pos:line="323" pos:column="60">-&gt;<pos:position pos:line="323" pos:column="65"/></operator><name pos:line="323" pos:column="62">head_start_bucket<pos:position pos:line="323" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="323" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="81"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="324" pos:column="17">ctx<pos:position pos:line="324" pos:column="20"/></name><operator pos:line="324" pos:column="20">-&gt;<pos:position pos:line="324" pos:column="25"/></operator><name pos:line="324" pos:column="22">head_start_index<pos:position pos:line="324" pos:column="38"/></name></name> <operator pos:line="324" pos:column="39">=<pos:position pos:line="324" pos:column="40"/></operator> <literal type="number" pos:line="324" pos:column="41">0<pos:position pos:line="324" pos:column="42"/></literal></expr>;<pos:position pos:line="324" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="325" pos:column="14"/></block></then></if>
                           <comment type="block" pos:line="326" pos:column="28">/* Set aside tag, pass pre-tag... */</comment>
            <expr_stmt><expr><name pos:line="327" pos:column="13">tag_and_after<pos:position pos:line="327" pos:column="26"/></name> <operator pos:line="327" pos:column="27">=<pos:position pos:line="327" pos:column="28"/></operator> <call><name pos:line="327" pos:column="29">apr_brigade_split<pos:position pos:line="327" pos:column="46"/></name><argument_list pos:line="327" pos:column="46">(<argument><expr><operator pos:line="327" pos:column="47">*<pos:position pos:line="327" pos:column="48"/></operator><name pos:line="327" pos:column="48">bb<pos:position pos:line="327" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="327" pos:column="52">ctx<pos:position pos:line="327" pos:column="55"/></name><operator pos:line="327" pos:column="55">-&gt;<pos:position pos:line="327" pos:column="60"/></operator><name pos:line="327" pos:column="57">head_start_bucket<pos:position pos:line="327" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="327" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><name pos:line="328" pos:column="13">rv<pos:position pos:line="328" pos:column="15"/></name> <operator pos:line="328" pos:column="16">=<pos:position pos:line="328" pos:column="17"/></operator> <call><name pos:line="328" pos:column="18">ap_pass_brigade<pos:position pos:line="328" pos:column="33"/></name><argument_list pos:line="328" pos:column="33">(<argument><expr><name><name pos:line="328" pos:column="34">f<pos:position pos:line="328" pos:column="35"/></name><operator pos:line="328" pos:column="35">-&gt;<pos:position pos:line="328" pos:column="40"/></operator><name pos:line="328" pos:column="37">next<pos:position pos:line="328" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="328" pos:column="43">*<pos:position pos:line="328" pos:column="44"/></operator><name pos:line="328" pos:column="44">bb<pos:position pos:line="328" pos:column="46"/></name></expr></argument>)<pos:position pos:line="328" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="48"/></expr_stmt>
            <if pos:line="329" pos:column="13">if <condition pos:line="329" pos:column="16">(<expr><name pos:line="329" pos:column="17">rv<pos:position pos:line="329" pos:column="19"/></name> <operator pos:line="329" pos:column="20">!=<pos:position pos:line="329" pos:column="22"/></operator> <name pos:line="329" pos:column="23">APR_SUCCESS<pos:position pos:line="329" pos:column="34"/></name></expr>)<pos:position pos:line="329" pos:column="35"/></condition><then pos:line="329" pos:column="35"> <block pos:line="329" pos:column="36">{
                <return pos:line="330" pos:column="17">return <expr><name pos:line="330" pos:column="24">rv<pos:position pos:line="330" pos:column="26"/></name></expr>;<pos:position pos:line="330" pos:column="27"/></return>
            }<pos:position pos:line="331" pos:column="14"/></block></then></if>
            
            <comment type="block" pos:line="333" pos:column="13">/* Set aside the partial tag
             * Exception: if there's an EOS at the end of this brigade,
             * the tag will never be completed, so send an error and EOS
             */</comment>
            <expr_stmt><expr><name pos:line="337" pos:column="13">last<pos:position pos:line="337" pos:column="17"/></name> <operator pos:line="337" pos:column="18">=<pos:position pos:line="337" pos:column="19"/></operator> <call><name pos:line="337" pos:column="20">APR_BRIGADE_LAST<pos:position pos:line="337" pos:column="36"/></name><argument_list pos:line="337" pos:column="36">(<argument><expr><name pos:line="337" pos:column="37">tag_and_after<pos:position pos:line="337" pos:column="50"/></name></expr></argument>)<pos:position pos:line="337" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="52"/></expr_stmt>
            <if pos:line="338" pos:column="13">if <condition pos:line="338" pos:column="16">(<expr><call><name pos:line="338" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="338" pos:column="34"/></name><argument_list pos:line="338" pos:column="34">(<argument><expr><name pos:line="338" pos:column="35">last<pos:position pos:line="338" pos:column="39"/></name></expr></argument>)<pos:position pos:line="338" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="338" pos:column="41"/></condition><then pos:line="338" pos:column="41"> <block pos:line="338" pos:column="42">{
                <comment type="block" pos:line="339" pos:column="17">/* Remove everything before the EOS (i.e., the partial tag)
                 * and replace it with an error msg */</comment>
                <decl_stmt><decl><type><name pos:line="341" pos:column="17">apr_bucket<pos:position pos:line="341" pos:column="27"/></name> <modifier pos:line="341" pos:column="28">*<pos:position pos:line="341" pos:column="29"/></modifier></type><name pos:line="341" pos:column="29">b<pos:position pos:line="341" pos:column="30"/></name></decl>;<pos:position pos:line="341" pos:column="31"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="342" pos:column="17">apr_bucket<pos:position pos:line="342" pos:column="27"/></name> <modifier pos:line="342" pos:column="28">*<pos:position pos:line="342" pos:column="29"/></modifier></type><name pos:line="342" pos:column="29">err_bucket<pos:position pos:line="342" pos:column="39"/></name> <init pos:line="342" pos:column="40">= <expr><name pos:line="342" pos:column="42">NULL<pos:position pos:line="342" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="342" pos:column="47"/></decl_stmt>
                <for pos:line="343" pos:column="17">for <control pos:line="343" pos:column="21">(<init><expr><name pos:line="343" pos:column="22">b<pos:position pos:line="343" pos:column="23"/></name> <operator pos:line="343" pos:column="24">=<pos:position pos:line="343" pos:column="25"/></operator> <call><name pos:line="343" pos:column="26">APR_BRIGADE_FIRST<pos:position pos:line="343" pos:column="43"/></name><argument_list pos:line="343" pos:column="43">(<argument><expr><name pos:line="343" pos:column="44">tag_and_after<pos:position pos:line="343" pos:column="57"/></name></expr></argument>)<pos:position pos:line="343" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="343" pos:column="59"/></init>
                     <condition><expr><operator pos:line="344" pos:column="22">!<pos:position pos:line="344" pos:column="23"/></operator><call><name pos:line="344" pos:column="23">APR_BUCKET_IS_EOS<pos:position pos:line="344" pos:column="40"/></name><argument_list pos:line="344" pos:column="40">(<argument><expr><name pos:line="344" pos:column="41">b<pos:position pos:line="344" pos:column="42"/></name></expr></argument>)<pos:position pos:line="344" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="344" pos:column="44"/></condition>
                     <incr><expr><name pos:line="345" pos:column="22">b<pos:position pos:line="345" pos:column="23"/></name> <operator pos:line="345" pos:column="24">=<pos:position pos:line="345" pos:column="25"/></operator> <call><name pos:line="345" pos:column="26">APR_BRIGADE_FIRST<pos:position pos:line="345" pos:column="43"/></name><argument_list pos:line="345" pos:column="43">(<argument><expr><name pos:line="345" pos:column="44">tag_and_after<pos:position pos:line="345" pos:column="57"/></name></expr></argument>)<pos:position pos:line="345" pos:column="58"/></argument_list></call></expr></incr>)<pos:position pos:line="345" pos:column="59"/></control> <block pos:line="345" pos:column="60">{
                    <expr_stmt><expr><call><name pos:line="346" pos:column="21">APR_BUCKET_REMOVE<pos:position pos:line="346" pos:column="38"/></name><argument_list pos:line="346" pos:column="38">(<argument><expr><name pos:line="346" pos:column="39">b<pos:position pos:line="346" pos:column="40"/></name></expr></argument>)<pos:position pos:line="346" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="42"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="347" pos:column="21">apr_bucket_destroy<pos:position pos:line="347" pos:column="39"/></name><argument_list pos:line="347" pos:column="39">(<argument><expr><name pos:line="347" pos:column="40">b<pos:position pos:line="347" pos:column="41"/></name></expr></argument>)<pos:position pos:line="347" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="347" pos:column="43"/></expr_stmt>
                }<pos:position pos:line="348" pos:column="18"/></block></for>
                <expr_stmt><expr><call><name pos:line="349" pos:column="17">CREATE_ERROR_BUCKET<pos:position pos:line="349" pos:column="36"/></name><argument_list pos:line="349" pos:column="36">(<argument><expr><name pos:line="349" pos:column="37">ctx<pos:position pos:line="349" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="349" pos:column="42">err_bucket<pos:position pos:line="349" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="349" pos:column="54">b<pos:position pos:line="349" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="349" pos:column="57">err_bucket<pos:position pos:line="349" pos:column="67"/></name></expr></argument>)<pos:position pos:line="349" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="69"/></expr_stmt>
                <expr_stmt><expr><name pos:line="350" pos:column="17">rv<pos:position pos:line="350" pos:column="19"/></name> <operator pos:line="350" pos:column="20">=<pos:position pos:line="350" pos:column="21"/></operator> <call><name pos:line="350" pos:column="22">ap_pass_brigade<pos:position pos:line="350" pos:column="37"/></name><argument_list pos:line="350" pos:column="37">(<argument><expr><name><name pos:line="350" pos:column="38">f<pos:position pos:line="350" pos:column="39"/></name><operator pos:line="350" pos:column="39">-&gt;<pos:position pos:line="350" pos:column="44"/></operator><name pos:line="350" pos:column="41">next<pos:position pos:line="350" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="350" pos:column="47">tag_and_after<pos:position pos:line="350" pos:column="60"/></name></expr></argument>)<pos:position pos:line="350" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="62"/></expr_stmt>
            }<pos:position pos:line="351" pos:column="14"/></block></then>
            <else pos:line="352" pos:column="13">else <block pos:line="352" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="353" pos:column="17">ap_save_brigade<pos:position pos:line="353" pos:column="32"/></name><argument_list pos:line="353" pos:column="32">(<argument><expr><name pos:line="353" pos:column="33">f<pos:position pos:line="353" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="353" pos:column="36">&amp;<pos:position pos:line="353" pos:column="41"/></operator><name><name pos:line="353" pos:column="37">ctx<pos:position pos:line="353" pos:column="40"/></name><operator pos:line="353" pos:column="40">-&gt;<pos:position pos:line="353" pos:column="45"/></operator><name pos:line="353" pos:column="42">ssi_tag_brigade<pos:position pos:line="353" pos:column="57"/></name></name></expr></argument>,
                                <argument><expr><operator pos:line="354" pos:column="33">&amp;<pos:position pos:line="354" pos:column="38"/></operator><name pos:line="354" pos:column="34">tag_and_after<pos:position pos:line="354" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="354" pos:column="49">r<pos:position pos:line="354" pos:column="50"/></name><operator pos:line="354" pos:column="50">-&gt;<pos:position pos:line="354" pos:column="55"/></operator><name pos:line="354" pos:column="52">pool<pos:position pos:line="354" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="354" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="354" pos:column="58"/></expr_stmt>
            }<pos:position pos:line="355" pos:column="14"/></block></else></if>
            <if pos:line="356" pos:column="13">if <condition pos:line="356" pos:column="16">(<expr><name pos:line="356" pos:column="17">rv<pos:position pos:line="356" pos:column="19"/></name> <operator pos:line="356" pos:column="20">!=<pos:position pos:line="356" pos:column="22"/></operator> <name pos:line="356" pos:column="23">APR_SUCCESS<pos:position pos:line="356" pos:column="34"/></name></expr>)<pos:position pos:line="356" pos:column="35"/></condition><then pos:line="356" pos:column="35"> <block pos:line="356" pos:column="36">{
                <return pos:line="357" pos:column="17">return <expr><name pos:line="357" pos:column="24">rv<pos:position pos:line="357" pos:column="26"/></name></expr>;<pos:position pos:line="357" pos:column="27"/></return>
            }<pos:position pos:line="358" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="359" pos:column="13">ctx<pos:position pos:line="359" pos:column="16"/></name><operator pos:line="359" pos:column="16">-&gt;<pos:position pos:line="359" pos:column="21"/></operator><name pos:line="359" pos:column="18">bytes_parsed<pos:position pos:line="359" pos:column="30"/></name></name> <operator pos:line="359" pos:column="31">=<pos:position pos:line="359" pos:column="32"/></operator> <literal type="number" pos:line="359" pos:column="33">0<pos:position pos:line="359" pos:column="34"/></literal></expr>;<pos:position pos:line="359" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="360" pos:column="10"/></block></else></if>
    }<pos:position pos:line="361" pos:column="6"/></block></else></if>
    <return pos:line="362" pos:column="5">return <expr><name pos:line="362" pos:column="12">APR_SUCCESS<pos:position pos:line="362" pos:column="23"/></name></expr>;<pos:position pos:line="362" pos:column="24"/></return>
}<pos:position pos:line="363" pos:column="2"/></block></function></unit>

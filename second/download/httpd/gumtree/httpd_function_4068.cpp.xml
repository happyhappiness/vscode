<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4068.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">mprint<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">request_rec<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">r<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="36">union<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">VALUETYPE<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">p<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="56">struct<pos:position pos:line="1" pos:column="62"/></name> <name pos:line="1" pos:column="63">magic<pos:position pos:line="1" pos:column="68"/></name></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">m<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">pp<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">long<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">v<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">time_str<pos:position pos:line="5" pos:column="18"/></name><index pos:line="5" pos:column="18">[<expr><name pos:line="5" pos:column="19">APR_CTIME_LEN<pos:position pos:line="5" pos:column="32"/></name></expr>]<pos:position pos:line="5" pos:column="33"/></index></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>

    <switch pos:line="7" pos:column="5">switch <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">m<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">type<pos:position pos:line="7" pos:column="20"/></name></name></expr>)<pos:position pos:line="7" pos:column="21"/></condition> <block pos:line="7" pos:column="22">{
    <case pos:line="8" pos:column="5">case <expr><name pos:line="8" pos:column="10">BYTE<pos:position pos:line="8" pos:column="14"/></name></expr>:<pos:position pos:line="8" pos:column="15"/></case>
        <expr_stmt><expr><name pos:line="9" pos:column="9">v<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <name><name pos:line="9" pos:column="13">p<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">b<pos:position pos:line="9" pos:column="17"/></name></name></expr>;<pos:position pos:line="9" pos:column="18"/></expr_stmt>
        <break pos:line="10" pos:column="9">break;<pos:position pos:line="10" pos:column="15"/></break>

    <case pos:line="12" pos:column="5">case <expr><name pos:line="12" pos:column="10">SHORT<pos:position pos:line="12" pos:column="15"/></name></expr>:<pos:position pos:line="12" pos:column="16"/></case>
    <case pos:line="13" pos:column="5">case <expr><name pos:line="13" pos:column="10">BESHORT<pos:position pos:line="13" pos:column="17"/></name></expr>:<pos:position pos:line="13" pos:column="18"/></case>
    <case pos:line="14" pos:column="5">case <expr><name pos:line="14" pos:column="10">LESHORT<pos:position pos:line="14" pos:column="17"/></name></expr>:<pos:position pos:line="14" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="15" pos:column="9">v<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <name><name pos:line="15" pos:column="13">p<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">h<pos:position pos:line="15" pos:column="17"/></name></name></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>
        <break pos:line="16" pos:column="9">break;<pos:position pos:line="16" pos:column="15"/></break>

    <case pos:line="18" pos:column="5">case <expr><name pos:line="18" pos:column="10">LONG<pos:position pos:line="18" pos:column="14"/></name></expr>:<pos:position pos:line="18" pos:column="15"/></case>
    <case pos:line="19" pos:column="5">case <expr><name pos:line="19" pos:column="10">BELONG<pos:position pos:line="19" pos:column="16"/></name></expr>:<pos:position pos:line="19" pos:column="17"/></case>
    <case pos:line="20" pos:column="5">case <expr><name pos:line="20" pos:column="10">LELONG<pos:position pos:line="20" pos:column="16"/></name></expr>:<pos:position pos:line="20" pos:column="17"/></case>
        <expr_stmt><expr><name pos:line="21" pos:column="9">v<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name><name pos:line="21" pos:column="13">p<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">l<pos:position pos:line="21" pos:column="17"/></name></name></expr>;<pos:position pos:line="21" pos:column="18"/></expr_stmt>
        <break pos:line="22" pos:column="9">break;<pos:position pos:line="22" pos:column="15"/></break>

    <case pos:line="24" pos:column="5">case <expr><name pos:line="24" pos:column="10">STRING<pos:position pos:line="24" pos:column="16"/></name></expr>:<pos:position pos:line="24" pos:column="17"/></case>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">m<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">reln<pos:position pos:line="25" pos:column="20"/></name></name> <operator pos:line="25" pos:column="21">==<pos:position pos:line="25" pos:column="23"/></operator> <literal type="char" pos:line="25" pos:column="24">'='<pos:position pos:line="25" pos:column="27"/></literal></expr>)<pos:position pos:line="25" pos:column="28"/></condition><then pos:line="25" pos:column="28"> <block pos:line="25" pos:column="29">{
            <expr_stmt><expr><operator pos:line="26" pos:column="13">(<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">void<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">)<pos:position pos:line="26" pos:column="19"/></operator> <call><name pos:line="26" pos:column="20">magic_rsl_printf<pos:position pos:line="26" pos:column="36"/></name><argument_list pos:line="26" pos:column="36">(<argument><expr><name pos:line="26" pos:column="37">r<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="40">m<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-&gt;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="43">desc<pos:position pos:line="26" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="49">m<pos:position pos:line="26" pos:column="50"/></name><operator pos:line="26" pos:column="50">-&gt;<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="52">value<pos:position pos:line="26" pos:column="57"/></name><operator pos:line="26" pos:column="57">.<pos:position pos:line="26" pos:column="58"/></operator><name pos:line="26" pos:column="58">s<pos:position pos:line="26" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then>
        <else pos:line="28" pos:column="9">else <block pos:line="28" pos:column="14">{
            <expr_stmt><expr><operator pos:line="29" pos:column="13">(<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">void<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">)<pos:position pos:line="29" pos:column="19"/></operator> <call><name pos:line="29" pos:column="20">magic_rsl_printf<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><name pos:line="29" pos:column="37">r<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="40">m<pos:position pos:line="29" pos:column="41"/></name><operator pos:line="29" pos:column="41">-&gt;<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="43">desc<pos:position pos:line="29" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="49">p<pos:position pos:line="29" pos:column="50"/></name><operator pos:line="29" pos:column="50">-&gt;<pos:position pos:line="29" pos:column="55"/></operator><name pos:line="29" pos:column="52">s<pos:position pos:line="29" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></else></if>
        <return pos:line="31" pos:column="9">return;<pos:position pos:line="31" pos:column="16"/></return>

    <case pos:line="33" pos:column="5">case <expr><name pos:line="33" pos:column="10">DATE<pos:position pos:line="33" pos:column="14"/></name></expr>:<pos:position pos:line="33" pos:column="15"/></case>
    <case pos:line="34" pos:column="5">case <expr><name pos:line="34" pos:column="10">BEDATE<pos:position pos:line="34" pos:column="16"/></name></expr>:<pos:position pos:line="34" pos:column="17"/></case>
    <case pos:line="35" pos:column="5">case <expr><name pos:line="35" pos:column="10">LEDATE<pos:position pos:line="35" pos:column="16"/></name></expr>:<pos:position pos:line="35" pos:column="17"/></case>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">apr_ctime<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><name pos:line="36" pos:column="19">time_str<pos:position pos:line="36" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="29">apr_time_from_sec<pos:position pos:line="36" pos:column="46"/></name><argument_list pos:line="36" pos:column="46">(<argument><expr><operator pos:line="36" pos:column="47">*<pos:position pos:line="36" pos:column="48"/></operator><operator pos:line="36" pos:column="48">(<pos:position pos:line="36" pos:column="49"/></operator><name pos:line="36" pos:column="49">time_t<pos:position pos:line="36" pos:column="55"/></name> <operator pos:line="36" pos:column="56">*<pos:position pos:line="36" pos:column="57"/></operator><operator pos:line="36" pos:column="57">)<pos:position pos:line="36" pos:column="58"/></operator><operator pos:line="36" pos:column="58">&amp;<pos:position pos:line="36" pos:column="63"/></operator><name><name pos:line="36" pos:column="59">p<pos:position pos:line="36" pos:column="60"/></name><operator pos:line="36" pos:column="60">-&gt;<pos:position pos:line="36" pos:column="65"/></operator><name pos:line="36" pos:column="62">l<pos:position pos:line="36" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">pp<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <name pos:line="37" pos:column="14">time_str<pos:position pos:line="37" pos:column="22"/></name></expr>;<pos:position pos:line="37" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="38" pos:column="9">(<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">void<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">)<pos:position pos:line="38" pos:column="15"/></operator> <call><name pos:line="38" pos:column="16">magic_rsl_printf<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">r<pos:position pos:line="38" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="36">m<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">-&gt;<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="39">desc<pos:position pos:line="38" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="45">pp<pos:position pos:line="38" pos:column="47"/></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>
        <return pos:line="39" pos:column="9">return;<pos:position pos:line="39" pos:column="16"/></return>
    <default pos:line="40" pos:column="5">default:<pos:position pos:line="40" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">ap_log_rerror<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name pos:line="41" pos:column="23">APLOG_MARK<pos:position pos:line="41" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="35">APLOG_ERR<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="46">0<pos:position pos:line="41" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">r<pos:position pos:line="41" pos:column="50"/></name></expr></argument>,
                    <argument><expr><name pos:line="42" pos:column="21">MODNAME<pos:position pos:line="42" pos:column="28"/></name> <literal type="string" pos:line="42" pos:column="29">": invalid m-&gt;type (%d) in mprint()."<pos:position pos:line="42" pos:column="69"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="43" pos:column="21">m<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">-&gt;<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="24">type<pos:position pos:line="43" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="30"/></expr_stmt>
        <return pos:line="44" pos:column="9">return;<pos:position pos:line="44" pos:column="16"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></switch>

    <expr_stmt><expr><name pos:line="47" pos:column="5">v<pos:position pos:line="47" pos:column="6"/></name> <operator pos:line="47" pos:column="7">=<pos:position pos:line="47" pos:column="8"/></operator> <call><name pos:line="47" pos:column="9">signextend<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><name><name pos:line="47" pos:column="20">r<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">-&gt;<pos:position pos:line="47" pos:column="26"/></operator><name pos:line="47" pos:column="23">server<pos:position pos:line="47" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="31">m<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">v<pos:position pos:line="47" pos:column="35"/></name></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call> <operator pos:line="47" pos:column="37">&amp;<pos:position pos:line="47" pos:column="42"/></operator> <name><name pos:line="47" pos:column="39">m<pos:position pos:line="47" pos:column="40"/></name><operator pos:line="47" pos:column="40">-&gt;<pos:position pos:line="47" pos:column="45"/></operator><name pos:line="47" pos:column="42">mask<pos:position pos:line="47" pos:column="46"/></name></name></expr>;<pos:position pos:line="47" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="48" pos:column="5">(<pos:position pos:line="48" pos:column="6"/></operator><name pos:line="48" pos:column="6">void<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">)<pos:position pos:line="48" pos:column="11"/></operator> <call><name pos:line="48" pos:column="12">magic_rsl_printf<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><name pos:line="48" pos:column="29">r<pos:position pos:line="48" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="32">m<pos:position pos:line="48" pos:column="33"/></name><operator pos:line="48" pos:column="33">-&gt;<pos:position pos:line="48" pos:column="38"/></operator><name pos:line="48" pos:column="35">desc<pos:position pos:line="48" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="41">(<pos:position pos:line="48" pos:column="42"/></operator><name pos:line="48" pos:column="42">unsigned<pos:position pos:line="48" pos:column="50"/></name> <name pos:line="48" pos:column="51">long<pos:position pos:line="48" pos:column="55"/></name><operator pos:line="48" pos:column="55">)<pos:position pos:line="48" pos:column="56"/></operator> <name pos:line="48" pos:column="57">v<pos:position pos:line="48" pos:column="58"/></name></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="60"/></expr_stmt>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

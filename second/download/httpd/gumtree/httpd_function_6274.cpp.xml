<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6274.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mpmt_os2_check_config<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">apr_pool_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">p<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">apr_pool_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">plog<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">apr_pool_t<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">ptemp<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">server_rec<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">s<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">int<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">restart_num<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><literal type="number" pos:line="4" pos:column="30">0<pos:position pos:line="4" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">startup<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* we want this only the first time around */</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">restart_num<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">++<pos:position pos:line="8" pos:column="22"/></operator> <operator pos:line="8" pos:column="23">==<pos:position pos:line="8" pos:column="25"/></operator> <literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28"> <block pos:line="8" pos:column="29">{
        <expr_stmt><expr><name pos:line="9" pos:column="9">startup<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <literal type="number" pos:line="9" pos:column="19">1<pos:position pos:line="9" pos:column="20"/></literal></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">ap_daemons_to_start<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">&lt;<pos:position pos:line="12" pos:column="33"/></operator> <literal type="number" pos:line="12" pos:column="31">0<pos:position pos:line="12" pos:column="32"/></literal></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33"> <block pos:line="12" pos:column="34">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">startup<pos:position pos:line="13" pos:column="20"/></name></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21"> <block pos:line="13" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">ap_log_error<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">APLOG_MARK<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="38">APLOG_WARNING<pos:position pos:line="14" pos:column="51"/></name> <operator pos:line="14" pos:column="52">|<pos:position pos:line="14" pos:column="53"/></operator> <name pos:line="14" pos:column="54">APLOG_STARTUP<pos:position pos:line="14" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="69">0<pos:position pos:line="14" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="72">NULL<pos:position pos:line="14" pos:column="76"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="78">APLOGNO<pos:position pos:line="14" pos:column="85"/></name><argument_list pos:line="14" pos:column="85">(<argument><expr><literal type="number" pos:line="14" pos:column="86">00213<pos:position pos:line="14" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="92"/></argument_list></call>
                         <literal type="string" pos:line="15" pos:column="26">"WARNING: StartServers of %d not allowed, "<pos:position pos:line="15" pos:column="69"/></literal>
                         <literal type="string" pos:line="16" pos:column="26">"increasing to 1."<pos:position pos:line="16" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="46">ap_daemons_to_start<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></then> <else pos:line="17" pos:column="11">else <block pos:line="17" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">ap_log_error<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">APLOG_MARK<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">APLOG_WARNING<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="53">0<pos:position pos:line="18" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="56">s<pos:position pos:line="18" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="59">APLOGNO<pos:position pos:line="18" pos:column="66"/></name><argument_list pos:line="18" pos:column="66">(<argument><expr><literal type="number" pos:line="18" pos:column="67">00214<pos:position pos:line="18" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call>
                         <literal type="string" pos:line="19" pos:column="26">"StartServers of %d not allowed, increasing to 1"<pos:position pos:line="19" pos:column="75"/></literal></expr></argument>,
                         <argument><expr><name pos:line="20" pos:column="26">ap_daemons_to_start<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="22" pos:column="9">ap_daemons_to_start<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">=<pos:position pos:line="22" pos:column="30"/></operator> <literal type="number" pos:line="22" pos:column="31">1<pos:position pos:line="22" pos:column="32"/></literal></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">ap_min_spare_threads<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">&lt;<pos:position pos:line="25" pos:column="34"/></operator> <literal type="number" pos:line="25" pos:column="32">1<pos:position pos:line="25" pos:column="33"/></literal></expr>)<pos:position pos:line="25" pos:column="34"/></condition><then pos:line="25" pos:column="34"> <block pos:line="25" pos:column="35">{
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">startup<pos:position pos:line="26" pos:column="20"/></name></expr>)<pos:position pos:line="26" pos:column="21"/></condition><then pos:line="26" pos:column="21"> <block pos:line="26" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">ap_log_error<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><name pos:line="27" pos:column="26">APLOG_MARK<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="38">APLOG_WARNING<pos:position pos:line="27" pos:column="51"/></name> <operator pos:line="27" pos:column="52">|<pos:position pos:line="27" pos:column="53"/></operator> <name pos:line="27" pos:column="54">APLOG_STARTUP<pos:position pos:line="27" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="69">0<pos:position pos:line="27" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="72">NULL<pos:position pos:line="27" pos:column="76"/></name></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="78">APLOGNO<pos:position pos:line="27" pos:column="85"/></name><argument_list pos:line="27" pos:column="85">(<argument><expr><literal type="number" pos:line="27" pos:column="86">00215<pos:position pos:line="27" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="92"/></argument_list></call>
                         <literal type="string" pos:line="28" pos:column="26">"WARNING: MinSpareThreads of %d not allowed, "<pos:position pos:line="28" pos:column="72"/></literal>
                         <literal type="string" pos:line="29" pos:column="26">"increasing to 1"<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="45">ap_min_spare_threads<pos:position pos:line="29" pos:column="65"/></name></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">ap_log_error<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">APLOG_MARK<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">APLOG_WARNING<pos:position pos:line="30" pos:column="51"/></name> <operator pos:line="30" pos:column="52">|<pos:position pos:line="30" pos:column="53"/></operator> <name pos:line="30" pos:column="54">APLOG_STARTUP<pos:position pos:line="30" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="69">0<pos:position pos:line="30" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="72">NULL<pos:position pos:line="30" pos:column="76"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="31" pos:column="26">" to avoid almost certain server failure."<pos:position pos:line="31" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">ap_log_error<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">APLOG_MARK<pos:position pos:line="32" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="38">APLOG_WARNING<pos:position pos:line="32" pos:column="51"/></name> <operator pos:line="32" pos:column="52">|<pos:position pos:line="32" pos:column="53"/></operator> <name pos:line="32" pos:column="54">APLOG_STARTUP<pos:position pos:line="32" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="69">0<pos:position pos:line="32" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="72">NULL<pos:position pos:line="32" pos:column="76"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="33" pos:column="26">" Please read the documentation."<pos:position pos:line="33" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then> <else pos:line="34" pos:column="11">else <block pos:line="34" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">ap_log_error<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">APLOG_MARK<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="38">APLOG_WARNING<pos:position pos:line="35" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="53">0<pos:position pos:line="35" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="56">s<pos:position pos:line="35" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="59">APLOGNO<pos:position pos:line="35" pos:column="66"/></name><argument_list pos:line="35" pos:column="66">(<argument><expr><literal type="number" pos:line="35" pos:column="67">00216<pos:position pos:line="35" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="73"/></argument_list></call>
                         <literal type="string" pos:line="36" pos:column="26">"MinSpareThreads of %d not allowed, increasing to 1"<pos:position pos:line="36" pos:column="78"/></literal></expr></argument>,
                         <argument><expr><name pos:line="37" pos:column="26">ap_min_spare_threads<pos:position pos:line="37" pos:column="46"/></name></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="39" pos:column="9">ap_min_spare_threads<pos:position pos:line="39" pos:column="29"/></name> <operator pos:line="39" pos:column="30">=<pos:position pos:line="39" pos:column="31"/></operator> <literal type="number" pos:line="39" pos:column="32">1<pos:position pos:line="39" pos:column="33"/></literal></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <return pos:line="42" pos:column="5">return <expr><name pos:line="42" pos:column="12">OK<pos:position pos:line="42" pos:column="14"/></name></expr>;<pos:position pos:line="42" pos:column="15"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

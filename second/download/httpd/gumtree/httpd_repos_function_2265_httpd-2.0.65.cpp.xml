<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2265_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">set_max_spare_threads<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">cmd_parms<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">cmd<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">void<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">dummy<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                         <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">arg<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">err<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><call><name pos:line="4" pos:column="23">ap_check_cmd_context<pos:position pos:line="4" pos:column="43"/></name><argument_list pos:line="4" pos:column="43">(<argument><expr><name pos:line="4" pos:column="44">cmd<pos:position pos:line="4" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="49">GLOBAL_ONLY<pos:position pos:line="4" pos:column="60"/></name></expr></argument>)<pos:position pos:line="4" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="62"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">err<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">!=<pos:position pos:line="5" pos:column="15"/></operator> <name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21"> <block pos:line="5" pos:column="22">{
        <return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">err<pos:position pos:line="6" pos:column="19"/></name></expr>;<pos:position pos:line="6" pos:column="20"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="9" pos:column="5">max_spare_threads<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">=<pos:position pos:line="9" pos:column="24"/></operator> <call><name pos:line="9" pos:column="25">atoi<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">arg<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">max_spare_threads<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">&gt;=<pos:position pos:line="10" pos:column="32"/></operator> <name pos:line="10" pos:column="30">thread_limit<pos:position pos:line="10" pos:column="42"/></name></expr>)<pos:position pos:line="10" pos:column="43"/></condition><then pos:line="10" pos:column="43"> <block pos:line="10" pos:column="44">{
       <expr_stmt><expr><call><name pos:line="11" pos:column="8">ap_log_error<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">APLOG_MARK<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="33">APLOG_STARTUP<pos:position pos:line="11" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="48">0<pos:position pos:line="11" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="51">NULL<pos:position pos:line="11" pos:column="55"/></name></expr></argument>, 
                    <argument><expr><literal type="string" pos:line="12" pos:column="21">"WARNING: detected MinSpareThreads set higher than"<pos:position pos:line="12" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="74"/></expr_stmt>
       <expr_stmt><expr><call><name pos:line="13" pos:column="8">ap_log_error<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">APLOG_MARK<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">APLOG_STARTUP<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="48">0<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">NULL<pos:position pos:line="13" pos:column="55"/></name></expr></argument>, 
                    <argument><expr><literal type="string" pos:line="14" pos:column="21">"ThreadLimit. Resetting to %d"<pos:position pos:line="14" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="53">thread_limit<pos:position pos:line="14" pos:column="65"/></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="67"/></expr_stmt>
       <expr_stmt><expr><name pos:line="15" pos:column="8">max_spare_threads<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">=<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="28">thread_limit<pos:position pos:line="15" pos:column="40"/></name></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">NULL<pos:position pos:line="17" pos:column="16"/></name></expr>;<pos:position pos:line="17" pos:column="17"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

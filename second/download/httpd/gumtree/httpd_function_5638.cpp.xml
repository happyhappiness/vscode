<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_5638.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">mpm_service_start<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">apr_pool_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ptemp<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">argc<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                               <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier> <specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type> <name pos:line="2" pos:column="53">argv<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">CHAR<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier><modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier></type><name pos:line="5" pos:column="12">start_argv<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SC_HANDLE<pos:position pos:line="6" pos:column="14"/></name></type>   <name pos:line="6" pos:column="17">schService<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">SC_HANDLE<pos:position pos:line="7" pos:column="14"/></name></type>   <name pos:line="7" pos:column="17">schSCManager<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">fprintf<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">stderr<pos:position pos:line="9" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="9" pos:column="20">"Starting the %s service\n"<pos:position pos:line="9" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="49">mpm_display_name<pos:position pos:line="9" pos:column="65"/></name></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">schSCManager<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <call><name pos:line="11" pos:column="20">OpenSCManager<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">NULL<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="40">NULL<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <comment type="block" pos:line="11" pos:column="46">/* local, default database */</comment>
                                 <argument><expr><name pos:line="12" pos:column="34">SC_MANAGER_CONNECT<pos:position pos:line="12" pos:column="52"/></name></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="54"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">schSCManager<pos:position pos:line="13" pos:column="22"/></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23"> <block pos:line="13" pos:column="24">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">rv<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">apr_get_os_error<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">()<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">ap_log_error<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">APLOG_MARK<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">APLOG_ERR<pos:position pos:line="15" pos:column="43"/></name> <operator pos:line="15" pos:column="44">|<pos:position pos:line="15" pos:column="45"/></operator> <name pos:line="15" pos:column="46">APLOG_STARTUP<pos:position pos:line="15" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="61">rv<pos:position pos:line="15" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="65">NULL<pos:position pos:line="15" pos:column="69"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="71">APLOGNO<pos:position pos:line="15" pos:column="78"/></name><argument_list pos:line="15" pos:column="78">(<argument><expr><literal type="number" pos:line="15" pos:column="79">00375<pos:position pos:line="15" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="85"/></argument_list></call>
                     <literal type="string" pos:line="16" pos:column="22">"Failed to open the WinNT service manager"<pos:position pos:line="16" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="66"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">rv<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">)<pos:position pos:line="17" pos:column="20"/></operator></expr>;<pos:position pos:line="17" pos:column="21"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="20" pos:column="5">/* ###: utf-ize */</comment>
    <expr_stmt><expr><name pos:line="21" pos:column="5">schService<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">OpenService<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">schSCManager<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">mpm_service_name<pos:position pos:line="21" pos:column="60"/></name></expr></argument>,
                             <argument><expr><name pos:line="22" pos:column="30">SERVICE_START<pos:position pos:line="22" pos:column="43"/></name> <operator pos:line="22" pos:column="44">|<pos:position pos:line="22" pos:column="45"/></operator> <name pos:line="22" pos:column="46">SERVICE_QUERY_STATUS<pos:position pos:line="22" pos:column="66"/></name></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">!<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">schService<pos:position pos:line="23" pos:column="20"/></name></expr>)<pos:position pos:line="23" pos:column="21"/></condition><then pos:line="23" pos:column="21"> <block pos:line="23" pos:column="22">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">rv<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">apr_get_os_error<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">()<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">ap_log_error<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">APLOG_MARK<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">APLOG_ERR<pos:position pos:line="25" pos:column="43"/></name> <operator pos:line="25" pos:column="44">|<pos:position pos:line="25" pos:column="45"/></operator> <name pos:line="25" pos:column="46">APLOG_STARTUP<pos:position pos:line="25" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="61">rv<pos:position pos:line="25" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="65">NULL<pos:position pos:line="25" pos:column="69"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="71">APLOGNO<pos:position pos:line="25" pos:column="78"/></name><argument_list pos:line="25" pos:column="78">(<argument><expr><literal type="number" pos:line="25" pos:column="79">00376<pos:position pos:line="25" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="85"/></argument_list></call>
                     <literal type="string" pos:line="26" pos:column="22">"%s: Failed to open the service."<pos:position pos:line="26" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="57">mpm_display_name<pos:position pos:line="26" pos:column="73"/></name></expr></argument>)<pos:position pos:line="26" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">CloseServiceHandle<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">schSCManager<pos:position pos:line="27" pos:column="40"/></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="42"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><operator pos:line="28" pos:column="16">(<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">rv<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">)<pos:position pos:line="28" pos:column="20"/></operator></expr>;<pos:position pos:line="28" pos:column="21"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><call><name pos:line="31" pos:column="9">QueryServiceStatus<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">schService<pos:position pos:line="31" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="40">&amp;<pos:position pos:line="31" pos:column="45"/></operator><name><name pos:line="31" pos:column="41">globdat<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">.<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="49">ssStatus<pos:position pos:line="31" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call>
        <operator pos:line="32" pos:column="9">&amp;&amp;<pos:position pos:line="32" pos:column="19"/></operator> <operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><name><name pos:line="32" pos:column="13">globdat<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">.<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">ssStatus<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">.<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">dwCurrentState<pos:position pos:line="32" pos:column="44"/></name></name> <operator pos:line="32" pos:column="45">==<pos:position pos:line="32" pos:column="47"/></operator> <name pos:line="32" pos:column="48">SERVICE_RUNNING<pos:position pos:line="32" pos:column="63"/></name><operator pos:line="32" pos:column="63">)<pos:position pos:line="32" pos:column="64"/></operator></expr>)<pos:position pos:line="32" pos:column="65"/></condition><then pos:line="32" pos:column="65"> <block pos:line="32" pos:column="66">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">ap_log_error<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name pos:line="33" pos:column="22">APLOG_MARK<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="34">APLOG_ERR<pos:position pos:line="33" pos:column="43"/></name> <operator pos:line="33" pos:column="44">|<pos:position pos:line="33" pos:column="45"/></operator> <name pos:line="33" pos:column="46">APLOG_STARTUP<pos:position pos:line="33" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="61">0<pos:position pos:line="33" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="64">NULL<pos:position pos:line="33" pos:column="68"/></name></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="70">APLOGNO<pos:position pos:line="33" pos:column="77"/></name><argument_list pos:line="33" pos:column="77">(<argument><expr><literal type="number" pos:line="33" pos:column="78">00377<pos:position pos:line="33" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="84"/></argument_list></call>
                     <literal type="string" pos:line="34" pos:column="22">"Service %s is already started!"<pos:position pos:line="34" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="56">mpm_display_name<pos:position pos:line="34" pos:column="72"/></name></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">CloseServiceHandle<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">schService<pos:position pos:line="35" pos:column="38"/></name></expr></argument>)<pos:position pos:line="35" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">CloseServiceHandle<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><name pos:line="36" pos:column="28">schSCManager<pos:position pos:line="36" pos:column="40"/></name></expr></argument>)<pos:position pos:line="36" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="42"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="40" pos:column="5">start_argv<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <call><name pos:line="40" pos:column="18">malloc<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><operator pos:line="40" pos:column="25">(<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="26">argc<pos:position pos:line="40" pos:column="30"/></name> <operator pos:line="40" pos:column="31">+<pos:position pos:line="40" pos:column="32"/></operator> <literal type="number" pos:line="40" pos:column="33">1<pos:position pos:line="40" pos:column="34"/></literal><operator pos:line="40" pos:column="34">)<pos:position pos:line="40" pos:column="35"/></operator> <operator pos:line="40" pos:column="36">*<pos:position pos:line="40" pos:column="37"/></operator> <sizeof pos:line="40" pos:column="38">sizeof<argument_list pos:line="40" pos:column="44">(<argument><expr><specifier pos:line="40" pos:column="45">const<pos:position pos:line="40" pos:column="50"/></specifier> <name pos:line="40" pos:column="51">char<pos:position pos:line="40" pos:column="55"/></name> <operator pos:line="40" pos:column="56">*<pos:position pos:line="40" pos:column="57"/></operator><operator pos:line="40" pos:column="57">*<pos:position pos:line="40" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">memcpy<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><name pos:line="41" pos:column="12">start_argv<pos:position pos:line="41" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="24">argv<pos:position pos:line="41" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="30">argc<pos:position pos:line="41" pos:column="34"/></name> <operator pos:line="41" pos:column="35">*<pos:position pos:line="41" pos:column="36"/></operator> <sizeof pos:line="41" pos:column="37">sizeof<argument_list pos:line="41" pos:column="43">(<argument><expr><specifier pos:line="41" pos:column="44">const<pos:position pos:line="41" pos:column="49"/></specifier> <name pos:line="41" pos:column="50">char<pos:position pos:line="41" pos:column="54"/></name> <operator pos:line="41" pos:column="55">*<pos:position pos:line="41" pos:column="56"/></operator><operator pos:line="41" pos:column="56">*<pos:position pos:line="41" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="41" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">start_argv<pos:position pos:line="42" pos:column="15"/></name><index pos:line="42" pos:column="15">[<expr><name pos:line="42" pos:column="16">argc<pos:position pos:line="42" pos:column="20"/></name></expr>]<pos:position pos:line="42" pos:column="21"/></index></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <name pos:line="42" pos:column="24">NULL<pos:position pos:line="42" pos:column="28"/></name></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><name pos:line="44" pos:column="5">rv<pos:position pos:line="44" pos:column="7"/></name> <operator pos:line="44" pos:column="8">=<pos:position pos:line="44" pos:column="9"/></operator> <name pos:line="44" pos:column="10">APR_EINIT<pos:position pos:line="44" pos:column="19"/></name></expr>;<pos:position pos:line="44" pos:column="20"/></expr_stmt>
    <comment type="block" pos:line="45" pos:column="5">/* ###: utf-ize */</comment>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><call><name pos:line="46" pos:column="9">StartService<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><name pos:line="46" pos:column="22">schService<pos:position pos:line="46" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="34">argc<pos:position pos:line="46" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="40">start_argv<pos:position pos:line="46" pos:column="50"/></name></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call>
        <operator pos:line="47" pos:column="9">&amp;&amp;<pos:position pos:line="47" pos:column="19"/></operator> <call><name pos:line="47" pos:column="12">signal_service_transition<pos:position pos:line="47" pos:column="37"/></name><argument_list pos:line="47" pos:column="37">(<argument><expr><name pos:line="47" pos:column="38">schService<pos:position pos:line="47" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="50">0<pos:position pos:line="47" pos:column="51"/></literal></expr></argument>, <comment type="block" pos:line="47" pos:column="53">/* test only */</comment>
                                     <argument><expr><name pos:line="48" pos:column="38">SERVICE_START_PENDING<pos:position pos:line="48" pos:column="59"/></name></expr></argument>,
                                     <argument><expr><name pos:line="49" pos:column="38">SERVICE_RUNNING<pos:position pos:line="49" pos:column="53"/></name></expr></argument>)<pos:position pos:line="49" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="55"/></condition><then pos:line="49" pos:column="55">
        <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="9">rv<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <name pos:line="50" pos:column="14">APR_SUCCESS<pos:position pos:line="50" pos:column="25"/></name></expr>;<pos:position pos:line="50" pos:column="26"/></expr_stmt></block></then></if>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">rv<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">!=<pos:position pos:line="51" pos:column="14"/></operator> <name pos:line="51" pos:column="15">APR_SUCCESS<pos:position pos:line="51" pos:column="26"/></name></expr>)<pos:position pos:line="51" pos:column="27"/></condition><then pos:line="51" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="9">rv<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">=<pos:position pos:line="52" pos:column="13"/></operator> <call><name pos:line="52" pos:column="14">apr_get_os_error<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">()<pos:position pos:line="52" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="54" pos:column="5">CloseServiceHandle<pos:position pos:line="54" pos:column="23"/></name><argument_list pos:line="54" pos:column="23">(<argument><expr><name pos:line="54" pos:column="24">schService<pos:position pos:line="54" pos:column="34"/></name></expr></argument>)<pos:position pos:line="54" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">CloseServiceHandle<pos:position pos:line="55" pos:column="23"/></name><argument_list pos:line="55" pos:column="23">(<argument><expr><name pos:line="55" pos:column="24">schSCManager<pos:position pos:line="55" pos:column="36"/></name></expr></argument>)<pos:position pos:line="55" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="38"/></expr_stmt>

    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name pos:line="57" pos:column="9">rv<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">==<pos:position pos:line="57" pos:column="14"/></operator> <name pos:line="57" pos:column="15">APR_SUCCESS<pos:position pos:line="57" pos:column="26"/></name></expr>)<pos:position pos:line="57" pos:column="27"/></condition><then pos:line="57" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="9">fprintf<pos:position pos:line="58" pos:column="16"/></name><argument_list pos:line="58" pos:column="16">(<argument><expr><name pos:line="58" pos:column="17">stderr<pos:position pos:line="58" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="58" pos:column="24">"The %s service is running.\n"<pos:position pos:line="58" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="56">mpm_display_name<pos:position pos:line="58" pos:column="72"/></name></expr></argument>)<pos:position pos:line="58" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="74"/></expr_stmt></block></then>
    <else pos:line="59" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="9">ap_log_error<pos:position pos:line="60" pos:column="21"/></name><argument_list pos:line="60" pos:column="21">(<argument><expr><name pos:line="60" pos:column="22">APLOG_MARK<pos:position pos:line="60" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="34">APLOG_CRIT<pos:position pos:line="60" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="46">rv<pos:position pos:line="60" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="50">NULL<pos:position pos:line="60" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="56">APLOGNO<pos:position pos:line="60" pos:column="63"/></name><argument_list pos:line="60" pos:column="63">(<argument><expr><literal type="number" pos:line="60" pos:column="64">00378<pos:position pos:line="60" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="70"/></argument_list></call>
                     <literal type="string" pos:line="61" pos:column="22">"%s: Failed to start the service process."<pos:position pos:line="61" pos:column="64"/></literal></expr></argument>,
                     <argument><expr><name pos:line="62" pos:column="22">mpm_display_name<pos:position pos:line="62" pos:column="38"/></name></expr></argument>)<pos:position pos:line="62" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="40"/></expr_stmt></block></else></if>

    <return pos:line="64" pos:column="5">return <expr><name pos:line="64" pos:column="12">rv<pos:position pos:line="64" pos:column="14"/></name></expr>;<pos:position pos:line="64" pos:column="15"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

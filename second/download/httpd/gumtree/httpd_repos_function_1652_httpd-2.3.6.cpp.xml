<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1652_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">closed_connection<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">serf_connection_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">conn<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="2" pos:column="31">void<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">closed_baton<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="3" pos:column="31">apr_status_t<pos:position pos:line="3" pos:column="43"/></name></type> <name pos:line="3" pos:column="44">why<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="4" pos:column="31">apr_pool_t<pos:position pos:line="4" pos:column="41"/></name> <modifier pos:line="4" pos:column="42">*<pos:position pos:line="4" pos:column="43"/></modifier></type><name pos:line="4" pos:column="43">pool<pos:position pos:line="4" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="48"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">s_baton_t<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">ctx<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">closed_baton<pos:position pos:line="6" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">why<pos:position pos:line="8" pos:column="12"/></name></expr>)<pos:position pos:line="8" pos:column="13"/></condition><then pos:line="8" pos:column="13"> <block pos:line="8" pos:column="14">{
        <comment type="block" pos:line="9" pos:column="9">/* justin says that error handling isn't done yet. hah. */</comment>
        <comment type="block" pos:line="10" pos:column="9">/* XXXXXX: review */</comment>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">ap_log_rerror<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">APLOG_MARK<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="35">APLOG_ERR<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">why<pos:position pos:line="11" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="51">ctx<pos:position pos:line="11" pos:column="54"/></name><operator pos:line="11" pos:column="54">-&gt;<pos:position pos:line="11" pos:column="59"/></operator><name pos:line="11" pos:column="56">r<pos:position pos:line="11" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="59">"Closed Connection Error"<pos:position pos:line="11" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="86"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">ctx<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">rstatus<pos:position pos:line="12" pos:column="21"/></name></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="12" pos:column="50"/></name></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">mpm_supprts_serf<pos:position pos:line="15" pos:column="25"/></name></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26"> <block pos:line="15" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">ap_mpm_register_timed_callback<pos:position pos:line="16" pos:column="39"/></name><argument_list pos:line="16" pos:column="39">(<argument><expr><call><name pos:line="16" pos:column="40">apr_time_from_msec<pos:position pos:line="16" pos:column="58"/></name><argument_list pos:line="16" pos:column="58">(<argument><expr><literal type="number" pos:line="16" pos:column="59">1<pos:position pos:line="16" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></call></expr></argument>,
                                       <argument><expr><name pos:line="17" pos:column="40">timed_cleanup_callback<pos:position pos:line="17" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="64">ctx<pos:position pos:line="17" pos:column="67"/></name></expr></argument>)<pos:position pos:line="17" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">ctx<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">-&gt;<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="10">keep_reading<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <literal type="number" pos:line="19" pos:column="25">0<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

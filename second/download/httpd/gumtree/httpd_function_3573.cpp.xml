<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3573.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name><modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier> <name pos:line="1" pos:column="14">APR_THREAD_FUNC<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">wd_worker<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">apr_thread_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">thread<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">void<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">data<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ap_watchdog_t<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">w<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><operator pos:line="3" pos:column="24">(<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="25">ap_watchdog_t<pos:position pos:line="3" pos:column="38"/></name> <operator pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></operator><operator pos:line="3" pos:column="40">)<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="41">data<pos:position pos:line="3" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">locked<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">probed<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">inited<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">mpmq_s<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="10" pos:column="5">w<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">-&gt;<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="8">pool<pos:position pos:line="10" pos:column="12"/></name></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">apr_thread_pool_get<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">thread<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">w<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">-&gt;<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="8">is_running<pos:position pos:line="11" pos:column="18"/></name></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <literal type="number" pos:line="11" pos:column="21">1<pos:position pos:line="11" pos:column="22"/></literal></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">apr_thread_mutex_unlock<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name><name pos:line="13" pos:column="29">w<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">startup<pos:position pos:line="13" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">w<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">mutex<pos:position pos:line="14" pos:column="17"/></name></name></expr>)<pos:position pos:line="14" pos:column="18"/></condition><then pos:line="14" pos:column="18"> <block pos:line="14" pos:column="19">{
        <while pos:line="15" pos:column="9">while <condition pos:line="15" pos:column="15">(<expr><name><name pos:line="15" pos:column="16">w<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">is_running<pos:position pos:line="15" pos:column="29"/></name></name></expr>)<pos:position pos:line="15" pos:column="30"/></condition> <block pos:line="15" pos:column="31">{
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><call><name pos:line="16" pos:column="17">ap_mpm_query<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">AP_MPMQ_MPM_STATE<pos:position pos:line="16" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="49">&amp;<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="50">mpmq_s<pos:position pos:line="16" pos:column="56"/></name></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call> <operator pos:line="16" pos:column="58">!=<pos:position pos:line="16" pos:column="60"/></operator> <name pos:line="16" pos:column="61">APR_SUCCESS<pos:position pos:line="16" pos:column="72"/></name></expr>)<pos:position pos:line="16" pos:column="73"/></condition><then pos:line="16" pos:column="73"> <block pos:line="16" pos:column="74">{
                <expr_stmt><expr><name><name pos:line="17" pos:column="17">w<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">is_running<pos:position pos:line="17" pos:column="30"/></name></name> <operator pos:line="17" pos:column="31">=<pos:position pos:line="17" pos:column="32"/></operator> <literal type="number" pos:line="17" pos:column="33">0<pos:position pos:line="17" pos:column="34"/></literal></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
                <break pos:line="18" pos:column="17">break;<pos:position pos:line="18" pos:column="23"/></break>
            }<pos:position pos:line="19" pos:column="14"/></block></then></if>
            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><name pos:line="20" pos:column="17">mpmq_s<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">==<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="27">AP_MPMQ_STOPPING<pos:position pos:line="20" pos:column="43"/></name></expr>)<pos:position pos:line="20" pos:column="44"/></condition><then pos:line="20" pos:column="44"> <block pos:line="20" pos:column="45">{
                <expr_stmt><expr><name><name pos:line="21" pos:column="17">w<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">is_running<pos:position pos:line="21" pos:column="30"/></name></name> <operator pos:line="21" pos:column="31">=<pos:position pos:line="21" pos:column="32"/></operator> <literal type="number" pos:line="21" pos:column="33">0<pos:position pos:line="21" pos:column="34"/></literal></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
                <break pos:line="22" pos:column="17">break;<pos:position pos:line="22" pos:column="23"/></break>
            }<pos:position pos:line="23" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="24" pos:column="13">rv<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <call><name pos:line="24" pos:column="18">apr_proc_mutex_trylock<pos:position pos:line="24" pos:column="40"/></name><argument_list pos:line="24" pos:column="40">(<argument><expr><name><name pos:line="24" pos:column="41">w<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">-&gt;<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="44">mutex<pos:position pos:line="24" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><name pos:line="25" pos:column="17">rv<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">==<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="23">APR_SUCCESS<pos:position pos:line="25" pos:column="34"/></name></expr>)<pos:position pos:line="25" pos:column="35"/></condition><then pos:line="25" pos:column="35"> <block pos:line="25" pos:column="36">{
                <if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">probed<pos:position pos:line="26" pos:column="27"/></name></expr>)<pos:position pos:line="26" pos:column="28"/></condition><then pos:line="26" pos:column="28"> <block pos:line="26" pos:column="29">{
                    <comment type="block" pos:line="27" pos:column="21">/* Sleep after we were locked
                     * up to 1 second. Httpd can be
                     * in the middle of shutdown, and
                     * our child didn't yet received
                     * the shutdown signal.
                     */</comment>
                    <expr_stmt><expr><name pos:line="33" pos:column="21">probed<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">=<pos:position pos:line="33" pos:column="29"/></operator> <literal type="number" pos:line="33" pos:column="30">10<pos:position pos:line="33" pos:column="32"/></literal></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
                    <while pos:line="34" pos:column="21">while <condition pos:line="34" pos:column="27">(<expr><name><name pos:line="34" pos:column="28">w<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">is_running<pos:position pos:line="34" pos:column="41"/></name></name> <operator pos:line="34" pos:column="42">&amp;&amp;<pos:position pos:line="34" pos:column="52"/></operator> <name pos:line="34" pos:column="45">probed<pos:position pos:line="34" pos:column="51"/></name> <operator pos:line="34" pos:column="52">&gt;<pos:position pos:line="34" pos:column="56"/></operator> <literal type="number" pos:line="34" pos:column="54">0<pos:position pos:line="34" pos:column="55"/></literal></expr>)<pos:position pos:line="34" pos:column="56"/></condition> <block pos:line="34" pos:column="57">{
                        <expr_stmt><expr><call><name pos:line="35" pos:column="25">apr_sleep<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name pos:line="35" pos:column="35">AP_WD_TM_INTERVAL<pos:position pos:line="35" pos:column="52"/></name></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="54"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="36" pos:column="25">probed<pos:position pos:line="36" pos:column="31"/></name><operator pos:line="36" pos:column="31">--<pos:position pos:line="36" pos:column="33"/></operator></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
                        <if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><call><name pos:line="37" pos:column="29">ap_mpm_query<pos:position pos:line="37" pos:column="41"/></name><argument_list pos:line="37" pos:column="41">(<argument><expr><name pos:line="37" pos:column="42">AP_MPMQ_MPM_STATE<pos:position pos:line="37" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="61">&amp;<pos:position pos:line="37" pos:column="66"/></operator><name pos:line="37" pos:column="62">mpmq_s<pos:position pos:line="37" pos:column="68"/></name></expr></argument>)<pos:position pos:line="37" pos:column="69"/></argument_list></call> <operator pos:line="37" pos:column="70">!=<pos:position pos:line="37" pos:column="72"/></operator> <name pos:line="37" pos:column="73">APR_SUCCESS<pos:position pos:line="37" pos:column="84"/></name></expr>)<pos:position pos:line="37" pos:column="85"/></condition><then pos:line="37" pos:column="85"> <block pos:line="37" pos:column="86">{
                            <expr_stmt><expr><name><name pos:line="38" pos:column="29">w<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">-&gt;<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="32">is_running<pos:position pos:line="38" pos:column="42"/></name></name> <operator pos:line="38" pos:column="43">=<pos:position pos:line="38" pos:column="44"/></operator> <literal type="number" pos:line="38" pos:column="45">0<pos:position pos:line="38" pos:column="46"/></literal></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt>
                            <break pos:line="39" pos:column="29">break;<pos:position pos:line="39" pos:column="35"/></break>
                        }<pos:position pos:line="40" pos:column="26"/></block></then></if>
                        <if pos:line="41" pos:column="25">if <condition pos:line="41" pos:column="28">(<expr><name pos:line="41" pos:column="29">mpmq_s<pos:position pos:line="41" pos:column="35"/></name> <operator pos:line="41" pos:column="36">==<pos:position pos:line="41" pos:column="38"/></operator> <name pos:line="41" pos:column="39">AP_MPMQ_STOPPING<pos:position pos:line="41" pos:column="55"/></name></expr>)<pos:position pos:line="41" pos:column="56"/></condition><then pos:line="41" pos:column="56"> <block pos:line="41" pos:column="57">{
                            <expr_stmt><expr><name><name pos:line="42" pos:column="29">w<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">-&gt;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="32">is_running<pos:position pos:line="42" pos:column="42"/></name></name> <operator pos:line="42" pos:column="43">=<pos:position pos:line="42" pos:column="44"/></operator> <literal type="number" pos:line="42" pos:column="45">0<pos:position pos:line="42" pos:column="46"/></literal></expr>;<pos:position pos:line="42" pos:column="47"/></expr_stmt>
                            <break pos:line="43" pos:column="29">break;<pos:position pos:line="43" pos:column="35"/></break>
                        }<pos:position pos:line="44" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="45" pos:column="22"/></block></while>
                }<pos:position pos:line="46" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="47" pos:column="17">locked<pos:position pos:line="47" pos:column="23"/></name> <operator pos:line="47" pos:column="24">=<pos:position pos:line="47" pos:column="25"/></operator> <literal type="number" pos:line="47" pos:column="26">1<pos:position pos:line="47" pos:column="27"/></literal></expr>;<pos:position pos:line="47" pos:column="28"/></expr_stmt>
                <break pos:line="48" pos:column="17">break;<pos:position pos:line="48" pos:column="23"/></break>
            }<pos:position pos:line="49" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="50" pos:column="13">probed<pos:position pos:line="50" pos:column="19"/></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <literal type="number" pos:line="50" pos:column="22">1<pos:position pos:line="50" pos:column="23"/></literal></expr>;<pos:position pos:line="50" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">apr_sleep<pos:position pos:line="51" pos:column="22"/></name><argument_list pos:line="51" pos:column="22">(<argument><expr><name pos:line="51" pos:column="23">AP_WD_TM_SLICE<pos:position pos:line="51" pos:column="37"/></name></expr></argument>)<pos:position pos:line="51" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="52" pos:column="10"/></block></while>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name><name pos:line="54" pos:column="9">w<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">-&gt;<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="12">is_running<pos:position pos:line="54" pos:column="22"/></name></name></expr>)<pos:position pos:line="54" pos:column="23"/></condition><then pos:line="54" pos:column="23"> <block pos:line="54" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="55" pos:column="9">watchdog_list_t<pos:position pos:line="55" pos:column="24"/></name> <modifier pos:line="55" pos:column="25">*<pos:position pos:line="55" pos:column="26"/></modifier></type><name pos:line="55" pos:column="26">wl<pos:position pos:line="55" pos:column="28"/></name> <init pos:line="55" pos:column="29">= <expr><name><name pos:line="55" pos:column="31">w<pos:position pos:line="55" pos:column="32"/></name><operator pos:line="55" pos:column="32">-&gt;<pos:position pos:line="55" pos:column="37"/></operator><name pos:line="55" pos:column="34">callbacks<pos:position pos:line="55" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="55" pos:column="44"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">ap_log_error<pos:position pos:line="56" pos:column="21"/></name><argument_list pos:line="56" pos:column="21">(<argument><expr><name pos:line="56" pos:column="22">APLOG_MARK<pos:position pos:line="56" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="34">APLOG_DEBUG<pos:position pos:line="56" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="47">0<pos:position pos:line="56" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="50">wd_server_conf<pos:position pos:line="56" pos:column="64"/></name><operator pos:line="56" pos:column="64">-&gt;<pos:position pos:line="56" pos:column="69"/></operator><name pos:line="56" pos:column="66">s<pos:position pos:line="56" pos:column="67"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="57" pos:column="22">"%sWatchdog (%s) running (%"<pos:position pos:line="57" pos:column="50"/></literal> <name pos:line="57" pos:column="51">APR_PID_T_FMT<pos:position pos:line="57" pos:column="64"/></name> <literal type="string" pos:line="57" pos:column="65">")"<pos:position pos:line="57" pos:column="68"/></literal></expr></argument>,
                     <argument><expr><ternary><condition><expr><name><name pos:line="58" pos:column="22">w<pos:position pos:line="58" pos:column="23"/></name><operator pos:line="58" pos:column="23">-&gt;<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="25">singleton<pos:position pos:line="58" pos:column="34"/></name></name></expr> ?<pos:position pos:line="58" pos:column="36"/></condition><then pos:line="58" pos:column="36"> <expr><literal type="string" pos:line="58" pos:column="37">"Singleton"<pos:position pos:line="58" pos:column="48"/></literal></expr> <pos:position pos:line="58" pos:column="49"/></then><else pos:line="58" pos:column="49">: <expr><literal type="string" pos:line="58" pos:column="51">""<pos:position pos:line="58" pos:column="53"/></literal></expr></else></ternary></expr></argument>,
                     <argument><expr><name><name pos:line="59" pos:column="22">w<pos:position pos:line="59" pos:column="23"/></name><operator pos:line="59" pos:column="23">-&gt;<pos:position pos:line="59" pos:column="28"/></operator><name pos:line="59" pos:column="25">name<pos:position pos:line="59" pos:column="29"/></name></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="31">getpid<pos:position pos:line="59" pos:column="37"/></name><argument_list pos:line="59" pos:column="37">()<pos:position pos:line="59" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">apr_time_clock_hires<pos:position pos:line="60" pos:column="29"/></name><argument_list pos:line="60" pos:column="29">(<argument><expr><name><name pos:line="60" pos:column="30">w<pos:position pos:line="60" pos:column="31"/></name><operator pos:line="60" pos:column="31">-&gt;<pos:position pos:line="60" pos:column="36"/></operator><name pos:line="60" pos:column="33">pool<pos:position pos:line="60" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="39"/></expr_stmt>
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">wl<pos:position pos:line="61" pos:column="15"/></name></expr>)<pos:position pos:line="61" pos:column="16"/></condition><then pos:line="61" pos:column="16"> <block pos:line="61" pos:column="17">{
            <decl_stmt><decl><type><name pos:line="62" pos:column="13">apr_pool_t<pos:position pos:line="62" pos:column="23"/></name> <modifier pos:line="62" pos:column="24">*<pos:position pos:line="62" pos:column="25"/></modifier></type><name pos:line="62" pos:column="25">ctx<pos:position pos:line="62" pos:column="28"/></name> <init pos:line="62" pos:column="29">= <expr><name pos:line="62" pos:column="31">NULL<pos:position pos:line="62" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="62" pos:column="36"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">apr_pool_create<pos:position pos:line="63" pos:column="28"/></name><argument_list pos:line="63" pos:column="28">(<argument><expr><operator pos:line="63" pos:column="29">&amp;<pos:position pos:line="63" pos:column="34"/></operator><name pos:line="63" pos:column="30">ctx<pos:position pos:line="63" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="35">w<pos:position pos:line="63" pos:column="36"/></name><operator pos:line="63" pos:column="36">-&gt;<pos:position pos:line="63" pos:column="41"/></operator><name pos:line="63" pos:column="38">pool<pos:position pos:line="63" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="44"/></expr_stmt>
            <while pos:line="64" pos:column="13">while <condition pos:line="64" pos:column="19">(<expr><name pos:line="64" pos:column="20">wl<pos:position pos:line="64" pos:column="22"/></name> <operator pos:line="64" pos:column="23">&amp;&amp;<pos:position pos:line="64" pos:column="33"/></operator> <name><name pos:line="64" pos:column="26">w<pos:position pos:line="64" pos:column="27"/></name><operator pos:line="64" pos:column="27">-&gt;<pos:position pos:line="64" pos:column="32"/></operator><name pos:line="64" pos:column="29">is_running<pos:position pos:line="64" pos:column="39"/></name></name></expr>)<pos:position pos:line="64" pos:column="40"/></condition> <block pos:line="64" pos:column="41">{
                <comment type="block" pos:line="65" pos:column="17">/* Execute watchdog callback */</comment>
                <expr_stmt><expr><name><name pos:line="66" pos:column="17">wl<pos:position pos:line="66" pos:column="19"/></name><operator pos:line="66" pos:column="19">-&gt;<pos:position pos:line="66" pos:column="24"/></operator><name pos:line="66" pos:column="21">status<pos:position pos:line="66" pos:column="27"/></name></name> <operator pos:line="66" pos:column="28">=<pos:position pos:line="66" pos:column="29"/></operator> <call pos:line="66" pos:column="30">(<modifier pos:line="66" pos:column="31">*<pos:position pos:line="66" pos:column="32"/></modifier><name><name pos:line="66" pos:column="32">wl<pos:position pos:line="66" pos:column="34"/></name><operator pos:line="66" pos:column="34">-&gt;<pos:position pos:line="66" pos:column="39"/></operator><name pos:line="66" pos:column="36">callback_fn<pos:position pos:line="66" pos:column="47"/></name></name>)<argument_list pos:line="66" pos:column="48">(<argument><expr><name pos:line="66" pos:column="49">AP_WATCHDOG_STATE_STARTING<pos:position pos:line="66" pos:column="75"/></name></expr></argument>,
                                                <argument><expr><operator pos:line="67" pos:column="49">(<pos:position pos:line="67" pos:column="50"/></operator><name pos:line="67" pos:column="50">void<pos:position pos:line="67" pos:column="54"/></name> <operator pos:line="67" pos:column="55">*<pos:position pos:line="67" pos:column="56"/></operator><operator pos:line="67" pos:column="56">)<pos:position pos:line="67" pos:column="57"/></operator><name><name pos:line="67" pos:column="57">wl<pos:position pos:line="67" pos:column="59"/></name><operator pos:line="67" pos:column="59">-&gt;<pos:position pos:line="67" pos:column="64"/></operator><name pos:line="67" pos:column="61">data<pos:position pos:line="67" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="67">ctx<pos:position pos:line="67" pos:column="70"/></name></expr></argument>)<pos:position pos:line="67" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="72"/></expr_stmt>
                <expr_stmt><expr><name pos:line="68" pos:column="17">wl<pos:position pos:line="68" pos:column="19"/></name> <operator pos:line="68" pos:column="20">=<pos:position pos:line="68" pos:column="21"/></operator> <name><name pos:line="68" pos:column="22">wl<pos:position pos:line="68" pos:column="24"/></name><operator pos:line="68" pos:column="24">-&gt;<pos:position pos:line="68" pos:column="29"/></operator><name pos:line="68" pos:column="26">next<pos:position pos:line="68" pos:column="30"/></name></name></expr>;<pos:position pos:line="68" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="69" pos:column="14"/></block></while>
            <expr_stmt><expr><call><name pos:line="70" pos:column="13">apr_pool_destroy<pos:position pos:line="70" pos:column="29"/></name><argument_list pos:line="70" pos:column="29">(<argument><expr><name pos:line="70" pos:column="30">ctx<pos:position pos:line="70" pos:column="33"/></name></expr></argument>)<pos:position pos:line="70" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="71" pos:column="10"/></block></then>
        <else pos:line="72" pos:column="9">else <block pos:line="72" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">ap_run_watchdog_init<pos:position pos:line="73" pos:column="33"/></name><argument_list pos:line="73" pos:column="33">(<argument><expr><name><name pos:line="73" pos:column="34">wd_server_conf<pos:position pos:line="73" pos:column="48"/></name><operator pos:line="73" pos:column="48">-&gt;<pos:position pos:line="73" pos:column="53"/></operator><name pos:line="73" pos:column="50">s<pos:position pos:line="73" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="53">w<pos:position pos:line="73" pos:column="54"/></name><operator pos:line="73" pos:column="54">-&gt;<pos:position pos:line="73" pos:column="59"/></operator><name pos:line="73" pos:column="56">name<pos:position pos:line="73" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="62">w<pos:position pos:line="73" pos:column="63"/></name><operator pos:line="73" pos:column="63">-&gt;<pos:position pos:line="73" pos:column="68"/></operator><name pos:line="73" pos:column="65">pool<pos:position pos:line="73" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><name pos:line="74" pos:column="13">inited<pos:position pos:line="74" pos:column="19"/></name> <operator pos:line="74" pos:column="20">=<pos:position pos:line="74" pos:column="21"/></operator> <literal type="number" pos:line="74" pos:column="22">1<pos:position pos:line="74" pos:column="23"/></literal></expr>;<pos:position pos:line="74" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="75" pos:column="10"/></block></else></if>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="78" pos:column="5">/* Main execution loop */</comment>
    <while pos:line="79" pos:column="5">while <condition pos:line="79" pos:column="11">(<expr><name><name pos:line="79" pos:column="12">w<pos:position pos:line="79" pos:column="13"/></name><operator pos:line="79" pos:column="13">-&gt;<pos:position pos:line="79" pos:column="18"/></operator><name pos:line="79" pos:column="15">is_running<pos:position pos:line="79" pos:column="25"/></name></name></expr>)<pos:position pos:line="79" pos:column="26"/></condition> <block pos:line="79" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="80" pos:column="9">apr_pool_t<pos:position pos:line="80" pos:column="19"/></name> <modifier pos:line="80" pos:column="20">*<pos:position pos:line="80" pos:column="21"/></modifier></type><name pos:line="80" pos:column="21">ctx<pos:position pos:line="80" pos:column="24"/></name> <init pos:line="80" pos:column="25">= <expr><name pos:line="80" pos:column="27">NULL<pos:position pos:line="80" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="80" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="81" pos:column="9">apr_time_t<pos:position pos:line="81" pos:column="19"/></name></type> <name pos:line="81" pos:column="20">curr<pos:position pos:line="81" pos:column="24"/></name></decl>;<pos:position pos:line="81" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="82" pos:column="9">watchdog_list_t<pos:position pos:line="82" pos:column="24"/></name> <modifier pos:line="82" pos:column="25">*<pos:position pos:line="82" pos:column="26"/></modifier></type><name pos:line="82" pos:column="26">wl<pos:position pos:line="82" pos:column="28"/></name> <init pos:line="82" pos:column="29">= <expr><name><name pos:line="82" pos:column="31">w<pos:position pos:line="82" pos:column="32"/></name><operator pos:line="82" pos:column="32">-&gt;<pos:position pos:line="82" pos:column="37"/></operator><name pos:line="82" pos:column="34">callbacks<pos:position pos:line="82" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="82" pos:column="44"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="84" pos:column="9">apr_sleep<pos:position pos:line="84" pos:column="18"/></name><argument_list pos:line="84" pos:column="18">(<argument><expr><name pos:line="84" pos:column="19">AP_WD_TM_SLICE<pos:position pos:line="84" pos:column="33"/></name></expr></argument>)<pos:position pos:line="84" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="35"/></expr_stmt>
        <if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><call><name pos:line="85" pos:column="13">ap_mpm_query<pos:position pos:line="85" pos:column="25"/></name><argument_list pos:line="85" pos:column="25">(<argument><expr><name pos:line="85" pos:column="26">AP_MPMQ_MPM_STATE<pos:position pos:line="85" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="45">&amp;<pos:position pos:line="85" pos:column="50"/></operator><name pos:line="85" pos:column="46">mpmq_s<pos:position pos:line="85" pos:column="52"/></name></expr></argument>)<pos:position pos:line="85" pos:column="53"/></argument_list></call> <operator pos:line="85" pos:column="54">!=<pos:position pos:line="85" pos:column="56"/></operator> <name pos:line="85" pos:column="57">APR_SUCCESS<pos:position pos:line="85" pos:column="68"/></name></expr>)<pos:position pos:line="85" pos:column="69"/></condition><then pos:line="85" pos:column="69"> <block pos:line="85" pos:column="70">{
            <expr_stmt><expr><name><name pos:line="86" pos:column="13">w<pos:position pos:line="86" pos:column="14"/></name><operator pos:line="86" pos:column="14">-&gt;<pos:position pos:line="86" pos:column="19"/></operator><name pos:line="86" pos:column="16">is_running<pos:position pos:line="86" pos:column="26"/></name></name> <operator pos:line="86" pos:column="27">=<pos:position pos:line="86" pos:column="28"/></operator> <literal type="number" pos:line="86" pos:column="29">0<pos:position pos:line="86" pos:column="30"/></literal></expr>;<pos:position pos:line="86" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="87" pos:column="10"/></block></then></if>
        <if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><name pos:line="88" pos:column="13">mpmq_s<pos:position pos:line="88" pos:column="19"/></name> <operator pos:line="88" pos:column="20">==<pos:position pos:line="88" pos:column="22"/></operator> <name pos:line="88" pos:column="23">AP_MPMQ_STOPPING<pos:position pos:line="88" pos:column="39"/></name></expr>)<pos:position pos:line="88" pos:column="40"/></condition><then pos:line="88" pos:column="40"> <block pos:line="88" pos:column="41">{
            <expr_stmt><expr><name><name pos:line="89" pos:column="13">w<pos:position pos:line="89" pos:column="14"/></name><operator pos:line="89" pos:column="14">-&gt;<pos:position pos:line="89" pos:column="19"/></operator><name pos:line="89" pos:column="16">is_running<pos:position pos:line="89" pos:column="26"/></name></name> <operator pos:line="89" pos:column="27">=<pos:position pos:line="89" pos:column="28"/></operator> <literal type="number" pos:line="89" pos:column="29">0<pos:position pos:line="89" pos:column="30"/></literal></expr>;<pos:position pos:line="89" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="90" pos:column="10"/></block></then></if>
        <if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><operator pos:line="91" pos:column="13">!<pos:position pos:line="91" pos:column="14"/></operator><name><name pos:line="91" pos:column="14">w<pos:position pos:line="91" pos:column="15"/></name><operator pos:line="91" pos:column="15">-&gt;<pos:position pos:line="91" pos:column="20"/></operator><name pos:line="91" pos:column="17">is_running<pos:position pos:line="91" pos:column="27"/></name></name></expr>)<pos:position pos:line="91" pos:column="28"/></condition><then pos:line="91" pos:column="28"> <block pos:line="91" pos:column="29">{
            <break pos:line="92" pos:column="13">break;<pos:position pos:line="92" pos:column="19"/></break>
        }<pos:position pos:line="93" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="94" pos:column="9">curr<pos:position pos:line="94" pos:column="13"/></name> <operator pos:line="94" pos:column="14">=<pos:position pos:line="94" pos:column="15"/></operator> <call><name pos:line="94" pos:column="16">apr_time_now<pos:position pos:line="94" pos:column="28"/></name><argument_list pos:line="94" pos:column="28">()<pos:position pos:line="94" pos:column="30"/></argument_list></call> <operator pos:line="94" pos:column="31">-<pos:position pos:line="94" pos:column="32"/></operator> <name pos:line="94" pos:column="33">AP_WD_TM_SLICE<pos:position pos:line="94" pos:column="47"/></name></expr>;<pos:position pos:line="94" pos:column="48"/></expr_stmt>
        <while pos:line="95" pos:column="9">while <condition pos:line="95" pos:column="15">(<expr><name pos:line="95" pos:column="16">wl<pos:position pos:line="95" pos:column="18"/></name> <operator pos:line="95" pos:column="19">&amp;&amp;<pos:position pos:line="95" pos:column="29"/></operator> <name><name pos:line="95" pos:column="22">w<pos:position pos:line="95" pos:column="23"/></name><operator pos:line="95" pos:column="23">-&gt;<pos:position pos:line="95" pos:column="28"/></operator><name pos:line="95" pos:column="25">is_running<pos:position pos:line="95" pos:column="35"/></name></name></expr>)<pos:position pos:line="95" pos:column="36"/></condition> <block pos:line="95" pos:column="37">{
            <if pos:line="96" pos:column="13">if <condition pos:line="96" pos:column="16">(<expr><name><name pos:line="96" pos:column="17">wl<pos:position pos:line="96" pos:column="19"/></name><operator pos:line="96" pos:column="19">-&gt;<pos:position pos:line="96" pos:column="24"/></operator><name pos:line="96" pos:column="21">status<pos:position pos:line="96" pos:column="27"/></name></name> <operator pos:line="96" pos:column="28">==<pos:position pos:line="96" pos:column="30"/></operator> <name pos:line="96" pos:column="31">APR_SUCCESS<pos:position pos:line="96" pos:column="42"/></name></expr>)<pos:position pos:line="96" pos:column="43"/></condition><then pos:line="96" pos:column="43"> <block pos:line="96" pos:column="44">{
                <expr_stmt><expr><name><name pos:line="97" pos:column="17">wl<pos:position pos:line="97" pos:column="19"/></name><operator pos:line="97" pos:column="19">-&gt;<pos:position pos:line="97" pos:column="24"/></operator><name pos:line="97" pos:column="21">step<pos:position pos:line="97" pos:column="25"/></name></name> <operator pos:line="97" pos:column="26">+=<pos:position pos:line="97" pos:column="28"/></operator> <operator pos:line="97" pos:column="29">(<pos:position pos:line="97" pos:column="30"/></operator><call><name pos:line="97" pos:column="30">apr_time_now<pos:position pos:line="97" pos:column="42"/></name><argument_list pos:line="97" pos:column="42">()<pos:position pos:line="97" pos:column="44"/></argument_list></call> <operator pos:line="97" pos:column="45">-<pos:position pos:line="97" pos:column="46"/></operator> <name pos:line="97" pos:column="47">curr<pos:position pos:line="97" pos:column="51"/></name><operator pos:line="97" pos:column="51">)<pos:position pos:line="97" pos:column="52"/></operator></expr>;<pos:position pos:line="97" pos:column="53"/></expr_stmt>
                <if pos:line="98" pos:column="17">if <condition pos:line="98" pos:column="20">(<expr><name><name pos:line="98" pos:column="21">wl<pos:position pos:line="98" pos:column="23"/></name><operator pos:line="98" pos:column="23">-&gt;<pos:position pos:line="98" pos:column="28"/></operator><name pos:line="98" pos:column="25">step<pos:position pos:line="98" pos:column="29"/></name></name> <operator pos:line="98" pos:column="30">&gt;=<pos:position pos:line="98" pos:column="35"/></operator> <name><name pos:line="98" pos:column="33">wl<pos:position pos:line="98" pos:column="35"/></name><operator pos:line="98" pos:column="35">-&gt;<pos:position pos:line="98" pos:column="40"/></operator><name pos:line="98" pos:column="37">interval<pos:position pos:line="98" pos:column="45"/></name></name></expr>)<pos:position pos:line="98" pos:column="46"/></condition><then pos:line="98" pos:column="46"> <block pos:line="98" pos:column="47">{
                    <if pos:line="99" pos:column="21">if <condition pos:line="99" pos:column="24">(<expr><operator pos:line="99" pos:column="25">!<pos:position pos:line="99" pos:column="26"/></operator><name pos:line="99" pos:column="26">ctx<pos:position pos:line="99" pos:column="29"/></name></expr>)<pos:position pos:line="99" pos:column="30"/></condition><then pos:line="99" pos:column="30">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="100" pos:column="25">apr_pool_create<pos:position pos:line="100" pos:column="40"/></name><argument_list pos:line="100" pos:column="40">(<argument><expr><operator pos:line="100" pos:column="41">&amp;<pos:position pos:line="100" pos:column="46"/></operator><name pos:line="100" pos:column="42">ctx<pos:position pos:line="100" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="47">w<pos:position pos:line="100" pos:column="48"/></name><operator pos:line="100" pos:column="48">-&gt;<pos:position pos:line="100" pos:column="53"/></operator><name pos:line="100" pos:column="50">pool<pos:position pos:line="100" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="56"/></expr_stmt></block></then></if>
                    <expr_stmt><expr><name><name pos:line="101" pos:column="21">wl<pos:position pos:line="101" pos:column="23"/></name><operator pos:line="101" pos:column="23">-&gt;<pos:position pos:line="101" pos:column="28"/></operator><name pos:line="101" pos:column="25">step<pos:position pos:line="101" pos:column="29"/></name></name> <operator pos:line="101" pos:column="30">=<pos:position pos:line="101" pos:column="31"/></operator> <literal type="number" pos:line="101" pos:column="32">0<pos:position pos:line="101" pos:column="33"/></literal></expr>;<pos:position pos:line="101" pos:column="34"/></expr_stmt>
                    <comment type="block" pos:line="102" pos:column="21">/* Execute watchdog callback */</comment>
                    <expr_stmt><expr><name><name pos:line="103" pos:column="21">wl<pos:position pos:line="103" pos:column="23"/></name><operator pos:line="103" pos:column="23">-&gt;<pos:position pos:line="103" pos:column="28"/></operator><name pos:line="103" pos:column="25">status<pos:position pos:line="103" pos:column="31"/></name></name> <operator pos:line="103" pos:column="32">=<pos:position pos:line="103" pos:column="33"/></operator> <call pos:line="103" pos:column="34">(<modifier pos:line="103" pos:column="35">*<pos:position pos:line="103" pos:column="36"/></modifier><name><name pos:line="103" pos:column="36">wl<pos:position pos:line="103" pos:column="38"/></name><operator pos:line="103" pos:column="38">-&gt;<pos:position pos:line="103" pos:column="43"/></operator><name pos:line="103" pos:column="40">callback_fn<pos:position pos:line="103" pos:column="51"/></name></name>)<argument_list pos:line="103" pos:column="52">(<argument><expr><name pos:line="103" pos:column="53">AP_WATCHDOG_STATE_RUNNING<pos:position pos:line="103" pos:column="78"/></name></expr></argument>,
                                                    <argument><expr><operator pos:line="104" pos:column="53">(<pos:position pos:line="104" pos:column="54"/></operator><name pos:line="104" pos:column="54">void<pos:position pos:line="104" pos:column="58"/></name> <operator pos:line="104" pos:column="59">*<pos:position pos:line="104" pos:column="60"/></operator><operator pos:line="104" pos:column="60">)<pos:position pos:line="104" pos:column="61"/></operator><name><name pos:line="104" pos:column="61">wl<pos:position pos:line="104" pos:column="63"/></name><operator pos:line="104" pos:column="63">-&gt;<pos:position pos:line="104" pos:column="68"/></operator><name pos:line="104" pos:column="65">data<pos:position pos:line="104" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="71">ctx<pos:position pos:line="104" pos:column="74"/></name></expr></argument>)<pos:position pos:line="104" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="76"/></expr_stmt>
                    <if pos:line="105" pos:column="21">if <condition pos:line="105" pos:column="24">(<expr><call><name pos:line="105" pos:column="25">ap_mpm_query<pos:position pos:line="105" pos:column="37"/></name><argument_list pos:line="105" pos:column="37">(<argument><expr><name pos:line="105" pos:column="38">AP_MPMQ_MPM_STATE<pos:position pos:line="105" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="105" pos:column="57">&amp;<pos:position pos:line="105" pos:column="62"/></operator><name pos:line="105" pos:column="58">mpmq_s<pos:position pos:line="105" pos:column="64"/></name></expr></argument>)<pos:position pos:line="105" pos:column="65"/></argument_list></call> <operator pos:line="105" pos:column="66">!=<pos:position pos:line="105" pos:column="68"/></operator> <name pos:line="105" pos:column="69">APR_SUCCESS<pos:position pos:line="105" pos:column="80"/></name></expr>)<pos:position pos:line="105" pos:column="81"/></condition><then pos:line="105" pos:column="81"> <block pos:line="105" pos:column="82">{
                        <expr_stmt><expr><name><name pos:line="106" pos:column="25">w<pos:position pos:line="106" pos:column="26"/></name><operator pos:line="106" pos:column="26">-&gt;<pos:position pos:line="106" pos:column="31"/></operator><name pos:line="106" pos:column="28">is_running<pos:position pos:line="106" pos:column="38"/></name></name> <operator pos:line="106" pos:column="39">=<pos:position pos:line="106" pos:column="40"/></operator> <literal type="number" pos:line="106" pos:column="41">0<pos:position pos:line="106" pos:column="42"/></literal></expr>;<pos:position pos:line="106" pos:column="43"/></expr_stmt>
                    }<pos:position pos:line="107" pos:column="22"/></block></then></if>
                    <if pos:line="108" pos:column="21">if <condition pos:line="108" pos:column="24">(<expr><name pos:line="108" pos:column="25">mpmq_s<pos:position pos:line="108" pos:column="31"/></name> <operator pos:line="108" pos:column="32">==<pos:position pos:line="108" pos:column="34"/></operator> <name pos:line="108" pos:column="35">AP_MPMQ_STOPPING<pos:position pos:line="108" pos:column="51"/></name></expr>)<pos:position pos:line="108" pos:column="52"/></condition><then pos:line="108" pos:column="52"> <block pos:line="108" pos:column="53">{
                        <expr_stmt><expr><name><name pos:line="109" pos:column="25">w<pos:position pos:line="109" pos:column="26"/></name><operator pos:line="109" pos:column="26">-&gt;<pos:position pos:line="109" pos:column="31"/></operator><name pos:line="109" pos:column="28">is_running<pos:position pos:line="109" pos:column="38"/></name></name> <operator pos:line="109" pos:column="39">=<pos:position pos:line="109" pos:column="40"/></operator> <literal type="number" pos:line="109" pos:column="41">0<pos:position pos:line="109" pos:column="42"/></literal></expr>;<pos:position pos:line="109" pos:column="43"/></expr_stmt>
                    }<pos:position pos:line="110" pos:column="22"/></block></then></if>
                }<pos:position pos:line="111" pos:column="18"/></block></then></if>
            }<pos:position pos:line="112" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="113" pos:column="13">wl<pos:position pos:line="113" pos:column="15"/></name> <operator pos:line="113" pos:column="16">=<pos:position pos:line="113" pos:column="17"/></operator> <name><name pos:line="113" pos:column="18">wl<pos:position pos:line="113" pos:column="20"/></name><operator pos:line="113" pos:column="20">-&gt;<pos:position pos:line="113" pos:column="25"/></operator><name pos:line="113" pos:column="22">next<pos:position pos:line="113" pos:column="26"/></name></name></expr>;<pos:position pos:line="113" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="114" pos:column="10"/></block></while>
        <if pos:line="115" pos:column="9">if <condition pos:line="115" pos:column="12">(<expr><name><name pos:line="115" pos:column="13">w<pos:position pos:line="115" pos:column="14"/></name><operator pos:line="115" pos:column="14">-&gt;<pos:position pos:line="115" pos:column="19"/></operator><name pos:line="115" pos:column="16">is_running<pos:position pos:line="115" pos:column="26"/></name></name> <operator pos:line="115" pos:column="27">&amp;&amp;<pos:position pos:line="115" pos:column="37"/></operator> <name><name pos:line="115" pos:column="30">w<pos:position pos:line="115" pos:column="31"/></name><operator pos:line="115" pos:column="31">-&gt;<pos:position pos:line="115" pos:column="36"/></operator><name pos:line="115" pos:column="33">callbacks<pos:position pos:line="115" pos:column="42"/></name></name> <operator pos:line="115" pos:column="43">==<pos:position pos:line="115" pos:column="45"/></operator> <name pos:line="115" pos:column="46">NULL<pos:position pos:line="115" pos:column="50"/></name></expr>)<pos:position pos:line="115" pos:column="51"/></condition><then pos:line="115" pos:column="51"> <block pos:line="115" pos:column="52">{
            <comment type="block" pos:line="116" pos:column="13">/* This is hook mode watchdog
             * running on WatchogInterval
             */</comment>
            <expr_stmt><expr><name><name pos:line="119" pos:column="13">w<pos:position pos:line="119" pos:column="14"/></name><operator pos:line="119" pos:column="14">-&gt;<pos:position pos:line="119" pos:column="19"/></operator><name pos:line="119" pos:column="16">step<pos:position pos:line="119" pos:column="20"/></name></name> <operator pos:line="119" pos:column="21">+=<pos:position pos:line="119" pos:column="23"/></operator> <operator pos:line="119" pos:column="24">(<pos:position pos:line="119" pos:column="25"/></operator><call><name pos:line="119" pos:column="25">apr_time_now<pos:position pos:line="119" pos:column="37"/></name><argument_list pos:line="119" pos:column="37">()<pos:position pos:line="119" pos:column="39"/></argument_list></call> <operator pos:line="119" pos:column="40">-<pos:position pos:line="119" pos:column="41"/></operator> <name pos:line="119" pos:column="42">curr<pos:position pos:line="119" pos:column="46"/></name><operator pos:line="119" pos:column="46">)<pos:position pos:line="119" pos:column="47"/></operator></expr>;<pos:position pos:line="119" pos:column="48"/></expr_stmt>
            <if pos:line="120" pos:column="13">if <condition pos:line="120" pos:column="16">(<expr><name><name pos:line="120" pos:column="17">w<pos:position pos:line="120" pos:column="18"/></name><operator pos:line="120" pos:column="18">-&gt;<pos:position pos:line="120" pos:column="23"/></operator><name pos:line="120" pos:column="20">step<pos:position pos:line="120" pos:column="24"/></name></name> <operator pos:line="120" pos:column="25">&gt;=<pos:position pos:line="120" pos:column="30"/></operator> <name pos:line="120" pos:column="28">wd_interval<pos:position pos:line="120" pos:column="39"/></name></expr>)<pos:position pos:line="120" pos:column="40"/></condition><then pos:line="120" pos:column="40"> <block pos:line="120" pos:column="41">{
                <if pos:line="121" pos:column="17">if <condition pos:line="121" pos:column="20">(<expr><operator pos:line="121" pos:column="21">!<pos:position pos:line="121" pos:column="22"/></operator><name pos:line="121" pos:column="22">ctx<pos:position pos:line="121" pos:column="25"/></name></expr>)<pos:position pos:line="121" pos:column="26"/></condition><then pos:line="121" pos:column="26">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="122" pos:column="21">apr_pool_create<pos:position pos:line="122" pos:column="36"/></name><argument_list pos:line="122" pos:column="36">(<argument><expr><operator pos:line="122" pos:column="37">&amp;<pos:position pos:line="122" pos:column="42"/></operator><name pos:line="122" pos:column="38">ctx<pos:position pos:line="122" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="43">w<pos:position pos:line="122" pos:column="44"/></name><operator pos:line="122" pos:column="44">-&gt;<pos:position pos:line="122" pos:column="49"/></operator><name pos:line="122" pos:column="46">pool<pos:position pos:line="122" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="52"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name><name pos:line="123" pos:column="17">w<pos:position pos:line="123" pos:column="18"/></name><operator pos:line="123" pos:column="18">-&gt;<pos:position pos:line="123" pos:column="23"/></operator><name pos:line="123" pos:column="20">step<pos:position pos:line="123" pos:column="24"/></name></name> <operator pos:line="123" pos:column="25">=<pos:position pos:line="123" pos:column="26"/></operator> <literal type="number" pos:line="123" pos:column="27">0<pos:position pos:line="123" pos:column="28"/></literal></expr>;<pos:position pos:line="123" pos:column="29"/></expr_stmt>
                <comment type="block" pos:line="124" pos:column="17">/* Run watchdog step hook */</comment>
                <expr_stmt><expr><call><name pos:line="125" pos:column="17">ap_run_watchdog_step<pos:position pos:line="125" pos:column="37"/></name><argument_list pos:line="125" pos:column="37">(<argument><expr><name><name pos:line="125" pos:column="38">wd_server_conf<pos:position pos:line="125" pos:column="52"/></name><operator pos:line="125" pos:column="52">-&gt;<pos:position pos:line="125" pos:column="57"/></operator><name pos:line="125" pos:column="54">s<pos:position pos:line="125" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="57">w<pos:position pos:line="125" pos:column="58"/></name><operator pos:line="125" pos:column="58">-&gt;<pos:position pos:line="125" pos:column="63"/></operator><name pos:line="125" pos:column="60">name<pos:position pos:line="125" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="66">ctx<pos:position pos:line="125" pos:column="69"/></name></expr></argument>)<pos:position pos:line="125" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="71"/></expr_stmt>
            }<pos:position pos:line="126" pos:column="14"/></block></then></if>
        }<pos:position pos:line="127" pos:column="10"/></block></then></if>
        <if pos:line="128" pos:column="9">if <condition pos:line="128" pos:column="12">(<expr><name pos:line="128" pos:column="13">ctx<pos:position pos:line="128" pos:column="16"/></name></expr>)<pos:position pos:line="128" pos:column="17"/></condition><then pos:line="128" pos:column="17">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="129" pos:column="13">apr_pool_destroy<pos:position pos:line="129" pos:column="29"/></name><argument_list pos:line="129" pos:column="29">(<argument><expr><name pos:line="129" pos:column="30">ctx<pos:position pos:line="129" pos:column="33"/></name></expr></argument>)<pos:position pos:line="129" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="35"/></expr_stmt></block></then></if>
        <if pos:line="130" pos:column="9">if <condition pos:line="130" pos:column="12">(<expr><operator pos:line="130" pos:column="13">!<pos:position pos:line="130" pos:column="14"/></operator><name><name pos:line="130" pos:column="14">w<pos:position pos:line="130" pos:column="15"/></name><operator pos:line="130" pos:column="15">-&gt;<pos:position pos:line="130" pos:column="20"/></operator><name pos:line="130" pos:column="17">is_running<pos:position pos:line="130" pos:column="27"/></name></name></expr>)<pos:position pos:line="130" pos:column="28"/></condition><then pos:line="130" pos:column="28"> <block pos:line="130" pos:column="29">{
            <break pos:line="131" pos:column="13">break;<pos:position pos:line="131" pos:column="19"/></break>
        }<pos:position pos:line="132" pos:column="10"/></block></then></if>
    }<pos:position pos:line="133" pos:column="6"/></block></while>
    <if pos:line="134" pos:column="5">if <condition pos:line="134" pos:column="8">(<expr><name pos:line="134" pos:column="9">inited<pos:position pos:line="134" pos:column="15"/></name></expr>)<pos:position pos:line="134" pos:column="16"/></condition><then pos:line="134" pos:column="16"> <block pos:line="134" pos:column="17">{
        <comment type="block" pos:line="135" pos:column="9">/* Run the watchdog exit hooks.
         * If this was singleton watchdog the init hook
         * might never been called, so skip the exit hook
         * in that case as well.
         */</comment>
        <expr_stmt><expr><call><name pos:line="140" pos:column="9">ap_run_watchdog_exit<pos:position pos:line="140" pos:column="29"/></name><argument_list pos:line="140" pos:column="29">(<argument><expr><name><name pos:line="140" pos:column="30">wd_server_conf<pos:position pos:line="140" pos:column="44"/></name><operator pos:line="140" pos:column="44">-&gt;<pos:position pos:line="140" pos:column="49"/></operator><name pos:line="140" pos:column="46">s<pos:position pos:line="140" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="140" pos:column="49">w<pos:position pos:line="140" pos:column="50"/></name><operator pos:line="140" pos:column="50">-&gt;<pos:position pos:line="140" pos:column="55"/></operator><name pos:line="140" pos:column="52">name<pos:position pos:line="140" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="140" pos:column="58">w<pos:position pos:line="140" pos:column="59"/></name><operator pos:line="140" pos:column="59">-&gt;<pos:position pos:line="140" pos:column="64"/></operator><name pos:line="140" pos:column="61">pool<pos:position pos:line="140" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="141" pos:column="6"/></block></then>
    <else pos:line="142" pos:column="5">else <block pos:line="142" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="143" pos:column="9">watchdog_list_t<pos:position pos:line="143" pos:column="24"/></name> <modifier pos:line="143" pos:column="25">*<pos:position pos:line="143" pos:column="26"/></modifier></type><name pos:line="143" pos:column="26">wl<pos:position pos:line="143" pos:column="28"/></name> <init pos:line="143" pos:column="29">= <expr><name><name pos:line="143" pos:column="31">w<pos:position pos:line="143" pos:column="32"/></name><operator pos:line="143" pos:column="32">-&gt;<pos:position pos:line="143" pos:column="37"/></operator><name pos:line="143" pos:column="34">callbacks<pos:position pos:line="143" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="143" pos:column="44"/></decl_stmt>
        <while pos:line="144" pos:column="9">while <condition pos:line="144" pos:column="15">(<expr><name pos:line="144" pos:column="16">wl<pos:position pos:line="144" pos:column="18"/></name></expr>)<pos:position pos:line="144" pos:column="19"/></condition> <block pos:line="144" pos:column="20">{
            <if pos:line="145" pos:column="13">if <condition pos:line="145" pos:column="16">(<expr><name><name pos:line="145" pos:column="17">wl<pos:position pos:line="145" pos:column="19"/></name><operator pos:line="145" pos:column="19">-&gt;<pos:position pos:line="145" pos:column="24"/></operator><name pos:line="145" pos:column="21">status<pos:position pos:line="145" pos:column="27"/></name></name> <operator pos:line="145" pos:column="28">==<pos:position pos:line="145" pos:column="30"/></operator> <name pos:line="145" pos:column="31">APR_SUCCESS<pos:position pos:line="145" pos:column="42"/></name></expr>)<pos:position pos:line="145" pos:column="43"/></condition><then pos:line="145" pos:column="43"> <block pos:line="145" pos:column="44">{
                <comment type="block" pos:line="146" pos:column="17">/* Execute watchdog callback with STOPPING state */</comment>
                <expr_stmt><expr><call pos:line="147" pos:column="17">(<modifier pos:line="147" pos:column="18">*<pos:position pos:line="147" pos:column="19"/></modifier><name><name pos:line="147" pos:column="19">wl<pos:position pos:line="147" pos:column="21"/></name><operator pos:line="147" pos:column="21">-&gt;<pos:position pos:line="147" pos:column="26"/></operator><name pos:line="147" pos:column="23">callback_fn<pos:position pos:line="147" pos:column="34"/></name></name>)<argument_list pos:line="147" pos:column="35">(<argument><expr><name pos:line="147" pos:column="36">AP_WATCHDOG_STATE_STOPPING<pos:position pos:line="147" pos:column="62"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="148" pos:column="36">(<pos:position pos:line="148" pos:column="37"/></operator><name pos:line="148" pos:column="37">void<pos:position pos:line="148" pos:column="41"/></name> <operator pos:line="148" pos:column="42">*<pos:position pos:line="148" pos:column="43"/></operator><operator pos:line="148" pos:column="43">)<pos:position pos:line="148" pos:column="44"/></operator><name><name pos:line="148" pos:column="44">wl<pos:position pos:line="148" pos:column="46"/></name><operator pos:line="148" pos:column="46">-&gt;<pos:position pos:line="148" pos:column="51"/></operator><name pos:line="148" pos:column="48">data<pos:position pos:line="148" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="148" pos:column="54">w<pos:position pos:line="148" pos:column="55"/></name><operator pos:line="148" pos:column="55">-&gt;<pos:position pos:line="148" pos:column="60"/></operator><name pos:line="148" pos:column="57">pool<pos:position pos:line="148" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="148" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="63"/></expr_stmt>
            }<pos:position pos:line="149" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="150" pos:column="13">wl<pos:position pos:line="150" pos:column="15"/></name> <operator pos:line="150" pos:column="16">=<pos:position pos:line="150" pos:column="17"/></operator> <name><name pos:line="150" pos:column="18">wl<pos:position pos:line="150" pos:column="20"/></name><operator pos:line="150" pos:column="20">-&gt;<pos:position pos:line="150" pos:column="25"/></operator><name pos:line="150" pos:column="22">next<pos:position pos:line="150" pos:column="26"/></name></name></expr>;<pos:position pos:line="150" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="151" pos:column="10"/></block></while>
    }<pos:position pos:line="152" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="153" pos:column="5">ap_log_error<pos:position pos:line="153" pos:column="17"/></name><argument_list pos:line="153" pos:column="17">(<argument><expr><name pos:line="153" pos:column="18">APLOG_MARK<pos:position pos:line="153" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="30">APLOG_DEBUG<pos:position pos:line="153" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="153" pos:column="43">0<pos:position pos:line="153" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="153" pos:column="46">wd_server_conf<pos:position pos:line="153" pos:column="60"/></name><operator pos:line="153" pos:column="60">-&gt;<pos:position pos:line="153" pos:column="65"/></operator><name pos:line="153" pos:column="62">s<pos:position pos:line="153" pos:column="63"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="154" pos:column="18">"%sWatchdog (%s) stopping (%"<pos:position pos:line="154" pos:column="47"/></literal> <name pos:line="154" pos:column="48">APR_PID_T_FMT<pos:position pos:line="154" pos:column="61"/></name> <literal type="string" pos:line="154" pos:column="62">")"<pos:position pos:line="154" pos:column="65"/></literal></expr></argument>,
                 <argument><expr><ternary><condition><expr><name><name pos:line="155" pos:column="18">w<pos:position pos:line="155" pos:column="19"/></name><operator pos:line="155" pos:column="19">-&gt;<pos:position pos:line="155" pos:column="24"/></operator><name pos:line="155" pos:column="21">singleton<pos:position pos:line="155" pos:column="30"/></name></name></expr> ?<pos:position pos:line="155" pos:column="32"/></condition><then pos:line="155" pos:column="32"> <expr><literal type="string" pos:line="155" pos:column="33">"Singleton"<pos:position pos:line="155" pos:column="44"/></literal></expr> <pos:position pos:line="155" pos:column="45"/></then><else pos:line="155" pos:column="45">: <expr><literal type="string" pos:line="155" pos:column="47">""<pos:position pos:line="155" pos:column="49"/></literal></expr></else></ternary></expr></argument>,
                 <argument><expr><name><name pos:line="156" pos:column="18">w<pos:position pos:line="156" pos:column="19"/></name><operator pos:line="156" pos:column="19">-&gt;<pos:position pos:line="156" pos:column="24"/></operator><name pos:line="156" pos:column="21">name<pos:position pos:line="156" pos:column="25"/></name></name></expr></argument>, <argument><expr><call><name pos:line="156" pos:column="27">getpid<pos:position pos:line="156" pos:column="33"/></name><argument_list pos:line="156" pos:column="33">()<pos:position pos:line="156" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="156" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="37"/></expr_stmt>

    <if pos:line="158" pos:column="5">if <condition pos:line="158" pos:column="8">(<expr><name pos:line="158" pos:column="9">locked<pos:position pos:line="158" pos:column="15"/></name></expr>)<pos:position pos:line="158" pos:column="16"/></condition><then pos:line="158" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="159" pos:column="9">apr_proc_mutex_unlock<pos:position pos:line="159" pos:column="30"/></name><argument_list pos:line="159" pos:column="30">(<argument><expr><name><name pos:line="159" pos:column="31">w<pos:position pos:line="159" pos:column="32"/></name><operator pos:line="159" pos:column="32">-&gt;<pos:position pos:line="159" pos:column="37"/></operator><name pos:line="159" pos:column="34">mutex<pos:position pos:line="159" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="159" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="41"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="160" pos:column="5">apr_thread_exit<pos:position pos:line="160" pos:column="20"/></name><argument_list pos:line="160" pos:column="20">(<argument><expr><name><name pos:line="160" pos:column="21">w<pos:position pos:line="160" pos:column="22"/></name><operator pos:line="160" pos:column="22">-&gt;<pos:position pos:line="160" pos:column="27"/></operator><name pos:line="160" pos:column="24">thread<pos:position pos:line="160" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="32">APR_SUCCESS<pos:position pos:line="160" pos:column="43"/></name></expr></argument>)<pos:position pos:line="160" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="45"/></expr_stmt>

    <return pos:line="162" pos:column="5">return <expr><name pos:line="162" pos:column="12">NULL<pos:position pos:line="162" pos:column="16"/></name></expr>;<pos:position pos:line="162" pos:column="17"/></return>
}<pos:position pos:line="163" pos:column="2"/></block></function></unit>

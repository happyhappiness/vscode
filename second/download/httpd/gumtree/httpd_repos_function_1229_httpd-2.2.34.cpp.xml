<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1229_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_array_header_t<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">do_languages_line<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name pos:line="1" pos:column="46">apr_pool_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">p<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                                             <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier><modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">lang_line<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_array_header_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">lang_recs<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><call><name pos:line="4" pos:column="37">apr_array_make<pos:position pos:line="4" pos:column="51"/></name><argument_list pos:line="4" pos:column="51">(<argument><expr><name pos:line="4" pos:column="52">p<pos:position pos:line="4" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="55">2<pos:position pos:line="4" pos:column="56"/></literal></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="58">sizeof<argument_list pos:line="4" pos:column="64">(<argument><expr><name pos:line="4" pos:column="65">char<pos:position pos:line="4" pos:column="69"/></name> <operator pos:line="4" pos:column="70">*<pos:position pos:line="4" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="4" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="74"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">lang_line<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20"> <block pos:line="6" pos:column="21">{
        <return pos:line="7" pos:column="9">return <expr><name pos:line="7" pos:column="16">lang_recs<pos:position pos:line="7" pos:column="25"/></name></expr>;<pos:position pos:line="7" pos:column="26"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <while pos:line="10" pos:column="5">while <condition pos:line="10" pos:column="11">(<expr><operator pos:line="10" pos:column="12">*<pos:position pos:line="10" pos:column="13"/></operator><operator pos:line="10" pos:column="13">*<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">lang_line<pos:position pos:line="10" pos:column="23"/></name></expr>)<pos:position pos:line="10" pos:column="24"/></condition> <block pos:line="10" pos:column="25">{
        <expr_stmt><expr><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></operator><operator pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></operator><operator pos:line="11" pos:column="16">new<pos:position pos:line="11" pos:column="19"/></operator> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <operator pos:line="11" pos:column="22">(<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">char<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">*<pos:position pos:line="11" pos:column="29"/></operator><operator pos:line="11" pos:column="29">*<pos:position pos:line="11" pos:column="30"/></operator><operator pos:line="11" pos:column="30">)<pos:position pos:line="11" pos:column="31"/></operator> <call><name pos:line="11" pos:column="32">apr_array_push<pos:position pos:line="11" pos:column="46"/></name><argument_list pos:line="11" pos:column="46">(<argument><expr><name pos:line="11" pos:column="47">lang_recs<pos:position pos:line="11" pos:column="56"/></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">new<pos:position pos:line="12" pos:column="13"/></operator> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <call><name pos:line="12" pos:column="16">ap_get_token<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">p<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="32">lang_line<pos:position pos:line="12" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="43">0<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">ap_str_tolower<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><operator pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></operator><operator pos:line="13" pos:column="25">new<pos:position pos:line="13" pos:column="28"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">*<pos:position pos:line="14" pos:column="14"/></operator><operator pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">lang_line<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">==<pos:position pos:line="14" pos:column="27"/></operator> <literal type="char" pos:line="14" pos:column="28">','<pos:position pos:line="14" pos:column="31"/></literal> <operator pos:line="14" pos:column="32">||<pos:position pos:line="14" pos:column="34"/></operator> <operator pos:line="14" pos:column="35">*<pos:position pos:line="14" pos:column="36"/></operator><operator pos:line="14" pos:column="36">*<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">lang_line<pos:position pos:line="14" pos:column="46"/></name> <operator pos:line="14" pos:column="47">==<pos:position pos:line="14" pos:column="49"/></operator> <literal type="char" pos:line="14" pos:column="50">';'<pos:position pos:line="14" pos:column="53"/></literal></expr>)<pos:position pos:line="14" pos:column="54"/></condition><then pos:line="14" pos:column="54"> <block pos:line="14" pos:column="55">{
            <expr_stmt><expr><operator pos:line="15" pos:column="13">++<pos:position pos:line="15" pos:column="15"/></operator><operator pos:line="15" pos:column="15">(<pos:position pos:line="15" pos:column="16"/></operator><operator pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">lang_line<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">)<pos:position pos:line="15" pos:column="27"/></operator></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block></while>

    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">lang_recs<pos:position pos:line="19" pos:column="21"/></name></expr>;<pos:position pos:line="19" pos:column="22"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

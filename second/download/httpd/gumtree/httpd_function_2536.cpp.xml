<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_2536.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name> <parameter_list pos:line="1" pos:column="10">(<parameter><decl><type><name pos:line="1" pos:column="11">int<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">argc<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name><name pos:line="1" pos:column="27">argv<pos:position pos:line="1" pos:column="31"/></name><index pos:line="1" pos:column="31">[]<pos:position pos:line="1" pos:column="33"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="3" pos:column="5">struct<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">in_addr<pos:position pos:line="3" pos:column="19"/></name></name></type> <name pos:line="3" pos:column="20">ipnum<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">bar<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="16">hoststring<pos:position pos:line="4" pos:column="26"/></name><index pos:line="4" pos:column="26">[<expr><name pos:line="4" pos:column="27">MAXDNAME<pos:position pos:line="4" pos:column="35"/></name> <operator pos:line="4" pos:column="36">+<pos:position pos:line="4" pos:column="37"/></operator> <literal type="number" pos:line="4" pos:column="38">1<pos:position pos:line="4" pos:column="39"/></literal></expr>]<pos:position pos:line="4" pos:column="40"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="42">line<pos:position pos:line="4" pos:column="46"/></name><index pos:line="4" pos:column="46">[<expr><name pos:line="4" pos:column="47">MAXLINE<pos:position pos:line="4" pos:column="54"/></name></expr>]<pos:position pos:line="4" pos:column="55"/></index></name></decl>, <modifier pos:line="4" pos:column="57">*<pos:position pos:line="4" pos:column="58"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="58">statfile<pos:position pos:line="4" pos:column="66"/></name></decl>;<pos:position pos:line="4" pos:column="67"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="12">check<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><call><name pos:line="7" pos:column="5">defined<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">WIN32<pos:position pos:line="7" pos:column="18"/></name></expr></argument>)<pos:position pos:line="7" pos:column="19"/></argument_list></call> <operator pos:line="7" pos:column="20">||<pos:position pos:line="7" pos:column="22"/></operator> <operator pos:line="7" pos:column="23">(<pos:position pos:line="7" pos:column="24"/></operator><call><name pos:line="7" pos:column="24">defined<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><name pos:line="7" pos:column="32">NETWARE<pos:position pos:line="7" pos:column="39"/></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call> <operator pos:line="7" pos:column="41">&amp;&amp;<pos:position pos:line="7" pos:column="51"/></operator> <call><name pos:line="7" pos:column="44">defined<pos:position pos:line="7" pos:column="51"/></name><argument_list pos:line="7" pos:column="51">(<argument><expr><name pos:line="7" pos:column="52">USE_WINSOCK<pos:position pos:line="7" pos:column="63"/></name></expr></argument>)<pos:position pos:line="7" pos:column="64"/></argument_list></call><operator pos:line="7" pos:column="64">)<pos:position pos:line="7" pos:column="65"/></operator></expr></cpp:if>
    <comment type="block" pos:line="8" pos:column="5">/*  If we apr'ify this code, apr_pool_create/apr_pool_destroy
     *  should perform the WSAStartup/WSACleanup for us.
     */</comment>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">WSADATA<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">wsaData<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">WSAStartup<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><call><name pos:line="12" pos:column="16">MAKEWORD<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><literal type="number" pos:line="12" pos:column="25">2<pos:position pos:line="12" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="28">0<pos:position pos:line="12" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="12" pos:column="32">&amp;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="33">wsaData<pos:position pos:line="12" pos:column="40"/></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name pos:line="15" pos:column="5">check<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <literal type="number" pos:line="15" pos:column="13">0<pos:position pos:line="15" pos:column="14"/></literal></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">statfile<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">NULL<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
    <for pos:line="17" pos:column="5">for <control pos:line="17" pos:column="9">(<init><expr><name pos:line="17" pos:column="10">i<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal></expr>;<pos:position pos:line="17" pos:column="16"/></init> <condition><expr><name pos:line="17" pos:column="17">i<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">&lt;<pos:position pos:line="17" pos:column="23"/></operator> <name pos:line="17" pos:column="21">argc<pos:position pos:line="17" pos:column="25"/></name></expr>;<pos:position pos:line="17" pos:column="26"/></condition> <incr><expr><name pos:line="17" pos:column="27">i<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">++<pos:position pos:line="17" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="31"/></control> <block pos:line="17" pos:column="32">{
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">strcmp<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name><name pos:line="18" pos:column="20">argv<pos:position pos:line="18" pos:column="24"/></name><index pos:line="18" pos:column="24">[<expr><name pos:line="18" pos:column="25">i<pos:position pos:line="18" pos:column="26"/></name></expr>]<pos:position pos:line="18" pos:column="27"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="29">"-c"<pos:position pos:line="18" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call> <operator pos:line="18" pos:column="35">==<pos:position pos:line="18" pos:column="37"/></operator> <literal type="number" pos:line="18" pos:column="38">0<pos:position pos:line="18" pos:column="39"/></literal></expr>)<pos:position pos:line="18" pos:column="40"/></condition><then pos:line="18" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="13">check<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <literal type="number" pos:line="19" pos:column="21">1<pos:position pos:line="19" pos:column="22"/></literal></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt></block></then>
        <elseif pos:line="20" pos:column="9">else <if pos:line="20" pos:column="14">if <condition pos:line="20" pos:column="17">(<expr><call><name pos:line="20" pos:column="18">strcmp<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name><name pos:line="20" pos:column="25">argv<pos:position pos:line="20" pos:column="29"/></name><index pos:line="20" pos:column="29">[<expr><name pos:line="20" pos:column="30">i<pos:position pos:line="20" pos:column="31"/></name></expr>]<pos:position pos:line="20" pos:column="32"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="34">"-s"<pos:position pos:line="20" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></call> <operator pos:line="20" pos:column="40">==<pos:position pos:line="20" pos:column="42"/></operator> <literal type="number" pos:line="20" pos:column="43">0<pos:position pos:line="20" pos:column="44"/></literal></expr>)<pos:position pos:line="20" pos:column="45"/></condition><then pos:line="20" pos:column="45"> <block pos:line="20" pos:column="46">{
            <if pos:line="21" pos:column="13">if <condition pos:line="21" pos:column="16">(<expr><name pos:line="21" pos:column="17">i<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">==<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">argc<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">-<pos:position pos:line="21" pos:column="28"/></operator> <literal type="number" pos:line="21" pos:column="29">1<pos:position pos:line="21" pos:column="30"/></literal></expr>)<pos:position pos:line="21" pos:column="31"/></condition><then pos:line="21" pos:column="31"> <block pos:line="21" pos:column="32">{
                <expr_stmt><expr><call><name pos:line="22" pos:column="17">fprintf<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">stderr<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="33">"logresolve: missing filename to -s\n"<pos:position pos:line="22" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="73"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="23" pos:column="17">exit<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><literal type="number" pos:line="23" pos:column="22">1<pos:position pos:line="23" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="24" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="25" pos:column="13">i<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">++<pos:position pos:line="25" pos:column="16"/></operator></expr>;<pos:position pos:line="25" pos:column="17"/></expr_stmt>
            <expr_stmt><expr><name pos:line="26" pos:column="13">statfile<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <name><name pos:line="26" pos:column="24">argv<pos:position pos:line="26" pos:column="28"/></name><index pos:line="26" pos:column="28">[<expr><name pos:line="26" pos:column="29">i<pos:position pos:line="26" pos:column="30"/></name></expr>]<pos:position pos:line="26" pos:column="31"/></index></name></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if></elseif>
        <else pos:line="28" pos:column="9">else <block pos:line="28" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">fprintf<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">stderr<pos:position pos:line="29" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="29">"Usage: logresolve [-s statfile] [-c] &lt; input &gt; output\n"<pos:position pos:line="29" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="88"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">exit<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></else></if>
    }<pos:position pos:line="32" pos:column="6"/></block></for>

    <for pos:line="34" pos:column="5">for <control pos:line="34" pos:column="9">(<init><expr><name pos:line="34" pos:column="10">i<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <literal type="number" pos:line="34" pos:column="14">0<pos:position pos:line="34" pos:column="15"/></literal></expr>;<pos:position pos:line="34" pos:column="16"/></init> <condition><expr><name pos:line="34" pos:column="17">i<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">&lt;<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="21">BUCKETS<pos:position pos:line="34" pos:column="28"/></name></expr>;<pos:position pos:line="34" pos:column="29"/></condition> <incr><expr><name pos:line="34" pos:column="30">i<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">++<pos:position pos:line="34" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="34"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="35" pos:column="9">nscache<pos:position pos:line="35" pos:column="16"/></name><index pos:line="35" pos:column="16">[<expr><name pos:line="35" pos:column="17">i<pos:position pos:line="35" pos:column="18"/></name></expr>]<pos:position pos:line="35" pos:column="19"/></index></name> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <name pos:line="35" pos:column="22">NULL<pos:position pos:line="35" pos:column="26"/></name></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt></block></for>
    <for pos:line="36" pos:column="5">for <control pos:line="36" pos:column="9">(<init><expr><name pos:line="36" pos:column="10">i<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <literal type="number" pos:line="36" pos:column="14">0<pos:position pos:line="36" pos:column="15"/></literal></expr>;<pos:position pos:line="36" pos:column="16"/></init> <condition><expr><name pos:line="36" pos:column="17">i<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">&lt;<pos:position pos:line="36" pos:column="23"/></operator> <name pos:line="36" pos:column="21">MAX_ERR<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">+<pos:position pos:line="36" pos:column="30"/></operator> <literal type="number" pos:line="36" pos:column="31">2<pos:position pos:line="36" pos:column="32"/></literal></expr>;<pos:position pos:line="36" pos:column="33"/></condition> <incr><expr><name pos:line="36" pos:column="34">i<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">++<pos:position pos:line="36" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="38"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="9">errors<pos:position pos:line="37" pos:column="15"/></name><index pos:line="37" pos:column="15">[<expr><name pos:line="37" pos:column="16">i<pos:position pos:line="37" pos:column="17"/></name></expr>]<pos:position pos:line="37" pos:column="18"/></index></name> <operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator> <literal type="number" pos:line="37" pos:column="21">0<pos:position pos:line="37" pos:column="22"/></literal></expr>;<pos:position pos:line="37" pos:column="23"/></expr_stmt></block></for>

    <while pos:line="39" pos:column="5">while <condition pos:line="39" pos:column="11">(<expr><call><name pos:line="39" pos:column="12">get_line<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">(<argument><expr><name pos:line="39" pos:column="21">line<pos:position pos:line="39" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="27">MAXLINE<pos:position pos:line="39" pos:column="34"/></name></expr></argument>)<pos:position pos:line="39" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="36"/></condition> <block pos:line="39" pos:column="37">{
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name><name pos:line="40" pos:column="13">line<pos:position pos:line="40" pos:column="17"/></name><index pos:line="40" pos:column="17">[<expr><literal type="number" pos:line="40" pos:column="18">0<pos:position pos:line="40" pos:column="19"/></literal></expr>]<pos:position pos:line="40" pos:column="20"/></index></name> <operator pos:line="40" pos:column="21">==<pos:position pos:line="40" pos:column="23"/></operator> <literal type="char" pos:line="40" pos:column="24">'\0'<pos:position pos:line="40" pos:column="28"/></literal></expr>)<pos:position pos:line="40" pos:column="29"/></condition><then pos:line="40" pos:column="29">
            <block type="pseudo"><continue pos:line="41" pos:column="13">continue;<pos:position pos:line="41" pos:column="22"/></continue></block></then></if>
        <expr_stmt><expr><name pos:line="42" pos:column="9">entries<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">++<pos:position pos:line="42" pos:column="18"/></operator></expr>;<pos:position pos:line="42" pos:column="19"/></expr_stmt>
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">!<pos:position pos:line="43" pos:column="14"/></operator><call><name pos:line="43" pos:column="14">apr_isdigit<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><name><name pos:line="43" pos:column="26">line<pos:position pos:line="43" pos:column="30"/></name><index pos:line="43" pos:column="30">[<expr><literal type="number" pos:line="43" pos:column="31">0<pos:position pos:line="43" pos:column="32"/></literal></expr>]<pos:position pos:line="43" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="35"/></condition><then pos:line="43" pos:column="35"> <block pos:line="43" pos:column="36">{  <comment type="block" pos:line="43" pos:column="39">/* short cut */</comment>
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">puts<pos:position pos:line="44" pos:column="17"/></name><argument_list pos:line="44" pos:column="17">(<argument><expr><name pos:line="44" pos:column="18">line<pos:position pos:line="44" pos:column="22"/></name></expr></argument>)<pos:position pos:line="44" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name pos:line="45" pos:column="13">withname<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">++<pos:position pos:line="45" pos:column="23"/></operator></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>
            <continue pos:line="46" pos:column="13">continue;<pos:position pos:line="46" pos:column="22"/></continue>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="48" pos:column="9">bar<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">=<pos:position pos:line="48" pos:column="14"/></operator> <call><name pos:line="48" pos:column="15">strchr<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">line<pos:position pos:line="48" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="48" pos:column="28">' '<pos:position pos:line="48" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="33"/></expr_stmt>
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">bar<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">!=<pos:position pos:line="49" pos:column="19"/></operator> <name pos:line="49" pos:column="20">NULL<pos:position pos:line="49" pos:column="24"/></name></expr>)<pos:position pos:line="49" pos:column="25"/></condition><then pos:line="49" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="50" pos:column="13">*<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">bar<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <literal type="char" pos:line="50" pos:column="20">'\0'<pos:position pos:line="50" pos:column="24"/></literal></expr>;<pos:position pos:line="50" pos:column="25"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name><name pos:line="51" pos:column="9">ipnum<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">.<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="15">s_addr<pos:position pos:line="51" pos:column="21"/></name></name> <operator pos:line="51" pos:column="22">=<pos:position pos:line="51" pos:column="23"/></operator> <call><name pos:line="51" pos:column="24">inet_addr<pos:position pos:line="51" pos:column="33"/></name><argument_list pos:line="51" pos:column="33">(<argument><expr><name pos:line="51" pos:column="34">line<pos:position pos:line="51" pos:column="38"/></name></expr></argument>)<pos:position pos:line="51" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="40"/></expr_stmt>
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name><name pos:line="52" pos:column="13">ipnum<pos:position pos:line="52" pos:column="18"/></name><operator pos:line="52" pos:column="18">.<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="19">s_addr<pos:position pos:line="52" pos:column="25"/></name></name> <operator pos:line="52" pos:column="26">==<pos:position pos:line="52" pos:column="28"/></operator> <literal type="number" pos:line="52" pos:column="29">0xffffffffu<pos:position pos:line="52" pos:column="40"/></literal></expr>)<pos:position pos:line="52" pos:column="41"/></condition><then pos:line="52" pos:column="41"> <block pos:line="52" pos:column="42">{
            <if pos:line="53" pos:column="13">if <condition pos:line="53" pos:column="16">(<expr><name pos:line="53" pos:column="17">bar<pos:position pos:line="53" pos:column="20"/></name> <operator pos:line="53" pos:column="21">!=<pos:position pos:line="53" pos:column="23"/></operator> <name pos:line="53" pos:column="24">NULL<pos:position pos:line="53" pos:column="28"/></name></expr>)<pos:position pos:line="53" pos:column="29"/></condition><then pos:line="53" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="54" pos:column="17">*<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="18">bar<pos:position pos:line="54" pos:column="21"/></name> <operator pos:line="54" pos:column="22">=<pos:position pos:line="54" pos:column="23"/></operator> <literal type="char" pos:line="54" pos:column="24">' '<pos:position pos:line="54" pos:column="27"/></literal></expr>;<pos:position pos:line="54" pos:column="28"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">puts<pos:position pos:line="55" pos:column="17"/></name><argument_list pos:line="55" pos:column="17">(<argument><expr><name pos:line="55" pos:column="18">line<pos:position pos:line="55" pos:column="22"/></name></expr></argument>)<pos:position pos:line="55" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name pos:line="56" pos:column="13">withname<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">++<pos:position pos:line="56" pos:column="23"/></operator></expr>;<pos:position pos:line="56" pos:column="24"/></expr_stmt>
            <continue pos:line="57" pos:column="13">continue;<pos:position pos:line="57" pos:column="22"/></continue>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="60" pos:column="9">resolves<pos:position pos:line="60" pos:column="17"/></name><operator pos:line="60" pos:column="17">++<pos:position pos:line="60" pos:column="19"/></operator></expr>;<pos:position pos:line="60" pos:column="20"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="62" pos:column="9">cgethost<pos:position pos:line="62" pos:column="17"/></name><argument_list pos:line="62" pos:column="17">(<argument><expr><name pos:line="62" pos:column="18">ipnum<pos:position pos:line="62" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="25">hoststring<pos:position pos:line="62" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="37">check<pos:position pos:line="62" pos:column="42"/></name></expr></argument>)<pos:position pos:line="62" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="44"/></expr_stmt>
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">bar<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">!=<pos:position pos:line="63" pos:column="19"/></operator> <name pos:line="63" pos:column="20">NULL<pos:position pos:line="63" pos:column="24"/></name></expr>)<pos:position pos:line="63" pos:column="25"/></condition><then pos:line="63" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="13">printf<pos:position pos:line="64" pos:column="19"/></name><argument_list pos:line="64" pos:column="19">(<argument><expr><literal type="string" pos:line="64" pos:column="20">"%s %s\n"<pos:position pos:line="64" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="31">hoststring<pos:position pos:line="64" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="43">bar<pos:position pos:line="64" pos:column="46"/></name> <operator pos:line="64" pos:column="47">+<pos:position pos:line="64" pos:column="48"/></operator> <literal type="number" pos:line="64" pos:column="49">1<pos:position pos:line="64" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="52"/></expr_stmt></block></then>
        <else pos:line="65" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="13">puts<pos:position pos:line="66" pos:column="17"/></name><argument_list pos:line="66" pos:column="17">(<argument><expr><name pos:line="66" pos:column="18">hoststring<pos:position pos:line="66" pos:column="28"/></name></expr></argument>)<pos:position pos:line="66" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="30"/></expr_stmt></block></else></if>
    }<pos:position pos:line="67" pos:column="6"/></block></while>

<cpp:if pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">if<pos:position pos:line="69" pos:column="4"/></cpp:directive> <expr><call><name pos:line="69" pos:column="5">defined<pos:position pos:line="69" pos:column="12"/></name><argument_list pos:line="69" pos:column="12">(<argument><expr><name pos:line="69" pos:column="13">WIN32<pos:position pos:line="69" pos:column="18"/></name></expr></argument>)<pos:position pos:line="69" pos:column="19"/></argument_list></call> <operator pos:line="69" pos:column="20">||<pos:position pos:line="69" pos:column="22"/></operator> <operator pos:line="69" pos:column="23">(<pos:position pos:line="69" pos:column="24"/></operator><call><name pos:line="69" pos:column="24">defined<pos:position pos:line="69" pos:column="31"/></name><argument_list pos:line="69" pos:column="31">(<argument><expr><name pos:line="69" pos:column="32">NETWARE<pos:position pos:line="69" pos:column="39"/></name></expr></argument>)<pos:position pos:line="69" pos:column="40"/></argument_list></call> <operator pos:line="69" pos:column="41">&amp;&amp;<pos:position pos:line="69" pos:column="51"/></operator> <call><name pos:line="69" pos:column="44">defined<pos:position pos:line="69" pos:column="51"/></name><argument_list pos:line="69" pos:column="51">(<argument><expr><name pos:line="69" pos:column="52">USE_WINSOCK<pos:position pos:line="69" pos:column="63"/></name></expr></argument>)<pos:position pos:line="69" pos:column="64"/></argument_list></call><operator pos:line="69" pos:column="64">)<pos:position pos:line="69" pos:column="65"/></operator></expr></cpp:if>
     <expr_stmt><expr><call><name pos:line="70" pos:column="6">WSACleanup<pos:position pos:line="70" pos:column="16"/></name><argument_list pos:line="70" pos:column="16">()<pos:position pos:line="70" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="19"/></expr_stmt>
<cpp:endif pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">endif<pos:position pos:line="71" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><name pos:line="73" pos:column="9">statfile<pos:position pos:line="73" pos:column="17"/></name> <operator pos:line="73" pos:column="18">!=<pos:position pos:line="73" pos:column="20"/></operator> <name pos:line="73" pos:column="21">NULL<pos:position pos:line="73" pos:column="25"/></name></expr>)<pos:position pos:line="73" pos:column="26"/></condition><then pos:line="73" pos:column="26"> <block pos:line="73" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="74" pos:column="9">FILE<pos:position pos:line="74" pos:column="13"/></name> <modifier pos:line="74" pos:column="14">*<pos:position pos:line="74" pos:column="15"/></modifier></type><name pos:line="74" pos:column="15">fp<pos:position pos:line="74" pos:column="17"/></name></decl>;<pos:position pos:line="74" pos:column="18"/></decl_stmt>
        <expr_stmt><expr><name pos:line="75" pos:column="9">fp<pos:position pos:line="75" pos:column="11"/></name> <operator pos:line="75" pos:column="12">=<pos:position pos:line="75" pos:column="13"/></operator> <call><name pos:line="75" pos:column="14">fopen<pos:position pos:line="75" pos:column="19"/></name><argument_list pos:line="75" pos:column="19">(<argument><expr><name pos:line="75" pos:column="20">statfile<pos:position pos:line="75" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="30">"w"<pos:position pos:line="75" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="35"/></expr_stmt>
        <if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name pos:line="76" pos:column="13">fp<pos:position pos:line="76" pos:column="15"/></name> <operator pos:line="76" pos:column="16">==<pos:position pos:line="76" pos:column="18"/></operator> <name pos:line="76" pos:column="19">NULL<pos:position pos:line="76" pos:column="23"/></name></expr>)<pos:position pos:line="76" pos:column="24"/></condition><then pos:line="76" pos:column="24"> <block pos:line="76" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="77" pos:column="13">fprintf<pos:position pos:line="77" pos:column="20"/></name><argument_list pos:line="77" pos:column="20">(<argument><expr><name pos:line="77" pos:column="21">stderr<pos:position pos:line="77" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="29">"logresolve: could not open statistics file '%s'\n"<pos:position pos:line="77" pos:column="80"/></literal></expr></argument>
                    ,<argument><expr><name pos:line="78" pos:column="22">statfile<pos:position pos:line="78" pos:column="30"/></name></expr></argument>)<pos:position pos:line="78" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="79" pos:column="13">exit<pos:position pos:line="79" pos:column="17"/></name><argument_list pos:line="79" pos:column="17">(<argument><expr><literal type="number" pos:line="79" pos:column="18">1<pos:position pos:line="79" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="80" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">stats<pos:position pos:line="81" pos:column="14"/></name><argument_list pos:line="81" pos:column="14">(<argument><expr><name pos:line="81" pos:column="15">fp<pos:position pos:line="81" pos:column="17"/></name></expr></argument>)<pos:position pos:line="81" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">fclose<pos:position pos:line="82" pos:column="15"/></name><argument_list pos:line="82" pos:column="15">(<argument><expr><name pos:line="82" pos:column="16">fp<pos:position pos:line="82" pos:column="18"/></name></expr></argument>)<pos:position pos:line="82" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if>

    <return pos:line="85" pos:column="5">return <expr><operator pos:line="85" pos:column="12">(<pos:position pos:line="85" pos:column="13"/></operator><literal type="number" pos:line="85" pos:column="13">0<pos:position pos:line="85" pos:column="14"/></literal><operator pos:line="85" pos:column="14">)<pos:position pos:line="85" pos:column="15"/></operator></expr>;<pos:position pos:line="85" pos:column="16"/></return>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

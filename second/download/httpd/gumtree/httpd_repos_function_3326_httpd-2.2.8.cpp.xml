<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3326_httpd-2.2.8.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">apr__SHA512_Last<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">SHA512_CTX<pos:position pos:line="1" pos:column="33"/></name><modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type> <name pos:line="1" pos:column="35">context<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list> <block pos:line="1" pos:column="44">{
        <decl_stmt><decl><type><name pos:line="2" pos:column="9">unsigned<pos:position pos:line="2" pos:column="17"/></name> <name pos:line="2" pos:column="18">int<pos:position pos:line="2" pos:column="21"/></name></type>    <name pos:line="2" pos:column="25">usedspace<pos:position pos:line="2" pos:column="34"/></name></decl>;<pos:position pos:line="2" pos:column="35"/></decl_stmt>

        <expr_stmt><expr><name pos:line="4" pos:column="9">usedspace<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">=<pos:position pos:line="4" pos:column="20"/></operator> <call pos:line="4" pos:column="21">(<name pos:line="4" pos:column="22">unsigned<pos:position pos:line="4" pos:column="30"/></name> <name pos:line="4" pos:column="31">int<pos:position pos:line="4" pos:column="34"/></name>)<argument_list pos:line="4" pos:column="35">(<argument><expr><operator pos:line="4" pos:column="36">(<pos:position pos:line="4" pos:column="37"/></operator><name><name pos:line="4" pos:column="37">context<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">-&gt;<pos:position pos:line="4" pos:column="49"/></operator><name pos:line="4" pos:column="46">bitcount<pos:position pos:line="4" pos:column="54"/></name><index pos:line="4" pos:column="54">[<expr><literal type="number" pos:line="4" pos:column="55">0<pos:position pos:line="4" pos:column="56"/></literal></expr>]<pos:position pos:line="4" pos:column="57"/></index></name> <operator pos:line="4" pos:column="58">&gt;&gt;<pos:position pos:line="4" pos:column="63"/></operator> <literal type="number" pos:line="4" pos:column="61">3<pos:position pos:line="4" pos:column="62"/></literal><operator pos:line="4" pos:column="62">)<pos:position pos:line="4" pos:column="63"/></operator> 
                                 <operator pos:line="5" pos:column="34">%<pos:position pos:line="5" pos:column="35"/></operator> <name pos:line="5" pos:column="36">SHA512_BLOCK_LENGTH<pos:position pos:line="5" pos:column="55"/></name></expr></argument>)<pos:position pos:line="5" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="57"/></expr_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><operator pos:line="6" pos:column="5">!<pos:position pos:line="6" pos:column="6"/></operator><name pos:line="6" pos:column="6">APR_IS_BIGENDIAN<pos:position pos:line="6" pos:column="22"/></name></expr></cpp:if>
        <comment type="block" pos:line="7" pos:column="9">/* Convert FROM host byte order */</comment>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">REVERSE64<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name><name pos:line="8" pos:column="19">context<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">bitcount<pos:position pos:line="8" pos:column="36"/></name><index pos:line="8" pos:column="36">[<expr><literal type="number" pos:line="8" pos:column="37">0<pos:position pos:line="8" pos:column="38"/></literal></expr>]<pos:position pos:line="8" pos:column="39"/></index></name></expr></argument>,<argument><expr><name><name pos:line="8" pos:column="40">context<pos:position pos:line="8" pos:column="47"/></name><operator pos:line="8" pos:column="47">-&gt;<pos:position pos:line="8" pos:column="52"/></operator><name pos:line="8" pos:column="49">bitcount<pos:position pos:line="8" pos:column="57"/></name><index pos:line="8" pos:column="57">[<expr><literal type="number" pos:line="8" pos:column="58">0<pos:position pos:line="8" pos:column="59"/></literal></expr>]<pos:position pos:line="8" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">REVERSE64<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><name><name pos:line="9" pos:column="19">context<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">bitcount<pos:position pos:line="9" pos:column="36"/></name><index pos:line="9" pos:column="36">[<expr><literal type="number" pos:line="9" pos:column="37">1<pos:position pos:line="9" pos:column="38"/></literal></expr>]<pos:position pos:line="9" pos:column="39"/></index></name></expr></argument>,<argument><expr><name><name pos:line="9" pos:column="40">context<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">-&gt;<pos:position pos:line="9" pos:column="52"/></operator><name pos:line="9" pos:column="49">bitcount<pos:position pos:line="9" pos:column="57"/></name><index pos:line="9" pos:column="57">[<expr><literal type="number" pos:line="9" pos:column="58">1<pos:position pos:line="9" pos:column="59"/></literal></expr>]<pos:position pos:line="9" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="62"/></expr_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">usedspace<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&gt;<pos:position pos:line="11" pos:column="27"/></operator> <literal type="number" pos:line="11" pos:column="25">0<pos:position pos:line="11" pos:column="26"/></literal></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27"> <block pos:line="11" pos:column="28">{
                <comment type="block" pos:line="12" pos:column="17">/* Begin padding with a 1 bit: */</comment>
                <expr_stmt><expr><name><name pos:line="13" pos:column="17">context<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">-&gt;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="26">buffer<pos:position pos:line="13" pos:column="32"/></name><index pos:line="13" pos:column="32">[<expr><name pos:line="13" pos:column="33">usedspace<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">++<pos:position pos:line="13" pos:column="44"/></operator></expr>]<pos:position pos:line="13" pos:column="45"/></index></name> <operator pos:line="13" pos:column="46">=<pos:position pos:line="13" pos:column="47"/></operator> <literal type="number" pos:line="13" pos:column="48">0x80<pos:position pos:line="13" pos:column="52"/></literal></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>

                <if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">usedspace<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">&lt;=<pos:position pos:line="15" pos:column="36"/></operator> <name pos:line="15" pos:column="34">SHA512_SHORT_BLOCK_LENGTH<pos:position pos:line="15" pos:column="59"/></name></expr>)<pos:position pos:line="15" pos:column="60"/></condition><then pos:line="15" pos:column="60"> <block pos:line="15" pos:column="61">{
                        <comment type="block" pos:line="16" pos:column="25">/* Set-up for the last transform: */</comment>
                        <expr_stmt><expr><call><name pos:line="17" pos:column="25">MEMSET_BZERO<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><operator pos:line="17" pos:column="38">&amp;<pos:position pos:line="17" pos:column="43"/></operator><name><name pos:line="17" pos:column="39">context<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">buffer<pos:position pos:line="17" pos:column="54"/></name><index pos:line="17" pos:column="54">[<expr><name pos:line="17" pos:column="55">usedspace<pos:position pos:line="17" pos:column="64"/></name></expr>]<pos:position pos:line="17" pos:column="65"/></index></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="67">SHA512_SHORT_BLOCK_LENGTH<pos:position pos:line="17" pos:column="92"/></name> <operator pos:line="17" pos:column="93">-<pos:position pos:line="17" pos:column="94"/></operator> <name pos:line="17" pos:column="95">usedspace<pos:position pos:line="17" pos:column="104"/></name></expr></argument>)<pos:position pos:line="17" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="106"/></expr_stmt>
                }<pos:position pos:line="18" pos:column="18"/></block></then> <else pos:line="18" pos:column="19">else <block pos:line="18" pos:column="24">{
                        <if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><name pos:line="19" pos:column="29">usedspace<pos:position pos:line="19" pos:column="38"/></name> <operator pos:line="19" pos:column="39">&lt;<pos:position pos:line="19" pos:column="43"/></operator> <name pos:line="19" pos:column="41">SHA512_BLOCK_LENGTH<pos:position pos:line="19" pos:column="60"/></name></expr>)<pos:position pos:line="19" pos:column="61"/></condition><then pos:line="19" pos:column="61"> <block pos:line="19" pos:column="62">{
                                <expr_stmt><expr><call><name pos:line="20" pos:column="33">MEMSET_BZERO<pos:position pos:line="20" pos:column="45"/></name><argument_list pos:line="20" pos:column="45">(<argument><expr><operator pos:line="20" pos:column="46">&amp;<pos:position pos:line="20" pos:column="51"/></operator><name><name pos:line="20" pos:column="47">context<pos:position pos:line="20" pos:column="54"/></name><operator pos:line="20" pos:column="54">-&gt;<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="56">buffer<pos:position pos:line="20" pos:column="62"/></name><index pos:line="20" pos:column="62">[<expr><name pos:line="20" pos:column="63">usedspace<pos:position pos:line="20" pos:column="72"/></name></expr>]<pos:position pos:line="20" pos:column="73"/></index></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="75">SHA512_BLOCK_LENGTH<pos:position pos:line="20" pos:column="94"/></name> <operator pos:line="20" pos:column="95">-<pos:position pos:line="20" pos:column="96"/></operator> <name pos:line="20" pos:column="97">usedspace<pos:position pos:line="20" pos:column="106"/></name></expr></argument>)<pos:position pos:line="20" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="108"/></expr_stmt>
                        }<pos:position pos:line="21" pos:column="26"/></block></then></if>
                        <comment type="block" pos:line="22" pos:column="25">/* Do second-to-last transform: */</comment>
                        <expr_stmt><expr><call><name pos:line="23" pos:column="25">apr__SHA512_Transform<pos:position pos:line="23" pos:column="46"/></name><argument_list pos:line="23" pos:column="46">(<argument><expr><name pos:line="23" pos:column="47">context<pos:position pos:line="23" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="56">(<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="57">sha2_word64<pos:position pos:line="23" pos:column="68"/></name><operator pos:line="23" pos:column="68">*<pos:position pos:line="23" pos:column="69"/></operator><operator pos:line="23" pos:column="69">)<pos:position pos:line="23" pos:column="70"/></operator><name><name pos:line="23" pos:column="70">context<pos:position pos:line="23" pos:column="77"/></name><operator pos:line="23" pos:column="77">-&gt;<pos:position pos:line="23" pos:column="82"/></operator><name pos:line="23" pos:column="79">buffer<pos:position pos:line="23" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="87"/></expr_stmt>

                        <comment type="block" pos:line="25" pos:column="25">/* And set-up for the last transform: */</comment>
                        <expr_stmt><expr><call><name pos:line="26" pos:column="25">MEMSET_BZERO<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><name><name pos:line="26" pos:column="38">context<pos:position pos:line="26" pos:column="45"/></name><operator pos:line="26" pos:column="45">-&gt;<pos:position pos:line="26" pos:column="50"/></operator><name pos:line="26" pos:column="47">buffer<pos:position pos:line="26" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="55">SHA512_BLOCK_LENGTH<pos:position pos:line="26" pos:column="74"/></name> <operator pos:line="26" pos:column="75">-<pos:position pos:line="26" pos:column="76"/></operator> <literal type="number" pos:line="26" pos:column="77">2<pos:position pos:line="26" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="80"/></expr_stmt>
                }<pos:position pos:line="27" pos:column="18"/></block></else></if>
        }<pos:position pos:line="28" pos:column="10"/></block></then> <else pos:line="28" pos:column="11">else <block pos:line="28" pos:column="16">{
                <comment type="block" pos:line="29" pos:column="17">/* Prepare for final transform: */</comment>
                <expr_stmt><expr><call><name pos:line="30" pos:column="17">MEMSET_BZERO<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name><name pos:line="30" pos:column="30">context<pos:position pos:line="30" pos:column="37"/></name><operator pos:line="30" pos:column="37">-&gt;<pos:position pos:line="30" pos:column="42"/></operator><name pos:line="30" pos:column="39">buffer<pos:position pos:line="30" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="47">SHA512_SHORT_BLOCK_LENGTH<pos:position pos:line="30" pos:column="72"/></name></expr></argument>)<pos:position pos:line="30" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="74"/></expr_stmt>

                <comment type="block" pos:line="32" pos:column="17">/* Begin padding with a 1 bit: */</comment>
                <expr_stmt><expr><operator pos:line="33" pos:column="17">*<pos:position pos:line="33" pos:column="18"/></operator><name><name pos:line="33" pos:column="18">context<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">-&gt;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="27">buffer<pos:position pos:line="33" pos:column="33"/></name></name> <operator pos:line="33" pos:column="34">=<pos:position pos:line="33" pos:column="35"/></operator> <literal type="number" pos:line="33" pos:column="36">0x80<pos:position pos:line="33" pos:column="40"/></literal></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></else></if>
        <comment type="block" pos:line="35" pos:column="9">/* Store the length of input data (in bits): */</comment>
        <expr_stmt><expr><operator pos:line="36" pos:column="9">*<pos:position pos:line="36" pos:column="10"/></operator><operator pos:line="36" pos:column="10">(<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">sha2_word64<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">*<pos:position pos:line="36" pos:column="23"/></operator><operator pos:line="36" pos:column="23">)<pos:position pos:line="36" pos:column="24"/></operator><operator pos:line="36" pos:column="24">&amp;<pos:position pos:line="36" pos:column="29"/></operator><name><name pos:line="36" pos:column="25">context<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">-&gt;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="34">buffer<pos:position pos:line="36" pos:column="40"/></name><index pos:line="36" pos:column="40">[<expr><name pos:line="36" pos:column="41">SHA512_SHORT_BLOCK_LENGTH<pos:position pos:line="36" pos:column="66"/></name></expr>]<pos:position pos:line="36" pos:column="67"/></index></name> <operator pos:line="36" pos:column="68">=<pos:position pos:line="36" pos:column="69"/></operator> <name><name pos:line="36" pos:column="70">context<pos:position pos:line="36" pos:column="77"/></name><operator pos:line="36" pos:column="77">-&gt;<pos:position pos:line="36" pos:column="82"/></operator><name pos:line="36" pos:column="79">bitcount<pos:position pos:line="36" pos:column="87"/></name><index pos:line="36" pos:column="87">[<expr><literal type="number" pos:line="36" pos:column="88">1<pos:position pos:line="36" pos:column="89"/></literal></expr>]<pos:position pos:line="36" pos:column="90"/></index></name></expr>;<pos:position pos:line="36" pos:column="91"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="37" pos:column="9">*<pos:position pos:line="37" pos:column="10"/></operator><operator pos:line="37" pos:column="10">(<pos:position pos:line="37" pos:column="11"/></operator><name pos:line="37" pos:column="11">sha2_word64<pos:position pos:line="37" pos:column="22"/></name><operator pos:line="37" pos:column="22">*<pos:position pos:line="37" pos:column="23"/></operator><operator pos:line="37" pos:column="23">)<pos:position pos:line="37" pos:column="24"/></operator><operator pos:line="37" pos:column="24">&amp;<pos:position pos:line="37" pos:column="29"/></operator><name><name pos:line="37" pos:column="25">context<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">-&gt;<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="34">buffer<pos:position pos:line="37" pos:column="40"/></name><index pos:line="37" pos:column="40">[<expr><name pos:line="37" pos:column="41">SHA512_SHORT_BLOCK_LENGTH<pos:position pos:line="37" pos:column="66"/></name><operator pos:line="37" pos:column="66">+<pos:position pos:line="37" pos:column="67"/></operator><literal type="number" pos:line="37" pos:column="67">8<pos:position pos:line="37" pos:column="68"/></literal></expr>]<pos:position pos:line="37" pos:column="69"/></index></name> <operator pos:line="37" pos:column="70">=<pos:position pos:line="37" pos:column="71"/></operator> <name><name pos:line="37" pos:column="72">context<pos:position pos:line="37" pos:column="79"/></name><operator pos:line="37" pos:column="79">-&gt;<pos:position pos:line="37" pos:column="84"/></operator><name pos:line="37" pos:column="81">bitcount<pos:position pos:line="37" pos:column="89"/></name><index pos:line="37" pos:column="89">[<expr><literal type="number" pos:line="37" pos:column="90">0<pos:position pos:line="37" pos:column="91"/></literal></expr>]<pos:position pos:line="37" pos:column="92"/></index></name></expr>;<pos:position pos:line="37" pos:column="93"/></expr_stmt>

        <comment type="block" pos:line="39" pos:column="9">/* Final transform: */</comment>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">apr__SHA512_Transform<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">context<pos:position pos:line="40" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="40">(<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="41">sha2_word64<pos:position pos:line="40" pos:column="52"/></name><operator pos:line="40" pos:column="52">*<pos:position pos:line="40" pos:column="53"/></operator><operator pos:line="40" pos:column="53">)<pos:position pos:line="40" pos:column="54"/></operator><name><name pos:line="40" pos:column="54">context<pos:position pos:line="40" pos:column="61"/></name><operator pos:line="40" pos:column="61">-&gt;<pos:position pos:line="40" pos:column="66"/></operator><name pos:line="40" pos:column="63">buffer<pos:position pos:line="40" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="71"/></expr_stmt>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1894.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">util_ldap_post_config<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">apr_pool_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">p<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">apr_pool_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">plog<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="2" pos:column="34">apr_pool_t<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">ptemp<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">server_rec<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">s<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">result<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">server_rec<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">s_vhost<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">util_ldap_state_t<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">st_vhost<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">util_ldap_state_t<pos:position pos:line="8" pos:column="22"/></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">st<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><operator pos:line="8" pos:column="29">(<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">util_ldap_state_t<pos:position pos:line="8" pos:column="47"/></name> <operator pos:line="8" pos:column="48">*<pos:position pos:line="8" pos:column="49"/></operator><operator pos:line="8" pos:column="49">)<pos:position pos:line="8" pos:column="50"/></operator>
                            <call><name pos:line="9" pos:column="29">ap_get_module_config<pos:position pos:line="9" pos:column="49"/></name><argument_list pos:line="9" pos:column="49">(<argument><expr><name><name pos:line="9" pos:column="50">s<pos:position pos:line="9" pos:column="51"/></name><operator pos:line="9" pos:column="51">-&gt;<pos:position pos:line="9" pos:column="56"/></operator><name pos:line="9" pos:column="53">module_config<pos:position pos:line="9" pos:column="66"/></name></name></expr></argument>,
                                                 <argument><expr><operator pos:line="10" pos:column="50">&amp;<pos:position pos:line="10" pos:column="55"/></operator><name pos:line="10" pos:column="51">ldap_module<pos:position pos:line="10" pos:column="62"/></name></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="64"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">void<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">data<pos:position pos:line="12" pos:column="15"/></name></decl>;<pos:position pos:line="12" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">char<pos:position pos:line="13" pos:column="15"/></name> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">userdata_key<pos:position pos:line="13" pos:column="29"/></name> <init pos:line="13" pos:column="30">= <expr><literal type="string" pos:line="13" pos:column="32">"util_ldap_init"<pos:position pos:line="13" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_ldap_err_t<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">result_err<pos:position pos:line="14" pos:column="31"/></name> <init pos:line="14" pos:column="32">= <expr><name pos:line="14" pos:column="34">NULL<pos:position pos:line="14" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">rc<pos:position pos:line="15" pos:column="11"/></name></decl>;<pos:position pos:line="15" pos:column="12"/></decl_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* util_ldap_post_config() will be called twice. Don't bother
     * going through all of the initialization on the first call
     * because it will just be thrown away.*/</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">apr_pool_userdata_get<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><operator pos:line="20" pos:column="27">&amp;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="28">data<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">userdata_key<pos:position pos:line="20" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="48">s<pos:position pos:line="20" pos:column="49"/></name><operator pos:line="20" pos:column="49">-&gt;<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="51">process<pos:position pos:line="20" pos:column="58"/></name><operator pos:line="20" pos:column="58">-&gt;<pos:position pos:line="20" pos:column="63"/></operator><name pos:line="20" pos:column="60">pool<pos:position pos:line="20" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="66"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">data<pos:position pos:line="21" pos:column="14"/></name></expr>)<pos:position pos:line="21" pos:column="15"/></condition><then pos:line="21" pos:column="15"> <block pos:line="21" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">apr_pool_userdata_set<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><operator pos:line="22" pos:column="31">(<pos:position pos:line="22" pos:column="32"/></operator><specifier pos:line="22" pos:column="32">const<pos:position pos:line="22" pos:column="37"/></specifier> <name pos:line="22" pos:column="38">void<pos:position pos:line="22" pos:column="42"/></name> <operator pos:line="22" pos:column="43">*<pos:position pos:line="22" pos:column="44"/></operator><operator pos:line="22" pos:column="44">)<pos:position pos:line="22" pos:column="45"/></operator><literal type="number" pos:line="22" pos:column="45">1<pos:position pos:line="22" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="48">userdata_key<pos:position pos:line="22" pos:column="60"/></name></expr></argument>,
                               <argument><expr><name pos:line="23" pos:column="32">apr_pool_cleanup_null<pos:position pos:line="23" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="55">s<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">-&gt;<pos:position pos:line="23" pos:column="61"/></operator><name pos:line="23" pos:column="58">process<pos:position pos:line="23" pos:column="65"/></name><operator pos:line="23" pos:column="65">-&gt;<pos:position pos:line="23" pos:column="70"/></operator><name pos:line="23" pos:column="67">pool<pos:position pos:line="23" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="73"/></expr_stmt>

<cpp:if pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">if<pos:position pos:line="25" pos:column="4"/></cpp:directive> <expr><name pos:line="25" pos:column="5">APR_HAS_SHARED_MEMORY<pos:position pos:line="25" pos:column="26"/></name></expr></cpp:if>
        <comment type="block" pos:line="26" pos:column="9">/* If the cache file already exists then delete it.  Otherwise we are
         * going to run into problems creating the shared memory. */</comment>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">st<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">cache_file<pos:position pos:line="28" pos:column="27"/></name></name></expr>)<pos:position pos:line="28" pos:column="28"/></condition><then pos:line="28" pos:column="28"> <block pos:line="28" pos:column="29">{
            <decl_stmt><decl><type><name pos:line="29" pos:column="13">char<pos:position pos:line="29" pos:column="17"/></name> <modifier pos:line="29" pos:column="18">*<pos:position pos:line="29" pos:column="19"/></modifier></type><name pos:line="29" pos:column="19">lck_file<pos:position pos:line="29" pos:column="27"/></name> <init pos:line="29" pos:column="28">= <expr><call><name pos:line="29" pos:column="30">apr_pstrcat<pos:position pos:line="29" pos:column="41"/></name><argument_list pos:line="29" pos:column="41">(<argument><expr><name pos:line="29" pos:column="42">ptemp<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="49">st<pos:position pos:line="29" pos:column="51"/></name><operator pos:line="29" pos:column="51">-&gt;<pos:position pos:line="29" pos:column="56"/></operator><name pos:line="29" pos:column="53">cache_file<pos:position pos:line="29" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="65">".lck"<pos:position pos:line="29" pos:column="71"/></literal></expr></argument>,
                                         <argument><expr><name pos:line="30" pos:column="42">NULL<pos:position pos:line="30" pos:column="46"/></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="48"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">apr_file_remove<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><name pos:line="31" pos:column="29">lck_file<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="39">ptemp<pos:position pos:line="31" pos:column="44"/></name></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>
        <return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">OK<pos:position pos:line="34" pos:column="18"/></name></expr>;<pos:position pos:line="34" pos:column="19"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

<cpp:if pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">if<pos:position pos:line="37" pos:column="4"/></cpp:directive> <expr><name pos:line="37" pos:column="5">APR_HAS_SHARED_MEMORY<pos:position pos:line="37" pos:column="26"/></name></expr></cpp:if>
    <comment type="block" pos:line="38" pos:column="5">/* initializing cache if shared memory size is not zero and we already
     * don't have shm address
     */</comment>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">!<pos:position pos:line="41" pos:column="10"/></operator><name><name pos:line="41" pos:column="10">st<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">-&gt;<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="14">cache_shm<pos:position pos:line="41" pos:column="23"/></name></name> <operator pos:line="41" pos:column="24">&amp;&amp;<pos:position pos:line="41" pos:column="34"/></operator> <name><name pos:line="41" pos:column="27">st<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">-&gt;<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="31">cache_bytes<pos:position pos:line="41" pos:column="42"/></name></name> <operator pos:line="41" pos:column="43">&gt;<pos:position pos:line="41" pos:column="47"/></operator> <literal type="number" pos:line="41" pos:column="45">0<pos:position pos:line="41" pos:column="46"/></literal></expr>)<pos:position pos:line="41" pos:column="47"/></condition><then pos:line="41" pos:column="47"> <block pos:line="41" pos:column="48">{
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name pos:line="43" pos:column="9">result<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <call><name pos:line="43" pos:column="18">util_ldap_cache_init<pos:position pos:line="43" pos:column="38"/></name><argument_list pos:line="43" pos:column="38">(<argument><expr><name pos:line="43" pos:column="39">p<pos:position pos:line="43" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="42">st<pos:position pos:line="43" pos:column="44"/></name></expr></argument>)<pos:position pos:line="43" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="46"/></expr_stmt>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">result<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">!=<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="23">APR_SUCCESS<pos:position pos:line="44" pos:column="34"/></name></expr>)<pos:position pos:line="44" pos:column="35"/></condition><then pos:line="44" pos:column="35"> <block pos:line="44" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">ap_log_error<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">APLOG_MARK<pos:position pos:line="45" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="38">APLOG_ERR<pos:position pos:line="45" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="49">result<pos:position pos:line="45" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="57">s<pos:position pos:line="45" pos:column="58"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="46" pos:column="26">"LDAP cache: could not create shared memory segment"<pos:position pos:line="46" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="80"/></expr_stmt>
            <return pos:line="47" pos:column="13">return <expr><name pos:line="47" pos:column="20">DONE<pos:position pos:line="47" pos:column="24"/></name></expr>;<pos:position pos:line="47" pos:column="25"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="50" pos:column="9">result<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <call><name pos:line="50" pos:column="18">ap_global_mutex_create<pos:position pos:line="50" pos:column="40"/></name><argument_list pos:line="50" pos:column="40">(<argument><expr><operator pos:line="50" pos:column="41">&amp;<pos:position pos:line="50" pos:column="46"/></operator><name><name pos:line="50" pos:column="42">st<pos:position pos:line="50" pos:column="44"/></name><operator pos:line="50" pos:column="44">-&gt;<pos:position pos:line="50" pos:column="49"/></operator><name pos:line="50" pos:column="46">util_ldap_cache_lock<pos:position pos:line="50" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="68">NULL<pos:position pos:line="50" pos:column="72"/></name></expr></argument>,
                                        <argument><expr><name pos:line="51" pos:column="41">ldap_cache_mutex_type<pos:position pos:line="51" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="64">NULL<pos:position pos:line="51" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="70">s<pos:position pos:line="51" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="73">p<pos:position pos:line="51" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="76">0<pos:position pos:line="51" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="79"/></expr_stmt>
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">result<pos:position pos:line="52" pos:column="19"/></name> <operator pos:line="52" pos:column="20">!=<pos:position pos:line="52" pos:column="22"/></operator> <name pos:line="52" pos:column="23">APR_SUCCESS<pos:position pos:line="52" pos:column="34"/></name></expr>)<pos:position pos:line="52" pos:column="35"/></condition><then pos:line="52" pos:column="35"> <block pos:line="52" pos:column="36">{
            <return pos:line="53" pos:column="13">return <expr><name pos:line="53" pos:column="20">result<pos:position pos:line="53" pos:column="26"/></name></expr>;<pos:position pos:line="53" pos:column="27"/></return>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="56" pos:column="9">/* merge config in all vhost */</comment>
        <expr_stmt><expr><name pos:line="57" pos:column="9">s_vhost<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">=<pos:position pos:line="57" pos:column="18"/></operator> <name><name pos:line="57" pos:column="19">s<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">-&gt;<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="22">next<pos:position pos:line="57" pos:column="26"/></name></name></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>
        <while pos:line="58" pos:column="9">while <condition pos:line="58" pos:column="15">(<expr><name pos:line="58" pos:column="16">s_vhost<pos:position pos:line="58" pos:column="23"/></name></expr>)<pos:position pos:line="58" pos:column="24"/></condition> <block pos:line="58" pos:column="25">{
            <expr_stmt><expr><name pos:line="59" pos:column="13">st_vhost<pos:position pos:line="59" pos:column="21"/></name> <operator pos:line="59" pos:column="22">=<pos:position pos:line="59" pos:column="23"/></operator> <operator pos:line="59" pos:column="24">(<pos:position pos:line="59" pos:column="25"/></operator><name pos:line="59" pos:column="25">util_ldap_state_t<pos:position pos:line="59" pos:column="42"/></name> <operator pos:line="59" pos:column="43">*<pos:position pos:line="59" pos:column="44"/></operator><operator pos:line="59" pos:column="44">)<pos:position pos:line="59" pos:column="45"/></operator>
                       <call><name pos:line="60" pos:column="24">ap_get_module_config<pos:position pos:line="60" pos:column="44"/></name><argument_list pos:line="60" pos:column="44">(<argument><expr><name><name pos:line="60" pos:column="45">s_vhost<pos:position pos:line="60" pos:column="52"/></name><operator pos:line="60" pos:column="52">-&gt;<pos:position pos:line="60" pos:column="57"/></operator><name pos:line="60" pos:column="54">module_config<pos:position pos:line="60" pos:column="67"/></name></name></expr></argument>,
                                            <argument><expr><operator pos:line="61" pos:column="45">&amp;<pos:position pos:line="61" pos:column="50"/></operator><name pos:line="61" pos:column="46">ldap_module<pos:position pos:line="61" pos:column="57"/></name></expr></argument>)<pos:position pos:line="61" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="59"/></expr_stmt>

<cpp:if pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">if<pos:position pos:line="63" pos:column="4"/></cpp:directive> <expr><name pos:line="63" pos:column="5">APR_HAS_SHARED_MEMORY<pos:position pos:line="63" pos:column="26"/></name></expr></cpp:if>
            <expr_stmt><expr><name><name pos:line="64" pos:column="13">st_vhost<pos:position pos:line="64" pos:column="21"/></name><operator pos:line="64" pos:column="21">-&gt;<pos:position pos:line="64" pos:column="26"/></operator><name pos:line="64" pos:column="23">cache_shm<pos:position pos:line="64" pos:column="32"/></name></name> <operator pos:line="64" pos:column="33">=<pos:position pos:line="64" pos:column="34"/></operator> <name><name pos:line="64" pos:column="35">st<pos:position pos:line="64" pos:column="37"/></name><operator pos:line="64" pos:column="37">-&gt;<pos:position pos:line="64" pos:column="42"/></operator><name pos:line="64" pos:column="39">cache_shm<pos:position pos:line="64" pos:column="48"/></name></name></expr>;<pos:position pos:line="64" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="65" pos:column="13">st_vhost<pos:position pos:line="65" pos:column="21"/></name><operator pos:line="65" pos:column="21">-&gt;<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="23">cache_rmm<pos:position pos:line="65" pos:column="32"/></name></name> <operator pos:line="65" pos:column="33">=<pos:position pos:line="65" pos:column="34"/></operator> <name><name pos:line="65" pos:column="35">st<pos:position pos:line="65" pos:column="37"/></name><operator pos:line="65" pos:column="37">-&gt;<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="39">cache_rmm<pos:position pos:line="65" pos:column="48"/></name></name></expr>;<pos:position pos:line="65" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="66" pos:column="13">st_vhost<pos:position pos:line="66" pos:column="21"/></name><operator pos:line="66" pos:column="21">-&gt;<pos:position pos:line="66" pos:column="26"/></operator><name pos:line="66" pos:column="23">cache_file<pos:position pos:line="66" pos:column="33"/></name></name> <operator pos:line="66" pos:column="34">=<pos:position pos:line="66" pos:column="35"/></operator> <name><name pos:line="66" pos:column="36">st<pos:position pos:line="66" pos:column="38"/></name><operator pos:line="66" pos:column="38">-&gt;<pos:position pos:line="66" pos:column="43"/></operator><name pos:line="66" pos:column="40">cache_file<pos:position pos:line="66" pos:column="50"/></name></name></expr>;<pos:position pos:line="66" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="67" pos:column="13">st_vhost<pos:position pos:line="67" pos:column="21"/></name><operator pos:line="67" pos:column="21">-&gt;<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="23">util_ldap_cache<pos:position pos:line="67" pos:column="38"/></name></name>      <operator pos:line="67" pos:column="44">=<pos:position pos:line="67" pos:column="45"/></operator> <name><name pos:line="67" pos:column="46">st<pos:position pos:line="67" pos:column="48"/></name><operator pos:line="67" pos:column="48">-&gt;<pos:position pos:line="67" pos:column="53"/></operator><name pos:line="67" pos:column="50">util_ldap_cache<pos:position pos:line="67" pos:column="65"/></name></name></expr>;<pos:position pos:line="67" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">ap_log_error<pos:position pos:line="68" pos:column="25"/></name><argument_list pos:line="68" pos:column="25">(<argument><expr><name pos:line="68" pos:column="26">APLOG_MARK<pos:position pos:line="68" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="38">APLOG_DEBUG<pos:position pos:line="68" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="51">result<pos:position pos:line="68" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="59">s<pos:position pos:line="68" pos:column="60"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="69" pos:column="26">"LDAP merging Shared Cache conf: shm=0x%pp rmm=0x%pp "<pos:position pos:line="69" pos:column="80"/></literal>
                         <literal type="string" pos:line="70" pos:column="26">"for VHOST: %s"<pos:position pos:line="70" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="43">st<pos:position pos:line="70" pos:column="45"/></name><operator pos:line="70" pos:column="45">-&gt;<pos:position pos:line="70" pos:column="50"/></operator><name pos:line="70" pos:column="47">cache_shm<pos:position pos:line="70" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="58">st<pos:position pos:line="70" pos:column="60"/></name><operator pos:line="70" pos:column="60">-&gt;<pos:position pos:line="70" pos:column="65"/></operator><name pos:line="70" pos:column="62">cache_rmm<pos:position pos:line="70" pos:column="71"/></name></name></expr></argument>,
                         <argument><expr><name><name pos:line="71" pos:column="26">s_vhost<pos:position pos:line="71" pos:column="33"/></name><operator pos:line="71" pos:column="33">-&gt;<pos:position pos:line="71" pos:column="38"/></operator><name pos:line="71" pos:column="35">server_hostname<pos:position pos:line="71" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">endif<pos:position pos:line="72" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name pos:line="73" pos:column="13">s_vhost<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">=<pos:position pos:line="73" pos:column="22"/></operator> <name><name pos:line="73" pos:column="23">s_vhost<pos:position pos:line="73" pos:column="30"/></name><operator pos:line="73" pos:column="30">-&gt;<pos:position pos:line="73" pos:column="35"/></operator><name pos:line="73" pos:column="32">next<pos:position pos:line="73" pos:column="36"/></name></name></expr>;<pos:position pos:line="73" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="74" pos:column="10"/></block></while>
<cpp:if pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">if<pos:position pos:line="75" pos:column="4"/></cpp:directive> <expr><name pos:line="75" pos:column="5">APR_HAS_SHARED_MEMORY<pos:position pos:line="75" pos:column="26"/></name></expr></cpp:if>
    }<pos:position pos:line="76" pos:column="6"/></block></then>
    <else pos:line="77" pos:column="5">else <block pos:line="77" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">ap_log_error<pos:position pos:line="78" pos:column="21"/></name><argument_list pos:line="78" pos:column="21">(<argument><expr><name pos:line="78" pos:column="22">APLOG_MARK<pos:position pos:line="78" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="34">APLOG_DEBUG<pos:position pos:line="78" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="47">0<pos:position pos:line="78" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="50">s<pos:position pos:line="78" pos:column="51"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="79" pos:column="22">"LDAP cache: LDAPSharedCacheSize is zero, disabling "<pos:position pos:line="79" pos:column="75"/></literal>
                     <literal type="string" pos:line="80" pos:column="22">"shared memory cache"<pos:position pos:line="80" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="81" pos:column="6"/></block></else></if>
<cpp:endif pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">endif<pos:position pos:line="82" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="84" pos:column="5">/* log the LDAP SDK used
     */</comment>
    <block pos:line="86" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="87" pos:column="9">apr_ldap_err_t<pos:position pos:line="87" pos:column="23"/></name> <modifier pos:line="87" pos:column="24">*<pos:position pos:line="87" pos:column="25"/></modifier></type><name pos:line="87" pos:column="25">result<pos:position pos:line="87" pos:column="31"/></name> <init pos:line="87" pos:column="32">= <expr><name pos:line="87" pos:column="34">NULL<pos:position pos:line="87" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="87" pos:column="39"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="88" pos:column="9">apr_ldap_info<pos:position pos:line="88" pos:column="22"/></name><argument_list pos:line="88" pos:column="22">(<argument><expr><name pos:line="88" pos:column="23">p<pos:position pos:line="88" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="26">&amp;<pos:position pos:line="88" pos:column="31"/></operator><operator pos:line="88" pos:column="27">(<pos:position pos:line="88" pos:column="28"/></operator><name pos:line="88" pos:column="28">result<pos:position pos:line="88" pos:column="34"/></name><operator pos:line="88" pos:column="34">)<pos:position pos:line="88" pos:column="35"/></operator></expr></argument>)<pos:position pos:line="88" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="37"/></expr_stmt>
        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name pos:line="89" pos:column="13">result<pos:position pos:line="89" pos:column="19"/></name> <operator pos:line="89" pos:column="20">!=<pos:position pos:line="89" pos:column="22"/></operator> <name pos:line="89" pos:column="23">NULL<pos:position pos:line="89" pos:column="27"/></name></expr>)<pos:position pos:line="89" pos:column="28"/></condition><then pos:line="89" pos:column="28"> <block pos:line="89" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="90" pos:column="13">ap_log_error<pos:position pos:line="90" pos:column="25"/></name><argument_list pos:line="90" pos:column="25">(<argument><expr><name pos:line="90" pos:column="26">APLOG_MARK<pos:position pos:line="90" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="38">APLOG_INFO<pos:position pos:line="90" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="50">0<pos:position pos:line="90" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="53">s<pos:position pos:line="90" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="56">"%s"<pos:position pos:line="90" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="62">result<pos:position pos:line="90" pos:column="68"/></name><operator pos:line="90" pos:column="68">-&gt;<pos:position pos:line="90" pos:column="73"/></operator><name pos:line="90" pos:column="70">reason<pos:position pos:line="90" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="78"/></expr_stmt>
        }<pos:position pos:line="91" pos:column="10"/></block></then></if>
    }<pos:position pos:line="92" pos:column="6"/></block>

    <expr_stmt><expr><call><name pos:line="94" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="94" pos:column="30"/></name><argument_list pos:line="94" pos:column="30">(<argument><expr><name pos:line="94" pos:column="31">p<pos:position pos:line="94" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="34">s<pos:position pos:line="94" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="37">util_ldap_cleanup_module<pos:position pos:line="94" pos:column="61"/></name></expr></argument>,
                              <argument><expr><name pos:line="95" pos:column="31">util_ldap_cleanup_module<pos:position pos:line="95" pos:column="55"/></name></expr></argument>)<pos:position pos:line="95" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="97" pos:column="5">/*
     * Initialize SSL support, and log the result for the benefit of the admin.
     *
     * If SSL is not supported it is not necessarily an error, as the
     * application may not want to use it.
     */</comment>
    <expr_stmt><expr><name pos:line="103" pos:column="5">rc<pos:position pos:line="103" pos:column="7"/></name> <operator pos:line="103" pos:column="8">=<pos:position pos:line="103" pos:column="9"/></operator> <call><name pos:line="103" pos:column="10">apr_ldap_ssl_init<pos:position pos:line="103" pos:column="27"/></name><argument_list pos:line="103" pos:column="27">(<argument><expr><name pos:line="103" pos:column="28">p<pos:position pos:line="103" pos:column="29"/></name></expr></argument>,
                      <argument><expr><name pos:line="104" pos:column="23">NULL<pos:position pos:line="104" pos:column="27"/></name></expr></argument>,
                      <argument><expr><literal type="number" pos:line="105" pos:column="23">0<pos:position pos:line="105" pos:column="24"/></literal></expr></argument>,
                      <argument><expr><operator pos:line="106" pos:column="23">&amp;<pos:position pos:line="106" pos:column="28"/></operator><operator pos:line="106" pos:column="24">(<pos:position pos:line="106" pos:column="25"/></operator><name pos:line="106" pos:column="25">result_err<pos:position pos:line="106" pos:column="35"/></name><operator pos:line="106" pos:column="35">)<pos:position pos:line="106" pos:column="36"/></operator></expr></argument>)<pos:position pos:line="106" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="38"/></expr_stmt>
    <if pos:line="107" pos:column="5">if <condition pos:line="107" pos:column="8">(<expr><name pos:line="107" pos:column="9">APR_SUCCESS<pos:position pos:line="107" pos:column="20"/></name> <operator pos:line="107" pos:column="21">==<pos:position pos:line="107" pos:column="23"/></operator> <name pos:line="107" pos:column="24">rc<pos:position pos:line="107" pos:column="26"/></name></expr>)<pos:position pos:line="107" pos:column="27"/></condition><then pos:line="107" pos:column="27"> <block pos:line="107" pos:column="28">{
        <expr_stmt><expr><name pos:line="108" pos:column="9">rc<pos:position pos:line="108" pos:column="11"/></name> <operator pos:line="108" pos:column="12">=<pos:position pos:line="108" pos:column="13"/></operator> <call><name pos:line="108" pos:column="14">apr_ldap_set_option<pos:position pos:line="108" pos:column="33"/></name><argument_list pos:line="108" pos:column="33">(<argument><expr><name pos:line="108" pos:column="34">ptemp<pos:position pos:line="108" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="41">NULL<pos:position pos:line="108" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="47">APR_LDAP_OPT_TLS_CERT<pos:position pos:line="108" pos:column="68"/></name></expr></argument>,
                                 <argument><expr><operator pos:line="109" pos:column="34">(<pos:position pos:line="109" pos:column="35"/></operator><name pos:line="109" pos:column="35">void<pos:position pos:line="109" pos:column="39"/></name> <operator pos:line="109" pos:column="40">*<pos:position pos:line="109" pos:column="41"/></operator><operator pos:line="109" pos:column="41">)<pos:position pos:line="109" pos:column="42"/></operator><name><name pos:line="109" pos:column="42">st<pos:position pos:line="109" pos:column="44"/></name><operator pos:line="109" pos:column="44">-&gt;<pos:position pos:line="109" pos:column="49"/></operator><name pos:line="109" pos:column="46">global_certs<pos:position pos:line="109" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="109" pos:column="60">&amp;<pos:position pos:line="109" pos:column="65"/></operator><operator pos:line="109" pos:column="61">(<pos:position pos:line="109" pos:column="62"/></operator><name pos:line="109" pos:column="62">result_err<pos:position pos:line="109" pos:column="72"/></name><operator pos:line="109" pos:column="72">)<pos:position pos:line="109" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="109" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="110" pos:column="6"/></block></then></if>

    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><name pos:line="112" pos:column="9">APR_SUCCESS<pos:position pos:line="112" pos:column="20"/></name> <operator pos:line="112" pos:column="21">==<pos:position pos:line="112" pos:column="23"/></operator> <name pos:line="112" pos:column="24">rc<pos:position pos:line="112" pos:column="26"/></name></expr>)<pos:position pos:line="112" pos:column="27"/></condition><then pos:line="112" pos:column="27"> <block pos:line="112" pos:column="28">{
        <expr_stmt><expr><name><name pos:line="113" pos:column="9">st<pos:position pos:line="113" pos:column="11"/></name><operator pos:line="113" pos:column="11">-&gt;<pos:position pos:line="113" pos:column="16"/></operator><name pos:line="113" pos:column="13">ssl_supported<pos:position pos:line="113" pos:column="26"/></name></name> <operator pos:line="113" pos:column="27">=<pos:position pos:line="113" pos:column="28"/></operator> <literal type="number" pos:line="113" pos:column="29">1<pos:position pos:line="113" pos:column="30"/></literal></expr>;<pos:position pos:line="113" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="114" pos:column="9">ap_log_error<pos:position pos:line="114" pos:column="21"/></name><argument_list pos:line="114" pos:column="21">(<argument><expr><name pos:line="114" pos:column="22">APLOG_MARK<pos:position pos:line="114" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="34">APLOG_INFO<pos:position pos:line="114" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="46">0<pos:position pos:line="114" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="49">s<pos:position pos:line="114" pos:column="50"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="115" pos:column="22">"LDAP: SSL support available"<pos:position pos:line="115" pos:column="51"/></literal></expr></argument> )<pos:position pos:line="115" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="116" pos:column="6"/></block></then>
    <else pos:line="117" pos:column="5">else <block pos:line="117" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="118" pos:column="9">st<pos:position pos:line="118" pos:column="11"/></name><operator pos:line="118" pos:column="11">-&gt;<pos:position pos:line="118" pos:column="16"/></operator><name pos:line="118" pos:column="13">ssl_supported<pos:position pos:line="118" pos:column="26"/></name></name> <operator pos:line="118" pos:column="27">=<pos:position pos:line="118" pos:column="28"/></operator> <literal type="number" pos:line="118" pos:column="29">0<pos:position pos:line="118" pos:column="30"/></literal></expr>;<pos:position pos:line="118" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="119" pos:column="9">ap_log_error<pos:position pos:line="119" pos:column="21"/></name><argument_list pos:line="119" pos:column="21">(<argument><expr><name pos:line="119" pos:column="22">APLOG_MARK<pos:position pos:line="119" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="34">APLOG_INFO<pos:position pos:line="119" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="119" pos:column="46">0<pos:position pos:line="119" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="119" pos:column="49">s<pos:position pos:line="119" pos:column="50"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="120" pos:column="22">"LDAP: SSL support unavailable%s%s"<pos:position pos:line="120" pos:column="57"/></literal></expr></argument>,
                     <argument><expr><ternary><condition><expr><name pos:line="121" pos:column="22">result_err<pos:position pos:line="121" pos:column="32"/></name></expr> ?<pos:position pos:line="121" pos:column="34"/></condition><then pos:line="121" pos:column="34"> <expr><literal type="string" pos:line="121" pos:column="35">": "<pos:position pos:line="121" pos:column="39"/></literal></expr> <pos:position pos:line="121" pos:column="40"/></then><else pos:line="121" pos:column="40">: <expr><literal type="string" pos:line="121" pos:column="42">""<pos:position pos:line="121" pos:column="44"/></literal></expr></else></ternary></expr></argument>,
                     <argument><expr><ternary><condition><expr><name pos:line="122" pos:column="22">result_err<pos:position pos:line="122" pos:column="32"/></name></expr> ?<pos:position pos:line="122" pos:column="34"/></condition><then pos:line="122" pos:column="34"> <expr><name><name pos:line="122" pos:column="35">result_err<pos:position pos:line="122" pos:column="45"/></name><operator pos:line="122" pos:column="45">-&gt;<pos:position pos:line="122" pos:column="50"/></operator><name pos:line="122" pos:column="47">reason<pos:position pos:line="122" pos:column="53"/></name></name></expr> <pos:position pos:line="122" pos:column="54"/></then><else pos:line="122" pos:column="54">: <expr><literal type="string" pos:line="122" pos:column="56">""<pos:position pos:line="122" pos:column="58"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="122" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="123" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="125" pos:column="5">/* Initialize the rebind callback's cross reference list. */</comment>
    <expr_stmt><expr><call><name pos:line="126" pos:column="5">apr_ldap_rebind_init<pos:position pos:line="126" pos:column="25"/></name> <argument_list pos:line="126" pos:column="26">(<argument><expr><name pos:line="126" pos:column="27">p<pos:position pos:line="126" pos:column="28"/></name></expr></argument>)<pos:position pos:line="126" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="30"/></expr_stmt>

<cpp:ifdef pos:line="128" pos:column="1">#<cpp:directive pos:line="128" pos:column="2">ifdef<pos:position pos:line="128" pos:column="7"/></cpp:directive> <name pos:line="128" pos:column="8">AP_LDAP_OPT_DEBUG<pos:position pos:line="128" pos:column="25"/></name></cpp:ifdef>
    <if pos:line="129" pos:column="5">if <condition pos:line="129" pos:column="8">(<expr><name><name pos:line="129" pos:column="9">st<pos:position pos:line="129" pos:column="11"/></name><operator pos:line="129" pos:column="11">-&gt;<pos:position pos:line="129" pos:column="16"/></operator><name pos:line="129" pos:column="13">debug_level<pos:position pos:line="129" pos:column="24"/></name></name> <operator pos:line="129" pos:column="25">&gt;<pos:position pos:line="129" pos:column="29"/></operator> <literal type="number" pos:line="129" pos:column="27">0<pos:position pos:line="129" pos:column="28"/></literal></expr>)<pos:position pos:line="129" pos:column="29"/></condition><then pos:line="129" pos:column="29"> <block pos:line="129" pos:column="30">{ 
        <expr_stmt><expr><name pos:line="130" pos:column="9">result<pos:position pos:line="130" pos:column="15"/></name> <operator pos:line="130" pos:column="16">=<pos:position pos:line="130" pos:column="17"/></operator> <call><name pos:line="130" pos:column="18">ldap_set_option<pos:position pos:line="130" pos:column="33"/></name><argument_list pos:line="130" pos:column="33">(<argument><expr><name pos:line="130" pos:column="34">NULL<pos:position pos:line="130" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="40">AP_LDAP_OPT_DEBUG<pos:position pos:line="130" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="130" pos:column="59">&amp;<pos:position pos:line="130" pos:column="64"/></operator><name><name pos:line="130" pos:column="60">st<pos:position pos:line="130" pos:column="62"/></name><operator pos:line="130" pos:column="62">-&gt;<pos:position pos:line="130" pos:column="67"/></operator><name pos:line="130" pos:column="64">debug_level<pos:position pos:line="130" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="77"/></expr_stmt>
        <if pos:line="131" pos:column="9">if <condition pos:line="131" pos:column="12">(<expr><name pos:line="131" pos:column="13">result<pos:position pos:line="131" pos:column="19"/></name> <operator pos:line="131" pos:column="20">!=<pos:position pos:line="131" pos:column="22"/></operator> <name pos:line="131" pos:column="23">LDAP_SUCCESS<pos:position pos:line="131" pos:column="35"/></name></expr>)<pos:position pos:line="131" pos:column="36"/></condition><then pos:line="131" pos:column="36"> <block pos:line="131" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="132" pos:column="13">ap_log_error<pos:position pos:line="132" pos:column="25"/></name><argument_list pos:line="132" pos:column="25">(<argument><expr><name pos:line="132" pos:column="26">APLOG_MARK<pos:position pos:line="132" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="38">APLOG_ERR<pos:position pos:line="132" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="132" pos:column="49">0<pos:position pos:line="132" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="132" pos:column="52">s<pos:position pos:line="132" pos:column="53"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="133" pos:column="21">"LDAP: Could not set the LDAP library debug level to %d:(%d) %s"<pos:position pos:line="133" pos:column="85"/></literal></expr></argument>, 
                    <argument><expr><name><name pos:line="134" pos:column="21">st<pos:position pos:line="134" pos:column="23"/></name><operator pos:line="134" pos:column="23">-&gt;<pos:position pos:line="134" pos:column="28"/></operator><name pos:line="134" pos:column="25">debug_level<pos:position pos:line="134" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="38">result<pos:position pos:line="134" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="134" pos:column="46">ldap_err2string<pos:position pos:line="134" pos:column="61"/></name><argument_list pos:line="134" pos:column="61">(<argument><expr><name pos:line="134" pos:column="62">result<pos:position pos:line="134" pos:column="68"/></name></expr></argument>)<pos:position pos:line="134" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="134" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="135" pos:column="10"/></block></then></if>
    }<pos:position pos:line="136" pos:column="6"/></block></then></if>
<cpp:endif pos:line="137" pos:column="1">#<cpp:directive pos:line="137" pos:column="2">endif<pos:position pos:line="137" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="139" pos:column="5">return<expr><operator pos:line="139" pos:column="11">(<pos:position pos:line="139" pos:column="12"/></operator><name pos:line="139" pos:column="12">OK<pos:position pos:line="139" pos:column="14"/></name><operator pos:line="139" pos:column="14">)<pos:position pos:line="139" pos:column="15"/></operator></expr>;<pos:position pos:line="139" pos:column="16"/></return>
}<pos:position pos:line="140" pos:column="2"/></block></function></unit>

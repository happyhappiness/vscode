<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6672.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">open_response<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">h2_task<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">task<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">h2_response<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">response<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><name pos:line="4" pos:column="5">response<pos:position pos:line="4" pos:column="13"/></name> <operator pos:line="4" pos:column="14">=<pos:position pos:line="4" pos:column="15"/></operator> <call><name pos:line="4" pos:column="16">h2_from_h1_get_response<pos:position pos:line="4" pos:column="39"/></name><argument_list pos:line="4" pos:column="39">(<argument><expr><name><name pos:line="4" pos:column="40">task<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">-&gt;<pos:position pos:line="4" pos:column="49"/></operator><name pos:line="4" pos:column="46">output<pos:position pos:line="4" pos:column="52"/></name><operator pos:line="4" pos:column="52">.<pos:position pos:line="4" pos:column="53"/></operator><name pos:line="4" pos:column="53">from_h1<pos:position pos:line="4" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="62"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">response<pos:position pos:line="5" pos:column="18"/></name></expr>)<pos:position pos:line="5" pos:column="19"/></condition><then pos:line="5" pos:column="19"> <block pos:line="5" pos:column="20">{
        <comment type="block" pos:line="6" pos:column="9">/* This happens currently when ap_die(status, r) is invoked
         * by a read request filter. */</comment>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">ap_log_cerror<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">APLOG_MARK<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="35">APLOG_DEBUG<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="48">0<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="51">task<pos:position pos:line="8" pos:column="55"/></name><operator pos:line="8" pos:column="55">-&gt;<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="57">c<pos:position pos:line="8" pos:column="58"/></name></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="60">APLOGNO<pos:position pos:line="8" pos:column="67"/></name><argument_list pos:line="8" pos:column="67">(<argument><expr><literal type="number" pos:line="8" pos:column="68">03204<pos:position pos:line="8" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="74"/></argument_list></call>
                      <literal type="string" pos:line="9" pos:column="23">"h2_task(%s): write without response for %s %s %s"<pos:position pos:line="9" pos:column="73"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="10" pos:column="23">task<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">id<pos:position pos:line="10" pos:column="31"/></name></name></expr></argument>, 
                      <argument><expr><name><name pos:line="11" pos:column="23">task<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">request<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">method<pos:position pos:line="11" pos:column="44"/></name></name></expr></argument>, 
                      <argument><expr><name><name pos:line="12" pos:column="23">task<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">request<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">authority<pos:position pos:line="12" pos:column="47"/></name></name></expr></argument>, 
                      <argument><expr><name><name pos:line="13" pos:column="23">task<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">request<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">-&gt;<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="38">path<pos:position pos:line="13" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">task<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">c<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">aborted<pos:position pos:line="14" pos:column="25"/></name></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <literal type="number" pos:line="14" pos:column="28">1<pos:position pos:line="14" pos:column="29"/></literal></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">APR_ECONNABORTED<pos:position pos:line="15" pos:column="32"/></name></expr>;<pos:position pos:line="15" pos:column="33"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">h2_task_logio_add_bytes_out<pos:position pos:line="18" pos:column="36"/></name></expr>)<pos:position pos:line="18" pos:column="37"/></condition><then pos:line="18" pos:column="37"> <block pos:line="18" pos:column="38">{
        <comment type="block" pos:line="19" pos:column="9">/* count headers as if we'd do a HTTP/1.1 serialization */</comment>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">task<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">output<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">.<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">written<pos:position pos:line="20" pos:column="29"/></name></name> <operator pos:line="20" pos:column="30">=<pos:position pos:line="20" pos:column="31"/></operator> <call><name pos:line="20" pos:column="32">h2_util_table_bytes<pos:position pos:line="20" pos:column="51"/></name><argument_list pos:line="20" pos:column="51">(<argument><expr><name><name pos:line="20" pos:column="52">response<pos:position pos:line="20" pos:column="60"/></name><operator pos:line="20" pos:column="60">-&gt;<pos:position pos:line="20" pos:column="65"/></operator><name pos:line="20" pos:column="62">headers<pos:position pos:line="20" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="71">3<pos:position pos:line="20" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call><operator pos:line="20" pos:column="73">+<pos:position pos:line="20" pos:column="74"/></operator><literal type="number" pos:line="20" pos:column="74">1<pos:position pos:line="20" pos:column="75"/></literal></expr>;<pos:position pos:line="20" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">h2_task_logio_add_bytes_out<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><name><name pos:line="21" pos:column="37">task<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">-&gt;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="43">c<pos:position pos:line="21" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="46">task<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">-&gt;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="52">output<pos:position pos:line="21" pos:column="58"/></name><operator pos:line="21" pos:column="58">.<pos:position pos:line="21" pos:column="59"/></operator><name pos:line="21" pos:column="59">written<pos:position pos:line="21" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ap_log_cerror<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">APLOG_MARK<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="31">APLOG_DEBUG<pos:position pos:line="23" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="44">0<pos:position pos:line="23" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="47">task<pos:position pos:line="23" pos:column="51"/></name><operator pos:line="23" pos:column="51">-&gt;<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="53">c<pos:position pos:line="23" pos:column="54"/></name></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="56">APLOGNO<pos:position pos:line="23" pos:column="63"/></name><argument_list pos:line="23" pos:column="63">(<argument><expr><literal type="number" pos:line="23" pos:column="64">03348<pos:position pos:line="23" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="70"/></argument_list></call>
                  <literal type="string" pos:line="24" pos:column="19">"h2_task(%s): open response to %s %s %s"<pos:position pos:line="24" pos:column="59"/></literal></expr></argument>,
                  <argument><expr><name><name pos:line="25" pos:column="19">task<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">id<pos:position pos:line="25" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="29">task<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">request<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">-&gt;<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="44">method<pos:position pos:line="25" pos:column="50"/></name></name></expr></argument>, 
                  <argument><expr><name><name pos:line="26" pos:column="19">task<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">-&gt;<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="25">request<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">-&gt;<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="34">authority<pos:position pos:line="26" pos:column="43"/></name></name></expr></argument>, 
                  <argument><expr><name><name pos:line="27" pos:column="19">task<pos:position pos:line="27" pos:column="23"/></name><operator pos:line="27" pos:column="23">-&gt;<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="25">request<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">path<pos:position pos:line="27" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><call><name pos:line="28" pos:column="12">h2_mplx_out_open<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name><name pos:line="28" pos:column="29">task<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">-&gt;<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="35">mplx<pos:position pos:line="28" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="41">task<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">-&gt;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="47">stream_id<pos:position pos:line="28" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="58">response<pos:position pos:line="28" pos:column="66"/></name></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="68"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

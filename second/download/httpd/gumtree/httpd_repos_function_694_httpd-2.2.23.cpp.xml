<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_694_httpd-2.2.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">char_buffer_read<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char_buffer_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">buffer<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">in<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">inl<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><operator pos:line="3" pos:column="9">!<pos:position pos:line="3" pos:column="10"/></operator><name><name pos:line="3" pos:column="10">buffer<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">-&gt;<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="18">length<pos:position pos:line="3" pos:column="24"/></name></name></expr>)<pos:position pos:line="3" pos:column="25"/></condition><then pos:line="3" pos:column="25"> <block pos:line="3" pos:column="26">{
        <return pos:line="4" pos:column="9">return <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr>;<pos:position pos:line="4" pos:column="18"/></return>
    }<pos:position pos:line="5" pos:column="6"/></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">buffer<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">length<pos:position pos:line="7" pos:column="23"/></name></name> <operator pos:line="7" pos:column="24">&gt;<pos:position pos:line="7" pos:column="28"/></operator> <name pos:line="7" pos:column="26">inl<pos:position pos:line="7" pos:column="29"/></name></expr>)<pos:position pos:line="7" pos:column="30"/></condition><then pos:line="7" pos:column="30"> <block pos:line="7" pos:column="31">{
        <comment type="block" pos:line="8" pos:column="9">/* we have have enough to fill the caller's buffer */</comment>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">memmove<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">in<pos:position pos:line="9" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="21">buffer<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">value<pos:position pos:line="9" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="36">inl<pos:position pos:line="9" pos:column="39"/></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">buffer<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">value<pos:position pos:line="10" pos:column="22"/></name></name> <operator pos:line="10" pos:column="23">+=<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="26">inl<pos:position pos:line="10" pos:column="29"/></name></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">buffer<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">length<pos:position pos:line="11" pos:column="23"/></name></name> <operator pos:line="11" pos:column="24">-=<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">inl<pos:position pos:line="11" pos:column="30"/></name></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then>
    <else pos:line="13" pos:column="5">else <block pos:line="13" pos:column="10">{
        <comment type="block" pos:line="14" pos:column="9">/* swallow remainder of the buffer */</comment>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">memmove<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">in<pos:position pos:line="15" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="21">buffer<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">value<pos:position pos:line="15" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="36">buffer<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">-&gt;<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="44">length<pos:position pos:line="15" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">inl<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <name><name pos:line="16" pos:column="15">buffer<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">length<pos:position pos:line="16" pos:column="29"/></name></name></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">buffer<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">-&gt;<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="17">value<pos:position pos:line="17" pos:column="22"/></name></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="25">NULL<pos:position pos:line="17" pos:column="29"/></name></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">buffer<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">length<pos:position pos:line="18" pos:column="23"/></name></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <literal type="number" pos:line="18" pos:column="26">0<pos:position pos:line="18" pos:column="27"/></literal></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></else></if>

    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">inl<pos:position pos:line="21" pos:column="15"/></name></expr>;<pos:position pos:line="21" pos:column="16"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_2417.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">reclaim_one_pid<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">pid_t<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">pid<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">action_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">action<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_proc_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">proc<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">waitret<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* Ensure pid sanity. */</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">pid<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">&lt;<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="15">1<pos:position pos:line="7" pos:column="16"/></literal></expr>)<pos:position pos:line="7" pos:column="17"/></condition><then pos:line="7" pos:column="17"> <block pos:line="7" pos:column="18">{
        <return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">1<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>        

    <expr_stmt><expr><name><name pos:line="11" pos:column="5">proc<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">.<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">pid<pos:position pos:line="11" pos:column="13"/></name></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">pid<pos:position pos:line="11" pos:column="19"/></name></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">waitret<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <call><name pos:line="12" pos:column="15">apr_proc_wait<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><operator pos:line="12" pos:column="29">&amp;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="30">proc<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="36">NULL<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">NULL<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">APR_NOWAIT<pos:position pos:line="12" pos:column="58"/></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">waitret<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">!=<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">APR_CHILD_NOTDONE<pos:position pos:line="13" pos:column="37"/></name></expr>)<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38"> <block pos:line="13" pos:column="39">{
        <return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">1<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <switch pos:line="17" pos:column="5">switch<condition pos:line="17" pos:column="11">(<expr><name pos:line="17" pos:column="12">action<pos:position pos:line="17" pos:column="18"/></name></expr>)<pos:position pos:line="17" pos:column="19"/></condition> <block pos:line="17" pos:column="20">{
    <case pos:line="18" pos:column="5">case <expr><name pos:line="18" pos:column="10">DO_NOTHING<pos:position pos:line="18" pos:column="20"/></name></expr>:<pos:position pos:line="18" pos:column="21"/></case>
        <break pos:line="19" pos:column="9">break;<pos:position pos:line="19" pos:column="15"/></break>

    <case pos:line="21" pos:column="5">case <expr><name pos:line="21" pos:column="10">SEND_SIGTERM<pos:position pos:line="21" pos:column="22"/></name></expr>:<pos:position pos:line="21" pos:column="23"/></case>
        <comment type="block" pos:line="22" pos:column="9">/* ok, now it's being annoying */</comment>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">ap_log_error<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">APLOG_MARK<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">APLOG_WARNING<pos:position pos:line="23" pos:column="47"/></name></expr></argument>,
                     <argument><expr><literal type="number" pos:line="24" pos:column="22">0<pos:position pos:line="24" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="25">ap_server_conf<pos:position pos:line="24" pos:column="39"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="25" pos:column="22">"child process %"<pos:position pos:line="25" pos:column="39"/></literal> <name pos:line="25" pos:column="40">APR_PID_T_FMT<pos:position pos:line="25" pos:column="53"/></name>
                     <literal type="string" pos:line="26" pos:column="22">" still did not exit, "<pos:position pos:line="26" pos:column="45"/></literal>
                     <literal type="string" pos:line="27" pos:column="22">"sending a SIGTERM"<pos:position pos:line="27" pos:column="41"/></literal></expr></argument>,
                     <argument><expr><name pos:line="28" pos:column="22">pid<pos:position pos:line="28" pos:column="25"/></name></expr></argument>)<pos:position pos:line="28" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">kill<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">(<argument><expr><name pos:line="29" pos:column="14">pid<pos:position pos:line="29" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="19">SIGTERM<pos:position pos:line="29" pos:column="26"/></name></expr></argument>)<pos:position pos:line="29" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
        <break pos:line="30" pos:column="9">break;<pos:position pos:line="30" pos:column="15"/></break>

    <case pos:line="32" pos:column="5">case <expr><name pos:line="32" pos:column="10">SEND_SIGKILL<pos:position pos:line="32" pos:column="22"/></name></expr>:<pos:position pos:line="32" pos:column="23"/></case>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">ap_log_error<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name pos:line="33" pos:column="22">APLOG_MARK<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="34">APLOG_ERR<pos:position pos:line="33" pos:column="43"/></name></expr></argument>,
                     <argument><expr><literal type="number" pos:line="34" pos:column="22">0<pos:position pos:line="34" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="25">ap_server_conf<pos:position pos:line="34" pos:column="39"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="35" pos:column="22">"child process %"<pos:position pos:line="35" pos:column="39"/></literal> <name pos:line="35" pos:column="40">APR_PID_T_FMT<pos:position pos:line="35" pos:column="53"/></name>
                     <literal type="string" pos:line="36" pos:column="22">" still did not exit, "<pos:position pos:line="36" pos:column="45"/></literal>
                     <literal type="string" pos:line="37" pos:column="22">"sending a SIGKILL"<pos:position pos:line="37" pos:column="41"/></literal></expr></argument>,
                     <argument><expr><name pos:line="38" pos:column="22">pid<pos:position pos:line="38" pos:column="25"/></name></expr></argument>)<pos:position pos:line="38" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
<cpp:ifndef pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">ifndef<pos:position pos:line="39" pos:column="8"/></cpp:directive> <name pos:line="39" pos:column="9">BEOS<pos:position pos:line="39" pos:column="13"/></name></cpp:ifndef>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">kill<pos:position pos:line="40" pos:column="13"/></name><argument_list pos:line="40" pos:column="13">(<argument><expr><name pos:line="40" pos:column="14">pid<pos:position pos:line="40" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="19">SIGKILL<pos:position pos:line="40" pos:column="26"/></name></expr></argument>)<pos:position pos:line="40" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="28"/></expr_stmt>
<cpp:else pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">else<pos:position pos:line="41" pos:column="6"/></cpp:directive></cpp:else>
        <comment type="block" pos:line="42" pos:column="9">/* sending a SIGKILL kills the entire team on BeOS, and as
         * httpd thread is part of that team it removes any chance
         * of ever doing a restart.  To counter this I'm changing to
         * use a kinder, gentler way of killing a specific thread
         * that is just as effective.
         */</comment>
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">kill_thread<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><name pos:line="48" pos:column="21">pid<pos:position pos:line="48" pos:column="24"/></name></expr></argument>)<pos:position pos:line="48" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="50" pos:column="9">break;<pos:position pos:line="50" pos:column="15"/></break>

    <case pos:line="52" pos:column="5">case <expr><name pos:line="52" pos:column="10">GIVEUP<pos:position pos:line="52" pos:column="16"/></name></expr>:<pos:position pos:line="52" pos:column="17"/></case>
        <comment type="block" pos:line="53" pos:column="9">/* gave it our best shot, but alas...  If this really
         * is a child we are trying to kill and it really hasn't
         * exited, we will likely fail to bind to the port
         * after the restart.
         */</comment>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">ap_log_error<pos:position pos:line="58" pos:column="21"/></name><argument_list pos:line="58" pos:column="21">(<argument><expr><name pos:line="58" pos:column="22">APLOG_MARK<pos:position pos:line="58" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="34">APLOG_ERR<pos:position pos:line="58" pos:column="43"/></name></expr></argument>,
                     <argument><expr><literal type="number" pos:line="59" pos:column="22">0<pos:position pos:line="59" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="25">ap_server_conf<pos:position pos:line="59" pos:column="39"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="60" pos:column="22">"could not make child process %"<pos:position pos:line="60" pos:column="54"/></literal> <name pos:line="60" pos:column="55">APR_PID_T_FMT<pos:position pos:line="60" pos:column="68"/></name>
                     <literal type="string" pos:line="61" pos:column="22">" exit, "<pos:position pos:line="61" pos:column="31"/></literal>
                     <literal type="string" pos:line="62" pos:column="22">"attempting to continue anyway"<pos:position pos:line="62" pos:column="53"/></literal></expr></argument>,
                     <argument><expr><name pos:line="63" pos:column="22">pid<pos:position pos:line="63" pos:column="25"/></name></expr></argument>)<pos:position pos:line="63" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="27"/></expr_stmt>
        <break pos:line="64" pos:column="9">break;<pos:position pos:line="64" pos:column="15"/></break>
    }<pos:position pos:line="65" pos:column="6"/></block></switch>

    <return pos:line="67" pos:column="5">return <expr><literal type="number" pos:line="67" pos:column="12">0<pos:position pos:line="67" pos:column="13"/></literal></expr>;<pos:position pos:line="67" pos:column="14"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

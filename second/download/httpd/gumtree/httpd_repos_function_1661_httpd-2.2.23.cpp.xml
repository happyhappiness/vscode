<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1661_httpd-2.2.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">filter_chain<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">cmd_parms<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">cmd<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">void<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">CFG<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">arg<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">mod_filter_chain<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">p<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">mod_filter_chain<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">q<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">mod_filter_cfg<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">cfg<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">CFG<pos:position pos:line="5" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>

    <switch pos:line="7" pos:column="5">switch <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">arg<pos:position pos:line="7" pos:column="16"/></name><index pos:line="7" pos:column="16">[<expr><literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr>]<pos:position pos:line="7" pos:column="19"/></index></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition> <block pos:line="7" pos:column="21">{
    <case pos:line="8" pos:column="5">case <expr><literal type="char" pos:line="8" pos:column="10">'+'<pos:position pos:line="8" pos:column="13"/></literal></expr>:<pos:position pos:line="8" pos:column="14"/></case>        <comment type="block" pos:line="8" pos:column="22">/* add to end of chain */</comment>
        <expr_stmt><expr><name pos:line="9" pos:column="9">p<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <call><name pos:line="9" pos:column="13">apr_pcalloc<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name><name pos:line="9" pos:column="25">cmd<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">pool<pos:position pos:line="9" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="36">sizeof<argument_list pos:line="9" pos:column="42">(<argument><expr><name pos:line="9" pos:column="43">mod_filter_chain<pos:position pos:line="9" pos:column="59"/></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">p<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">fname<pos:position pos:line="10" pos:column="17"/></name></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">arg<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">+<pos:position pos:line="10" pos:column="24"/></operator><literal type="number" pos:line="10" pos:column="24">1<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">cfg<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">chain<pos:position pos:line="11" pos:column="23"/></name></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24"> <block pos:line="11" pos:column="25">{
            <for pos:line="12" pos:column="13">for <control pos:line="12" pos:column="17">(<init><expr><name pos:line="12" pos:column="18">q<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <name><name pos:line="12" pos:column="22">cfg<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">chain<pos:position pos:line="12" pos:column="32"/></name></name></expr>;<pos:position pos:line="12" pos:column="33"/></init> <condition><expr><name><name pos:line="12" pos:column="34">q<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">next<pos:position pos:line="12" pos:column="41"/></name></name></expr>;<pos:position pos:line="12" pos:column="42"/></condition> <incr><expr><name pos:line="12" pos:column="43">q<pos:position pos:line="12" pos:column="44"/></name> <operator pos:line="12" pos:column="45">=<pos:position pos:line="12" pos:column="46"/></operator> <name><name pos:line="12" pos:column="47">q<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">-&gt;<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="50">next<pos:position pos:line="12" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="12" pos:column="55"/></control><block type="pseudo"><empty_stmt pos:line="12" pos:column="55">;<pos:position pos:line="12" pos:column="56"/></empty_stmt></block></for>
            <expr_stmt><expr><name><name pos:line="13" pos:column="13">q<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">next<pos:position pos:line="13" pos:column="20"/></name></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">p<pos:position pos:line="13" pos:column="24"/></name></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="14" pos:column="10"/></block></then>
        <else pos:line="15" pos:column="9">else <block pos:line="15" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="16" pos:column="13">cfg<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">chain<pos:position pos:line="16" pos:column="23"/></name></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="26">p<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></else></if>
        <break pos:line="18" pos:column="9">break;<pos:position pos:line="18" pos:column="15"/></break>

    <case pos:line="20" pos:column="5">case <expr><literal type="char" pos:line="20" pos:column="10">'@'<pos:position pos:line="20" pos:column="13"/></literal></expr>:<pos:position pos:line="20" pos:column="14"/></case>        <comment type="block" pos:line="20" pos:column="22">/* add to start of chain */</comment>
        <expr_stmt><expr><name pos:line="21" pos:column="9">p<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <call><name pos:line="21" pos:column="13">apr_palloc<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><name><name pos:line="21" pos:column="24">cmd<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">-&gt;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="29">pool<pos:position pos:line="21" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="35">sizeof<argument_list pos:line="21" pos:column="41">(<argument><expr><name pos:line="21" pos:column="42">mod_filter_chain<pos:position pos:line="21" pos:column="58"/></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">p<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">fname<pos:position pos:line="22" pos:column="17"/></name></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="20">arg<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">+<pos:position pos:line="22" pos:column="24"/></operator><literal type="number" pos:line="22" pos:column="24">1<pos:position pos:line="22" pos:column="25"/></literal></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">p<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">next<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <name><name pos:line="23" pos:column="19">cfg<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">-&gt;<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="24">chain<pos:position pos:line="23" pos:column="29"/></name></name></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">cfg<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">chain<pos:position pos:line="24" pos:column="19"/></name></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">p<pos:position pos:line="24" pos:column="23"/></name></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
        <break pos:line="25" pos:column="9">break;<pos:position pos:line="25" pos:column="15"/></break>

    <case pos:line="27" pos:column="5">case <expr><literal type="char" pos:line="27" pos:column="10">'-'<pos:position pos:line="27" pos:column="13"/></literal></expr>:<pos:position pos:line="27" pos:column="14"/></case>        <comment type="block" pos:line="27" pos:column="22">/* remove from chain */</comment>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">cfg<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">chain<pos:position pos:line="28" pos:column="23"/></name></name></expr>)<pos:position pos:line="28" pos:column="24"/></condition><then pos:line="28" pos:column="24"> <block pos:line="28" pos:column="25">{
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><call><name pos:line="29" pos:column="17">strcasecmp<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><name><name pos:line="29" pos:column="28">cfg<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">-&gt;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="33">chain<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">-&gt;<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="40">fname<pos:position pos:line="29" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="47">arg<pos:position pos:line="29" pos:column="50"/></name><operator pos:line="29" pos:column="50">+<pos:position pos:line="29" pos:column="51"/></operator><literal type="number" pos:line="29" pos:column="51">1<pos:position pos:line="29" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="54"/></condition><then pos:line="29" pos:column="54"> <block pos:line="29" pos:column="55">{
                <for pos:line="30" pos:column="17">for <control pos:line="30" pos:column="21">(<init><expr><name pos:line="30" pos:column="22">p<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <name><name pos:line="30" pos:column="26">cfg<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">chain<pos:position pos:line="30" pos:column="36"/></name></name></expr>;<pos:position pos:line="30" pos:column="37"/></init> <condition><expr><name><name pos:line="30" pos:column="38">p<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">-&gt;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="41">next<pos:position pos:line="30" pos:column="45"/></name></name></expr>;<pos:position pos:line="30" pos:column="46"/></condition> <incr><expr><name pos:line="30" pos:column="47">p<pos:position pos:line="30" pos:column="48"/></name> <operator pos:line="30" pos:column="49">=<pos:position pos:line="30" pos:column="50"/></operator> <name><name pos:line="30" pos:column="51">p<pos:position pos:line="30" pos:column="52"/></name><operator pos:line="30" pos:column="52">-&gt;<pos:position pos:line="30" pos:column="57"/></operator><name pos:line="30" pos:column="54">next<pos:position pos:line="30" pos:column="58"/></name></name></expr></incr>)<pos:position pos:line="30" pos:column="59"/></control> <block pos:line="30" pos:column="60">{
                    <if pos:line="31" pos:column="21">if <condition pos:line="31" pos:column="24">(<expr><operator pos:line="31" pos:column="25">!<pos:position pos:line="31" pos:column="26"/></operator><call><name pos:line="31" pos:column="26">strcasecmp<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><name><name pos:line="31" pos:column="37">p<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">-&gt;<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="40">next<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">-&gt;<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="46">fname<pos:position pos:line="31" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="53">arg<pos:position pos:line="31" pos:column="56"/></name><operator pos:line="31" pos:column="56">+<pos:position pos:line="31" pos:column="57"/></operator><literal type="number" pos:line="31" pos:column="57">1<pos:position pos:line="31" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="60"/></condition><then pos:line="31" pos:column="60"> <block pos:line="31" pos:column="61">{
                        <expr_stmt><expr><name><name pos:line="32" pos:column="25">p<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">-&gt;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="28">next<pos:position pos:line="32" pos:column="32"/></name></name> <operator pos:line="32" pos:column="33">=<pos:position pos:line="32" pos:column="34"/></operator> <name><name pos:line="32" pos:column="35">p<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">next<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">-&gt;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="44">next<pos:position pos:line="32" pos:column="48"/></name></name></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt>
                    }<pos:position pos:line="33" pos:column="22"/></block></then></if>
                }<pos:position pos:line="34" pos:column="18"/></block></for>
            }<pos:position pos:line="35" pos:column="14"/></block></then>
            <else pos:line="36" pos:column="13">else <block pos:line="36" pos:column="18">{
                <expr_stmt><expr><name><name pos:line="37" pos:column="17">cfg<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">-&gt;<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="22">chain<pos:position pos:line="37" pos:column="27"/></name></name> <operator pos:line="37" pos:column="28">=<pos:position pos:line="37" pos:column="29"/></operator> <name><name pos:line="37" pos:column="30">cfg<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">-&gt;<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="35">chain<pos:position pos:line="37" pos:column="40"/></name><operator pos:line="37" pos:column="40">-&gt;<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="42">next<pos:position pos:line="37" pos:column="46"/></name></name></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="38" pos:column="14"/></block></else></if>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>
        <break pos:line="40" pos:column="9">break;<pos:position pos:line="40" pos:column="15"/></break>

    <case pos:line="42" pos:column="5">case <expr><literal type="char" pos:line="42" pos:column="10">'!'<pos:position pos:line="42" pos:column="13"/></literal></expr>:<pos:position pos:line="42" pos:column="14"/></case>        <comment type="block" pos:line="42" pos:column="22">/* Empty the chain */</comment>
                     <comment type="block" format="doxygen" pos:line="43" pos:column="22">/** IG: Add a NULL provider to the beginning so that 
                      *  we can ensure that we'll empty everything before 
                      *  this when doing config merges later */</comment>
        <expr_stmt><expr><name pos:line="46" pos:column="9">p<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">=<pos:position pos:line="46" pos:column="12"/></operator> <call><name pos:line="46" pos:column="13">apr_pcalloc<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><name><name pos:line="46" pos:column="25">cmd<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">-&gt;<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="30">pool<pos:position pos:line="46" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="36">sizeof<argument_list pos:line="46" pos:column="42">(<argument><expr><name pos:line="46" pos:column="43">mod_filter_chain<pos:position pos:line="46" pos:column="59"/></name></expr></argument>)<pos:position pos:line="46" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="47" pos:column="9">p<pos:position pos:line="47" pos:column="10"/></name><operator pos:line="47" pos:column="10">-&gt;<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="12">fname<pos:position pos:line="47" pos:column="17"/></name></name> <operator pos:line="47" pos:column="18">=<pos:position pos:line="47" pos:column="19"/></operator> <name pos:line="47" pos:column="20">NULL<pos:position pos:line="47" pos:column="24"/></name></expr>;<pos:position pos:line="47" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="48" pos:column="9">cfg<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">-&gt;<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="14">chain<pos:position pos:line="48" pos:column="19"/></name></name> <operator pos:line="48" pos:column="20">=<pos:position pos:line="48" pos:column="21"/></operator> <name pos:line="48" pos:column="22">p<pos:position pos:line="48" pos:column="23"/></name></expr>;<pos:position pos:line="48" pos:column="24"/></expr_stmt>
        <break pos:line="49" pos:column="9">break;<pos:position pos:line="49" pos:column="15"/></break>

    <case pos:line="51" pos:column="5">case <expr><literal type="char" pos:line="51" pos:column="10">'='<pos:position pos:line="51" pos:column="13"/></literal></expr>:<pos:position pos:line="51" pos:column="14"/></case>        <comment type="block" pos:line="51" pos:column="22">/* initialise chain with this arg */</comment>
                     <comment type="block" format="doxygen" pos:line="52" pos:column="22">/** IG: Prepend a NULL provider to the beginning as above */</comment>
        <expr_stmt><expr><name pos:line="53" pos:column="9">p<pos:position pos:line="53" pos:column="10"/></name> <operator pos:line="53" pos:column="11">=<pos:position pos:line="53" pos:column="12"/></operator> <call><name pos:line="53" pos:column="13">apr_pcalloc<pos:position pos:line="53" pos:column="24"/></name><argument_list pos:line="53" pos:column="24">(<argument><expr><name><name pos:line="53" pos:column="25">cmd<pos:position pos:line="53" pos:column="28"/></name><operator pos:line="53" pos:column="28">-&gt;<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="30">pool<pos:position pos:line="53" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="36">sizeof<argument_list pos:line="53" pos:column="42">(<argument><expr><name pos:line="53" pos:column="43">mod_filter_chain<pos:position pos:line="53" pos:column="59"/></name></expr></argument>)<pos:position pos:line="53" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="54" pos:column="9">p<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">-&gt;<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="12">fname<pos:position pos:line="54" pos:column="17"/></name></name> <operator pos:line="54" pos:column="18">=<pos:position pos:line="54" pos:column="19"/></operator> <name pos:line="54" pos:column="20">NULL<pos:position pos:line="54" pos:column="24"/></name></expr>;<pos:position pos:line="54" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="55" pos:column="9">p<pos:position pos:line="55" pos:column="10"/></name><operator pos:line="55" pos:column="10">-&gt;<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="12">next<pos:position pos:line="55" pos:column="16"/></name></name> <operator pos:line="55" pos:column="17">=<pos:position pos:line="55" pos:column="18"/></operator> <call><name pos:line="55" pos:column="19">apr_pcalloc<pos:position pos:line="55" pos:column="30"/></name><argument_list pos:line="55" pos:column="30">(<argument><expr><name><name pos:line="55" pos:column="31">cmd<pos:position pos:line="55" pos:column="34"/></name><operator pos:line="55" pos:column="34">-&gt;<pos:position pos:line="55" pos:column="39"/></operator><name pos:line="55" pos:column="36">pool<pos:position pos:line="55" pos:column="40"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="42">sizeof<argument_list pos:line="55" pos:column="48">(<argument><expr><name pos:line="55" pos:column="49">mod_filter_chain<pos:position pos:line="55" pos:column="65"/></name></expr></argument>)<pos:position pos:line="55" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="56" pos:column="9">p<pos:position pos:line="56" pos:column="10"/></name><operator pos:line="56" pos:column="10">-&gt;<pos:position pos:line="56" pos:column="15"/></operator><name pos:line="56" pos:column="12">next<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">-&gt;<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="18">fname<pos:position pos:line="56" pos:column="23"/></name></name> <operator pos:line="56" pos:column="24">=<pos:position pos:line="56" pos:column="25"/></operator> <name pos:line="56" pos:column="26">arg<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">+<pos:position pos:line="56" pos:column="30"/></operator><literal type="number" pos:line="56" pos:column="30">1<pos:position pos:line="56" pos:column="31"/></literal></expr>;<pos:position pos:line="56" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="57" pos:column="9">cfg<pos:position pos:line="57" pos:column="12"/></name><operator pos:line="57" pos:column="12">-&gt;<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="14">chain<pos:position pos:line="57" pos:column="19"/></name></name> <operator pos:line="57" pos:column="20">=<pos:position pos:line="57" pos:column="21"/></operator> <name pos:line="57" pos:column="22">p<pos:position pos:line="57" pos:column="23"/></name></expr>;<pos:position pos:line="57" pos:column="24"/></expr_stmt>
        <break pos:line="58" pos:column="9">break;<pos:position pos:line="58" pos:column="15"/></break>

    <default pos:line="60" pos:column="5">default:<pos:position pos:line="60" pos:column="13"/></default>        <comment type="block" pos:line="60" pos:column="21">/* add to end */</comment>
        <expr_stmt><expr><name pos:line="61" pos:column="9">p<pos:position pos:line="61" pos:column="10"/></name> <operator pos:line="61" pos:column="11">=<pos:position pos:line="61" pos:column="12"/></operator> <call><name pos:line="61" pos:column="13">apr_pcalloc<pos:position pos:line="61" pos:column="24"/></name><argument_list pos:line="61" pos:column="24">(<argument><expr><name><name pos:line="61" pos:column="25">cmd<pos:position pos:line="61" pos:column="28"/></name><operator pos:line="61" pos:column="28">-&gt;<pos:position pos:line="61" pos:column="33"/></operator><name pos:line="61" pos:column="30">pool<pos:position pos:line="61" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="36">sizeof<argument_list pos:line="61" pos:column="42">(<argument><expr><name pos:line="61" pos:column="43">mod_filter_chain<pos:position pos:line="61" pos:column="59"/></name></expr></argument>)<pos:position pos:line="61" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="61" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">p<pos:position pos:line="62" pos:column="10"/></name><operator pos:line="62" pos:column="10">-&gt;<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="12">fname<pos:position pos:line="62" pos:column="17"/></name></name> <operator pos:line="62" pos:column="18">=<pos:position pos:line="62" pos:column="19"/></operator> <name pos:line="62" pos:column="20">arg<pos:position pos:line="62" pos:column="23"/></name></expr>;<pos:position pos:line="62" pos:column="24"/></expr_stmt>
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name><name pos:line="63" pos:column="13">cfg<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">-&gt;<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="18">chain<pos:position pos:line="63" pos:column="23"/></name></name></expr>)<pos:position pos:line="63" pos:column="24"/></condition><then pos:line="63" pos:column="24"> <block pos:line="63" pos:column="25">{
            <for pos:line="64" pos:column="13">for <control pos:line="64" pos:column="17">(<init><expr><name pos:line="64" pos:column="18">q<pos:position pos:line="64" pos:column="19"/></name> <operator pos:line="64" pos:column="20">=<pos:position pos:line="64" pos:column="21"/></operator> <name><name pos:line="64" pos:column="22">cfg<pos:position pos:line="64" pos:column="25"/></name><operator pos:line="64" pos:column="25">-&gt;<pos:position pos:line="64" pos:column="30"/></operator><name pos:line="64" pos:column="27">chain<pos:position pos:line="64" pos:column="32"/></name></name></expr>;<pos:position pos:line="64" pos:column="33"/></init> <condition><expr><name><name pos:line="64" pos:column="34">q<pos:position pos:line="64" pos:column="35"/></name><operator pos:line="64" pos:column="35">-&gt;<pos:position pos:line="64" pos:column="40"/></operator><name pos:line="64" pos:column="37">next<pos:position pos:line="64" pos:column="41"/></name></name></expr>;<pos:position pos:line="64" pos:column="42"/></condition> <incr><expr><name pos:line="64" pos:column="43">q<pos:position pos:line="64" pos:column="44"/></name> <operator pos:line="64" pos:column="45">=<pos:position pos:line="64" pos:column="46"/></operator> <name><name pos:line="64" pos:column="47">q<pos:position pos:line="64" pos:column="48"/></name><operator pos:line="64" pos:column="48">-&gt;<pos:position pos:line="64" pos:column="53"/></operator><name pos:line="64" pos:column="50">next<pos:position pos:line="64" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="64" pos:column="55"/></control><block type="pseudo"><empty_stmt pos:line="64" pos:column="55">;<pos:position pos:line="64" pos:column="56"/></empty_stmt></block></for>
            <expr_stmt><expr><name><name pos:line="65" pos:column="13">q<pos:position pos:line="65" pos:column="14"/></name><operator pos:line="65" pos:column="14">-&gt;<pos:position pos:line="65" pos:column="19"/></operator><name pos:line="65" pos:column="16">next<pos:position pos:line="65" pos:column="20"/></name></name> <operator pos:line="65" pos:column="21">=<pos:position pos:line="65" pos:column="22"/></operator> <name pos:line="65" pos:column="23">p<pos:position pos:line="65" pos:column="24"/></name></expr>;<pos:position pos:line="65" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="66" pos:column="10"/></block></then>
        <else pos:line="67" pos:column="9">else <block pos:line="67" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="68" pos:column="13">cfg<pos:position pos:line="68" pos:column="16"/></name><operator pos:line="68" pos:column="16">-&gt;<pos:position pos:line="68" pos:column="21"/></operator><name pos:line="68" pos:column="18">chain<pos:position pos:line="68" pos:column="23"/></name></name> <operator pos:line="68" pos:column="24">=<pos:position pos:line="68" pos:column="25"/></operator> <name pos:line="68" pos:column="26">p<pos:position pos:line="68" pos:column="27"/></name></expr>;<pos:position pos:line="68" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="69" pos:column="10"/></block></else></if>
        <break pos:line="70" pos:column="9">break;<pos:position pos:line="70" pos:column="15"/></break>
    }<pos:position pos:line="71" pos:column="6"/></block></switch>

    <return pos:line="73" pos:column="5">return <expr><name pos:line="73" pos:column="12">NULL<pos:position pos:line="73" pos:column="16"/></name></expr>;<pos:position pos:line="73" pos:column="17"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

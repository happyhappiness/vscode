<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2462_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name><name pos:line="2" pos:column="1">enum<pos:position pos:line="2" pos:column="5"/></name> <name pos:line="2" pos:column="6">XML_Error<pos:position pos:line="2" pos:column="15"/></name></name></type> <name pos:line="2" pos:column="16">doIgnoreSection<pos:position pos:line="2" pos:column="31"/></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><name pos:line="2" pos:column="32">XML_Parser<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">parser<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
			       <parameter><decl><type><specifier pos:line="3" pos:column="32">const<pos:position pos:line="3" pos:column="37"/></specifier> <name pos:line="3" pos:column="38">ENCODING<pos:position pos:line="3" pos:column="46"/></name> <modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier></type><name pos:line="3" pos:column="48">enc<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>,
			       <parameter><decl><type><specifier pos:line="4" pos:column="32">const<pos:position pos:line="4" pos:column="37"/></specifier> <name pos:line="4" pos:column="38">char<pos:position pos:line="4" pos:column="42"/></name> <modifier pos:line="4" pos:column="43">*<pos:position pos:line="4" pos:column="44"/></modifier><modifier pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></modifier></type><name pos:line="4" pos:column="45">startPtr<pos:position pos:line="4" pos:column="53"/></name></decl></parameter>,
			       <parameter><decl><type><specifier pos:line="5" pos:column="32">const<pos:position pos:line="5" pos:column="37"/></specifier> <name pos:line="5" pos:column="38">char<pos:position pos:line="5" pos:column="42"/></name> <modifier pos:line="5" pos:column="43">*<pos:position pos:line="5" pos:column="44"/></modifier></type><name pos:line="5" pos:column="44">end<pos:position pos:line="5" pos:column="47"/></name></decl></parameter>,
			       <parameter><decl><type><specifier pos:line="6" pos:column="32">const<pos:position pos:line="6" pos:column="37"/></specifier> <name pos:line="6" pos:column="38">char<pos:position pos:line="6" pos:column="42"/></name> <modifier pos:line="6" pos:column="43">*<pos:position pos:line="6" pos:column="44"/></modifier><modifier pos:line="6" pos:column="44">*<pos:position pos:line="6" pos:column="45"/></modifier></type><name pos:line="6" pos:column="45">nextPtr<pos:position pos:line="6" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="53"/></parameter_list>
<block pos:line="7" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">next<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">tok<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">s<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><operator pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="20">startPtr<pos:position pos:line="10" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="11" pos:column="3">const<pos:position pos:line="11" pos:column="8"/></specifier> <name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier><modifier pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></modifier></type><name pos:line="11" pos:column="16">eventPP<pos:position pos:line="11" pos:column="23"/></name></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="12" pos:column="3">const<pos:position pos:line="12" pos:column="8"/></specifier> <name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier><modifier pos:line="12" pos:column="15">*<pos:position pos:line="12" pos:column="16"/></modifier></type><name pos:line="12" pos:column="16">eventEndPP<pos:position pos:line="12" pos:column="26"/></name></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">enc<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">==<pos:position pos:line="13" pos:column="13"/></operator> <name pos:line="13" pos:column="14">encoding<pos:position pos:line="13" pos:column="22"/></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23"> <block pos:line="13" pos:column="24">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">eventPP<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <operator pos:line="14" pos:column="15">&amp;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="16">eventPtr<pos:position pos:line="14" pos:column="24"/></name></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="15" pos:column="5">*<pos:position pos:line="15" pos:column="6"/></operator><name pos:line="15" pos:column="6">eventPP<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">s<pos:position pos:line="15" pos:column="17"/></name></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">eventEndPP<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <operator pos:line="16" pos:column="18">&amp;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="19">eventEndPtr<pos:position pos:line="16" pos:column="30"/></name></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></then>
  <else pos:line="18" pos:column="3">else <block pos:line="18" pos:column="8">{
    <expr_stmt><expr><name pos:line="19" pos:column="5">eventPP<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <operator pos:line="19" pos:column="15">&amp;<pos:position pos:line="19" pos:column="20"/></operator><operator pos:line="19" pos:column="16">(<pos:position pos:line="19" pos:column="17"/></operator><name><name pos:line="19" pos:column="17">openInternalEntities<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">-&gt;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="39">internalEventPtr<pos:position pos:line="19" pos:column="55"/></name></name><operator pos:line="19" pos:column="55">)<pos:position pos:line="19" pos:column="56"/></operator></expr>;<pos:position pos:line="19" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">eventEndPP<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <operator pos:line="20" pos:column="18">&amp;<pos:position pos:line="20" pos:column="23"/></operator><operator pos:line="20" pos:column="19">(<pos:position pos:line="20" pos:column="20"/></operator><name><name pos:line="20" pos:column="20">openInternalEntities<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">-&gt;<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="42">internalEventEndPtr<pos:position pos:line="20" pos:column="61"/></name></name><operator pos:line="20" pos:column="61">)<pos:position pos:line="20" pos:column="62"/></operator></expr>;<pos:position pos:line="20" pos:column="63"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></else></if>
  <expr_stmt><expr><operator pos:line="22" pos:column="3">*<pos:position pos:line="22" pos:column="4"/></operator><name pos:line="22" pos:column="4">eventPP<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <name pos:line="22" pos:column="14">s<pos:position pos:line="22" pos:column="15"/></name></expr>;<pos:position pos:line="22" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="23" pos:column="3">*<pos:position pos:line="23" pos:column="4"/></operator><name pos:line="23" pos:column="4">startPtr<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <literal type="number" pos:line="23" pos:column="15">0<pos:position pos:line="23" pos:column="16"/></literal></expr>;<pos:position pos:line="23" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="24" pos:column="3">tok<pos:position pos:line="24" pos:column="6"/></name> <operator pos:line="24" pos:column="7">=<pos:position pos:line="24" pos:column="8"/></operator> <call><name pos:line="24" pos:column="9">XmlIgnoreSectionTok<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><name pos:line="24" pos:column="29">enc<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="34">s<pos:position pos:line="24" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="37">end<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="42">&amp;<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="43">next<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="25" pos:column="3">*<pos:position pos:line="25" pos:column="4"/></operator><name pos:line="25" pos:column="4">eventEndPP<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <name pos:line="25" pos:column="17">next<pos:position pos:line="25" pos:column="21"/></name></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
  <switch pos:line="26" pos:column="3">switch <condition pos:line="26" pos:column="10">(<expr><name pos:line="26" pos:column="11">tok<pos:position pos:line="26" pos:column="14"/></name></expr>)<pos:position pos:line="26" pos:column="15"/></condition> <block pos:line="26" pos:column="16">{
  <case pos:line="27" pos:column="3">case <expr><name pos:line="27" pos:column="8">XML_TOK_IGNORE_SECT<pos:position pos:line="27" pos:column="27"/></name></expr>:<pos:position pos:line="27" pos:column="28"/></case>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">defaultHandler<pos:position pos:line="28" pos:column="23"/></name></expr>)<pos:position pos:line="28" pos:column="24"/></condition><then pos:line="28" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="7">reportDefault<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">parser<pos:position pos:line="29" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="29">enc<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="34">s<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="37">next<pos:position pos:line="29" pos:column="41"/></name></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="43"/></expr_stmt></block></then></if>
    <expr_stmt><expr><operator pos:line="30" pos:column="5">*<pos:position pos:line="30" pos:column="6"/></operator><name pos:line="30" pos:column="6">startPtr<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <name pos:line="30" pos:column="17">next<pos:position pos:line="30" pos:column="21"/></name></expr>;<pos:position pos:line="30" pos:column="22"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">XML_ERROR_NONE<pos:position pos:line="31" pos:column="26"/></name></expr>;<pos:position pos:line="31" pos:column="27"/></return>
  <case pos:line="32" pos:column="3">case <expr><name pos:line="32" pos:column="8">XML_TOK_INVALID<pos:position pos:line="32" pos:column="23"/></name></expr>:<pos:position pos:line="32" pos:column="24"/></case>
    <expr_stmt><expr><operator pos:line="33" pos:column="5">*<pos:position pos:line="33" pos:column="6"/></operator><name pos:line="33" pos:column="6">eventPP<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <name pos:line="33" pos:column="16">next<pos:position pos:line="33" pos:column="20"/></name></expr>;<pos:position pos:line="33" pos:column="21"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><name pos:line="34" pos:column="12">XML_ERROR_INVALID_TOKEN<pos:position pos:line="34" pos:column="35"/></name></expr>;<pos:position pos:line="34" pos:column="36"/></return>
  <case pos:line="35" pos:column="3">case <expr><name pos:line="35" pos:column="8">XML_TOK_PARTIAL_CHAR<pos:position pos:line="35" pos:column="28"/></name></expr>:<pos:position pos:line="35" pos:column="29"/></case>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">nextPtr<pos:position pos:line="36" pos:column="16"/></name></expr>)<pos:position pos:line="36" pos:column="17"/></condition><then pos:line="36" pos:column="17"> <block pos:line="36" pos:column="18">{
      <expr_stmt><expr><operator pos:line="37" pos:column="7">*<pos:position pos:line="37" pos:column="8"/></operator><name pos:line="37" pos:column="8">nextPtr<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <name pos:line="37" pos:column="18">s<pos:position pos:line="37" pos:column="19"/></name></expr>;<pos:position pos:line="37" pos:column="20"/></expr_stmt>
      <return pos:line="38" pos:column="7">return <expr><name pos:line="38" pos:column="14">XML_ERROR_NONE<pos:position pos:line="38" pos:column="28"/></name></expr>;<pos:position pos:line="38" pos:column="29"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    <return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">XML_ERROR_PARTIAL_CHAR<pos:position pos:line="40" pos:column="34"/></name></expr>;<pos:position pos:line="40" pos:column="35"/></return>
  <case pos:line="41" pos:column="3">case <expr><name pos:line="41" pos:column="8">XML_TOK_PARTIAL<pos:position pos:line="41" pos:column="23"/></name></expr>:<pos:position pos:line="41" pos:column="24"/></case>
  <case pos:line="42" pos:column="3">case <expr><name pos:line="42" pos:column="8">XML_TOK_NONE<pos:position pos:line="42" pos:column="20"/></name></expr>:<pos:position pos:line="42" pos:column="21"/></case>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">nextPtr<pos:position pos:line="43" pos:column="16"/></name></expr>)<pos:position pos:line="43" pos:column="17"/></condition><then pos:line="43" pos:column="17"> <block pos:line="43" pos:column="18">{
      <expr_stmt><expr><operator pos:line="44" pos:column="7">*<pos:position pos:line="44" pos:column="8"/></operator><name pos:line="44" pos:column="8">nextPtr<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <name pos:line="44" pos:column="18">s<pos:position pos:line="44" pos:column="19"/></name></expr>;<pos:position pos:line="44" pos:column="20"/></expr_stmt>
      <return pos:line="45" pos:column="7">return <expr><name pos:line="45" pos:column="14">XML_ERROR_NONE<pos:position pos:line="45" pos:column="28"/></name></expr>;<pos:position pos:line="45" pos:column="29"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">XML_ERROR_SYNTAX<pos:position pos:line="47" pos:column="28"/></name></expr>;<pos:position pos:line="47" pos:column="29"/></return> <comment type="block" pos:line="47" pos:column="30">/* XML_ERROR_UNCLOSED_IGNORE_SECTION */</comment>
  <default pos:line="48" pos:column="3">default:<pos:position pos:line="48" pos:column="11"/></default>
    <expr_stmt><expr><operator pos:line="49" pos:column="5">*<pos:position pos:line="49" pos:column="6"/></operator><name pos:line="49" pos:column="6">eventPP<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <name pos:line="49" pos:column="16">next<pos:position pos:line="49" pos:column="20"/></name></expr>;<pos:position pos:line="49" pos:column="21"/></expr_stmt>
    <return pos:line="50" pos:column="5">return <expr><name pos:line="50" pos:column="12">XML_ERROR_UNEXPECTED_STATE<pos:position pos:line="50" pos:column="38"/></name></expr>;<pos:position pos:line="50" pos:column="39"/></return>
  }<pos:position pos:line="51" pos:column="4"/></block></switch>
  <comment type="block" pos:line="52" pos:column="3">/* not reached */</comment>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

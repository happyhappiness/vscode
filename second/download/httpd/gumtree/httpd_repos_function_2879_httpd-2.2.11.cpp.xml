<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2879_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">dbd_pgsql_get_name<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">apr_dbd_results_t<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">res<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">int<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">n<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <return pos:line="3" pos:column="5">return <expr><operator pos:line="3" pos:column="12">(<pos:position pos:line="3" pos:column="13"/></operator><ternary><condition><expr><name><name pos:line="3" pos:column="13">res<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">-&gt;<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="18">res<pos:position pos:line="3" pos:column="21"/></name></name></expr> ?<pos:position pos:line="3" pos:column="23"/></condition><then pos:line="3" pos:column="23"> <expr><call><name pos:line="3" pos:column="24">PQfname<pos:position pos:line="3" pos:column="31"/></name><argument_list pos:line="3" pos:column="31">(<argument><expr><name><name pos:line="3" pos:column="32">res<pos:position pos:line="3" pos:column="35"/></name><operator pos:line="3" pos:column="35">-&gt;<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="37">res<pos:position pos:line="3" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="42">n<pos:position pos:line="3" pos:column="43"/></name></expr></argument>)<pos:position pos:line="3" pos:column="44"/></argument_list></call></expr> <pos:position pos:line="3" pos:column="45"/></then><else pos:line="3" pos:column="45">: <expr><name pos:line="3" pos:column="47">NULL<pos:position pos:line="3" pos:column="51"/></name></expr></else></ternary><operator pos:line="3" pos:column="51">)<pos:position pos:line="3" pos:column="52"/></operator></expr>;<pos:position pos:line="3" pos:column="53"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

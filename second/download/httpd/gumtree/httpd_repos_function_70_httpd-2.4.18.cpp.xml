<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_70_httpd-2.4.18.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">log_pid<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">apr_pool_t<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">pool<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">pidfilename<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">apr_file_t<pos:position pos:line="1" pos:column="74"/></name> <modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier><modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">pidfile<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">status<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">pid_t<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">mypid<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name pos:line="4" pos:column="19">getpid<pos:position pos:line="4" pos:column="25"/></name><argument_list pos:line="4" pos:column="25">()<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">APR_SUCCESS<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">==<pos:position pos:line="6" pos:column="23"/></operator> <operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">status<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">=<pos:position pos:line="6" pos:column="33"/></operator> <call><name pos:line="6" pos:column="34">apr_file_open<pos:position pos:line="6" pos:column="47"/></name><argument_list pos:line="6" pos:column="47">(<argument><expr><name pos:line="6" pos:column="48">pidfile<pos:position pos:line="6" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="57">pidfilename<pos:position pos:line="6" pos:column="68"/></name></expr></argument>,
                <argument><expr><name pos:line="7" pos:column="17">APR_FOPEN_WRITE<pos:position pos:line="7" pos:column="32"/></name> <operator pos:line="7" pos:column="33">|<pos:position pos:line="7" pos:column="34"/></operator> <name pos:line="7" pos:column="35">APR_FOPEN_CREATE<pos:position pos:line="7" pos:column="51"/></name> <operator pos:line="7" pos:column="52">|<pos:position pos:line="7" pos:column="53"/></operator> <name pos:line="7" pos:column="54">APR_FOPEN_TRUNCATE<pos:position pos:line="7" pos:column="72"/></name> <operator pos:line="7" pos:column="73">|<pos:position pos:line="7" pos:column="74"/></operator>
                <name pos:line="8" pos:column="17">APR_FOPEN_DELONCLOSE<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="39">APR_FPROT_UREAD<pos:position pos:line="8" pos:column="54"/></name> <operator pos:line="8" pos:column="55">|<pos:position pos:line="8" pos:column="56"/></operator> <name pos:line="8" pos:column="57">APR_FPROT_UWRITE<pos:position pos:line="8" pos:column="73"/></name> <operator pos:line="8" pos:column="74">|<pos:position pos:line="8" pos:column="75"/></operator>
                <name pos:line="9" pos:column="17">APR_FPROT_GREAD<pos:position pos:line="9" pos:column="32"/></name> <operator pos:line="9" pos:column="33">|<pos:position pos:line="9" pos:column="34"/></operator> <name pos:line="9" pos:column="35">APR_FPROT_WREAD<pos:position pos:line="9" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="52">pool<pos:position pos:line="9" pos:column="56"/></name></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></call><operator pos:line="9" pos:column="57">)<pos:position pos:line="9" pos:column="58"/></operator></expr>)<pos:position pos:line="9" pos:column="59"/></condition><then pos:line="9" pos:column="59"> <block pos:line="9" pos:column="60">{
        <macro><name pos:line="10" pos:column="9">apr_file_printf<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument pos:line="10" pos:column="25">*pidfile<pos:position pos:line="10" pos:column="33"/></argument>, <argument><literal type="string" pos:line="10" pos:column="35">"%"<pos:position pos:line="10" pos:column="38"/></literal> APR_PID_T_FMT APR_EOL_STR<pos:position pos:line="10" pos:column="64"/></argument>, <argument pos:line="10" pos:column="66">mypid<pos:position pos:line="10" pos:column="71"/></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></macro><empty_stmt pos:line="10" pos:column="72">;<pos:position pos:line="10" pos:column="73"/></empty_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then>
    <else pos:line="12" pos:column="5">else <block pos:line="12" pos:column="10">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">errfile<pos:position pos:line="13" pos:column="20"/></name></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21"> <block pos:line="13" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">apr_file_printf<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">errfile<pos:position pos:line="14" pos:column="36"/></name></expr></argument>,
                            <argument><expr><literal type="string" pos:line="15" pos:column="29">"Could not write the pid file '%s': %pm"<pos:position pos:line="15" pos:column="69"/></literal> <name pos:line="15" pos:column="70">APR_EOL_STR<pos:position pos:line="15" pos:column="81"/></name></expr></argument>,
                            <argument><expr><name pos:line="16" pos:column="29">pidfilename<pos:position pos:line="16" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="42">&amp;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="43">status<pos:position pos:line="16" pos:column="49"/></name></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">exit<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><literal type="number" pos:line="18" pos:column="14">1<pos:position pos:line="18" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></else></if>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

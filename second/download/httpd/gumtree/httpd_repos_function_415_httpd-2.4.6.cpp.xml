<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_415_httpd-2.4.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">APR_INLINE<pos:position pos:line="1" pos:column="18"/></name> <name pos:line="1" pos:column="19">char<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">find_multiple_headers<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name pos:line="1" pos:column="47">apr_pool_t<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">pool<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">apr_table_t<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">table<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
                                              <parameter><decl><type><specifier pos:line="3" pos:column="47">const<pos:position pos:line="3" pos:column="52"/></specifier> <name pos:line="3" pos:column="53">char<pos:position pos:line="3" pos:column="57"/></name> <modifier pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></modifier></type><name pos:line="3" pos:column="59">key<pos:position pos:line="3" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="63"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">apr_array_header_t<pos:position pos:line="5" pos:column="29"/></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">elts<pos:position pos:line="5" pos:column="35"/></name></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">apr_table_entry_t<pos:position pos:line="6" pos:column="28"/></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">t_elt<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">apr_table_entry_t<pos:position pos:line="7" pos:column="28"/></name> <modifier pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></modifier></type><name pos:line="7" pos:column="30">t_end<pos:position pos:line="7" pos:column="35"/></name></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">len<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <struct pos:line="9" pos:column="5">struct <name pos:line="9" pos:column="12">sle<pos:position pos:line="9" pos:column="15"/></name> <block pos:line="9" pos:column="16">{<public type="default" pos:line="9" pos:column="17">
        <decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">sle<pos:position pos:line="10" pos:column="19"/></name></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">next<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">char<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">value<pos:position pos:line="11" pos:column="26"/></name></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">apr_size_t<pos:position pos:line="12" pos:column="19"/></name></type> <name pos:line="12" pos:column="20">len<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>
    <pos:position pos:line="13" pos:column="5"/></public>}<pos:position pos:line="13" pos:column="6"/></block> <decl><modifier pos:line="13" pos:column="7">*<pos:position pos:line="13" pos:column="8"/></modifier><name pos:line="13" pos:column="8">result_list<pos:position pos:line="13" pos:column="19"/></name></decl>, <modifier pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="22">rp<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></struct>

    <expr_stmt><expr><name pos:line="15" pos:column="5">elts<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <call><name pos:line="15" pos:column="12">apr_table_elts<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">table<pos:position pos:line="15" pos:column="32"/></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><name><name pos:line="17" pos:column="10">elts<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">nelts<pos:position pos:line="17" pos:column="21"/></name></name></expr>)<pos:position pos:line="17" pos:column="22"/></condition><then pos:line="17" pos:column="22"> <block pos:line="17" pos:column="23">{
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">NULL<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="21" pos:column="5">t_elt<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <operator pos:line="21" pos:column="13">(<pos:position pos:line="21" pos:column="14"/></operator><specifier pos:line="21" pos:column="14">const<pos:position pos:line="21" pos:column="19"/></specifier> <name pos:line="21" pos:column="20">apr_table_entry_t<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">*<pos:position pos:line="21" pos:column="39"/></operator><operator pos:line="21" pos:column="39">)<pos:position pos:line="21" pos:column="40"/></operator><name><name pos:line="21" pos:column="40">elts<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">-&gt;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="46">elts<pos:position pos:line="21" pos:column="50"/></name></name></expr>;<pos:position pos:line="21" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">t_end<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <name pos:line="22" pos:column="13">t_elt<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">+<pos:position pos:line="22" pos:column="20"/></operator> <name><name pos:line="22" pos:column="21">elts<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">-&gt;<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="27">nelts<pos:position pos:line="22" pos:column="32"/></name></name></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">len<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <literal type="number" pos:line="23" pos:column="11">1<pos:position pos:line="23" pos:column="12"/></literal></expr>;<pos:position pos:line="23" pos:column="13"/></expr_stmt> <comment type="block" pos:line="23" pos:column="14">/* \0 */</comment>
    <expr_stmt><expr><name pos:line="24" pos:column="5">result_list<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">rp<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="24">NULL<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>

    <do pos:line="26" pos:column="5">do <block pos:line="26" pos:column="8">{
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><call><name pos:line="27" pos:column="14">strcasecmp<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name><name pos:line="27" pos:column="25">t_elt<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">-&gt;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="32">key<pos:position pos:line="27" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="37">key<pos:position pos:line="27" pos:column="40"/></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="42"/></condition><then pos:line="27" pos:column="42"> <block pos:line="27" pos:column="43">{
            <if pos:line="28" pos:column="13">if <condition pos:line="28" pos:column="16">(<expr><operator pos:line="28" pos:column="17">!<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">result_list<pos:position pos:line="28" pos:column="29"/></name></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30"> <block pos:line="28" pos:column="31">{
                <expr_stmt><expr><name pos:line="29" pos:column="17">result_list<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">=<pos:position pos:line="29" pos:column="30"/></operator> <name pos:line="29" pos:column="31">rp<pos:position pos:line="29" pos:column="33"/></name> <operator pos:line="29" pos:column="34">=<pos:position pos:line="29" pos:column="35"/></operator> <call><name pos:line="29" pos:column="36">apr_palloc<pos:position pos:line="29" pos:column="46"/></name><argument_list pos:line="29" pos:column="46">(<argument><expr><name pos:line="29" pos:column="47">pool<pos:position pos:line="29" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="53">sizeof<argument_list pos:line="29" pos:column="59">(<argument><expr><operator pos:line="29" pos:column="60">*<pos:position pos:line="29" pos:column="61"/></operator><name pos:line="29" pos:column="61">rp<pos:position pos:line="29" pos:column="63"/></name></expr></argument>)<pos:position pos:line="29" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="66"/></expr_stmt>
            }<pos:position pos:line="30" pos:column="14"/></block></then>
            <else pos:line="31" pos:column="13">else <block pos:line="31" pos:column="18">{
                <expr_stmt><expr><name pos:line="32" pos:column="17">rp<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <name><name pos:line="32" pos:column="22">rp<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">-&gt;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="26">next<pos:position pos:line="32" pos:column="30"/></name></name> <operator pos:line="32" pos:column="31">=<pos:position pos:line="32" pos:column="32"/></operator> <call><name pos:line="32" pos:column="33">apr_palloc<pos:position pos:line="32" pos:column="43"/></name><argument_list pos:line="32" pos:column="43">(<argument><expr><name pos:line="32" pos:column="44">pool<pos:position pos:line="32" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="50">sizeof<argument_list pos:line="32" pos:column="56">(<argument><expr><operator pos:line="32" pos:column="57">*<pos:position pos:line="32" pos:column="58"/></operator><name pos:line="32" pos:column="58">rp<pos:position pos:line="32" pos:column="60"/></name></expr></argument>)<pos:position pos:line="32" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><name pos:line="33" pos:column="17">len<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">+=<pos:position pos:line="33" pos:column="23"/></operator> <literal type="number" pos:line="33" pos:column="24">2<pos:position pos:line="33" pos:column="25"/></literal></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt> <comment type="block" pos:line="33" pos:column="27">/* ", " */</comment>
            }<pos:position pos:line="34" pos:column="14"/></block></else></if>

            <expr_stmt><expr><name><name pos:line="36" pos:column="13">rp<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">next<pos:position pos:line="36" pos:column="21"/></name></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <name pos:line="36" pos:column="24">NULL<pos:position pos:line="36" pos:column="28"/></name></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="37" pos:column="13">rp<pos:position pos:line="37" pos:column="15"/></name><operator pos:line="37" pos:column="15">-&gt;<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="17">value<pos:position pos:line="37" pos:column="22"/></name></name> <operator pos:line="37" pos:column="23">=<pos:position pos:line="37" pos:column="24"/></operator> <name><name pos:line="37" pos:column="25">t_elt<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">-&gt;<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="32">val<pos:position pos:line="37" pos:column="35"/></name></name></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="38" pos:column="13">rp<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">-&gt;<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="17">len<pos:position pos:line="38" pos:column="20"/></name></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <call><name pos:line="38" pos:column="23">strlen<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name><name pos:line="38" pos:column="30">rp<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">-&gt;<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="34">value<pos:position pos:line="38" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>

            <expr_stmt><expr><name pos:line="40" pos:column="13">len<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">+=<pos:position pos:line="40" pos:column="19"/></operator> <name><name pos:line="40" pos:column="20">rp<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">-&gt;<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="24">len<pos:position pos:line="40" pos:column="27"/></name></name></expr>;<pos:position pos:line="40" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="42" pos:column="9">++<pos:position pos:line="42" pos:column="11"/></operator><name pos:line="42" pos:column="11">t_elt<pos:position pos:line="42" pos:column="16"/></name></expr>;<pos:position pos:line="42" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block> while <condition pos:line="43" pos:column="13">(<expr><name pos:line="43" pos:column="14">t_elt<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">&lt;<pos:position pos:line="43" pos:column="24"/></operator> <name pos:line="43" pos:column="22">t_end<pos:position pos:line="43" pos:column="27"/></name></expr>)<pos:position pos:line="43" pos:column="28"/></condition>;<pos:position pos:line="43" pos:column="29"/></do>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">result_list<pos:position pos:line="45" pos:column="20"/></name></expr>)<pos:position pos:line="45" pos:column="21"/></condition><then pos:line="45" pos:column="21"> <block pos:line="45" pos:column="22">{
        <decl_stmt><decl><type><name pos:line="46" pos:column="9">char<pos:position pos:line="46" pos:column="13"/></name> <modifier pos:line="46" pos:column="14">*<pos:position pos:line="46" pos:column="15"/></modifier></type><name pos:line="46" pos:column="15">result<pos:position pos:line="46" pos:column="21"/></name> <init pos:line="46" pos:column="22">= <expr><call><name pos:line="46" pos:column="24">apr_palloc<pos:position pos:line="46" pos:column="34"/></name><argument_list pos:line="46" pos:column="34">(<argument><expr><name pos:line="46" pos:column="35">pool<pos:position pos:line="46" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="41">len<pos:position pos:line="46" pos:column="44"/></name></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="46"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="47" pos:column="9">char<pos:position pos:line="47" pos:column="13"/></name> <modifier pos:line="47" pos:column="14">*<pos:position pos:line="47" pos:column="15"/></modifier></type><name pos:line="47" pos:column="15">cp<pos:position pos:line="47" pos:column="17"/></name> <init pos:line="47" pos:column="18">= <expr><name pos:line="47" pos:column="20">result<pos:position pos:line="47" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="47" pos:column="27"/></decl_stmt>

        <expr_stmt><expr><name pos:line="49" pos:column="9">rp<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">=<pos:position pos:line="49" pos:column="13"/></operator> <name pos:line="49" pos:column="14">result_list<pos:position pos:line="49" pos:column="25"/></name></expr>;<pos:position pos:line="49" pos:column="26"/></expr_stmt>
        <while pos:line="50" pos:column="9">while <condition pos:line="50" pos:column="15">(<expr><name pos:line="50" pos:column="16">rp<pos:position pos:line="50" pos:column="18"/></name></expr>)<pos:position pos:line="50" pos:column="19"/></condition> <block pos:line="50" pos:column="20">{
            <if pos:line="51" pos:column="13">if <condition pos:line="51" pos:column="16">(<expr><name pos:line="51" pos:column="17">rp<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">!=<pos:position pos:line="51" pos:column="22"/></operator> <name pos:line="51" pos:column="23">result_list<pos:position pos:line="51" pos:column="34"/></name></expr>)<pos:position pos:line="51" pos:column="35"/></condition><then pos:line="51" pos:column="35"> <block pos:line="51" pos:column="36">{
                <expr_stmt><expr><operator pos:line="52" pos:column="17">*<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="18">cp<pos:position pos:line="52" pos:column="20"/></name><operator pos:line="52" pos:column="20">++<pos:position pos:line="52" pos:column="22"/></operator> <operator pos:line="52" pos:column="23">=<pos:position pos:line="52" pos:column="24"/></operator> <literal type="char" pos:line="52" pos:column="25">','<pos:position pos:line="52" pos:column="28"/></literal></expr>;<pos:position pos:line="52" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="53" pos:column="17">*<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="18">cp<pos:position pos:line="53" pos:column="20"/></name><operator pos:line="53" pos:column="20">++<pos:position pos:line="53" pos:column="22"/></operator> <operator pos:line="53" pos:column="23">=<pos:position pos:line="53" pos:column="24"/></operator> <literal type="char" pos:line="53" pos:column="25">' '<pos:position pos:line="53" pos:column="28"/></literal></expr>;<pos:position pos:line="53" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="54" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">memcpy<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">(<argument><expr><name pos:line="55" pos:column="20">cp<pos:position pos:line="55" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="24">rp<pos:position pos:line="55" pos:column="26"/></name><operator pos:line="55" pos:column="26">-&gt;<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="28">value<pos:position pos:line="55" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="35">rp<pos:position pos:line="55" pos:column="37"/></name><operator pos:line="55" pos:column="37">-&gt;<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="39">len<pos:position pos:line="55" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name pos:line="56" pos:column="13">cp<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">+=<pos:position pos:line="56" pos:column="18"/></operator> <name><name pos:line="56" pos:column="19">rp<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">-&gt;<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="23">len<pos:position pos:line="56" pos:column="26"/></name></name></expr>;<pos:position pos:line="56" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><name pos:line="57" pos:column="13">rp<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">=<pos:position pos:line="57" pos:column="17"/></operator> <name><name pos:line="57" pos:column="18">rp<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">-&gt;<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="22">next<pos:position pos:line="57" pos:column="26"/></name></name></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></while>
        <expr_stmt><expr><operator pos:line="59" pos:column="9">*<pos:position pos:line="59" pos:column="10"/></operator><name pos:line="59" pos:column="10">cp<pos:position pos:line="59" pos:column="12"/></name> <operator pos:line="59" pos:column="13">=<pos:position pos:line="59" pos:column="14"/></operator> <literal type="char" pos:line="59" pos:column="15">'\0'<pos:position pos:line="59" pos:column="19"/></literal></expr>;<pos:position pos:line="59" pos:column="20"/></expr_stmt>

        <return pos:line="61" pos:column="9">return <expr><name pos:line="61" pos:column="16">result<pos:position pos:line="61" pos:column="22"/></name></expr>;<pos:position pos:line="61" pos:column="23"/></return>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <return pos:line="64" pos:column="5">return <expr><name pos:line="64" pos:column="12">NULL<pos:position pos:line="64" pos:column="16"/></name></expr>;<pos:position pos:line="64" pos:column="17"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4325.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">balancer_child_init<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">apr_pool_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">p<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">server_rec<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">s<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <while pos:line="3" pos:column="5">while <condition pos:line="3" pos:column="11">(<expr><name pos:line="3" pos:column="12">s<pos:position pos:line="3" pos:column="13"/></name></expr>)<pos:position pos:line="3" pos:column="14"/></condition> <block pos:line="3" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="4" pos:column="9">proxy_balancer<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">balancer<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">void<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">sconf<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name><name pos:line="6" pos:column="23">s<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">-&gt;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="26">module_config<pos:position pos:line="6" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">proxy_server_conf<pos:position pos:line="7" pos:column="26"/></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name pos:line="7" pos:column="28">conf<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">= <expr><operator pos:line="7" pos:column="35">(<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="36">proxy_server_conf<pos:position pos:line="7" pos:column="53"/></name> <operator pos:line="7" pos:column="54">*<pos:position pos:line="7" pos:column="55"/></operator><operator pos:line="7" pos:column="55">)<pos:position pos:line="7" pos:column="56"/></operator><call><name pos:line="7" pos:column="56">ap_get_module_config<pos:position pos:line="7" pos:column="76"/></name><argument_list pos:line="7" pos:column="76">(<argument><expr><name pos:line="7" pos:column="77">sconf<pos:position pos:line="7" pos:column="82"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="84">&amp;<pos:position pos:line="7" pos:column="89"/></operator><name pos:line="7" pos:column="85">proxy_module<pos:position pos:line="7" pos:column="97"/></name></expr></argument>)<pos:position pos:line="7" pos:column="98"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="99"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">apr_status_t<pos:position pos:line="8" pos:column="21"/></name></type> <name pos:line="8" pos:column="22">rv<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>

        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">conf<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">balancers<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">-&gt;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="30">nelts<pos:position pos:line="10" pos:column="35"/></name></name></expr>)<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36"> <block pos:line="10" pos:column="37">{
            <decl_stmt><decl><type><name pos:line="11" pos:column="13">apr_size_t<pos:position pos:line="11" pos:column="23"/></name></type> <name pos:line="11" pos:column="24">size<pos:position pos:line="11" pos:column="28"/></name></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="12" pos:column="13">unsigned<pos:position pos:line="12" pos:column="21"/></name> <name pos:line="12" pos:column="22">int<pos:position pos:line="12" pos:column="25"/></name></type> <name pos:line="12" pos:column="26">num<pos:position pos:line="12" pos:column="29"/></name></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="13" pos:column="13">storage<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">attach<pos:position pos:line="13" pos:column="28"/></name></name><argument_list pos:line="13" pos:column="28">(<argument><expr><operator pos:line="13" pos:column="29">&amp;<pos:position pos:line="13" pos:column="34"/></operator><operator pos:line="13" pos:column="30">(<pos:position pos:line="13" pos:column="31"/></operator><name><name pos:line="13" pos:column="31">conf<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">-&gt;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="37">bslot<pos:position pos:line="13" pos:column="42"/></name></name><operator pos:line="13" pos:column="42">)<pos:position pos:line="13" pos:column="43"/></operator></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="45">conf<pos:position pos:line="13" pos:column="49"/></name><operator pos:line="13" pos:column="49">-&gt;<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="51">id<pos:position pos:line="13" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="55">&amp;<pos:position pos:line="13" pos:column="60"/></operator><name pos:line="13" pos:column="56">size<pos:position pos:line="13" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="62">&amp;<pos:position pos:line="13" pos:column="67"/></operator><name pos:line="13" pos:column="63">num<pos:position pos:line="13" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="68">p<pos:position pos:line="13" pos:column="69"/></name></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="71"/></expr_stmt>
            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><operator pos:line="14" pos:column="17">!<pos:position pos:line="14" pos:column="18"/></operator><name><name pos:line="14" pos:column="18">conf<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">-&gt;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="24">bslot<pos:position pos:line="14" pos:column="29"/></name></name></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30"> <block pos:line="14" pos:column="31">{
                <expr_stmt><expr><call><name pos:line="15" pos:column="17">ap_log_error<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">APLOG_MARK<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">APLOG_EMERG<pos:position pos:line="15" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="55">0<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="58">s<pos:position pos:line="15" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="61">APLOGNO<pos:position pos:line="15" pos:column="68"/></name><argument_list pos:line="15" pos:column="68">(<argument><expr><literal type="number" pos:line="15" pos:column="69">01205<pos:position pos:line="15" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="75"/></argument_list></call> <literal type="string" pos:line="15" pos:column="76">"slotmem_attach failed"<pos:position pos:line="15" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="101"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="16" pos:column="17">exit<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><literal type="number" pos:line="16" pos:column="22">1<pos:position pos:line="16" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt> <comment type="block" pos:line="16" pos:column="26">/* Ugly, but what else? */</comment>
            }<pos:position pos:line="17" pos:column="14"/></block></then></if>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="20" pos:column="9">balancer<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <operator pos:line="20" pos:column="20">(<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">proxy_balancer<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">*<pos:position pos:line="20" pos:column="37"/></operator><operator pos:line="20" pos:column="37">)<pos:position pos:line="20" pos:column="38"/></operator><name><name pos:line="20" pos:column="38">conf<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">-&gt;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="44">balancers<pos:position pos:line="20" pos:column="53"/></name><operator pos:line="20" pos:column="53">-&gt;<pos:position pos:line="20" pos:column="58"/></operator><name pos:line="20" pos:column="55">elts<pos:position pos:line="20" pos:column="59"/></name></name></expr>;<pos:position pos:line="20" pos:column="60"/></expr_stmt>
        <for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">i<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr>;<pos:position pos:line="21" pos:column="20"/></init> <condition><expr><name pos:line="21" pos:column="21">i<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">&lt;<pos:position pos:line="21" pos:column="27"/></operator> <name><name pos:line="21" pos:column="25">conf<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">balancers<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">-&gt;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="42">nelts<pos:position pos:line="21" pos:column="47"/></name></name></expr>;<pos:position pos:line="21" pos:column="48"/></condition> <incr><expr><name pos:line="21" pos:column="49">i<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">++<pos:position pos:line="21" pos:column="52"/></operator></expr><operator pos:line="21" pos:column="52">,<pos:position pos:line="21" pos:column="53"/></operator> <expr><name pos:line="21" pos:column="54">balancer<pos:position pos:line="21" pos:column="62"/></name><operator pos:line="21" pos:column="62">++<pos:position pos:line="21" pos:column="64"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="65"/></control> <block pos:line="21" pos:column="66">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">rv<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <call><name pos:line="22" pos:column="18">ap_proxy_initialize_balancer<pos:position pos:line="22" pos:column="46"/></name><argument_list pos:line="22" pos:column="46">(<argument><expr><name pos:line="22" pos:column="47">balancer<pos:position pos:line="22" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="57">s<pos:position pos:line="22" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="60">p<pos:position pos:line="22" pos:column="61"/></name></expr></argument>)<pos:position pos:line="22" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="63"/></expr_stmt>

            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><name pos:line="24" pos:column="17">rv<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">!=<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">APR_SUCCESS<pos:position pos:line="24" pos:column="34"/></name></expr>)<pos:position pos:line="24" pos:column="35"/></condition><then pos:line="24" pos:column="35"> <block pos:line="24" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="25" pos:column="17">ap_log_error<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">APLOG_MARK<pos:position pos:line="25" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="42">APLOG_CRIT<pos:position pos:line="25" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="54">rv<pos:position pos:line="25" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="58">s<pos:position pos:line="25" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="61">APLOGNO<pos:position pos:line="25" pos:column="68"/></name><argument_list pos:line="25" pos:column="68">(<argument><expr><literal type="number" pos:line="25" pos:column="69">01206<pos:position pos:line="25" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="75"/></argument_list></call>
                             <literal type="string" pos:line="26" pos:column="30">"Failed to init balancer %s in child"<pos:position pos:line="26" pos:column="67"/></literal></expr></argument>,
                             <argument><expr><name><name pos:line="27" pos:column="30">balancer<pos:position pos:line="27" pos:column="38"/></name><operator pos:line="27" pos:column="38">-&gt;<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="40">s<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">-&gt;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="43">name<pos:position pos:line="27" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">exit<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><literal type="number" pos:line="28" pos:column="22">1<pos:position pos:line="28" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt> <comment type="block" pos:line="28" pos:column="26">/* Ugly, but what else? */</comment>
            }<pos:position pos:line="29" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">init_balancer_members<pos:position pos:line="30" pos:column="34"/></name><argument_list pos:line="30" pos:column="34">(<argument><expr><name><name pos:line="30" pos:column="35">conf<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">-&gt;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="41">pool<pos:position pos:line="30" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="47">s<pos:position pos:line="30" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="50">balancer<pos:position pos:line="30" pos:column="58"/></name></expr></argument>)<pos:position pos:line="30" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="32" pos:column="9">s<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <name><name pos:line="32" pos:column="13">s<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">next<pos:position pos:line="32" pos:column="20"/></name></name></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></while>

}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

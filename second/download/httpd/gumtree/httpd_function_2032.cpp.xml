<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_2032.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ssl_init_ctx_protocol<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">server_rec<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">s<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">apr_pool_t<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">p<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">apr_pool_t<pos:position pos:line="3" pos:column="45"/></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">ptemp<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="4" pos:column="35">modssl_ctx_t<pos:position pos:line="4" pos:column="47"/></name> <modifier pos:line="4" pos:column="48">*<pos:position pos:line="4" pos:column="49"/></modifier></type><name pos:line="4" pos:column="49">mctx<pos:position pos:line="4" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="54"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SSL_CTX<pos:position pos:line="6" pos:column="12"/></name> <modifier pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></modifier></type><name pos:line="6" pos:column="14">ctx<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">MODSSL_SSL_METHOD_CONST<pos:position pos:line="7" pos:column="28"/></name> <name pos:line="7" pos:column="29">SSL_METHOD<pos:position pos:line="7" pos:column="39"/></name> <modifier pos:line="7" pos:column="40">*<pos:position pos:line="7" pos:column="41"/></modifier></type><name pos:line="7" pos:column="41">method<pos:position pos:line="7" pos:column="47"/></name> <init pos:line="7" pos:column="48">= <expr><name pos:line="7" pos:column="50">NULL<pos:position pos:line="7" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">cp<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">protocol<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><name><name pos:line="9" pos:column="20">mctx<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">protocol<pos:position pos:line="9" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">SSLSrvConfigRec<pos:position pos:line="10" pos:column="20"/></name> <modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier></type><name pos:line="10" pos:column="22">sc<pos:position pos:line="10" pos:column="24"/></name> <init pos:line="10" pos:column="25">= <expr><call><name pos:line="10" pos:column="27">mySrvConfig<pos:position pos:line="10" pos:column="38"/></name><argument_list pos:line="10" pos:column="38">(<argument><expr><name pos:line="10" pos:column="39">s<pos:position pos:line="10" pos:column="40"/></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/*
     *  Create the new per-server SSL context
     */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">protocol<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">==<pos:position pos:line="15" pos:column="20"/></operator> <name pos:line="15" pos:column="21">SSL_PROTOCOL_NONE<pos:position pos:line="15" pos:column="38"/></name></expr>)<pos:position pos:line="15" pos:column="39"/></condition><then pos:line="15" pos:column="39"> <block pos:line="15" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">ap_log_error<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">APLOG_MARK<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="34">APLOG_ERR<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="45">0<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="48">s<pos:position pos:line="16" pos:column="49"/></name></expr></argument>,
                <argument><expr><literal type="string" pos:line="17" pos:column="17">"No SSL protocols available [hint: SSLProtocol]"<pos:position pos:line="17" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">ssl_die<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">()<pos:position pos:line="18" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="21" pos:column="5">cp<pos:position pos:line="21" pos:column="7"/></name> <operator pos:line="21" pos:column="8">=<pos:position pos:line="21" pos:column="9"/></operator> <call><name pos:line="21" pos:column="10">apr_pstrcat<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">p<pos:position pos:line="21" pos:column="23"/></name></expr></argument>,
<cpp:ifndef pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">ifndef<pos:position pos:line="22" pos:column="8"/></cpp:directive> <name pos:line="22" pos:column="9">OPENSSL_NO_SSL2<pos:position pos:line="22" pos:column="24"/></name></cpp:ifndef>
                     <argument><expr><operator pos:line="23" pos:column="22">(<pos:position pos:line="23" pos:column="23"/></operator><ternary><condition><expr><name pos:line="23" pos:column="23">protocol<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">&amp;<pos:position pos:line="23" pos:column="37"/></operator> <name pos:line="23" pos:column="34">SSL_PROTOCOL_SSLV2<pos:position pos:line="23" pos:column="52"/></name></expr> ?<pos:position pos:line="23" pos:column="54"/></condition><then pos:line="23" pos:column="54"> <expr><literal type="string" pos:line="23" pos:column="55">"SSLv2, "<pos:position pos:line="23" pos:column="64"/></literal></expr> <pos:position pos:line="23" pos:column="65"/></then><else pos:line="23" pos:column="65">: <expr><literal type="string" pos:line="23" pos:column="67">""<pos:position pos:line="23" pos:column="69"/></literal></expr></else></ternary><operator pos:line="23" pos:column="69">)<pos:position pos:line="23" pos:column="70"/></operator></expr></argument>,
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifndef pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">ifndef<pos:position pos:line="25" pos:column="8"/></cpp:directive> <name pos:line="25" pos:column="9">OPENSSL_NO_SSL3<pos:position pos:line="25" pos:column="24"/></name></cpp:ifndef>
                     <argument><expr><operator pos:line="26" pos:column="22">(<pos:position pos:line="26" pos:column="23"/></operator><ternary><condition><expr><name pos:line="26" pos:column="23">protocol<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">&amp;<pos:position pos:line="26" pos:column="37"/></operator> <name pos:line="26" pos:column="34">SSL_PROTOCOL_SSLV3<pos:position pos:line="26" pos:column="52"/></name></expr> ?<pos:position pos:line="26" pos:column="54"/></condition><then pos:line="26" pos:column="54"> <expr><literal type="string" pos:line="26" pos:column="55">"SSLv3, "<pos:position pos:line="26" pos:column="64"/></literal></expr> <pos:position pos:line="26" pos:column="65"/></then><else pos:line="26" pos:column="65">: <expr><literal type="string" pos:line="26" pos:column="67">""<pos:position pos:line="26" pos:column="69"/></literal></expr></else></ternary><operator pos:line="26" pos:column="69">)<pos:position pos:line="26" pos:column="70"/></operator></expr></argument>,
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>
                     <argument><expr><operator pos:line="28" pos:column="22">(<pos:position pos:line="28" pos:column="23"/></operator><ternary><condition><expr><name pos:line="28" pos:column="23">protocol<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">&amp;<pos:position pos:line="28" pos:column="37"/></operator> <name pos:line="28" pos:column="34">SSL_PROTOCOL_TLSV1<pos:position pos:line="28" pos:column="52"/></name></expr> ?<pos:position pos:line="28" pos:column="54"/></condition><then pos:line="28" pos:column="54"> <expr><literal type="string" pos:line="28" pos:column="55">"TLSv1, "<pos:position pos:line="28" pos:column="64"/></literal></expr> <pos:position pos:line="28" pos:column="65"/></then><else pos:line="28" pos:column="65">: <expr><literal type="string" pos:line="28" pos:column="67">""<pos:position pos:line="28" pos:column="69"/></literal></expr></else></ternary><operator pos:line="28" pos:column="69">)<pos:position pos:line="28" pos:column="70"/></operator></expr></argument>,
<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef<pos:position pos:line="29" pos:column="7"/></cpp:directive> <name pos:line="29" pos:column="8">HAVE_TLSV1_X<pos:position pos:line="29" pos:column="20"/></name></cpp:ifdef>
                     <argument><expr><operator pos:line="30" pos:column="22">(<pos:position pos:line="30" pos:column="23"/></operator><ternary><condition><expr><name pos:line="30" pos:column="23">protocol<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">&amp;<pos:position pos:line="30" pos:column="37"/></operator> <name pos:line="30" pos:column="34">SSL_PROTOCOL_TLSV1_1<pos:position pos:line="30" pos:column="54"/></name></expr> ?<pos:position pos:line="30" pos:column="56"/></condition><then pos:line="30" pos:column="56"> <expr><literal type="string" pos:line="30" pos:column="57">"TLSv1.1, "<pos:position pos:line="30" pos:column="68"/></literal></expr> <pos:position pos:line="30" pos:column="69"/></then><else pos:line="30" pos:column="69">: <expr><literal type="string" pos:line="30" pos:column="71">""<pos:position pos:line="30" pos:column="73"/></literal></expr></else></ternary><operator pos:line="30" pos:column="73">)<pos:position pos:line="30" pos:column="74"/></operator></expr></argument>,
                     <argument><expr><operator pos:line="31" pos:column="22">(<pos:position pos:line="31" pos:column="23"/></operator><ternary><condition><expr><name pos:line="31" pos:column="23">protocol<pos:position pos:line="31" pos:column="31"/></name> <operator pos:line="31" pos:column="32">&amp;<pos:position pos:line="31" pos:column="37"/></operator> <name pos:line="31" pos:column="34">SSL_PROTOCOL_TLSV1_2<pos:position pos:line="31" pos:column="54"/></name></expr> ?<pos:position pos:line="31" pos:column="56"/></condition><then pos:line="31" pos:column="56"> <expr><literal type="string" pos:line="31" pos:column="57">"TLSv1.2, "<pos:position pos:line="31" pos:column="68"/></literal></expr> <pos:position pos:line="31" pos:column="69"/></then><else pos:line="31" pos:column="69">: <expr><literal type="string" pos:line="31" pos:column="71">""<pos:position pos:line="31" pos:column="73"/></literal></expr></else></ternary><operator pos:line="31" pos:column="73">)<pos:position pos:line="31" pos:column="74"/></operator></expr></argument>,
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>
                     <argument><expr><name pos:line="33" pos:column="22">NULL<pos:position pos:line="33" pos:column="26"/></name></expr></argument>)<pos:position pos:line="33" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">cp<pos:position pos:line="34" pos:column="7"/></name><index pos:line="34" pos:column="7">[<expr><call><name pos:line="34" pos:column="8">strlen<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><name pos:line="34" pos:column="15">cp<pos:position pos:line="34" pos:column="17"/></name></expr></argument>)<pos:position pos:line="34" pos:column="18"/></argument_list></call><operator pos:line="34" pos:column="18">-<pos:position pos:line="34" pos:column="19"/></operator><literal type="number" pos:line="34" pos:column="19">2<pos:position pos:line="34" pos:column="20"/></literal></expr>]<pos:position pos:line="34" pos:column="21"/></index></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="24">NUL<pos:position pos:line="34" pos:column="27"/></name></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">ap_log_error<pos:position pos:line="36" pos:column="17"/></name><argument_list pos:line="36" pos:column="17">(<argument><expr><name pos:line="36" pos:column="18">APLOG_MARK<pos:position pos:line="36" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="30">APLOG_DEBUG<pos:position pos:line="36" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="43">0<pos:position pos:line="36" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="46">s<pos:position pos:line="36" pos:column="47"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="37" pos:column="18">"Creating new SSL context (protocols: %s)"<pos:position pos:line="37" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="62">cp<pos:position pos:line="37" pos:column="64"/></name></expr></argument>)<pos:position pos:line="37" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="66"/></expr_stmt>

<cpp:ifndef pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">ifndef<pos:position pos:line="39" pos:column="8"/></cpp:directive> <name pos:line="39" pos:column="9">OPENSSL_NO_SSL2<pos:position pos:line="39" pos:column="24"/></name></cpp:ifndef>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">protocol<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">==<pos:position pos:line="40" pos:column="20"/></operator> <name pos:line="40" pos:column="21">SSL_PROTOCOL_SSLV2<pos:position pos:line="40" pos:column="39"/></name></expr>)<pos:position pos:line="40" pos:column="40"/></condition><then pos:line="40" pos:column="40"> <block pos:line="40" pos:column="41">{
        <expr_stmt><expr><name pos:line="41" pos:column="9">method<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <ternary><condition><expr><name><name pos:line="41" pos:column="18">mctx<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">-&gt;<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="24">pkp<pos:position pos:line="41" pos:column="27"/></name></name></expr> ?<pos:position pos:line="41" pos:column="29"/></condition><then pos:line="41" pos:column="29">
            <expr><call><name pos:line="42" pos:column="13">SSLv2_client_method<pos:position pos:line="42" pos:column="32"/></name><argument_list pos:line="42" pos:column="32">()<pos:position pos:line="42" pos:column="34"/></argument_list></call></expr> <pos:position pos:line="42" pos:column="35"/></then><else pos:line="42" pos:column="35">: <comment type="block" pos:line="42" pos:column="37">/* proxy */</comment>
            <expr><call><name pos:line="43" pos:column="13">SSLv2_server_method<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">()<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>  <comment type="block" pos:line="43" pos:column="37">/* server */</comment>
    }<pos:position pos:line="44" pos:column="6"/></block></then>
    <elseif pos:line="45" pos:column="5">else
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifndef pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">ifndef<pos:position pos:line="47" pos:column="8"/></cpp:directive> <name pos:line="47" pos:column="9">OPENSSL_NO_SSL3<pos:position pos:line="47" pos:column="24"/></name></cpp:ifndef>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">protocol<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">==<pos:position pos:line="48" pos:column="20"/></operator> <name pos:line="48" pos:column="21">SSL_PROTOCOL_SSLV3<pos:position pos:line="48" pos:column="39"/></name></expr>)<pos:position pos:line="48" pos:column="40"/></condition><then pos:line="48" pos:column="40"> <block pos:line="48" pos:column="41">{
        <expr_stmt><expr><name pos:line="49" pos:column="9">method<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <ternary><condition><expr><name><name pos:line="49" pos:column="18">mctx<pos:position pos:line="49" pos:column="22"/></name><operator pos:line="49" pos:column="22">-&gt;<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="24">pkp<pos:position pos:line="49" pos:column="27"/></name></name></expr> ?<pos:position pos:line="49" pos:column="29"/></condition><then pos:line="49" pos:column="29">
            <expr><call><name pos:line="50" pos:column="13">SSLv3_client_method<pos:position pos:line="50" pos:column="32"/></name><argument_list pos:line="50" pos:column="32">()<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr> <pos:position pos:line="50" pos:column="35"/></then><else pos:line="50" pos:column="35">: <comment type="block" pos:line="50" pos:column="37">/* proxy */</comment>
            <expr><call><name pos:line="51" pos:column="13">SSLv3_server_method<pos:position pos:line="51" pos:column="32"/></name><argument_list pos:line="51" pos:column="32">()<pos:position pos:line="51" pos:column="34"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="51" pos:column="35"/></expr_stmt>  <comment type="block" pos:line="51" pos:column="37">/* server */</comment>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="53" pos:column="5">else
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name pos:line="55" pos:column="9">protocol<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">==<pos:position pos:line="55" pos:column="20"/></operator> <name pos:line="55" pos:column="21">SSL_PROTOCOL_TLSV1<pos:position pos:line="55" pos:column="39"/></name></expr>)<pos:position pos:line="55" pos:column="40"/></condition><then pos:line="55" pos:column="40"> <block pos:line="55" pos:column="41">{
        <expr_stmt><expr><name pos:line="56" pos:column="9">method<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <ternary><condition><expr><name><name pos:line="56" pos:column="18">mctx<pos:position pos:line="56" pos:column="22"/></name><operator pos:line="56" pos:column="22">-&gt;<pos:position pos:line="56" pos:column="27"/></operator><name pos:line="56" pos:column="24">pkp<pos:position pos:line="56" pos:column="27"/></name></name></expr> ?<pos:position pos:line="56" pos:column="29"/></condition><then pos:line="56" pos:column="29">
            <expr><call><name pos:line="57" pos:column="13">TLSv1_client_method<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">()<pos:position pos:line="57" pos:column="34"/></argument_list></call></expr> <pos:position pos:line="57" pos:column="35"/></then><else pos:line="57" pos:column="35">: <comment type="block" pos:line="57" pos:column="37">/* proxy */</comment>
            <expr><call><name pos:line="58" pos:column="13">TLSv1_server_method<pos:position pos:line="58" pos:column="32"/></name><argument_list pos:line="58" pos:column="32">()<pos:position pos:line="58" pos:column="34"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="58" pos:column="35"/></expr_stmt>  <comment type="block" pos:line="58" pos:column="37">/* server */</comment>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="60" pos:column="5">else
<cpp:ifdef pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">ifdef<pos:position pos:line="61" pos:column="7"/></cpp:directive> <name pos:line="61" pos:column="8">HAVE_TLSV1_X<pos:position pos:line="61" pos:column="20"/></name></cpp:ifdef>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">protocol<pos:position pos:line="62" pos:column="17"/></name> <operator pos:line="62" pos:column="18">==<pos:position pos:line="62" pos:column="20"/></operator> <name pos:line="62" pos:column="21">SSL_PROTOCOL_TLSV1_1<pos:position pos:line="62" pos:column="41"/></name></expr>)<pos:position pos:line="62" pos:column="42"/></condition><then pos:line="62" pos:column="42"> <block pos:line="62" pos:column="43">{
        <expr_stmt><expr><name pos:line="63" pos:column="9">method<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">=<pos:position pos:line="63" pos:column="17"/></operator> <ternary><condition><expr><name><name pos:line="63" pos:column="18">mctx<pos:position pos:line="63" pos:column="22"/></name><operator pos:line="63" pos:column="22">-&gt;<pos:position pos:line="63" pos:column="27"/></operator><name pos:line="63" pos:column="24">pkp<pos:position pos:line="63" pos:column="27"/></name></name></expr> ?<pos:position pos:line="63" pos:column="29"/></condition><then pos:line="63" pos:column="29">
            <expr><call><name pos:line="64" pos:column="13">TLSv1_1_client_method<pos:position pos:line="64" pos:column="34"/></name><argument_list pos:line="64" pos:column="34">()<pos:position pos:line="64" pos:column="36"/></argument_list></call></expr> <pos:position pos:line="64" pos:column="37"/></then><else pos:line="64" pos:column="37">: <comment type="block" pos:line="64" pos:column="39">/* proxy */</comment>
            <expr><call><name pos:line="65" pos:column="13">TLSv1_1_server_method<pos:position pos:line="65" pos:column="34"/></name><argument_list pos:line="65" pos:column="34">()<pos:position pos:line="65" pos:column="36"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="65" pos:column="37"/></expr_stmt>  <comment type="block" pos:line="65" pos:column="39">/* server */</comment>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="67" pos:column="5">else <if pos:line="67" pos:column="10">if <condition pos:line="67" pos:column="13">(<expr><name pos:line="67" pos:column="14">protocol<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">==<pos:position pos:line="67" pos:column="25"/></operator> <name pos:line="67" pos:column="26">SSL_PROTOCOL_TLSV1_2<pos:position pos:line="67" pos:column="46"/></name></expr>)<pos:position pos:line="67" pos:column="47"/></condition><then pos:line="67" pos:column="47"> <block pos:line="67" pos:column="48">{
        <expr_stmt><expr><name pos:line="68" pos:column="9">method<pos:position pos:line="68" pos:column="15"/></name> <operator pos:line="68" pos:column="16">=<pos:position pos:line="68" pos:column="17"/></operator> <ternary><condition><expr><name><name pos:line="68" pos:column="18">mctx<pos:position pos:line="68" pos:column="22"/></name><operator pos:line="68" pos:column="22">-&gt;<pos:position pos:line="68" pos:column="27"/></operator><name pos:line="68" pos:column="24">pkp<pos:position pos:line="68" pos:column="27"/></name></name></expr> ?<pos:position pos:line="68" pos:column="29"/></condition><then pos:line="68" pos:column="29">
            <expr><call><name pos:line="69" pos:column="13">TLSv1_2_client_method<pos:position pos:line="69" pos:column="34"/></name><argument_list pos:line="69" pos:column="34">()<pos:position pos:line="69" pos:column="36"/></argument_list></call></expr> <pos:position pos:line="69" pos:column="37"/></then><else pos:line="69" pos:column="37">: <comment type="block" pos:line="69" pos:column="39">/* proxy */</comment>
            <expr><call><name pos:line="70" pos:column="13">TLSv1_2_server_method<pos:position pos:line="70" pos:column="34"/></name><argument_list pos:line="70" pos:column="34">()<pos:position pos:line="70" pos:column="36"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="70" pos:column="37"/></expr_stmt>  <comment type="block" pos:line="70" pos:column="39">/* server */</comment>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if></elseif>
    <else pos:line="72" pos:column="5">else
<cpp:endif pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">endif<pos:position pos:line="73" pos:column="7"/></cpp:directive></cpp:endif>
    <block pos:line="74" pos:column="5">{
        <expr_stmt><expr><name pos:line="75" pos:column="9">method<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">=<pos:position pos:line="75" pos:column="17"/></operator> <ternary><condition><expr><name><name pos:line="75" pos:column="18">mctx<pos:position pos:line="75" pos:column="22"/></name><operator pos:line="75" pos:column="22">-&gt;<pos:position pos:line="75" pos:column="27"/></operator><name pos:line="75" pos:column="24">pkp<pos:position pos:line="75" pos:column="27"/></name></name></expr> ?<pos:position pos:line="75" pos:column="29"/></condition><then pos:line="75" pos:column="29">
            <expr><call><name pos:line="76" pos:column="13">SSLv23_client_method<pos:position pos:line="76" pos:column="33"/></name><argument_list pos:line="76" pos:column="33">()<pos:position pos:line="76" pos:column="35"/></argument_list></call></expr> <pos:position pos:line="76" pos:column="36"/></then><else pos:line="76" pos:column="36">: <comment type="block" pos:line="76" pos:column="38">/* proxy */</comment>
            <expr><call><name pos:line="77" pos:column="13">SSLv23_server_method<pos:position pos:line="77" pos:column="33"/></name><argument_list pos:line="77" pos:column="33">()<pos:position pos:line="77" pos:column="35"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="77" pos:column="36"/></expr_stmt>  <comment type="block" pos:line="77" pos:column="38">/* server */</comment>
    }<pos:position pos:line="78" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="79" pos:column="5">ctx<pos:position pos:line="79" pos:column="8"/></name> <operator pos:line="79" pos:column="9">=<pos:position pos:line="79" pos:column="10"/></operator> <call><name pos:line="79" pos:column="11">SSL_CTX_new<pos:position pos:line="79" pos:column="22"/></name><argument_list pos:line="79" pos:column="22">(<argument><expr><name pos:line="79" pos:column="23">method<pos:position pos:line="79" pos:column="29"/></name></expr></argument>)<pos:position pos:line="79" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="81" pos:column="5">mctx<pos:position pos:line="81" pos:column="9"/></name><operator pos:line="81" pos:column="9">-&gt;<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="11">ssl_ctx<pos:position pos:line="81" pos:column="18"/></name></name> <operator pos:line="81" pos:column="19">=<pos:position pos:line="81" pos:column="20"/></operator> <name pos:line="81" pos:column="21">ctx<pos:position pos:line="81" pos:column="24"/></name></expr>;<pos:position pos:line="81" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="83" pos:column="5">SSL_CTX_set_options<pos:position pos:line="83" pos:column="24"/></name><argument_list pos:line="83" pos:column="24">(<argument><expr><name pos:line="83" pos:column="25">ctx<pos:position pos:line="83" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="30">SSL_OP_ALL<pos:position pos:line="83" pos:column="40"/></name></expr></argument>)<pos:position pos:line="83" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="42"/></expr_stmt>

<cpp:ifndef pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">ifndef<pos:position pos:line="85" pos:column="8"/></cpp:directive> <name pos:line="85" pos:column="9">OPENSSL_NO_SSL2<pos:position pos:line="85" pos:column="24"/></name></cpp:ifndef>
    <if pos:line="86" pos:column="5">if <condition pos:line="86" pos:column="8">(<expr><operator pos:line="86" pos:column="9">!<pos:position pos:line="86" pos:column="10"/></operator><operator pos:line="86" pos:column="10">(<pos:position pos:line="86" pos:column="11"/></operator><name pos:line="86" pos:column="11">protocol<pos:position pos:line="86" pos:column="19"/></name> <operator pos:line="86" pos:column="20">&amp;<pos:position pos:line="86" pos:column="25"/></operator> <name pos:line="86" pos:column="22">SSL_PROTOCOL_SSLV2<pos:position pos:line="86" pos:column="40"/></name><operator pos:line="86" pos:column="40">)<pos:position pos:line="86" pos:column="41"/></operator></expr>)<pos:position pos:line="86" pos:column="42"/></condition><then pos:line="86" pos:column="42"> <block pos:line="86" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">SSL_CTX_set_options<pos:position pos:line="87" pos:column="28"/></name><argument_list pos:line="87" pos:column="28">(<argument><expr><name pos:line="87" pos:column="29">ctx<pos:position pos:line="87" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="34">SSL_OP_NO_SSLv2<pos:position pos:line="87" pos:column="49"/></name></expr></argument>)<pos:position pos:line="87" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if>
<cpp:endif pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">endif<pos:position pos:line="89" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifndef pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">ifndef<pos:position pos:line="91" pos:column="8"/></cpp:directive> <name pos:line="91" pos:column="9">OPENSSL_NO_SSL3<pos:position pos:line="91" pos:column="24"/></name></cpp:ifndef>
    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">(<expr><operator pos:line="92" pos:column="9">!<pos:position pos:line="92" pos:column="10"/></operator><operator pos:line="92" pos:column="10">(<pos:position pos:line="92" pos:column="11"/></operator><name pos:line="92" pos:column="11">protocol<pos:position pos:line="92" pos:column="19"/></name> <operator pos:line="92" pos:column="20">&amp;<pos:position pos:line="92" pos:column="25"/></operator> <name pos:line="92" pos:column="22">SSL_PROTOCOL_SSLV3<pos:position pos:line="92" pos:column="40"/></name><operator pos:line="92" pos:column="40">)<pos:position pos:line="92" pos:column="41"/></operator></expr>)<pos:position pos:line="92" pos:column="42"/></condition><then pos:line="92" pos:column="42"> <block pos:line="92" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="93" pos:column="9">SSL_CTX_set_options<pos:position pos:line="93" pos:column="28"/></name><argument_list pos:line="93" pos:column="28">(<argument><expr><name pos:line="93" pos:column="29">ctx<pos:position pos:line="93" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="34">SSL_OP_NO_SSLv3<pos:position pos:line="93" pos:column="49"/></name></expr></argument>)<pos:position pos:line="93" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>
<cpp:endif pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">endif<pos:position pos:line="95" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><operator pos:line="97" pos:column="9">!<pos:position pos:line="97" pos:column="10"/></operator><operator pos:line="97" pos:column="10">(<pos:position pos:line="97" pos:column="11"/></operator><name pos:line="97" pos:column="11">protocol<pos:position pos:line="97" pos:column="19"/></name> <operator pos:line="97" pos:column="20">&amp;<pos:position pos:line="97" pos:column="25"/></operator> <name pos:line="97" pos:column="22">SSL_PROTOCOL_TLSV1<pos:position pos:line="97" pos:column="40"/></name><operator pos:line="97" pos:column="40">)<pos:position pos:line="97" pos:column="41"/></operator></expr>)<pos:position pos:line="97" pos:column="42"/></condition><then pos:line="97" pos:column="42"> <block pos:line="97" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="98" pos:column="9">SSL_CTX_set_options<pos:position pos:line="98" pos:column="28"/></name><argument_list pos:line="98" pos:column="28">(<argument><expr><name pos:line="98" pos:column="29">ctx<pos:position pos:line="98" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="34">SSL_OP_NO_TLSv1<pos:position pos:line="98" pos:column="49"/></name></expr></argument>)<pos:position pos:line="98" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="99" pos:column="6"/></block></then></if>

<cpp:ifdef pos:line="101" pos:column="1">#<cpp:directive pos:line="101" pos:column="2">ifdef<pos:position pos:line="101" pos:column="7"/></cpp:directive> <name pos:line="101" pos:column="8">HAVE_TLSV1_X<pos:position pos:line="101" pos:column="20"/></name></cpp:ifdef>
    <if pos:line="102" pos:column="5">if <condition pos:line="102" pos:column="8">(<expr><operator pos:line="102" pos:column="9">!<pos:position pos:line="102" pos:column="10"/></operator><operator pos:line="102" pos:column="10">(<pos:position pos:line="102" pos:column="11"/></operator><name pos:line="102" pos:column="11">protocol<pos:position pos:line="102" pos:column="19"/></name> <operator pos:line="102" pos:column="20">&amp;<pos:position pos:line="102" pos:column="25"/></operator> <name pos:line="102" pos:column="22">SSL_PROTOCOL_TLSV1_1<pos:position pos:line="102" pos:column="42"/></name><operator pos:line="102" pos:column="42">)<pos:position pos:line="102" pos:column="43"/></operator></expr>)<pos:position pos:line="102" pos:column="44"/></condition><then pos:line="102" pos:column="44"> <block pos:line="102" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="103" pos:column="9">SSL_CTX_set_options<pos:position pos:line="103" pos:column="28"/></name><argument_list pos:line="103" pos:column="28">(<argument><expr><name pos:line="103" pos:column="29">ctx<pos:position pos:line="103" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="34">SSL_OP_NO_TLSv1_1<pos:position pos:line="103" pos:column="51"/></name></expr></argument>)<pos:position pos:line="103" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="104" pos:column="6"/></block></then></if>

    <if pos:line="106" pos:column="5">if <condition pos:line="106" pos:column="8">(<expr><operator pos:line="106" pos:column="9">!<pos:position pos:line="106" pos:column="10"/></operator><operator pos:line="106" pos:column="10">(<pos:position pos:line="106" pos:column="11"/></operator><name pos:line="106" pos:column="11">protocol<pos:position pos:line="106" pos:column="19"/></name> <operator pos:line="106" pos:column="20">&amp;<pos:position pos:line="106" pos:column="25"/></operator> <name pos:line="106" pos:column="22">SSL_PROTOCOL_TLSV1_2<pos:position pos:line="106" pos:column="42"/></name><operator pos:line="106" pos:column="42">)<pos:position pos:line="106" pos:column="43"/></operator></expr>)<pos:position pos:line="106" pos:column="44"/></condition><then pos:line="106" pos:column="44"> <block pos:line="106" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="107" pos:column="9">SSL_CTX_set_options<pos:position pos:line="107" pos:column="28"/></name><argument_list pos:line="107" pos:column="28">(<argument><expr><name pos:line="107" pos:column="29">ctx<pos:position pos:line="107" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="34">SSL_OP_NO_TLSv1_2<pos:position pos:line="107" pos:column="51"/></name></expr></argument>)<pos:position pos:line="107" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="108" pos:column="6"/></block></then></if>
<cpp:endif pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">endif<pos:position pos:line="109" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="111" pos:column="1">#<cpp:directive pos:line="111" pos:column="2">ifdef<pos:position pos:line="111" pos:column="7"/></cpp:directive> <name pos:line="111" pos:column="8">SSL_OP_CIPHER_SERVER_PREFERENCE<pos:position pos:line="111" pos:column="39"/></name></cpp:ifdef>
    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><name><name pos:line="112" pos:column="9">sc<pos:position pos:line="112" pos:column="11"/></name><operator pos:line="112" pos:column="11">-&gt;<pos:position pos:line="112" pos:column="16"/></operator><name pos:line="112" pos:column="13">cipher_server_pref<pos:position pos:line="112" pos:column="31"/></name></name> <operator pos:line="112" pos:column="32">==<pos:position pos:line="112" pos:column="34"/></operator> <name pos:line="112" pos:column="35">TRUE<pos:position pos:line="112" pos:column="39"/></name></expr>)<pos:position pos:line="112" pos:column="40"/></condition><then pos:line="112" pos:column="40"> <block pos:line="112" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="113" pos:column="9">SSL_CTX_set_options<pos:position pos:line="113" pos:column="28"/></name><argument_list pos:line="113" pos:column="28">(<argument><expr><name pos:line="113" pos:column="29">ctx<pos:position pos:line="113" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="34">SSL_OP_CIPHER_SERVER_PREFERENCE<pos:position pos:line="113" pos:column="65"/></name></expr></argument>)<pos:position pos:line="113" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="114" pos:column="6"/></block></then></if>
<cpp:endif pos:line="115" pos:column="1">#<cpp:directive pos:line="115" pos:column="2">endif<pos:position pos:line="115" pos:column="7"/></cpp:directive></cpp:endif>


<cpp:ifndef pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">ifndef<pos:position pos:line="118" pos:column="8"/></cpp:directive> <name pos:line="118" pos:column="9">OPENSSL_NO_COMP<pos:position pos:line="118" pos:column="24"/></name></cpp:ifndef>
    <if pos:line="119" pos:column="5">if <condition pos:line="119" pos:column="8">(<expr><name><name pos:line="119" pos:column="9">sc<pos:position pos:line="119" pos:column="11"/></name><operator pos:line="119" pos:column="11">-&gt;<pos:position pos:line="119" pos:column="16"/></operator><name pos:line="119" pos:column="13">compression<pos:position pos:line="119" pos:column="24"/></name></name> <operator pos:line="119" pos:column="25">!=<pos:position pos:line="119" pos:column="27"/></operator> <name pos:line="119" pos:column="28">TRUE<pos:position pos:line="119" pos:column="32"/></name></expr>)<pos:position pos:line="119" pos:column="33"/></condition><then pos:line="119" pos:column="33"> <block pos:line="119" pos:column="34">{
<cpp:ifdef pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">ifdef<pos:position pos:line="120" pos:column="7"/></cpp:directive> <name pos:line="120" pos:column="8">SSL_OP_NO_COMPRESSION<pos:position pos:line="120" pos:column="29"/></name></cpp:ifdef>
        <comment type="block" pos:line="121" pos:column="9">/* OpenSSL &gt;= 1.0 only */</comment>
        <expr_stmt><expr><call><name pos:line="122" pos:column="9">SSL_CTX_set_options<pos:position pos:line="122" pos:column="28"/></name><argument_list pos:line="122" pos:column="28">(<argument><expr><name pos:line="122" pos:column="29">ctx<pos:position pos:line="122" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="34">SSL_OP_NO_COMPRESSION<pos:position pos:line="122" pos:column="55"/></name></expr></argument>)<pos:position pos:line="122" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="57"/></expr_stmt>
<cpp:elif pos:line="123" pos:column="1">#<cpp:directive pos:line="123" pos:column="2">elif<pos:position pos:line="123" pos:column="6"/></cpp:directive> <expr><name pos:line="123" pos:column="7">OPENSSL_VERSION_NUMBER<pos:position pos:line="123" pos:column="29"/></name> <operator pos:line="123" pos:column="30">&gt;=<pos:position pos:line="123" pos:column="35"/></operator> <literal type="number" pos:line="123" pos:column="33">0x00908000L<pos:position pos:line="123" pos:column="44"/></literal></expr></cpp:elif>
        <expr_stmt><expr><call><name pos:line="124" pos:column="9">sk_SSL_COMP_zero<pos:position pos:line="124" pos:column="25"/></name><argument_list pos:line="124" pos:column="25">(<argument><expr><call><name pos:line="124" pos:column="26">SSL_COMP_get_compression_methods<pos:position pos:line="124" pos:column="58"/></name><argument_list pos:line="124" pos:column="58">()<pos:position pos:line="124" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="124" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="62"/></expr_stmt>
<cpp:endif pos:line="125" pos:column="1">#<cpp:directive pos:line="125" pos:column="2">endif<pos:position pos:line="125" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="126" pos:column="6"/></block></then></if>
<cpp:endif pos:line="127" pos:column="1">#<cpp:directive pos:line="127" pos:column="2">endif<pos:position pos:line="127" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">ifdef<pos:position pos:line="129" pos:column="7"/></cpp:directive> <name pos:line="129" pos:column="8">SSL_OP_NO_TICKET<pos:position pos:line="129" pos:column="24"/></name></cpp:ifdef>
    <comment type="block" pos:line="130" pos:column="5">/*
     * Configure using RFC 5077 TLS session tickets
     * for session resumption.
     */</comment>
    <if pos:line="134" pos:column="5">if <condition pos:line="134" pos:column="8">(<expr><name><name pos:line="134" pos:column="9">sc<pos:position pos:line="134" pos:column="11"/></name><operator pos:line="134" pos:column="11">-&gt;<pos:position pos:line="134" pos:column="16"/></operator><name pos:line="134" pos:column="13">session_tickets<pos:position pos:line="134" pos:column="28"/></name></name> <operator pos:line="134" pos:column="29">==<pos:position pos:line="134" pos:column="31"/></operator> <name pos:line="134" pos:column="32">FALSE<pos:position pos:line="134" pos:column="37"/></name></expr>)<pos:position pos:line="134" pos:column="38"/></condition><then pos:line="134" pos:column="38"> <block pos:line="134" pos:column="39">{
        <expr_stmt><expr><call><name pos:line="135" pos:column="9">SSL_CTX_set_options<pos:position pos:line="135" pos:column="28"/></name><argument_list pos:line="135" pos:column="28">(<argument><expr><name pos:line="135" pos:column="29">ctx<pos:position pos:line="135" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="34">SSL_OP_NO_TICKET<pos:position pos:line="135" pos:column="50"/></name></expr></argument>)<pos:position pos:line="135" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="136" pos:column="6"/></block></then></if>
<cpp:endif pos:line="137" pos:column="1">#<cpp:directive pos:line="137" pos:column="2">endif<pos:position pos:line="137" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="139" pos:column="1">#<cpp:directive pos:line="139" pos:column="2">ifdef<pos:position pos:line="139" pos:column="7"/></cpp:directive> <name pos:line="139" pos:column="8">SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION<pos:position pos:line="139" pos:column="48"/></name></cpp:ifdef>
    <if pos:line="140" pos:column="5">if <condition pos:line="140" pos:column="8">(<expr><name><name pos:line="140" pos:column="9">sc<pos:position pos:line="140" pos:column="11"/></name><operator pos:line="140" pos:column="11">-&gt;<pos:position pos:line="140" pos:column="16"/></operator><name pos:line="140" pos:column="13">insecure_reneg<pos:position pos:line="140" pos:column="27"/></name></name> <operator pos:line="140" pos:column="28">==<pos:position pos:line="140" pos:column="30"/></operator> <name pos:line="140" pos:column="31">TRUE<pos:position pos:line="140" pos:column="35"/></name></expr>)<pos:position pos:line="140" pos:column="36"/></condition><then pos:line="140" pos:column="36"> <block pos:line="140" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="141" pos:column="9">SSL_CTX_set_options<pos:position pos:line="141" pos:column="28"/></name><argument_list pos:line="141" pos:column="28">(<argument><expr><name pos:line="141" pos:column="29">ctx<pos:position pos:line="141" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="34">SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION<pos:position pos:line="141" pos:column="74"/></name></expr></argument>)<pos:position pos:line="141" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="142" pos:column="6"/></block></then></if>
<cpp:endif pos:line="143" pos:column="1">#<cpp:directive pos:line="143" pos:column="2">endif<pos:position pos:line="143" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="145" pos:column="5">SSL_CTX_set_app_data<pos:position pos:line="145" pos:column="25"/></name><argument_list pos:line="145" pos:column="25">(<argument><expr><name pos:line="145" pos:column="26">ctx<pos:position pos:line="145" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="31">s<pos:position pos:line="145" pos:column="32"/></name></expr></argument>)<pos:position pos:line="145" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="147" pos:column="5">/*
     * Configure additional context ingredients
     */</comment>
    <expr_stmt><expr><call><name pos:line="150" pos:column="5">SSL_CTX_set_options<pos:position pos:line="150" pos:column="24"/></name><argument_list pos:line="150" pos:column="24">(<argument><expr><name pos:line="150" pos:column="25">ctx<pos:position pos:line="150" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="30">SSL_OP_SINGLE_DH_USE<pos:position pos:line="150" pos:column="50"/></name></expr></argument>)<pos:position pos:line="150" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="52"/></expr_stmt>
<cpp:ifndef pos:line="151" pos:column="1">#<cpp:directive pos:line="151" pos:column="2">ifndef<pos:position pos:line="151" pos:column="8"/></cpp:directive> <name pos:line="151" pos:column="9">OPENSSL_NO_EC<pos:position pos:line="151" pos:column="22"/></name></cpp:ifndef>
    <expr_stmt><expr><call><name pos:line="152" pos:column="5">SSL_CTX_set_options<pos:position pos:line="152" pos:column="24"/></name><argument_list pos:line="152" pos:column="24">(<argument><expr><name pos:line="152" pos:column="25">ctx<pos:position pos:line="152" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="30">SSL_OP_SINGLE_ECDH_USE<pos:position pos:line="152" pos:column="52"/></name></expr></argument>)<pos:position pos:line="152" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="54"/></expr_stmt>
<cpp:endif pos:line="153" pos:column="1">#<cpp:directive pos:line="153" pos:column="2">endif<pos:position pos:line="153" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="155" pos:column="1">#<cpp:directive pos:line="155" pos:column="2">ifdef<pos:position pos:line="155" pos:column="7"/></cpp:directive> <name pos:line="155" pos:column="8">SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION<pos:position pos:line="155" pos:column="53"/></name></cpp:ifdef>
    <comment type="block" pos:line="156" pos:column="5">/*
     * Disallow a session from being resumed during a renegotiation,
     * so that an acceptable cipher suite can be negotiated.
     */</comment>
    <expr_stmt><expr><call><name pos:line="160" pos:column="5">SSL_CTX_set_options<pos:position pos:line="160" pos:column="24"/></name><argument_list pos:line="160" pos:column="24">(<argument><expr><name pos:line="160" pos:column="25">ctx<pos:position pos:line="160" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="30">SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION<pos:position pos:line="160" pos:column="75"/></name></expr></argument>)<pos:position pos:line="160" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="77"/></expr_stmt>
<cpp:endif pos:line="161" pos:column="1">#<cpp:directive pos:line="161" pos:column="2">endif<pos:position pos:line="161" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="162" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3573_httpd-2.2.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">pchars<pos:position pos:line="2" pos:column="7"/></name><parameter_list pos:line="2" pos:column="7">(<parameter><decl><type><specifier pos:line="2" pos:column="8">const<pos:position pos:line="2" pos:column="13"/></specifier> <name pos:line="2" pos:column="14">uschar<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">p<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="25">int<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">length<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">BOOL<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">is_subject<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">match_data<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">md<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
<decl_stmt><decl><type><name pos:line="4" pos:column="1">int<pos:position pos:line="4" pos:column="4"/></name></type> <name pos:line="4" pos:column="5">c<pos:position pos:line="4" pos:column="6"/></name></decl>;<pos:position pos:line="4" pos:column="7"/></decl_stmt>
<if pos:line="5" pos:column="1">if <condition pos:line="5" pos:column="4">(<expr><name pos:line="5" pos:column="5">is_subject<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">&amp;&amp;<pos:position pos:line="5" pos:column="26"/></operator> <name pos:line="5" pos:column="19">length<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">&gt;<pos:position pos:line="5" pos:column="30"/></operator> <name><name pos:line="5" pos:column="28">md<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">-&gt;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="32">end_subject<pos:position pos:line="5" pos:column="43"/></name></name> <operator pos:line="5" pos:column="44">-<pos:position pos:line="5" pos:column="45"/></operator> <name pos:line="5" pos:column="46">p<pos:position pos:line="5" pos:column="47"/></name></expr>)<pos:position pos:line="5" pos:column="48"/></condition><then pos:line="5" pos:column="48"> <block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="49">length<pos:position pos:line="5" pos:column="55"/></name> <operator pos:line="5" pos:column="56">=<pos:position pos:line="5" pos:column="57"/></operator> <name><name pos:line="5" pos:column="58">md<pos:position pos:line="5" pos:column="60"/></name><operator pos:line="5" pos:column="60">-&gt;<pos:position pos:line="5" pos:column="65"/></operator><name pos:line="5" pos:column="62">end_subject<pos:position pos:line="5" pos:column="73"/></name></name> <operator pos:line="5" pos:column="74">-<pos:position pos:line="5" pos:column="75"/></operator> <name pos:line="5" pos:column="76">p<pos:position pos:line="5" pos:column="77"/></name></expr>;<pos:position pos:line="5" pos:column="78"/></expr_stmt></block></then></if>
<while pos:line="6" pos:column="1">while <condition pos:line="6" pos:column="7">(<expr><name pos:line="6" pos:column="8">length<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">--<pos:position pos:line="6" pos:column="16"/></operator> <operator pos:line="6" pos:column="17">&gt;<pos:position pos:line="6" pos:column="21"/></operator> <literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr>)<pos:position pos:line="6" pos:column="21"/></condition>
  <block type="pseudo"><if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name pos:line="7" pos:column="7">isprint<pos:position pos:line="7" pos:column="14"/></name><argument_list pos:line="7" pos:column="14">(<argument><expr><name pos:line="7" pos:column="15">c<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <operator pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></operator><operator pos:line="7" pos:column="20">(<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">p<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">++<pos:position pos:line="7" pos:column="24"/></operator><operator pos:line="7" pos:column="24">)<pos:position pos:line="7" pos:column="25"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="28">printf<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument><expr><literal type="string" pos:line="7" pos:column="35">"%c"<pos:position pos:line="7" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="41">c<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt></block></then> <else pos:line="7" pos:column="45">else <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="50">printf<pos:position pos:line="7" pos:column="56"/></name><argument_list pos:line="7" pos:column="56">(<argument><expr><literal type="string" pos:line="7" pos:column="57">"\\x%02x"<pos:position pos:line="7" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="68">c<pos:position pos:line="7" pos:column="69"/></name></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="71"/></expr_stmt></block></else></if></block></while>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

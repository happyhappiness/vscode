<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_7316.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ssl_check_public_cert<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">server_rec<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">s<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="2" pos:column="35">apr_pool_t<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">ptemp<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">X509<pos:position pos:line="3" pos:column="39"/></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">cert<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="4" pos:column="35">int<pos:position pos:line="4" pos:column="38"/></name></type> <name pos:line="4" pos:column="39">type<pos:position pos:line="4" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="44"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">is_ca<pos:position pos:line="6" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="16">pathlen<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_array_header_t<pos:position pos:line="7" pos:column="23"/></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">ids<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">cert<pos:position pos:line="9" pos:column="14"/></name></expr>)<pos:position pos:line="9" pos:column="15"/></condition><then pos:line="9" pos:column="15"> <block pos:line="9" pos:column="16">{
        <return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="13" pos:column="5">/*
     * Some information about the certificate(s)
     */</comment>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">SSL_X509_isSGC<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">cert<pos:position pos:line="17" pos:column="28"/></name></expr></argument>)<pos:position pos:line="17" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="30"/></condition><then pos:line="17" pos:column="30"> <block pos:line="17" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">ap_log_error<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">APLOG_MARK<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">APLOG_INFO<pos:position pos:line="18" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="46">0<pos:position pos:line="18" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="49">s<pos:position pos:line="18" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="52">APLOGNO<pos:position pos:line="18" pos:column="59"/></name><argument_list pos:line="18" pos:column="59">(<argument><expr><literal type="number" pos:line="18" pos:column="60">01905<pos:position pos:line="18" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call>
                     <literal type="string" pos:line="19" pos:column="22">"%s server certificate enables "<pos:position pos:line="19" pos:column="54"/></literal>
                     <literal type="string" pos:line="20" pos:column="22">"Server Gated Cryptography (SGC)"<pos:position pos:line="20" pos:column="55"/></literal></expr></argument>,
                     <argument><expr><call><name pos:line="21" pos:column="22">ssl_asn1_keystr<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><name pos:line="21" pos:column="38">type<pos:position pos:line="21" pos:column="42"/></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><call><name pos:line="24" pos:column="9">SSL_X509_getBC<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">cert<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="30">&amp;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="31">is_ca<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="38">&amp;<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="39">pathlen<pos:position pos:line="24" pos:column="46"/></name></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="48"/></condition><then pos:line="24" pos:column="48"> <block pos:line="24" pos:column="49">{
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">is_ca<pos:position pos:line="25" pos:column="18"/></name></expr>)<pos:position pos:line="25" pos:column="19"/></condition><then pos:line="25" pos:column="19"> <block pos:line="25" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">ap_log_error<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">APLOG_MARK<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="38">APLOG_WARNING<pos:position pos:line="26" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="53">0<pos:position pos:line="26" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="56">s<pos:position pos:line="26" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="59">APLOGNO<pos:position pos:line="26" pos:column="66"/></name><argument_list pos:line="26" pos:column="66">(<argument><expr><literal type="number" pos:line="26" pos:column="67">01906<pos:position pos:line="26" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></call>
                         <literal type="string" pos:line="27" pos:column="26">"%s server certificate is a CA certificate "<pos:position pos:line="27" pos:column="70"/></literal>
                         <literal type="string" pos:line="28" pos:column="26">"(BasicConstraints: CA == TRUE !?)"<pos:position pos:line="28" pos:column="61"/></literal></expr></argument>,
                         <argument><expr><call><name pos:line="29" pos:column="26">ssl_asn1_keystr<pos:position pos:line="29" pos:column="41"/></name><argument_list pos:line="29" pos:column="41">(<argument><expr><name pos:line="29" pos:column="42">type<pos:position pos:line="29" pos:column="46"/></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>

        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">pathlen<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">&gt;<pos:position pos:line="32" pos:column="25"/></operator> <literal type="number" pos:line="32" pos:column="23">0<pos:position pos:line="32" pos:column="24"/></literal></expr>)<pos:position pos:line="32" pos:column="25"/></condition><then pos:line="32" pos:column="25"> <block pos:line="32" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">ap_log_error<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><name pos:line="33" pos:column="26">APLOG_MARK<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="38">APLOG_WARNING<pos:position pos:line="33" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="53">0<pos:position pos:line="33" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="56">s<pos:position pos:line="33" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="59">APLOGNO<pos:position pos:line="33" pos:column="66"/></name><argument_list pos:line="33" pos:column="66">(<argument><expr><literal type="number" pos:line="33" pos:column="67">01907<pos:position pos:line="33" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="73"/></argument_list></call>
                         <literal type="string" pos:line="34" pos:column="26">"%s server certificate is not a leaf certificate "<pos:position pos:line="34" pos:column="76"/></literal>
                         <literal type="string" pos:line="35" pos:column="26">"(BasicConstraints: pathlen == %d &gt; 0 !?)"<pos:position pos:line="35" pos:column="71"/></literal></expr></argument>,
                         <argument><expr><call><name pos:line="36" pos:column="26">ssl_asn1_keystr<pos:position pos:line="36" pos:column="41"/></name><argument_list pos:line="36" pos:column="41">(<argument><expr><name pos:line="36" pos:column="42">type<pos:position pos:line="36" pos:column="46"/></name></expr></argument>)<pos:position pos:line="36" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="36" pos:column="49">pathlen<pos:position pos:line="36" pos:column="56"/></name></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="40" pos:column="5">/*
     * Check if the server name is covered by the certificate.
     * Consider both dNSName entries in the subjectAltName extension
     * and, as a fallback, commonName attributes in the subject DN.
     * (DNS-IDs and CN-IDs as defined in RFC 6125).
     */</comment>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><call><name pos:line="46" pos:column="9">SSL_X509_getIDs<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><name pos:line="46" pos:column="25">ptemp<pos:position pos:line="46" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="32">cert<pos:position pos:line="46" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="38">&amp;<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="39">ids<pos:position pos:line="46" pos:column="42"/></name></expr></argument>)<pos:position pos:line="46" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="44"/></condition><then pos:line="46" pos:column="44"> <block pos:line="46" pos:column="45">{
        <decl_stmt><decl><type><name pos:line="47" pos:column="9">char<pos:position pos:line="47" pos:column="13"/></name> <modifier pos:line="47" pos:column="14">*<pos:position pos:line="47" pos:column="15"/></modifier></type><name pos:line="47" pos:column="15">cp<pos:position pos:line="47" pos:column="17"/></name></decl>;<pos:position pos:line="47" pos:column="18"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="48" pos:column="9">int<pos:position pos:line="48" pos:column="12"/></name></type> <name pos:line="48" pos:column="13">i<pos:position pos:line="48" pos:column="14"/></name></decl>;<pos:position pos:line="48" pos:column="15"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="49" pos:column="9">char<pos:position pos:line="49" pos:column="13"/></name> <modifier pos:line="49" pos:column="14">*<pos:position pos:line="49" pos:column="15"/></modifier><modifier pos:line="49" pos:column="15">*<pos:position pos:line="49" pos:column="16"/></modifier></type><name pos:line="49" pos:column="16">id<pos:position pos:line="49" pos:column="18"/></name> <init pos:line="49" pos:column="19">= <expr><operator pos:line="49" pos:column="21">(<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="22">char<pos:position pos:line="49" pos:column="26"/></name> <operator pos:line="49" pos:column="27">*<pos:position pos:line="49" pos:column="28"/></operator><operator pos:line="49" pos:column="28">*<pos:position pos:line="49" pos:column="29"/></operator><operator pos:line="49" pos:column="29">)<pos:position pos:line="49" pos:column="30"/></operator><name><name pos:line="49" pos:column="30">ids<pos:position pos:line="49" pos:column="33"/></name><operator pos:line="49" pos:column="33">-&gt;<pos:position pos:line="49" pos:column="38"/></operator><name pos:line="49" pos:column="35">elts<pos:position pos:line="49" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="49" pos:column="40"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="50" pos:column="9">BOOL<pos:position pos:line="50" pos:column="13"/></name></type> <name pos:line="50" pos:column="14">is_wildcard<pos:position pos:line="50" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="50" pos:column="27">matched<pos:position pos:line="50" pos:column="34"/></name> <init pos:line="50" pos:column="35">= <expr><name pos:line="50" pos:column="37">FALSE<pos:position pos:line="50" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="50" pos:column="43"/></decl_stmt>

        <for pos:line="52" pos:column="9">for <control pos:line="52" pos:column="13">(<init><expr><name pos:line="52" pos:column="14">i<pos:position pos:line="52" pos:column="15"/></name> <operator pos:line="52" pos:column="16">=<pos:position pos:line="52" pos:column="17"/></operator> <literal type="number" pos:line="52" pos:column="18">0<pos:position pos:line="52" pos:column="19"/></literal></expr>;<pos:position pos:line="52" pos:column="20"/></init> <condition><expr><name pos:line="52" pos:column="21">i<pos:position pos:line="52" pos:column="22"/></name> <operator pos:line="52" pos:column="23">&lt;<pos:position pos:line="52" pos:column="27"/></operator> <name><name pos:line="52" pos:column="25">ids<pos:position pos:line="52" pos:column="28"/></name><operator pos:line="52" pos:column="28">-&gt;<pos:position pos:line="52" pos:column="33"/></operator><name pos:line="52" pos:column="30">nelts<pos:position pos:line="52" pos:column="35"/></name></name></expr>;<pos:position pos:line="52" pos:column="36"/></condition> <incr><expr><name pos:line="52" pos:column="37">i<pos:position pos:line="52" pos:column="38"/></name><operator pos:line="52" pos:column="38">++<pos:position pos:line="52" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="52" pos:column="41"/></control> <block pos:line="52" pos:column="42">{
            <if pos:line="53" pos:column="13">if <condition pos:line="53" pos:column="16">(<expr><operator pos:line="53" pos:column="17">!<pos:position pos:line="53" pos:column="18"/></operator><name><name pos:line="53" pos:column="18">id<pos:position pos:line="53" pos:column="20"/></name><index pos:line="53" pos:column="20">[<expr><name pos:line="53" pos:column="21">i<pos:position pos:line="53" pos:column="22"/></name></expr>]<pos:position pos:line="53" pos:column="23"/></index></name></expr>)<pos:position pos:line="53" pos:column="24"/></condition><then pos:line="53" pos:column="24">
                <block type="pseudo"><continue pos:line="54" pos:column="17">continue;<pos:position pos:line="54" pos:column="26"/></continue></block></then></if>

            <comment type="block" pos:line="56" pos:column="13">/*
             * Determine if it is a wildcard ID - we're restrictive
             * in the sense that we require the wildcard character to be
             * THE left-most label (i.e., the ID must start with "*.")
             */</comment>
            <expr_stmt><expr><name pos:line="61" pos:column="13">is_wildcard<pos:position pos:line="61" pos:column="24"/></name> <operator pos:line="61" pos:column="25">=<pos:position pos:line="61" pos:column="26"/></operator> <ternary><condition><expr><operator pos:line="61" pos:column="27">(<pos:position pos:line="61" pos:column="28"/></operator><operator pos:line="61" pos:column="28">*<pos:position pos:line="61" pos:column="29"/></operator><name><name pos:line="61" pos:column="29">id<pos:position pos:line="61" pos:column="31"/></name><index pos:line="61" pos:column="31">[<expr><name pos:line="61" pos:column="32">i<pos:position pos:line="61" pos:column="33"/></name></expr>]<pos:position pos:line="61" pos:column="34"/></index></name> <operator pos:line="61" pos:column="35">==<pos:position pos:line="61" pos:column="37"/></operator> <literal type="char" pos:line="61" pos:column="38">'*'<pos:position pos:line="61" pos:column="41"/></literal> <operator pos:line="61" pos:column="42">&amp;&amp;<pos:position pos:line="61" pos:column="52"/></operator> <operator pos:line="61" pos:column="45">*<pos:position pos:line="61" pos:column="46"/></operator><operator pos:line="61" pos:column="46">(<pos:position pos:line="61" pos:column="47"/></operator><name><name pos:line="61" pos:column="47">id<pos:position pos:line="61" pos:column="49"/></name><index pos:line="61" pos:column="49">[<expr><name pos:line="61" pos:column="50">i<pos:position pos:line="61" pos:column="51"/></name></expr>]<pos:position pos:line="61" pos:column="52"/></index></name><operator pos:line="61" pos:column="52">+<pos:position pos:line="61" pos:column="53"/></operator><literal type="number" pos:line="61" pos:column="53">1<pos:position pos:line="61" pos:column="54"/></literal><operator pos:line="61" pos:column="54">)<pos:position pos:line="61" pos:column="55"/></operator> <operator pos:line="61" pos:column="56">==<pos:position pos:line="61" pos:column="58"/></operator> <literal type="char" pos:line="61" pos:column="59">'.'<pos:position pos:line="61" pos:column="62"/></literal><operator pos:line="61" pos:column="62">)<pos:position pos:line="61" pos:column="63"/></operator></expr> ?<pos:position pos:line="61" pos:column="65"/></condition><then pos:line="61" pos:column="65"> <expr><name pos:line="61" pos:column="66">TRUE<pos:position pos:line="61" pos:column="70"/></name></expr> <pos:position pos:line="61" pos:column="71"/></then><else pos:line="61" pos:column="71">: <expr><name pos:line="61" pos:column="73">FALSE<pos:position pos:line="61" pos:column="78"/></name></expr></else></ternary></expr>;<pos:position pos:line="61" pos:column="79"/></expr_stmt>

            <comment type="block" pos:line="63" pos:column="13">/*
             * If the ID includes a wildcard character, check if it matches
             * for the left-most DNS label (i.e., the wildcard character
             * is not allowed to match a dot). Otherwise, try a simple
             * string compare, case insensitively.
             */</comment>
            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><operator pos:line="69" pos:column="17">(<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="18">is_wildcard<pos:position pos:line="69" pos:column="29"/></name> <operator pos:line="69" pos:column="30">==<pos:position pos:line="69" pos:column="32"/></operator> <name pos:line="69" pos:column="33">TRUE<pos:position pos:line="69" pos:column="37"/></name> <operator pos:line="69" pos:column="38">&amp;&amp;<pos:position pos:line="69" pos:column="48"/></operator>
                 <operator pos:line="70" pos:column="18">(<pos:position pos:line="70" pos:column="19"/></operator><name pos:line="70" pos:column="19">cp<pos:position pos:line="70" pos:column="21"/></name> <operator pos:line="70" pos:column="22">=<pos:position pos:line="70" pos:column="23"/></operator> <call><name pos:line="70" pos:column="24">strchr<pos:position pos:line="70" pos:column="30"/></name><argument_list pos:line="70" pos:column="30">(<argument><expr><name><name pos:line="70" pos:column="31">s<pos:position pos:line="70" pos:column="32"/></name><operator pos:line="70" pos:column="32">-&gt;<pos:position pos:line="70" pos:column="37"/></operator><name pos:line="70" pos:column="34">server_hostname<pos:position pos:line="70" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="70" pos:column="51">'.'<pos:position pos:line="70" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="55"/></argument_list></call><operator pos:line="70" pos:column="55">)<pos:position pos:line="70" pos:column="56"/></operator> <operator pos:line="70" pos:column="57">&amp;&amp;<pos:position pos:line="70" pos:column="67"/></operator>
                 <operator pos:line="71" pos:column="18">!<pos:position pos:line="71" pos:column="19"/></operator><call><name pos:line="71" pos:column="19">strcasecmp<pos:position pos:line="71" pos:column="29"/></name><argument_list pos:line="71" pos:column="29">(<argument><expr><name><name pos:line="71" pos:column="30">id<pos:position pos:line="71" pos:column="32"/></name><index pos:line="71" pos:column="32">[<expr><name pos:line="71" pos:column="33">i<pos:position pos:line="71" pos:column="34"/></name></expr>]<pos:position pos:line="71" pos:column="35"/></index></name><operator pos:line="71" pos:column="35">+<pos:position pos:line="71" pos:column="36"/></operator><literal type="number" pos:line="71" pos:column="36">1<pos:position pos:line="71" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="39">cp<pos:position pos:line="71" pos:column="41"/></name></expr></argument>)<pos:position pos:line="71" pos:column="42"/></argument_list></call><operator pos:line="71" pos:column="42">)<pos:position pos:line="71" pos:column="43"/></operator> <operator pos:line="71" pos:column="44">||<pos:position pos:line="71" pos:column="46"/></operator>
                <operator pos:line="72" pos:column="17">!<pos:position pos:line="72" pos:column="18"/></operator><call><name pos:line="72" pos:column="18">strcasecmp<pos:position pos:line="72" pos:column="28"/></name><argument_list pos:line="72" pos:column="28">(<argument><expr><name><name pos:line="72" pos:column="29">id<pos:position pos:line="72" pos:column="31"/></name><index pos:line="72" pos:column="31">[<expr><name pos:line="72" pos:column="32">i<pos:position pos:line="72" pos:column="33"/></name></expr>]<pos:position pos:line="72" pos:column="34"/></index></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="36">s<pos:position pos:line="72" pos:column="37"/></name><operator pos:line="72" pos:column="37">-&gt;<pos:position pos:line="72" pos:column="42"/></operator><name pos:line="72" pos:column="39">server_hostname<pos:position pos:line="72" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="56"/></condition><then pos:line="72" pos:column="56"> <block pos:line="72" pos:column="57">{
                <expr_stmt><expr><name pos:line="73" pos:column="17">matched<pos:position pos:line="73" pos:column="24"/></name> <operator pos:line="73" pos:column="25">=<pos:position pos:line="73" pos:column="26"/></operator> <name pos:line="73" pos:column="27">TRUE<pos:position pos:line="73" pos:column="31"/></name></expr>;<pos:position pos:line="73" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="74" pos:column="17">ap_log_error<pos:position pos:line="74" pos:column="29"/></name><argument_list pos:line="74" pos:column="29">(<argument><expr><name pos:line="74" pos:column="30">APLOG_MARK<pos:position pos:line="74" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="42">APLOG_DEBUG<pos:position pos:line="74" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="55">0<pos:position pos:line="74" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="58">s<pos:position pos:line="74" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="74" pos:column="61">APLOGNO<pos:position pos:line="74" pos:column="68"/></name><argument_list pos:line="74" pos:column="68">(<argument><expr><literal type="number" pos:line="74" pos:column="69">01908<pos:position pos:line="74" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="75"/></argument_list></call>
                             <literal type="string" pos:line="75" pos:column="30">"%sID '%s' in %s certificate configured "<pos:position pos:line="75" pos:column="71"/></literal>
                             <literal type="string" pos:line="76" pos:column="30">"for %s matches server name"<pos:position pos:line="76" pos:column="58"/></literal></expr></argument>,
                             <argument><expr><ternary><condition><expr><name pos:line="77" pos:column="30">is_wildcard<pos:position pos:line="77" pos:column="41"/></name></expr> ?<pos:position pos:line="77" pos:column="43"/></condition><then pos:line="77" pos:column="43"> <expr><literal type="string" pos:line="77" pos:column="44">"Wildcard "<pos:position pos:line="77" pos:column="55"/></literal></expr> <pos:position pos:line="77" pos:column="56"/></then><else pos:line="77" pos:column="56">: <expr><literal type="string" pos:line="77" pos:column="58">""<pos:position pos:line="77" pos:column="60"/></literal></expr></else></ternary></expr></argument>,
                             <argument><expr><name><name pos:line="78" pos:column="30">id<pos:position pos:line="78" pos:column="32"/></name><index pos:line="78" pos:column="32">[<expr><name pos:line="78" pos:column="33">i<pos:position pos:line="78" pos:column="34"/></name></expr>]<pos:position pos:line="78" pos:column="35"/></index></name></expr></argument>, <argument><expr><call><name pos:line="78" pos:column="37">ssl_asn1_keystr<pos:position pos:line="78" pos:column="52"/></name><argument_list pos:line="78" pos:column="52">(<argument><expr><name pos:line="78" pos:column="53">type<pos:position pos:line="78" pos:column="57"/></name></expr></argument>)<pos:position pos:line="78" pos:column="58"/></argument_list></call></expr></argument>,
                             <argument><expr><operator pos:line="79" pos:column="30">(<pos:position pos:line="79" pos:column="31"/></operator><call><name pos:line="79" pos:column="31">mySrvConfig<pos:position pos:line="79" pos:column="42"/></name><argument_list pos:line="79" pos:column="42">(<argument><expr><name pos:line="79" pos:column="43">s<pos:position pos:line="79" pos:column="44"/></name></expr></argument>)<pos:position pos:line="79" pos:column="45"/></argument_list></call><operator pos:line="79" pos:column="45">)<pos:position pos:line="79" pos:column="46"/></operator><operator pos:line="79" pos:column="46">-&gt;<pos:position pos:line="79" pos:column="51"/></operator><name pos:line="79" pos:column="48">vhost_id<pos:position pos:line="79" pos:column="56"/></name></expr></argument>)<pos:position pos:line="79" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="58"/></expr_stmt>
                <break pos:line="80" pos:column="17">break;<pos:position pos:line="80" pos:column="23"/></break>
            }<pos:position pos:line="81" pos:column="14"/></block></then></if>
        }<pos:position pos:line="82" pos:column="10"/></block></for>

        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><name pos:line="84" pos:column="13">matched<pos:position pos:line="84" pos:column="20"/></name> <operator pos:line="84" pos:column="21">==<pos:position pos:line="84" pos:column="23"/></operator> <name pos:line="84" pos:column="24">FALSE<pos:position pos:line="84" pos:column="29"/></name></expr>)<pos:position pos:line="84" pos:column="30"/></condition><then pos:line="84" pos:column="30"> <block pos:line="84" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">ap_log_error<pos:position pos:line="85" pos:column="25"/></name><argument_list pos:line="85" pos:column="25">(<argument><expr><name pos:line="85" pos:column="26">APLOG_MARK<pos:position pos:line="85" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="38">APLOG_WARNING<pos:position pos:line="85" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="53">0<pos:position pos:line="85" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="56">s<pos:position pos:line="85" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="85" pos:column="59">APLOGNO<pos:position pos:line="85" pos:column="66"/></name><argument_list pos:line="85" pos:column="66">(<argument><expr><literal type="number" pos:line="85" pos:column="67">01909<pos:position pos:line="85" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="73"/></argument_list></call>
                         <literal type="string" pos:line="86" pos:column="26">"%s certificate configured for %s does NOT include "<pos:position pos:line="86" pos:column="78"/></literal>
                         <literal type="string" pos:line="87" pos:column="26">"an ID which matches the server name"<pos:position pos:line="87" pos:column="63"/></literal></expr></argument>,
                         <argument><expr><call><name pos:line="88" pos:column="26">ssl_asn1_keystr<pos:position pos:line="88" pos:column="41"/></name><argument_list pos:line="88" pos:column="41">(<argument><expr><name pos:line="88" pos:column="42">type<pos:position pos:line="88" pos:column="46"/></name></expr></argument>)<pos:position pos:line="88" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="88" pos:column="49">(<pos:position pos:line="88" pos:column="50"/></operator><call><name pos:line="88" pos:column="50">mySrvConfig<pos:position pos:line="88" pos:column="61"/></name><argument_list pos:line="88" pos:column="61">(<argument><expr><name pos:line="88" pos:column="62">s<pos:position pos:line="88" pos:column="63"/></name></expr></argument>)<pos:position pos:line="88" pos:column="64"/></argument_list></call><operator pos:line="88" pos:column="64">)<pos:position pos:line="88" pos:column="65"/></operator><operator pos:line="88" pos:column="65">-&gt;<pos:position pos:line="88" pos:column="70"/></operator><name pos:line="88" pos:column="67">vhost_id<pos:position pos:line="88" pos:column="75"/></name></expr></argument>)<pos:position pos:line="88" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="77"/></expr_stmt>
        }<pos:position pos:line="89" pos:column="10"/></block></then></if>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

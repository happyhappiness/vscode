<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_594.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">ap_cgi_build_command<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier><modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">cmd<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier><modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier><modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">argv<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="2" pos:column="42">request_rec<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">r<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">apr_pool_t<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type><name pos:line="2" pos:column="70">p<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="3" pos:column="42">cgi_exec_info_t<pos:position pos:line="3" pos:column="57"/></name> <modifier pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></modifier></type><name pos:line="3" pos:column="59">e_info<pos:position pos:line="3" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="66"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">apr_array_header_t<pos:position pos:line="5" pos:column="29"/></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">elts_arr<pos:position pos:line="5" pos:column="39"/></name> <init pos:line="5" pos:column="40">= <expr><call><name pos:line="5" pos:column="42">apr_table_elts<pos:position pos:line="5" pos:column="56"/></name><argument_list pos:line="5" pos:column="56">(<argument><expr><name><name pos:line="5" pos:column="57">r<pos:position pos:line="5" pos:column="58"/></name><operator pos:line="5" pos:column="58">-&gt;<pos:position pos:line="5" pos:column="63"/></operator><name pos:line="5" pos:column="60">subprocess_env<pos:position pos:line="5" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="76"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">apr_table_entry_t<pos:position pos:line="6" pos:column="28"/></name> <modifier pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></modifier></type><name pos:line="6" pos:column="30">elts<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><operator pos:line="6" pos:column="37">(<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="38">apr_table_entry_t<pos:position pos:line="6" pos:column="55"/></name> <operator pos:line="6" pos:column="56">*<pos:position pos:line="6" pos:column="57"/></operator><operator pos:line="6" pos:column="57">)<pos:position pos:line="6" pos:column="58"/></operator> <name><name pos:line="6" pos:column="59">elts_arr<pos:position pos:line="6" pos:column="67"/></name><operator pos:line="6" pos:column="67">-&gt;<pos:position pos:line="6" pos:column="72"/></operator><name pos:line="6" pos:column="69">elts<pos:position pos:line="6" pos:column="73"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="74"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">ext<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">NULL<pos:position pos:line="7" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">interpreter<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><name pos:line="8" pos:column="31">NULL<pos:position pos:line="8" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">win32_dir_conf<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">d<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_file_t<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">fh<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">args<pos:position pos:line="11" pos:column="21"/></name> <init pos:line="11" pos:column="22">= <expr><literal type="string" pos:line="11" pos:column="24">""<pos:position pos:line="11" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">i<pos:position pos:line="12" pos:column="10"/></name></decl>;<pos:position pos:line="12" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="14" pos:column="5">d<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">win32_dir_conf<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">*<pos:position pos:line="14" pos:column="26"/></operator><operator pos:line="14" pos:column="26">)<pos:position pos:line="14" pos:column="27"/></operator><call><name pos:line="14" pos:column="27">ap_get_module_config<pos:position pos:line="14" pos:column="47"/></name><argument_list pos:line="14" pos:column="47">(<argument><expr><name><name pos:line="14" pos:column="48">r<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">-&gt;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="51">per_dir_config<pos:position pos:line="14" pos:column="65"/></name></name></expr></argument>,
                                               <argument><expr><operator pos:line="15" pos:column="48">&amp;<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="49">win32_module<pos:position pos:line="15" pos:column="61"/></name></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">e_info<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">-&gt;<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="17">cmd_type<pos:position pos:line="17" pos:column="25"/></name></name></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26"> <block pos:line="17" pos:column="27">{
        <comment type="block" pos:line="18" pos:column="9">/* We have to consider that the client gets any QUERY_ARGS
         * without any charset interpretation, use prep_string to
         * create a string of the literal QUERY_ARGS bytes.
         */</comment>
        <expr_stmt><expr><operator pos:line="22" pos:column="9">*<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">cmd<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <name><name pos:line="22" pos:column="16">r<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">filename<pos:position pos:line="22" pos:column="27"/></name></name></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">r<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">args<pos:position pos:line="23" pos:column="20"/></name></name> <operator pos:line="23" pos:column="21">&amp;&amp;<pos:position pos:line="23" pos:column="31"/></operator> <name><name pos:line="23" pos:column="24">r<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">-&gt;<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="27">args<pos:position pos:line="23" pos:column="31"/></name><index pos:line="23" pos:column="31">[<expr><literal type="number" pos:line="23" pos:column="32">0<pos:position pos:line="23" pos:column="33"/></literal></expr>]<pos:position pos:line="23" pos:column="34"/></index></name> <operator pos:line="23" pos:column="35">&amp;&amp;<pos:position pos:line="23" pos:column="45"/></operator> <operator pos:line="23" pos:column="38">!<pos:position pos:line="23" pos:column="39"/></operator><call><name pos:line="23" pos:column="39">ap_strchr_c<pos:position pos:line="23" pos:column="50"/></name><argument_list pos:line="23" pos:column="50">(<argument><expr><name><name pos:line="23" pos:column="51">r<pos:position pos:line="23" pos:column="52"/></name><operator pos:line="23" pos:column="52">-&gt;<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="54">args<pos:position pos:line="23" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="60">'='<pos:position pos:line="23" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="65"/></condition><then pos:line="23" pos:column="65"> <block pos:line="23" pos:column="66">{
            <expr_stmt><expr><name pos:line="24" pos:column="13">args<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <name><name pos:line="24" pos:column="20">r<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">args<pos:position pos:line="24" pos:column="27"/></name></name></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="27" pos:column="5">/* Handle the complete file name, we DON'T want to follow suexec, since
     * an unrooted command is as predictable as shooting craps in Win32.
     * Notice that unlike most mime extension parsing, we have to use the
     * win32 parsing here, therefore the final extension is the only one
     * we will consider.
     */</comment>
    <expr_stmt><expr><name pos:line="33" pos:column="5">ext<pos:position pos:line="33" pos:column="8"/></name> <operator pos:line="33" pos:column="9">=<pos:position pos:line="33" pos:column="10"/></operator> <call><name pos:line="33" pos:column="11">strrchr<pos:position pos:line="33" pos:column="18"/></name><argument_list pos:line="33" pos:column="18">(<argument><expr><call><name pos:line="33" pos:column="19">apr_filepath_name_get<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">(<argument><expr><operator pos:line="33" pos:column="41">*<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="42">cmd<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="33" pos:column="48">'.'<pos:position pos:line="33" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* If the file has an extension and it is not .com and not .exe and
     * we've been instructed to search the registry, then do so.
     * Let apr_proc_create do all of the .bat/.cmd dirty work.
     */</comment>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">ext<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">&amp;&amp;<pos:position pos:line="39" pos:column="23"/></operator> <operator pos:line="39" pos:column="16">(<pos:position pos:line="39" pos:column="17"/></operator><operator pos:line="39" pos:column="17">!<pos:position pos:line="39" pos:column="18"/></operator><call><name pos:line="39" pos:column="18">strcasecmp<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><name pos:line="39" pos:column="29">ext<pos:position pos:line="39" pos:column="32"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="39" pos:column="33">".exe"<pos:position pos:line="39" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></call> <operator pos:line="39" pos:column="41">||<pos:position pos:line="39" pos:column="43"/></operator> <operator pos:line="39" pos:column="44">!<pos:position pos:line="39" pos:column="45"/></operator><call><name pos:line="39" pos:column="45">strcasecmp<pos:position pos:line="39" pos:column="55"/></name><argument_list pos:line="39" pos:column="55">(<argument><expr><name pos:line="39" pos:column="56">ext<pos:position pos:line="39" pos:column="59"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="39" pos:column="60">".com"<pos:position pos:line="39" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="67"/></argument_list></call>
                <operator pos:line="40" pos:column="17">||<pos:position pos:line="40" pos:column="19"/></operator> <operator pos:line="40" pos:column="20">!<pos:position pos:line="40" pos:column="21"/></operator><call><name pos:line="40" pos:column="21">strcasecmp<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">ext<pos:position pos:line="40" pos:column="35"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="40" pos:column="36">".bat"<pos:position pos:line="40" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call> <operator pos:line="40" pos:column="44">||<pos:position pos:line="40" pos:column="46"/></operator> <operator pos:line="40" pos:column="47">!<pos:position pos:line="40" pos:column="48"/></operator><call><name pos:line="40" pos:column="48">strcasecmp<pos:position pos:line="40" pos:column="58"/></name><argument_list pos:line="40" pos:column="58">(<argument><expr><name pos:line="40" pos:column="59">ext<pos:position pos:line="40" pos:column="62"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="40" pos:column="63">".cmd"<pos:position pos:line="40" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="70"/></argument_list></call><operator pos:line="40" pos:column="70">)<pos:position pos:line="40" pos:column="71"/></operator></expr>)<pos:position pos:line="40" pos:column="72"/></condition><then pos:line="40" pos:column="72"> <block pos:line="40" pos:column="73">{
        <expr_stmt><expr><name pos:line="41" pos:column="9">interpreter<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <literal type="string" pos:line="41" pos:column="23">""<pos:position pos:line="41" pos:column="25"/></literal></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><operator pos:line="43" pos:column="9">!<pos:position pos:line="43" pos:column="10"/></operator><name pos:line="43" pos:column="10">interpreter<pos:position pos:line="43" pos:column="21"/></name> <operator pos:line="43" pos:column="22">&amp;&amp;<pos:position pos:line="43" pos:column="32"/></operator> <name pos:line="43" pos:column="25">ext<pos:position pos:line="43" pos:column="28"/></name>
          <operator pos:line="44" pos:column="11">&amp;&amp;<pos:position pos:line="44" pos:column="21"/></operator> <operator pos:line="44" pos:column="14">(<pos:position pos:line="44" pos:column="15"/></operator><name><name pos:line="44" pos:column="15">d<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">script_interpreter_source<pos:position pos:line="44" pos:column="43"/></name></name>
                     <operator pos:line="45" pos:column="22">==<pos:position pos:line="45" pos:column="24"/></operator> <name pos:line="45" pos:column="25">INTERPRETER_SOURCE_REGISTRY<pos:position pos:line="45" pos:column="52"/></name>
           <operator pos:line="46" pos:column="12">||<pos:position pos:line="46" pos:column="14"/></operator> <name><name pos:line="46" pos:column="15">d<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">script_interpreter_source<pos:position pos:line="46" pos:column="43"/></name></name>
                     <operator pos:line="47" pos:column="22">==<pos:position pos:line="47" pos:column="24"/></operator> <name pos:line="47" pos:column="25">INTERPRETER_SOURCE_REGISTRY_STRICT<pos:position pos:line="47" pos:column="59"/></name><operator pos:line="47" pos:column="59">)<pos:position pos:line="47" pos:column="60"/></operator></expr>)<pos:position pos:line="47" pos:column="61"/></condition><then pos:line="47" pos:column="61"> <block pos:line="47" pos:column="62">{
         <comment type="block" pos:line="48" pos:column="10">/* Check the registry */</comment>
        <decl_stmt><decl><type><name pos:line="49" pos:column="9">int<pos:position pos:line="49" pos:column="12"/></name></type> <name pos:line="49" pos:column="13">strict<pos:position pos:line="49" pos:column="19"/></name> <init pos:line="49" pos:column="20">= <expr><operator pos:line="49" pos:column="22">(<pos:position pos:line="49" pos:column="23"/></operator><name><name pos:line="49" pos:column="23">d<pos:position pos:line="49" pos:column="24"/></name><operator pos:line="49" pos:column="24">-&gt;<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="26">script_interpreter_source<pos:position pos:line="49" pos:column="51"/></name></name>
                      <operator pos:line="50" pos:column="23">==<pos:position pos:line="50" pos:column="25"/></operator> <name pos:line="50" pos:column="26">INTERPRETER_SOURCE_REGISTRY_STRICT<pos:position pos:line="50" pos:column="60"/></name><operator pos:line="50" pos:column="60">)<pos:position pos:line="50" pos:column="61"/></operator></expr></init></decl>;<pos:position pos:line="50" pos:column="62"/></decl_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">interpreter<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">=<pos:position pos:line="51" pos:column="22"/></operator> <call><name pos:line="51" pos:column="23">get_interpreter_from_win32_registry<pos:position pos:line="51" pos:column="58"/></name><argument_list pos:line="51" pos:column="58">(<argument><expr><name><name pos:line="51" pos:column="59">r<pos:position pos:line="51" pos:column="60"/></name><operator pos:line="51" pos:column="60">-&gt;<pos:position pos:line="51" pos:column="65"/></operator><name pos:line="51" pos:column="62">pool<pos:position pos:line="51" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="68">ext<pos:position pos:line="51" pos:column="71"/></name></expr></argument>,
                                                          <argument><expr><name pos:line="52" pos:column="59">strict<pos:position pos:line="52" pos:column="65"/></name></expr></argument>)<pos:position pos:line="52" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="67"/></expr_stmt>
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">interpreter<pos:position pos:line="53" pos:column="24"/></name> <operator pos:line="53" pos:column="25">&amp;&amp;<pos:position pos:line="53" pos:column="35"/></operator> <name><name pos:line="53" pos:column="28">e_info<pos:position pos:line="53" pos:column="34"/></name><operator pos:line="53" pos:column="34">-&gt;<pos:position pos:line="53" pos:column="39"/></operator><name pos:line="53" pos:column="36">cmd_type<pos:position pos:line="53" pos:column="44"/></name></name> <operator pos:line="53" pos:column="45">!=<pos:position pos:line="53" pos:column="47"/></operator> <name pos:line="53" pos:column="48">APR_SHELLCMD<pos:position pos:line="53" pos:column="60"/></name></expr>)<pos:position pos:line="53" pos:column="61"/></condition><then pos:line="53" pos:column="61"> <block pos:line="53" pos:column="62">{
            <expr_stmt><expr><name><name pos:line="54" pos:column="13">e_info<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">-&gt;<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="21">cmd_type<pos:position pos:line="54" pos:column="29"/></name></name> <operator pos:line="54" pos:column="30">=<pos:position pos:line="54" pos:column="31"/></operator> <name pos:line="54" pos:column="32">APR_PROGRAM_PATH<pos:position pos:line="54" pos:column="48"/></name></expr>;<pos:position pos:line="54" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></then>
        <else pos:line="56" pos:column="9">else <block pos:line="56" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">ap_log_error<pos:position pos:line="57" pos:column="25"/></name><argument_list pos:line="57" pos:column="25">(<argument><expr><name pos:line="57" pos:column="26">APLOG_MARK<pos:position pos:line="57" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="38">APLOG_INFO<pos:position pos:line="57" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="50">0<pos:position pos:line="57" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="53">r<pos:position pos:line="57" pos:column="54"/></name><operator pos:line="57" pos:column="54">-&gt;<pos:position pos:line="57" pos:column="59"/></operator><name pos:line="57" pos:column="56">server<pos:position pos:line="57" pos:column="62"/></name></name></expr></argument>,
                 <argument><expr><ternary><condition><expr><name pos:line="58" pos:column="18">strict<pos:position pos:line="58" pos:column="24"/></name></expr> ?<pos:position pos:line="58" pos:column="26"/></condition><then pos:line="58" pos:column="26"> <expr><literal type="string" pos:line="58" pos:column="27">"No ExecCGI verb found for files of type '%s'."<pos:position pos:line="58" pos:column="74"/></literal></expr>
                        <pos:position pos:line="59" pos:column="25"/></then><else pos:line="59" pos:column="25">: <expr><literal type="string" pos:line="59" pos:column="27">"No ExecCGI or Open verb found for files of type '%s'."<pos:position pos:line="59" pos:column="82"/></literal></expr></else></ternary></expr></argument>,
                 <argument><expr><name pos:line="60" pos:column="18">ext<pos:position pos:line="60" pos:column="21"/></name></expr></argument>)<pos:position pos:line="60" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></else></if>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><operator pos:line="63" pos:column="9">!<pos:position pos:line="63" pos:column="10"/></operator><name pos:line="63" pos:column="10">interpreter<pos:position pos:line="63" pos:column="21"/></name></expr>)<pos:position pos:line="63" pos:column="22"/></condition><then pos:line="63" pos:column="22"> <block pos:line="63" pos:column="23">{
        <decl_stmt><decl><type><name pos:line="64" pos:column="9">apr_status_t<pos:position pos:line="64" pos:column="21"/></name></type> <name pos:line="64" pos:column="22">rv<pos:position pos:line="64" pos:column="24"/></name></decl>;<pos:position pos:line="64" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="65" pos:column="9">char<pos:position pos:line="65" pos:column="13"/></name></type> <name><name pos:line="65" pos:column="14">buffer<pos:position pos:line="65" pos:column="20"/></name><index pos:line="65" pos:column="20">[<expr><literal type="number" pos:line="65" pos:column="21">1024<pos:position pos:line="65" pos:column="25"/></literal></expr>]<pos:position pos:line="65" pos:column="26"/></index></name></decl>;<pos:position pos:line="65" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="66" pos:column="9">apr_size_t<pos:position pos:line="66" pos:column="19"/></name></type> <name pos:line="66" pos:column="20">bytes<pos:position pos:line="66" pos:column="25"/></name> <init pos:line="66" pos:column="26">= <expr><sizeof pos:line="66" pos:column="28">sizeof<argument_list pos:line="66" pos:column="34">(<argument><expr><name pos:line="66" pos:column="35">buffer<pos:position pos:line="66" pos:column="41"/></name></expr></argument>)<pos:position pos:line="66" pos:column="42"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="66" pos:column="43"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="67" pos:column="9">apr_size_t<pos:position pos:line="67" pos:column="19"/></name></type> <name pos:line="67" pos:column="20">i<pos:position pos:line="67" pos:column="21"/></name></decl>;<pos:position pos:line="67" pos:column="22"/></decl_stmt>

        <comment type="block" pos:line="69" pos:column="9">/* Need to peek into the file figure out what it really is...
         * ### aught to go back and build a cache for this one of these days.
         */</comment>
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><operator pos:line="72" pos:column="13">(<pos:position pos:line="72" pos:column="14"/></operator><name pos:line="72" pos:column="14">rv<pos:position pos:line="72" pos:column="16"/></name> <operator pos:line="72" pos:column="17">=<pos:position pos:line="72" pos:column="18"/></operator> <call><name pos:line="72" pos:column="19">apr_file_open<pos:position pos:line="72" pos:column="32"/></name><argument_list pos:line="72" pos:column="32">(<argument><expr><operator pos:line="72" pos:column="33">&amp;<pos:position pos:line="72" pos:column="38"/></operator><name pos:line="72" pos:column="34">fh<pos:position pos:line="72" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="38">*<pos:position pos:line="72" pos:column="39"/></operator><name pos:line="72" pos:column="39">cmd<pos:position pos:line="72" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="44">APR_READ<pos:position pos:line="72" pos:column="52"/></name> <operator pos:line="72" pos:column="53">|<pos:position pos:line="72" pos:column="54"/></operator> <name pos:line="72" pos:column="55">APR_BUFFERED<pos:position pos:line="72" pos:column="67"/></name></expr></argument>,
                                 <argument><expr><name pos:line="73" pos:column="34">APR_OS_DEFAULT<pos:position pos:line="73" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="50">r<pos:position pos:line="73" pos:column="51"/></name><operator pos:line="73" pos:column="51">-&gt;<pos:position pos:line="73" pos:column="56"/></operator><name pos:line="73" pos:column="53">pool<pos:position pos:line="73" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="58"/></argument_list></call><operator pos:line="73" pos:column="58">)<pos:position pos:line="73" pos:column="59"/></operator> <operator pos:line="73" pos:column="60">!=<pos:position pos:line="73" pos:column="62"/></operator> <name pos:line="73" pos:column="63">APR_SUCCESS<pos:position pos:line="73" pos:column="74"/></name></expr>)<pos:position pos:line="73" pos:column="75"/></condition><then pos:line="73" pos:column="75"> <block pos:line="73" pos:column="76">{
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">ap_log_rerror<pos:position pos:line="74" pos:column="26"/></name><argument_list pos:line="74" pos:column="26">(<argument><expr><name pos:line="74" pos:column="27">APLOG_MARK<pos:position pos:line="74" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="39">APLOG_ERR<pos:position pos:line="74" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="50">rv<pos:position pos:line="74" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="54">r<pos:position pos:line="74" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="75" pos:column="27">"Failed to open cgi file %s for testing"<pos:position pos:line="75" pos:column="67"/></literal></expr></argument>, <argument><expr><operator pos:line="75" pos:column="69">*<pos:position pos:line="75" pos:column="70"/></operator><name pos:line="75" pos:column="70">cmd<pos:position pos:line="75" pos:column="73"/></name></expr></argument>)<pos:position pos:line="75" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="75"/></expr_stmt>
            <return pos:line="76" pos:column="13">return <expr><name pos:line="76" pos:column="20">rv<pos:position pos:line="76" pos:column="22"/></name></expr>;<pos:position pos:line="76" pos:column="23"/></return>
        }<pos:position pos:line="77" pos:column="10"/></block></then></if>
        <if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><operator pos:line="78" pos:column="13">(<pos:position pos:line="78" pos:column="14"/></operator><name pos:line="78" pos:column="14">rv<pos:position pos:line="78" pos:column="16"/></name> <operator pos:line="78" pos:column="17">=<pos:position pos:line="78" pos:column="18"/></operator> <call><name pos:line="78" pos:column="19">apr_file_read<pos:position pos:line="78" pos:column="32"/></name><argument_list pos:line="78" pos:column="32">(<argument><expr><name pos:line="78" pos:column="33">fh<pos:position pos:line="78" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="37">buffer<pos:position pos:line="78" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="45">&amp;<pos:position pos:line="78" pos:column="50"/></operator><name pos:line="78" pos:column="46">bytes<pos:position pos:line="78" pos:column="51"/></name></expr></argument>)<pos:position pos:line="78" pos:column="52"/></argument_list></call><operator pos:line="78" pos:column="52">)<pos:position pos:line="78" pos:column="53"/></operator> <operator pos:line="78" pos:column="54">!=<pos:position pos:line="78" pos:column="56"/></operator> <name pos:line="78" pos:column="57">APR_SUCCESS<pos:position pos:line="78" pos:column="68"/></name></expr>)<pos:position pos:line="78" pos:column="69"/></condition><then pos:line="78" pos:column="69"> <block pos:line="78" pos:column="70">{
            <expr_stmt><expr><call><name pos:line="79" pos:column="13">ap_log_rerror<pos:position pos:line="79" pos:column="26"/></name><argument_list pos:line="79" pos:column="26">(<argument><expr><name pos:line="79" pos:column="27">APLOG_MARK<pos:position pos:line="79" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="39">APLOG_ERR<pos:position pos:line="79" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="50">rv<pos:position pos:line="79" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="54">r<pos:position pos:line="79" pos:column="55"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="80" pos:column="27">"Failed to read cgi file %s for testing"<pos:position pos:line="80" pos:column="67"/></literal></expr></argument>, <argument><expr><operator pos:line="80" pos:column="69">*<pos:position pos:line="80" pos:column="70"/></operator><name pos:line="80" pos:column="70">cmd<pos:position pos:line="80" pos:column="73"/></name></expr></argument>)<pos:position pos:line="80" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="75"/></expr_stmt>
            <return pos:line="81" pos:column="13">return <expr><name pos:line="81" pos:column="20">rv<pos:position pos:line="81" pos:column="22"/></name></expr>;<pos:position pos:line="81" pos:column="23"/></return>
        }<pos:position pos:line="82" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">apr_file_close<pos:position pos:line="83" pos:column="23"/></name><argument_list pos:line="83" pos:column="23">(<argument><expr><name pos:line="83" pos:column="24">fh<pos:position pos:line="83" pos:column="26"/></name></expr></argument>)<pos:position pos:line="83" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="28"/></expr_stmt>

        <comment type="block" pos:line="85" pos:column="9">/* Some twisted character [no pun intended] at MS decided that a
         * zero width joiner as the lead wide character would be ideal for
         * describing Unicode text files.  This was further convoluted to
         * another MSism that the same character mapped into utf-8, EF BB BF
         * would signify utf-8 text files.
         *
         * Since MS configuration files are all protecting utf-8 encoded
         * Unicode path, file and resource names, we already have the correct
         * WinNT encoding.  But at least eat the stupid three bytes up front.
         *
         * ### A more thorough check would also allow UNICODE text in buf, and
         * convert it to UTF-8 for invoking unicode scripts.  Those are few
         * and far between, so leave that code an enterprising soul with a need.
         */</comment>
        <if pos:line="99" pos:column="9">if <condition pos:line="99" pos:column="12">(<expr><operator pos:line="99" pos:column="13">(<pos:position pos:line="99" pos:column="14"/></operator><name pos:line="99" pos:column="14">bytes<pos:position pos:line="99" pos:column="19"/></name> <operator pos:line="99" pos:column="20">&gt;=<pos:position pos:line="99" pos:column="25"/></operator> <literal type="number" pos:line="99" pos:column="23">3<pos:position pos:line="99" pos:column="24"/></literal><operator pos:line="99" pos:column="24">)<pos:position pos:line="99" pos:column="25"/></operator> <operator pos:line="99" pos:column="26">&amp;&amp;<pos:position pos:line="99" pos:column="36"/></operator> <call><name pos:line="99" pos:column="29">memcmp<pos:position pos:line="99" pos:column="35"/></name><argument_list pos:line="99" pos:column="35">(<argument><expr><name pos:line="99" pos:column="36">buffer<pos:position pos:line="99" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="44">"\xEF\xBB\xBF"<pos:position pos:line="99" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="99" pos:column="60">3<pos:position pos:line="99" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="62"/></argument_list></call> <operator pos:line="99" pos:column="63">==<pos:position pos:line="99" pos:column="65"/></operator> <literal type="number" pos:line="99" pos:column="66">0<pos:position pos:line="99" pos:column="67"/></literal></expr>)<pos:position pos:line="99" pos:column="68"/></condition><then pos:line="99" pos:column="68"> <block pos:line="99" pos:column="69">{
            <expr_stmt><expr><call><name pos:line="100" pos:column="13">memmove<pos:position pos:line="100" pos:column="20"/></name><argument_list pos:line="100" pos:column="20">(<argument><expr><name pos:line="100" pos:column="21">buffer<pos:position pos:line="100" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="29">buffer<pos:position pos:line="100" pos:column="35"/></name> <operator pos:line="100" pos:column="36">+<pos:position pos:line="100" pos:column="37"/></operator> <literal type="number" pos:line="100" pos:column="38">3<pos:position pos:line="100" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="41">bytes<pos:position pos:line="100" pos:column="46"/></name> <operator pos:line="100" pos:column="47">-=<pos:position pos:line="100" pos:column="49"/></operator> <literal type="number" pos:line="100" pos:column="50">3<pos:position pos:line="100" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="101" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="103" pos:column="9">/* Script or executable, that is the question... */</comment>
        <if pos:line="104" pos:column="9">if <condition pos:line="104" pos:column="12">(<expr><operator pos:line="104" pos:column="13">(<pos:position pos:line="104" pos:column="14"/></operator><name pos:line="104" pos:column="14">bytes<pos:position pos:line="104" pos:column="19"/></name> <operator pos:line="104" pos:column="20">&gt;=<pos:position pos:line="104" pos:column="25"/></operator> <literal type="number" pos:line="104" pos:column="23">2<pos:position pos:line="104" pos:column="24"/></literal><operator pos:line="104" pos:column="24">)<pos:position pos:line="104" pos:column="25"/></operator> <operator pos:line="104" pos:column="26">&amp;&amp;<pos:position pos:line="104" pos:column="36"/></operator> <operator pos:line="104" pos:column="29">(<pos:position pos:line="104" pos:column="30"/></operator><name><name pos:line="104" pos:column="30">buffer<pos:position pos:line="104" pos:column="36"/></name><index pos:line="104" pos:column="36">[<expr><literal type="number" pos:line="104" pos:column="37">0<pos:position pos:line="104" pos:column="38"/></literal></expr>]<pos:position pos:line="104" pos:column="39"/></index></name> <operator pos:line="104" pos:column="40">==<pos:position pos:line="104" pos:column="42"/></operator> <literal type="char" pos:line="104" pos:column="43">'#'<pos:position pos:line="104" pos:column="46"/></literal><operator pos:line="104" pos:column="46">)<pos:position pos:line="104" pos:column="47"/></operator> <operator pos:line="104" pos:column="48">&amp;&amp;<pos:position pos:line="104" pos:column="58"/></operator> <operator pos:line="104" pos:column="51">(<pos:position pos:line="104" pos:column="52"/></operator><name><name pos:line="104" pos:column="52">buffer<pos:position pos:line="104" pos:column="58"/></name><index pos:line="104" pos:column="58">[<expr><literal type="number" pos:line="104" pos:column="59">1<pos:position pos:line="104" pos:column="60"/></literal></expr>]<pos:position pos:line="104" pos:column="61"/></index></name> <operator pos:line="104" pos:column="62">==<pos:position pos:line="104" pos:column="64"/></operator> <literal type="char" pos:line="104" pos:column="65">'!'<pos:position pos:line="104" pos:column="68"/></literal><operator pos:line="104" pos:column="68">)<pos:position pos:line="104" pos:column="69"/></operator></expr>)<pos:position pos:line="104" pos:column="70"/></condition><then pos:line="104" pos:column="70"> <block pos:line="104" pos:column="71">{
            <comment type="block" pos:line="105" pos:column="13">/* Assuming file is a script since it starts with a shebang */</comment>
            <for pos:line="106" pos:column="13">for <control pos:line="106" pos:column="17">(<init><expr><name pos:line="106" pos:column="18">i<pos:position pos:line="106" pos:column="19"/></name> <operator pos:line="106" pos:column="20">=<pos:position pos:line="106" pos:column="21"/></operator> <literal type="number" pos:line="106" pos:column="22">2<pos:position pos:line="106" pos:column="23"/></literal></expr>;<pos:position pos:line="106" pos:column="24"/></init> <condition><expr><name pos:line="106" pos:column="25">i<pos:position pos:line="106" pos:column="26"/></name> <operator pos:line="106" pos:column="27">&lt;<pos:position pos:line="106" pos:column="31"/></operator> <name pos:line="106" pos:column="29">bytes<pos:position pos:line="106" pos:column="34"/></name></expr>;<pos:position pos:line="106" pos:column="35"/></condition> <incr><expr><name pos:line="106" pos:column="36">i<pos:position pos:line="106" pos:column="37"/></name><operator pos:line="106" pos:column="37">++<pos:position pos:line="106" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="106" pos:column="40"/></control> <block pos:line="106" pos:column="41">{
                <if pos:line="107" pos:column="17">if <condition pos:line="107" pos:column="20">(<expr><operator pos:line="107" pos:column="21">(<pos:position pos:line="107" pos:column="22"/></operator><name><name pos:line="107" pos:column="22">buffer<pos:position pos:line="107" pos:column="28"/></name><index pos:line="107" pos:column="28">[<expr><name pos:line="107" pos:column="29">i<pos:position pos:line="107" pos:column="30"/></name></expr>]<pos:position pos:line="107" pos:column="31"/></index></name> <operator pos:line="107" pos:column="32">==<pos:position pos:line="107" pos:column="34"/></operator> <literal type="char" pos:line="107" pos:column="35">'\r'<pos:position pos:line="107" pos:column="39"/></literal><operator pos:line="107" pos:column="39">)<pos:position pos:line="107" pos:column="40"/></operator> <operator pos:line="107" pos:column="41">||<pos:position pos:line="107" pos:column="43"/></operator> <operator pos:line="107" pos:column="44">(<pos:position pos:line="107" pos:column="45"/></operator><name><name pos:line="107" pos:column="45">buffer<pos:position pos:line="107" pos:column="51"/></name><index pos:line="107" pos:column="51">[<expr><name pos:line="107" pos:column="52">i<pos:position pos:line="107" pos:column="53"/></name></expr>]<pos:position pos:line="107" pos:column="54"/></index></name> <operator pos:line="107" pos:column="55">==<pos:position pos:line="107" pos:column="57"/></operator> <literal type="char" pos:line="107" pos:column="58">'\n'<pos:position pos:line="107" pos:column="62"/></literal><operator pos:line="107" pos:column="62">)<pos:position pos:line="107" pos:column="63"/></operator></expr>)<pos:position pos:line="107" pos:column="64"/></condition><then pos:line="107" pos:column="64"> <block pos:line="107" pos:column="65">{
                    <expr_stmt><expr><name><name pos:line="108" pos:column="21">buffer<pos:position pos:line="108" pos:column="27"/></name><index pos:line="108" pos:column="27">[<expr><name pos:line="108" pos:column="28">i<pos:position pos:line="108" pos:column="29"/></name></expr>]<pos:position pos:line="108" pos:column="30"/></index></name> <operator pos:line="108" pos:column="31">=<pos:position pos:line="108" pos:column="32"/></operator> <literal type="char" pos:line="108" pos:column="33">'\0'<pos:position pos:line="108" pos:column="37"/></literal></expr>;<pos:position pos:line="108" pos:column="38"/></expr_stmt>
                    <break pos:line="109" pos:column="21">break;<pos:position pos:line="109" pos:column="27"/></break>
                }<pos:position pos:line="110" pos:column="18"/></block></then></if>
            }<pos:position pos:line="111" pos:column="14"/></block></for>
            <if pos:line="112" pos:column="13">if <condition pos:line="112" pos:column="16">(<expr><name pos:line="112" pos:column="17">i<pos:position pos:line="112" pos:column="18"/></name> <operator pos:line="112" pos:column="19">&lt;<pos:position pos:line="112" pos:column="23"/></operator> <name pos:line="112" pos:column="21">bytes<pos:position pos:line="112" pos:column="26"/></name></expr>)<pos:position pos:line="112" pos:column="27"/></condition><then pos:line="112" pos:column="27"> <block pos:line="112" pos:column="28">{
                <expr_stmt><expr><name pos:line="113" pos:column="17">interpreter<pos:position pos:line="113" pos:column="28"/></name> <operator pos:line="113" pos:column="29">=<pos:position pos:line="113" pos:column="30"/></operator> <name pos:line="113" pos:column="31">buffer<pos:position pos:line="113" pos:column="37"/></name> <operator pos:line="113" pos:column="38">+<pos:position pos:line="113" pos:column="39"/></operator> <literal type="number" pos:line="113" pos:column="40">2<pos:position pos:line="113" pos:column="41"/></literal></expr>;<pos:position pos:line="113" pos:column="42"/></expr_stmt>
                <while pos:line="114" pos:column="17">while <condition pos:line="114" pos:column="23">(<expr><call><name pos:line="114" pos:column="24">apr_isspace<pos:position pos:line="114" pos:column="35"/></name><argument_list pos:line="114" pos:column="35">(<argument><expr><operator pos:line="114" pos:column="36">*<pos:position pos:line="114" pos:column="37"/></operator><name pos:line="114" pos:column="37">interpreter<pos:position pos:line="114" pos:column="48"/></name></expr></argument>)<pos:position pos:line="114" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="114" pos:column="50"/></condition> <block pos:line="114" pos:column="51">{
                    <expr_stmt><expr><operator pos:line="115" pos:column="21">++<pos:position pos:line="115" pos:column="23"/></operator><name pos:line="115" pos:column="23">interpreter<pos:position pos:line="115" pos:column="34"/></name></expr>;<pos:position pos:line="115" pos:column="35"/></expr_stmt>
                }<pos:position pos:line="116" pos:column="18"/></block></while>
                <if pos:line="117" pos:column="17">if <condition pos:line="117" pos:column="20">(<expr><name><name pos:line="117" pos:column="21">e_info<pos:position pos:line="117" pos:column="27"/></name><operator pos:line="117" pos:column="27">-&gt;<pos:position pos:line="117" pos:column="32"/></operator><name pos:line="117" pos:column="29">cmd_type<pos:position pos:line="117" pos:column="37"/></name></name> <operator pos:line="117" pos:column="38">!=<pos:position pos:line="117" pos:column="40"/></operator> <name pos:line="117" pos:column="41">APR_SHELLCMD<pos:position pos:line="117" pos:column="53"/></name></expr>)<pos:position pos:line="117" pos:column="54"/></condition><then pos:line="117" pos:column="54"> <block pos:line="117" pos:column="55">{
                    <expr_stmt><expr><name><name pos:line="118" pos:column="21">e_info<pos:position pos:line="118" pos:column="27"/></name><operator pos:line="118" pos:column="27">-&gt;<pos:position pos:line="118" pos:column="32"/></operator><name pos:line="118" pos:column="29">cmd_type<pos:position pos:line="118" pos:column="37"/></name></name> <operator pos:line="118" pos:column="38">=<pos:position pos:line="118" pos:column="39"/></operator> <name pos:line="118" pos:column="40">APR_PROGRAM_PATH<pos:position pos:line="118" pos:column="56"/></name></expr>;<pos:position pos:line="118" pos:column="57"/></expr_stmt>
                }<pos:position pos:line="119" pos:column="18"/></block></then></if>
            }<pos:position pos:line="120" pos:column="14"/></block></then></if>
        }<pos:position pos:line="121" pos:column="10"/></block></then>
        <elseif pos:line="122" pos:column="9">else <if pos:line="122" pos:column="14">if <condition pos:line="122" pos:column="17">(<expr><name pos:line="122" pos:column="18">bytes<pos:position pos:line="122" pos:column="23"/></name> <operator pos:line="122" pos:column="24">&gt;=<pos:position pos:line="122" pos:column="29"/></operator> <sizeof pos:line="122" pos:column="27">sizeof<argument_list pos:line="122" pos:column="33">(<argument><expr><name pos:line="122" pos:column="34">IMAGE_DOS_HEADER<pos:position pos:line="122" pos:column="50"/></name></expr></argument>)<pos:position pos:line="122" pos:column="51"/></argument_list></sizeof></expr>)<pos:position pos:line="122" pos:column="52"/></condition><then pos:line="122" pos:column="52"> <block pos:line="122" pos:column="53">{
            <comment type="block" pos:line="123" pos:column="13">/* Not a script, is it an executable? */</comment>
            <decl_stmt><decl><type><name pos:line="124" pos:column="13">IMAGE_DOS_HEADER<pos:position pos:line="124" pos:column="29"/></name> <modifier pos:line="124" pos:column="30">*<pos:position pos:line="124" pos:column="31"/></modifier></type><name pos:line="124" pos:column="31">hdr<pos:position pos:line="124" pos:column="34"/></name> <init pos:line="124" pos:column="35">= <expr><operator pos:line="124" pos:column="37">(<pos:position pos:line="124" pos:column="38"/></operator><name pos:line="124" pos:column="38">IMAGE_DOS_HEADER<pos:position pos:line="124" pos:column="54"/></name><operator pos:line="124" pos:column="54">*<pos:position pos:line="124" pos:column="55"/></operator><operator pos:line="124" pos:column="55">)<pos:position pos:line="124" pos:column="56"/></operator><name pos:line="124" pos:column="56">buffer<pos:position pos:line="124" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="124" pos:column="63"/></decl_stmt>
            <if pos:line="125" pos:column="13">if <condition pos:line="125" pos:column="16">(<expr><name><name pos:line="125" pos:column="17">hdr<pos:position pos:line="125" pos:column="20"/></name><operator pos:line="125" pos:column="20">-&gt;<pos:position pos:line="125" pos:column="25"/></operator><name pos:line="125" pos:column="22">e_magic<pos:position pos:line="125" pos:column="29"/></name></name> <operator pos:line="125" pos:column="30">==<pos:position pos:line="125" pos:column="32"/></operator> <name pos:line="125" pos:column="33">IMAGE_DOS_SIGNATURE<pos:position pos:line="125" pos:column="52"/></name></expr>)<pos:position pos:line="125" pos:column="53"/></condition><then pos:line="125" pos:column="53"> <block pos:line="125" pos:column="54">{
                <if pos:line="126" pos:column="17">if <condition pos:line="126" pos:column="20">(<expr><name><name pos:line="126" pos:column="21">hdr<pos:position pos:line="126" pos:column="24"/></name><operator pos:line="126" pos:column="24">-&gt;<pos:position pos:line="126" pos:column="29"/></operator><name pos:line="126" pos:column="26">e_lfarlc<pos:position pos:line="126" pos:column="34"/></name></name> <operator pos:line="126" pos:column="35">&lt;<pos:position pos:line="126" pos:column="39"/></operator> <literal type="number" pos:line="126" pos:column="37">0x40<pos:position pos:line="126" pos:column="41"/></literal></expr>)<pos:position pos:line="126" pos:column="42"/></condition><then pos:line="126" pos:column="42"> <block pos:line="126" pos:column="43">{
                    <comment type="block" pos:line="127" pos:column="21">/* Ought to invoke this 16 bit exe by a stub, (cmd /c?) */</comment>
                    <expr_stmt><expr><name pos:line="128" pos:column="21">interpreter<pos:position pos:line="128" pos:column="32"/></name> <operator pos:line="128" pos:column="33">=<pos:position pos:line="128" pos:column="34"/></operator> <literal type="string" pos:line="128" pos:column="35">""<pos:position pos:line="128" pos:column="37"/></literal></expr>;<pos:position pos:line="128" pos:column="38"/></expr_stmt>
                }<pos:position pos:line="129" pos:column="18"/></block></then>
                <else pos:line="130" pos:column="17">else <block pos:line="130" pos:column="22">{
                    <expr_stmt><expr><name pos:line="131" pos:column="21">interpreter<pos:position pos:line="131" pos:column="32"/></name> <operator pos:line="131" pos:column="33">=<pos:position pos:line="131" pos:column="34"/></operator> <literal type="string" pos:line="131" pos:column="35">""<pos:position pos:line="131" pos:column="37"/></literal></expr>;<pos:position pos:line="131" pos:column="38"/></expr_stmt>
                }<pos:position pos:line="132" pos:column="18"/></block></else></if>
            }<pos:position pos:line="133" pos:column="14"/></block></then></if>
        }<pos:position pos:line="134" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="135" pos:column="6"/></block></then></if>
    <if pos:line="136" pos:column="5">if <condition pos:line="136" pos:column="8">(<expr><operator pos:line="136" pos:column="9">!<pos:position pos:line="136" pos:column="10"/></operator><name pos:line="136" pos:column="10">interpreter<pos:position pos:line="136" pos:column="21"/></name></expr>)<pos:position pos:line="136" pos:column="22"/></condition><then pos:line="136" pos:column="22"> <block pos:line="136" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="137" pos:column="9">ap_log_rerror<pos:position pos:line="137" pos:column="22"/></name><argument_list pos:line="137" pos:column="22">(<argument><expr><name pos:line="137" pos:column="23">APLOG_MARK<pos:position pos:line="137" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="35">APLOG_ERR<pos:position pos:line="137" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="137" pos:column="46">0<pos:position pos:line="137" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="137" pos:column="49">r<pos:position pos:line="137" pos:column="50"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="138" pos:column="23">"%s is not executable; ensure interpreted scripts have "<pos:position pos:line="138" pos:column="79"/></literal>
                      <literal type="string" pos:line="139" pos:column="23">"\"#!\" first line"<pos:position pos:line="139" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="139" pos:column="44">*<pos:position pos:line="139" pos:column="45"/></operator><name pos:line="139" pos:column="45">cmd<pos:position pos:line="139" pos:column="48"/></name></expr></argument>)<pos:position pos:line="139" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="50"/></expr_stmt>
        <return pos:line="140" pos:column="9">return <expr><name pos:line="140" pos:column="16">APR_EBADF<pos:position pos:line="140" pos:column="25"/></name></expr>;<pos:position pos:line="140" pos:column="26"/></return>
    }<pos:position pos:line="141" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="143" pos:column="5">*<pos:position pos:line="143" pos:column="6"/></operator><name pos:line="143" pos:column="6">argv<pos:position pos:line="143" pos:column="10"/></name> <operator pos:line="143" pos:column="11">=<pos:position pos:line="143" pos:column="12"/></operator> <operator pos:line="143" pos:column="13">(<pos:position pos:line="143" pos:column="14"/></operator><specifier pos:line="143" pos:column="14">const<pos:position pos:line="143" pos:column="19"/></specifier> <name pos:line="143" pos:column="20">char<pos:position pos:line="143" pos:column="24"/></name> <operator pos:line="143" pos:column="25">*<pos:position pos:line="143" pos:column="26"/></operator><operator pos:line="143" pos:column="26">*<pos:position pos:line="143" pos:column="27"/></operator><operator pos:line="143" pos:column="27">)<pos:position pos:line="143" pos:column="28"/></operator><operator pos:line="143" pos:column="28">(<pos:position pos:line="143" pos:column="29"/></operator><call><name pos:line="143" pos:column="29">split_argv<pos:position pos:line="143" pos:column="39"/></name><argument_list pos:line="143" pos:column="39">(<argument><expr><name pos:line="143" pos:column="40">p<pos:position pos:line="143" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="43">interpreter<pos:position pos:line="143" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="143" pos:column="56">*<pos:position pos:line="143" pos:column="57"/></operator><name pos:line="143" pos:column="57">cmd<pos:position pos:line="143" pos:column="60"/></name></expr></argument>,
                                       <argument><expr><name pos:line="144" pos:column="40">args<pos:position pos:line="144" pos:column="44"/></name></expr></argument>)<pos:position pos:line="144" pos:column="45"/></argument_list></call><operator pos:line="144" pos:column="45">-&gt;<pos:position pos:line="144" pos:column="50"/></operator><name pos:line="144" pos:column="47">elts<pos:position pos:line="144" pos:column="51"/></name><operator pos:line="144" pos:column="51">)<pos:position pos:line="144" pos:column="52"/></operator></expr>;<pos:position pos:line="144" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="145" pos:column="5">*<pos:position pos:line="145" pos:column="6"/></operator><name pos:line="145" pos:column="6">cmd<pos:position pos:line="145" pos:column="9"/></name> <operator pos:line="145" pos:column="10">=<pos:position pos:line="145" pos:column="11"/></operator> <operator pos:line="145" pos:column="12">(<pos:position pos:line="145" pos:column="13"/></operator><operator pos:line="145" pos:column="13">*<pos:position pos:line="145" pos:column="14"/></operator><name pos:line="145" pos:column="14">argv<pos:position pos:line="145" pos:column="18"/></name><operator pos:line="145" pos:column="18">)<pos:position pos:line="145" pos:column="19"/></operator><index pos:line="145" pos:column="19">[<expr><literal type="number" pos:line="145" pos:column="20">0<pos:position pos:line="145" pos:column="21"/></literal></expr>]<pos:position pos:line="145" pos:column="22"/></index></expr>;<pos:position pos:line="145" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="147" pos:column="5">e_info<pos:position pos:line="147" pos:column="11"/></name><operator pos:line="147" pos:column="11">-&gt;<pos:position pos:line="147" pos:column="16"/></operator><name pos:line="147" pos:column="13">detached<pos:position pos:line="147" pos:column="21"/></name></name> <operator pos:line="147" pos:column="22">=<pos:position pos:line="147" pos:column="23"/></operator> <literal type="number" pos:line="147" pos:column="24">1<pos:position pos:line="147" pos:column="25"/></literal></expr>;<pos:position pos:line="147" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="149" pos:column="5">/* XXX: Must fix r-&gt;subprocess_env to follow utf-8 conventions from
     * the client's octets so that win32 apr_proc_create is happy.
     * The -best- way is to determine if the .exe is unicode aware
     * (using 0x0080-0x00ff) or is linked as a command or windows
     * application (following the OEM or Ansi code page in effect.)
     */</comment>
    <for pos:line="155" pos:column="5">for <control pos:line="155" pos:column="9">(<init><expr><name pos:line="155" pos:column="10">i<pos:position pos:line="155" pos:column="11"/></name> <operator pos:line="155" pos:column="12">=<pos:position pos:line="155" pos:column="13"/></operator> <literal type="number" pos:line="155" pos:column="14">0<pos:position pos:line="155" pos:column="15"/></literal></expr>;<pos:position pos:line="155" pos:column="16"/></init> <condition><expr><name pos:line="155" pos:column="17">i<pos:position pos:line="155" pos:column="18"/></name> <operator pos:line="155" pos:column="19">&lt;<pos:position pos:line="155" pos:column="23"/></operator> <name><name pos:line="155" pos:column="21">elts_arr<pos:position pos:line="155" pos:column="29"/></name><operator pos:line="155" pos:column="29">-&gt;<pos:position pos:line="155" pos:column="34"/></operator><name pos:line="155" pos:column="31">nelts<pos:position pos:line="155" pos:column="36"/></name></name></expr>;<pos:position pos:line="155" pos:column="37"/></condition> <incr><expr><operator pos:line="155" pos:column="38">++<pos:position pos:line="155" pos:column="40"/></operator><name pos:line="155" pos:column="40">i<pos:position pos:line="155" pos:column="41"/></name></expr></incr>)<pos:position pos:line="155" pos:column="42"/></control> <block pos:line="155" pos:column="43">{
        <if pos:line="156" pos:column="9">if <condition pos:line="156" pos:column="12">(<expr><name pos:line="156" pos:column="13">win_nt<pos:position pos:line="156" pos:column="19"/></name> <operator pos:line="156" pos:column="20">&amp;&amp;<pos:position pos:line="156" pos:column="30"/></operator> <name><name pos:line="156" pos:column="23">elts<pos:position pos:line="156" pos:column="27"/></name><index pos:line="156" pos:column="27">[<expr><name pos:line="156" pos:column="28">i<pos:position pos:line="156" pos:column="29"/></name></expr>]<pos:position pos:line="156" pos:column="30"/></index></name><operator pos:line="156" pos:column="30">.<pos:position pos:line="156" pos:column="31"/></operator><name pos:line="156" pos:column="31">key<pos:position pos:line="156" pos:column="34"/></name> <operator pos:line="156" pos:column="35">&amp;&amp;<pos:position pos:line="156" pos:column="45"/></operator> <operator pos:line="156" pos:column="38">*<pos:position pos:line="156" pos:column="39"/></operator><name><name pos:line="156" pos:column="39">elts<pos:position pos:line="156" pos:column="43"/></name><index pos:line="156" pos:column="43">[<expr><name pos:line="156" pos:column="44">i<pos:position pos:line="156" pos:column="45"/></name></expr>]<pos:position pos:line="156" pos:column="46"/></index></name><operator pos:line="156" pos:column="46">.<pos:position pos:line="156" pos:column="47"/></operator><name pos:line="156" pos:column="47">key<pos:position pos:line="156" pos:column="50"/></name>
                <operator pos:line="157" pos:column="17">&amp;&amp;<pos:position pos:line="157" pos:column="27"/></operator> <operator pos:line="157" pos:column="20">(<pos:position pos:line="157" pos:column="21"/></operator><call><name pos:line="157" pos:column="21">strncmp<pos:position pos:line="157" pos:column="28"/></name><argument_list pos:line="157" pos:column="28">(<argument><expr><name><name pos:line="157" pos:column="29">elts<pos:position pos:line="157" pos:column="33"/></name><index pos:line="157" pos:column="33">[<expr><name pos:line="157" pos:column="34">i<pos:position pos:line="157" pos:column="35"/></name></expr>]<pos:position pos:line="157" pos:column="36"/></index></name><operator pos:line="157" pos:column="36">.<pos:position pos:line="157" pos:column="37"/></operator><name pos:line="157" pos:column="37">key<pos:position pos:line="157" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="42">"HTTP_"<pos:position pos:line="157" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="157" pos:column="51">5<pos:position pos:line="157" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="53"/></argument_list></call> <operator pos:line="157" pos:column="54">==<pos:position pos:line="157" pos:column="56"/></operator> <literal type="number" pos:line="157" pos:column="57">0<pos:position pos:line="157" pos:column="58"/></literal>
                 <operator pos:line="158" pos:column="18">||<pos:position pos:line="158" pos:column="20"/></operator> <call><name pos:line="158" pos:column="21">strncmp<pos:position pos:line="158" pos:column="28"/></name><argument_list pos:line="158" pos:column="28">(<argument><expr><name><name pos:line="158" pos:column="29">elts<pos:position pos:line="158" pos:column="33"/></name><index pos:line="158" pos:column="33">[<expr><name pos:line="158" pos:column="34">i<pos:position pos:line="158" pos:column="35"/></name></expr>]<pos:position pos:line="158" pos:column="36"/></index></name><operator pos:line="158" pos:column="36">.<pos:position pos:line="158" pos:column="37"/></operator><name pos:line="158" pos:column="37">key<pos:position pos:line="158" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="158" pos:column="42">"SERVER_"<pos:position pos:line="158" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="158" pos:column="53">7<pos:position pos:line="158" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="55"/></argument_list></call> <operator pos:line="158" pos:column="56">==<pos:position pos:line="158" pos:column="58"/></operator> <literal type="number" pos:line="158" pos:column="59">0<pos:position pos:line="158" pos:column="60"/></literal>
                 <operator pos:line="159" pos:column="18">||<pos:position pos:line="159" pos:column="20"/></operator> <call><name pos:line="159" pos:column="21">strncmp<pos:position pos:line="159" pos:column="28"/></name><argument_list pos:line="159" pos:column="28">(<argument><expr><name><name pos:line="159" pos:column="29">elts<pos:position pos:line="159" pos:column="33"/></name><index pos:line="159" pos:column="33">[<expr><name pos:line="159" pos:column="34">i<pos:position pos:line="159" pos:column="35"/></name></expr>]<pos:position pos:line="159" pos:column="36"/></index></name><operator pos:line="159" pos:column="36">.<pos:position pos:line="159" pos:column="37"/></operator><name pos:line="159" pos:column="37">key<pos:position pos:line="159" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="159" pos:column="42">"REQUEST_"<pos:position pos:line="159" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="159" pos:column="54">8<pos:position pos:line="159" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="56"/></argument_list></call> <operator pos:line="159" pos:column="57">==<pos:position pos:line="159" pos:column="59"/></operator> <literal type="number" pos:line="159" pos:column="60">0<pos:position pos:line="159" pos:column="61"/></literal>
                 <operator pos:line="160" pos:column="18">||<pos:position pos:line="160" pos:column="20"/></operator> <call><name pos:line="160" pos:column="21">strcmp<pos:position pos:line="160" pos:column="27"/></name><argument_list pos:line="160" pos:column="27">(<argument><expr><name><name pos:line="160" pos:column="28">elts<pos:position pos:line="160" pos:column="32"/></name><index pos:line="160" pos:column="32">[<expr><name pos:line="160" pos:column="33">i<pos:position pos:line="160" pos:column="34"/></name></expr>]<pos:position pos:line="160" pos:column="35"/></index></name><operator pos:line="160" pos:column="35">.<pos:position pos:line="160" pos:column="36"/></operator><name pos:line="160" pos:column="36">key<pos:position pos:line="160" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="41">"QUERY_STRING"<pos:position pos:line="160" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="56"/></argument_list></call> <operator pos:line="160" pos:column="57">==<pos:position pos:line="160" pos:column="59"/></operator> <literal type="number" pos:line="160" pos:column="60">0<pos:position pos:line="160" pos:column="61"/></literal>
                 <operator pos:line="161" pos:column="18">||<pos:position pos:line="161" pos:column="20"/></operator> <call><name pos:line="161" pos:column="21">strcmp<pos:position pos:line="161" pos:column="27"/></name><argument_list pos:line="161" pos:column="27">(<argument><expr><name><name pos:line="161" pos:column="28">elts<pos:position pos:line="161" pos:column="32"/></name><index pos:line="161" pos:column="32">[<expr><name pos:line="161" pos:column="33">i<pos:position pos:line="161" pos:column="34"/></name></expr>]<pos:position pos:line="161" pos:column="35"/></index></name><operator pos:line="161" pos:column="35">.<pos:position pos:line="161" pos:column="36"/></operator><name pos:line="161" pos:column="36">key<pos:position pos:line="161" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="161" pos:column="41">"PATH_INFO"<pos:position pos:line="161" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="53"/></argument_list></call> <operator pos:line="161" pos:column="54">==<pos:position pos:line="161" pos:column="56"/></operator> <literal type="number" pos:line="161" pos:column="57">0<pos:position pos:line="161" pos:column="58"/></literal>
                 <operator pos:line="162" pos:column="18">||<pos:position pos:line="162" pos:column="20"/></operator> <call><name pos:line="162" pos:column="21">strcmp<pos:position pos:line="162" pos:column="27"/></name><argument_list pos:line="162" pos:column="27">(<argument><expr><name><name pos:line="162" pos:column="28">elts<pos:position pos:line="162" pos:column="32"/></name><index pos:line="162" pos:column="32">[<expr><name pos:line="162" pos:column="33">i<pos:position pos:line="162" pos:column="34"/></name></expr>]<pos:position pos:line="162" pos:column="35"/></index></name><operator pos:line="162" pos:column="35">.<pos:position pos:line="162" pos:column="36"/></operator><name pos:line="162" pos:column="36">key<pos:position pos:line="162" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="162" pos:column="41">"PATH_TRANSLATED"<pos:position pos:line="162" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="59"/></argument_list></call> <operator pos:line="162" pos:column="60">==<pos:position pos:line="162" pos:column="62"/></operator> <literal type="number" pos:line="162" pos:column="63">0<pos:position pos:line="162" pos:column="64"/></literal><operator pos:line="162" pos:column="64">)<pos:position pos:line="162" pos:column="65"/></operator></expr>)<pos:position pos:line="162" pos:column="66"/></condition><then pos:line="162" pos:column="66"> <block pos:line="162" pos:column="67">{
            <expr_stmt><expr><call><name pos:line="163" pos:column="13">prep_string<pos:position pos:line="163" pos:column="24"/></name><argument_list pos:line="163" pos:column="24">(<argument><expr><operator pos:line="163" pos:column="25">(<pos:position pos:line="163" pos:column="26"/></operator><specifier pos:line="163" pos:column="26">const<pos:position pos:line="163" pos:column="31"/></specifier> <name pos:line="163" pos:column="32">char<pos:position pos:line="163" pos:column="36"/></name><operator pos:line="163" pos:column="36">*<pos:position pos:line="163" pos:column="37"/></operator><operator pos:line="163" pos:column="37">*<pos:position pos:line="163" pos:column="38"/></operator><operator pos:line="163" pos:column="38">)<pos:position pos:line="163" pos:column="39"/></operator> <operator pos:line="163" pos:column="40">&amp;<pos:position pos:line="163" pos:column="45"/></operator><name><name pos:line="163" pos:column="41">elts<pos:position pos:line="163" pos:column="45"/></name><index pos:line="163" pos:column="45">[<expr><name pos:line="163" pos:column="46">i<pos:position pos:line="163" pos:column="47"/></name></expr>]<pos:position pos:line="163" pos:column="48"/></index></name><operator pos:line="163" pos:column="48">.<pos:position pos:line="163" pos:column="49"/></operator><name pos:line="163" pos:column="49">val<pos:position pos:line="163" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="163" pos:column="54">r<pos:position pos:line="163" pos:column="55"/></name><operator pos:line="163" pos:column="55">-&gt;<pos:position pos:line="163" pos:column="60"/></operator><name pos:line="163" pos:column="57">pool<pos:position pos:line="163" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="163" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="164" pos:column="10"/></block></then></if>
    }<pos:position pos:line="165" pos:column="6"/></block></for>
    <return pos:line="166" pos:column="5">return <expr><name pos:line="166" pos:column="12">APR_SUCCESS<pos:position pos:line="166" pos:column="23"/></name></expr>;<pos:position pos:line="166" pos:column="24"/></return>
}<pos:position pos:line="167" pos:column="2"/></block></function></unit>

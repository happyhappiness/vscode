<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_4027_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">pcregrep<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">FILE<pos:position pos:line="2" pos:column="14"/></name> <modifier pos:line="2" pos:column="15">*<pos:position pos:line="2" pos:column="16"/></modifier></type><name pos:line="2" pos:column="16">in<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">name<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
<decl_stmt><decl><type><name pos:line="4" pos:column="1">int<pos:position pos:line="4" pos:column="4"/></name></type> <name pos:line="4" pos:column="5">rc<pos:position pos:line="4" pos:column="7"/></name> <init pos:line="4" pos:column="8">= <expr><literal type="number" pos:line="4" pos:column="10">1<pos:position pos:line="4" pos:column="11"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="5" pos:column="1">int<pos:position pos:line="5" pos:column="4"/></name></type> <name pos:line="5" pos:column="5">linenumber<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="6" pos:column="1">int<pos:position pos:line="6" pos:column="4"/></name></type> <name pos:line="6" pos:column="5">count<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="7" pos:column="1">int<pos:position pos:line="7" pos:column="4"/></name></type> <name><name pos:line="7" pos:column="5">offsets<pos:position pos:line="7" pos:column="12"/></name><index pos:line="7" pos:column="12">[<expr><literal type="number" pos:line="7" pos:column="13">99<pos:position pos:line="7" pos:column="15"/></literal></expr>]<pos:position pos:line="7" pos:column="16"/></index></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="8" pos:column="1">char<pos:position pos:line="8" pos:column="5"/></name></type> <name><name pos:line="8" pos:column="6">buffer<pos:position pos:line="8" pos:column="12"/></name><index pos:line="8" pos:column="12">[<expr><name pos:line="8" pos:column="13">BUFSIZ<pos:position pos:line="8" pos:column="19"/></name></expr>]<pos:position pos:line="8" pos:column="20"/></index></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

<while pos:line="10" pos:column="1">while <condition pos:line="10" pos:column="7">(<expr><call><name pos:line="10" pos:column="8">fgets<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">buffer<pos:position pos:line="10" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="22">sizeof<argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">buffer<pos:position pos:line="10" pos:column="35"/></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="10" pos:column="38">in<pos:position pos:line="10" pos:column="40"/></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call> <operator pos:line="10" pos:column="42">!=<pos:position pos:line="10" pos:column="44"/></operator> <name pos:line="10" pos:column="45">NULL<pos:position pos:line="10" pos:column="49"/></name></expr>)<pos:position pos:line="10" pos:column="50"/></condition>
  <block pos:line="11" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">BOOL<pos:position pos:line="12" pos:column="7"/></name></type> <name pos:line="12" pos:column="8">match<pos:position pos:line="12" pos:column="13"/></name> <init pos:line="12" pos:column="14">= <expr><name pos:line="12" pos:column="16">FALSE<pos:position pos:line="12" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">i<pos:position pos:line="13" pos:column="8"/></name></decl>;<pos:position pos:line="13" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">length<pos:position pos:line="14" pos:column="13"/></name> <init pos:line="14" pos:column="14">= <expr><operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">int<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">)<pos:position pos:line="14" pos:column="21"/></operator><call><name pos:line="14" pos:column="21">strlen<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">buffer<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="36"/></decl_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">length<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">&gt;<pos:position pos:line="15" pos:column="18"/></operator> <literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal> <operator pos:line="15" pos:column="18">&amp;&amp;<pos:position pos:line="15" pos:column="28"/></operator> <name><name pos:line="15" pos:column="21">buffer<pos:position pos:line="15" pos:column="27"/></name><index pos:line="15" pos:column="27">[<expr><name pos:line="15" pos:column="28">length<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">-<pos:position pos:line="15" pos:column="35"/></operator><literal type="number" pos:line="15" pos:column="35">1<pos:position pos:line="15" pos:column="36"/></literal></expr>]<pos:position pos:line="15" pos:column="37"/></index></name> <operator pos:line="15" pos:column="38">==<pos:position pos:line="15" pos:column="40"/></operator> <literal type="char" pos:line="15" pos:column="41">'\n'<pos:position pos:line="15" pos:column="45"/></literal></expr>)<pos:position pos:line="15" pos:column="46"/></condition><then pos:line="15" pos:column="46"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="47">buffer<pos:position pos:line="15" pos:column="53"/></name><index pos:line="15" pos:column="53">[<expr><operator pos:line="15" pos:column="54">--<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="56">length<pos:position pos:line="15" pos:column="62"/></name></expr>]<pos:position pos:line="15" pos:column="63"/></index></name> <operator pos:line="15" pos:column="64">=<pos:position pos:line="15" pos:column="65"/></operator> <literal type="number" pos:line="15" pos:column="66">0<pos:position pos:line="15" pos:column="67"/></literal></expr>;<pos:position pos:line="15" pos:column="68"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name pos:line="16" pos:column="3">linenumber<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">++<pos:position pos:line="16" pos:column="15"/></operator></expr>;<pos:position pos:line="16" pos:column="16"/></expr_stmt>

  <for pos:line="18" pos:column="3">for <control pos:line="18" pos:column="7">(<init><expr><name pos:line="18" pos:column="8">i<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <literal type="number" pos:line="18" pos:column="12">0<pos:position pos:line="18" pos:column="13"/></literal></expr>;<pos:position pos:line="18" pos:column="14"/></init> <condition><expr><operator pos:line="18" pos:column="15">!<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">match<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">&amp;&amp;<pos:position pos:line="18" pos:column="32"/></operator> <name pos:line="18" pos:column="25">i<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">&lt;<pos:position pos:line="18" pos:column="31"/></operator> <name pos:line="18" pos:column="29">pattern_count<pos:position pos:line="18" pos:column="42"/></name></expr>;<pos:position pos:line="18" pos:column="43"/></condition> <incr><expr><name pos:line="18" pos:column="44">i<pos:position pos:line="18" pos:column="45"/></name><operator pos:line="18" pos:column="45">++<pos:position pos:line="18" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="48"/></control>
    <block pos:line="19" pos:column="5">{
    <expr_stmt><expr><name pos:line="20" pos:column="5">match<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <call><name pos:line="20" pos:column="13">pcre_exec<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name><name pos:line="20" pos:column="23">pattern_list<pos:position pos:line="20" pos:column="35"/></name><index pos:line="20" pos:column="35">[<expr><name pos:line="20" pos:column="36">i<pos:position pos:line="20" pos:column="37"/></name></expr>]<pos:position pos:line="20" pos:column="38"/></index></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="40">hints_list<pos:position pos:line="20" pos:column="50"/></name><index pos:line="20" pos:column="50">[<expr><name pos:line="20" pos:column="51">i<pos:position pos:line="20" pos:column="52"/></name></expr>]<pos:position pos:line="20" pos:column="53"/></index></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="55">buffer<pos:position pos:line="20" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="63">length<pos:position pos:line="20" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="71">0<pos:position pos:line="20" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="74">0<pos:position pos:line="20" pos:column="75"/></literal></expr></argument>,
      <argument><expr><name pos:line="21" pos:column="7">offsets<pos:position pos:line="21" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="16">99<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="19"/></argument_list></call> <operator pos:line="21" pos:column="20">&gt;=<pos:position pos:line="21" pos:column="25"/></operator> <literal type="number" pos:line="21" pos:column="23">0<pos:position pos:line="21" pos:column="24"/></literal></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">match<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">&amp;&amp;<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="18">whole_lines<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">&amp;&amp;<pos:position pos:line="22" pos:column="40"/></operator> <name><name pos:line="22" pos:column="33">offsets<pos:position pos:line="22" pos:column="40"/></name><index pos:line="22" pos:column="40">[<expr><literal type="number" pos:line="22" pos:column="41">1<pos:position pos:line="22" pos:column="42"/></literal></expr>]<pos:position pos:line="22" pos:column="43"/></index></name> <operator pos:line="22" pos:column="44">!=<pos:position pos:line="22" pos:column="46"/></operator> <name pos:line="22" pos:column="47">length<pos:position pos:line="22" pos:column="53"/></name></expr>)<pos:position pos:line="22" pos:column="54"/></condition><then pos:line="22" pos:column="54"> <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="55">match<pos:position pos:line="22" pos:column="60"/></name> <operator pos:line="22" pos:column="61">=<pos:position pos:line="22" pos:column="62"/></operator> <name pos:line="22" pos:column="63">FALSE<pos:position pos:line="22" pos:column="68"/></name></expr>;<pos:position pos:line="22" pos:column="69"/></expr_stmt></block></then></if>
    }<pos:position pos:line="23" pos:column="6"/></block></for>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">match<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">!=<pos:position pos:line="25" pos:column="15"/></operator> <name pos:line="25" pos:column="16">invert<pos:position pos:line="25" pos:column="22"/></name></expr>)<pos:position pos:line="25" pos:column="23"/></condition><then pos:line="25" pos:column="23">
    <block pos:line="26" pos:column="5">{
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">count_only<pos:position pos:line="27" pos:column="19"/></name></expr>)<pos:position pos:line="27" pos:column="20"/></condition><then pos:line="27" pos:column="20"> <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="21">count<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">++<pos:position pos:line="27" pos:column="28"/></operator></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt></block></then>

    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><name pos:line="29" pos:column="14">filenames_only<pos:position pos:line="29" pos:column="28"/></name></expr>)<pos:position pos:line="29" pos:column="29"/></condition><then pos:line="29" pos:column="29">
      <block pos:line="30" pos:column="7">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">fprintf<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><name pos:line="31" pos:column="15">stdout<pos:position pos:line="31" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="23">"%s\n"<pos:position pos:line="31" pos:column="29"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="31" pos:column="31">(<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="32">name<pos:position pos:line="31" pos:column="36"/></name> <operator pos:line="31" pos:column="37">==<pos:position pos:line="31" pos:column="39"/></operator> <name pos:line="31" pos:column="40">NULL<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">)<pos:position pos:line="31" pos:column="45"/></operator></expr>?<pos:position pos:line="31" pos:column="46"/></condition><then pos:line="31" pos:column="46"> <expr><literal type="string" pos:line="31" pos:column="47">"&lt;stdin&gt;"<pos:position pos:line="31" pos:column="62"/></literal></expr> <pos:position pos:line="31" pos:column="57"/></then><else pos:line="31" pos:column="57">: <expr><name pos:line="31" pos:column="59">name<pos:position pos:line="31" pos:column="63"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="31" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="65"/></expr_stmt>
      <return pos:line="32" pos:column="7">return <expr><literal type="number" pos:line="32" pos:column="14">0<pos:position pos:line="32" pos:column="15"/></literal></expr>;<pos:position pos:line="32" pos:column="16"/></return>
      }<pos:position pos:line="33" pos:column="8"/></block></then></if></elseif>

    <elseif pos:line="35" pos:column="5">else <if pos:line="35" pos:column="10">if <condition pos:line="35" pos:column="13">(<expr><name pos:line="35" pos:column="14">silent<pos:position pos:line="35" pos:column="20"/></name></expr>)<pos:position pos:line="35" pos:column="21"/></condition><then pos:line="35" pos:column="21"> <block type="pseudo"><return pos:line="35" pos:column="22">return <expr><literal type="number" pos:line="35" pos:column="29">0<pos:position pos:line="35" pos:column="30"/></literal></expr>;<pos:position pos:line="35" pos:column="31"/></return></block></then></if></elseif>

    <else pos:line="37" pos:column="5">else
      <block pos:line="38" pos:column="7">{
      <if pos:line="39" pos:column="7">if <condition pos:line="39" pos:column="10">(<expr><name pos:line="39" pos:column="11">name<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">!=<pos:position pos:line="39" pos:column="18"/></operator> <name pos:line="39" pos:column="19">NULL<pos:position pos:line="39" pos:column="23"/></name></expr>)<pos:position pos:line="39" pos:column="24"/></condition><then pos:line="39" pos:column="24"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="25">fprintf<pos:position pos:line="39" pos:column="32"/></name><argument_list pos:line="39" pos:column="32">(<argument><expr><name pos:line="39" pos:column="33">stdout<pos:position pos:line="39" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="41">"%s:"<pos:position pos:line="39" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="48">name<pos:position pos:line="39" pos:column="52"/></name></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="54"/></expr_stmt></block></then></if>
      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><name pos:line="40" pos:column="11">number<pos:position pos:line="40" pos:column="17"/></name></expr>)<pos:position pos:line="40" pos:column="18"/></condition><then pos:line="40" pos:column="18"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="19">fprintf<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><name pos:line="40" pos:column="27">stdout<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="35">"%d:"<pos:position pos:line="40" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="42">linenumber<pos:position pos:line="40" pos:column="52"/></name></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">fprintf<pos:position pos:line="41" pos:column="14"/></name><argument_list pos:line="41" pos:column="14">(<argument><expr><name pos:line="41" pos:column="15">stdout<pos:position pos:line="41" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="23">"%s\n"<pos:position pos:line="41" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="31">buffer<pos:position pos:line="41" pos:column="37"/></name></expr></argument>)<pos:position pos:line="41" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt>
      }<pos:position pos:line="42" pos:column="8"/></block></else></if>

    <expr_stmt><expr><name pos:line="44" pos:column="5">rc<pos:position pos:line="44" pos:column="7"/></name> <operator pos:line="44" pos:column="8">=<pos:position pos:line="44" pos:column="9"/></operator> <literal type="number" pos:line="44" pos:column="10">0<pos:position pos:line="44" pos:column="11"/></literal></expr>;<pos:position pos:line="44" pos:column="12"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
  }<pos:position pos:line="46" pos:column="4"/></block></while>

<if pos:line="48" pos:column="1">if <condition pos:line="48" pos:column="4">(<expr><name pos:line="48" pos:column="5">count_only<pos:position pos:line="48" pos:column="15"/></name></expr>)<pos:position pos:line="48" pos:column="16"/></condition><then pos:line="48" pos:column="16">
  <block pos:line="49" pos:column="3">{
  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><name pos:line="50" pos:column="7">name<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">!=<pos:position pos:line="50" pos:column="14"/></operator> <name pos:line="50" pos:column="15">NULL<pos:position pos:line="50" pos:column="19"/></name></expr>)<pos:position pos:line="50" pos:column="20"/></condition><then pos:line="50" pos:column="20"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="21">fprintf<pos:position pos:line="50" pos:column="28"/></name><argument_list pos:line="50" pos:column="28">(<argument><expr><name pos:line="50" pos:column="29">stdout<pos:position pos:line="50" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="37">"%s:"<pos:position pos:line="50" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="44">name<pos:position pos:line="50" pos:column="48"/></name></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="50"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">fprintf<pos:position pos:line="51" pos:column="10"/></name><argument_list pos:line="51" pos:column="10">(<argument><expr><name pos:line="51" pos:column="11">stdout<pos:position pos:line="51" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="19">"%d\n"<pos:position pos:line="51" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="27">count<pos:position pos:line="51" pos:column="32"/></name></expr></argument>)<pos:position pos:line="51" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="34"/></expr_stmt>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>

<return pos:line="54" pos:column="1">return <expr><name pos:line="54" pos:column="8">rc<pos:position pos:line="54" pos:column="10"/></name></expr>;<pos:position pos:line="54" pos:column="11"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_6977.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">hc_watchdog_callback<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">state<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">void<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">data<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                                         <parameter><decl><type><name pos:line="2" pos:column="42">apr_pool_t<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">pool<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rv<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">APR_SUCCESS<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_time_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">now<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><call><name pos:line="5" pos:column="22">apr_time_now<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">()<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">proxy_balancer<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">balancer<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">sctx_t<pos:position pos:line="7" pos:column="11"/></name> <modifier pos:line="7" pos:column="12">*<pos:position pos:line="7" pos:column="13"/></modifier></type><name pos:line="7" pos:column="13">ctx<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><operator pos:line="7" pos:column="19">(<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">sctx_t<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></operator><operator pos:line="7" pos:column="28">)<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">data<pos:position pos:line="7" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">server_rec<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">s<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><name><name pos:line="8" pos:column="21">ctx<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">-&gt;<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="26">s<pos:position pos:line="8" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">proxy_server_conf<pos:position pos:line="9" pos:column="22"/></name> <modifier pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></modifier></type><name pos:line="9" pos:column="24">conf<pos:position pos:line="9" pos:column="28"/></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
    <switch pos:line="10" pos:column="5">switch <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">state<pos:position pos:line="10" pos:column="18"/></name></expr>)<pos:position pos:line="10" pos:column="19"/></condition> <block pos:line="10" pos:column="20">{
        <case pos:line="11" pos:column="9">case <expr><name pos:line="11" pos:column="14">AP_WATCHDOG_STATE_STARTING<pos:position pos:line="11" pos:column="40"/></name></expr>:<pos:position pos:line="11" pos:column="41"/></case>
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">ap_log_error<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">APLOG_MARK<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">APLOG_DEBUG<pos:position pos:line="12" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="51">0<pos:position pos:line="12" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="54">s<pos:position pos:line="12" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="57">APLOGNO<pos:position pos:line="12" pos:column="64"/></name><argument_list pos:line="12" pos:column="64">(<argument><expr><literal type="number" pos:line="12" pos:column="65">03258<pos:position pos:line="12" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="71"/></argument_list></call>
                         <literal type="string" pos:line="13" pos:column="26">"%s watchdog started."<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>,
                         <argument><expr><name pos:line="14" pos:column="26">HCHECK_WATHCHDOG_NAME<pos:position pos:line="14" pos:column="47"/></name></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>
<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">HC_USE_THREADS<pos:position pos:line="15" pos:column="19"/></name></expr></cpp:if>
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><name><name pos:line="16" pos:column="17">ctx<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">-&gt;<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="22">tpsize<pos:position pos:line="16" pos:column="28"/></name></name></expr>)<pos:position pos:line="16" pos:column="29"/></condition><then pos:line="16" pos:column="29"> <block pos:line="16" pos:column="30">{
                <expr_stmt><expr><name pos:line="17" pos:column="17">rv<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator>  <call><name pos:line="17" pos:column="23">apr_thread_pool_create<pos:position pos:line="17" pos:column="45"/></name><argument_list pos:line="17" pos:column="45">(<argument><expr><operator pos:line="17" pos:column="46">&amp;<pos:position pos:line="17" pos:column="51"/></operator><name><name pos:line="17" pos:column="47">ctx<pos:position pos:line="17" pos:column="50"/></name><operator pos:line="17" pos:column="50">-&gt;<pos:position pos:line="17" pos:column="55"/></operator><name pos:line="17" pos:column="52">hctp<pos:position pos:line="17" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="58">ctx<pos:position pos:line="17" pos:column="61"/></name><operator pos:line="17" pos:column="61">-&gt;<pos:position pos:line="17" pos:column="66"/></operator><name pos:line="17" pos:column="63">tpsize<pos:position pos:line="17" pos:column="69"/></name></name></expr></argument>,
                                             <argument><expr><name><name pos:line="18" pos:column="46">ctx<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">-&gt;<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="51">tpsize<pos:position pos:line="18" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="59">ctx<pos:position pos:line="18" pos:column="62"/></name><operator pos:line="18" pos:column="62">-&gt;<pos:position pos:line="18" pos:column="67"/></operator><name pos:line="18" pos:column="64">p<pos:position pos:line="18" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="67"/></expr_stmt>
                <if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">rv<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">!=<pos:position pos:line="19" pos:column="26"/></operator> <name pos:line="19" pos:column="27">APR_SUCCESS<pos:position pos:line="19" pos:column="38"/></name></expr>)<pos:position pos:line="19" pos:column="39"/></condition><then pos:line="19" pos:column="39"> <block pos:line="19" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="20" pos:column="21">ap_log_error<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><name pos:line="20" pos:column="34">APLOG_MARK<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="46">APLOG_INFO<pos:position pos:line="20" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="58">rv<pos:position pos:line="20" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="62">s<pos:position pos:line="20" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="65">APLOGNO<pos:position pos:line="20" pos:column="72"/></name><argument_list pos:line="20" pos:column="72">(<argument><expr><literal type="number" pos:line="20" pos:column="73">03312<pos:position pos:line="20" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="79"/></argument_list></call>
                                 <literal type="string" pos:line="21" pos:column="34">"apr_thread_pool_create() with %d threads failed"<pos:position pos:line="21" pos:column="83"/></literal></expr></argument>,
                                 <argument><expr><name><name pos:line="22" pos:column="34">ctx<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">-&gt;<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="39">tpsize<pos:position pos:line="22" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
                    <comment type="block" pos:line="23" pos:column="21">/* we can continue on without the threadpools */</comment>
                    <expr_stmt><expr><name><name pos:line="24" pos:column="21">ctx<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">-&gt;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="26">hctp<pos:position pos:line="24" pos:column="30"/></name></name> <operator pos:line="24" pos:column="31">=<pos:position pos:line="24" pos:column="32"/></operator> <name pos:line="24" pos:column="33">NULL<pos:position pos:line="24" pos:column="37"/></name></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
                }<pos:position pos:line="25" pos:column="18"/></block></then> <else pos:line="25" pos:column="19">else <block pos:line="25" pos:column="24">{
                    <expr_stmt><expr><call><name pos:line="26" pos:column="21">ap_log_error<pos:position pos:line="26" pos:column="33"/></name><argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">APLOG_MARK<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="46">APLOG_DEBUG<pos:position pos:line="26" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="59">rv<pos:position pos:line="26" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="63">s<pos:position pos:line="26" pos:column="64"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="66">APLOGNO<pos:position pos:line="26" pos:column="73"/></name><argument_list pos:line="26" pos:column="73">(<argument><expr><literal type="number" pos:line="26" pos:column="74">03313<pos:position pos:line="26" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="80"/></argument_list></call>
                                 <literal type="string" pos:line="27" pos:column="34">"apr_thread_pool_create() with %d threads succeeded"<pos:position pos:line="27" pos:column="86"/></literal></expr></argument>,
                                 <argument><expr><name><name pos:line="28" pos:column="34">ctx<pos:position pos:line="28" pos:column="37"/></name><operator pos:line="28" pos:column="37">-&gt;<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="39">tpsize<pos:position pos:line="28" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
                }<pos:position pos:line="29" pos:column="18"/></block></else></if>
            }<pos:position pos:line="30" pos:column="14"/></block></then> <else pos:line="30" pos:column="15">else <block pos:line="30" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="31" pos:column="17">ap_log_error<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">APLOG_MARK<pos:position pos:line="31" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="42">APLOG_DEBUG<pos:position pos:line="31" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="55">rv<pos:position pos:line="31" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="59">s<pos:position pos:line="31" pos:column="60"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="62">APLOGNO<pos:position pos:line="31" pos:column="69"/></name><argument_list pos:line="31" pos:column="69">(<argument><expr><literal type="number" pos:line="31" pos:column="70">03314<pos:position pos:line="31" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="76"/></argument_list></call>
                             <literal type="string" pos:line="32" pos:column="30">"Skipping apr_thread_pool_create()"<pos:position pos:line="32" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="67"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="33" pos:column="17">ctx<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">-&gt;<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="22">hctp<pos:position pos:line="33" pos:column="26"/></name></name> <operator pos:line="33" pos:column="27">=<pos:position pos:line="33" pos:column="28"/></operator> <name pos:line="33" pos:column="29">NULL<pos:position pos:line="33" pos:column="33"/></name></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="34" pos:column="14"/></block></else></if>

<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>
            <break pos:line="37" pos:column="13">break;<pos:position pos:line="37" pos:column="19"/></break>

        <case pos:line="39" pos:column="9">case <expr><name pos:line="39" pos:column="14">AP_WATCHDOG_STATE_RUNNING<pos:position pos:line="39" pos:column="39"/></name></expr>:<pos:position pos:line="39" pos:column="40"/></case>
            <comment type="block" pos:line="40" pos:column="13">/* loop thru all workers */</comment>
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">ap_log_error<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">APLOG_MARK<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="38">APLOG_TRACE2<pos:position pos:line="41" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="52">0<pos:position pos:line="41" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="55">s<pos:position pos:line="41" pos:column="56"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="42" pos:column="26">"Run of %s watchdog."<pos:position pos:line="42" pos:column="47"/></literal></expr></argument>,
                         <argument><expr><name pos:line="43" pos:column="26">HCHECK_WATHCHDOG_NAME<pos:position pos:line="43" pos:column="47"/></name></expr></argument>)<pos:position pos:line="43" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="49"/></expr_stmt>
            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><name pos:line="44" pos:column="17">s<pos:position pos:line="44" pos:column="18"/></name></expr>)<pos:position pos:line="44" pos:column="19"/></condition><then pos:line="44" pos:column="19"> <block pos:line="44" pos:column="20">{
                <decl_stmt><decl><type><name pos:line="45" pos:column="17">int<pos:position pos:line="45" pos:column="20"/></name></type> <name pos:line="45" pos:column="21">i<pos:position pos:line="45" pos:column="22"/></name></decl>;<pos:position pos:line="45" pos:column="23"/></decl_stmt>
                <expr_stmt><expr><name pos:line="46" pos:column="17">conf<pos:position pos:line="46" pos:column="21"/></name> <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <operator pos:line="46" pos:column="24">(<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="25">proxy_server_conf<pos:position pos:line="46" pos:column="42"/></name> <operator pos:line="46" pos:column="43">*<pos:position pos:line="46" pos:column="44"/></operator><operator pos:line="46" pos:column="44">)<pos:position pos:line="46" pos:column="45"/></operator> <call><name pos:line="46" pos:column="46">ap_get_module_config<pos:position pos:line="46" pos:column="66"/></name><argument_list pos:line="46" pos:column="66">(<argument><expr><name><name pos:line="46" pos:column="67">s<pos:position pos:line="46" pos:column="68"/></name><operator pos:line="46" pos:column="68">-&gt;<pos:position pos:line="46" pos:column="73"/></operator><name pos:line="46" pos:column="70">module_config<pos:position pos:line="46" pos:column="83"/></name></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="85">&amp;<pos:position pos:line="46" pos:column="90"/></operator><name pos:line="46" pos:column="86">proxy_module<pos:position pos:line="46" pos:column="98"/></name></expr></argument>)<pos:position pos:line="46" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="100"/></expr_stmt>
                <expr_stmt><expr><name pos:line="47" pos:column="17">balancer<pos:position pos:line="47" pos:column="25"/></name> <operator pos:line="47" pos:column="26">=<pos:position pos:line="47" pos:column="27"/></operator> <operator pos:line="47" pos:column="28">(<pos:position pos:line="47" pos:column="29"/></operator><name pos:line="47" pos:column="29">proxy_balancer<pos:position pos:line="47" pos:column="43"/></name> <operator pos:line="47" pos:column="44">*<pos:position pos:line="47" pos:column="45"/></operator><operator pos:line="47" pos:column="45">)<pos:position pos:line="47" pos:column="46"/></operator><name><name pos:line="47" pos:column="46">conf<pos:position pos:line="47" pos:column="50"/></name><operator pos:line="47" pos:column="50">-&gt;<pos:position pos:line="47" pos:column="55"/></operator><name pos:line="47" pos:column="52">balancers<pos:position pos:line="47" pos:column="61"/></name><operator pos:line="47" pos:column="61">-&gt;<pos:position pos:line="47" pos:column="66"/></operator><name pos:line="47" pos:column="63">elts<pos:position pos:line="47" pos:column="67"/></name></name></expr>;<pos:position pos:line="47" pos:column="68"/></expr_stmt>
                <for pos:line="48" pos:column="17">for <control pos:line="48" pos:column="21">(<init><expr><name pos:line="48" pos:column="22">i<pos:position pos:line="48" pos:column="23"/></name> <operator pos:line="48" pos:column="24">=<pos:position pos:line="48" pos:column="25"/></operator> <literal type="number" pos:line="48" pos:column="26">0<pos:position pos:line="48" pos:column="27"/></literal></expr>;<pos:position pos:line="48" pos:column="28"/></init> <condition><expr><name pos:line="48" pos:column="29">i<pos:position pos:line="48" pos:column="30"/></name> <operator pos:line="48" pos:column="31">&lt;<pos:position pos:line="48" pos:column="35"/></operator> <name><name pos:line="48" pos:column="33">conf<pos:position pos:line="48" pos:column="37"/></name><operator pos:line="48" pos:column="37">-&gt;<pos:position pos:line="48" pos:column="42"/></operator><name pos:line="48" pos:column="39">balancers<pos:position pos:line="48" pos:column="48"/></name><operator pos:line="48" pos:column="48">-&gt;<pos:position pos:line="48" pos:column="53"/></operator><name pos:line="48" pos:column="50">nelts<pos:position pos:line="48" pos:column="55"/></name></name></expr>;<pos:position pos:line="48" pos:column="56"/></condition> <incr><expr><name pos:line="48" pos:column="57">i<pos:position pos:line="48" pos:column="58"/></name><operator pos:line="48" pos:column="58">++<pos:position pos:line="48" pos:column="60"/></operator></expr><operator pos:line="48" pos:column="60">,<pos:position pos:line="48" pos:column="61"/></operator> <expr><name pos:line="48" pos:column="62">balancer<pos:position pos:line="48" pos:column="70"/></name><operator pos:line="48" pos:column="70">++<pos:position pos:line="48" pos:column="72"/></operator></expr></incr>)<pos:position pos:line="48" pos:column="73"/></control> <block pos:line="48" pos:column="74">{
                    <decl_stmt><decl><type><name pos:line="49" pos:column="21">int<pos:position pos:line="49" pos:column="24"/></name></type> <name pos:line="49" pos:column="25">n<pos:position pos:line="49" pos:column="26"/></name></decl>;<pos:position pos:line="49" pos:column="27"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="50" pos:column="21">proxy_worker<pos:position pos:line="50" pos:column="33"/></name> <modifier pos:line="50" pos:column="34">*<pos:position pos:line="50" pos:column="35"/></modifier><modifier pos:line="50" pos:column="35">*<pos:position pos:line="50" pos:column="36"/></modifier></type><name pos:line="50" pos:column="36">workers<pos:position pos:line="50" pos:column="43"/></name></decl>;<pos:position pos:line="50" pos:column="44"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="51" pos:column="21">proxy_worker<pos:position pos:line="51" pos:column="33"/></name> <modifier pos:line="51" pos:column="34">*<pos:position pos:line="51" pos:column="35"/></modifier></type><name pos:line="51" pos:column="35">worker<pos:position pos:line="51" pos:column="41"/></name></decl>;<pos:position pos:line="51" pos:column="42"/></decl_stmt>
                    <comment type="block" pos:line="52" pos:column="21">/* Have any new balancers or workers been added dynamically? */</comment>
                    <expr_stmt><expr><call><name pos:line="53" pos:column="21">ap_proxy_sync_balancer<pos:position pos:line="53" pos:column="43"/></name><argument_list pos:line="53" pos:column="43">(<argument><expr><name pos:line="53" pos:column="44">balancer<pos:position pos:line="53" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="54">s<pos:position pos:line="53" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="57">conf<pos:position pos:line="53" pos:column="61"/></name></expr></argument>)<pos:position pos:line="53" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="63"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="54" pos:column="21">workers<pos:position pos:line="54" pos:column="28"/></name> <operator pos:line="54" pos:column="29">=<pos:position pos:line="54" pos:column="30"/></operator> <operator pos:line="54" pos:column="31">(<pos:position pos:line="54" pos:column="32"/></operator><name pos:line="54" pos:column="32">proxy_worker<pos:position pos:line="54" pos:column="44"/></name> <operator pos:line="54" pos:column="45">*<pos:position pos:line="54" pos:column="46"/></operator><operator pos:line="54" pos:column="46">*<pos:position pos:line="54" pos:column="47"/></operator><operator pos:line="54" pos:column="47">)<pos:position pos:line="54" pos:column="48"/></operator><name><name pos:line="54" pos:column="48">balancer<pos:position pos:line="54" pos:column="56"/></name><operator pos:line="54" pos:column="56">-&gt;<pos:position pos:line="54" pos:column="61"/></operator><name pos:line="54" pos:column="58">workers<pos:position pos:line="54" pos:column="65"/></name><operator pos:line="54" pos:column="65">-&gt;<pos:position pos:line="54" pos:column="70"/></operator><name pos:line="54" pos:column="67">elts<pos:position pos:line="54" pos:column="71"/></name></name></expr>;<pos:position pos:line="54" pos:column="72"/></expr_stmt>
                    <for pos:line="55" pos:column="21">for <control pos:line="55" pos:column="25">(<init><expr><name pos:line="55" pos:column="26">n<pos:position pos:line="55" pos:column="27"/></name> <operator pos:line="55" pos:column="28">=<pos:position pos:line="55" pos:column="29"/></operator> <literal type="number" pos:line="55" pos:column="30">0<pos:position pos:line="55" pos:column="31"/></literal></expr>;<pos:position pos:line="55" pos:column="32"/></init> <condition><expr><name pos:line="55" pos:column="33">n<pos:position pos:line="55" pos:column="34"/></name> <operator pos:line="55" pos:column="35">&lt;<pos:position pos:line="55" pos:column="39"/></operator> <name><name pos:line="55" pos:column="37">balancer<pos:position pos:line="55" pos:column="45"/></name><operator pos:line="55" pos:column="45">-&gt;<pos:position pos:line="55" pos:column="50"/></operator><name pos:line="55" pos:column="47">workers<pos:position pos:line="55" pos:column="54"/></name><operator pos:line="55" pos:column="54">-&gt;<pos:position pos:line="55" pos:column="59"/></operator><name pos:line="55" pos:column="56">nelts<pos:position pos:line="55" pos:column="61"/></name></name></expr>;<pos:position pos:line="55" pos:column="62"/></condition> <incr><expr><name pos:line="55" pos:column="63">n<pos:position pos:line="55" pos:column="64"/></name><operator pos:line="55" pos:column="64">++<pos:position pos:line="55" pos:column="66"/></operator></expr></incr>)<pos:position pos:line="55" pos:column="67"/></control> <block pos:line="55" pos:column="68">{
                        <expr_stmt><expr><name pos:line="56" pos:column="25">worker<pos:position pos:line="56" pos:column="31"/></name> <operator pos:line="56" pos:column="32">=<pos:position pos:line="56" pos:column="33"/></operator> <operator pos:line="56" pos:column="34">*<pos:position pos:line="56" pos:column="35"/></operator><name pos:line="56" pos:column="35">workers<pos:position pos:line="56" pos:column="42"/></name></expr>;<pos:position pos:line="56" pos:column="43"/></expr_stmt>
                        <if pos:line="57" pos:column="25">if <condition pos:line="57" pos:column="28">(<expr><operator pos:line="57" pos:column="29">!<pos:position pos:line="57" pos:column="30"/></operator><call><name pos:line="57" pos:column="30">PROXY_WORKER_IS<pos:position pos:line="57" pos:column="45"/></name><argument_list pos:line="57" pos:column="45">(<argument><expr><name pos:line="57" pos:column="46">worker<pos:position pos:line="57" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="54">PROXY_WORKER_STOPPED<pos:position pos:line="57" pos:column="74"/></name></expr></argument>)<pos:position pos:line="57" pos:column="75"/></argument_list></call> <operator pos:line="57" pos:column="76">&amp;&amp;<pos:position pos:line="57" pos:column="86"/></operator>
                           <operator pos:line="58" pos:column="28">(<pos:position pos:line="58" pos:column="29"/></operator><name><name pos:line="58" pos:column="29">worker<pos:position pos:line="58" pos:column="35"/></name><operator pos:line="58" pos:column="35">-&gt;<pos:position pos:line="58" pos:column="40"/></operator><name pos:line="58" pos:column="37">s<pos:position pos:line="58" pos:column="38"/></name><operator pos:line="58" pos:column="38">-&gt;<pos:position pos:line="58" pos:column="43"/></operator><name pos:line="58" pos:column="40">method<pos:position pos:line="58" pos:column="46"/></name></name> <operator pos:line="58" pos:column="47">!=<pos:position pos:line="58" pos:column="49"/></operator> <name pos:line="58" pos:column="50">NONE<pos:position pos:line="58" pos:column="54"/></name><operator pos:line="58" pos:column="54">)<pos:position pos:line="58" pos:column="55"/></operator> <operator pos:line="58" pos:column="56">&amp;&amp;<pos:position pos:line="58" pos:column="66"/></operator>
                           <operator pos:line="59" pos:column="28">(<pos:position pos:line="59" pos:column="29"/></operator><name pos:line="59" pos:column="29">now<pos:position pos:line="59" pos:column="32"/></name> <operator pos:line="59" pos:column="33">&gt;<pos:position pos:line="59" pos:column="37"/></operator> <name><name pos:line="59" pos:column="35">worker<pos:position pos:line="59" pos:column="41"/></name><operator pos:line="59" pos:column="41">-&gt;<pos:position pos:line="59" pos:column="46"/></operator><name pos:line="59" pos:column="43">s<pos:position pos:line="59" pos:column="44"/></name><operator pos:line="59" pos:column="44">-&gt;<pos:position pos:line="59" pos:column="49"/></operator><name pos:line="59" pos:column="46">updated<pos:position pos:line="59" pos:column="53"/></name></name> <operator pos:line="59" pos:column="54">+<pos:position pos:line="59" pos:column="55"/></operator> <name><name pos:line="59" pos:column="56">worker<pos:position pos:line="59" pos:column="62"/></name><operator pos:line="59" pos:column="62">-&gt;<pos:position pos:line="59" pos:column="67"/></operator><name pos:line="59" pos:column="64">s<pos:position pos:line="59" pos:column="65"/></name><operator pos:line="59" pos:column="65">-&gt;<pos:position pos:line="59" pos:column="70"/></operator><name pos:line="59" pos:column="67">interval<pos:position pos:line="59" pos:column="75"/></name></name><operator pos:line="59" pos:column="75">)<pos:position pos:line="59" pos:column="76"/></operator></expr>)<pos:position pos:line="59" pos:column="77"/></condition><then pos:line="59" pos:column="77"> <block pos:line="59" pos:column="78">{
                            <decl_stmt><decl><type><name pos:line="60" pos:column="29">baton_t<pos:position pos:line="60" pos:column="36"/></name> <modifier pos:line="60" pos:column="37">*<pos:position pos:line="60" pos:column="38"/></modifier></type><name pos:line="60" pos:column="38">baton<pos:position pos:line="60" pos:column="43"/></name></decl>;<pos:position pos:line="60" pos:column="44"/></decl_stmt>
                            <comment type="block" pos:line="61" pos:column="29">/* This pool must last the lifetime of the (possible) thread */</comment>
                            <decl_stmt><decl><type><name pos:line="62" pos:column="29">apr_pool_t<pos:position pos:line="62" pos:column="39"/></name> <modifier pos:line="62" pos:column="40">*<pos:position pos:line="62" pos:column="41"/></modifier></type><name pos:line="62" pos:column="41">ptemp<pos:position pos:line="62" pos:column="46"/></name></decl>;<pos:position pos:line="62" pos:column="47"/></decl_stmt>
                            <expr_stmt><expr><call><name pos:line="63" pos:column="29">apr_pool_create<pos:position pos:line="63" pos:column="44"/></name><argument_list pos:line="63" pos:column="44">(<argument><expr><operator pos:line="63" pos:column="45">&amp;<pos:position pos:line="63" pos:column="50"/></operator><name pos:line="63" pos:column="46">ptemp<pos:position pos:line="63" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="53">ctx<pos:position pos:line="63" pos:column="56"/></name><operator pos:line="63" pos:column="56">-&gt;<pos:position pos:line="63" pos:column="61"/></operator><name pos:line="63" pos:column="58">p<pos:position pos:line="63" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="61"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="64" pos:column="29">ap_log_error<pos:position pos:line="64" pos:column="41"/></name><argument_list pos:line="64" pos:column="41">(<argument><expr><name pos:line="64" pos:column="42">APLOG_MARK<pos:position pos:line="64" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="54">APLOG_TRACE2<pos:position pos:line="64" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="68">0<pos:position pos:line="64" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="71">s<pos:position pos:line="64" pos:column="72"/></name></expr></argument>,
                                         <argument><expr><literal type="string" pos:line="65" pos:column="42">"Checking %s worker: %s  [%d] (%pp)"<pos:position pos:line="65" pos:column="78"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="80">balancer<pos:position pos:line="65" pos:column="88"/></name><operator pos:line="65" pos:column="88">-&gt;<pos:position pos:line="65" pos:column="93"/></operator><name pos:line="65" pos:column="90">s<pos:position pos:line="65" pos:column="91"/></name><operator pos:line="65" pos:column="91">-&gt;<pos:position pos:line="65" pos:column="96"/></operator><name pos:line="65" pos:column="93">name<pos:position pos:line="65" pos:column="97"/></name></name></expr></argument>,
                                         <argument><expr><name><name pos:line="66" pos:column="42">worker<pos:position pos:line="66" pos:column="48"/></name><operator pos:line="66" pos:column="48">-&gt;<pos:position pos:line="66" pos:column="53"/></operator><name pos:line="66" pos:column="50">s<pos:position pos:line="66" pos:column="51"/></name><operator pos:line="66" pos:column="51">-&gt;<pos:position pos:line="66" pos:column="56"/></operator><name pos:line="66" pos:column="53">name<pos:position pos:line="66" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="59">worker<pos:position pos:line="66" pos:column="65"/></name><operator pos:line="66" pos:column="65">-&gt;<pos:position pos:line="66" pos:column="70"/></operator><name pos:line="66" pos:column="67">s<pos:position pos:line="66" pos:column="68"/></name><operator pos:line="66" pos:column="68">-&gt;<pos:position pos:line="66" pos:column="73"/></operator><name pos:line="66" pos:column="70">method<pos:position pos:line="66" pos:column="76"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="78">worker<pos:position pos:line="66" pos:column="84"/></name></expr></argument>)<pos:position pos:line="66" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="86"/></expr_stmt>

                            <if pos:line="68" pos:column="29">if <condition pos:line="68" pos:column="32">(<expr><operator pos:line="68" pos:column="33">(<pos:position pos:line="68" pos:column="34"/></operator><name pos:line="68" pos:column="34">rv<pos:position pos:line="68" pos:column="36"/></name> <operator pos:line="68" pos:column="37">=<pos:position pos:line="68" pos:column="38"/></operator> <call><name pos:line="68" pos:column="39">hc_init_worker<pos:position pos:line="68" pos:column="53"/></name><argument_list pos:line="68" pos:column="53">(<argument><expr><name pos:line="68" pos:column="54">ctx<pos:position pos:line="68" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="59">worker<pos:position pos:line="68" pos:column="65"/></name></expr></argument>)<pos:position pos:line="68" pos:column="66"/></argument_list></call><operator pos:line="68" pos:column="66">)<pos:position pos:line="68" pos:column="67"/></operator> <operator pos:line="68" pos:column="68">!=<pos:position pos:line="68" pos:column="70"/></operator> <name pos:line="68" pos:column="71">APR_SUCCESS<pos:position pos:line="68" pos:column="82"/></name></expr>)<pos:position pos:line="68" pos:column="83"/></condition><then pos:line="68" pos:column="83"> <block pos:line="68" pos:column="84">{
                                <return pos:line="69" pos:column="33">return <expr><name pos:line="69" pos:column="40">rv<pos:position pos:line="69" pos:column="42"/></name></expr>;<pos:position pos:line="69" pos:column="43"/></return>
                            }<pos:position pos:line="70" pos:column="30"/></block></then></if>
                            <expr_stmt><expr><name pos:line="71" pos:column="29">baton<pos:position pos:line="71" pos:column="34"/></name> <operator pos:line="71" pos:column="35">=<pos:position pos:line="71" pos:column="36"/></operator> <call><name pos:line="71" pos:column="37">apr_palloc<pos:position pos:line="71" pos:column="47"/></name><argument_list pos:line="71" pos:column="47">(<argument><expr><name pos:line="71" pos:column="48">ptemp<pos:position pos:line="71" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="71" pos:column="55">sizeof<argument_list pos:line="71" pos:column="61">(<argument><expr><name pos:line="71" pos:column="62">baton_t<pos:position pos:line="71" pos:column="69"/></name></expr></argument>)<pos:position pos:line="71" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="71" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="72"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="72" pos:column="29">baton<pos:position pos:line="72" pos:column="34"/></name><operator pos:line="72" pos:column="34">-&gt;<pos:position pos:line="72" pos:column="39"/></operator><name pos:line="72" pos:column="36">ctx<pos:position pos:line="72" pos:column="39"/></name></name> <operator pos:line="72" pos:column="40">=<pos:position pos:line="72" pos:column="41"/></operator> <name pos:line="72" pos:column="42">ctx<pos:position pos:line="72" pos:column="45"/></name></expr>;<pos:position pos:line="72" pos:column="46"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="73" pos:column="29">baton<pos:position pos:line="73" pos:column="34"/></name><operator pos:line="73" pos:column="34">-&gt;<pos:position pos:line="73" pos:column="39"/></operator><name pos:line="73" pos:column="36">now<pos:position pos:line="73" pos:column="39"/></name></name> <operator pos:line="73" pos:column="40">=<pos:position pos:line="73" pos:column="41"/></operator> <name pos:line="73" pos:column="42">now<pos:position pos:line="73" pos:column="45"/></name></expr>;<pos:position pos:line="73" pos:column="46"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="74" pos:column="29">baton<pos:position pos:line="74" pos:column="34"/></name><operator pos:line="74" pos:column="34">-&gt;<pos:position pos:line="74" pos:column="39"/></operator><name pos:line="74" pos:column="36">worker<pos:position pos:line="74" pos:column="42"/></name></name> <operator pos:line="74" pos:column="43">=<pos:position pos:line="74" pos:column="44"/></operator> <name pos:line="74" pos:column="45">worker<pos:position pos:line="74" pos:column="51"/></name></expr>;<pos:position pos:line="74" pos:column="52"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="75" pos:column="29">baton<pos:position pos:line="75" pos:column="34"/></name><operator pos:line="75" pos:column="34">-&gt;<pos:position pos:line="75" pos:column="39"/></operator><name pos:line="75" pos:column="36">ptemp<pos:position pos:line="75" pos:column="41"/></name></name> <operator pos:line="75" pos:column="42">=<pos:position pos:line="75" pos:column="43"/></operator> <name pos:line="75" pos:column="44">ptemp<pos:position pos:line="75" pos:column="49"/></name></expr>;<pos:position pos:line="75" pos:column="50"/></expr_stmt>

                            <if pos:line="77" pos:column="29">if <condition pos:line="77" pos:column="32">(<expr><operator pos:line="77" pos:column="33">!<pos:position pos:line="77" pos:column="34"/></operator><name><name pos:line="77" pos:column="34">ctx<pos:position pos:line="77" pos:column="37"/></name><operator pos:line="77" pos:column="37">-&gt;<pos:position pos:line="77" pos:column="42"/></operator><name pos:line="77" pos:column="39">hctp<pos:position pos:line="77" pos:column="43"/></name></name></expr>)<pos:position pos:line="77" pos:column="44"/></condition><then pos:line="77" pos:column="44"> <block pos:line="77" pos:column="45">{
                                <expr_stmt><expr><call><name pos:line="78" pos:column="33">hc_check<pos:position pos:line="78" pos:column="41"/></name><argument_list pos:line="78" pos:column="41">(<argument><expr><name pos:line="78" pos:column="42">NULL<pos:position pos:line="78" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="48">baton<pos:position pos:line="78" pos:column="53"/></name></expr></argument>)<pos:position pos:line="78" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="55"/></expr_stmt>
                            }<pos:position pos:line="79" pos:column="30"/></block></then>
<cpp:if pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">if<pos:position pos:line="80" pos:column="4"/></cpp:directive> <expr><name pos:line="80" pos:column="5">HC_USE_THREADS<pos:position pos:line="80" pos:column="19"/></name></expr></cpp:if>
                            <else pos:line="81" pos:column="29">else <block pos:line="81" pos:column="34">{
                                <expr_stmt><expr><name pos:line="82" pos:column="33">rv<pos:position pos:line="82" pos:column="35"/></name> <operator pos:line="82" pos:column="36">=<pos:position pos:line="82" pos:column="37"/></operator> <call><name pos:line="82" pos:column="38">apr_thread_pool_push<pos:position pos:line="82" pos:column="58"/></name><argument_list pos:line="82" pos:column="58">(<argument><expr><name><name pos:line="82" pos:column="59">ctx<pos:position pos:line="82" pos:column="62"/></name><operator pos:line="82" pos:column="62">-&gt;<pos:position pos:line="82" pos:column="67"/></operator><name pos:line="82" pos:column="64">hctp<pos:position pos:line="82" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="70">hc_check<pos:position pos:line="82" pos:column="78"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="80">(<pos:position pos:line="82" pos:column="81"/></operator><name pos:line="82" pos:column="81">void<pos:position pos:line="82" pos:column="85"/></name> <operator pos:line="82" pos:column="86">*<pos:position pos:line="82" pos:column="87"/></operator><operator pos:line="82" pos:column="87">)<pos:position pos:line="82" pos:column="88"/></operator><name pos:line="82" pos:column="88">baton<pos:position pos:line="82" pos:column="93"/></name></expr></argument>,
                                                          <argument><expr><name pos:line="83" pos:column="59">APR_THREAD_TASK_PRIORITY_NORMAL<pos:position pos:line="83" pos:column="90"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="92">NULL<pos:position pos:line="83" pos:column="96"/></name></expr></argument>)<pos:position pos:line="83" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="98"/></expr_stmt>
                            }<pos:position pos:line="84" pos:column="30"/></block></else></if>
<cpp:endif pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">endif<pos:position pos:line="85" pos:column="7"/></cpp:directive></cpp:endif>
                        }<pos:position pos:line="86" pos:column="26"/></block></then></if>
                        <expr_stmt><expr><name pos:line="87" pos:column="25">workers<pos:position pos:line="87" pos:column="32"/></name><operator pos:line="87" pos:column="32">++<pos:position pos:line="87" pos:column="34"/></operator></expr>;<pos:position pos:line="87" pos:column="35"/></expr_stmt>
                    }<pos:position pos:line="88" pos:column="22"/></block></for>
                }<pos:position pos:line="89" pos:column="18"/></block></for>
                <comment type="block" pos:line="90" pos:column="17">/* s = s-&gt;next; */</comment>
            }<pos:position pos:line="91" pos:column="14"/></block></then></if>
            <break pos:line="92" pos:column="13">break;<pos:position pos:line="92" pos:column="19"/></break>

        <case pos:line="94" pos:column="9">case <expr><name pos:line="94" pos:column="14">AP_WATCHDOG_STATE_STOPPING<pos:position pos:line="94" pos:column="40"/></name></expr>:<pos:position pos:line="94" pos:column="41"/></case>
            <expr_stmt><expr><call><name pos:line="95" pos:column="13">ap_log_error<pos:position pos:line="95" pos:column="25"/></name><argument_list pos:line="95" pos:column="25">(<argument><expr><name pos:line="95" pos:column="26">APLOG_MARK<pos:position pos:line="95" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="38">APLOG_DEBUG<pos:position pos:line="95" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="51">0<pos:position pos:line="95" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="54">s<pos:position pos:line="95" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="95" pos:column="57">APLOGNO<pos:position pos:line="95" pos:column="64"/></name><argument_list pos:line="95" pos:column="64">(<argument><expr><literal type="number" pos:line="95" pos:column="65">03261<pos:position pos:line="95" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="71"/></argument_list></call>
                         <literal type="string" pos:line="96" pos:column="26">"stopping %s watchdog."<pos:position pos:line="96" pos:column="49"/></literal></expr></argument>,
                         <argument><expr><name pos:line="97" pos:column="26">HCHECK_WATHCHDOG_NAME<pos:position pos:line="97" pos:column="47"/></name></expr></argument>)<pos:position pos:line="97" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="49"/></expr_stmt>
<cpp:if pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">if<pos:position pos:line="98" pos:column="4"/></cpp:directive> <expr><name pos:line="98" pos:column="5">HC_USE_THREADS<pos:position pos:line="98" pos:column="19"/></name></expr></cpp:if>
            <expr_stmt><expr><name pos:line="99" pos:column="13">rv<pos:position pos:line="99" pos:column="15"/></name> <operator pos:line="99" pos:column="16">=<pos:position pos:line="99" pos:column="17"/></operator>  <call><name pos:line="99" pos:column="19">apr_thread_pool_destroy<pos:position pos:line="99" pos:column="42"/></name><argument_list pos:line="99" pos:column="42">(<argument><expr><name><name pos:line="99" pos:column="43">ctx<pos:position pos:line="99" pos:column="46"/></name><operator pos:line="99" pos:column="46">-&gt;<pos:position pos:line="99" pos:column="51"/></operator><name pos:line="99" pos:column="48">hctp<pos:position pos:line="99" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="54"/></expr_stmt>
            <if pos:line="100" pos:column="13">if <condition pos:line="100" pos:column="16">(<expr><name pos:line="100" pos:column="17">rv<pos:position pos:line="100" pos:column="19"/></name> <operator pos:line="100" pos:column="20">!=<pos:position pos:line="100" pos:column="22"/></operator> <name pos:line="100" pos:column="23">APR_SUCCESS<pos:position pos:line="100" pos:column="34"/></name></expr>)<pos:position pos:line="100" pos:column="35"/></condition><then pos:line="100" pos:column="35"> <block pos:line="100" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="101" pos:column="17">ap_log_error<pos:position pos:line="101" pos:column="29"/></name><argument_list pos:line="101" pos:column="29">(<argument><expr><name pos:line="101" pos:column="30">APLOG_MARK<pos:position pos:line="101" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="42">APLOG_INFO<pos:position pos:line="101" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="54">rv<pos:position pos:line="101" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="58">s<pos:position pos:line="101" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="101" pos:column="61">APLOGNO<pos:position pos:line="101" pos:column="68"/></name><argument_list pos:line="101" pos:column="68">(<argument><expr><literal type="number" pos:line="101" pos:column="69">03315<pos:position pos:line="101" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="75"/></argument_list></call>
                             <literal type="string" pos:line="102" pos:column="30">"apr_thread_pool_destroy() failed"<pos:position pos:line="102" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="66"/></expr_stmt>
            }<pos:position pos:line="103" pos:column="14"/></block></then></if>
<cpp:endif pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">endif<pos:position pos:line="104" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name><name pos:line="105" pos:column="13">ctx<pos:position pos:line="105" pos:column="16"/></name><operator pos:line="105" pos:column="16">-&gt;<pos:position pos:line="105" pos:column="21"/></operator><name pos:line="105" pos:column="18">hctp<pos:position pos:line="105" pos:column="22"/></name></name> <operator pos:line="105" pos:column="23">=<pos:position pos:line="105" pos:column="24"/></operator> <name pos:line="105" pos:column="25">NULL<pos:position pos:line="105" pos:column="29"/></name></expr>;<pos:position pos:line="105" pos:column="30"/></expr_stmt>
            <break pos:line="106" pos:column="13">break;<pos:position pos:line="106" pos:column="19"/></break>
    }<pos:position pos:line="107" pos:column="6"/></block></switch>
    <return pos:line="108" pos:column="5">return <expr><name pos:line="108" pos:column="12">rv<pos:position pos:line="108" pos:column="14"/></name></expr>;<pos:position pos:line="108" pos:column="15"/></return>
}<pos:position pos:line="109" pos:column="2"/></block></function></unit>

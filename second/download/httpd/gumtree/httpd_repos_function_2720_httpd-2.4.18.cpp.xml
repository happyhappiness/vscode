<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2720_httpd-2.4.18.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">fix_skipto<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">request_rec<pos:position pos:line="1" pos:column="35"/></name><modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type> <name pos:line="1" pos:column="37">r<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">xml2ctx<pos:position pos:line="1" pos:column="47"/></name><modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type> <name pos:line="1" pos:column="49">ctx<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">xml2cfg<pos:position pos:line="4" pos:column="12"/></name><modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type> <name pos:line="4" pos:column="14">cfg<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><call><name pos:line="4" pos:column="20">ap_get_module_config<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">(<argument><expr><name><name pos:line="4" pos:column="41">r<pos:position pos:line="4" pos:column="42"/></name><operator pos:line="4" pos:column="42">-&gt;<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="44">per_dir_config<pos:position pos:line="4" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="60">&amp;<pos:position pos:line="4" pos:column="65"/></operator><name pos:line="4" pos:column="61">xml2enc_module<pos:position pos:line="4" pos:column="75"/></name></expr></argument>)<pos:position pos:line="4" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="77"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><name><name pos:line="5" pos:column="10">cfg<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">-&gt;<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="15">skipto<pos:position pos:line="5" pos:column="21"/></name></name> <operator pos:line="5" pos:column="22">!=<pos:position pos:line="5" pos:column="24"/></operator> <name pos:line="5" pos:column="25">NULL<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">)<pos:position pos:line="5" pos:column="30"/></operator> <operator pos:line="5" pos:column="31">&amp;&amp;<pos:position pos:line="5" pos:column="41"/></operator> <operator pos:line="5" pos:column="34">(<pos:position pos:line="5" pos:column="35"/></operator><name><name pos:line="5" pos:column="35">ctx<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">-&gt;<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="40">flags<pos:position pos:line="5" pos:column="45"/></name></name> <operator pos:line="5" pos:column="46">&amp;<pos:position pos:line="5" pos:column="51"/></operator> <name pos:line="5" pos:column="48">ENC_SKIPTO<pos:position pos:line="5" pos:column="58"/></name><operator pos:line="5" pos:column="58">)<pos:position pos:line="5" pos:column="59"/></operator></expr>)<pos:position pos:line="5" pos:column="60"/></condition><then pos:line="5" pos:column="60"> <block pos:line="5" pos:column="61">{
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">found<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name><modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type> <name pos:line="7" pos:column="15">p<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><call><name pos:line="7" pos:column="19">ap_strchr<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name><name pos:line="7" pos:column="29">ctx<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">buf<pos:position pos:line="7" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="7" pos:column="39">'&lt;'<pos:position pos:line="7" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">tattr<pos:position pos:line="8" pos:column="14"/></name><modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type> <name pos:line="8" pos:column="16">starts<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><operator pos:line="8" pos:column="25">(<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">tattr<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">*<pos:position pos:line="8" pos:column="32"/></operator><operator pos:line="8" pos:column="32">)<pos:position pos:line="8" pos:column="33"/></operator> <name><name pos:line="8" pos:column="34">cfg<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">-&gt;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="39">skipto<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">-&gt;<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="47">elts<pos:position pos:line="8" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="52"/></decl_stmt>
        <while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><operator pos:line="9" pos:column="16">!<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">found<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&amp;&amp;<pos:position pos:line="9" pos:column="33"/></operator> <name pos:line="9" pos:column="26">p<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">&amp;&amp;<pos:position pos:line="9" pos:column="38"/></operator> <operator pos:line="9" pos:column="31">*<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">p<pos:position pos:line="9" pos:column="33"/></name></expr>)<pos:position pos:line="9" pos:column="34"/></condition> <block pos:line="9" pos:column="35">{
            <decl_stmt><decl><type><name pos:line="10" pos:column="13">int<pos:position pos:line="10" pos:column="16"/></name></type> <name pos:line="10" pos:column="17">i<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
            <for pos:line="11" pos:column="13">for <control pos:line="11" pos:column="17">(<init><expr><name pos:line="11" pos:column="18">i<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <literal type="number" pos:line="11" pos:column="22">0<pos:position pos:line="11" pos:column="23"/></literal></expr>;<pos:position pos:line="11" pos:column="24"/></init> <condition><expr><name pos:line="11" pos:column="25">i<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">&lt;<pos:position pos:line="11" pos:column="31"/></operator> <name><name pos:line="11" pos:column="29">cfg<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">-&gt;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="34">skipto<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">-&gt;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="42">nelts<pos:position pos:line="11" pos:column="47"/></name></name></expr>;<pos:position pos:line="11" pos:column="48"/></condition> <incr><expr><operator pos:line="11" pos:column="49">++<pos:position pos:line="11" pos:column="51"/></operator><name pos:line="11" pos:column="51">i<pos:position pos:line="11" pos:column="52"/></name></expr></incr>)<pos:position pos:line="11" pos:column="53"/></control> <block pos:line="11" pos:column="54">{
                <if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><call><name pos:line="12" pos:column="22">strncasecmp<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">p<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">+<pos:position pos:line="12" pos:column="36"/></operator><literal type="number" pos:line="12" pos:column="36">1<pos:position pos:line="12" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="39">starts<pos:position pos:line="12" pos:column="45"/></name><index pos:line="12" pos:column="45">[<expr><name pos:line="12" pos:column="46">i<pos:position pos:line="12" pos:column="47"/></name></expr>]<pos:position pos:line="12" pos:column="48"/></index></name><operator pos:line="12" pos:column="48">.<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="49">val<pos:position pos:line="12" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="54">strlen<pos:position pos:line="12" pos:column="60"/></name><argument_list pos:line="12" pos:column="60">(<argument><expr><name><name pos:line="12" pos:column="61">starts<pos:position pos:line="12" pos:column="67"/></name><index pos:line="12" pos:column="67">[<expr><name pos:line="12" pos:column="68">i<pos:position pos:line="12" pos:column="69"/></name></expr>]<pos:position pos:line="12" pos:column="70"/></index></name><operator pos:line="12" pos:column="70">.<pos:position pos:line="12" pos:column="71"/></operator><name pos:line="12" pos:column="71">val<pos:position pos:line="12" pos:column="74"/></name></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="77"/></condition><then pos:line="12" pos:column="77"> <block pos:line="12" pos:column="78">{
                    <comment type="block" pos:line="13" pos:column="21">/* found a starting element. Strip all that comes before. */</comment>
                    <decl_stmt><decl><type><name pos:line="14" pos:column="21">apr_bucket<pos:position pos:line="14" pos:column="31"/></name><modifier pos:line="14" pos:column="31">*<pos:position pos:line="14" pos:column="32"/></modifier></type> <name pos:line="14" pos:column="33">b<pos:position pos:line="14" pos:column="34"/></name></decl>;<pos:position pos:line="14" pos:column="35"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="15" pos:column="21">apr_bucket<pos:position pos:line="15" pos:column="31"/></name><modifier pos:line="15" pos:column="31">*<pos:position pos:line="15" pos:column="32"/></modifier></type> <name pos:line="15" pos:column="33">bstart<pos:position pos:line="15" pos:column="39"/></name></decl>;<pos:position pos:line="15" pos:column="40"/></decl_stmt>
                    <expr_stmt><expr><name pos:line="16" pos:column="21">rv<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <call><name pos:line="16" pos:column="26">apr_brigade_partition<pos:position pos:line="16" pos:column="47"/></name><argument_list pos:line="16" pos:column="47">(<argument><expr><name><name pos:line="16" pos:column="48">ctx<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">-&gt;<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="53">bbsave<pos:position pos:line="16" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="61">(<pos:position pos:line="16" pos:column="62"/></operator><name pos:line="16" pos:column="62">p<pos:position pos:line="16" pos:column="63"/></name><operator pos:line="16" pos:column="63">-<pos:position pos:line="16" pos:column="64"/></operator><name><name pos:line="16" pos:column="64">ctx<pos:position pos:line="16" pos:column="67"/></name><operator pos:line="16" pos:column="67">-&gt;<pos:position pos:line="16" pos:column="72"/></operator><name pos:line="16" pos:column="69">buf<pos:position pos:line="16" pos:column="72"/></name></name><operator pos:line="16" pos:column="72">)<pos:position pos:line="16" pos:column="73"/></operator></expr></argument>,
                                               <argument><expr><operator pos:line="17" pos:column="48">&amp;<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="49">bstart<pos:position pos:line="17" pos:column="55"/></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="18" pos:column="21">ap_assert<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">rv<pos:position pos:line="18" pos:column="33"/></name> <operator pos:line="18" pos:column="34">==<pos:position pos:line="18" pos:column="36"/></operator> <name pos:line="18" pos:column="37">APR_SUCCESS<pos:position pos:line="18" pos:column="48"/></name></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="50"/></expr_stmt>
                    <while pos:line="19" pos:column="21">while <condition pos:line="19" pos:column="27">(<expr><name pos:line="19" pos:column="28">b<pos:position pos:line="19" pos:column="29"/></name> <operator pos:line="19" pos:column="30">=<pos:position pos:line="19" pos:column="31"/></operator> <call><name pos:line="19" pos:column="32">APR_BRIGADE_FIRST<pos:position pos:line="19" pos:column="49"/></name><argument_list pos:line="19" pos:column="49">(<argument><expr><name><name pos:line="19" pos:column="50">ctx<pos:position pos:line="19" pos:column="53"/></name><operator pos:line="19" pos:column="53">-&gt;<pos:position pos:line="19" pos:column="58"/></operator><name pos:line="19" pos:column="55">bbsave<pos:position pos:line="19" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr><operator pos:line="19" pos:column="62">,<pos:position pos:line="19" pos:column="63"/></operator> <expr><name pos:line="19" pos:column="64">b<pos:position pos:line="19" pos:column="65"/></name> <operator pos:line="19" pos:column="66">!=<pos:position pos:line="19" pos:column="68"/></operator> <name pos:line="19" pos:column="69">bstart<pos:position pos:line="19" pos:column="75"/></name></expr>)<pos:position pos:line="19" pos:column="76"/></condition> <block pos:line="19" pos:column="77">{
                        <expr_stmt><expr><call><name pos:line="20" pos:column="25">apr_bucket_delete<pos:position pos:line="20" pos:column="42"/></name><argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">b<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
                    }<pos:position pos:line="21" pos:column="22"/></block></while>
                    <expr_stmt><expr><name><name pos:line="22" pos:column="21">ctx<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">-&gt;<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="26">bytes<pos:position pos:line="22" pos:column="31"/></name></name> <operator pos:line="22" pos:column="32">-=<pos:position pos:line="22" pos:column="34"/></operator> <operator pos:line="22" pos:column="35">(<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="36">p<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">-<pos:position pos:line="22" pos:column="38"/></operator><name><name pos:line="22" pos:column="38">ctx<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">-&gt;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="43">buf<pos:position pos:line="22" pos:column="46"/></name></name><operator pos:line="22" pos:column="46">)<pos:position pos:line="22" pos:column="47"/></operator></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="23" pos:column="21">ctx<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="26">buf<pos:position pos:line="23" pos:column="29"/></name></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <name pos:line="23" pos:column="32">p<pos:position pos:line="23" pos:column="33"/></name></expr> ;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="24" pos:column="21">found<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">=<pos:position pos:line="24" pos:column="28"/></operator> <literal type="number" pos:line="24" pos:column="29">1<pos:position pos:line="24" pos:column="30"/></literal></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="25" pos:column="21">ap_log_rerror<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name pos:line="25" pos:column="35">APLOG_MARK<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="47">APLOG_DEBUG<pos:position pos:line="25" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="60">0<pos:position pos:line="25" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="63">r<pos:position pos:line="25" pos:column="64"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="66">APLOGNO<pos:position pos:line="25" pos:column="73"/></name><argument_list pos:line="25" pos:column="73">(<argument><expr><literal type="number" pos:line="25" pos:column="74">01428<pos:position pos:line="25" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="80"/></argument_list></call>
                                  <literal type="string" pos:line="26" pos:column="35">"Skipped to first &lt;%s&gt; element"<pos:position pos:line="26" pos:column="72"/></literal></expr></argument>,
                                  <argument><expr><name><name pos:line="27" pos:column="35">starts<pos:position pos:line="27" pos:column="41"/></name><index pos:line="27" pos:column="41">[<expr><name pos:line="27" pos:column="42">i<pos:position pos:line="27" pos:column="43"/></name></expr>]<pos:position pos:line="27" pos:column="44"/></index></name><operator pos:line="27" pos:column="44">.<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="45">val<pos:position pos:line="27" pos:column="48"/></name></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr> ;<pos:position pos:line="27" pos:column="51"/></expr_stmt>
                    <break pos:line="28" pos:column="21">break;<pos:position pos:line="28" pos:column="27"/></break>
                }<pos:position pos:line="29" pos:column="18"/></block></then></if>
            }<pos:position pos:line="30" pos:column="14"/></block></for>
            <expr_stmt><expr><name pos:line="31" pos:column="13">p<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <call><name pos:line="31" pos:column="17">ap_strchr<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name pos:line="31" pos:column="27">p<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">+<pos:position pos:line="31" pos:column="29"/></operator><literal type="number" pos:line="31" pos:column="29">1<pos:position pos:line="31" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="31" pos:column="32">'&lt;'<pos:position pos:line="31" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></while>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">p<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">==<pos:position pos:line="33" pos:column="17"/></operator> <name pos:line="33" pos:column="18">NULL<pos:position pos:line="33" pos:column="22"/></name></expr>)<pos:position pos:line="33" pos:column="23"/></condition><then pos:line="33" pos:column="23"> <block pos:line="33" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">ap_log_rerror<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">APLOG_MARK<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">APLOG_WARNING<pos:position pos:line="34" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="54">0<pos:position pos:line="34" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="57">r<pos:position pos:line="34" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="60">APLOGNO<pos:position pos:line="34" pos:column="67"/></name><argument_list pos:line="34" pos:column="67">(<argument><expr><literal type="number" pos:line="34" pos:column="68">01429<pos:position pos:line="34" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="74"/></argument_list></call>
                          <literal type="string" pos:line="35" pos:column="27">"Failed to find start of recognised HTML!"<pos:position pos:line="35" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_535_httpd-2.0.55.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ssl_pphrase_Handle_CB<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">buf<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">int<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">bufsize<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">verify<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">void<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">srv<pos:position pos:line="3" pos:column="14"/></name> <init pos:line="3" pos:column="15">= <expr><name pos:line="3" pos:column="17">ssl_pphrase_server_rec<pos:position pos:line="3" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
<cpp:else pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">else<pos:position pos:line="4" pos:column="6"/></cpp:directive></cpp:else>
<function><type><name pos:line="5" pos:column="1">int<pos:position pos:line="5" pos:column="4"/></name></type> <name pos:line="5" pos:column="5">ssl_pphrase_Handle_CB<pos:position pos:line="5" pos:column="26"/></name><parameter_list pos:line="5" pos:column="26">(<parameter><decl><type><name pos:line="5" pos:column="27">char<pos:position pos:line="5" pos:column="31"/></name> <modifier pos:line="5" pos:column="32">*<pos:position pos:line="5" pos:column="33"/></modifier></type><name pos:line="5" pos:column="33">buf<pos:position pos:line="5" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="38">int<pos:position pos:line="5" pos:column="41"/></name></type> <name pos:line="5" pos:column="42">bufsize<pos:position pos:line="5" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="51">int<pos:position pos:line="5" pos:column="54"/></name></type> <name pos:line="5" pos:column="55">verify<pos:position pos:line="5" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="63">void<pos:position pos:line="5" pos:column="67"/></name> <modifier pos:line="5" pos:column="68">*<pos:position pos:line="5" pos:column="69"/></modifier></type><name pos:line="5" pos:column="69">srv<pos:position pos:line="5" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="73"/></parameter_list>
<block pos:line="6" pos:column="1">{
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">SSLModConfigRec<pos:position pos:line="8" pos:column="20"/></name> <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type><name pos:line="8" pos:column="22">mc<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">server_rec<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">s<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_pool_t<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">p<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_array_header_t<pos:position pos:line="11" pos:column="23"/></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">aPassPhrase<pos:position pos:line="11" pos:column="36"/></name></decl>;<pos:position pos:line="11" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">SSLSrvConfigRec<pos:position pos:line="12" pos:column="20"/></name> <modifier pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></modifier></type><name pos:line="12" pos:column="22">sc<pos:position pos:line="12" pos:column="24"/></name></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name> <modifier pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></modifier></type><name pos:line="13" pos:column="10">pnPassPhraseCur<pos:position pos:line="13" pos:column="25"/></name></decl>;<pos:position pos:line="13" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier><modifier pos:line="14" pos:column="11">*<pos:position pos:line="14" pos:column="12"/></modifier></type><name pos:line="14" pos:column="12">cppPassPhraseCur<pos:position pos:line="14" pos:column="28"/></name></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name> <modifier pos:line="15" pos:column="10">*<pos:position pos:line="15" pos:column="11"/></modifier></type><name pos:line="15" pos:column="11">cpVHostID<pos:position pos:line="15" pos:column="20"/></name></decl>;<pos:position pos:line="15" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name> <modifier pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></modifier></type><name pos:line="16" pos:column="11">cpAlgoType<pos:position pos:line="16" pos:column="21"/></name></decl>;<pos:position pos:line="16" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name> <modifier pos:line="17" pos:column="9">*<pos:position pos:line="17" pos:column="10"/></modifier></type><name pos:line="17" pos:column="10">pnPassPhraseDialog<pos:position pos:line="17" pos:column="28"/></name></decl>;<pos:position pos:line="17" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name> <modifier pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></modifier></type><name pos:line="18" pos:column="10">pnPassPhraseDialogCur<pos:position pos:line="18" pos:column="31"/></name></decl>;<pos:position pos:line="18" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">BOOL<pos:position pos:line="19" pos:column="9"/></name> <modifier pos:line="19" pos:column="10">*<pos:position pos:line="19" pos:column="11"/></modifier></type><name pos:line="19" pos:column="11">pbPassPhraseDialogOnce<pos:position pos:line="19" pos:column="33"/></name></decl>;<pos:position pos:line="19" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">char<pos:position pos:line="20" pos:column="9"/></name> <modifier pos:line="20" pos:column="10">*<pos:position pos:line="20" pos:column="11"/></modifier></type><name pos:line="20" pos:column="11">cpp<pos:position pos:line="20" pos:column="14"/></name></decl>;<pos:position pos:line="20" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">int<pos:position pos:line="21" pos:column="8"/></name></type> <name pos:line="21" pos:column="9">len<pos:position pos:line="21" pos:column="12"/></name> <init pos:line="21" pos:column="13">= <expr><operator pos:line="21" pos:column="15">-<pos:position pos:line="21" pos:column="16"/></operator><literal type="number" pos:line="21" pos:column="16">1<pos:position pos:line="21" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><name pos:line="23" pos:column="5">mc<pos:position pos:line="23" pos:column="7"/></name> <operator pos:line="23" pos:column="8">=<pos:position pos:line="23" pos:column="9"/></operator> <call><name pos:line="23" pos:column="10">myModConfig<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><operator pos:line="23" pos:column="22">(<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">server_rec<pos:position pos:line="23" pos:column="33"/></name> <operator pos:line="23" pos:column="34">*<pos:position pos:line="23" pos:column="35"/></operator><operator pos:line="23" pos:column="35">)<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="36">srv<pos:position pos:line="23" pos:column="39"/></name></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="41"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/*
     * Reconnect to the context of ssl_phrase_Handle()
     */</comment>
    <expr_stmt><expr><name pos:line="28" pos:column="5">s<pos:position pos:line="28" pos:column="6"/></name>                      <operator pos:line="28" pos:column="28">=<pos:position pos:line="28" pos:column="29"/></operator> <call><name pos:line="28" pos:column="30">myCtxVarGet<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">(<argument><expr><name pos:line="28" pos:column="42">mc<pos:position pos:line="28" pos:column="44"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="28" pos:column="47">1<pos:position pos:line="28" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="50">server_rec<pos:position pos:line="28" pos:column="60"/></name> <operator pos:line="28" pos:column="61">*<pos:position pos:line="28" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">p<pos:position pos:line="29" pos:column="6"/></name>                      <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <call><name pos:line="29" pos:column="30">myCtxVarGet<pos:position pos:line="29" pos:column="41"/></name><argument_list pos:line="29" pos:column="41">(<argument><expr><name pos:line="29" pos:column="42">mc<pos:position pos:line="29" pos:column="44"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="29" pos:column="47">2<pos:position pos:line="29" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="50">apr_pool_t<pos:position pos:line="29" pos:column="60"/></name> <operator pos:line="29" pos:column="61">*<pos:position pos:line="29" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">aPassPhrase<pos:position pos:line="30" pos:column="16"/></name>            <operator pos:line="30" pos:column="28">=<pos:position pos:line="30" pos:column="29"/></operator> <call><name pos:line="30" pos:column="30">myCtxVarGet<pos:position pos:line="30" pos:column="41"/></name><argument_list pos:line="30" pos:column="41">(<argument><expr><name pos:line="30" pos:column="42">mc<pos:position pos:line="30" pos:column="44"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="30" pos:column="47">3<pos:position pos:line="30" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="50">apr_array_header_t<pos:position pos:line="30" pos:column="68"/></name> <operator pos:line="30" pos:column="69">*<pos:position pos:line="30" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="30" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">pnPassPhraseCur<pos:position pos:line="31" pos:column="20"/></name>        <operator pos:line="31" pos:column="28">=<pos:position pos:line="31" pos:column="29"/></operator> <call><name pos:line="31" pos:column="30">myCtxVarGet<pos:position pos:line="31" pos:column="41"/></name><argument_list pos:line="31" pos:column="41">(<argument><expr><name pos:line="31" pos:column="42">mc<pos:position pos:line="31" pos:column="44"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="31" pos:column="47">4<pos:position pos:line="31" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="50">int<pos:position pos:line="31" pos:column="53"/></name> <operator pos:line="31" pos:column="54">*<pos:position pos:line="31" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">cppPassPhraseCur<pos:position pos:line="32" pos:column="21"/></name>       <operator pos:line="32" pos:column="28">=<pos:position pos:line="32" pos:column="29"/></operator> <call><name pos:line="32" pos:column="30">myCtxVarGet<pos:position pos:line="32" pos:column="41"/></name><argument_list pos:line="32" pos:column="41">(<argument><expr><name pos:line="32" pos:column="42">mc<pos:position pos:line="32" pos:column="44"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="32" pos:column="47">5<pos:position pos:line="32" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="50">char<pos:position pos:line="32" pos:column="54"/></name> <operator pos:line="32" pos:column="55">*<pos:position pos:line="32" pos:column="56"/></operator><operator pos:line="32" pos:column="56">*<pos:position pos:line="32" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">cpVHostID<pos:position pos:line="33" pos:column="14"/></name>              <operator pos:line="33" pos:column="28">=<pos:position pos:line="33" pos:column="29"/></operator> <call><name pos:line="33" pos:column="30">myCtxVarGet<pos:position pos:line="33" pos:column="41"/></name><argument_list pos:line="33" pos:column="41">(<argument><expr><name pos:line="33" pos:column="42">mc<pos:position pos:line="33" pos:column="44"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="33" pos:column="47">6<pos:position pos:line="33" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="50">char<pos:position pos:line="33" pos:column="54"/></name> <operator pos:line="33" pos:column="55">*<pos:position pos:line="33" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">cpAlgoType<pos:position pos:line="34" pos:column="15"/></name>             <operator pos:line="34" pos:column="28">=<pos:position pos:line="34" pos:column="29"/></operator> <call><name pos:line="34" pos:column="30">myCtxVarGet<pos:position pos:line="34" pos:column="41"/></name><argument_list pos:line="34" pos:column="41">(<argument><expr><name pos:line="34" pos:column="42">mc<pos:position pos:line="34" pos:column="44"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="34" pos:column="47">7<pos:position pos:line="34" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="50">char<pos:position pos:line="34" pos:column="54"/></name> <operator pos:line="34" pos:column="55">*<pos:position pos:line="34" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">pnPassPhraseDialog<pos:position pos:line="35" pos:column="23"/></name>     <operator pos:line="35" pos:column="28">=<pos:position pos:line="35" pos:column="29"/></operator> <call><name pos:line="35" pos:column="30">myCtxVarGet<pos:position pos:line="35" pos:column="41"/></name><argument_list pos:line="35" pos:column="41">(<argument><expr><name pos:line="35" pos:column="42">mc<pos:position pos:line="35" pos:column="44"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="35" pos:column="47">8<pos:position pos:line="35" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="50">int<pos:position pos:line="35" pos:column="53"/></name> <operator pos:line="35" pos:column="54">*<pos:position pos:line="35" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">pnPassPhraseDialogCur<pos:position pos:line="36" pos:column="26"/></name>  <operator pos:line="36" pos:column="28">=<pos:position pos:line="36" pos:column="29"/></operator> <call><name pos:line="36" pos:column="30">myCtxVarGet<pos:position pos:line="36" pos:column="41"/></name><argument_list pos:line="36" pos:column="41">(<argument><expr><name pos:line="36" pos:column="42">mc<pos:position pos:line="36" pos:column="44"/></name></expr></argument>,  <argument><expr><literal type="number" pos:line="36" pos:column="47">9<pos:position pos:line="36" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="50">int<pos:position pos:line="36" pos:column="53"/></name> <operator pos:line="36" pos:column="54">*<pos:position pos:line="36" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">pbPassPhraseDialogOnce<pos:position pos:line="37" pos:column="27"/></name> <operator pos:line="37" pos:column="28">=<pos:position pos:line="37" pos:column="29"/></operator> <call><name pos:line="37" pos:column="30">myCtxVarGet<pos:position pos:line="37" pos:column="41"/></name><argument_list pos:line="37" pos:column="41">(<argument><expr><name pos:line="37" pos:column="42">mc<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="46">10<pos:position pos:line="37" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="50">BOOL<pos:position pos:line="37" pos:column="54"/></name> <operator pos:line="37" pos:column="55">*<pos:position pos:line="37" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="37" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">sc<pos:position pos:line="38" pos:column="7"/></name>                     <operator pos:line="38" pos:column="28">=<pos:position pos:line="38" pos:column="29"/></operator> <call><name pos:line="38" pos:column="30">mySrvConfig<pos:position pos:line="38" pos:column="41"/></name><argument_list pos:line="38" pos:column="41">(<argument><expr><name pos:line="38" pos:column="42">s<pos:position pos:line="38" pos:column="43"/></name></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="40" pos:column="5">(<pos:position pos:line="40" pos:column="6"/></operator><operator pos:line="40" pos:column="6">*<pos:position pos:line="40" pos:column="7"/></operator><name pos:line="40" pos:column="7">pnPassPhraseDialog<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">)<pos:position pos:line="40" pos:column="26"/></operator><operator pos:line="40" pos:column="26">++<pos:position pos:line="40" pos:column="28"/></operator></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="41" pos:column="5">(<pos:position pos:line="41" pos:column="6"/></operator><operator pos:line="41" pos:column="6">*<pos:position pos:line="41" pos:column="7"/></operator><name pos:line="41" pos:column="7">pnPassPhraseDialogCur<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">)<pos:position pos:line="41" pos:column="29"/></operator><operator pos:line="41" pos:column="29">++<pos:position pos:line="41" pos:column="31"/></operator></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="43" pos:column="5">/*
     * When remembered pass phrases are available use them...
     */</comment>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">(<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">cpp<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <call><name pos:line="46" pos:column="16">pphrase_array_get<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">aPassPhrase<pos:position pos:line="46" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="47">*<pos:position pos:line="46" pos:column="48"/></operator><name pos:line="46" pos:column="48">pnPassPhraseCur<pos:position pos:line="46" pos:column="63"/></name></expr></argument>)<pos:position pos:line="46" pos:column="64"/></argument_list></call><operator pos:line="46" pos:column="64">)<pos:position pos:line="46" pos:column="65"/></operator> <operator pos:line="46" pos:column="66">!=<pos:position pos:line="46" pos:column="68"/></operator> <name pos:line="46" pos:column="69">NULL<pos:position pos:line="46" pos:column="73"/></name></expr>)<pos:position pos:line="46" pos:column="74"/></condition><then pos:line="46" pos:column="74"> <block pos:line="46" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">apr_cpystrn<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name pos:line="47" pos:column="21">buf<pos:position pos:line="47" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="26">cpp<pos:position pos:line="47" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="31">bufsize<pos:position pos:line="47" pos:column="38"/></name></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="48" pos:column="9">len<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">=<pos:position pos:line="48" pos:column="14"/></operator> <call><name pos:line="48" pos:column="15">strlen<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">buf<pos:position pos:line="48" pos:column="25"/></name></expr></argument>)<pos:position pos:line="48" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="27"/></expr_stmt>
        <return pos:line="49" pos:column="9">return <expr><name pos:line="49" pos:column="16">len<pos:position pos:line="49" pos:column="19"/></name></expr>;<pos:position pos:line="49" pos:column="20"/></return>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="52" pos:column="5">/*
     * Builtin or Pipe dialog
     */</comment>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name><name pos:line="55" pos:column="9">sc<pos:position pos:line="55" pos:column="11"/></name><operator pos:line="55" pos:column="11">-&gt;<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="13">server<pos:position pos:line="55" pos:column="19"/></name><operator pos:line="55" pos:column="19">-&gt;<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="21">pphrase_dialog_type<pos:position pos:line="55" pos:column="40"/></name></name> <operator pos:line="55" pos:column="41">==<pos:position pos:line="55" pos:column="43"/></operator> <name pos:line="55" pos:column="44">SSL_PPTYPE_BUILTIN<pos:position pos:line="55" pos:column="62"/></name>
          <operator pos:line="56" pos:column="11">||<pos:position pos:line="56" pos:column="13"/></operator> <name><name pos:line="56" pos:column="14">sc<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">-&gt;<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="18">server<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">-&gt;<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="26">pphrase_dialog_type<pos:position pos:line="56" pos:column="45"/></name></name> <operator pos:line="56" pos:column="46">==<pos:position pos:line="56" pos:column="48"/></operator> <name pos:line="56" pos:column="49">SSL_PPTYPE_PIPE<pos:position pos:line="56" pos:column="64"/></name></expr>)<pos:position pos:line="56" pos:column="65"/></condition><then pos:line="56" pos:column="65"> <block pos:line="56" pos:column="66">{
        <decl_stmt><decl><type><name pos:line="57" pos:column="9">char<pos:position pos:line="57" pos:column="13"/></name> <modifier pos:line="57" pos:column="14">*<pos:position pos:line="57" pos:column="15"/></modifier></type><name pos:line="57" pos:column="15">prompt<pos:position pos:line="57" pos:column="21"/></name></decl>;<pos:position pos:line="57" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="58" pos:column="9">int<pos:position pos:line="58" pos:column="12"/></name></type> <name pos:line="58" pos:column="13">i<pos:position pos:line="58" pos:column="14"/></name></decl>;<pos:position pos:line="58" pos:column="15"/></decl_stmt>

        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name><name pos:line="60" pos:column="13">sc<pos:position pos:line="60" pos:column="15"/></name><operator pos:line="60" pos:column="15">-&gt;<pos:position pos:line="60" pos:column="20"/></operator><name pos:line="60" pos:column="17">server<pos:position pos:line="60" pos:column="23"/></name><operator pos:line="60" pos:column="23">-&gt;<pos:position pos:line="60" pos:column="28"/></operator><name pos:line="60" pos:column="25">pphrase_dialog_type<pos:position pos:line="60" pos:column="44"/></name></name> <operator pos:line="60" pos:column="45">==<pos:position pos:line="60" pos:column="47"/></operator> <name pos:line="60" pos:column="48">SSL_PPTYPE_PIPE<pos:position pos:line="60" pos:column="63"/></name></expr>)<pos:position pos:line="60" pos:column="64"/></condition><then pos:line="60" pos:column="64"> <block pos:line="60" pos:column="65">{
            <if pos:line="61" pos:column="13">if <condition pos:line="61" pos:column="16">(<expr><operator pos:line="61" pos:column="17">!<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="18">readtty<pos:position pos:line="61" pos:column="25"/></name></expr>)<pos:position pos:line="61" pos:column="26"/></condition><then pos:line="61" pos:column="26"> <block pos:line="61" pos:column="27">{
                <expr_stmt><expr><call><name pos:line="62" pos:column="17">ap_log_error<pos:position pos:line="62" pos:column="29"/></name><argument_list pos:line="62" pos:column="29">(<argument><expr><name pos:line="62" pos:column="30">APLOG_MARK<pos:position pos:line="62" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="42">APLOG_INFO<pos:position pos:line="62" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="54">0<pos:position pos:line="62" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="57">s<pos:position pos:line="62" pos:column="58"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="63" pos:column="30">"Init: Creating pass phrase dialog pipe child "<pos:position pos:line="63" pos:column="77"/></literal>
                             <literal type="string" pos:line="64" pos:column="30">"'%s'"<pos:position pos:line="64" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="38">sc<pos:position pos:line="64" pos:column="40"/></name><operator pos:line="64" pos:column="40">-&gt;<pos:position pos:line="64" pos:column="45"/></operator><name pos:line="64" pos:column="42">server<pos:position pos:line="64" pos:column="48"/></name><operator pos:line="64" pos:column="48">-&gt;<pos:position pos:line="64" pos:column="53"/></operator><name pos:line="64" pos:column="50">pphrase_dialog_path<pos:position pos:line="64" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="71"/></expr_stmt>
	        <if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><call><name pos:line="65" pos:column="21">ssl_pipe_child_create<pos:position pos:line="65" pos:column="42"/></name><argument_list pos:line="65" pos:column="42">(<argument><expr><name pos:line="65" pos:column="43">p<pos:position pos:line="65" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="46">sc<pos:position pos:line="65" pos:column="48"/></name><operator pos:line="65" pos:column="48">-&gt;<pos:position pos:line="65" pos:column="53"/></operator><name pos:line="65" pos:column="50">server<pos:position pos:line="65" pos:column="56"/></name><operator pos:line="65" pos:column="56">-&gt;<pos:position pos:line="65" pos:column="61"/></operator><name pos:line="65" pos:column="58">pphrase_dialog_path<pos:position pos:line="65" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="78"/></argument_list></call>
                        <operator pos:line="66" pos:column="25">!=<pos:position pos:line="66" pos:column="27"/></operator> <name pos:line="66" pos:column="28">APR_SUCCESS<pos:position pos:line="66" pos:column="39"/></name></expr>)<pos:position pos:line="66" pos:column="40"/></condition><then pos:line="66" pos:column="40"> <block pos:line="66" pos:column="41">{
                    <expr_stmt><expr><call><name pos:line="67" pos:column="21">ap_log_error<pos:position pos:line="67" pos:column="33"/></name><argument_list pos:line="67" pos:column="33">(<argument><expr><name pos:line="67" pos:column="34">APLOG_MARK<pos:position pos:line="67" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="46">APLOG_ERR<pos:position pos:line="67" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="57">0<pos:position pos:line="67" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="60">s<pos:position pos:line="67" pos:column="61"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="68" pos:column="34">"Init: Failed to create pass phrase pipe '%s'"<pos:position pos:line="68" pos:column="80"/></literal></expr></argument>,
                                 <argument><expr><name><name pos:line="69" pos:column="34">sc<pos:position pos:line="69" pos:column="36"/></name><operator pos:line="69" pos:column="36">-&gt;<pos:position pos:line="69" pos:column="41"/></operator><name pos:line="69" pos:column="38">server<pos:position pos:line="69" pos:column="44"/></name><operator pos:line="69" pos:column="44">-&gt;<pos:position pos:line="69" pos:column="49"/></operator><name pos:line="69" pos:column="46">pphrase_dialog_path<pos:position pos:line="69" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="67"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="70" pos:column="21">PEMerr<pos:position pos:line="70" pos:column="27"/></name><argument_list pos:line="70" pos:column="27">(<argument><expr><name pos:line="70" pos:column="28">PEM_F_DEF_CALLBACK<pos:position pos:line="70" pos:column="46"/></name></expr></argument>,<argument><expr><name pos:line="70" pos:column="47">PEM_R_PROBLEMS_GETTING_PASSWORD<pos:position pos:line="70" pos:column="78"/></name></expr></argument>)<pos:position pos:line="70" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="80"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="71" pos:column="21">memset<pos:position pos:line="71" pos:column="27"/></name><argument_list pos:line="71" pos:column="27">(<argument><expr><name pos:line="71" pos:column="28">buf<pos:position pos:line="71" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="33">0<pos:position pos:line="71" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="71" pos:column="36">(<pos:position pos:line="71" pos:column="37"/></operator><name pos:line="71" pos:column="37">unsigned<pos:position pos:line="71" pos:column="45"/></name> <name pos:line="71" pos:column="46">int<pos:position pos:line="71" pos:column="49"/></name><operator pos:line="71" pos:column="49">)<pos:position pos:line="71" pos:column="50"/></operator><name pos:line="71" pos:column="50">bufsize<pos:position pos:line="71" pos:column="57"/></name></expr></argument>)<pos:position pos:line="71" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="59"/></expr_stmt>
                    <return pos:line="72" pos:column="21">return <expr><operator pos:line="72" pos:column="28">(<pos:position pos:line="72" pos:column="29"/></operator><operator pos:line="72" pos:column="29">-<pos:position pos:line="72" pos:column="30"/></operator><literal type="number" pos:line="72" pos:column="30">1<pos:position pos:line="72" pos:column="31"/></literal><operator pos:line="72" pos:column="31">)<pos:position pos:line="72" pos:column="32"/></operator></expr>;<pos:position pos:line="72" pos:column="33"/></return>
                }<pos:position pos:line="73" pos:column="18"/></block></then></if>
            }<pos:position pos:line="74" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">ap_log_error<pos:position pos:line="75" pos:column="25"/></name><argument_list pos:line="75" pos:column="25">(<argument><expr><name pos:line="75" pos:column="26">APLOG_MARK<pos:position pos:line="75" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="38">APLOG_INFO<pos:position pos:line="75" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="50">0<pos:position pos:line="75" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="53">s<pos:position pos:line="75" pos:column="54"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="76" pos:column="26">"Init: Requesting pass phrase via piped dialog"<pos:position pos:line="76" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="75"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></then>
        <else pos:line="78" pos:column="9">else <block pos:line="78" pos:column="14">{ <comment type="block" pos:line="78" pos:column="16">/* sc-&gt;server-&gt;pphrase_dialog_type == SSL_PPTYPE_BUILTIN */</comment> 
<cpp:ifdef pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">ifdef<pos:position pos:line="79" pos:column="7"/></cpp:directive> <name pos:line="79" pos:column="8">WIN32<pos:position pos:line="79" pos:column="13"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="80" pos:column="13">PEMerr<pos:position pos:line="80" pos:column="19"/></name><argument_list pos:line="80" pos:column="19">(<argument><expr><name pos:line="80" pos:column="20">PEM_F_DEF_CALLBACK<pos:position pos:line="80" pos:column="38"/></name></expr></argument>,<argument><expr><name pos:line="80" pos:column="39">PEM_R_PROBLEMS_GETTING_PASSWORD<pos:position pos:line="80" pos:column="70"/></name></expr></argument>)<pos:position pos:line="80" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="81" pos:column="13">memset<pos:position pos:line="81" pos:column="19"/></name><argument_list pos:line="81" pos:column="19">(<argument><expr><name pos:line="81" pos:column="20">buf<pos:position pos:line="81" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="25">0<pos:position pos:line="81" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="81" pos:column="28">(<pos:position pos:line="81" pos:column="29"/></operator><name pos:line="81" pos:column="29">unsigned<pos:position pos:line="81" pos:column="37"/></name> <name pos:line="81" pos:column="38">int<pos:position pos:line="81" pos:column="41"/></name><operator pos:line="81" pos:column="41">)<pos:position pos:line="81" pos:column="42"/></operator><name pos:line="81" pos:column="42">bufsize<pos:position pos:line="81" pos:column="49"/></name></expr></argument>)<pos:position pos:line="81" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="51"/></expr_stmt>
            <return pos:line="82" pos:column="13">return <expr><operator pos:line="82" pos:column="20">(<pos:position pos:line="82" pos:column="21"/></operator><operator pos:line="82" pos:column="21">-<pos:position pos:line="82" pos:column="22"/></operator><literal type="number" pos:line="82" pos:column="22">1<pos:position pos:line="82" pos:column="23"/></literal><operator pos:line="82" pos:column="23">)<pos:position pos:line="82" pos:column="24"/></operator></expr>;<pos:position pos:line="82" pos:column="25"/></return>
<cpp:else pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">else<pos:position pos:line="83" pos:column="6"/></cpp:directive></cpp:else>
            <comment type="block" pos:line="84" pos:column="13">/*
             * stderr has already been redirected to the error_log.
             * rather than attempting to temporarily rehook it to the terminal,
             * we print the prompt to stdout before EVP_read_pw_string turns
             * off tty echo
             */</comment>
            <expr_stmt><expr><call><name pos:line="90" pos:column="13">apr_file_open_stdout<pos:position pos:line="90" pos:column="33"/></name><argument_list pos:line="90" pos:column="33">(<argument><expr><operator pos:line="90" pos:column="34">&amp;<pos:position pos:line="90" pos:column="39"/></operator><name pos:line="90" pos:column="35">writetty<pos:position pos:line="90" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="45">p<pos:position pos:line="90" pos:column="46"/></name></expr></argument>)<pos:position pos:line="90" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="48"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="92" pos:column="13">ap_log_error<pos:position pos:line="92" pos:column="25"/></name><argument_list pos:line="92" pos:column="25">(<argument><expr><name pos:line="92" pos:column="26">APLOG_MARK<pos:position pos:line="92" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="38">APLOG_INFO<pos:position pos:line="92" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="50">0<pos:position pos:line="92" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="53">s<pos:position pos:line="92" pos:column="54"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="93" pos:column="26">"Init: Requesting pass phrase via builtin terminal "<pos:position pos:line="93" pos:column="78"/></literal>
                         <literal type="string" pos:line="94" pos:column="26">"dialog"<pos:position pos:line="94" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">endif<pos:position pos:line="95" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="96" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="98" pos:column="9">/*
         * The first time display a header to inform the user about what
         * program he actually speaks to, which module is responsible for
         * this terminal dialog and why to the hell he has to enter
         * something...
         */</comment>
        <if pos:line="104" pos:column="9">if <condition pos:line="104" pos:column="12">(<expr><operator pos:line="104" pos:column="13">*<pos:position pos:line="104" pos:column="14"/></operator><name pos:line="104" pos:column="14">pnPassPhraseDialog<pos:position pos:line="104" pos:column="32"/></name> <operator pos:line="104" pos:column="33">==<pos:position pos:line="104" pos:column="35"/></operator> <literal type="number" pos:line="104" pos:column="36">1<pos:position pos:line="104" pos:column="37"/></literal></expr>)<pos:position pos:line="104" pos:column="38"/></condition><then pos:line="104" pos:column="38"> <block pos:line="104" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="105" pos:column="13">apr_file_printf<pos:position pos:line="105" pos:column="28"/></name><argument_list pos:line="105" pos:column="28">(<argument><expr><name pos:line="105" pos:column="29">writetty<pos:position pos:line="105" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="39">"%s mod_ssl/%s (Pass Phrase Dialog)\n"<pos:position pos:line="105" pos:column="77"/></literal></expr></argument>,
                            <argument><expr><name pos:line="106" pos:column="29">AP_SERVER_BASEVERSION<pos:position pos:line="106" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="52">MOD_SSL_VERSION<pos:position pos:line="106" pos:column="67"/></name></expr></argument>)<pos:position pos:line="106" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="69"/></expr_stmt>
            <macro><name pos:line="107" pos:column="13">apr_file_printf<pos:position pos:line="107" pos:column="28"/></name><argument_list pos:line="107" pos:column="28">(<argument pos:line="107" pos:column="29">writetty<pos:position pos:line="107" pos:column="37"/></argument>, <argument><literal type="string" pos:line="107" pos:column="39">"<pos:position pos:line="107" pos:column="40"/></literal></argument></argument_list></macro></block></then></if></block></then></if></block></function></block></function>Some of your private key files are encrypted for s</unit>

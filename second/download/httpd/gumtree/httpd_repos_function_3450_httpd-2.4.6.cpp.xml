<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3450_httpd-2.4.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">winnt_conn_ctx_t<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">mpm_get_completion_context<pos:position pos:line="1" pos:column="52"/></name><parameter_list pos:line="1" pos:column="52">(<parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">timeout<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">apr_status_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">rv<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">winnt_conn_ctx_t<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">context<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name pos:line="4" pos:column="33">NULL<pos:position pos:line="4" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="6" pos:column="5">*<pos:position pos:line="6" pos:column="6"/></operator><name pos:line="6" pos:column="6">timeout<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator> <literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr>;<pos:position pos:line="6" pos:column="18"/></expr_stmt>
    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><literal type="number" pos:line="7" pos:column="12">1<pos:position pos:line="7" pos:column="13"/></literal></expr>)<pos:position pos:line="7" pos:column="14"/></condition> <block pos:line="7" pos:column="15">{
        <comment type="block" pos:line="8" pos:column="9">/* Grab a context off the queue */</comment>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">apr_thread_mutex_lock<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">qlock<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">qhead<pos:position pos:line="10" pos:column="18"/></name></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19"> <block pos:line="10" pos:column="20">{
            <expr_stmt><expr><name pos:line="11" pos:column="13">context<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">qhead<pos:position pos:line="11" pos:column="28"/></name></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name pos:line="12" pos:column="13">qhead<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <name><name pos:line="12" pos:column="21">qhead<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">next<pos:position pos:line="12" pos:column="32"/></name></name></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><operator pos:line="13" pos:column="17">!<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">qhead<pos:position pos:line="13" pos:column="23"/></name></expr>)<pos:position pos:line="13" pos:column="24"/></condition><then pos:line="13" pos:column="24">
                <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">qtail<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">NULL<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt></block></then></if>
        }<pos:position pos:line="15" pos:column="10"/></block></then> <else pos:line="15" pos:column="11">else <block pos:line="15" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">ResetEvent<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">qwait_event<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></else></if>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">apr_thread_mutex_unlock<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">qlock<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>

        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">context<pos:position pos:line="20" pos:column="21"/></name></expr>)<pos:position pos:line="20" pos:column="22"/></condition><then pos:line="20" pos:column="22"> <block pos:line="20" pos:column="23">{
            <comment type="block" pos:line="21" pos:column="13">/* We failed to grab a context off the queue, consider allocating
             * a new one out of the child pool. There may be up to
             * (ap_threads_per_child + num_listeners) contexts in the system
             * at once.
             */</comment>
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><name pos:line="26" pos:column="17">num_completion_contexts<pos:position pos:line="26" pos:column="40"/></name> <operator pos:line="26" pos:column="41">&gt;=<pos:position pos:line="26" pos:column="46"/></operator> <name pos:line="26" pos:column="44">max_num_completion_contexts<pos:position pos:line="26" pos:column="71"/></name></expr>)<pos:position pos:line="26" pos:column="72"/></condition><then pos:line="26" pos:column="72"> <block pos:line="26" pos:column="73">{
                <comment type="block" pos:line="27" pos:column="17">/* All workers are busy, need to wait for one */</comment>
                <decl_stmt><decl><specifier pos:line="28" pos:column="17">static<pos:position pos:line="28" pos:column="23"/></specifier> <type><name pos:line="28" pos:column="24">int<pos:position pos:line="28" pos:column="27"/></name></type> <name pos:line="28" pos:column="28">reported<pos:position pos:line="28" pos:column="36"/></name> <init pos:line="28" pos:column="37">= <expr><literal type="number" pos:line="28" pos:column="39">0<pos:position pos:line="28" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="28" pos:column="41"/></decl_stmt>
                <if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">reported<pos:position pos:line="29" pos:column="30"/></name></expr>)<pos:position pos:line="29" pos:column="31"/></condition><then pos:line="29" pos:column="31"> <block pos:line="29" pos:column="32">{
                    <expr_stmt><expr><call><name pos:line="30" pos:column="21">ap_log_error<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">APLOG_MARK<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="46">APLOG_ERR<pos:position pos:line="30" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="57">0<pos:position pos:line="30" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="60">ap_server_conf<pos:position pos:line="30" pos:column="74"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="76">APLOGNO<pos:position pos:line="30" pos:column="83"/></name><argument_list pos:line="30" pos:column="83">(<argument><expr><literal type="number" pos:line="30" pos:column="84">00326<pos:position pos:line="30" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="90"/></argument_list></call>
                                 <literal type="string" pos:line="31" pos:column="34">"Server ran out of threads to serve "<pos:position pos:line="31" pos:column="71"/></literal>
                                 <literal type="string" pos:line="32" pos:column="34">"requests. Consider raising the "<pos:position pos:line="32" pos:column="67"/></literal>
                                 <literal type="string" pos:line="33" pos:column="34">"ThreadsPerChild setting"<pos:position pos:line="33" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="61"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="34" pos:column="21">reported<pos:position pos:line="34" pos:column="29"/></name> <operator pos:line="34" pos:column="30">=<pos:position pos:line="34" pos:column="31"/></operator> <literal type="number" pos:line="34" pos:column="32">1<pos:position pos:line="34" pos:column="33"/></literal></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>
                }<pos:position pos:line="35" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="37" pos:column="17">/* Wait for a worker to free a context. Once per second, give
                 * the caller a chance to check for shutdown. If the wait
                 * succeeds, get the context off the queue. It must be
                 * available, since there's only one consumer.
                 */</comment>
                <expr_stmt><expr><name pos:line="42" pos:column="17">rv<pos:position pos:line="42" pos:column="19"/></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <call><name pos:line="42" pos:column="22">WaitForSingleObject<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><name pos:line="42" pos:column="42">qwait_event<pos:position pos:line="42" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="55">1000<pos:position pos:line="42" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="61"/></expr_stmt>
                <if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name pos:line="43" pos:column="21">rv<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">==<pos:position pos:line="43" pos:column="26"/></operator> <name pos:line="43" pos:column="27">WAIT_OBJECT_0<pos:position pos:line="43" pos:column="40"/></name></expr>)<pos:position pos:line="43" pos:column="41"/></condition><then pos:line="43" pos:column="41">
                    <block type="pseudo"><continue pos:line="44" pos:column="21">continue;<pos:position pos:line="44" pos:column="30"/></continue></block></then>
                <else pos:line="45" pos:column="17">else <block pos:line="45" pos:column="22">{
                    <if pos:line="46" pos:column="21">if <condition pos:line="46" pos:column="24">(<expr><name pos:line="46" pos:column="25">rv<pos:position pos:line="46" pos:column="27"/></name> <operator pos:line="46" pos:column="28">==<pos:position pos:line="46" pos:column="30"/></operator> <name pos:line="46" pos:column="31">WAIT_TIMEOUT<pos:position pos:line="46" pos:column="43"/></name></expr>)<pos:position pos:line="46" pos:column="44"/></condition><then pos:line="46" pos:column="44"> <block pos:line="46" pos:column="45">{
                        <comment type="block" pos:line="47" pos:column="25">/* somewhat-normal condition where threads are busy */</comment>
                        <expr_stmt><expr><call><name pos:line="48" pos:column="25">ap_log_error<pos:position pos:line="48" pos:column="37"/></name><argument_list pos:line="48" pos:column="37">(<argument><expr><name pos:line="48" pos:column="38">APLOG_MARK<pos:position pos:line="48" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="50">APLOG_DEBUG<pos:position pos:line="48" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="63">0<pos:position pos:line="48" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="66">ap_server_conf<pos:position pos:line="48" pos:column="80"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="82">APLOGNO<pos:position pos:line="48" pos:column="89"/></name><argument_list pos:line="48" pos:column="89">(<argument><expr><literal type="number" pos:line="48" pos:column="90">00327<pos:position pos:line="48" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="96"/></argument_list></call>
                                     <literal type="string" pos:line="49" pos:column="38">"mpm_get_completion_context: Failed to get a "<pos:position pos:line="49" pos:column="84"/></literal>
                                     <literal type="string" pos:line="50" pos:column="38">"free context within 1 second"<pos:position pos:line="50" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="70"/></expr_stmt>
                        <expr_stmt><expr><operator pos:line="51" pos:column="25">*<pos:position pos:line="51" pos:column="26"/></operator><name pos:line="51" pos:column="26">timeout<pos:position pos:line="51" pos:column="33"/></name> <operator pos:line="51" pos:column="34">=<pos:position pos:line="51" pos:column="35"/></operator> <literal type="number" pos:line="51" pos:column="36">1<pos:position pos:line="51" pos:column="37"/></literal></expr>;<pos:position pos:line="51" pos:column="38"/></expr_stmt>
                    }<pos:position pos:line="52" pos:column="22"/></block></then>
                    <else pos:line="53" pos:column="21">else <block pos:line="53" pos:column="26">{
                        <comment type="block" pos:line="54" pos:column="25">/* should be the unexpected, generic WAIT_FAILED */</comment>
                        <expr_stmt><expr><call><name pos:line="55" pos:column="25">ap_log_error<pos:position pos:line="55" pos:column="37"/></name><argument_list pos:line="55" pos:column="37">(<argument><expr><name pos:line="55" pos:column="38">APLOG_MARK<pos:position pos:line="55" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="50">APLOG_WARNING<pos:position pos:line="55" pos:column="63"/></name></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="65">apr_get_os_error<pos:position pos:line="55" pos:column="81"/></name><argument_list pos:line="55" pos:column="81">()<pos:position pos:line="55" pos:column="83"/></argument_list></call></expr></argument>,
                                     <argument><expr><name pos:line="56" pos:column="38">ap_server_conf<pos:position pos:line="56" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="54">APLOGNO<pos:position pos:line="56" pos:column="61"/></name><argument_list pos:line="56" pos:column="61">(<argument><expr><literal type="number" pos:line="56" pos:column="62">00328<pos:position pos:line="56" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="68"/></argument_list></call>
                                     <literal type="string" pos:line="57" pos:column="38">"mpm_get_completion_context: "<pos:position pos:line="57" pos:column="68"/></literal>
                                     <literal type="string" pos:line="58" pos:column="38">"WaitForSingleObject failed to get free context"<pos:position pos:line="58" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="88"/></expr_stmt>
                    }<pos:position pos:line="59" pos:column="22"/></block></else></if>
                    <return pos:line="60" pos:column="21">return <expr><name pos:line="60" pos:column="28">NULL<pos:position pos:line="60" pos:column="32"/></name></expr>;<pos:position pos:line="60" pos:column="33"/></return>
                }<pos:position pos:line="61" pos:column="18"/></block></else></if>
            }<pos:position pos:line="62" pos:column="14"/></block></then> <else pos:line="62" pos:column="15">else <block pos:line="62" pos:column="20">{
                <comment type="block" pos:line="63" pos:column="17">/* Allocate another context.
                 * Note: Multiple failures in the next two steps will cause
                 * the pchild pool to 'leak' storage. I don't think this
                 * is worth fixing...
                 */</comment>
                <decl_stmt><decl><type><name pos:line="68" pos:column="17">apr_allocator_t<pos:position pos:line="68" pos:column="32"/></name> <modifier pos:line="68" pos:column="33">*<pos:position pos:line="68" pos:column="34"/></modifier></type><name pos:line="68" pos:column="34">allocator<pos:position pos:line="68" pos:column="43"/></name></decl>;<pos:position pos:line="68" pos:column="44"/></decl_stmt>

                <expr_stmt><expr><call><name pos:line="70" pos:column="17">apr_thread_mutex_lock<pos:position pos:line="70" pos:column="38"/></name><argument_list pos:line="70" pos:column="38">(<argument><expr><name pos:line="70" pos:column="39">child_lock<pos:position pos:line="70" pos:column="49"/></name></expr></argument>)<pos:position pos:line="70" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><name pos:line="71" pos:column="17">context<pos:position pos:line="71" pos:column="24"/></name> <operator pos:line="71" pos:column="25">=<pos:position pos:line="71" pos:column="26"/></operator> <operator pos:line="71" pos:column="27">(<pos:position pos:line="71" pos:column="28"/></operator><name pos:line="71" pos:column="28">winnt_conn_ctx_t<pos:position pos:line="71" pos:column="44"/></name> <operator pos:line="71" pos:column="45">*<pos:position pos:line="71" pos:column="46"/></operator><operator pos:line="71" pos:column="46">)<pos:position pos:line="71" pos:column="47"/></operator><call><name pos:line="71" pos:column="47">apr_pcalloc<pos:position pos:line="71" pos:column="58"/></name><argument_list pos:line="71" pos:column="58">(<argument><expr><name pos:line="71" pos:column="59">pchild<pos:position pos:line="71" pos:column="65"/></name></expr></argument>,
                                                     <argument><expr><sizeof pos:line="72" pos:column="54">sizeof<argument_list pos:line="72" pos:column="60">(<argument><expr><name pos:line="72" pos:column="61">winnt_conn_ctx_t<pos:position pos:line="72" pos:column="77"/></name></expr></argument>)<pos:position pos:line="72" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="72" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="80"/></expr_stmt>


                <expr_stmt><expr><name><name pos:line="75" pos:column="17">context<pos:position pos:line="75" pos:column="24"/></name><operator pos:line="75" pos:column="24">-&gt;<pos:position pos:line="75" pos:column="29"/></operator><name pos:line="75" pos:column="26">overlapped<pos:position pos:line="75" pos:column="36"/></name><operator pos:line="75" pos:column="36">.<pos:position pos:line="75" pos:column="37"/></operator><name pos:line="75" pos:column="37">hEvent<pos:position pos:line="75" pos:column="43"/></name></name> <operator pos:line="75" pos:column="44">=<pos:position pos:line="75" pos:column="45"/></operator> <call><name pos:line="75" pos:column="46">CreateEvent<pos:position pos:line="75" pos:column="57"/></name><argument_list pos:line="75" pos:column="57">(<argument><expr><name pos:line="75" pos:column="58">NULL<pos:position pos:line="75" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="64">TRUE<pos:position pos:line="75" pos:column="68"/></name></expr></argument>,
                                                         <argument><expr><name pos:line="76" pos:column="58">FALSE<pos:position pos:line="76" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="65">NULL<pos:position pos:line="76" pos:column="69"/></name></expr></argument>)<pos:position pos:line="76" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="71"/></expr_stmt>
                <if pos:line="77" pos:column="17">if <condition pos:line="77" pos:column="20">(<expr><name><name pos:line="77" pos:column="21">context<pos:position pos:line="77" pos:column="28"/></name><operator pos:line="77" pos:column="28">-&gt;<pos:position pos:line="77" pos:column="33"/></operator><name pos:line="77" pos:column="30">overlapped<pos:position pos:line="77" pos:column="40"/></name><operator pos:line="77" pos:column="40">.<pos:position pos:line="77" pos:column="41"/></operator><name pos:line="77" pos:column="41">hEvent<pos:position pos:line="77" pos:column="47"/></name></name> <operator pos:line="77" pos:column="48">==<pos:position pos:line="77" pos:column="50"/></operator> <name pos:line="77" pos:column="51">NULL<pos:position pos:line="77" pos:column="55"/></name></expr>)<pos:position pos:line="77" pos:column="56"/></condition><then pos:line="77" pos:column="56"> <block pos:line="77" pos:column="57">{
                    <comment type="block" pos:line="78" pos:column="21">/* Hopefully this is a temporary condition ... */</comment>
                    <expr_stmt><expr><call><name pos:line="79" pos:column="21">ap_log_error<pos:position pos:line="79" pos:column="33"/></name><argument_list pos:line="79" pos:column="33">(<argument><expr><name pos:line="79" pos:column="34">APLOG_MARK<pos:position pos:line="79" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="46">APLOG_WARNING<pos:position pos:line="79" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="79" pos:column="61">apr_get_os_error<pos:position pos:line="79" pos:column="77"/></name><argument_list pos:line="79" pos:column="77">()<pos:position pos:line="79" pos:column="79"/></argument_list></call></expr></argument>,
                                 <argument><expr><name pos:line="80" pos:column="34">ap_server_conf<pos:position pos:line="80" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="80" pos:column="50">APLOGNO<pos:position pos:line="80" pos:column="57"/></name><argument_list pos:line="80" pos:column="57">(<argument><expr><literal type="number" pos:line="80" pos:column="58">00329<pos:position pos:line="80" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="64"/></argument_list></call>
                                 <literal type="string" pos:line="81" pos:column="34">"mpm_get_completion_context: "<pos:position pos:line="81" pos:column="64"/></literal>
                                 <literal type="string" pos:line="82" pos:column="34">"CreateEvent failed."<pos:position pos:line="82" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="57"/></expr_stmt>

                    <expr_stmt><expr><call><name pos:line="84" pos:column="21">apr_thread_mutex_unlock<pos:position pos:line="84" pos:column="44"/></name><argument_list pos:line="84" pos:column="44">(<argument><expr><name pos:line="84" pos:column="45">child_lock<pos:position pos:line="84" pos:column="55"/></name></expr></argument>)<pos:position pos:line="84" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="57"/></expr_stmt>
                    <return pos:line="85" pos:column="21">return <expr><name pos:line="85" pos:column="28">NULL<pos:position pos:line="85" pos:column="32"/></name></expr>;<pos:position pos:line="85" pos:column="33"/></return>
                }<pos:position pos:line="86" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="88" pos:column="17">/* Create the transaction pool */</comment>
                <expr_stmt><expr><call><name pos:line="89" pos:column="17">apr_allocator_create<pos:position pos:line="89" pos:column="37"/></name><argument_list pos:line="89" pos:column="37">(<argument><expr><operator pos:line="89" pos:column="38">&amp;<pos:position pos:line="89" pos:column="43"/></operator><name pos:line="89" pos:column="39">allocator<pos:position pos:line="89" pos:column="48"/></name></expr></argument>)<pos:position pos:line="89" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="50"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="90" pos:column="17">apr_allocator_max_free_set<pos:position pos:line="90" pos:column="43"/></name><argument_list pos:line="90" pos:column="43">(<argument><expr><name pos:line="90" pos:column="44">allocator<pos:position pos:line="90" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="55">ap_max_mem_free<pos:position pos:line="90" pos:column="70"/></name></expr></argument>)<pos:position pos:line="90" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="72"/></expr_stmt>
                <expr_stmt><expr><name pos:line="91" pos:column="17">rv<pos:position pos:line="91" pos:column="19"/></name> <operator pos:line="91" pos:column="20">=<pos:position pos:line="91" pos:column="21"/></operator> <macro><name pos:line="91" pos:column="22">apr_pool_create_ex<pos:position pos:line="91" pos:column="40"/></name><argument_list pos:line="91" pos:column="40">(<argument pos:line="91" pos:column="41">&amp;context-&gt;ptrans<pos:position pos:line="91" pos:column="57"/></argument>,<pos:position pos:line="91" pos:column="58"/></argument_list></macro></expr></expr_stmt></block></else></if></block></then></if></block></while></block></function> </unit>

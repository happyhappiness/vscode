<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3199_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">NAMED<pos:position pos:line="1" pos:column="13"/></name> <modifier pos:line="1" pos:column="14">*<pos:position pos:line="1" pos:column="15"/></modifier></type>
<name pos:line="2" pos:column="1">lookup<pos:position pos:line="2" pos:column="7"/></name><parameter_list pos:line="2" pos:column="7">(<parameter><decl><type><name pos:line="2" pos:column="8">HASH_TABLE<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type><name pos:line="2" pos:column="20">table<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">KEY<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">name<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">size_t<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">createSize<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">i<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name><name pos:line="5" pos:column="7">table<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">-&gt;<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="14">size<pos:position pos:line="5" pos:column="18"/></name></name> <operator pos:line="5" pos:column="19">==<pos:position pos:line="5" pos:column="21"/></operator> <literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr>)<pos:position pos:line="5" pos:column="24"/></condition><then pos:line="5" pos:column="24"> <block pos:line="5" pos:column="25">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">size_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">tsize<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">createSize<pos:position pos:line="7" pos:column="20"/></name></expr>)<pos:position pos:line="7" pos:column="21"/></condition><then pos:line="7" pos:column="21">
      <block type="pseudo"><return pos:line="8" pos:column="7">return <expr><name pos:line="8" pos:column="14">NULL<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">table<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">power<pos:position pos:line="9" pos:column="17"/></name></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">INIT_POWER<pos:position pos:line="9" pos:column="30"/></name></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>
    <comment type="block" pos:line="10" pos:column="5">/* table-&gt;size is a power of 2 */</comment>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">table<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">size<pos:position pos:line="11" pos:column="16"/></name></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <operator pos:line="11" pos:column="19">(<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">size_t<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">)<pos:position pos:line="11" pos:column="27"/></operator><literal type="number" pos:line="11" pos:column="27">1<pos:position pos:line="11" pos:column="28"/></literal> <operator pos:line="11" pos:column="29">&lt;&lt;<pos:position pos:line="11" pos:column="37"/></operator> <name pos:line="11" pos:column="32">INIT_POWER<pos:position pos:line="11" pos:column="42"/></name></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">tsize<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <name><name pos:line="12" pos:column="13">table<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">size<pos:position pos:line="12" pos:column="24"/></name></name> <operator pos:line="12" pos:column="25">*<pos:position pos:line="12" pos:column="26"/></operator> <sizeof pos:line="12" pos:column="27">sizeof<argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">NAMED<pos:position pos:line="12" pos:column="39"/></name> <operator pos:line="12" pos:column="40">*<pos:position pos:line="12" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></sizeof></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">table<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">v<pos:position pos:line="13" pos:column="13"/></name></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <operator pos:line="13" pos:column="16">(<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">NAMED<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">*<pos:position pos:line="13" pos:column="24"/></operator><operator pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></operator><operator pos:line="13" pos:column="25">)<pos:position pos:line="13" pos:column="26"/></operator><call><name><name pos:line="13" pos:column="26">table<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">mem<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">-&gt;<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="38">malloc_fcn<pos:position pos:line="13" pos:column="48"/></name></name><argument_list pos:line="13" pos:column="48">(<argument><expr><name pos:line="13" pos:column="49">tsize<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name><name pos:line="14" pos:column="10">table<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">-&gt;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="17">v<pos:position pos:line="14" pos:column="18"/></name></name></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19">
      <block type="pseudo"><return pos:line="15" pos:column="7">return <expr><name pos:line="15" pos:column="14">NULL<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">memset<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name><name pos:line="16" pos:column="12">table<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">v<pos:position pos:line="16" pos:column="20"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="22">0<pos:position pos:line="16" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="25">tsize<pos:position pos:line="16" pos:column="30"/></name></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">i<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name pos:line="17" pos:column="9">hash<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">name<pos:position pos:line="17" pos:column="18"/></name></expr></argument>)<pos:position pos:line="17" pos:column="19"/></argument_list></call> <operator pos:line="17" pos:column="20">&amp;<pos:position pos:line="17" pos:column="25"/></operator> <operator pos:line="17" pos:column="22">(<pos:position pos:line="17" pos:column="23"/></operator><operator pos:line="17" pos:column="23">(<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="24">unsigned<pos:position pos:line="17" pos:column="32"/></name> <name pos:line="17" pos:column="33">long<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">)<pos:position pos:line="17" pos:column="38"/></operator><name><name pos:line="17" pos:column="38">table<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">-&gt;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="45">size<pos:position pos:line="17" pos:column="49"/></name></name> <operator pos:line="17" pos:column="50">-<pos:position pos:line="17" pos:column="51"/></operator> <literal type="number" pos:line="17" pos:column="52">1<pos:position pos:line="17" pos:column="53"/></literal><operator pos:line="17" pos:column="53">)<pos:position pos:line="17" pos:column="54"/></operator></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then>
  <else pos:line="19" pos:column="3">else <block pos:line="19" pos:column="8">{
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">unsigned<pos:position pos:line="20" pos:column="13"/></name> <name pos:line="20" pos:column="14">long<pos:position pos:line="20" pos:column="18"/></name></type> <name pos:line="20" pos:column="19">h<pos:position pos:line="20" pos:column="20"/></name> <init pos:line="20" pos:column="21">= <expr><call><name pos:line="20" pos:column="23">hash<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">name<pos:position pos:line="20" pos:column="32"/></name></expr></argument>)<pos:position pos:line="20" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">unsigned<pos:position pos:line="21" pos:column="13"/></name> <name pos:line="21" pos:column="14">long<pos:position pos:line="21" pos:column="18"/></name></type> <name pos:line="21" pos:column="19">mask<pos:position pos:line="21" pos:column="23"/></name> <init pos:line="21" pos:column="24">= <expr><operator pos:line="21" pos:column="26">(<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="27">unsigned<pos:position pos:line="21" pos:column="35"/></name> <name pos:line="21" pos:column="36">long<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">)<pos:position pos:line="21" pos:column="41"/></operator><name><name pos:line="21" pos:column="41">table<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">-&gt;<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="48">size<pos:position pos:line="21" pos:column="52"/></name></name> <operator pos:line="21" pos:column="53">-<pos:position pos:line="21" pos:column="54"/></operator> <literal type="number" pos:line="21" pos:column="55">1<pos:position pos:line="21" pos:column="56"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">unsigned<pos:position pos:line="22" pos:column="13"/></name> <name pos:line="22" pos:column="14">char<pos:position pos:line="22" pos:column="18"/></name></type> <name pos:line="22" pos:column="19">step<pos:position pos:line="22" pos:column="23"/></name> <init pos:line="22" pos:column="24">= <expr><literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="28"/></decl_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">i<pos:position pos:line="23" pos:column="6"/></name> <operator pos:line="23" pos:column="7">=<pos:position pos:line="23" pos:column="8"/></operator> <name pos:line="23" pos:column="9">h<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">&amp;<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="13">mask<pos:position pos:line="23" pos:column="17"/></name></expr>;<pos:position pos:line="23" pos:column="18"/></expr_stmt>
    <while pos:line="24" pos:column="5">while <condition pos:line="24" pos:column="11">(<expr><name><name pos:line="24" pos:column="12">table<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">v<pos:position pos:line="24" pos:column="20"/></name><index pos:line="24" pos:column="20">[<expr><name pos:line="24" pos:column="21">i<pos:position pos:line="24" pos:column="22"/></name></expr>]<pos:position pos:line="24" pos:column="23"/></index></name></expr>)<pos:position pos:line="24" pos:column="24"/></condition> <block pos:line="24" pos:column="25">{
      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><call><name pos:line="25" pos:column="11">keyeq<pos:position pos:line="25" pos:column="16"/></name><argument_list pos:line="25" pos:column="16">(<argument><expr><name pos:line="25" pos:column="17">name<pos:position pos:line="25" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="23">table<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">v<pos:position pos:line="25" pos:column="31"/></name><index pos:line="25" pos:column="31">[<expr><name pos:line="25" pos:column="32">i<pos:position pos:line="25" pos:column="33"/></name></expr>]<pos:position pos:line="25" pos:column="34"/></index></name><operator pos:line="25" pos:column="34">-&gt;<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="36">name<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="42"/></condition><then pos:line="25" pos:column="42">
        <block type="pseudo"><return pos:line="26" pos:column="9">return <expr><name><name pos:line="26" pos:column="16">table<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">v<pos:position pos:line="26" pos:column="24"/></name><index pos:line="26" pos:column="24">[<expr><name pos:line="26" pos:column="25">i<pos:position pos:line="26" pos:column="26"/></name></expr>]<pos:position pos:line="26" pos:column="27"/></index></name></expr>;<pos:position pos:line="26" pos:column="28"/></return></block></then></if>
      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><operator pos:line="27" pos:column="11">!<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">step<pos:position pos:line="27" pos:column="16"/></name></expr>)<pos:position pos:line="27" pos:column="17"/></condition><then pos:line="27" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="9">step<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">PROBE_STEP<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><name pos:line="28" pos:column="27">h<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="30">mask<pos:position pos:line="28" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="36">table<pos:position pos:line="28" pos:column="41"/></name><operator pos:line="28" pos:column="41">-&gt;<pos:position pos:line="28" pos:column="46"/></operator><name pos:line="28" pos:column="43">power<pos:position pos:line="28" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="50"/></expr_stmt></block></then></if>
      <expr_stmt><expr><ternary><condition><expr><name pos:line="29" pos:column="7">i<pos:position pos:line="29" pos:column="8"/></name> <operator pos:line="29" pos:column="9">&lt;<pos:position pos:line="29" pos:column="13"/></operator> <name pos:line="29" pos:column="11">step<pos:position pos:line="29" pos:column="15"/></name></expr> ?<pos:position pos:line="29" pos:column="17"/></condition><then pos:line="29" pos:column="17"> <expr><operator pos:line="29" pos:column="18">(<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="19">i<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">+=<pos:position pos:line="29" pos:column="23"/></operator> <name><name pos:line="29" pos:column="24">table<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">-&gt;<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="31">size<pos:position pos:line="29" pos:column="35"/></name></name> <operator pos:line="29" pos:column="36">-<pos:position pos:line="29" pos:column="37"/></operator> <name pos:line="29" pos:column="38">step<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">)<pos:position pos:line="29" pos:column="43"/></operator></expr> <pos:position pos:line="29" pos:column="44"/></then><else pos:line="29" pos:column="44">: <expr><operator pos:line="29" pos:column="46">(<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="47">i<pos:position pos:line="29" pos:column="48"/></name> <operator pos:line="29" pos:column="49">-=<pos:position pos:line="29" pos:column="51"/></operator> <name pos:line="29" pos:column="52">step<pos:position pos:line="29" pos:column="56"/></name><operator pos:line="29" pos:column="56">)<pos:position pos:line="29" pos:column="57"/></operator></expr></else></ternary></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></while>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">!<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">createSize<pos:position pos:line="31" pos:column="20"/></name></expr>)<pos:position pos:line="31" pos:column="21"/></condition><then pos:line="31" pos:column="21">
      <block type="pseudo"><return pos:line="32" pos:column="7">return <expr><name pos:line="32" pos:column="14">NULL<pos:position pos:line="32" pos:column="18"/></name></expr>;<pos:position pos:line="32" pos:column="19"/></return></block></then></if>

    <comment type="block" pos:line="34" pos:column="5">/* check for overflow (table is half full) */</comment>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name><name pos:line="35" pos:column="9">table<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">-&gt;<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="16">used<pos:position pos:line="35" pos:column="20"/></name></name> <operator pos:line="35" pos:column="21">&gt;&gt;<pos:position pos:line="35" pos:column="26"/></operator> <operator pos:line="35" pos:column="24">(<pos:position pos:line="35" pos:column="25"/></operator><name><name pos:line="35" pos:column="25">table<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">-&gt;<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="32">power<pos:position pos:line="35" pos:column="37"/></name></name> <operator pos:line="35" pos:column="38">-<pos:position pos:line="35" pos:column="39"/></operator> <literal type="number" pos:line="35" pos:column="40">1<pos:position pos:line="35" pos:column="41"/></literal><operator pos:line="35" pos:column="41">)<pos:position pos:line="35" pos:column="42"/></operator></expr>)<pos:position pos:line="35" pos:column="43"/></condition><then pos:line="35" pos:column="43"> <block pos:line="35" pos:column="44">{
      <decl_stmt><decl><type><name pos:line="36" pos:column="7">unsigned<pos:position pos:line="36" pos:column="15"/></name> <name pos:line="36" pos:column="16">char<pos:position pos:line="36" pos:column="20"/></name></type> <name pos:line="36" pos:column="21">newPower<pos:position pos:line="36" pos:column="29"/></name> <init pos:line="36" pos:column="30">= <expr><name><name pos:line="36" pos:column="32">table<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">-&gt;<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="39">power<pos:position pos:line="36" pos:column="44"/></name></name> <operator pos:line="36" pos:column="45">+<pos:position pos:line="36" pos:column="46"/></operator> <literal type="number" pos:line="36" pos:column="47">1<pos:position pos:line="36" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="36" pos:column="49"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="37" pos:column="7">size_t<pos:position pos:line="37" pos:column="13"/></name></type> <name pos:line="37" pos:column="14">newSize<pos:position pos:line="37" pos:column="21"/></name> <init pos:line="37" pos:column="22">= <expr><operator pos:line="37" pos:column="24">(<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="25">size_t<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">)<pos:position pos:line="37" pos:column="32"/></operator><literal type="number" pos:line="37" pos:column="32">1<pos:position pos:line="37" pos:column="33"/></literal> <operator pos:line="37" pos:column="34">&lt;&lt;<pos:position pos:line="37" pos:column="42"/></operator> <name pos:line="37" pos:column="37">newPower<pos:position pos:line="37" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="37" pos:column="46"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="38" pos:column="7">unsigned<pos:position pos:line="38" pos:column="15"/></name> <name pos:line="38" pos:column="16">long<pos:position pos:line="38" pos:column="20"/></name></type> <name pos:line="38" pos:column="21">newMask<pos:position pos:line="38" pos:column="28"/></name> <init pos:line="38" pos:column="29">= <expr><operator pos:line="38" pos:column="31">(<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="32">unsigned<pos:position pos:line="38" pos:column="40"/></name> <name pos:line="38" pos:column="41">long<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">)<pos:position pos:line="38" pos:column="46"/></operator><name pos:line="38" pos:column="46">newSize<pos:position pos:line="38" pos:column="53"/></name> <operator pos:line="38" pos:column="54">-<pos:position pos:line="38" pos:column="55"/></operator> <literal type="number" pos:line="38" pos:column="56">1<pos:position pos:line="38" pos:column="57"/></literal></expr></init></decl>;<pos:position pos:line="38" pos:column="58"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="39" pos:column="7">size_t<pos:position pos:line="39" pos:column="13"/></name></type> <name pos:line="39" pos:column="14">tsize<pos:position pos:line="39" pos:column="19"/></name> <init pos:line="39" pos:column="20">= <expr><name pos:line="39" pos:column="22">newSize<pos:position pos:line="39" pos:column="29"/></name> <operator pos:line="39" pos:column="30">*<pos:position pos:line="39" pos:column="31"/></operator> <sizeof pos:line="39" pos:column="32">sizeof<argument_list pos:line="39" pos:column="38">(<argument><expr><name pos:line="39" pos:column="39">NAMED<pos:position pos:line="39" pos:column="44"/></name> <operator pos:line="39" pos:column="45">*<pos:position pos:line="39" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="39" pos:column="48"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="40" pos:column="7">NAMED<pos:position pos:line="40" pos:column="12"/></name> <modifier pos:line="40" pos:column="13">*<pos:position pos:line="40" pos:column="14"/></modifier><modifier pos:line="40" pos:column="14">*<pos:position pos:line="40" pos:column="15"/></modifier></type><name pos:line="40" pos:column="15">newV<pos:position pos:line="40" pos:column="19"/></name> <init pos:line="40" pos:column="20">= <expr><operator pos:line="40" pos:column="22">(<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="23">NAMED<pos:position pos:line="40" pos:column="28"/></name> <operator pos:line="40" pos:column="29">*<pos:position pos:line="40" pos:column="30"/></operator><operator pos:line="40" pos:column="30">*<pos:position pos:line="40" pos:column="31"/></operator><operator pos:line="40" pos:column="31">)<pos:position pos:line="40" pos:column="32"/></operator><call><name><name pos:line="40" pos:column="32">table<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">-&gt;<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="39">mem<pos:position pos:line="40" pos:column="42"/></name><operator pos:line="40" pos:column="42">-&gt;<pos:position pos:line="40" pos:column="47"/></operator><name pos:line="40" pos:column="44">malloc_fcn<pos:position pos:line="40" pos:column="54"/></name></name><argument_list pos:line="40" pos:column="54">(<argument><expr><name pos:line="40" pos:column="55">tsize<pos:position pos:line="40" pos:column="60"/></name></expr></argument>)<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="62"/></decl_stmt>
      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><operator pos:line="41" pos:column="11">!<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="12">newV<pos:position pos:line="41" pos:column="16"/></name></expr>)<pos:position pos:line="41" pos:column="17"/></condition><then pos:line="41" pos:column="17">
        <block type="pseudo"><return pos:line="42" pos:column="9">return <expr><name pos:line="42" pos:column="16">NULL<pos:position pos:line="42" pos:column="20"/></name></expr>;<pos:position pos:line="42" pos:column="21"/></return></block></then></if>
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">memset<pos:position pos:line="43" pos:column="13"/></name><argument_list pos:line="43" pos:column="13">(<argument><expr><name pos:line="43" pos:column="14">newV<pos:position pos:line="43" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="20">0<pos:position pos:line="43" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="23">tsize<pos:position pos:line="43" pos:column="28"/></name></expr></argument>)<pos:position pos:line="43" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="30"/></expr_stmt>
      <for pos:line="44" pos:column="7">for <control pos:line="44" pos:column="11">(<init><expr><name pos:line="44" pos:column="12">i<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <literal type="number" pos:line="44" pos:column="16">0<pos:position pos:line="44" pos:column="17"/></literal></expr>;<pos:position pos:line="44" pos:column="18"/></init> <condition><expr><name pos:line="44" pos:column="19">i<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">&lt;<pos:position pos:line="44" pos:column="25"/></operator> <name><name pos:line="44" pos:column="23">table<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">-&gt;<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="30">size<pos:position pos:line="44" pos:column="34"/></name></name></expr>;<pos:position pos:line="44" pos:column="35"/></condition> <incr><expr><name pos:line="44" pos:column="36">i<pos:position pos:line="44" pos:column="37"/></name><operator pos:line="44" pos:column="37">++<pos:position pos:line="44" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="44" pos:column="40"/></control>
        <block type="pseudo"><if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name><name pos:line="45" pos:column="13">table<pos:position pos:line="45" pos:column="18"/></name><operator pos:line="45" pos:column="18">-&gt;<pos:position pos:line="45" pos:column="23"/></operator><name pos:line="45" pos:column="20">v<pos:position pos:line="45" pos:column="21"/></name><index pos:line="45" pos:column="21">[<expr><name pos:line="45" pos:column="22">i<pos:position pos:line="45" pos:column="23"/></name></expr>]<pos:position pos:line="45" pos:column="24"/></index></name></expr>)<pos:position pos:line="45" pos:column="25"/></condition><then pos:line="45" pos:column="25"> <block pos:line="45" pos:column="26">{
          <decl_stmt><decl><type><name pos:line="46" pos:column="11">unsigned<pos:position pos:line="46" pos:column="19"/></name> <name pos:line="46" pos:column="20">long<pos:position pos:line="46" pos:column="24"/></name></type> <name pos:line="46" pos:column="25">newHash<pos:position pos:line="46" pos:column="32"/></name> <init pos:line="46" pos:column="33">= <expr><call><name pos:line="46" pos:column="35">hash<pos:position pos:line="46" pos:column="39"/></name><argument_list pos:line="46" pos:column="39">(<argument><expr><name><name pos:line="46" pos:column="40">table<pos:position pos:line="46" pos:column="45"/></name><operator pos:line="46" pos:column="45">-&gt;<pos:position pos:line="46" pos:column="50"/></operator><name pos:line="46" pos:column="47">v<pos:position pos:line="46" pos:column="48"/></name><index pos:line="46" pos:column="48">[<expr><name pos:line="46" pos:column="49">i<pos:position pos:line="46" pos:column="50"/></name></expr>]<pos:position pos:line="46" pos:column="51"/></index></name><operator pos:line="46" pos:column="51">-&gt;<pos:position pos:line="46" pos:column="56"/></operator><name pos:line="46" pos:column="53">name<pos:position pos:line="46" pos:column="57"/></name></expr></argument>)<pos:position pos:line="46" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="59"/></decl_stmt>
          <decl_stmt><decl><type><name pos:line="47" pos:column="11">size_t<pos:position pos:line="47" pos:column="17"/></name></type> <name pos:line="47" pos:column="18">j<pos:position pos:line="47" pos:column="19"/></name> <init pos:line="47" pos:column="20">= <expr><name pos:line="47" pos:column="22">newHash<pos:position pos:line="47" pos:column="29"/></name> <operator pos:line="47" pos:column="30">&amp;<pos:position pos:line="47" pos:column="35"/></operator> <name pos:line="47" pos:column="32">newMask<pos:position pos:line="47" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="47" pos:column="40"/></decl_stmt>
          <expr_stmt><expr><name pos:line="48" pos:column="11">step<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <literal type="number" pos:line="48" pos:column="18">0<pos:position pos:line="48" pos:column="19"/></literal></expr>;<pos:position pos:line="48" pos:column="20"/></expr_stmt>
          <while pos:line="49" pos:column="11">while <condition pos:line="49" pos:column="17">(<expr><name><name pos:line="49" pos:column="18">newV<pos:position pos:line="49" pos:column="22"/></name><index pos:line="49" pos:column="22">[<expr><name pos:line="49" pos:column="23">j<pos:position pos:line="49" pos:column="24"/></name></expr>]<pos:position pos:line="49" pos:column="25"/></index></name></expr>)<pos:position pos:line="49" pos:column="26"/></condition> <block pos:line="49" pos:column="27">{
            <if pos:line="50" pos:column="13">if <condition pos:line="50" pos:column="16">(<expr><operator pos:line="50" pos:column="17">!<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="18">step<pos:position pos:line="50" pos:column="22"/></name></expr>)<pos:position pos:line="50" pos:column="23"/></condition><then pos:line="50" pos:column="23">
              <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="15">step<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">=<pos:position pos:line="51" pos:column="21"/></operator> <call><name pos:line="51" pos:column="22">PROBE_STEP<pos:position pos:line="51" pos:column="32"/></name><argument_list pos:line="51" pos:column="32">(<argument><expr><name pos:line="51" pos:column="33">newHash<pos:position pos:line="51" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="42">newMask<pos:position pos:line="51" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="51">newPower<pos:position pos:line="51" pos:column="59"/></name></expr></argument>)<pos:position pos:line="51" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="61"/></expr_stmt></block></then></if>
            <expr_stmt><expr><ternary><condition><expr><name pos:line="52" pos:column="13">j<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">&lt;<pos:position pos:line="52" pos:column="19"/></operator> <name pos:line="52" pos:column="17">step<pos:position pos:line="52" pos:column="21"/></name></expr> ?<pos:position pos:line="52" pos:column="23"/></condition><then pos:line="52" pos:column="23"> <expr><operator pos:line="52" pos:column="24">(<pos:position pos:line="52" pos:column="25"/></operator><name pos:line="52" pos:column="25">j<pos:position pos:line="52" pos:column="26"/></name> <operator pos:line="52" pos:column="27">+=<pos:position pos:line="52" pos:column="29"/></operator> <name pos:line="52" pos:column="30">newSize<pos:position pos:line="52" pos:column="37"/></name> <operator pos:line="52" pos:column="38">-<pos:position pos:line="52" pos:column="39"/></operator> <name pos:line="52" pos:column="40">step<pos:position pos:line="52" pos:column="44"/></name><operator pos:line="52" pos:column="44">)<pos:position pos:line="52" pos:column="45"/></operator></expr> <pos:position pos:line="52" pos:column="46"/></then><else pos:line="52" pos:column="46">: <expr><operator pos:line="52" pos:column="48">(<pos:position pos:line="52" pos:column="49"/></operator><name pos:line="52" pos:column="49">j<pos:position pos:line="52" pos:column="50"/></name> <operator pos:line="52" pos:column="51">-=<pos:position pos:line="52" pos:column="53"/></operator> <name pos:line="52" pos:column="54">step<pos:position pos:line="52" pos:column="58"/></name><operator pos:line="52" pos:column="58">)<pos:position pos:line="52" pos:column="59"/></operator></expr></else></ternary></expr>;<pos:position pos:line="52" pos:column="60"/></expr_stmt>
          }<pos:position pos:line="53" pos:column="12"/></block></while>
          <expr_stmt><expr><name><name pos:line="54" pos:column="11">newV<pos:position pos:line="54" pos:column="15"/></name><index pos:line="54" pos:column="15">[<expr><name pos:line="54" pos:column="16">j<pos:position pos:line="54" pos:column="17"/></name></expr>]<pos:position pos:line="54" pos:column="18"/></index></name> <operator pos:line="54" pos:column="19">=<pos:position pos:line="54" pos:column="20"/></operator> <name><name pos:line="54" pos:column="21">table<pos:position pos:line="54" pos:column="26"/></name><operator pos:line="54" pos:column="26">-&gt;<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="28">v<pos:position pos:line="54" pos:column="29"/></name><index pos:line="54" pos:column="29">[<expr><name pos:line="54" pos:column="30">i<pos:position pos:line="54" pos:column="31"/></name></expr>]<pos:position pos:line="54" pos:column="32"/></index></name></expr>;<pos:position pos:line="54" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if></block></for>
      <expr_stmt><expr><call><name><name pos:line="56" pos:column="7">table<pos:position pos:line="56" pos:column="12"/></name><operator pos:line="56" pos:column="12">-&gt;<pos:position pos:line="56" pos:column="17"/></operator><name pos:line="56" pos:column="14">mem<pos:position pos:line="56" pos:column="17"/></name><operator pos:line="56" pos:column="17">-&gt;<pos:position pos:line="56" pos:column="22"/></operator><name pos:line="56" pos:column="19">free_fcn<pos:position pos:line="56" pos:column="27"/></name></name><argument_list pos:line="56" pos:column="27">(<argument><expr><name><name pos:line="56" pos:column="28">table<pos:position pos:line="56" pos:column="33"/></name><operator pos:line="56" pos:column="33">-&gt;<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="35">v<pos:position pos:line="56" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="57" pos:column="7">table<pos:position pos:line="57" pos:column="12"/></name><operator pos:line="57" pos:column="12">-&gt;<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="14">v<pos:position pos:line="57" pos:column="15"/></name></name> <operator pos:line="57" pos:column="16">=<pos:position pos:line="57" pos:column="17"/></operator> <name pos:line="57" pos:column="18">newV<pos:position pos:line="57" pos:column="22"/></name></expr>;<pos:position pos:line="57" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="58" pos:column="7">table<pos:position pos:line="58" pos:column="12"/></name><operator pos:line="58" pos:column="12">-&gt;<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="14">power<pos:position pos:line="58" pos:column="19"/></name></name> <operator pos:line="58" pos:column="20">=<pos:position pos:line="58" pos:column="21"/></operator> <name pos:line="58" pos:column="22">newPower<pos:position pos:line="58" pos:column="30"/></name></expr>;<pos:position pos:line="58" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="59" pos:column="7">table<pos:position pos:line="59" pos:column="12"/></name><operator pos:line="59" pos:column="12">-&gt;<pos:position pos:line="59" pos:column="17"/></operator><name pos:line="59" pos:column="14">size<pos:position pos:line="59" pos:column="18"/></name></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <name pos:line="59" pos:column="21">newSize<pos:position pos:line="59" pos:column="28"/></name></expr>;<pos:position pos:line="59" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name pos:line="60" pos:column="7">i<pos:position pos:line="60" pos:column="8"/></name> <operator pos:line="60" pos:column="9">=<pos:position pos:line="60" pos:column="10"/></operator> <name pos:line="60" pos:column="11">h<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">&amp;<pos:position pos:line="60" pos:column="18"/></operator> <name pos:line="60" pos:column="15">newMask<pos:position pos:line="60" pos:column="22"/></name></expr>;<pos:position pos:line="60" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name pos:line="61" pos:column="7">step<pos:position pos:line="61" pos:column="11"/></name> <operator pos:line="61" pos:column="12">=<pos:position pos:line="61" pos:column="13"/></operator> <literal type="number" pos:line="61" pos:column="14">0<pos:position pos:line="61" pos:column="15"/></literal></expr>;<pos:position pos:line="61" pos:column="16"/></expr_stmt>
      <while pos:line="62" pos:column="7">while <condition pos:line="62" pos:column="13">(<expr><name><name pos:line="62" pos:column="14">table<pos:position pos:line="62" pos:column="19"/></name><operator pos:line="62" pos:column="19">-&gt;<pos:position pos:line="62" pos:column="24"/></operator><name pos:line="62" pos:column="21">v<pos:position pos:line="62" pos:column="22"/></name><index pos:line="62" pos:column="22">[<expr><name pos:line="62" pos:column="23">i<pos:position pos:line="62" pos:column="24"/></name></expr>]<pos:position pos:line="62" pos:column="25"/></index></name></expr>)<pos:position pos:line="62" pos:column="26"/></condition> <block pos:line="62" pos:column="27">{
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><operator pos:line="63" pos:column="13">!<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="14">step<pos:position pos:line="63" pos:column="18"/></name></expr>)<pos:position pos:line="63" pos:column="19"/></condition><then pos:line="63" pos:column="19">
          <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="11">step<pos:position pos:line="64" pos:column="15"/></name> <operator pos:line="64" pos:column="16">=<pos:position pos:line="64" pos:column="17"/></operator> <call><name pos:line="64" pos:column="18">PROBE_STEP<pos:position pos:line="64" pos:column="28"/></name><argument_list pos:line="64" pos:column="28">(<argument><expr><name pos:line="64" pos:column="29">h<pos:position pos:line="64" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="32">newMask<pos:position pos:line="64" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="41">newPower<pos:position pos:line="64" pos:column="49"/></name></expr></argument>)<pos:position pos:line="64" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="51"/></expr_stmt></block></then></if>
        <expr_stmt><expr><ternary><condition><expr><name pos:line="65" pos:column="9">i<pos:position pos:line="65" pos:column="10"/></name> <operator pos:line="65" pos:column="11">&lt;<pos:position pos:line="65" pos:column="15"/></operator> <name pos:line="65" pos:column="13">step<pos:position pos:line="65" pos:column="17"/></name></expr> ?<pos:position pos:line="65" pos:column="19"/></condition><then pos:line="65" pos:column="19"> <expr><operator pos:line="65" pos:column="20">(<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="21">i<pos:position pos:line="65" pos:column="22"/></name> <operator pos:line="65" pos:column="23">+=<pos:position pos:line="65" pos:column="25"/></operator> <name pos:line="65" pos:column="26">newSize<pos:position pos:line="65" pos:column="33"/></name> <operator pos:line="65" pos:column="34">-<pos:position pos:line="65" pos:column="35"/></operator> <name pos:line="65" pos:column="36">step<pos:position pos:line="65" pos:column="40"/></name><operator pos:line="65" pos:column="40">)<pos:position pos:line="65" pos:column="41"/></operator></expr> <pos:position pos:line="65" pos:column="42"/></then><else pos:line="65" pos:column="42">: <expr><operator pos:line="65" pos:column="44">(<pos:position pos:line="65" pos:column="45"/></operator><name pos:line="65" pos:column="45">i<pos:position pos:line="65" pos:column="46"/></name> <operator pos:line="65" pos:column="47">-=<pos:position pos:line="65" pos:column="49"/></operator> <name pos:line="65" pos:column="50">step<pos:position pos:line="65" pos:column="54"/></name><operator pos:line="65" pos:column="54">)<pos:position pos:line="65" pos:column="55"/></operator></expr></else></ternary></expr>;<pos:position pos:line="65" pos:column="56"/></expr_stmt>
      }<pos:position pos:line="66" pos:column="8"/></block></while>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>
  }<pos:position pos:line="68" pos:column="4"/></block></else></if>
  <expr_stmt><expr><name><name pos:line="69" pos:column="3">table<pos:position pos:line="69" pos:column="8"/></name><operator pos:line="69" pos:column="8">-&gt;<pos:position pos:line="69" pos:column="13"/></operator><name pos:line="69" pos:column="10">v<pos:position pos:line="69" pos:column="11"/></name><index pos:line="69" pos:column="11">[<expr><name pos:line="69" pos:column="12">i<pos:position pos:line="69" pos:column="13"/></name></expr>]<pos:position pos:line="69" pos:column="14"/></index></name> <operator pos:line="69" pos:column="15">=<pos:position pos:line="69" pos:column="16"/></operator> <operator pos:line="69" pos:column="17">(<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="18">NAMED<pos:position pos:line="69" pos:column="23"/></name> <operator pos:line="69" pos:column="24">*<pos:position pos:line="69" pos:column="25"/></operator><operator pos:line="69" pos:column="25">)<pos:position pos:line="69" pos:column="26"/></operator><call><name><name pos:line="69" pos:column="26">table<pos:position pos:line="69" pos:column="31"/></name><operator pos:line="69" pos:column="31">-&gt;<pos:position pos:line="69" pos:column="36"/></operator><name pos:line="69" pos:column="33">mem<pos:position pos:line="69" pos:column="36"/></name><operator pos:line="69" pos:column="36">-&gt;<pos:position pos:line="69" pos:column="41"/></operator><name pos:line="69" pos:column="38">malloc_fcn<pos:position pos:line="69" pos:column="48"/></name></name><argument_list pos:line="69" pos:column="48">(<argument><expr><name pos:line="69" pos:column="49">createSize<pos:position pos:line="69" pos:column="59"/></name></expr></argument>)<pos:position pos:line="69" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="61"/></expr_stmt>
  <if pos:line="70" pos:column="3">if <condition pos:line="70" pos:column="6">(<expr><operator pos:line="70" pos:column="7">!<pos:position pos:line="70" pos:column="8"/></operator><name><name pos:line="70" pos:column="8">table<pos:position pos:line="70" pos:column="13"/></name><operator pos:line="70" pos:column="13">-&gt;<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="15">v<pos:position pos:line="70" pos:column="16"/></name><index pos:line="70" pos:column="16">[<expr><name pos:line="70" pos:column="17">i<pos:position pos:line="70" pos:column="18"/></name></expr>]<pos:position pos:line="70" pos:column="19"/></index></name></expr>)<pos:position pos:line="70" pos:column="20"/></condition><then pos:line="70" pos:column="20">
    <block type="pseudo"><return pos:line="71" pos:column="5">return <expr><name pos:line="71" pos:column="12">NULL<pos:position pos:line="71" pos:column="16"/></name></expr>;<pos:position pos:line="71" pos:column="17"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="72" pos:column="3">memset<pos:position pos:line="72" pos:column="9"/></name><argument_list pos:line="72" pos:column="9">(<argument><expr><name><name pos:line="72" pos:column="10">table<pos:position pos:line="72" pos:column="15"/></name><operator pos:line="72" pos:column="15">-&gt;<pos:position pos:line="72" pos:column="20"/></operator><name pos:line="72" pos:column="17">v<pos:position pos:line="72" pos:column="18"/></name><index pos:line="72" pos:column="18">[<expr><name pos:line="72" pos:column="19">i<pos:position pos:line="72" pos:column="20"/></name></expr>]<pos:position pos:line="72" pos:column="21"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="23">0<pos:position pos:line="72" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="26">createSize<pos:position pos:line="72" pos:column="36"/></name></expr></argument>)<pos:position pos:line="72" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="73" pos:column="3">table<pos:position pos:line="73" pos:column="8"/></name><operator pos:line="73" pos:column="8">-&gt;<pos:position pos:line="73" pos:column="13"/></operator><name pos:line="73" pos:column="10">v<pos:position pos:line="73" pos:column="11"/></name><index pos:line="73" pos:column="11">[<expr><name pos:line="73" pos:column="12">i<pos:position pos:line="73" pos:column="13"/></name></expr>]<pos:position pos:line="73" pos:column="14"/></index></name><operator pos:line="73" pos:column="14">-&gt;<pos:position pos:line="73" pos:column="19"/></operator><name pos:line="73" pos:column="16">name<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">=<pos:position pos:line="73" pos:column="22"/></operator> <name pos:line="73" pos:column="23">name<pos:position pos:line="73" pos:column="27"/></name></expr>;<pos:position pos:line="73" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="74" pos:column="3">(<pos:position pos:line="74" pos:column="4"/></operator><name><name pos:line="74" pos:column="4">table<pos:position pos:line="74" pos:column="9"/></name><operator pos:line="74" pos:column="9">-&gt;<pos:position pos:line="74" pos:column="14"/></operator><name pos:line="74" pos:column="11">used<pos:position pos:line="74" pos:column="15"/></name></name><operator pos:line="74" pos:column="15">)<pos:position pos:line="74" pos:column="16"/></operator><operator pos:line="74" pos:column="16">++<pos:position pos:line="74" pos:column="18"/></operator></expr>;<pos:position pos:line="74" pos:column="19"/></expr_stmt>
  <return pos:line="75" pos:column="3">return <expr><name><name pos:line="75" pos:column="10">table<pos:position pos:line="75" pos:column="15"/></name><operator pos:line="75" pos:column="15">-&gt;<pos:position pos:line="75" pos:column="20"/></operator><name pos:line="75" pos:column="17">v<pos:position pos:line="75" pos:column="18"/></name><index pos:line="75" pos:column="18">[<expr><name pos:line="75" pos:column="19">i<pos:position pos:line="75" pos:column="20"/></name></expr>]<pos:position pos:line="75" pos:column="21"/></index></name></expr>;<pos:position pos:line="75" pos:column="22"/></return>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_283.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">set_signals<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifndef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifndef<pos:position pos:line="3" pos:column="8"/></cpp:directive> <name pos:line="3" pos:column="9">NO_USE_SIGACTION<pos:position pos:line="3" pos:column="25"/></name></cpp:ifndef>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">sigaction<pos:position pos:line="4" pos:column="21"/></name></name></type> <name pos:line="4" pos:column="22">sa<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">sigemptyset<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><operator pos:line="6" pos:column="17">&amp;<pos:position pos:line="6" pos:column="22"/></operator><name><name pos:line="6" pos:column="18">sa<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">.<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">sa_mask<pos:position pos:line="6" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">sa<pos:position pos:line="7" pos:column="7"/></name><operator pos:line="7" pos:column="7">.<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">sa_flags<pos:position pos:line="7" pos:column="16"/></name></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <literal type="number" pos:line="7" pos:column="19">0<pos:position pos:line="7" pos:column="20"/></literal></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">one_process<pos:position pos:line="9" pos:column="21"/></name></expr>)<pos:position pos:line="9" pos:column="22"/></condition><then pos:line="9" pos:column="22"> <block pos:line="9" pos:column="23">{
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">sa<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">.<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">sa_handler<pos:position pos:line="10" pos:column="22"/></name></name> <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="25">sig_coredump<pos:position pos:line="10" pos:column="37"/></name></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><call><name pos:line="11" pos:column="5">defined<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">SA_ONESHOT<pos:position pos:line="11" pos:column="23"/></name></expr></argument>)<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr></cpp:if>
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">sa<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">.<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">sa_flags<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">SA_ONESHOT<pos:position pos:line="12" pos:column="33"/></name></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>
<cpp:elif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">elif<pos:position pos:line="13" pos:column="6"/></cpp:directive> <expr><call><name pos:line="13" pos:column="7">defined<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name pos:line="13" pos:column="15">SA_RESETHAND<pos:position pos:line="13" pos:column="27"/></name></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr></cpp:elif>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">sa<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">.<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">sa_flags<pos:position pos:line="14" pos:column="20"/></name></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">SA_RESETHAND<pos:position pos:line="14" pos:column="35"/></name></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">sigaction<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">SIGSEGV<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="32">&amp;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="33">sa<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="37">NULL<pos:position pos:line="16" pos:column="41"/></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call> <operator pos:line="16" pos:column="43">&lt;<pos:position pos:line="16" pos:column="47"/></operator> <literal type="number" pos:line="16" pos:column="45">0<pos:position pos:line="16" pos:column="46"/></literal></expr>)<pos:position pos:line="16" pos:column="47"/></condition><then pos:line="16" pos:column="47">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="13">ap_log_error<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">APLOG_MARK<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">APLOG_WARNING<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="53">errno<pos:position pos:line="17" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="60">ap_server_conf<pos:position pos:line="17" pos:column="74"/></name></expr></argument>, 
                         <argument><expr><literal type="string" pos:line="18" pos:column="26">"sigaction(SIGSEGV)"<pos:position pos:line="18" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifdef<pos:position pos:line="19" pos:column="7"/></cpp:directive> <name pos:line="19" pos:column="8">SIGBUS<pos:position pos:line="19" pos:column="14"/></name></cpp:ifdef>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">sigaction<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">SIGBUS<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="31">&amp;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="32">sa<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="36">NULL<pos:position pos:line="20" pos:column="40"/></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call> <operator pos:line="20" pos:column="42">&lt;<pos:position pos:line="20" pos:column="46"/></operator> <literal type="number" pos:line="20" pos:column="44">0<pos:position pos:line="20" pos:column="45"/></literal></expr>)<pos:position pos:line="20" pos:column="46"/></condition><then pos:line="20" pos:column="46">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="13">ap_log_error<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">APLOG_MARK<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="38">APLOG_WARNING<pos:position pos:line="21" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="53">errno<pos:position pos:line="21" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="60">ap_server_conf<pos:position pos:line="21" pos:column="74"/></name></expr></argument>, 
                         <argument><expr><literal type="string" pos:line="22" pos:column="26">"sigaction(SIGBUS)"<pos:position pos:line="22" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt></block></then></if>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">SIGABORT<pos:position pos:line="24" pos:column="16"/></name></cpp:ifdef>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">sigaction<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">SIGABORT<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="33">&amp;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="34">sa<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="38">NULL<pos:position pos:line="25" pos:column="42"/></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call> <operator pos:line="25" pos:column="44">&lt;<pos:position pos:line="25" pos:column="48"/></operator> <literal type="number" pos:line="25" pos:column="46">0<pos:position pos:line="25" pos:column="47"/></literal></expr>)<pos:position pos:line="25" pos:column="48"/></condition><then pos:line="25" pos:column="48">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="13">ap_log_error<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">APLOG_MARK<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="38">APLOG_WARNING<pos:position pos:line="26" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="53">errno<pos:position pos:line="26" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="60">ap_server_conf<pos:position pos:line="26" pos:column="74"/></name></expr></argument>, 
                         <argument><expr><literal type="string" pos:line="27" pos:column="26">"sigaction(SIGABORT)"<pos:position pos:line="27" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt></block></then></if>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef<pos:position pos:line="29" pos:column="7"/></cpp:directive> <name pos:line="29" pos:column="8">SIGABRT<pos:position pos:line="29" pos:column="15"/></name></cpp:ifdef>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><call><name pos:line="30" pos:column="13">sigaction<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><name pos:line="30" pos:column="23">SIGABRT<pos:position pos:line="30" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="32">&amp;<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="33">sa<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="37">NULL<pos:position pos:line="30" pos:column="41"/></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call> <operator pos:line="30" pos:column="43">&lt;<pos:position pos:line="30" pos:column="47"/></operator> <literal type="number" pos:line="30" pos:column="45">0<pos:position pos:line="30" pos:column="46"/></literal></expr>)<pos:position pos:line="30" pos:column="47"/></condition><then pos:line="30" pos:column="47">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="13">ap_log_error<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">APLOG_MARK<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">APLOG_WARNING<pos:position pos:line="31" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="53">errno<pos:position pos:line="31" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="60">ap_server_conf<pos:position pos:line="31" pos:column="74"/></name></expr></argument>, 
                         <argument><expr><literal type="string" pos:line="32" pos:column="26">"sigaction(SIGABRT)"<pos:position pos:line="32" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt></block></then></if>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">ifdef<pos:position pos:line="34" pos:column="7"/></cpp:directive> <name pos:line="34" pos:column="8">SIGILL<pos:position pos:line="34" pos:column="14"/></name></cpp:ifdef>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><call><name pos:line="35" pos:column="13">sigaction<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">SIGILL<pos:position pos:line="35" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="31">&amp;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="32">sa<pos:position pos:line="35" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="36">NULL<pos:position pos:line="35" pos:column="40"/></name></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call> <operator pos:line="35" pos:column="42">&lt;<pos:position pos:line="35" pos:column="46"/></operator> <literal type="number" pos:line="35" pos:column="44">0<pos:position pos:line="35" pos:column="45"/></literal></expr>)<pos:position pos:line="35" pos:column="46"/></condition><then pos:line="35" pos:column="46">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="13">ap_log_error<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><name pos:line="36" pos:column="26">APLOG_MARK<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="38">APLOG_WARNING<pos:position pos:line="36" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="53">errno<pos:position pos:line="36" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="60">ap_server_conf<pos:position pos:line="36" pos:column="74"/></name></expr></argument>, 
                         <argument><expr><literal type="string" pos:line="37" pos:column="26">"sigaction(SIGILL)"<pos:position pos:line="37" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt></block></then></if>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">sa<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">.<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="12">sa_flags<pos:position pos:line="39" pos:column="20"/></name></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <literal type="number" pos:line="39" pos:column="23">0<pos:position pos:line="39" pos:column="24"/></literal></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">sa<pos:position pos:line="41" pos:column="7"/></name><operator pos:line="41" pos:column="7">.<pos:position pos:line="41" pos:column="8"/></operator><name pos:line="41" pos:column="8">sa_handler<pos:position pos:line="41" pos:column="18"/></name></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <name pos:line="41" pos:column="21">sig_term<pos:position pos:line="41" pos:column="29"/></name></expr>;<pos:position pos:line="41" pos:column="30"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><call><name pos:line="42" pos:column="9">sigaction<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><name pos:line="42" pos:column="19">SIGTERM<pos:position pos:line="42" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="28">&amp;<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="29">sa<pos:position pos:line="42" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="33">NULL<pos:position pos:line="42" pos:column="37"/></name></expr></argument>)<pos:position pos:line="42" pos:column="38"/></argument_list></call> <operator pos:line="42" pos:column="39">&lt;<pos:position pos:line="42" pos:column="43"/></operator> <literal type="number" pos:line="42" pos:column="41">0<pos:position pos:line="42" pos:column="42"/></literal></expr>)<pos:position pos:line="42" pos:column="43"/></condition><then pos:line="42" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="9">ap_log_error<pos:position pos:line="43" pos:column="21"/></name><argument_list pos:line="43" pos:column="21">(<argument><expr><name pos:line="43" pos:column="22">APLOG_MARK<pos:position pos:line="43" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="34">APLOG_WARNING<pos:position pos:line="43" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="49">errno<pos:position pos:line="43" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="56">ap_server_conf<pos:position pos:line="43" pos:column="70"/></name></expr></argument>, 
                     <argument><expr><literal type="string" pos:line="44" pos:column="22">"sigaction(SIGTERM)"<pos:position pos:line="44" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="44"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">ifdef<pos:position pos:line="45" pos:column="7"/></cpp:directive> <name pos:line="45" pos:column="8">SIGINT<pos:position pos:line="45" pos:column="14"/></name></cpp:ifdef>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><call><name pos:line="46" pos:column="9">sigaction<pos:position pos:line="46" pos:column="18"/></name><argument_list pos:line="46" pos:column="18">(<argument><expr><name pos:line="46" pos:column="19">SIGINT<pos:position pos:line="46" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="27">&amp;<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="28">sa<pos:position pos:line="46" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="32">NULL<pos:position pos:line="46" pos:column="36"/></name></expr></argument>)<pos:position pos:line="46" pos:column="37"/></argument_list></call> <operator pos:line="46" pos:column="38">&lt;<pos:position pos:line="46" pos:column="42"/></operator> <literal type="number" pos:line="46" pos:column="40">0<pos:position pos:line="46" pos:column="41"/></literal></expr>)<pos:position pos:line="46" pos:column="42"/></condition><then pos:line="46" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="9">ap_log_error<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">APLOG_MARK<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">APLOG_WARNING<pos:position pos:line="47" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="49">errno<pos:position pos:line="47" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="56">ap_server_conf<pos:position pos:line="47" pos:column="70"/></name></expr></argument>, 
                     <argument><expr><literal type="string" pos:line="48" pos:column="22">"sigaction(SIGINT)"<pos:position pos:line="48" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="43"/></expr_stmt></block></then></if>
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">ifdef<pos:position pos:line="50" pos:column="7"/></cpp:directive> <name pos:line="50" pos:column="8">SIGXCPU<pos:position pos:line="50" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">sa<pos:position pos:line="51" pos:column="7"/></name><operator pos:line="51" pos:column="7">.<pos:position pos:line="51" pos:column="8"/></operator><name pos:line="51" pos:column="8">sa_handler<pos:position pos:line="51" pos:column="18"/></name></name> <operator pos:line="51" pos:column="19">=<pos:position pos:line="51" pos:column="20"/></operator> <name pos:line="51" pos:column="21">SIG_DFL<pos:position pos:line="51" pos:column="28"/></name></expr>;<pos:position pos:line="51" pos:column="29"/></expr_stmt>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><call><name pos:line="52" pos:column="9">sigaction<pos:position pos:line="52" pos:column="18"/></name><argument_list pos:line="52" pos:column="18">(<argument><expr><name pos:line="52" pos:column="19">SIGXCPU<pos:position pos:line="52" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="28">&amp;<pos:position pos:line="52" pos:column="33"/></operator><name pos:line="52" pos:column="29">sa<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="33">NULL<pos:position pos:line="52" pos:column="37"/></name></expr></argument>)<pos:position pos:line="52" pos:column="38"/></argument_list></call> <operator pos:line="52" pos:column="39">&lt;<pos:position pos:line="52" pos:column="43"/></operator> <literal type="number" pos:line="52" pos:column="41">0<pos:position pos:line="52" pos:column="42"/></literal></expr>)<pos:position pos:line="52" pos:column="43"/></condition><then pos:line="52" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="9">ap_log_error<pos:position pos:line="53" pos:column="21"/></name><argument_list pos:line="53" pos:column="21">(<argument><expr><name pos:line="53" pos:column="22">APLOG_MARK<pos:position pos:line="53" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="34">APLOG_WARNING<pos:position pos:line="53" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="49">errno<pos:position pos:line="53" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="56">ap_server_conf<pos:position pos:line="53" pos:column="70"/></name></expr></argument>, 
                     <argument><expr><literal type="string" pos:line="54" pos:column="22">"sigaction(SIGXCPU)"<pos:position pos:line="54" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="44"/></expr_stmt></block></then></if>
<cpp:endif pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">endif<pos:position pos:line="55" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">ifdef<pos:position pos:line="56" pos:column="7"/></cpp:directive> <name pos:line="56" pos:column="8">SIGXFSZ<pos:position pos:line="56" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><name><name pos:line="57" pos:column="5">sa<pos:position pos:line="57" pos:column="7"/></name><operator pos:line="57" pos:column="7">.<pos:position pos:line="57" pos:column="8"/></operator><name pos:line="57" pos:column="8">sa_handler<pos:position pos:line="57" pos:column="18"/></name></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <name pos:line="57" pos:column="21">SIG_DFL<pos:position pos:line="57" pos:column="28"/></name></expr>;<pos:position pos:line="57" pos:column="29"/></expr_stmt>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><call><name pos:line="58" pos:column="9">sigaction<pos:position pos:line="58" pos:column="18"/></name><argument_list pos:line="58" pos:column="18">(<argument><expr><name pos:line="58" pos:column="19">SIGXFSZ<pos:position pos:line="58" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="28">&amp;<pos:position pos:line="58" pos:column="33"/></operator><name pos:line="58" pos:column="29">sa<pos:position pos:line="58" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="33">NULL<pos:position pos:line="58" pos:column="37"/></name></expr></argument>)<pos:position pos:line="58" pos:column="38"/></argument_list></call> <operator pos:line="58" pos:column="39">&lt;<pos:position pos:line="58" pos:column="43"/></operator> <literal type="number" pos:line="58" pos:column="41">0<pos:position pos:line="58" pos:column="42"/></literal></expr>)<pos:position pos:line="58" pos:column="43"/></condition><then pos:line="58" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="9">ap_log_error<pos:position pos:line="59" pos:column="21"/></name><argument_list pos:line="59" pos:column="21">(<argument><expr><name pos:line="59" pos:column="22">APLOG_MARK<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="34">APLOG_WARNING<pos:position pos:line="59" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="49">errno<pos:position pos:line="59" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="56">ap_server_conf<pos:position pos:line="59" pos:column="70"/></name></expr></argument>, 
                     <argument><expr><literal type="string" pos:line="60" pos:column="22">"sigaction(SIGXFSZ)"<pos:position pos:line="60" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="44"/></expr_stmt></block></then></if>
<cpp:endif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">endif<pos:position pos:line="61" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">ifdef<pos:position pos:line="62" pos:column="7"/></cpp:directive> <name pos:line="62" pos:column="8">SIGPIPE<pos:position pos:line="62" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><name><name pos:line="63" pos:column="5">sa<pos:position pos:line="63" pos:column="7"/></name><operator pos:line="63" pos:column="7">.<pos:position pos:line="63" pos:column="8"/></operator><name pos:line="63" pos:column="8">sa_handler<pos:position pos:line="63" pos:column="18"/></name></name> <operator pos:line="63" pos:column="19">=<pos:position pos:line="63" pos:column="20"/></operator> <name pos:line="63" pos:column="21">SIG_IGN<pos:position pos:line="63" pos:column="28"/></name></expr>;<pos:position pos:line="63" pos:column="29"/></expr_stmt>
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><call><name pos:line="64" pos:column="9">sigaction<pos:position pos:line="64" pos:column="18"/></name><argument_list pos:line="64" pos:column="18">(<argument><expr><name pos:line="64" pos:column="19">SIGPIPE<pos:position pos:line="64" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="28">&amp;<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="29">sa<pos:position pos:line="64" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="33">NULL<pos:position pos:line="64" pos:column="37"/></name></expr></argument>)<pos:position pos:line="64" pos:column="38"/></argument_list></call> <operator pos:line="64" pos:column="39">&lt;<pos:position pos:line="64" pos:column="43"/></operator> <literal type="number" pos:line="64" pos:column="41">0<pos:position pos:line="64" pos:column="42"/></literal></expr>)<pos:position pos:line="64" pos:column="43"/></condition><then pos:line="64" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="9">ap_log_error<pos:position pos:line="65" pos:column="21"/></name><argument_list pos:line="65" pos:column="21">(<argument><expr><name pos:line="65" pos:column="22">APLOG_MARK<pos:position pos:line="65" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="34">APLOG_WARNING<pos:position pos:line="65" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="49">errno<pos:position pos:line="65" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="56">ap_server_conf<pos:position pos:line="65" pos:column="70"/></name></expr></argument>, 
                     <argument><expr><literal type="string" pos:line="66" pos:column="22">"sigaction(SIGPIPE)"<pos:position pos:line="66" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt></block></then></if>
<cpp:endif pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">endif<pos:position pos:line="67" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="69" pos:column="5">/* we want to ignore HUPs and AP_SIG_GRACEFUL while we're busy 
     * processing one */</comment>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">sigaddset<pos:position pos:line="71" pos:column="14"/></name><argument_list pos:line="71" pos:column="14">(<argument><expr><operator pos:line="71" pos:column="15">&amp;<pos:position pos:line="71" pos:column="20"/></operator><name><name pos:line="71" pos:column="16">sa<pos:position pos:line="71" pos:column="18"/></name><operator pos:line="71" pos:column="18">.<pos:position pos:line="71" pos:column="19"/></operator><name pos:line="71" pos:column="19">sa_mask<pos:position pos:line="71" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="28">SIGHUP<pos:position pos:line="71" pos:column="34"/></name></expr></argument>)<pos:position pos:line="71" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">sigaddset<pos:position pos:line="72" pos:column="14"/></name><argument_list pos:line="72" pos:column="14">(<argument><expr><operator pos:line="72" pos:column="15">&amp;<pos:position pos:line="72" pos:column="20"/></operator><name><name pos:line="72" pos:column="16">sa<pos:position pos:line="72" pos:column="18"/></name><operator pos:line="72" pos:column="18">.<pos:position pos:line="72" pos:column="19"/></operator><name pos:line="72" pos:column="19">sa_mask<pos:position pos:line="72" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="28">AP_SIG_GRACEFUL<pos:position pos:line="72" pos:column="43"/></name></expr></argument>)<pos:position pos:line="72" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="73" pos:column="5">sa<pos:position pos:line="73" pos:column="7"/></name><operator pos:line="73" pos:column="7">.<pos:position pos:line="73" pos:column="8"/></operator><name pos:line="73" pos:column="8">sa_handler<pos:position pos:line="73" pos:column="18"/></name></name> <operator pos:line="73" pos:column="19">=<pos:position pos:line="73" pos:column="20"/></operator> <name pos:line="73" pos:column="21">restart<pos:position pos:line="73" pos:column="28"/></name></expr>;<pos:position pos:line="73" pos:column="29"/></expr_stmt>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><call><name pos:line="74" pos:column="9">sigaction<pos:position pos:line="74" pos:column="18"/></name><argument_list pos:line="74" pos:column="18">(<argument><expr><name pos:line="74" pos:column="19">SIGHUP<pos:position pos:line="74" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="27">&amp;<pos:position pos:line="74" pos:column="32"/></operator><name pos:line="74" pos:column="28">sa<pos:position pos:line="74" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="32">NULL<pos:position pos:line="74" pos:column="36"/></name></expr></argument>)<pos:position pos:line="74" pos:column="37"/></argument_list></call> <operator pos:line="74" pos:column="38">&lt;<pos:position pos:line="74" pos:column="42"/></operator> <literal type="number" pos:line="74" pos:column="40">0<pos:position pos:line="74" pos:column="41"/></literal></expr>)<pos:position pos:line="74" pos:column="42"/></condition><then pos:line="74" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="9">ap_log_error<pos:position pos:line="75" pos:column="21"/></name><argument_list pos:line="75" pos:column="21">(<argument><expr><name pos:line="75" pos:column="22">APLOG_MARK<pos:position pos:line="75" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="34">APLOG_WARNING<pos:position pos:line="75" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="49">errno<pos:position pos:line="75" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="56">ap_server_conf<pos:position pos:line="75" pos:column="70"/></name></expr></argument>, 
                     <argument><expr><literal type="string" pos:line="76" pos:column="22">"sigaction(SIGHUP)"<pos:position pos:line="76" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="43"/></expr_stmt></block></then></if>
    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><call><name pos:line="77" pos:column="9">sigaction<pos:position pos:line="77" pos:column="18"/></name><argument_list pos:line="77" pos:column="18">(<argument><expr><name pos:line="77" pos:column="19">AP_SIG_GRACEFUL<pos:position pos:line="77" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="36">&amp;<pos:position pos:line="77" pos:column="41"/></operator><name pos:line="77" pos:column="37">sa<pos:position pos:line="77" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="41">NULL<pos:position pos:line="77" pos:column="45"/></name></expr></argument>)<pos:position pos:line="77" pos:column="46"/></argument_list></call> <operator pos:line="77" pos:column="47">&lt;<pos:position pos:line="77" pos:column="51"/></operator> <literal type="number" pos:line="77" pos:column="49">0<pos:position pos:line="77" pos:column="50"/></literal></expr>)<pos:position pos:line="77" pos:column="51"/></condition><then pos:line="77" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="9">ap_log_error<pos:position pos:line="78" pos:column="21"/></name><argument_list pos:line="78" pos:column="21">(<argument><expr><name pos:line="78" pos:column="22">APLOG_MARK<pos:position pos:line="78" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="34">APLOG_WARNING<pos:position pos:line="78" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="49">errno<pos:position pos:line="78" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="56">ap_server_conf<pos:position pos:line="78" pos:column="70"/></name></expr></argument>, 
                     <argument><expr><literal type="string" pos:line="79" pos:column="22">"sigaction("<pos:position pos:line="79" pos:column="34"/></literal> <name pos:line="79" pos:column="35">AP_SIG_GRACEFUL_STRING<pos:position pos:line="79" pos:column="57"/></name> <literal type="string" pos:line="79" pos:column="58">")"<pos:position pos:line="79" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="63"/></expr_stmt></block></then></if>
<cpp:else pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">else<pos:position pos:line="80" pos:column="6"/></cpp:directive></cpp:else>
    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><operator pos:line="81" pos:column="9">!<pos:position pos:line="81" pos:column="10"/></operator><name pos:line="81" pos:column="10">one_process<pos:position pos:line="81" pos:column="21"/></name></expr>)<pos:position pos:line="81" pos:column="22"/></condition><then pos:line="81" pos:column="22"> <block pos:line="81" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">apr_signal<pos:position pos:line="82" pos:column="19"/></name><argument_list pos:line="82" pos:column="19">(<argument><expr><name pos:line="82" pos:column="20">SIGSEGV<pos:position pos:line="82" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="29">sig_coredump<pos:position pos:line="82" pos:column="41"/></name></expr></argument>)<pos:position pos:line="82" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="43"/></expr_stmt>
<cpp:ifdef pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">ifdef<pos:position pos:line="83" pos:column="7"/></cpp:directive> <name pos:line="83" pos:column="8">SIGBUS<pos:position pos:line="83" pos:column="14"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">apr_signal<pos:position pos:line="84" pos:column="19"/></name><argument_list pos:line="84" pos:column="19">(<argument><expr><name pos:line="84" pos:column="20">SIGBUS<pos:position pos:line="84" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="28">sig_coredump<pos:position pos:line="84" pos:column="40"/></name></expr></argument>)<pos:position pos:line="84" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="42"/></expr_stmt>
<cpp:endif pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">endif<pos:position pos:line="85" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="85" pos:column="8">/* SIGBUS */</comment>
<cpp:ifdef pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">ifdef<pos:position pos:line="86" pos:column="7"/></cpp:directive> <name pos:line="86" pos:column="8">SIGABORT<pos:position pos:line="86" pos:column="16"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">apr_signal<pos:position pos:line="87" pos:column="19"/></name><argument_list pos:line="87" pos:column="19">(<argument><expr><name pos:line="87" pos:column="20">SIGABORT<pos:position pos:line="87" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="30">sig_coredump<pos:position pos:line="87" pos:column="42"/></name></expr></argument>)<pos:position pos:line="87" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">endif<pos:position pos:line="88" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="88" pos:column="8">/* SIGABORT */</comment>
<cpp:ifdef pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">ifdef<pos:position pos:line="89" pos:column="7"/></cpp:directive> <name pos:line="89" pos:column="8">SIGABRT<pos:position pos:line="89" pos:column="15"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">apr_signal<pos:position pos:line="90" pos:column="19"/></name><argument_list pos:line="90" pos:column="19">(<argument><expr><name pos:line="90" pos:column="20">SIGABRT<pos:position pos:line="90" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="29">sig_coredump<pos:position pos:line="90" pos:column="41"/></name></expr></argument>)<pos:position pos:line="90" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="43"/></expr_stmt>
<cpp:endif pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">endif<pos:position pos:line="91" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="91" pos:column="8">/* SIGABRT */</comment>
<cpp:ifdef pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">ifdef<pos:position pos:line="92" pos:column="7"/></cpp:directive> <name pos:line="92" pos:column="8">SIGILL<pos:position pos:line="92" pos:column="14"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="93" pos:column="9">apr_signal<pos:position pos:line="93" pos:column="19"/></name><argument_list pos:line="93" pos:column="19">(<argument><expr><name pos:line="93" pos:column="20">SIGILL<pos:position pos:line="93" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="28">sig_coredump<pos:position pos:line="93" pos:column="40"/></name></expr></argument>)<pos:position pos:line="93" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="42"/></expr_stmt>
<cpp:endif pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">endif<pos:position pos:line="94" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="94" pos:column="8">/* SIGILL */</comment>
<cpp:ifdef pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">ifdef<pos:position pos:line="95" pos:column="7"/></cpp:directive> <name pos:line="95" pos:column="8">SIGXCPU<pos:position pos:line="95" pos:column="15"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="96" pos:column="9">apr_signal<pos:position pos:line="96" pos:column="19"/></name><argument_list pos:line="96" pos:column="19">(<argument><expr><name pos:line="96" pos:column="20">SIGXCPU<pos:position pos:line="96" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="29">SIG_DFL<pos:position pos:line="96" pos:column="36"/></name></expr></argument>)<pos:position pos:line="96" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">endif<pos:position pos:line="97" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="97" pos:column="8">/* SIGXCPU */</comment>
<cpp:ifdef pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">ifdef<pos:position pos:line="98" pos:column="7"/></cpp:directive> <name pos:line="98" pos:column="8">SIGXFSZ<pos:position pos:line="98" pos:column="15"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="99" pos:column="9">apr_signal<pos:position pos:line="99" pos:column="19"/></name><argument_list pos:line="99" pos:column="19">(<argument><expr><name pos:line="99" pos:column="20">SIGXFSZ<pos:position pos:line="99" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="29">SIG_DFL<pos:position pos:line="99" pos:column="36"/></name></expr></argument>)<pos:position pos:line="99" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">endif<pos:position pos:line="100" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="100" pos:column="8">/* SIGXFSZ */</comment>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="103" pos:column="5">apr_signal<pos:position pos:line="103" pos:column="15"/></name><argument_list pos:line="103" pos:column="15">(<argument><expr><name pos:line="103" pos:column="16">SIGTERM<pos:position pos:line="103" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="25">sig_term<pos:position pos:line="103" pos:column="33"/></name></expr></argument>)<pos:position pos:line="103" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="35"/></expr_stmt>
<cpp:ifdef pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">ifdef<pos:position pos:line="104" pos:column="7"/></cpp:directive> <name pos:line="104" pos:column="8">SIGHUP<pos:position pos:line="104" pos:column="14"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="105" pos:column="5">apr_signal<pos:position pos:line="105" pos:column="15"/></name><argument_list pos:line="105" pos:column="15">(<argument><expr><name pos:line="105" pos:column="16">SIGHUP<pos:position pos:line="105" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="24">restart<pos:position pos:line="105" pos:column="31"/></name></expr></argument>)<pos:position pos:line="105" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">endif<pos:position pos:line="106" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="106" pos:column="8">/* SIGHUP */</comment>
<cpp:ifdef pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">ifdef<pos:position pos:line="107" pos:column="7"/></cpp:directive> <name pos:line="107" pos:column="8">AP_SIG_GRACEFUL<pos:position pos:line="107" pos:column="23"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="108" pos:column="5">apr_signal<pos:position pos:line="108" pos:column="15"/></name><argument_list pos:line="108" pos:column="15">(<argument><expr><name pos:line="108" pos:column="16">AP_SIG_GRACEFUL<pos:position pos:line="108" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="33">restart<pos:position pos:line="108" pos:column="40"/></name></expr></argument>)<pos:position pos:line="108" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="42"/></expr_stmt>
<cpp:endif pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">endif<pos:position pos:line="109" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="109" pos:column="8">/* AP_SIG_GRACEFUL */</comment>
<cpp:ifdef pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">ifdef<pos:position pos:line="110" pos:column="7"/></cpp:directive> <name pos:line="110" pos:column="8">SIGPIPE<pos:position pos:line="110" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="111" pos:column="5">apr_signal<pos:position pos:line="111" pos:column="15"/></name><argument_list pos:line="111" pos:column="15">(<argument><expr><name pos:line="111" pos:column="16">SIGPIPE<pos:position pos:line="111" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="25">SIG_IGN<pos:position pos:line="111" pos:column="32"/></name></expr></argument>)<pos:position pos:line="111" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">endif<pos:position pos:line="112" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="112" pos:column="8">/* SIGPIPE */</comment>

<cpp:endif pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">endif<pos:position pos:line="114" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="115" pos:column="2"/></block></function></unit>

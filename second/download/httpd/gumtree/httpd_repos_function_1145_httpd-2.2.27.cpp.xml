<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1145_httpd-2.2.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">escape_absolute_uri<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">apr_pool_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">p<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">uri<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">unsigned<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">scheme<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">cp<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

    <comment type="block" pos:line="5" pos:column="5">/* be safe.
     * NULL should indicate elsewhere, that something's wrong
     */</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">scheme<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">||<pos:position pos:line="8" pos:column="19"/></operator> <call><name pos:line="8" pos:column="20">strlen<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">uri<pos:position pos:line="8" pos:column="30"/></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call> <operator pos:line="8" pos:column="32">&lt;<pos:position pos:line="8" pos:column="36"/></operator> <name pos:line="8" pos:column="34">scheme<pos:position pos:line="8" pos:column="40"/></name></expr>)<pos:position pos:line="8" pos:column="41"/></condition><then pos:line="8" pos:column="41"> <block pos:line="8" pos:column="42">{
        <return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr>;<pos:position pos:line="9" pos:column="21"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="12" pos:column="5">cp<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <name pos:line="12" pos:column="10">uri<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">+<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">scheme<pos:position pos:line="12" pos:column="22"/></name></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* scheme with authority part? */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">cp<pos:position pos:line="15" pos:column="11"/></name><index pos:line="15" pos:column="11">[<expr><operator pos:line="15" pos:column="12">-<pos:position pos:line="15" pos:column="13"/></operator><literal type="number" pos:line="15" pos:column="13">1<pos:position pos:line="15" pos:column="14"/></literal></expr>]<pos:position pos:line="15" pos:column="15"/></index></name> <operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator> <literal type="char" pos:line="15" pos:column="19">'/'<pos:position pos:line="15" pos:column="22"/></literal></expr>)<pos:position pos:line="15" pos:column="23"/></condition><then pos:line="15" pos:column="23"> <block pos:line="15" pos:column="24">{
        <comment type="block" pos:line="16" pos:column="9">/* skip host part */</comment>
        <while pos:line="17" pos:column="9">while <condition pos:line="17" pos:column="15">(<expr><operator pos:line="17" pos:column="16">*<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">cp<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">&amp;&amp;<pos:position pos:line="17" pos:column="30"/></operator> <operator pos:line="17" pos:column="23">*<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="24">cp<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">!=<pos:position pos:line="17" pos:column="29"/></operator> <literal type="char" pos:line="17" pos:column="30">'/'<pos:position pos:line="17" pos:column="33"/></literal></expr>)<pos:position pos:line="17" pos:column="34"/></condition> <block pos:line="17" pos:column="35">{
            <expr_stmt><expr><operator pos:line="18" pos:column="13">++<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">cp<pos:position pos:line="18" pos:column="17"/></name></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></while>

        <comment type="block" pos:line="21" pos:column="9">/* nothing after the hostpart. ready! */</comment>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><operator pos:line="22" pos:column="14">*<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">cp<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">||<pos:position pos:line="22" pos:column="20"/></operator> <operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><operator pos:line="22" pos:column="22">*<pos:position pos:line="22" pos:column="23"/></operator><operator pos:line="22" pos:column="23">++<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">cp<pos:position pos:line="22" pos:column="27"/></name></expr>)<pos:position pos:line="22" pos:column="28"/></condition><then pos:line="22" pos:column="28"> <block pos:line="22" pos:column="29">{
            <return pos:line="23" pos:column="13">return <expr><call><name pos:line="23" pos:column="20">apr_pstrdup<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">p<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="35">uri<pos:position pos:line="23" pos:column="38"/></name></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="40"/></return>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="26" pos:column="9">/* remember the hostname stuff */</comment>
        <expr_stmt><expr><name pos:line="27" pos:column="9">scheme<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">cp<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">-<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="23">uri<pos:position pos:line="27" pos:column="26"/></name></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>

        <comment type="block" pos:line="29" pos:column="9">/* special thing for ldap.
         * The parts are separated by question marks. From RFC 2255:
         *     ldapurl = scheme "://" [hostport] ["/"
         *               [dn ["?" [attributes] ["?" [scope]
         *               ["?" [filter] ["?" extensions]]]]]]
         */</comment>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><call><name pos:line="35" pos:column="14">strncasecmp<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">uri<pos:position pos:line="35" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="31">"ldap"<pos:position pos:line="35" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="39">4<pos:position pos:line="35" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="42"/></condition><then pos:line="35" pos:column="42"> <block pos:line="35" pos:column="43">{
            <decl_stmt><decl><type><name pos:line="36" pos:column="13">char<pos:position pos:line="36" pos:column="17"/></name> <modifier pos:line="36" pos:column="18">*<pos:position pos:line="36" pos:column="19"/></modifier></type><name><name pos:line="36" pos:column="19">token<pos:position pos:line="36" pos:column="24"/></name><index pos:line="36" pos:column="24">[<expr><literal type="number" pos:line="36" pos:column="25">5<pos:position pos:line="36" pos:column="26"/></literal></expr>]<pos:position pos:line="36" pos:column="27"/></index></name></decl>;<pos:position pos:line="36" pos:column="28"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="37" pos:column="13">int<pos:position pos:line="37" pos:column="16"/></name></type> <name pos:line="37" pos:column="17">c<pos:position pos:line="37" pos:column="18"/></name> <init pos:line="37" pos:column="19">= <expr><literal type="number" pos:line="37" pos:column="21">0<pos:position pos:line="37" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="37" pos:column="23"/></decl_stmt>

            <expr_stmt><expr><name><name pos:line="39" pos:column="13">token<pos:position pos:line="39" pos:column="18"/></name><index pos:line="39" pos:column="18">[<expr><literal type="number" pos:line="39" pos:column="19">0<pos:position pos:line="39" pos:column="20"/></literal></expr>]<pos:position pos:line="39" pos:column="21"/></index></name> <operator pos:line="39" pos:column="22">=<pos:position pos:line="39" pos:column="23"/></operator> <name pos:line="39" pos:column="24">cp<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">=<pos:position pos:line="39" pos:column="28"/></operator> <call><name pos:line="39" pos:column="29">apr_pstrdup<pos:position pos:line="39" pos:column="40"/></name><argument_list pos:line="39" pos:column="40">(<argument><expr><name pos:line="39" pos:column="41">p<pos:position pos:line="39" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="44">cp<pos:position pos:line="39" pos:column="46"/></name></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="48"/></expr_stmt>
            <while pos:line="40" pos:column="13">while <condition pos:line="40" pos:column="19">(<expr><operator pos:line="40" pos:column="20">*<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="21">cp<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">&amp;&amp;<pos:position pos:line="40" pos:column="34"/></operator> <name pos:line="40" pos:column="27">c<pos:position pos:line="40" pos:column="28"/></name> <operator pos:line="40" pos:column="29">&lt;<pos:position pos:line="40" pos:column="33"/></operator> <literal type="number" pos:line="40" pos:column="31">4<pos:position pos:line="40" pos:column="32"/></literal></expr>)<pos:position pos:line="40" pos:column="33"/></condition> <block pos:line="40" pos:column="34">{
                <if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><operator pos:line="41" pos:column="21">*<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="22">cp<pos:position pos:line="41" pos:column="24"/></name> <operator pos:line="41" pos:column="25">==<pos:position pos:line="41" pos:column="27"/></operator> <literal type="char" pos:line="41" pos:column="28">'?'<pos:position pos:line="41" pos:column="31"/></literal></expr>)<pos:position pos:line="41" pos:column="32"/></condition><then pos:line="41" pos:column="32"> <block pos:line="41" pos:column="33">{
                    <expr_stmt><expr><name><name pos:line="42" pos:column="21">token<pos:position pos:line="42" pos:column="26"/></name><index pos:line="42" pos:column="26">[<expr><operator pos:line="42" pos:column="27">++<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="29">c<pos:position pos:line="42" pos:column="30"/></name></expr>]<pos:position pos:line="42" pos:column="31"/></index></name> <operator pos:line="42" pos:column="32">=<pos:position pos:line="42" pos:column="33"/></operator> <name pos:line="42" pos:column="34">cp<pos:position pos:line="42" pos:column="36"/></name> <operator pos:line="42" pos:column="37">+<pos:position pos:line="42" pos:column="38"/></operator> <literal type="number" pos:line="42" pos:column="39">1<pos:position pos:line="42" pos:column="40"/></literal></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="43" pos:column="21">*<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">cp<pos:position pos:line="43" pos:column="24"/></name> <operator pos:line="43" pos:column="25">=<pos:position pos:line="43" pos:column="26"/></operator> <literal type="char" pos:line="43" pos:column="27">'\0'<pos:position pos:line="43" pos:column="31"/></literal></expr>;<pos:position pos:line="43" pos:column="32"/></expr_stmt>
                }<pos:position pos:line="44" pos:column="18"/></block></then></if>
                <expr_stmt><expr><operator pos:line="45" pos:column="17">++<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="19">cp<pos:position pos:line="45" pos:column="21"/></name></expr>;<pos:position pos:line="45" pos:column="22"/></expr_stmt>
            }<pos:position pos:line="46" pos:column="14"/></block></while>

            <return pos:line="48" pos:column="13">return <expr><call><name pos:line="48" pos:column="20">apr_pstrcat<pos:position pos:line="48" pos:column="31"/></name><argument_list pos:line="48" pos:column="31">(<argument><expr><name pos:line="48" pos:column="32">p<pos:position pos:line="48" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="35">apr_pstrndup<pos:position pos:line="48" pos:column="47"/></name><argument_list pos:line="48" pos:column="47">(<argument><expr><name pos:line="48" pos:column="48">p<pos:position pos:line="48" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="51">uri<pos:position pos:line="48" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="56">scheme<pos:position pos:line="48" pos:column="62"/></name></expr></argument>)<pos:position pos:line="48" pos:column="63"/></argument_list></call></expr></argument>,
                                          <argument><expr><call><name pos:line="49" pos:column="43">ap_escape_uri<pos:position pos:line="49" pos:column="56"/></name><argument_list pos:line="49" pos:column="56">(<argument><expr><name pos:line="49" pos:column="57">p<pos:position pos:line="49" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="60">token<pos:position pos:line="49" pos:column="65"/></name><index pos:line="49" pos:column="65">[<expr><literal type="number" pos:line="49" pos:column="66">0<pos:position pos:line="49" pos:column="67"/></literal></expr>]<pos:position pos:line="49" pos:column="68"/></index></name></expr></argument>)<pos:position pos:line="49" pos:column="69"/></argument_list></call></expr></argument>,
                               <argument><expr><ternary><condition><expr><operator pos:line="50" pos:column="32">(<pos:position pos:line="50" pos:column="33"/></operator><name pos:line="50" pos:column="33">c<pos:position pos:line="50" pos:column="34"/></name> <operator pos:line="50" pos:column="35">&gt;=<pos:position pos:line="50" pos:column="40"/></operator> <literal type="number" pos:line="50" pos:column="38">1<pos:position pos:line="50" pos:column="39"/></literal><operator pos:line="50" pos:column="39">)<pos:position pos:line="50" pos:column="40"/></operator></expr> ?<pos:position pos:line="50" pos:column="42"/></condition><then pos:line="50" pos:column="42"> <expr><literal type="string" pos:line="50" pos:column="43">"?"<pos:position pos:line="50" pos:column="46"/></literal></expr> <pos:position pos:line="50" pos:column="47"/></then><else pos:line="50" pos:column="47">: <expr><name pos:line="50" pos:column="49">NULL<pos:position pos:line="50" pos:column="53"/></name></expr></else></ternary></expr></argument>,
                               <argument><expr><ternary><condition><expr><operator pos:line="51" pos:column="32">(<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="33">c<pos:position pos:line="51" pos:column="34"/></name> <operator pos:line="51" pos:column="35">&gt;=<pos:position pos:line="51" pos:column="40"/></operator> <literal type="number" pos:line="51" pos:column="38">1<pos:position pos:line="51" pos:column="39"/></literal><operator pos:line="51" pos:column="39">)<pos:position pos:line="51" pos:column="40"/></operator></expr> ?<pos:position pos:line="51" pos:column="42"/></condition><then pos:line="51" pos:column="42"> <expr><call><name pos:line="51" pos:column="43">ap_escape_uri<pos:position pos:line="51" pos:column="56"/></name><argument_list pos:line="51" pos:column="56">(<argument><expr><name pos:line="51" pos:column="57">p<pos:position pos:line="51" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="60">token<pos:position pos:line="51" pos:column="65"/></name><index pos:line="51" pos:column="65">[<expr><literal type="number" pos:line="51" pos:column="66">1<pos:position pos:line="51" pos:column="67"/></literal></expr>]<pos:position pos:line="51" pos:column="68"/></index></name></expr></argument>)<pos:position pos:line="51" pos:column="69"/></argument_list></call></expr> <pos:position pos:line="51" pos:column="70"/></then><else pos:line="51" pos:column="70">: <expr><name pos:line="51" pos:column="72">NULL<pos:position pos:line="51" pos:column="76"/></name></expr></else></ternary></expr></argument>,
                               <argument><expr><ternary><condition><expr><operator pos:line="52" pos:column="32">(<pos:position pos:line="52" pos:column="33"/></operator><name pos:line="52" pos:column="33">c<pos:position pos:line="52" pos:column="34"/></name> <operator pos:line="52" pos:column="35">&gt;=<pos:position pos:line="52" pos:column="40"/></operator> <literal type="number" pos:line="52" pos:column="38">2<pos:position pos:line="52" pos:column="39"/></literal><operator pos:line="52" pos:column="39">)<pos:position pos:line="52" pos:column="40"/></operator></expr> ?<pos:position pos:line="52" pos:column="42"/></condition><then pos:line="52" pos:column="42"> <expr><literal type="string" pos:line="52" pos:column="43">"?"<pos:position pos:line="52" pos:column="46"/></literal></expr> <pos:position pos:line="52" pos:column="47"/></then><else pos:line="52" pos:column="47">: <expr><name pos:line="52" pos:column="49">NULL<pos:position pos:line="52" pos:column="53"/></name></expr></else></ternary></expr></argument>,
                               <argument><expr><ternary><condition><expr><operator pos:line="53" pos:column="32">(<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="33">c<pos:position pos:line="53" pos:column="34"/></name> <operator pos:line="53" pos:column="35">&gt;=<pos:position pos:line="53" pos:column="40"/></operator> <literal type="number" pos:line="53" pos:column="38">2<pos:position pos:line="53" pos:column="39"/></literal><operator pos:line="53" pos:column="39">)<pos:position pos:line="53" pos:column="40"/></operator></expr> ?<pos:position pos:line="53" pos:column="42"/></condition><then pos:line="53" pos:column="42"> <expr><call><name pos:line="53" pos:column="43">ap_escape_uri<pos:position pos:line="53" pos:column="56"/></name><argument_list pos:line="53" pos:column="56">(<argument><expr><name pos:line="53" pos:column="57">p<pos:position pos:line="53" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="60">token<pos:position pos:line="53" pos:column="65"/></name><index pos:line="53" pos:column="65">[<expr><literal type="number" pos:line="53" pos:column="66">2<pos:position pos:line="53" pos:column="67"/></literal></expr>]<pos:position pos:line="53" pos:column="68"/></index></name></expr></argument>)<pos:position pos:line="53" pos:column="69"/></argument_list></call></expr> <pos:position pos:line="53" pos:column="70"/></then><else pos:line="53" pos:column="70">: <expr><name pos:line="53" pos:column="72">NULL<pos:position pos:line="53" pos:column="76"/></name></expr></else></ternary></expr></argument>,
                               <argument><expr><ternary><condition><expr><operator pos:line="54" pos:column="32">(<pos:position pos:line="54" pos:column="33"/></operator><name pos:line="54" pos:column="33">c<pos:position pos:line="54" pos:column="34"/></name> <operator pos:line="54" pos:column="35">&gt;=<pos:position pos:line="54" pos:column="40"/></operator> <literal type="number" pos:line="54" pos:column="38">3<pos:position pos:line="54" pos:column="39"/></literal><operator pos:line="54" pos:column="39">)<pos:position pos:line="54" pos:column="40"/></operator></expr> ?<pos:position pos:line="54" pos:column="42"/></condition><then pos:line="54" pos:column="42"> <expr><literal type="string" pos:line="54" pos:column="43">"?"<pos:position pos:line="54" pos:column="46"/></literal></expr> <pos:position pos:line="54" pos:column="47"/></then><else pos:line="54" pos:column="47">: <expr><name pos:line="54" pos:column="49">NULL<pos:position pos:line="54" pos:column="53"/></name></expr></else></ternary></expr></argument>,
                               <argument><expr><ternary><condition><expr><operator pos:line="55" pos:column="32">(<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="33">c<pos:position pos:line="55" pos:column="34"/></name> <operator pos:line="55" pos:column="35">&gt;=<pos:position pos:line="55" pos:column="40"/></operator> <literal type="number" pos:line="55" pos:column="38">3<pos:position pos:line="55" pos:column="39"/></literal><operator pos:line="55" pos:column="39">)<pos:position pos:line="55" pos:column="40"/></operator></expr> ?<pos:position pos:line="55" pos:column="42"/></condition><then pos:line="55" pos:column="42"> <expr><call><name pos:line="55" pos:column="43">ap_escape_uri<pos:position pos:line="55" pos:column="56"/></name><argument_list pos:line="55" pos:column="56">(<argument><expr><name pos:line="55" pos:column="57">p<pos:position pos:line="55" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="60">token<pos:position pos:line="55" pos:column="65"/></name><index pos:line="55" pos:column="65">[<expr><literal type="number" pos:line="55" pos:column="66">3<pos:position pos:line="55" pos:column="67"/></literal></expr>]<pos:position pos:line="55" pos:column="68"/></index></name></expr></argument>)<pos:position pos:line="55" pos:column="69"/></argument_list></call></expr> <pos:position pos:line="55" pos:column="70"/></then><else pos:line="55" pos:column="70">: <expr><name pos:line="55" pos:column="72">NULL<pos:position pos:line="55" pos:column="76"/></name></expr></else></ternary></expr></argument>,
                               <argument><expr><ternary><condition><expr><operator pos:line="56" pos:column="32">(<pos:position pos:line="56" pos:column="33"/></operator><name pos:line="56" pos:column="33">c<pos:position pos:line="56" pos:column="34"/></name> <operator pos:line="56" pos:column="35">&gt;=<pos:position pos:line="56" pos:column="40"/></operator> <literal type="number" pos:line="56" pos:column="38">4<pos:position pos:line="56" pos:column="39"/></literal><operator pos:line="56" pos:column="39">)<pos:position pos:line="56" pos:column="40"/></operator></expr> ?<pos:position pos:line="56" pos:column="42"/></condition><then pos:line="56" pos:column="42"> <expr><literal type="string" pos:line="56" pos:column="43">"?"<pos:position pos:line="56" pos:column="46"/></literal></expr> <pos:position pos:line="56" pos:column="47"/></then><else pos:line="56" pos:column="47">: <expr><name pos:line="56" pos:column="49">NULL<pos:position pos:line="56" pos:column="53"/></name></expr></else></ternary></expr></argument>,
                               <argument><expr><ternary><condition><expr><operator pos:line="57" pos:column="32">(<pos:position pos:line="57" pos:column="33"/></operator><name pos:line="57" pos:column="33">c<pos:position pos:line="57" pos:column="34"/></name> <operator pos:line="57" pos:column="35">&gt;=<pos:position pos:line="57" pos:column="40"/></operator> <literal type="number" pos:line="57" pos:column="38">4<pos:position pos:line="57" pos:column="39"/></literal><operator pos:line="57" pos:column="39">)<pos:position pos:line="57" pos:column="40"/></operator></expr> ?<pos:position pos:line="57" pos:column="42"/></condition><then pos:line="57" pos:column="42"> <expr><call><name pos:line="57" pos:column="43">ap_escape_uri<pos:position pos:line="57" pos:column="56"/></name><argument_list pos:line="57" pos:column="56">(<argument><expr><name pos:line="57" pos:column="57">p<pos:position pos:line="57" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="60">token<pos:position pos:line="57" pos:column="65"/></name><index pos:line="57" pos:column="65">[<expr><literal type="number" pos:line="57" pos:column="66">4<pos:position pos:line="57" pos:column="67"/></literal></expr>]<pos:position pos:line="57" pos:column="68"/></index></name></expr></argument>)<pos:position pos:line="57" pos:column="69"/></argument_list></call></expr> <pos:position pos:line="57" pos:column="70"/></then><else pos:line="57" pos:column="70">: <expr><name pos:line="57" pos:column="72">NULL<pos:position pos:line="57" pos:column="76"/></name></expr></else></ternary></expr></argument>,
                               <argument><expr><name pos:line="58" pos:column="32">NULL<pos:position pos:line="58" pos:column="36"/></name></expr></argument>)<pos:position pos:line="58" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="38"/></return>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="62" pos:column="5">/* Nothing special here. Apply normal escaping. */</comment>
    <return pos:line="63" pos:column="5">return <expr><call><name pos:line="63" pos:column="12">apr_pstrcat<pos:position pos:line="63" pos:column="23"/></name><argument_list pos:line="63" pos:column="23">(<argument><expr><name pos:line="63" pos:column="24">p<pos:position pos:line="63" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="27">apr_pstrndup<pos:position pos:line="63" pos:column="39"/></name><argument_list pos:line="63" pos:column="39">(<argument><expr><name pos:line="63" pos:column="40">p<pos:position pos:line="63" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="43">uri<pos:position pos:line="63" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="48">scheme<pos:position pos:line="63" pos:column="54"/></name></expr></argument>)<pos:position pos:line="63" pos:column="55"/></argument_list></call></expr></argument>,
                       <argument><expr><call><name pos:line="64" pos:column="24">ap_escape_uri<pos:position pos:line="64" pos:column="37"/></name><argument_list pos:line="64" pos:column="37">(<argument><expr><name pos:line="64" pos:column="38">p<pos:position pos:line="64" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="41">cp<pos:position pos:line="64" pos:column="43"/></name></expr></argument>)<pos:position pos:line="64" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="64" pos:column="46">NULL<pos:position pos:line="64" pos:column="50"/></name></expr></argument>)<pos:position pos:line="64" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="52"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

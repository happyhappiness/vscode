<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2683_httpd-2.0.55.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name> <name pos:line="2" pos:column="5">PREFIX<pos:position pos:line="2" pos:column="11"/></name></type>(<name pos:line="2" pos:column="12">scanComment<pos:position pos:line="2" pos:column="23"/></name>)<parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">ENCODING<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">enc<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">ptr<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="63">const<pos:position pos:line="2" pos:column="68"/></specifier> <name pos:line="2" pos:column="69">char<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="75">end<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>,
			<parameter><decl><type><specifier pos:line="3" pos:column="25">const<pos:position pos:line="3" pos:column="30"/></specifier> <name pos:line="3" pos:column="31">char<pos:position pos:line="3" pos:column="35"/></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier><modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">nextTokPtr<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="49"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">ptr<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">!=<pos:position pos:line="5" pos:column="13"/></operator> <name pos:line="5" pos:column="14">end<pos:position pos:line="5" pos:column="17"/></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18"> <block pos:line="5" pos:column="19">{
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><call><name pos:line="6" pos:column="10">CHAR_MATCHES<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">enc<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="28">ptr<pos:position pos:line="6" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="33">ASCII_MINUS<pos:position pos:line="6" pos:column="44"/></name></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="46"/></condition><then pos:line="6" pos:column="46"> <block pos:line="6" pos:column="47">{
      <expr_stmt><expr><operator pos:line="7" pos:column="7">*<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">nextTokPtr<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">ptr<pos:position pos:line="7" pos:column="24"/></name></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt>
      <return pos:line="8" pos:column="7">return <expr><name pos:line="8" pos:column="14">XML_TOK_INVALID<pos:position pos:line="8" pos:column="29"/></name></expr>;<pos:position pos:line="8" pos:column="30"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="10" pos:column="5">ptr<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">+=<pos:position pos:line="10" pos:column="11"/></operator> <call><name pos:line="10" pos:column="12">MINBPC<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">enc<pos:position pos:line="10" pos:column="22"/></name></expr></argument>)<pos:position pos:line="10" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
    <while pos:line="11" pos:column="5">while <condition pos:line="11" pos:column="11">(<expr><name pos:line="11" pos:column="12">ptr<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">!=<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">end<pos:position pos:line="11" pos:column="22"/></name></expr>)<pos:position pos:line="11" pos:column="23"/></condition> <block pos:line="11" pos:column="24">{
      <switch pos:line="12" pos:column="7">switch <condition pos:line="12" pos:column="14">(<expr><call><name pos:line="12" pos:column="15">BYTE_TYPE<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">enc<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="30">ptr<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="35"/></condition> <block pos:line="12" pos:column="36">{
      <macro><name pos:line="13" pos:column="7">INVALID_CASES<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument pos:line="13" pos:column="21">ptr<pos:position pos:line="13" pos:column="24"/></argument>, <argument pos:line="13" pos:column="26">nextTokPtr<pos:position pos:line="13" pos:column="36"/></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></macro>
      <case pos:line="14" pos:column="7">case <expr><name pos:line="14" pos:column="12">BT_MINUS<pos:position pos:line="14" pos:column="20"/></name></expr>:<pos:position pos:line="14" pos:column="21"/></case>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">ptr<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">+=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">MINBPC<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">enc<pos:position pos:line="15" pos:column="31"/></name></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call><operator pos:line="15" pos:column="32">)<pos:position pos:line="15" pos:column="33"/></operator> <operator pos:line="15" pos:column="34">==<pos:position pos:line="15" pos:column="36"/></operator> <name pos:line="15" pos:column="37">end<pos:position pos:line="15" pos:column="40"/></name></expr>)<pos:position pos:line="15" pos:column="41"/></condition><then pos:line="15" pos:column="41">
	  <block type="pseudo"><return pos:line="16" pos:column="11">return <expr><name pos:line="16" pos:column="18">XML_TOK_PARTIAL<pos:position pos:line="16" pos:column="33"/></name></expr>;<pos:position pos:line="16" pos:column="34"/></return></block></then></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">CHAR_MATCHES<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">enc<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="31">ptr<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="36">ASCII_MINUS<pos:position pos:line="17" pos:column="47"/></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="49"/></condition><then pos:line="17" pos:column="49"> <block pos:line="17" pos:column="50">{
	  <if pos:line="18" pos:column="11">if <condition pos:line="18" pos:column="14">(<expr><operator pos:line="18" pos:column="15">(<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">ptr<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">+=<pos:position pos:line="18" pos:column="22"/></operator> <call><name pos:line="18" pos:column="23">MINBPC<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">enc<pos:position pos:line="18" pos:column="33"/></name></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call><operator pos:line="18" pos:column="34">)<pos:position pos:line="18" pos:column="35"/></operator> <operator pos:line="18" pos:column="36">==<pos:position pos:line="18" pos:column="38"/></operator> <name pos:line="18" pos:column="39">end<pos:position pos:line="18" pos:column="42"/></name></expr>)<pos:position pos:line="18" pos:column="43"/></condition><then pos:line="18" pos:column="43">
	    <block type="pseudo"><return pos:line="19" pos:column="13">return <expr><name pos:line="19" pos:column="20">XML_TOK_PARTIAL<pos:position pos:line="19" pos:column="35"/></name></expr>;<pos:position pos:line="19" pos:column="36"/></return></block></then></if>
	  <if pos:line="20" pos:column="11">if <condition pos:line="20" pos:column="14">(<expr><operator pos:line="20" pos:column="15">!<pos:position pos:line="20" pos:column="16"/></operator><call><name pos:line="20" pos:column="16">CHAR_MATCHES<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">enc<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">ptr<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="39">ASCII_GT<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="49"/></condition><then pos:line="20" pos:column="49"> <block pos:line="20" pos:column="50">{
	    <expr_stmt><expr><operator pos:line="21" pos:column="13">*<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">nextTokPtr<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">=<pos:position pos:line="21" pos:column="26"/></operator> <name pos:line="21" pos:column="27">ptr<pos:position pos:line="21" pos:column="30"/></name></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
	    <return pos:line="22" pos:column="13">return <expr><name pos:line="22" pos:column="20">XML_TOK_INVALID<pos:position pos:line="22" pos:column="35"/></name></expr>;<pos:position pos:line="22" pos:column="36"/></return>
	  }<pos:position pos:line="23" pos:column="12"/></block></then></if>
	  <expr_stmt><expr><operator pos:line="24" pos:column="11">*<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">nextTokPtr<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <name pos:line="24" pos:column="25">ptr<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">+<pos:position pos:line="24" pos:column="30"/></operator> <call><name pos:line="24" pos:column="31">MINBPC<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name pos:line="24" pos:column="38">enc<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
	  <return pos:line="25" pos:column="11">return <expr><name pos:line="25" pos:column="18">XML_TOK_COMMENT<pos:position pos:line="25" pos:column="33"/></name></expr>;<pos:position pos:line="25" pos:column="34"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>
	<break pos:line="27" pos:column="9">break;<pos:position pos:line="27" pos:column="15"/></break>
      <default pos:line="28" pos:column="7">default:<pos:position pos:line="28" pos:column="15"/></default>
	<expr_stmt><expr><name pos:line="29" pos:column="9">ptr<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">+=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">MINBPC<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">enc<pos:position pos:line="29" pos:column="26"/></name></expr></argument>)<pos:position pos:line="29" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
	<break pos:line="30" pos:column="9">break;<pos:position pos:line="30" pos:column="15"/></break>
      }<pos:position pos:line="31" pos:column="8"/></block></switch>
    }<pos:position pos:line="32" pos:column="6"/></block></while>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>
  <return pos:line="34" pos:column="3">return <expr><name pos:line="34" pos:column="10">XML_TOK_PARTIAL<pos:position pos:line="34" pos:column="25"/></name></expr>;<pos:position pos:line="34" pos:column="26"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

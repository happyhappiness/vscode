<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2976_httpd-2.2.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier><modifier pos:line="1" pos:column="14">*<pos:position pos:line="1" pos:column="15"/></modifier></type><name pos:line="1" pos:column="15">apr_ldap_str2charray<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">apr_pool_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">pool<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
                                   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">str_in<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
                                   <parameter><decl><type><specifier pos:line="3" pos:column="36">const<pos:position pos:line="3" pos:column="41"/></specifier> <name pos:line="3" pos:column="42">char<pos:position pos:line="3" pos:column="46"/></name> <modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier></type><name pos:line="3" pos:column="48">brkstr<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="55"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name>    <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier><modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">res<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name>    <modifier pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></modifier></type><name pos:line="6" pos:column="14">str<pos:position pos:line="6" pos:column="17"/></name></decl>, <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="20">s<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name>    <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">lasts<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">i<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* protect the input string from strtok */</comment>
    <expr_stmt><expr><name pos:line="11" pos:column="5">str<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <operator pos:line="11" pos:column="11">(<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">char<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></operator><operator pos:line="11" pos:column="18">)<pos:position pos:line="11" pos:column="19"/></operator><call><name pos:line="11" pos:column="19">apr_pstrdup<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">pool<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="37">str_in<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
    <if pos:line="12" pos:column="5">if<condition pos:line="12" pos:column="7">( <expr><name pos:line="12" pos:column="9">str<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">==<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">NULL<pos:position pos:line="12" pos:column="20"/></name></expr> )<pos:position pos:line="12" pos:column="22"/></condition><then pos:line="12" pos:column="22"> <block pos:line="12" pos:column="23">{
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="16" pos:column="5">i<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <literal type="number" pos:line="16" pos:column="9">1<pos:position pos:line="16" pos:column="10"/></literal></expr>;<pos:position pos:line="16" pos:column="11"/></expr_stmt>
    <for pos:line="17" pos:column="5">for <control pos:line="17" pos:column="9">( <init><expr><name pos:line="17" pos:column="11">s<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <name pos:line="17" pos:column="15">str<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></init> <condition><expr><operator pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">s<pos:position pos:line="17" pos:column="22"/></name></expr>;<pos:position pos:line="17" pos:column="23"/></condition> <incr><expr><name pos:line="17" pos:column="24">s<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">++<pos:position pos:line="17" pos:column="27"/></operator></expr></incr> )<pos:position pos:line="17" pos:column="29"/></control> <block pos:line="17" pos:column="30">{
        <comment type="block" pos:line="18" pos:column="9">/* Warning: this strchr was previously ldap_utf8_strchr(), check
         * whether this particular code has any charset issues.
         */</comment>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">( <expr><call><name pos:line="21" pos:column="14">strchr<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">( <argument><expr><name pos:line="21" pos:column="22">brkstr<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="30">*<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="31">s<pos:position pos:line="21" pos:column="32"/></name></expr></argument> )<pos:position pos:line="21" pos:column="34"/></argument_list></call> <operator pos:line="21" pos:column="35">!=<pos:position pos:line="21" pos:column="37"/></operator> <name pos:line="21" pos:column="38">NULL<pos:position pos:line="21" pos:column="42"/></name></expr> )<pos:position pos:line="21" pos:column="44"/></condition><then pos:line="21" pos:column="44"> <block pos:line="21" pos:column="45">{
            <expr_stmt><expr><name pos:line="22" pos:column="13">i<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">++<pos:position pos:line="22" pos:column="16"/></operator></expr>;<pos:position pos:line="22" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>
    }<pos:position pos:line="24" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="26" pos:column="5">res<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <operator pos:line="26" pos:column="11">(<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">char<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">*<pos:position pos:line="26" pos:column="18"/></operator><operator pos:line="26" pos:column="18">*<pos:position pos:line="26" pos:column="19"/></operator><operator pos:line="26" pos:column="19">)<pos:position pos:line="26" pos:column="20"/></operator> <call><name pos:line="26" pos:column="21">apr_pcalloc<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">pool<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="39">(<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="40">i<pos:position pos:line="26" pos:column="41"/></name> <operator pos:line="26" pos:column="42">+<pos:position pos:line="26" pos:column="43"/></operator> <literal type="number" pos:line="26" pos:column="44">1<pos:position pos:line="26" pos:column="45"/></literal><operator pos:line="26" pos:column="45">)<pos:position pos:line="26" pos:column="46"/></operator> <operator pos:line="26" pos:column="47">*<pos:position pos:line="26" pos:column="48"/></operator> <sizeof pos:line="26" pos:column="49">sizeof<argument_list pos:line="26" pos:column="55">(<argument><expr><name pos:line="26" pos:column="56">char<pos:position pos:line="26" pos:column="60"/></name> <operator pos:line="26" pos:column="61">*<pos:position pos:line="26" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="65"/></expr_stmt>
    <if pos:line="27" pos:column="5">if<condition pos:line="27" pos:column="7">( <expr><name pos:line="27" pos:column="9">res<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">==<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="16">NULL<pos:position pos:line="27" pos:column="20"/></name></expr> )<pos:position pos:line="27" pos:column="22"/></condition><then pos:line="27" pos:column="22"> <block pos:line="27" pos:column="23">{
        <return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">NULL<pos:position pos:line="28" pos:column="20"/></name></expr>;<pos:position pos:line="28" pos:column="21"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="31" pos:column="5">i<pos:position pos:line="31" pos:column="6"/></name> <operator pos:line="31" pos:column="7">=<pos:position pos:line="31" pos:column="8"/></operator> <literal type="number" pos:line="31" pos:column="9">0<pos:position pos:line="31" pos:column="10"/></literal></expr>;<pos:position pos:line="31" pos:column="11"/></expr_stmt>

    <for pos:line="33" pos:column="5">for <control pos:line="33" pos:column="9">( <init><expr><name pos:line="33" pos:column="11">s<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <operator pos:line="33" pos:column="15">(<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="16">char<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">*<pos:position pos:line="33" pos:column="22"/></operator><operator pos:line="33" pos:column="22">)<pos:position pos:line="33" pos:column="23"/></operator><call><name pos:line="33" pos:column="23">apr_strtok<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">( <argument><expr><name pos:line="33" pos:column="35">str<pos:position pos:line="33" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="40">brkstr<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="48">&amp;<pos:position pos:line="33" pos:column="53"/></operator><name pos:line="33" pos:column="49">lasts<pos:position pos:line="33" pos:column="54"/></name></expr></argument> )<pos:position pos:line="33" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="57"/></init>
          <condition><expr><name pos:line="34" pos:column="11">s<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">!=<pos:position pos:line="34" pos:column="15"/></operator> <name pos:line="34" pos:column="16">NULL<pos:position pos:line="34" pos:column="20"/></name></expr>;<pos:position pos:line="34" pos:column="21"/></condition>
          <incr><expr><name pos:line="35" pos:column="11">s<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <operator pos:line="35" pos:column="15">(<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="16">char<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">*<pos:position pos:line="35" pos:column="22"/></operator><operator pos:line="35" pos:column="22">)<pos:position pos:line="35" pos:column="23"/></operator><call><name pos:line="35" pos:column="23">apr_strtok<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">( <argument><expr><name pos:line="35" pos:column="35">NULL<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="41">brkstr<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="49">&amp;<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="50">lasts<pos:position pos:line="35" pos:column="55"/></name></expr></argument> )<pos:position pos:line="35" pos:column="57"/></argument_list></call></expr></incr> )<pos:position pos:line="35" pos:column="59"/></control> <block pos:line="35" pos:column="60">{

        <expr_stmt><expr><name><name pos:line="37" pos:column="9">res<pos:position pos:line="37" pos:column="12"/></name><index pos:line="37" pos:column="12">[<expr><name pos:line="37" pos:column="13">i<pos:position pos:line="37" pos:column="14"/></name></expr>]<pos:position pos:line="37" pos:column="15"/></index></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <operator pos:line="37" pos:column="18">(<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="19">char<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">*<pos:position pos:line="37" pos:column="25"/></operator><operator pos:line="37" pos:column="25">)<pos:position pos:line="37" pos:column="26"/></operator><call><name pos:line="37" pos:column="26">apr_pstrdup<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><name pos:line="37" pos:column="38">pool<pos:position pos:line="37" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="44">s<pos:position pos:line="37" pos:column="45"/></name></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>
        <if pos:line="38" pos:column="9">if<condition pos:line="38" pos:column="11">(<expr><name><name pos:line="38" pos:column="12">res<pos:position pos:line="38" pos:column="15"/></name><index pos:line="38" pos:column="15">[<expr><name pos:line="38" pos:column="16">i<pos:position pos:line="38" pos:column="17"/></name></expr>]<pos:position pos:line="38" pos:column="18"/></index></name> <operator pos:line="38" pos:column="19">==<pos:position pos:line="38" pos:column="21"/></operator> <name pos:line="38" pos:column="22">NULL<pos:position pos:line="38" pos:column="26"/></name></expr>)<pos:position pos:line="38" pos:column="27"/></condition><then pos:line="38" pos:column="27"> <block pos:line="38" pos:column="28">{
            <return pos:line="39" pos:column="13">return <expr><name pos:line="39" pos:column="20">NULL<pos:position pos:line="39" pos:column="24"/></name></expr>;<pos:position pos:line="39" pos:column="25"/></return>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="42" pos:column="9">i<pos:position pos:line="42" pos:column="10"/></name><operator pos:line="42" pos:column="10">++<pos:position pos:line="42" pos:column="12"/></operator></expr>;<pos:position pos:line="42" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="45" pos:column="5">res<pos:position pos:line="45" pos:column="8"/></name><index pos:line="45" pos:column="8">[<expr><name pos:line="45" pos:column="9">i<pos:position pos:line="45" pos:column="10"/></name></expr>]<pos:position pos:line="45" pos:column="11"/></index></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <name pos:line="45" pos:column="14">NULL<pos:position pos:line="45" pos:column="18"/></name></expr>;<pos:position pos:line="45" pos:column="19"/></expr_stmt>

    <return pos:line="47" pos:column="5">return<expr><operator pos:line="47" pos:column="11">(<pos:position pos:line="47" pos:column="12"/></operator> <name pos:line="47" pos:column="13">res<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">)<pos:position pos:line="47" pos:column="18"/></operator></expr>;<pos:position pos:line="47" pos:column="19"/></return>

}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

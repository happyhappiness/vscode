<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1232_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">commit_entity<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">cache_handle_t<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">h<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">request_rec<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">r<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">disk_cache_conf<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">conf<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><call><name pos:line="3" pos:column="29">ap_get_module_config<pos:position pos:line="3" pos:column="49"/></name><argument_list pos:line="3" pos:column="49">(<argument><expr><name><name pos:line="3" pos:column="50">r<pos:position pos:line="3" pos:column="51"/></name><operator pos:line="3" pos:column="51">-&gt;<pos:position pos:line="3" pos:column="56"/></operator><name pos:line="3" pos:column="53">server<pos:position pos:line="3" pos:column="59"/></name><operator pos:line="3" pos:column="59">-&gt;<pos:position pos:line="3" pos:column="64"/></operator><name pos:line="3" pos:column="61">module_config<pos:position pos:line="3" pos:column="74"/></name></name></expr></argument>,
                                                 <argument><expr><operator pos:line="4" pos:column="50">&amp;<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="51">cache_disk_module<pos:position pos:line="4" pos:column="68"/></name></expr></argument>)<pos:position pos:line="4" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="70"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">disk_cache_object_t<pos:position pos:line="5" pos:column="24"/></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">dobj<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><operator pos:line="5" pos:column="33">(<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="34">disk_cache_object_t<pos:position pos:line="5" pos:column="53"/></name> <operator pos:line="5" pos:column="54">*<pos:position pos:line="5" pos:column="55"/></operator><operator pos:line="5" pos:column="55">)<pos:position pos:line="5" pos:column="56"/></operator> <name><name pos:line="5" pos:column="57">h<pos:position pos:line="5" pos:column="58"/></name><operator pos:line="5" pos:column="58">-&gt;<pos:position pos:line="5" pos:column="63"/></operator><name pos:line="5" pos:column="60">cache_obj<pos:position pos:line="5" pos:column="69"/></name><operator pos:line="5" pos:column="69">-&gt;<pos:position pos:line="5" pos:column="74"/></operator><name pos:line="5" pos:column="71">vobj<pos:position pos:line="5" pos:column="75"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="76"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_status_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">rv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* write the headers to disk at the last possible moment */</comment>
    <expr_stmt><expr><name pos:line="9" pos:column="5">rv<pos:position pos:line="9" pos:column="7"/></name> <operator pos:line="9" pos:column="8">=<pos:position pos:line="9" pos:column="9"/></operator> <call><name pos:line="9" pos:column="10">write_headers<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">h<pos:position pos:line="9" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="27">r<pos:position pos:line="9" pos:column="28"/></name></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* move header and data tempfiles to the final destination */</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">APR_SUCCESS<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">==<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">rv<pos:position pos:line="12" pos:column="26"/></name></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27"> <block pos:line="12" pos:column="28">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">rv<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">file_cache_el_final<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">conf<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="40">&amp;<pos:position pos:line="13" pos:column="45"/></operator><name><name pos:line="13" pos:column="41">dobj<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">-&gt;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="47">hdrs<pos:position pos:line="13" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="53">r<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">APR_SUCCESS<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">==<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">rv<pos:position pos:line="15" pos:column="26"/></name></expr>)<pos:position pos:line="15" pos:column="27"/></condition><then pos:line="15" pos:column="27"> <block pos:line="15" pos:column="28">{
        <expr_stmt><expr><name pos:line="16" pos:column="9">rv<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">file_cache_el_final<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">conf<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="40">&amp;<pos:position pos:line="16" pos:column="45"/></operator><name><name pos:line="16" pos:column="41">dobj<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">-&gt;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="47">vary<pos:position pos:line="16" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="53">r<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">APR_SUCCESS<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">==<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">rv<pos:position pos:line="18" pos:column="26"/></name></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27"> <block pos:line="18" pos:column="28">{
        <expr_stmt><expr><name pos:line="19" pos:column="9">rv<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">file_cache_el_final<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">conf<pos:position pos:line="19" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="40">&amp;<pos:position pos:line="19" pos:column="45"/></operator><name><name pos:line="19" pos:column="41">dobj<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">-&gt;<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="47">data<pos:position pos:line="19" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="53">r<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="22" pos:column="5">/* remove the cached items completely on any failure */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">APR_SUCCESS<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">!=<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="24">rv<pos:position pos:line="23" pos:column="26"/></name></expr>)<pos:position pos:line="23" pos:column="27"/></condition><then pos:line="23" pos:column="27"> <block pos:line="23" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">remove_url<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><name pos:line="24" pos:column="20">h<pos:position pos:line="24" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="23">r<pos:position pos:line="24" pos:column="24"/></name></expr></argument>)<pos:position pos:line="24" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">ap_log_rerror<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">APLOG_MARK<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="35">APLOG_DEBUG<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="48">0<pos:position pos:line="25" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">r<pos:position pos:line="25" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="54">APLOGNO<pos:position pos:line="25" pos:column="61"/></name><argument_list pos:line="25" pos:column="61">(<argument><expr><literal type="number" pos:line="25" pos:column="62">00736<pos:position pos:line="25" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call>
                <literal type="string" pos:line="26" pos:column="17">"commit_entity: URL '%s' not cached due to earlier disk error."<pos:position pos:line="26" pos:column="80"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="27" pos:column="17">dobj<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">name<pos:position pos:line="27" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then>
    <else pos:line="29" pos:column="5">else <block pos:line="29" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">ap_log_rerror<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><name pos:line="30" pos:column="23">APLOG_MARK<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="35">APLOG_DEBUG<pos:position pos:line="30" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="48">0<pos:position pos:line="30" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="51">r<pos:position pos:line="30" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="54">APLOGNO<pos:position pos:line="30" pos:column="61"/></name><argument_list pos:line="30" pos:column="61">(<argument><expr><literal type="number" pos:line="30" pos:column="62">00737<pos:position pos:line="30" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="68"/></argument_list></call>
                <literal type="string" pos:line="31" pos:column="17">"commit_entity: Headers and body for URL %s cached."<pos:position pos:line="31" pos:column="69"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="32" pos:column="17">dobj<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">-&gt;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="23">name<pos:position pos:line="32" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">apr_pool_destroy<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><name><name pos:line="35" pos:column="22">dobj<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">-&gt;<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="28">data<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">.<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="33">pool<pos:position pos:line="35" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt>

    <return pos:line="37" pos:column="5">return <expr><name pos:line="37" pos:column="12">APR_SUCCESS<pos:position pos:line="37" pos:column="23"/></name></expr>;<pos:position pos:line="37" pos:column="24"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2938_httpd-2.2.34.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">dbd_oracle_get_entry<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">apr_dbd_row_t<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">row<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">int<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">n<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ub4<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">len<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><literal type="number" pos:line="3" pos:column="15">0<pos:position pos:line="3" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ub1<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">csform<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ub2<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">csid<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">buflen<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">buf<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><name pos:line="7" pos:column="17">NULL<pos:position pos:line="7" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">define_arg<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">val<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><operator pos:line="8" pos:column="23">&amp;<pos:position pos:line="8" pos:column="28"/></operator><name><name pos:line="8" pos:column="24">row<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">res<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">statement<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">-&gt;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="45">out<pos:position pos:line="8" pos:column="48"/></name><index pos:line="8" pos:column="48">[<expr><name pos:line="8" pos:column="49">n<pos:position pos:line="8" pos:column="50"/></name></expr>]<pos:position pos:line="8" pos:column="51"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_dbd_t<pos:position pos:line="9" pos:column="14"/></name> <modifier pos:line="9" pos:column="15">*<pos:position pos:line="9" pos:column="16"/></modifier></type><name pos:line="9" pos:column="16">sql<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><name><name pos:line="9" pos:column="22">row<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">res<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">handle<pos:position pos:line="9" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">int_errorcode<pos:position pos:line="10" pos:column="18"/></name></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">n<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">&lt;<pos:position pos:line="12" pos:column="16"/></operator> <literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator> <operator pos:line="12" pos:column="17">||<pos:position pos:line="12" pos:column="19"/></operator> <operator pos:line="12" pos:column="20">(<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">n<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&gt;=<pos:position pos:line="12" pos:column="28"/></operator> <name><name pos:line="12" pos:column="26">row<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">res<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">statement<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">-&gt;<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="47">nout<pos:position pos:line="12" pos:column="51"/></name></name><operator pos:line="12" pos:column="51">)<pos:position pos:line="12" pos:column="52"/></operator> <operator pos:line="12" pos:column="53">||<pos:position pos:line="12" pos:column="55"/></operator> <operator pos:line="12" pos:column="56">(<pos:position pos:line="12" pos:column="57"/></operator><name><name pos:line="12" pos:column="57">val<pos:position pos:line="12" pos:column="60"/></name><operator pos:line="12" pos:column="60">-&gt;<pos:position pos:line="12" pos:column="65"/></operator><name pos:line="12" pos:column="62">ind<pos:position pos:line="12" pos:column="65"/></name></name> <operator pos:line="12" pos:column="66">==<pos:position pos:line="12" pos:column="68"/></operator> <operator pos:line="12" pos:column="69">-<pos:position pos:line="12" pos:column="70"/></operator><literal type="number" pos:line="12" pos:column="70">1<pos:position pos:line="12" pos:column="71"/></literal><operator pos:line="12" pos:column="71">)<pos:position pos:line="12" pos:column="72"/></operator></expr>)<pos:position pos:line="12" pos:column="73"/></condition><then pos:line="12" pos:column="73"> <block pos:line="12" pos:column="74">{
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <switch pos:line="16" pos:column="5">switch <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">val<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">type<pos:position pos:line="16" pos:column="22"/></name></name></expr>)<pos:position pos:line="16" pos:column="23"/></condition> <block pos:line="16" pos:column="24">{
    <case pos:line="17" pos:column="5">case <expr><name pos:line="17" pos:column="10">SQLT_BLOB<pos:position pos:line="17" pos:column="19"/></name></expr>:<pos:position pos:line="17" pos:column="20"/></case>
    <case pos:line="18" pos:column="5">case <expr><name pos:line="18" pos:column="10">SQLT_CLOB<pos:position pos:line="18" pos:column="19"/></name></expr>:<pos:position pos:line="18" pos:column="20"/></case>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">sql<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">status<pos:position pos:line="19" pos:column="20"/></name></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <call><name pos:line="19" pos:column="23">OCILobGetLength<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><name><name pos:line="19" pos:column="39">sql<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">-&gt;<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="44">svc<pos:position pos:line="19" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="49">sql<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">-&gt;<pos:position pos:line="19" pos:column="57"/></operator><name pos:line="19" pos:column="54">err<pos:position pos:line="19" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="59">val<pos:position pos:line="19" pos:column="62"/></name><operator pos:line="19" pos:column="62">-&gt;<pos:position pos:line="19" pos:column="67"/></operator><name pos:line="19" pos:column="64">buf<pos:position pos:line="19" pos:column="67"/></name><operator pos:line="19" pos:column="67">.<pos:position pos:line="19" pos:column="68"/></operator><name pos:line="19" pos:column="68">lobval<pos:position pos:line="19" pos:column="74"/></name></name></expr></argument>,
                                      <argument><expr><operator pos:line="20" pos:column="39">&amp;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="40">len<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
        <switch pos:line="21" pos:column="9">switch <condition pos:line="21" pos:column="16">(<expr><name><name pos:line="21" pos:column="17">sql<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">status<pos:position pos:line="21" pos:column="28"/></name></name></expr>)<pos:position pos:line="21" pos:column="29"/></condition> <block pos:line="21" pos:column="30">{
        <case pos:line="22" pos:column="9">case <expr><name pos:line="22" pos:column="14">OCI_SUCCESS<pos:position pos:line="22" pos:column="25"/></name></expr>:<pos:position pos:line="22" pos:column="26"/></case>
        <case pos:line="23" pos:column="9">case <expr><name pos:line="23" pos:column="14">OCI_SUCCESS_WITH_INFO<pos:position pos:line="23" pos:column="35"/></name></expr>:<pos:position pos:line="23" pos:column="36"/></case>
            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><name pos:line="24" pos:column="17">len<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">==<pos:position pos:line="24" pos:column="23"/></operator> <literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26"> <block pos:line="24" pos:column="27">{
                <expr_stmt><expr><name pos:line="25" pos:column="17">buf<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <literal type="string" pos:line="25" pos:column="23">""<pos:position pos:line="25" pos:column="25"/></literal></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="26" pos:column="14"/></block></then></if>
            <break pos:line="27" pos:column="13">break;<pos:position pos:line="27" pos:column="19"/></break>
        <case pos:line="28" pos:column="9">case <expr><name pos:line="28" pos:column="14">OCI_ERROR<pos:position pos:line="28" pos:column="23"/></name></expr>:<pos:position pos:line="28" pos:column="24"/></case>
<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef<pos:position pos:line="29" pos:column="7"/></cpp:directive> <name pos:line="29" pos:column="8">DEBUG<pos:position pos:line="29" pos:column="13"/></name></cpp:ifdef>
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">OCIErrorGet<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name><name pos:line="30" pos:column="25">sql<pos:position pos:line="30" pos:column="28"/></name><operator pos:line="30" pos:column="28">-&gt;<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="30">err<pos:position pos:line="30" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="35">1<pos:position pos:line="30" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">NULL<pos:position pos:line="30" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="44">&amp;<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="45">errorcode<pos:position pos:line="30" pos:column="54"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="31" pos:column="25">sql<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">-&gt;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="30">buf<pos:position pos:line="31" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="35">sizeof<argument_list pos:line="31" pos:column="41">(<argument><expr><name><name pos:line="31" pos:column="42">sql<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">-&gt;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="47">buf<pos:position pos:line="31" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="31" pos:column="53">OCI_HTYPE_ERROR<pos:position pos:line="31" pos:column="68"/></name></expr></argument>)<pos:position pos:line="31" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">printf<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><literal type="string" pos:line="32" pos:column="20">"Finding LOB length: %s\n"<pos:position pos:line="32" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="48">sql<pos:position pos:line="32" pos:column="51"/></name><operator pos:line="32" pos:column="51">-&gt;<pos:position pos:line="32" pos:column="56"/></operator><name pos:line="32" pos:column="53">buf<pos:position pos:line="32" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="58"/></expr_stmt>
            <break pos:line="33" pos:column="13">break;<pos:position pos:line="33" pos:column="19"/></break>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif>
        <default pos:line="35" pos:column="9">default:<pos:position pos:line="35" pos:column="17"/></default>
            <break pos:line="36" pos:column="13">break;<pos:position pos:line="36" pos:column="19"/></break>
        }<pos:position pos:line="37" pos:column="10"/></block></switch>

        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">len<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">==<pos:position pos:line="39" pos:column="19"/></operator> <literal type="number" pos:line="39" pos:column="20">0<pos:position pos:line="39" pos:column="21"/></literal></expr>)<pos:position pos:line="39" pos:column="22"/></condition><then pos:line="39" pos:column="22"> <block pos:line="39" pos:column="23">{
            <break pos:line="40" pos:column="13">break;<pos:position pos:line="40" pos:column="19"/></break>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>

        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name><name pos:line="43" pos:column="13">val<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">-&gt;<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="18">type<pos:position pos:line="43" pos:column="22"/></name></name> <operator pos:line="43" pos:column="23">==<pos:position pos:line="43" pos:column="25"/></operator> <name pos:line="43" pos:column="26">APR_DBD_TYPE_CLOB<pos:position pos:line="43" pos:column="43"/></name></expr>)<pos:position pos:line="43" pos:column="44"/></condition><then pos:line="43" pos:column="44"> <block pos:line="43" pos:column="45">{
<cpp:if pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">if<pos:position pos:line="44" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="44" pos:column="5">1<pos:position pos:line="44" pos:column="6"/></literal></expr></cpp:if>
            <comment type="block" pos:line="45" pos:column="13">/* Is this necessary, or can it be defaulted? */</comment>
            <expr_stmt><expr><name><name pos:line="46" pos:column="13">sql<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">status<pos:position pos:line="46" pos:column="24"/></name></name> <operator pos:line="46" pos:column="25">=<pos:position pos:line="46" pos:column="26"/></operator> <call><name pos:line="46" pos:column="27">OCILobCharSetForm<pos:position pos:line="46" pos:column="44"/></name><argument_list pos:line="46" pos:column="44">(<argument><expr><name pos:line="46" pos:column="45">dbd_oracle_env<pos:position pos:line="46" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="61">sql<pos:position pos:line="46" pos:column="64"/></name><operator pos:line="46" pos:column="64">-&gt;<pos:position pos:line="46" pos:column="69"/></operator><name pos:line="46" pos:column="66">err<pos:position pos:line="46" pos:column="69"/></name></name></expr></argument>,
                                            <argument><expr><name><name pos:line="47" pos:column="45">val<pos:position pos:line="47" pos:column="48"/></name><operator pos:line="47" pos:column="48">-&gt;<pos:position pos:line="47" pos:column="53"/></operator><name pos:line="47" pos:column="50">buf<pos:position pos:line="47" pos:column="53"/></name><operator pos:line="47" pos:column="53">.<pos:position pos:line="47" pos:column="54"/></operator><name pos:line="47" pos:column="54">lobval<pos:position pos:line="47" pos:column="60"/></name></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="62">&amp;<pos:position pos:line="47" pos:column="67"/></operator><name pos:line="47" pos:column="63">csform<pos:position pos:line="47" pos:column="69"/></name></expr></argument>)<pos:position pos:line="47" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="71"/></expr_stmt>
            <if pos:line="48" pos:column="13">if <condition pos:line="48" pos:column="16">(<expr><name><name pos:line="48" pos:column="17">sql<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">-&gt;<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="22">status<pos:position pos:line="48" pos:column="28"/></name></name> <operator pos:line="48" pos:column="29">==<pos:position pos:line="48" pos:column="31"/></operator> <name pos:line="48" pos:column="32">OCI_SUCCESS<pos:position pos:line="48" pos:column="43"/></name></expr>)<pos:position pos:line="48" pos:column="44"/></condition><then pos:line="48" pos:column="44"> <block pos:line="48" pos:column="45">{
                <expr_stmt><expr><name><name pos:line="49" pos:column="17">sql<pos:position pos:line="49" pos:column="20"/></name><operator pos:line="49" pos:column="20">-&gt;<pos:position pos:line="49" pos:column="25"/></operator><name pos:line="49" pos:column="22">status<pos:position pos:line="49" pos:column="28"/></name></name> <operator pos:line="49" pos:column="29">=<pos:position pos:line="49" pos:column="30"/></operator> <call><name pos:line="49" pos:column="31">OCILobCharSetId<pos:position pos:line="49" pos:column="46"/></name><argument_list pos:line="49" pos:column="46">(<argument><expr><name pos:line="49" pos:column="47">dbd_oracle_env<pos:position pos:line="49" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="63">sql<pos:position pos:line="49" pos:column="66"/></name><operator pos:line="49" pos:column="66">-&gt;<pos:position pos:line="49" pos:column="71"/></operator><name pos:line="49" pos:column="68">err<pos:position pos:line="49" pos:column="71"/></name></name></expr></argument>,
                                              <argument><expr><name><name pos:line="50" pos:column="47">val<pos:position pos:line="50" pos:column="50"/></name><operator pos:line="50" pos:column="50">-&gt;<pos:position pos:line="50" pos:column="55"/></operator><name pos:line="50" pos:column="52">buf<pos:position pos:line="50" pos:column="55"/></name><operator pos:line="50" pos:column="55">.<pos:position pos:line="50" pos:column="56"/></operator><name pos:line="50" pos:column="56">lobval<pos:position pos:line="50" pos:column="62"/></name></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="64">&amp;<pos:position pos:line="50" pos:column="69"/></operator><name pos:line="50" pos:column="65">csid<pos:position pos:line="50" pos:column="69"/></name></expr></argument>)<pos:position pos:line="50" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="71"/></expr_stmt>
            }<pos:position pos:line="51" pos:column="14"/></block></then></if>
            <switch pos:line="52" pos:column="13">switch <condition pos:line="52" pos:column="20">(<expr><name><name pos:line="52" pos:column="21">sql<pos:position pos:line="52" pos:column="24"/></name><operator pos:line="52" pos:column="24">-&gt;<pos:position pos:line="52" pos:column="29"/></operator><name pos:line="52" pos:column="26">status<pos:position pos:line="52" pos:column="32"/></name></name></expr>)<pos:position pos:line="52" pos:column="33"/></condition> <block pos:line="52" pos:column="34">{
            <case pos:line="53" pos:column="13">case <expr><name pos:line="53" pos:column="18">OCI_SUCCESS<pos:position pos:line="53" pos:column="29"/></name></expr>:<pos:position pos:line="53" pos:column="30"/></case>
            <case pos:line="54" pos:column="13">case <expr><name pos:line="54" pos:column="18">OCI_SUCCESS_WITH_INFO<pos:position pos:line="54" pos:column="39"/></name></expr>:<pos:position pos:line="54" pos:column="40"/></case>
                <expr_stmt><expr><name pos:line="55" pos:column="17">buflen<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator> <operator pos:line="55" pos:column="26">(<pos:position pos:line="55" pos:column="27"/></operator><name pos:line="55" pos:column="27">len<pos:position pos:line="55" pos:column="30"/></name><operator pos:line="55" pos:column="30">+<pos:position pos:line="55" pos:column="31"/></operator><literal type="number" pos:line="55" pos:column="31">1<pos:position pos:line="55" pos:column="32"/></literal><operator pos:line="55" pos:column="32">)<pos:position pos:line="55" pos:column="33"/></operator> <operator pos:line="55" pos:column="34">*<pos:position pos:line="55" pos:column="35"/></operator> <literal type="number" pos:line="55" pos:column="36">4<pos:position pos:line="55" pos:column="37"/></literal></expr>;<pos:position pos:line="55" pos:column="38"/></expr_stmt> <comment type="block" pos:line="55" pos:column="39">/* ugh, wasteful UCS-4 handling */</comment>
                <comment type="block" pos:line="56" pos:column="17">/* zeroise all - where the string ends depends on charset */</comment>
                <expr_stmt><expr><name pos:line="57" pos:column="17">buf<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">=<pos:position pos:line="57" pos:column="22"/></operator> <call><name pos:line="57" pos:column="23">apr_pcalloc<pos:position pos:line="57" pos:column="34"/></name><argument_list pos:line="57" pos:column="34">(<argument><expr><name><name pos:line="57" pos:column="35">row<pos:position pos:line="57" pos:column="38"/></name><operator pos:line="57" pos:column="38">-&gt;<pos:position pos:line="57" pos:column="43"/></operator><name pos:line="57" pos:column="40">pool<pos:position pos:line="57" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="46">buflen<pos:position pos:line="57" pos:column="52"/></name></expr></argument>)<pos:position pos:line="57" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="54"/></expr_stmt>
                <break pos:line="58" pos:column="17">break;<pos:position pos:line="58" pos:column="23"/></break>
<cpp:ifdef pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">ifdef<pos:position pos:line="59" pos:column="7"/></cpp:directive> <name pos:line="59" pos:column="8">DEBUG<pos:position pos:line="59" pos:column="13"/></name></cpp:ifdef>
            <case pos:line="60" pos:column="13">case <expr><name pos:line="60" pos:column="18">OCI_ERROR<pos:position pos:line="60" pos:column="27"/></name></expr>:<pos:position pos:line="60" pos:column="28"/></case>
                <expr_stmt><expr><call><name pos:line="61" pos:column="17">OCIErrorGet<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><name><name pos:line="61" pos:column="29">sql<pos:position pos:line="61" pos:column="32"/></name><operator pos:line="61" pos:column="32">-&gt;<pos:position pos:line="61" pos:column="37"/></operator><name pos:line="61" pos:column="34">err<pos:position pos:line="61" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="39">1<pos:position pos:line="61" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="42">NULL<pos:position pos:line="61" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="48">&amp;<pos:position pos:line="61" pos:column="53"/></operator><name pos:line="61" pos:column="49">errorcode<pos:position pos:line="61" pos:column="58"/></name></expr></argument>,
                            <argument><expr><name><name pos:line="62" pos:column="29">sql<pos:position pos:line="62" pos:column="32"/></name><operator pos:line="62" pos:column="32">-&gt;<pos:position pos:line="62" pos:column="37"/></operator><name pos:line="62" pos:column="34">buf<pos:position pos:line="62" pos:column="37"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="62" pos:column="39">sizeof<argument_list pos:line="62" pos:column="45">(<argument><expr><name><name pos:line="62" pos:column="46">sql<pos:position pos:line="62" pos:column="49"/></name><operator pos:line="62" pos:column="49">-&gt;<pos:position pos:line="62" pos:column="54"/></operator><name pos:line="62" pos:column="51">buf<pos:position pos:line="62" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="62" pos:column="57">OCI_HTYPE_ERROR<pos:position pos:line="62" pos:column="72"/></name></expr></argument>)<pos:position pos:line="62" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="74"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="63" pos:column="17">printf<pos:position pos:line="63" pos:column="23"/></name><argument_list pos:line="63" pos:column="23">(<argument><expr><literal type="string" pos:line="63" pos:column="24">"Reading LOB character set: %s\n"<pos:position pos:line="63" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="59">sql<pos:position pos:line="63" pos:column="62"/></name><operator pos:line="63" pos:column="62">-&gt;<pos:position pos:line="63" pos:column="67"/></operator><name pos:line="63" pos:column="64">buf<pos:position pos:line="63" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="69"/></expr_stmt>
                <break pos:line="64" pos:column="17">break;<pos:position pos:line="64" pos:column="23"/></break> <comment type="block" format="doxygen" pos:line="64" pos:column="24">/*** XXX?? ***/</comment>
<cpp:endif pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">endif<pos:position pos:line="65" pos:column="7"/></cpp:directive></cpp:endif>
            <default pos:line="66" pos:column="13">default:<pos:position pos:line="66" pos:column="21"/></default>
                <break pos:line="67" pos:column="17">break;<pos:position pos:line="67" pos:column="23"/></break> <comment type="block" format="doxygen" pos:line="67" pos:column="24">/*** XXX?? ***/</comment>
            }<pos:position pos:line="68" pos:column="14"/></block></switch>
<cpp:else pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">else<pos:position pos:line="69" pos:column="6"/></cpp:directive></cpp:else>   <comment type="block" pos:line="69" pos:column="9">/* ignore charset */</comment>
            <expr_stmt><expr><name pos:line="70" pos:column="13">buflen<pos:position pos:line="70" pos:column="19"/></name> <operator pos:line="70" pos:column="20">=<pos:position pos:line="70" pos:column="21"/></operator> <operator pos:line="70" pos:column="22">(<pos:position pos:line="70" pos:column="23"/></operator><name pos:line="70" pos:column="23">len<pos:position pos:line="70" pos:column="26"/></name><operator pos:line="70" pos:column="26">+<pos:position pos:line="70" pos:column="27"/></operator><literal type="number" pos:line="70" pos:column="27">1<pos:position pos:line="70" pos:column="28"/></literal><operator pos:line="70" pos:column="28">)<pos:position pos:line="70" pos:column="29"/></operator> <operator pos:line="70" pos:column="30">*<pos:position pos:line="70" pos:column="31"/></operator> <literal type="number" pos:line="70" pos:column="32">4<pos:position pos:line="70" pos:column="33"/></literal></expr>;<pos:position pos:line="70" pos:column="34"/></expr_stmt> <comment type="block" pos:line="70" pos:column="35">/* ugh, wasteful UCS-4 handling */</comment>
            <comment type="block" pos:line="71" pos:column="13">/* zeroise all - where the string ends depends on charset */</comment>
            <expr_stmt><expr><name pos:line="72" pos:column="13">buf<pos:position pos:line="72" pos:column="16"/></name> <operator pos:line="72" pos:column="17">=<pos:position pos:line="72" pos:column="18"/></operator> <call><name pos:line="72" pos:column="19">apr_pcalloc<pos:position pos:line="72" pos:column="30"/></name><argument_list pos:line="72" pos:column="30">(<argument><expr><name><name pos:line="72" pos:column="31">row<pos:position pos:line="72" pos:column="34"/></name><operator pos:line="72" pos:column="34">-&gt;<pos:position pos:line="72" pos:column="39"/></operator><name pos:line="72" pos:column="36">pool<pos:position pos:line="72" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="42">buflen<pos:position pos:line="72" pos:column="48"/></name></expr></argument>)<pos:position pos:line="72" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="50"/></expr_stmt>
<cpp:endif pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">endif<pos:position pos:line="73" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="74" pos:column="10"/></block></then> <else pos:line="74" pos:column="11">else <block pos:line="74" pos:column="16">{
            <comment type="block" pos:line="75" pos:column="13">/* BUG: this'll only work if the BLOB looks like a string */</comment>
            <expr_stmt><expr><name pos:line="76" pos:column="13">buflen<pos:position pos:line="76" pos:column="19"/></name> <operator pos:line="76" pos:column="20">=<pos:position pos:line="76" pos:column="21"/></operator> <name pos:line="76" pos:column="22">len<pos:position pos:line="76" pos:column="25"/></name></expr>;<pos:position pos:line="76" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name pos:line="77" pos:column="13">buf<pos:position pos:line="77" pos:column="16"/></name> <operator pos:line="77" pos:column="17">=<pos:position pos:line="77" pos:column="18"/></operator> <call><name pos:line="77" pos:column="19">apr_palloc<pos:position pos:line="77" pos:column="29"/></name><argument_list pos:line="77" pos:column="29">(<argument><expr><name><name pos:line="77" pos:column="30">row<pos:position pos:line="77" pos:column="33"/></name><operator pos:line="77" pos:column="33">-&gt;<pos:position pos:line="77" pos:column="38"/></operator><name pos:line="77" pos:column="35">pool<pos:position pos:line="77" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="41">buflen<pos:position pos:line="77" pos:column="47"/></name><operator pos:line="77" pos:column="47">+<pos:position pos:line="77" pos:column="48"/></operator><literal type="number" pos:line="77" pos:column="48">1<pos:position pos:line="77" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="78" pos:column="13">buf<pos:position pos:line="78" pos:column="16"/></name><index pos:line="78" pos:column="16">[<expr><name pos:line="78" pos:column="17">buflen<pos:position pos:line="78" pos:column="23"/></name></expr>]<pos:position pos:line="78" pos:column="24"/></index></name> <operator pos:line="78" pos:column="25">=<pos:position pos:line="78" pos:column="26"/></operator> <literal type="number" pos:line="78" pos:column="27">0<pos:position pos:line="78" pos:column="28"/></literal></expr>;<pos:position pos:line="78" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="79" pos:column="10"/></block></else></if>

        <if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><operator pos:line="81" pos:column="13">!<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="14">buf<pos:position pos:line="81" pos:column="17"/></name></expr>)<pos:position pos:line="81" pos:column="18"/></condition><then pos:line="81" pos:column="18"> <block pos:line="81" pos:column="19">{
            <break pos:line="82" pos:column="13">break;<pos:position pos:line="82" pos:column="19"/></break>
        }<pos:position pos:line="83" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="85" pos:column="9">sql<pos:position pos:line="85" pos:column="12"/></name><operator pos:line="85" pos:column="12">-&gt;<pos:position pos:line="85" pos:column="17"/></operator><name pos:line="85" pos:column="14">status<pos:position pos:line="85" pos:column="20"/></name></name> <operator pos:line="85" pos:column="21">=<pos:position pos:line="85" pos:column="22"/></operator> <call><name pos:line="85" pos:column="23">OCILobRead<pos:position pos:line="85" pos:column="33"/></name><argument_list pos:line="85" pos:column="33">(<argument><expr><name><name pos:line="85" pos:column="34">sql<pos:position pos:line="85" pos:column="37"/></name><operator pos:line="85" pos:column="37">-&gt;<pos:position pos:line="85" pos:column="42"/></operator><name pos:line="85" pos:column="39">svc<pos:position pos:line="85" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="44">sql<pos:position pos:line="85" pos:column="47"/></name><operator pos:line="85" pos:column="47">-&gt;<pos:position pos:line="85" pos:column="52"/></operator><name pos:line="85" pos:column="49">err<pos:position pos:line="85" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="54">val<pos:position pos:line="85" pos:column="57"/></name><operator pos:line="85" pos:column="57">-&gt;<pos:position pos:line="85" pos:column="62"/></operator><name pos:line="85" pos:column="59">buf<pos:position pos:line="85" pos:column="62"/></name><operator pos:line="85" pos:column="62">.<pos:position pos:line="85" pos:column="63"/></operator><name pos:line="85" pos:column="63">lobval<pos:position pos:line="85" pos:column="69"/></name></name></expr></argument>,
                                 <argument><expr><operator pos:line="86" pos:column="34">&amp;<pos:position pos:line="86" pos:column="39"/></operator><name pos:line="86" pos:column="35">len<pos:position pos:line="86" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="40">1<pos:position pos:line="86" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="86" pos:column="43">(<pos:position pos:line="86" pos:column="44"/></operator><name pos:line="86" pos:column="44">dvoid<pos:position pos:line="86" pos:column="49"/></name><operator pos:line="86" pos:column="49">*<pos:position pos:line="86" pos:column="50"/></operator><operator pos:line="86" pos:column="50">)<pos:position pos:line="86" pos:column="51"/></operator> <name pos:line="86" pos:column="52">buf<pos:position pos:line="86" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="57">buflen<pos:position pos:line="86" pos:column="63"/></name></expr></argument>,
                                 <argument><expr><name pos:line="87" pos:column="34">NULL<pos:position pos:line="87" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="40">NULL<pos:position pos:line="87" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="46">csid<pos:position pos:line="87" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="52">csform<pos:position pos:line="87" pos:column="58"/></name></expr></argument>)<pos:position pos:line="87" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="60"/></expr_stmt>
        <switch pos:line="88" pos:column="9">switch <condition pos:line="88" pos:column="16">(<expr><name><name pos:line="88" pos:column="17">sql<pos:position pos:line="88" pos:column="20"/></name><operator pos:line="88" pos:column="20">-&gt;<pos:position pos:line="88" pos:column="25"/></operator><name pos:line="88" pos:column="22">status<pos:position pos:line="88" pos:column="28"/></name></name></expr>)<pos:position pos:line="88" pos:column="29"/></condition> <block pos:line="88" pos:column="30">{
        <case pos:line="89" pos:column="9">case <expr><name pos:line="89" pos:column="14">OCI_SUCCESS<pos:position pos:line="89" pos:column="25"/></name></expr>:<pos:position pos:line="89" pos:column="26"/></case>
        <case pos:line="90" pos:column="9">case <expr><name pos:line="90" pos:column="14">OCI_SUCCESS_WITH_INFO<pos:position pos:line="90" pos:column="35"/></name></expr>:<pos:position pos:line="90" pos:column="36"/></case>
            <break pos:line="91" pos:column="13">break;<pos:position pos:line="91" pos:column="19"/></break>
<cpp:ifdef pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">ifdef<pos:position pos:line="92" pos:column="7"/></cpp:directive> <name pos:line="92" pos:column="8">DEBUG<pos:position pos:line="92" pos:column="13"/></name></cpp:ifdef>
        <case pos:line="93" pos:column="9">case <expr><name pos:line="93" pos:column="14">OCI_ERROR<pos:position pos:line="93" pos:column="23"/></name></expr>:<pos:position pos:line="93" pos:column="24"/></case>
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">OCIErrorGet<pos:position pos:line="94" pos:column="24"/></name><argument_list pos:line="94" pos:column="24">(<argument><expr><name><name pos:line="94" pos:column="25">sql<pos:position pos:line="94" pos:column="28"/></name><operator pos:line="94" pos:column="28">-&gt;<pos:position pos:line="94" pos:column="33"/></operator><name pos:line="94" pos:column="30">err<pos:position pos:line="94" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="35">1<pos:position pos:line="94" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="38">NULL<pos:position pos:line="94" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="44">&amp;<pos:position pos:line="94" pos:column="49"/></operator><name pos:line="94" pos:column="45">errorcode<pos:position pos:line="94" pos:column="54"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="95" pos:column="25">sql<pos:position pos:line="95" pos:column="28"/></name><operator pos:line="95" pos:column="28">-&gt;<pos:position pos:line="95" pos:column="33"/></operator><name pos:line="95" pos:column="30">buf<pos:position pos:line="95" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="95" pos:column="35">sizeof<argument_list pos:line="95" pos:column="41">(<argument><expr><name><name pos:line="95" pos:column="42">sql<pos:position pos:line="95" pos:column="45"/></name><operator pos:line="95" pos:column="45">-&gt;<pos:position pos:line="95" pos:column="50"/></operator><name pos:line="95" pos:column="47">buf<pos:position pos:line="95" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="95" pos:column="53">OCI_HTYPE_ERROR<pos:position pos:line="95" pos:column="68"/></name></expr></argument>)<pos:position pos:line="95" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="96" pos:column="13">printf<pos:position pos:line="96" pos:column="19"/></name><argument_list pos:line="96" pos:column="19">(<argument><expr><literal type="string" pos:line="96" pos:column="20">"Reading LOB: %s\n"<pos:position pos:line="96" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="41">sql<pos:position pos:line="96" pos:column="44"/></name><operator pos:line="96" pos:column="44">-&gt;<pos:position pos:line="96" pos:column="49"/></operator><name pos:line="96" pos:column="46">buf<pos:position pos:line="96" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name pos:line="97" pos:column="13">buf<pos:position pos:line="97" pos:column="16"/></name> <operator pos:line="97" pos:column="17">=<pos:position pos:line="97" pos:column="18"/></operator> <name pos:line="97" pos:column="19">NULL<pos:position pos:line="97" pos:column="23"/></name></expr>;<pos:position pos:line="97" pos:column="24"/></expr_stmt> <comment type="block" format="doxygen" pos:line="97" pos:column="25">/*** XXX?? ***/</comment>
            <break pos:line="98" pos:column="13">break;<pos:position pos:line="98" pos:column="19"/></break>
<cpp:endif pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">endif<pos:position pos:line="99" pos:column="7"/></cpp:directive></cpp:endif>
        <default pos:line="100" pos:column="9">default:<pos:position pos:line="100" pos:column="17"/></default>
            <expr_stmt><expr><name pos:line="101" pos:column="13">buf<pos:position pos:line="101" pos:column="16"/></name> <operator pos:line="101" pos:column="17">=<pos:position pos:line="101" pos:column="18"/></operator> <name pos:line="101" pos:column="19">NULL<pos:position pos:line="101" pos:column="23"/></name></expr>;<pos:position pos:line="101" pos:column="24"/></expr_stmt> <comment type="block" format="doxygen" pos:line="101" pos:column="25">/*** XXX?? ***/</comment>
            <break pos:line="102" pos:column="13">break;<pos:position pos:line="102" pos:column="19"/></break>
        }<pos:position pos:line="103" pos:column="10"/></block></switch>

        <break pos:line="105" pos:column="9">break;<pos:position pos:line="105" pos:column="15"/></break>
    <case pos:line="106" pos:column="5">case <expr><name pos:line="106" pos:column="10">SQLT_LNG<pos:position pos:line="106" pos:column="18"/></name></expr>:<pos:position pos:line="106" pos:column="19"/></case>
    <case pos:line="107" pos:column="5">case <expr><name pos:line="107" pos:column="10">SQLT_LBI<pos:position pos:line="107" pos:column="18"/></name></expr>:<pos:position pos:line="107" pos:column="19"/></case>
        <comment type="block" pos:line="108" pos:column="9">/* raw is struct { ub4 len; char *buf; } */</comment>
        <expr_stmt><expr><name pos:line="109" pos:column="9">len<pos:position pos:line="109" pos:column="12"/></name> <operator pos:line="109" pos:column="13">=<pos:position pos:line="109" pos:column="14"/></operator> <operator pos:line="109" pos:column="15">*<pos:position pos:line="109" pos:column="16"/></operator><operator pos:line="109" pos:column="16">(<pos:position pos:line="109" pos:column="17"/></operator><name pos:line="109" pos:column="17">ub4<pos:position pos:line="109" pos:column="20"/></name><operator pos:line="109" pos:column="20">*<pos:position pos:line="109" pos:column="21"/></operator><operator pos:line="109" pos:column="21">)<pos:position pos:line="109" pos:column="22"/></operator> <name><name pos:line="109" pos:column="23">val<pos:position pos:line="109" pos:column="26"/></name><operator pos:line="109" pos:column="26">-&gt;<pos:position pos:line="109" pos:column="31"/></operator><name pos:line="109" pos:column="28">buf<pos:position pos:line="109" pos:column="31"/></name><operator pos:line="109" pos:column="31">.<pos:position pos:line="109" pos:column="32"/></operator><name pos:line="109" pos:column="32">raw<pos:position pos:line="109" pos:column="35"/></name></name></expr>;<pos:position pos:line="109" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="110" pos:column="9">buf<pos:position pos:line="110" pos:column="12"/></name> <operator pos:line="110" pos:column="13">=<pos:position pos:line="110" pos:column="14"/></operator> <call><name pos:line="110" pos:column="15">apr_pstrndup<pos:position pos:line="110" pos:column="27"/></name><argument_list pos:line="110" pos:column="27">(<argument><expr><name><name pos:line="110" pos:column="28">row<pos:position pos:line="110" pos:column="31"/></name><operator pos:line="110" pos:column="31">-&gt;<pos:position pos:line="110" pos:column="36"/></operator><name pos:line="110" pos:column="33">pool<pos:position pos:line="110" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="110" pos:column="39">val<pos:position pos:line="110" pos:column="42"/></name><operator pos:line="110" pos:column="42">-&gt;<pos:position pos:line="110" pos:column="47"/></operator><name pos:line="110" pos:column="44">buf<pos:position pos:line="110" pos:column="47"/></name><operator pos:line="110" pos:column="47">.<pos:position pos:line="110" pos:column="48"/></operator><name pos:line="110" pos:column="48">sval<pos:position pos:line="110" pos:column="52"/></name></name> <operator pos:line="110" pos:column="53">+<pos:position pos:line="110" pos:column="54"/></operator> <sizeof pos:line="110" pos:column="55">sizeof<argument_list pos:line="110" pos:column="61">(<argument><expr><name pos:line="110" pos:column="62">ub4<pos:position pos:line="110" pos:column="65"/></name></expr></argument>)<pos:position pos:line="110" pos:column="66"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="110" pos:column="68">len<pos:position pos:line="110" pos:column="71"/></name></expr></argument>)<pos:position pos:line="110" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="73"/></expr_stmt>
        <break pos:line="111" pos:column="9">break;<pos:position pos:line="111" pos:column="15"/></break>
    <default pos:line="112" pos:column="5">default:<pos:position pos:line="112" pos:column="13"/></default>
        <expr_stmt><expr><name pos:line="113" pos:column="9">buf<pos:position pos:line="113" pos:column="12"/></name> <operator pos:line="113" pos:column="13">=<pos:position pos:line="113" pos:column="14"/></operator> <call><name pos:line="113" pos:column="15">apr_pstrndup<pos:position pos:line="113" pos:column="27"/></name><argument_list pos:line="113" pos:column="27">(<argument><expr><name><name pos:line="113" pos:column="28">row<pos:position pos:line="113" pos:column="31"/></name><operator pos:line="113" pos:column="31">-&gt;<pos:position pos:line="113" pos:column="36"/></operator><name pos:line="113" pos:column="33">pool<pos:position pos:line="113" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="39">val<pos:position pos:line="113" pos:column="42"/></name><operator pos:line="113" pos:column="42">-&gt;<pos:position pos:line="113" pos:column="47"/></operator><name pos:line="113" pos:column="44">buf<pos:position pos:line="113" pos:column="47"/></name><operator pos:line="113" pos:column="47">.<pos:position pos:line="113" pos:column="48"/></operator><name pos:line="113" pos:column="48">sval<pos:position pos:line="113" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="54">val<pos:position pos:line="113" pos:column="57"/></name><operator pos:line="113" pos:column="57">-&gt;<pos:position pos:line="113" pos:column="62"/></operator><name pos:line="113" pos:column="59">len<pos:position pos:line="113" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="64"/></expr_stmt>
        <break pos:line="114" pos:column="9">break;<pos:position pos:line="114" pos:column="15"/></break>
    }<pos:position pos:line="115" pos:column="6"/></block></switch>
    <return pos:line="116" pos:column="5">return <expr><operator pos:line="116" pos:column="12">(<pos:position pos:line="116" pos:column="13"/></operator><specifier pos:line="116" pos:column="13">const<pos:position pos:line="116" pos:column="18"/></specifier> <name pos:line="116" pos:column="19">char<pos:position pos:line="116" pos:column="23"/></name><operator pos:line="116" pos:column="23">*<pos:position pos:line="116" pos:column="24"/></operator><operator pos:line="116" pos:column="24">)<pos:position pos:line="116" pos:column="25"/></operator> <name pos:line="116" pos:column="26">buf<pos:position pos:line="116" pos:column="29"/></name></expr>;<pos:position pos:line="116" pos:column="30"/></return>
}<pos:position pos:line="117" pos:column="2"/></block></function></unit>

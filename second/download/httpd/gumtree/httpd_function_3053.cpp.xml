<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_3053.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">util_ldap_set_op_timeout<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">cmd_parms<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">cmd<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
                                            <parameter><decl><type><name pos:line="2" pos:column="45">void<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">dummy<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>,
                                            <parameter><decl><type><specifier pos:line="3" pos:column="45">const<pos:position pos:line="3" pos:column="50"/></specifier> <name pos:line="3" pos:column="51">char<pos:position pos:line="3" pos:column="55"/></name> <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier></type><name pos:line="3" pos:column="57">val<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="61"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">long<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">timeout<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">endptr<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">util_ldap_state_t<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">st<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">=
        <expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">util_ldap_state_t<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></operator><operator pos:line="8" pos:column="29">)<pos:position pos:line="8" pos:column="30"/></operator><call><name pos:line="8" pos:column="30">ap_get_module_config<pos:position pos:line="8" pos:column="50"/></name><argument_list pos:line="8" pos:column="50">(<argument><expr><name><name pos:line="8" pos:column="51">cmd<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">-&gt;<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="56">server<pos:position pos:line="8" pos:column="62"/></name><operator pos:line="8" pos:column="62">-&gt;<pos:position pos:line="8" pos:column="67"/></operator><name pos:line="8" pos:column="64">module_config<pos:position pos:line="8" pos:column="77"/></name></name></expr></argument>,
                                                  <argument><expr><operator pos:line="9" pos:column="51">&amp;<pos:position pos:line="9" pos:column="56"/></operator><name pos:line="9" pos:column="52">ldap_module<pos:position pos:line="9" pos:column="63"/></name></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="65"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">err<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><call><name pos:line="10" pos:column="23">ap_check_cmd_context<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">(<argument><expr><name pos:line="10" pos:column="44">cmd<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">GLOBAL_ONLY<pos:position pos:line="10" pos:column="60"/></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="62"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">err<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">!=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">NULL<pos:position pos:line="12" pos:column="20"/></name></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21"> <block pos:line="12" pos:column="22">{
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">err<pos:position pos:line="13" pos:column="19"/></name></expr>;<pos:position pos:line="13" pos:column="20"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="16" pos:column="5">timeout<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">strtol<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">val<pos:position pos:line="16" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="27">&amp;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="28">endptr<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="36">10<pos:position pos:line="16" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">val<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">==<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">endptr<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">)<pos:position pos:line="17" pos:column="24"/></operator> <operator pos:line="17" pos:column="25">||<pos:position pos:line="17" pos:column="27"/></operator> <operator pos:line="17" pos:column="28">(<pos:position pos:line="17" pos:column="29"/></operator><operator pos:line="17" pos:column="29">*<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">endptr<pos:position pos:line="17" pos:column="36"/></name> <operator pos:line="17" pos:column="37">!=<pos:position pos:line="17" pos:column="39"/></operator> <literal type="char" pos:line="17" pos:column="40">'\0'<pos:position pos:line="17" pos:column="44"/></literal><operator pos:line="17" pos:column="44">)<pos:position pos:line="17" pos:column="45"/></operator></expr>)<pos:position pos:line="17" pos:column="46"/></condition><then pos:line="17" pos:column="46"> <block pos:line="17" pos:column="47">{
        <return pos:line="18" pos:column="9">return <expr><literal type="string" pos:line="18" pos:column="16">"Timeout not numerical"<pos:position pos:line="18" pos:column="39"/></literal></expr>;<pos:position pos:line="18" pos:column="40"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">timeout<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">&lt;<pos:position pos:line="20" pos:column="21"/></operator> <literal type="number" pos:line="20" pos:column="19">0<pos:position pos:line="20" pos:column="20"/></literal></expr>)<pos:position pos:line="20" pos:column="21"/></condition><then pos:line="20" pos:column="21"> <block pos:line="20" pos:column="22">{
        <return pos:line="21" pos:column="9">return <expr><literal type="string" pos:line="21" pos:column="16">"Timeout must be non-negative"<pos:position pos:line="21" pos:column="46"/></literal></expr>;<pos:position pos:line="21" pos:column="47"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">timeout<pos:position pos:line="24" pos:column="16"/></name></expr>)<pos:position pos:line="24" pos:column="17"/></condition><then pos:line="24" pos:column="17"> <block pos:line="24" pos:column="18">{
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">!<pos:position pos:line="25" pos:column="14"/></operator><name><name pos:line="25" pos:column="14">st<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">-&gt;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="18">opTimeout<pos:position pos:line="25" pos:column="27"/></name></name></expr>)<pos:position pos:line="25" pos:column="28"/></condition><then pos:line="25" pos:column="28"> <block pos:line="25" pos:column="29">{
            <expr_stmt><expr><name><name pos:line="26" pos:column="13">st<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">opTimeout<pos:position pos:line="26" pos:column="26"/></name></name> <operator pos:line="26" pos:column="27">=<pos:position pos:line="26" pos:column="28"/></operator> <call><name pos:line="26" pos:column="29">apr_pcalloc<pos:position pos:line="26" pos:column="40"/></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name><name pos:line="26" pos:column="41">cmd<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">-&gt;<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="46">pool<pos:position pos:line="26" pos:column="50"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="52">sizeof<argument_list pos:line="26" pos:column="58">(<argument><expr pos:line="26" pos:column="59">struct <name pos:line="26" pos:column="66">timeval<pos:position pos:line="26" pos:column="73"/></name></expr></argument>)<pos:position pos:line="26" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">st<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">opTimeout<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">tv_sec<pos:position pos:line="28" pos:column="30"/></name></name> <operator pos:line="28" pos:column="31">=<pos:position pos:line="28" pos:column="32"/></operator> <name pos:line="28" pos:column="33">timeout<pos:position pos:line="28" pos:column="40"/></name></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then>
    <else pos:line="30" pos:column="5">else <block pos:line="30" pos:column="10">{
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">st<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">-&gt;<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="13">opTimeout<pos:position pos:line="31" pos:column="22"/></name></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <name pos:line="31" pos:column="25">NULL<pos:position pos:line="31" pos:column="29"/></name></expr>;<pos:position pos:line="31" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ap_log_error<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">(<argument><expr><name pos:line="34" pos:column="18">APLOG_MARK<pos:position pos:line="34" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="30">APLOG_DEBUG<pos:position pos:line="34" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="43">0<pos:position pos:line="34" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="46">cmd<pos:position pos:line="34" pos:column="49"/></name><operator pos:line="34" pos:column="49">-&gt;<pos:position pos:line="34" pos:column="54"/></operator><name pos:line="34" pos:column="51">server<pos:position pos:line="34" pos:column="57"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="35" pos:column="18">"[%"<pos:position pos:line="35" pos:column="22"/></literal> <name pos:line="35" pos:column="23">APR_PID_T_FMT<pos:position pos:line="35" pos:column="36"/></name> <literal type="string" pos:line="35" pos:column="37">"] ldap connection: Setting op timeout "<pos:position pos:line="35" pos:column="77"/></literal>
                 <literal type="string" pos:line="36" pos:column="18">"to %ld seconds."<pos:position pos:line="36" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="37">getpid<pos:position pos:line="36" pos:column="43"/></name><argument_list pos:line="36" pos:column="43">()<pos:position pos:line="36" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="36" pos:column="47">timeout<pos:position pos:line="36" pos:column="54"/></name></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="56"/></expr_stmt>

<cpp:ifndef pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">ifndef<pos:position pos:line="38" pos:column="8"/></cpp:directive> <name pos:line="38" pos:column="9">LDAP_OPT_TIMEOUT<pos:position pos:line="38" pos:column="25"/></name></cpp:ifndef>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">ap_log_error<pos:position pos:line="40" pos:column="17"/></name><argument_list pos:line="40" pos:column="17">(<argument><expr><name pos:line="40" pos:column="18">APLOG_MARK<pos:position pos:line="40" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="30">APLOG_DEBUG<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="43">0<pos:position pos:line="40" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="46">cmd<pos:position pos:line="40" pos:column="49"/></name><operator pos:line="40" pos:column="49">-&gt;<pos:position pos:line="40" pos:column="54"/></operator><name pos:line="40" pos:column="51">server<pos:position pos:line="40" pos:column="57"/></name></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="41" pos:column="18">"LDAP: LDAP_OPT_TIMEOUT option not supported by the "<pos:position pos:line="41" pos:column="71"/></literal>
                 <literal type="string" pos:line="42" pos:column="18">"LDAP library in use. Using LDAPTimeout value as search "<pos:position pos:line="42" pos:column="75"/></literal>
                 <literal type="string" pos:line="43" pos:column="18">"timeout only."<pos:position pos:line="43" pos:column="33"/></literal></expr></argument> )<pos:position pos:line="43" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif<pos:position pos:line="44" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="46" pos:column="5">return <expr><name pos:line="46" pos:column="12">NULL<pos:position pos:line="46" pos:column="16"/></name></expr>;<pos:position pos:line="46" pos:column="17"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

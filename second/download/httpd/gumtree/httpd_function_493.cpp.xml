<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_493.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ap_reclaim_child_processes<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">int<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">terminate<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">long<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">int<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">waittime<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><literal type="number" pos:line="4" pos:column="25">1024<pos:position pos:line="4" pos:column="29"/></literal> <operator pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></operator> <literal type="number" pos:line="4" pos:column="32">16<pos:position pos:line="4" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>      <comment type="block" pos:line="4" pos:column="41">/* in usecs */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">waitret<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">tries<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">not_dead_yet<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">max_daemons<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ap_mpm_query<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><name pos:line="10" pos:column="18">AP_MPMQ_MAX_DAEMON_USED<pos:position pos:line="10" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="43">&amp;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="44">max_daemons<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="57"/></expr_stmt>

    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init><expr><name pos:line="12" pos:column="10">tries<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <ternary><condition><expr><name pos:line="12" pos:column="18">terminate<pos:position pos:line="12" pos:column="27"/></name></expr> ?<pos:position pos:line="12" pos:column="29"/></condition><then pos:line="12" pos:column="29"> <expr><literal type="number" pos:line="12" pos:column="30">4<pos:position pos:line="12" pos:column="31"/></literal></expr> <pos:position pos:line="12" pos:column="32"/></then><else pos:line="12" pos:column="32">: <expr><literal type="number" pos:line="12" pos:column="34">1<pos:position pos:line="12" pos:column="35"/></literal></expr></else></ternary></expr>;<pos:position pos:line="12" pos:column="36"/></init> <condition><expr><name pos:line="12" pos:column="37">tries<pos:position pos:line="12" pos:column="42"/></name> <operator pos:line="12" pos:column="43">&lt;=<pos:position pos:line="12" pos:column="48"/></operator> <literal type="number" pos:line="12" pos:column="46">9<pos:position pos:line="12" pos:column="47"/></literal></expr>;<pos:position pos:line="12" pos:column="48"/></condition> <incr><expr><operator pos:line="12" pos:column="49">++<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="51">tries<pos:position pos:line="12" pos:column="56"/></name></expr></incr>)<pos:position pos:line="12" pos:column="57"/></control> <block pos:line="12" pos:column="58">{
        <comment type="block" pos:line="13" pos:column="9">/* don't want to hold up progress any more than
         * necessary, but we need to allow children a few moments to exit.
         * Set delay with an exponential backoff.
         */</comment>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">apr_sleep<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">waittime<pos:position pos:line="17" pos:column="27"/></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">waittime<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <name pos:line="18" pos:column="20">waittime<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">*<pos:position pos:line="18" pos:column="30"/></operator> <literal type="number" pos:line="18" pos:column="31">4<pos:position pos:line="18" pos:column="32"/></literal></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>

        <comment type="block" pos:line="20" pos:column="9">/* now see who is done */</comment>
        <expr_stmt><expr><name pos:line="21" pos:column="9">not_dead_yet<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <literal type="number" pos:line="21" pos:column="24">0<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
        <for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">i<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></init> <condition><expr><name pos:line="22" pos:column="21">i<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">&lt;<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="25">max_daemons<pos:position pos:line="22" pos:column="36"/></name></expr>;<pos:position pos:line="22" pos:column="37"/></condition> <incr><expr><operator pos:line="22" pos:column="38">++<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="40">i<pos:position pos:line="22" pos:column="41"/></name></expr></incr>)<pos:position pos:line="22" pos:column="42"/></control> <block pos:line="22" pos:column="43">{
            <decl_stmt><decl><type><name pos:line="23" pos:column="13">pid_t<pos:position pos:line="23" pos:column="18"/></name></type> <name pos:line="23" pos:column="19">pid<pos:position pos:line="23" pos:column="22"/></name> <init pos:line="23" pos:column="23">= <expr><call><name pos:line="23" pos:column="25">MPM_CHILD_PID<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><name pos:line="23" pos:column="39">i<pos:position pos:line="23" pos:column="40"/></name></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="42"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="24" pos:column="13">apr_proc_t<pos:position pos:line="24" pos:column="23"/></name></type> <name pos:line="24" pos:column="24">proc<pos:position pos:line="24" pos:column="28"/></name></decl>;<pos:position pos:line="24" pos:column="29"/></decl_stmt>

            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><name pos:line="26" pos:column="17">pid<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">==<pos:position pos:line="26" pos:column="23"/></operator> <literal type="number" pos:line="26" pos:column="24">0<pos:position pos:line="26" pos:column="25"/></literal></expr>)<pos:position pos:line="26" pos:column="26"/></condition><then pos:line="26" pos:column="26">
                <block type="pseudo"><continue pos:line="27" pos:column="17">continue;<pos:position pos:line="27" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><name><name pos:line="29" pos:column="13">proc<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">pid<pos:position pos:line="29" pos:column="21"/></name></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">pid<pos:position pos:line="29" pos:column="27"/></name></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name pos:line="30" pos:column="13">waitret<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <call><name pos:line="30" pos:column="23">apr_proc_wait<pos:position pos:line="30" pos:column="36"/></name><argument_list pos:line="30" pos:column="36">(<argument><expr><operator pos:line="30" pos:column="37">&amp;<pos:position pos:line="30" pos:column="42"/></operator><name pos:line="30" pos:column="38">proc<pos:position pos:line="30" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="44">NULL<pos:position pos:line="30" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="50">NULL<pos:position pos:line="30" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="56">APR_NOWAIT<pos:position pos:line="30" pos:column="66"/></name></expr></argument>)<pos:position pos:line="30" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="68"/></expr_stmt>
            <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><name pos:line="31" pos:column="17">waitret<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">!=<pos:position pos:line="31" pos:column="27"/></operator> <name pos:line="31" pos:column="28">APR_CHILD_NOTDONE<pos:position pos:line="31" pos:column="45"/></name></expr>)<pos:position pos:line="31" pos:column="46"/></condition><then pos:line="31" pos:column="46"> <block pos:line="31" pos:column="47">{
                <expr_stmt><expr><call><name pos:line="32" pos:column="17">MPM_NOTE_CHILD_KILLED<pos:position pos:line="32" pos:column="38"/></name><argument_list pos:line="32" pos:column="38">(<argument><expr><name pos:line="32" pos:column="39">i<pos:position pos:line="32" pos:column="40"/></name></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>
                <continue pos:line="33" pos:column="17">continue;<pos:position pos:line="33" pos:column="26"/></continue>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if>

            <expr_stmt><expr><operator pos:line="36" pos:column="13">++<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">not_dead_yet<pos:position pos:line="36" pos:column="27"/></name></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
            <switch pos:line="37" pos:column="13">switch <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">tries<pos:position pos:line="37" pos:column="26"/></name></expr>)<pos:position pos:line="37" pos:column="27"/></condition> <block pos:line="37" pos:column="28">{
            <case pos:line="38" pos:column="13">case <expr><literal type="number" pos:line="38" pos:column="18">1<pos:position pos:line="38" pos:column="19"/></literal></expr>:<pos:position pos:line="38" pos:column="20"/></case>     <comment type="block" pos:line="38" pos:column="25">/*  16ms */</comment>
            <case pos:line="39" pos:column="13">case <expr><literal type="number" pos:line="39" pos:column="18">2<pos:position pos:line="39" pos:column="19"/></literal></expr>:<pos:position pos:line="39" pos:column="20"/></case>     <comment type="block" pos:line="39" pos:column="25">/*  82ms */</comment>
            <case pos:line="40" pos:column="13">case <expr><literal type="number" pos:line="40" pos:column="18">3<pos:position pos:line="40" pos:column="19"/></literal></expr>:<pos:position pos:line="40" pos:column="20"/></case>     <comment type="block" pos:line="40" pos:column="25">/* 344ms */</comment>
            <case pos:line="41" pos:column="13">case <expr><literal type="number" pos:line="41" pos:column="18">4<pos:position pos:line="41" pos:column="19"/></literal></expr>:<pos:position pos:line="41" pos:column="20"/></case>     <comment type="block" pos:line="41" pos:column="25">/*  16ms */</comment>
                <break pos:line="42" pos:column="17">break;<pos:position pos:line="42" pos:column="23"/></break>

            <case pos:line="44" pos:column="13">case <expr><literal type="number" pos:line="44" pos:column="18">5<pos:position pos:line="44" pos:column="19"/></literal></expr>:<pos:position pos:line="44" pos:column="20"/></case>     <comment type="block" pos:line="44" pos:column="25">/*  82ms */</comment>
            <case pos:line="45" pos:column="13">case <expr><literal type="number" pos:line="45" pos:column="18">6<pos:position pos:line="45" pos:column="19"/></literal></expr>:<pos:position pos:line="45" pos:column="20"/></case>     <comment type="block" pos:line="45" pos:column="25">/* 344ms */</comment>
            <case pos:line="46" pos:column="13">case <expr><literal type="number" pos:line="46" pos:column="18">7<pos:position pos:line="46" pos:column="19"/></literal></expr>:<pos:position pos:line="46" pos:column="20"/></case>     <comment type="block" pos:line="46" pos:column="25">/* 1.4sec */</comment>
                <comment type="block" pos:line="47" pos:column="17">/* ok, now it's being annoying */</comment>
                <expr_stmt><expr><call><name pos:line="48" pos:column="17">ap_log_error<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">(<argument><expr><name pos:line="48" pos:column="30">APLOG_MARK<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="42">APLOG_WARNING<pos:position pos:line="48" pos:column="55"/></name></expr></argument>,
                             <argument><expr><literal type="number" pos:line="49" pos:column="30">0<pos:position pos:line="49" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="33">ap_server_conf<pos:position pos:line="49" pos:column="47"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="50" pos:column="30">"child process %ld still did not exit, "<pos:position pos:line="50" pos:column="70"/></literal>
                             <literal type="string" pos:line="51" pos:column="30">"sending a SIGTERM"<pos:position pos:line="51" pos:column="49"/></literal></expr></argument>,
                             <argument><expr><operator pos:line="52" pos:column="30">(<pos:position pos:line="52" pos:column="31"/></operator><name pos:line="52" pos:column="31">long<pos:position pos:line="52" pos:column="35"/></name><operator pos:line="52" pos:column="35">)<pos:position pos:line="52" pos:column="36"/></operator><name pos:line="52" pos:column="36">pid<pos:position pos:line="52" pos:column="39"/></name></expr></argument>)<pos:position pos:line="52" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="53" pos:column="17">kill<pos:position pos:line="53" pos:column="21"/></name><argument_list pos:line="53" pos:column="21">(<argument><expr><name pos:line="53" pos:column="22">pid<pos:position pos:line="53" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="27">SIGTERM<pos:position pos:line="53" pos:column="34"/></name></expr></argument>)<pos:position pos:line="53" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="36"/></expr_stmt>
                <break pos:line="54" pos:column="17">break;<pos:position pos:line="54" pos:column="23"/></break>

            <case pos:line="56" pos:column="13">case <expr><literal type="number" pos:line="56" pos:column="18">8<pos:position pos:line="56" pos:column="19"/></literal></expr>:<pos:position pos:line="56" pos:column="20"/></case>     <comment type="block" pos:line="56" pos:column="25">/*  6 sec */</comment>
                <comment type="block" pos:line="57" pos:column="17">/* die child scum */</comment>
                <expr_stmt><expr><call><name pos:line="58" pos:column="17">ap_log_error<pos:position pos:line="58" pos:column="29"/></name><argument_list pos:line="58" pos:column="29">(<argument><expr><name pos:line="58" pos:column="30">APLOG_MARK<pos:position pos:line="58" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="42">APLOG_ERR<pos:position pos:line="58" pos:column="51"/></name></expr></argument>,
                             <argument><expr><literal type="number" pos:line="59" pos:column="30">0<pos:position pos:line="59" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="33">ap_server_conf<pos:position pos:line="59" pos:column="47"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="60" pos:column="30">"child process %ld still did not exit, "<pos:position pos:line="60" pos:column="70"/></literal>
                             <literal type="string" pos:line="61" pos:column="30">"sending a SIGKILL"<pos:position pos:line="61" pos:column="49"/></literal></expr></argument>,
                             <argument><expr><operator pos:line="62" pos:column="30">(<pos:position pos:line="62" pos:column="31"/></operator><name pos:line="62" pos:column="31">long<pos:position pos:line="62" pos:column="35"/></name><operator pos:line="62" pos:column="35">)<pos:position pos:line="62" pos:column="36"/></operator><name pos:line="62" pos:column="36">pid<pos:position pos:line="62" pos:column="39"/></name></expr></argument>)<pos:position pos:line="62" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="41"/></expr_stmt>
<cpp:ifndef pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">ifndef<pos:position pos:line="63" pos:column="8"/></cpp:directive> <name pos:line="63" pos:column="9">BEOS<pos:position pos:line="63" pos:column="13"/></name></cpp:ifndef>
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">kill<pos:position pos:line="64" pos:column="21"/></name><argument_list pos:line="64" pos:column="21">(<argument><expr><name pos:line="64" pos:column="22">pid<pos:position pos:line="64" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="27">SIGKILL<pos:position pos:line="64" pos:column="34"/></name></expr></argument>)<pos:position pos:line="64" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="36"/></expr_stmt>
<cpp:else pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">else<pos:position pos:line="65" pos:column="6"/></cpp:directive></cpp:else>
                <comment type="block" pos:line="66" pos:column="17">/* sending a SIGKILL kills the entire team on BeOS, and as
                 * httpd thread is part of that team it removes any chance
                 * of ever doing a restart.  To counter this I'm changing to
                 * use a kinder, gentler way of killing a specific thread
                 * that is just as effective.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="72" pos:column="17">kill_thread<pos:position pos:line="72" pos:column="28"/></name><argument_list pos:line="72" pos:column="28">(<argument><expr><name pos:line="72" pos:column="29">pid<pos:position pos:line="72" pos:column="32"/></name></expr></argument>)<pos:position pos:line="72" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">endif<pos:position pos:line="73" pos:column="7"/></cpp:directive></cpp:endif>
                <break pos:line="74" pos:column="17">break;<pos:position pos:line="74" pos:column="23"/></break>

            <case pos:line="76" pos:column="13">case <expr><literal type="number" pos:line="76" pos:column="18">9<pos:position pos:line="76" pos:column="19"/></literal></expr>:<pos:position pos:line="76" pos:column="20"/></case>     <comment type="block" pos:line="76" pos:column="25">/* 14 sec */</comment>
                <comment type="block" pos:line="77" pos:column="17">/* gave it our best shot, but alas...  If this really
                 * is a child we are trying to kill and it really hasn't
                 * exited, we will likely fail to bind to the port
                 * after the restart.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="82" pos:column="17">ap_log_error<pos:position pos:line="82" pos:column="29"/></name><argument_list pos:line="82" pos:column="29">(<argument><expr><name pos:line="82" pos:column="30">APLOG_MARK<pos:position pos:line="82" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="42">APLOG_ERR<pos:position pos:line="82" pos:column="51"/></name></expr></argument>,
                             <argument><expr><literal type="number" pos:line="83" pos:column="30">0<pos:position pos:line="83" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="33">ap_server_conf<pos:position pos:line="83" pos:column="47"/></name></expr></argument>,
                             <argument><expr><literal type="string" pos:line="84" pos:column="30">"could not make child process %ld exit, "<pos:position pos:line="84" pos:column="71"/></literal>
                             <literal type="string" pos:line="85" pos:column="30">"attempting to continue anyway"<pos:position pos:line="85" pos:column="61"/></literal></expr></argument>,
                             <argument><expr><operator pos:line="86" pos:column="30">(<pos:position pos:line="86" pos:column="31"/></operator><name pos:line="86" pos:column="31">long<pos:position pos:line="86" pos:column="35"/></name><operator pos:line="86" pos:column="35">)<pos:position pos:line="86" pos:column="36"/></operator><name pos:line="86" pos:column="36">pid<pos:position pos:line="86" pos:column="39"/></name></expr></argument>)<pos:position pos:line="86" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="41"/></expr_stmt>
                <break pos:line="87" pos:column="17">break;<pos:position pos:line="87" pos:column="23"/></break>
            }<pos:position pos:line="88" pos:column="14"/></block></switch>
        }<pos:position pos:line="89" pos:column="10"/></block></for>

<cpp:if pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">if<pos:position pos:line="91" pos:column="4"/></cpp:directive> <expr><name pos:line="91" pos:column="5">APR_HAS_OTHER_CHILD<pos:position pos:line="91" pos:column="24"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="92" pos:column="9">apr_proc_other_child_check<pos:position pos:line="92" pos:column="35"/></name><argument_list pos:line="92" pos:column="35">()<pos:position pos:line="92" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">endif<pos:position pos:line="93" pos:column="7"/></cpp:directive></cpp:endif>

        <if pos:line="95" pos:column="9">if <condition pos:line="95" pos:column="12">(<expr><operator pos:line="95" pos:column="13">!<pos:position pos:line="95" pos:column="14"/></operator><name pos:line="95" pos:column="14">not_dead_yet<pos:position pos:line="95" pos:column="26"/></name></expr>)<pos:position pos:line="95" pos:column="27"/></condition><then pos:line="95" pos:column="27"> <block pos:line="95" pos:column="28">{
            <comment type="block" pos:line="96" pos:column="13">/* nothing left to wait for */</comment>
            <break pos:line="97" pos:column="13">break;<pos:position pos:line="97" pos:column="19"/></break>
        }<pos:position pos:line="98" pos:column="10"/></block></then></if>
    }<pos:position pos:line="99" pos:column="6"/></block></for>
}<pos:position pos:line="100" pos:column="2"/></block></function></unit>

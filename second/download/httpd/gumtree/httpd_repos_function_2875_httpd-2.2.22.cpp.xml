<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2875_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_dbd_t<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">dbd_oracle_open<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">apr_pool_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">pool<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">params<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                                  <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier><modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">error<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_dbd_t<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">ret<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><call><name pos:line="4" pos:column="22">apr_pcalloc<pos:position pos:line="4" pos:column="33"/></name><argument_list pos:line="4" pos:column="33">(<argument><expr><name pos:line="4" pos:column="34">pool<pos:position pos:line="4" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="40">sizeof<argument_list pos:line="4" pos:column="46">(<argument><expr><name pos:line="4" pos:column="47">apr_dbd_t<pos:position pos:line="4" pos:column="56"/></name></expr></argument>)<pos:position pos:line="4" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">errorcode<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">BLANK<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><literal type="string" pos:line="7" pos:column="19">""<pos:position pos:line="7" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <struct pos:line="8" pos:column="5">struct <block pos:line="8" pos:column="12">{<public type="default" pos:line="8" pos:column="13">
        <decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">field<pos:position pos:line="9" pos:column="26"/></name></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">value<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
    <pos:position pos:line="11" pos:column="5"/></public>}<pos:position pos:line="11" pos:column="6"/></block> <decl><name><name pos:line="11" pos:column="7">fields<pos:position pos:line="11" pos:column="13"/></name><index pos:line="11" pos:column="13">[]<pos:position pos:line="11" pos:column="15"/></index></name> <init pos:line="11" pos:column="16">= <expr><block pos:line="11" pos:column="18">{
        <expr><block pos:line="12" pos:column="9">{<expr><literal type="string" pos:line="12" pos:column="10">"user"<pos:position pos:line="12" pos:column="16"/></literal></expr>, <expr><name pos:line="12" pos:column="18">BLANK<pos:position pos:line="12" pos:column="23"/></name></expr>}<pos:position pos:line="12" pos:column="24"/></block></expr>,
        <expr><block pos:line="13" pos:column="9">{<expr><literal type="string" pos:line="13" pos:column="10">"pass"<pos:position pos:line="13" pos:column="16"/></literal></expr>, <expr><name pos:line="13" pos:column="18">BLANK<pos:position pos:line="13" pos:column="23"/></name></expr>}<pos:position pos:line="13" pos:column="24"/></block></expr>,
        <expr><block pos:line="14" pos:column="9">{<expr><literal type="string" pos:line="14" pos:column="10">"dbname"<pos:position pos:line="14" pos:column="18"/></literal></expr>, <expr><name pos:line="14" pos:column="20">BLANK<pos:position pos:line="14" pos:column="25"/></name></expr>}<pos:position pos:line="14" pos:column="26"/></block></expr>,
        <expr><block pos:line="15" pos:column="9">{<expr><literal type="string" pos:line="15" pos:column="10">"server"<pos:position pos:line="15" pos:column="18"/></literal></expr>, <expr><name pos:line="15" pos:column="20">BLANK<pos:position pos:line="15" pos:column="25"/></name></expr>}<pos:position pos:line="15" pos:column="26"/></block></expr>,
        <expr><block pos:line="16" pos:column="9">{<expr><name pos:line="16" pos:column="10">NULL<pos:position pos:line="16" pos:column="14"/></name></expr>, <expr><name pos:line="16" pos:column="16">NULL<pos:position pos:line="16" pos:column="20"/></name></expr>}<pos:position pos:line="16" pos:column="21"/></block></expr>
    }<pos:position pos:line="17" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="17" pos:column="7"/></struct>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">i<pos:position pos:line="18" pos:column="10"/></name></decl>;<pos:position pos:line="18" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="19" pos:column="5">const<pos:position pos:line="19" pos:column="10"/></specifier> <name pos:line="19" pos:column="11">char<pos:position pos:line="19" pos:column="15"/></name> <modifier pos:line="19" pos:column="16">*<pos:position pos:line="19" pos:column="17"/></modifier></type><name pos:line="19" pos:column="17">ptr<pos:position pos:line="19" pos:column="20"/></name></decl>;<pos:position pos:line="19" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="20" pos:column="5">const<pos:position pos:line="20" pos:column="10"/></specifier> <name pos:line="20" pos:column="11">char<pos:position pos:line="20" pos:column="15"/></name> <modifier pos:line="20" pos:column="16">*<pos:position pos:line="20" pos:column="17"/></modifier></type><name pos:line="20" pos:column="17">key<pos:position pos:line="20" pos:column="20"/></name></decl>;<pos:position pos:line="20" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">size_t<pos:position pos:line="21" pos:column="11"/></name></type> <name pos:line="21" pos:column="12">klen<pos:position pos:line="21" pos:column="16"/></name></decl>;<pos:position pos:line="21" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="22" pos:column="5">const<pos:position pos:line="22" pos:column="10"/></specifier> <name pos:line="22" pos:column="11">char<pos:position pos:line="22" pos:column="15"/></name> <modifier pos:line="22" pos:column="16">*<pos:position pos:line="22" pos:column="17"/></modifier></type><name pos:line="22" pos:column="17">value<pos:position pos:line="22" pos:column="22"/></name></decl>;<pos:position pos:line="22" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">size_t<pos:position pos:line="23" pos:column="11"/></name></type> <name pos:line="23" pos:column="12">vlen<pos:position pos:line="23" pos:column="16"/></name></decl>;<pos:position pos:line="23" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="24" pos:column="5">static<pos:position pos:line="24" pos:column="11"/></specifier> <type><specifier pos:line="24" pos:column="12">const<pos:position pos:line="24" pos:column="17"/></specifier> <name pos:line="24" pos:column="18">char<pos:position pos:line="24" pos:column="22"/></name> <modifier pos:line="24" pos:column="23">*<pos:position pos:line="24" pos:column="24"/></modifier><specifier pos:line="24" pos:column="24">const<pos:position pos:line="24" pos:column="29"/></specifier></type> <name pos:line="24" pos:column="30">delims<pos:position pos:line="24" pos:column="36"/></name> <init pos:line="24" pos:column="37">= <expr><literal type="string" pos:line="24" pos:column="39">" \r\n\t;|,"<pos:position pos:line="24" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="52"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="26" pos:column="5">ret<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">-&gt;<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="10">pool<pos:position pos:line="26" pos:column="14"/></name></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="17">pool<pos:position pos:line="26" pos:column="21"/></name></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">ret<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">-&gt;<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="10">long_size<pos:position pos:line="27" pos:column="19"/></name></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <name pos:line="27" pos:column="22">DEFAULT_LONG_SIZE<pos:position pos:line="27" pos:column="39"/></name></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="29" pos:column="5">/* snitch parsing from the MySQL driver */</comment>
    <for pos:line="30" pos:column="5">for <control pos:line="30" pos:column="9">(<init><expr><name pos:line="30" pos:column="10">ptr<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <call><name pos:line="30" pos:column="16">strchr<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><name pos:line="30" pos:column="23">params<pos:position pos:line="30" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="30" pos:column="31">'='<pos:position pos:line="30" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="36"/></init> <condition><expr><name pos:line="30" pos:column="37">ptr<pos:position pos:line="30" pos:column="40"/></name></expr>;<pos:position pos:line="30" pos:column="41"/></condition> <incr><expr><name pos:line="30" pos:column="42">ptr<pos:position pos:line="30" pos:column="45"/></name> <operator pos:line="30" pos:column="46">=<pos:position pos:line="30" pos:column="47"/></operator> <call><name pos:line="30" pos:column="48">strchr<pos:position pos:line="30" pos:column="54"/></name><argument_list pos:line="30" pos:column="54">(<argument><expr><name pos:line="30" pos:column="55">ptr<pos:position pos:line="30" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="30" pos:column="60">'='<pos:position pos:line="30" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="64"/></argument_list></call></expr></incr>)<pos:position pos:line="30" pos:column="65"/></control> <block pos:line="30" pos:column="66">{
        <comment type="block" pos:line="31" pos:column="9">/* don't dereference memory that may not belong to us */</comment>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">ptr<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">==<pos:position pos:line="32" pos:column="19"/></operator> <name pos:line="32" pos:column="20">params<pos:position pos:line="32" pos:column="26"/></name></expr>)<pos:position pos:line="32" pos:column="27"/></condition><then pos:line="32" pos:column="27"> <block pos:line="32" pos:column="28">{
            <expr_stmt><expr><operator pos:line="33" pos:column="13">++<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">ptr<pos:position pos:line="33" pos:column="18"/></name></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>
            <continue pos:line="34" pos:column="13">continue;<pos:position pos:line="34" pos:column="22"/></continue>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
        <for pos:line="36" pos:column="9">for <control pos:line="36" pos:column="13">(<init><expr><name pos:line="36" pos:column="14">key<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <name pos:line="36" pos:column="20">ptr<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">-<pos:position pos:line="36" pos:column="24"/></operator><literal type="number" pos:line="36" pos:column="24">1<pos:position pos:line="36" pos:column="25"/></literal></expr>;<pos:position pos:line="36" pos:column="26"/></init> <condition><expr><call><name pos:line="36" pos:column="27">apr_isspace<pos:position pos:line="36" pos:column="38"/></name><argument_list pos:line="36" pos:column="38">(<argument><expr><operator pos:line="36" pos:column="39">*<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="40">key<pos:position pos:line="36" pos:column="43"/></name></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="45"/></condition> <incr><expr><operator pos:line="36" pos:column="46">--<pos:position pos:line="36" pos:column="48"/></operator><name pos:line="36" pos:column="48">key<pos:position pos:line="36" pos:column="51"/></name></expr></incr>)<pos:position pos:line="36" pos:column="52"/></control><block type="pseudo"><empty_stmt pos:line="36" pos:column="52">;<pos:position pos:line="36" pos:column="53"/></empty_stmt></block></for>
        <expr_stmt><expr><name pos:line="37" pos:column="9">klen<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></expr_stmt>
        <while pos:line="38" pos:column="9">while <condition pos:line="38" pos:column="15">(<expr><call><name pos:line="38" pos:column="16">apr_isalpha<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><operator pos:line="38" pos:column="28">*<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="29">key<pos:position pos:line="38" pos:column="32"/></name></expr></argument>)<pos:position pos:line="38" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="34"/></condition> <block pos:line="38" pos:column="35">{
            <if pos:line="39" pos:column="13">if <condition pos:line="39" pos:column="16">(<expr><name pos:line="39" pos:column="17">key<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">==<pos:position pos:line="39" pos:column="23"/></operator> <name pos:line="39" pos:column="24">params<pos:position pos:line="39" pos:column="30"/></name></expr>)<pos:position pos:line="39" pos:column="31"/></condition><then pos:line="39" pos:column="31"> <block pos:line="39" pos:column="32">{
                <comment type="block" pos:line="40" pos:column="17">/* Don't parse off the front of the params */</comment>
                <expr_stmt><expr><operator pos:line="41" pos:column="17">--<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="19">key<pos:position pos:line="41" pos:column="22"/></name></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="42" pos:column="17">++<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="19">klen<pos:position pos:line="42" pos:column="23"/></name></expr>;<pos:position pos:line="42" pos:column="24"/></expr_stmt>
                <break pos:line="43" pos:column="17">break;<pos:position pos:line="43" pos:column="23"/></break>
            }<pos:position pos:line="44" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="45" pos:column="13">--<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="15">key<pos:position pos:line="45" pos:column="18"/></name></expr>;<pos:position pos:line="45" pos:column="19"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="46" pos:column="13">++<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="15">klen<pos:position pos:line="46" pos:column="19"/></name></expr>;<pos:position pos:line="46" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="47" pos:column="10"/></block></while>
        <expr_stmt><expr><operator pos:line="48" pos:column="9">++<pos:position pos:line="48" pos:column="11"/></operator><name pos:line="48" pos:column="11">key<pos:position pos:line="48" pos:column="14"/></name></expr>;<pos:position pos:line="48" pos:column="15"/></expr_stmt>
        <for pos:line="49" pos:column="9">for <control pos:line="49" pos:column="13">(<init><expr><name pos:line="49" pos:column="14">value<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">=<pos:position pos:line="49" pos:column="21"/></operator> <name pos:line="49" pos:column="22">ptr<pos:position pos:line="49" pos:column="25"/></name><operator pos:line="49" pos:column="25">+<pos:position pos:line="49" pos:column="26"/></operator><literal type="number" pos:line="49" pos:column="26">1<pos:position pos:line="49" pos:column="27"/></literal></expr>;<pos:position pos:line="49" pos:column="28"/></init> <condition><expr><call><name pos:line="49" pos:column="29">apr_isspace<pos:position pos:line="49" pos:column="40"/></name><argument_list pos:line="49" pos:column="40">(<argument><expr><operator pos:line="49" pos:column="41">*<pos:position pos:line="49" pos:column="42"/></operator><name pos:line="49" pos:column="42">value<pos:position pos:line="49" pos:column="47"/></name></expr></argument>)<pos:position pos:line="49" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="49"/></condition> <incr><expr><operator pos:line="49" pos:column="50">++<pos:position pos:line="49" pos:column="52"/></operator><name pos:line="49" pos:column="52">value<pos:position pos:line="49" pos:column="57"/></name></expr></incr>)<pos:position pos:line="49" pos:column="58"/></control><block type="pseudo"><empty_stmt pos:line="49" pos:column="58">;<pos:position pos:line="49" pos:column="59"/></empty_stmt></block></for>
        <expr_stmt><expr><name pos:line="50" pos:column="9">vlen<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">=<pos:position pos:line="50" pos:column="15"/></operator> <call><name pos:line="50" pos:column="16">strcspn<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><name pos:line="50" pos:column="24">value<pos:position pos:line="50" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="31">delims<pos:position pos:line="50" pos:column="37"/></name></expr></argument>)<pos:position pos:line="50" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="39"/></expr_stmt>
        <for pos:line="51" pos:column="9">for <control pos:line="51" pos:column="13">(<init><expr><name pos:line="51" pos:column="14">i<pos:position pos:line="51" pos:column="15"/></name><operator pos:line="51" pos:column="15">=<pos:position pos:line="51" pos:column="16"/></operator><literal type="number" pos:line="51" pos:column="16">0<pos:position pos:line="51" pos:column="17"/></literal></expr>;<pos:position pos:line="51" pos:column="18"/></init> <condition><expr><name><name pos:line="51" pos:column="19">fields<pos:position pos:line="51" pos:column="25"/></name><index pos:line="51" pos:column="25">[<expr><name pos:line="51" pos:column="26">i<pos:position pos:line="51" pos:column="27"/></name></expr>]<pos:position pos:line="51" pos:column="28"/></index></name><operator pos:line="51" pos:column="28">.<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="29">field<pos:position pos:line="51" pos:column="34"/></name> <operator pos:line="51" pos:column="35">!=<pos:position pos:line="51" pos:column="37"/></operator> <name pos:line="51" pos:column="38">NULL<pos:position pos:line="51" pos:column="42"/></name></expr>;<pos:position pos:line="51" pos:column="43"/></condition> <incr><expr><operator pos:line="51" pos:column="44">++<pos:position pos:line="51" pos:column="46"/></operator><name pos:line="51" pos:column="46">i<pos:position pos:line="51" pos:column="47"/></name></expr></incr>)<pos:position pos:line="51" pos:column="48"/></control> <block pos:line="51" pos:column="49">{
            <if pos:line="52" pos:column="13">if <condition pos:line="52" pos:column="16">(<expr><operator pos:line="52" pos:column="17">!<pos:position pos:line="52" pos:column="18"/></operator><call><name pos:line="52" pos:column="18">strncasecmp<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><name><name pos:line="52" pos:column="30">fields<pos:position pos:line="52" pos:column="36"/></name><index pos:line="52" pos:column="36">[<expr><name pos:line="52" pos:column="37">i<pos:position pos:line="52" pos:column="38"/></name></expr>]<pos:position pos:line="52" pos:column="39"/></index></name><operator pos:line="52" pos:column="39">.<pos:position pos:line="52" pos:column="40"/></operator><name pos:line="52" pos:column="40">field<pos:position pos:line="52" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="47">key<pos:position pos:line="52" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="52">klen<pos:position pos:line="52" pos:column="56"/></name></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="58"/></condition><then pos:line="52" pos:column="58"> <block pos:line="52" pos:column="59">{
                <expr_stmt><expr><name><name pos:line="53" pos:column="17">fields<pos:position pos:line="53" pos:column="23"/></name><index pos:line="53" pos:column="23">[<expr><name pos:line="53" pos:column="24">i<pos:position pos:line="53" pos:column="25"/></name></expr>]<pos:position pos:line="53" pos:column="26"/></index></name><operator pos:line="53" pos:column="26">.<pos:position pos:line="53" pos:column="27"/></operator><name pos:line="53" pos:column="27">value<pos:position pos:line="53" pos:column="32"/></name> <operator pos:line="53" pos:column="33">=<pos:position pos:line="53" pos:column="34"/></operator> <call><name pos:line="53" pos:column="35">apr_pstrndup<pos:position pos:line="53" pos:column="47"/></name><argument_list pos:line="53" pos:column="47">(<argument><expr><name pos:line="53" pos:column="48">pool<pos:position pos:line="53" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="54">value<pos:position pos:line="53" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="61">vlen<pos:position pos:line="53" pos:column="65"/></name></expr></argument>)<pos:position pos:line="53" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="67"/></expr_stmt>
                <break pos:line="54" pos:column="17">break;<pos:position pos:line="54" pos:column="23"/></break>
            }<pos:position pos:line="55" pos:column="14"/></block></then></if>
        }<pos:position pos:line="56" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="57" pos:column="9">ptr<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">=<pos:position pos:line="57" pos:column="14"/></operator> <name pos:line="57" pos:column="15">value<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">+<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="21">vlen<pos:position pos:line="57" pos:column="25"/></name></expr>;<pos:position pos:line="57" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="60" pos:column="5">ret<pos:position pos:line="60" pos:column="8"/></name><operator pos:line="60" pos:column="8">-&gt;<pos:position pos:line="60" pos:column="13"/></operator><name pos:line="60" pos:column="10">status<pos:position pos:line="60" pos:column="16"/></name></name> <operator pos:line="60" pos:column="17">=<pos:position pos:line="60" pos:column="18"/></operator> <call><name pos:line="60" pos:column="19">OCIHandleAlloc<pos:position pos:line="60" pos:column="33"/></name><argument_list pos:line="60" pos:column="33">(<argument><expr><name pos:line="60" pos:column="34">dbd_oracle_env<pos:position pos:line="60" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="50">(<pos:position pos:line="60" pos:column="51"/></operator><name pos:line="60" pos:column="51">dvoid<pos:position pos:line="60" pos:column="56"/></name><operator pos:line="60" pos:column="56">*<pos:position pos:line="60" pos:column="57"/></operator><operator pos:line="60" pos:column="57">*<pos:position pos:line="60" pos:column="58"/></operator><operator pos:line="60" pos:column="58">)<pos:position pos:line="60" pos:column="59"/></operator><operator pos:line="60" pos:column="59">&amp;<pos:position pos:line="60" pos:column="64"/></operator><name><name pos:line="60" pos:column="60">ret<pos:position pos:line="60" pos:column="63"/></name><operator pos:line="60" pos:column="63">-&gt;<pos:position pos:line="60" pos:column="68"/></operator><name pos:line="60" pos:column="65">err<pos:position pos:line="60" pos:column="68"/></name></name></expr></argument>,
                                 <argument><expr><name pos:line="61" pos:column="34">OCI_HTYPE_ERROR<pos:position pos:line="61" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="51">0<pos:position pos:line="61" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="54">NULL<pos:position pos:line="61" pos:column="58"/></name></expr></argument>)<pos:position pos:line="61" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="60"/></expr_stmt>
    <switch pos:line="62" pos:column="5">switch <condition pos:line="62" pos:column="12">(<expr><name><name pos:line="62" pos:column="13">ret<pos:position pos:line="62" pos:column="16"/></name><operator pos:line="62" pos:column="16">-&gt;<pos:position pos:line="62" pos:column="21"/></operator><name pos:line="62" pos:column="18">status<pos:position pos:line="62" pos:column="24"/></name></name></expr>)<pos:position pos:line="62" pos:column="25"/></condition> <block pos:line="62" pos:column="26">{
    <default pos:line="63" pos:column="5">default:<pos:position pos:line="63" pos:column="13"/></default>
<cpp:ifdef pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">ifdef<pos:position pos:line="64" pos:column="7"/></cpp:directive> <name pos:line="64" pos:column="8">DEBUG<pos:position pos:line="64" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">printf<pos:position pos:line="65" pos:column="15"/></name><argument_list pos:line="65" pos:column="15">(<argument><expr><literal type="string" pos:line="65" pos:column="16">"ret-&gt;status is %d\n"<pos:position pos:line="65" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="39">ret<pos:position pos:line="65" pos:column="42"/></name><operator pos:line="65" pos:column="42">-&gt;<pos:position pos:line="65" pos:column="47"/></operator><name pos:line="65" pos:column="44">status<pos:position pos:line="65" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="52"/></expr_stmt>
        <break pos:line="66" pos:column="9">break;<pos:position pos:line="66" pos:column="15"/></break>
<cpp:else pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">else<pos:position pos:line="67" pos:column="6"/></cpp:directive></cpp:else>
        <return pos:line="68" pos:column="9">return <expr><name pos:line="68" pos:column="16">NULL<pos:position pos:line="68" pos:column="20"/></name></expr>;<pos:position pos:line="68" pos:column="21"/></return>
<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif<pos:position pos:line="69" pos:column="7"/></cpp:directive></cpp:endif>
    <case pos:line="70" pos:column="5">case <expr><name pos:line="70" pos:column="10">OCI_SUCCESS<pos:position pos:line="70" pos:column="21"/></name></expr>:<pos:position pos:line="70" pos:column="22"/></case>
        <break pos:line="71" pos:column="9">break;<pos:position pos:line="71" pos:column="15"/></break>
    }<pos:position pos:line="72" pos:column="6"/></block></switch>

    <expr_stmt><expr><name><name pos:line="74" pos:column="5">ret<pos:position pos:line="74" pos:column="8"/></name><operator pos:line="74" pos:column="8">-&gt;<pos:position pos:line="74" pos:column="13"/></operator><name pos:line="74" pos:column="10">status<pos:position pos:line="74" pos:column="16"/></name></name> <operator pos:line="74" pos:column="17">=<pos:position pos:line="74" pos:column="18"/></operator> <call><name pos:line="74" pos:column="19">OCIHandleAlloc<pos:position pos:line="74" pos:column="33"/></name><argument_list pos:line="74" pos:column="33">(<argument><expr><name pos:line="74" pos:column="34">dbd_oracle_env<pos:position pos:line="74" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="50">(<pos:position pos:line="74" pos:column="51"/></operator><name pos:line="74" pos:column="51">dvoid<pos:position pos:line="74" pos:column="56"/></name><operator pos:line="74" pos:column="56">*<pos:position pos:line="74" pos:column="57"/></operator><operator pos:line="74" pos:column="57">*<pos:position pos:line="74" pos:column="58"/></operator><operator pos:line="74" pos:column="58">)<pos:position pos:line="74" pos:column="59"/></operator><operator pos:line="74" pos:column="59">&amp;<pos:position pos:line="74" pos:column="64"/></operator><name><name pos:line="74" pos:column="60">ret<pos:position pos:line="74" pos:column="63"/></name><operator pos:line="74" pos:column="63">-&gt;<pos:position pos:line="74" pos:column="68"/></operator><name pos:line="74" pos:column="65">svr<pos:position pos:line="74" pos:column="68"/></name></name></expr></argument>,
                                 <argument><expr><name pos:line="75" pos:column="34">OCI_HTYPE_SERVER<pos:position pos:line="75" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="52">0<pos:position pos:line="75" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="55">NULL<pos:position pos:line="75" pos:column="59"/></name></expr></argument>)<pos:position pos:line="75" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="61"/></expr_stmt>
    <switch pos:line="76" pos:column="5">switch <condition pos:line="76" pos:column="12">(<expr><name><name pos:line="76" pos:column="13">ret<pos:position pos:line="76" pos:column="16"/></name><operator pos:line="76" pos:column="16">-&gt;<pos:position pos:line="76" pos:column="21"/></operator><name pos:line="76" pos:column="18">status<pos:position pos:line="76" pos:column="24"/></name></name></expr>)<pos:position pos:line="76" pos:column="25"/></condition> <block pos:line="76" pos:column="26">{
    <default pos:line="77" pos:column="5">default:<pos:position pos:line="77" pos:column="13"/></default>
<cpp:ifdef pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">ifdef<pos:position pos:line="78" pos:column="7"/></cpp:directive> <name pos:line="78" pos:column="8">DEBUG<pos:position pos:line="78" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">OCIErrorGet<pos:position pos:line="79" pos:column="20"/></name><argument_list pos:line="79" pos:column="20">(<argument><expr><name><name pos:line="79" pos:column="21">ret<pos:position pos:line="79" pos:column="24"/></name><operator pos:line="79" pos:column="24">-&gt;<pos:position pos:line="79" pos:column="29"/></operator><name pos:line="79" pos:column="26">err<pos:position pos:line="79" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="31">1<pos:position pos:line="79" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="34">NULL<pos:position pos:line="79" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="40">&amp;<pos:position pos:line="79" pos:column="45"/></operator><name pos:line="79" pos:column="41">errorcode<pos:position pos:line="79" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="52">ret<pos:position pos:line="79" pos:column="55"/></name><operator pos:line="79" pos:column="55">-&gt;<pos:position pos:line="79" pos:column="60"/></operator><name pos:line="79" pos:column="57">buf<pos:position pos:line="79" pos:column="60"/></name></name></expr></argument>,
                    <argument><expr><sizeof pos:line="80" pos:column="21">sizeof<argument_list pos:line="80" pos:column="27">(<argument><expr><name><name pos:line="80" pos:column="28">ret<pos:position pos:line="80" pos:column="31"/></name><operator pos:line="80" pos:column="31">-&gt;<pos:position pos:line="80" pos:column="36"/></operator><name pos:line="80" pos:column="33">buf<pos:position pos:line="80" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="80" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="80" pos:column="54"/></name></expr></argument>)<pos:position pos:line="80" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">printf<pos:position pos:line="81" pos:column="15"/></name><argument_list pos:line="81" pos:column="15">(<argument><expr><literal type="string" pos:line="81" pos:column="16">"OPEN ERROR %d (alloc svr): %s\n"<pos:position pos:line="81" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="51">ret<pos:position pos:line="81" pos:column="54"/></name><operator pos:line="81" pos:column="54">-&gt;<pos:position pos:line="81" pos:column="59"/></operator><name pos:line="81" pos:column="56">status<pos:position pos:line="81" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="64">ret<pos:position pos:line="81" pos:column="67"/></name><operator pos:line="81" pos:column="67">-&gt;<pos:position pos:line="81" pos:column="72"/></operator><name pos:line="81" pos:column="69">buf<pos:position pos:line="81" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="74"/></expr_stmt>
        <break pos:line="82" pos:column="9">break;<pos:position pos:line="82" pos:column="15"/></break>
<cpp:else pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">else<pos:position pos:line="83" pos:column="6"/></cpp:directive></cpp:else>
        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><name pos:line="84" pos:column="13">error<pos:position pos:line="84" pos:column="18"/></name></expr>)<pos:position pos:line="84" pos:column="19"/></condition><then pos:line="84" pos:column="19"> <block pos:line="84" pos:column="20">{
            <expr_stmt><expr><operator pos:line="85" pos:column="13">*<pos:position pos:line="85" pos:column="14"/></operator><name pos:line="85" pos:column="14">error<pos:position pos:line="85" pos:column="19"/></name> <operator pos:line="85" pos:column="20">=<pos:position pos:line="85" pos:column="21"/></operator> <call><name pos:line="85" pos:column="22">apr_pcalloc<pos:position pos:line="85" pos:column="33"/></name><argument_list pos:line="85" pos:column="33">(<argument><expr><name pos:line="85" pos:column="34">pool<pos:position pos:line="85" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="40">ERR_BUF_SIZE<pos:position pos:line="85" pos:column="52"/></name></expr></argument>)<pos:position pos:line="85" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">OCIErrorGet<pos:position pos:line="86" pos:column="24"/></name><argument_list pos:line="86" pos:column="24">(<argument><expr><name><name pos:line="86" pos:column="25">ret<pos:position pos:line="86" pos:column="28"/></name><operator pos:line="86" pos:column="28">-&gt;<pos:position pos:line="86" pos:column="33"/></operator><name pos:line="86" pos:column="30">err<pos:position pos:line="86" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="35">1<pos:position pos:line="86" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="86" pos:column="38">NULL<pos:position pos:line="86" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="44">&amp;<pos:position pos:line="86" pos:column="49"/></operator><name pos:line="86" pos:column="45">errorcode<pos:position pos:line="86" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="56">(<pos:position pos:line="86" pos:column="57"/></operator><name pos:line="86" pos:column="57">unsigned<pos:position pos:line="86" pos:column="65"/></name> <name pos:line="86" pos:column="66">char<pos:position pos:line="86" pos:column="70"/></name><operator pos:line="86" pos:column="70">*<pos:position pos:line="86" pos:column="71"/></operator><operator pos:line="86" pos:column="71">)<pos:position pos:line="86" pos:column="72"/></operator><operator pos:line="86" pos:column="72">(<pos:position pos:line="86" pos:column="73"/></operator><operator pos:line="86" pos:column="73">*<pos:position pos:line="86" pos:column="74"/></operator><name pos:line="86" pos:column="74">error<pos:position pos:line="86" pos:column="79"/></name><operator pos:line="86" pos:column="79">)<pos:position pos:line="86" pos:column="80"/></operator></expr></argument>,
                        <argument><expr><name pos:line="87" pos:column="25">ERR_BUF_SIZE<pos:position pos:line="87" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="87" pos:column="54"/></name></expr></argument>)<pos:position pos:line="87" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="88" pos:column="10"/></block></then></if>
        <return pos:line="89" pos:column="9">return <expr><name pos:line="89" pos:column="16">NULL<pos:position pos:line="89" pos:column="20"/></name></expr>;<pos:position pos:line="89" pos:column="21"/></return>
<cpp:endif pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">endif<pos:position pos:line="90" pos:column="7"/></cpp:directive></cpp:endif>
    <case pos:line="91" pos:column="5">case <expr><name pos:line="91" pos:column="10">OCI_SUCCESS<pos:position pos:line="91" pos:column="21"/></name></expr>:<pos:position pos:line="91" pos:column="22"/></case>
        <break pos:line="92" pos:column="9">break;<pos:position pos:line="92" pos:column="15"/></break>
    }<pos:position pos:line="93" pos:column="6"/></block></switch>

    <expr_stmt><expr><name><name pos:line="95" pos:column="5">ret<pos:position pos:line="95" pos:column="8"/></name><operator pos:line="95" pos:column="8">-&gt;<pos:position pos:line="95" pos:column="13"/></operator><name pos:line="95" pos:column="10">status<pos:position pos:line="95" pos:column="16"/></name></name> <operator pos:line="95" pos:column="17">=<pos:position pos:line="95" pos:column="18"/></operator> <call><name pos:line="95" pos:column="19">OCIHandleAlloc<pos:position pos:line="95" pos:column="33"/></name><argument_list pos:line="95" pos:column="33">(<argument><expr><name pos:line="95" pos:column="34">dbd_oracle_env<pos:position pos:line="95" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="50">(<pos:position pos:line="95" pos:column="51"/></operator><name pos:line="95" pos:column="51">dvoid<pos:position pos:line="95" pos:column="56"/></name><operator pos:line="95" pos:column="56">*<pos:position pos:line="95" pos:column="57"/></operator><operator pos:line="95" pos:column="57">*<pos:position pos:line="95" pos:column="58"/></operator><operator pos:line="95" pos:column="58">)<pos:position pos:line="95" pos:column="59"/></operator><operator pos:line="95" pos:column="59">&amp;<pos:position pos:line="95" pos:column="64"/></operator><name><name pos:line="95" pos:column="60">ret<pos:position pos:line="95" pos:column="63"/></name><operator pos:line="95" pos:column="63">-&gt;<pos:position pos:line="95" pos:column="68"/></operator><name pos:line="95" pos:column="65">svc<pos:position pos:line="95" pos:column="68"/></name></name></expr></argument>,
                                 <argument><expr><name pos:line="96" pos:column="34">OCI_HTYPE_SVCCTX<pos:position pos:line="96" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="96" pos:column="52">0<pos:position pos:line="96" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="55">NULL<pos:position pos:line="96" pos:column="59"/></name></expr></argument>)<pos:position pos:line="96" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="61"/></expr_stmt>
    <switch pos:line="97" pos:column="5">switch <condition pos:line="97" pos:column="12">(<expr><name><name pos:line="97" pos:column="13">ret<pos:position pos:line="97" pos:column="16"/></name><operator pos:line="97" pos:column="16">-&gt;<pos:position pos:line="97" pos:column="21"/></operator><name pos:line="97" pos:column="18">status<pos:position pos:line="97" pos:column="24"/></name></name></expr>)<pos:position pos:line="97" pos:column="25"/></condition> <block pos:line="97" pos:column="26">{
    <default pos:line="98" pos:column="5">default:<pos:position pos:line="98" pos:column="13"/></default>
<cpp:ifdef pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">ifdef<pos:position pos:line="99" pos:column="7"/></cpp:directive> <name pos:line="99" pos:column="8">DEBUG<pos:position pos:line="99" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="100" pos:column="9">OCIErrorGet<pos:position pos:line="100" pos:column="20"/></name><argument_list pos:line="100" pos:column="20">(<argument><expr><name><name pos:line="100" pos:column="21">ret<pos:position pos:line="100" pos:column="24"/></name><operator pos:line="100" pos:column="24">-&gt;<pos:position pos:line="100" pos:column="29"/></operator><name pos:line="100" pos:column="26">err<pos:position pos:line="100" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="100" pos:column="31">1<pos:position pos:line="100" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="34">NULL<pos:position pos:line="100" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="40">&amp;<pos:position pos:line="100" pos:column="45"/></operator><name pos:line="100" pos:column="41">errorcode<pos:position pos:line="100" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="52">ret<pos:position pos:line="100" pos:column="55"/></name><operator pos:line="100" pos:column="55">-&gt;<pos:position pos:line="100" pos:column="60"/></operator><name pos:line="100" pos:column="57">buf<pos:position pos:line="100" pos:column="60"/></name></name></expr></argument>,
                    <argument><expr><sizeof pos:line="101" pos:column="21">sizeof<argument_list pos:line="101" pos:column="27">(<argument><expr><name><name pos:line="101" pos:column="28">ret<pos:position pos:line="101" pos:column="31"/></name><operator pos:line="101" pos:column="31">-&gt;<pos:position pos:line="101" pos:column="36"/></operator><name pos:line="101" pos:column="33">buf<pos:position pos:line="101" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="101" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="101" pos:column="54"/></name></expr></argument>)<pos:position pos:line="101" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="102" pos:column="9">printf<pos:position pos:line="102" pos:column="15"/></name><argument_list pos:line="102" pos:column="15">(<argument><expr><literal type="string" pos:line="102" pos:column="16">"OPEN ERROR %d (alloc svc): %s\n"<pos:position pos:line="102" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="51">ret<pos:position pos:line="102" pos:column="54"/></name><operator pos:line="102" pos:column="54">-&gt;<pos:position pos:line="102" pos:column="59"/></operator><name pos:line="102" pos:column="56">status<pos:position pos:line="102" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="64">ret<pos:position pos:line="102" pos:column="67"/></name><operator pos:line="102" pos:column="67">-&gt;<pos:position pos:line="102" pos:column="72"/></operator><name pos:line="102" pos:column="69">buf<pos:position pos:line="102" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="74"/></expr_stmt>
        <break pos:line="103" pos:column="9">break;<pos:position pos:line="103" pos:column="15"/></break>
<cpp:else pos:line="104" pos:column="1">#<cpp:directive pos:line="104" pos:column="2">else<pos:position pos:line="104" pos:column="6"/></cpp:directive></cpp:else>
        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name pos:line="105" pos:column="13">error<pos:position pos:line="105" pos:column="18"/></name></expr>)<pos:position pos:line="105" pos:column="19"/></condition><then pos:line="105" pos:column="19"> <block pos:line="105" pos:column="20">{
            <expr_stmt><expr><operator pos:line="106" pos:column="13">*<pos:position pos:line="106" pos:column="14"/></operator><name pos:line="106" pos:column="14">error<pos:position pos:line="106" pos:column="19"/></name> <operator pos:line="106" pos:column="20">=<pos:position pos:line="106" pos:column="21"/></operator> <call><name pos:line="106" pos:column="22">apr_pcalloc<pos:position pos:line="106" pos:column="33"/></name><argument_list pos:line="106" pos:column="33">(<argument><expr><name pos:line="106" pos:column="34">pool<pos:position pos:line="106" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="40">ERR_BUF_SIZE<pos:position pos:line="106" pos:column="52"/></name></expr></argument>)<pos:position pos:line="106" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="107" pos:column="13">OCIErrorGet<pos:position pos:line="107" pos:column="24"/></name><argument_list pos:line="107" pos:column="24">(<argument><expr><name><name pos:line="107" pos:column="25">ret<pos:position pos:line="107" pos:column="28"/></name><operator pos:line="107" pos:column="28">-&gt;<pos:position pos:line="107" pos:column="33"/></operator><name pos:line="107" pos:column="30">err<pos:position pos:line="107" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="35">1<pos:position pos:line="107" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="38">NULL<pos:position pos:line="107" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="107" pos:column="44">&amp;<pos:position pos:line="107" pos:column="49"/></operator><name pos:line="107" pos:column="45">errorcode<pos:position pos:line="107" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="107" pos:column="56">(<pos:position pos:line="107" pos:column="57"/></operator><name pos:line="107" pos:column="57">unsigned<pos:position pos:line="107" pos:column="65"/></name> <name pos:line="107" pos:column="66">char<pos:position pos:line="107" pos:column="70"/></name><operator pos:line="107" pos:column="70">*<pos:position pos:line="107" pos:column="71"/></operator><operator pos:line="107" pos:column="71">)<pos:position pos:line="107" pos:column="72"/></operator><operator pos:line="107" pos:column="72">(<pos:position pos:line="107" pos:column="73"/></operator><operator pos:line="107" pos:column="73">*<pos:position pos:line="107" pos:column="74"/></operator><name pos:line="107" pos:column="74">error<pos:position pos:line="107" pos:column="79"/></name><operator pos:line="107" pos:column="79">)<pos:position pos:line="107" pos:column="80"/></operator></expr></argument>,
                        <argument><expr><name pos:line="108" pos:column="25">ERR_BUF_SIZE<pos:position pos:line="108" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="108" pos:column="54"/></name></expr></argument>)<pos:position pos:line="108" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="109" pos:column="10"/></block></then></if>
        <return pos:line="110" pos:column="9">return <expr><name pos:line="110" pos:column="16">NULL<pos:position pos:line="110" pos:column="20"/></name></expr>;<pos:position pos:line="110" pos:column="21"/></return>
<cpp:endif pos:line="111" pos:column="1">#<cpp:directive pos:line="111" pos:column="2">endif<pos:position pos:line="111" pos:column="7"/></cpp:directive></cpp:endif>
    <case pos:line="112" pos:column="5">case <expr><name pos:line="112" pos:column="10">OCI_SUCCESS<pos:position pos:line="112" pos:column="21"/></name></expr>:<pos:position pos:line="112" pos:column="22"/></case>
        <break pos:line="113" pos:column="9">break;<pos:position pos:line="113" pos:column="15"/></break>
    }<pos:position pos:line="114" pos:column="6"/></block></switch>

<comment type="block" pos:line="116" pos:column="1">/* All the examples use the #else */</comment>
<cpp:if pos:line="117" pos:column="1">#<cpp:directive pos:line="117" pos:column="2">if<pos:position pos:line="117" pos:column="4"/></cpp:directive> <expr><name pos:line="117" pos:column="5">CAN_DO_LOGIN<pos:position pos:line="117" pos:column="17"/></name></expr></cpp:if>
    <expr_stmt><expr><name><name pos:line="118" pos:column="5">ret<pos:position pos:line="118" pos:column="8"/></name><operator pos:line="118" pos:column="8">-&gt;<pos:position pos:line="118" pos:column="13"/></operator><name pos:line="118" pos:column="10">status<pos:position pos:line="118" pos:column="16"/></name></name> <operator pos:line="118" pos:column="17">=<pos:position pos:line="118" pos:column="18"/></operator> <call><name pos:line="118" pos:column="19">OCILogon<pos:position pos:line="118" pos:column="27"/></name><argument_list pos:line="118" pos:column="27">(<argument><expr><name pos:line="118" pos:column="28">dbd_oracle_env<pos:position pos:line="118" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="44">ret<pos:position pos:line="118" pos:column="47"/></name><operator pos:line="118" pos:column="47">-&gt;<pos:position pos:line="118" pos:column="52"/></operator><name pos:line="118" pos:column="49">err<pos:position pos:line="118" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="118" pos:column="54">&amp;<pos:position pos:line="118" pos:column="59"/></operator><name><name pos:line="118" pos:column="55">ret<pos:position pos:line="118" pos:column="58"/></name><operator pos:line="118" pos:column="58">-&gt;<pos:position pos:line="118" pos:column="63"/></operator><name pos:line="118" pos:column="60">svc<pos:position pos:line="118" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="65">fields<pos:position pos:line="118" pos:column="71"/></name><index pos:line="118" pos:column="71">[<expr><literal type="number" pos:line="118" pos:column="72">0<pos:position pos:line="118" pos:column="73"/></literal></expr>]<pos:position pos:line="118" pos:column="74"/></index></name><operator pos:line="118" pos:column="74">.<pos:position pos:line="118" pos:column="75"/></operator><name pos:line="118" pos:column="75">value<pos:position pos:line="118" pos:column="80"/></name></expr></argument>,
                     <argument><expr><call><name pos:line="119" pos:column="22">strlen<pos:position pos:line="119" pos:column="28"/></name><argument_list pos:line="119" pos:column="28">(<argument><expr><name><name pos:line="119" pos:column="29">fields<pos:position pos:line="119" pos:column="35"/></name><index pos:line="119" pos:column="35">[<expr><literal type="number" pos:line="119" pos:column="36">0<pos:position pos:line="119" pos:column="37"/></literal></expr>]<pos:position pos:line="119" pos:column="38"/></index></name><operator pos:line="119" pos:column="38">.<pos:position pos:line="119" pos:column="39"/></operator><name pos:line="119" pos:column="39">value<pos:position pos:line="119" pos:column="44"/></name></expr></argument>)<pos:position pos:line="119" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="47">fields<pos:position pos:line="119" pos:column="53"/></name><index pos:line="119" pos:column="53">[<expr><literal type="number" pos:line="119" pos:column="54">1<pos:position pos:line="119" pos:column="55"/></literal></expr>]<pos:position pos:line="119" pos:column="56"/></index></name><operator pos:line="119" pos:column="56">.<pos:position pos:line="119" pos:column="57"/></operator><name pos:line="119" pos:column="57">value<pos:position pos:line="119" pos:column="62"/></name></expr></argument>,
                     <argument><expr><call><name pos:line="120" pos:column="22">strlen<pos:position pos:line="120" pos:column="28"/></name><argument_list pos:line="120" pos:column="28">(<argument><expr><name><name pos:line="120" pos:column="29">fields<pos:position pos:line="120" pos:column="35"/></name><index pos:line="120" pos:column="35">[<expr><literal type="number" pos:line="120" pos:column="36">1<pos:position pos:line="120" pos:column="37"/></literal></expr>]<pos:position pos:line="120" pos:column="38"/></index></name><operator pos:line="120" pos:column="38">.<pos:position pos:line="120" pos:column="39"/></operator><name pos:line="120" pos:column="39">value<pos:position pos:line="120" pos:column="44"/></name></expr></argument>)<pos:position pos:line="120" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="120" pos:column="47">fields<pos:position pos:line="120" pos:column="53"/></name><index pos:line="120" pos:column="53">[<expr><literal type="number" pos:line="120" pos:column="54">2<pos:position pos:line="120" pos:column="55"/></literal></expr>]<pos:position pos:line="120" pos:column="56"/></index></name><operator pos:line="120" pos:column="56">.<pos:position pos:line="120" pos:column="57"/></operator><name pos:line="120" pos:column="57">value<pos:position pos:line="120" pos:column="62"/></name></expr></argument>,
                     <argument><expr><call><name pos:line="121" pos:column="22">strlen<pos:position pos:line="121" pos:column="28"/></name><argument_list pos:line="121" pos:column="28">(<argument><expr><name><name pos:line="121" pos:column="29">fields<pos:position pos:line="121" pos:column="35"/></name><index pos:line="121" pos:column="35">[<expr><literal type="number" pos:line="121" pos:column="36">2<pos:position pos:line="121" pos:column="37"/></literal></expr>]<pos:position pos:line="121" pos:column="38"/></index></name><operator pos:line="121" pos:column="38">.<pos:position pos:line="121" pos:column="39"/></operator><name pos:line="121" pos:column="39">value<pos:position pos:line="121" pos:column="44"/></name></expr></argument>)<pos:position pos:line="121" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="121" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="47"/></expr_stmt>
    <switch pos:line="122" pos:column="5">switch <condition pos:line="122" pos:column="12">(<expr><name><name pos:line="122" pos:column="13">ret<pos:position pos:line="122" pos:column="16"/></name><operator pos:line="122" pos:column="16">-&gt;<pos:position pos:line="122" pos:column="21"/></operator><name pos:line="122" pos:column="18">status<pos:position pos:line="122" pos:column="24"/></name></name></expr>)<pos:position pos:line="122" pos:column="25"/></condition> <block pos:line="122" pos:column="26">{
    <default pos:line="123" pos:column="5">default:<pos:position pos:line="123" pos:column="13"/></default>
<cpp:ifdef pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">ifdef<pos:position pos:line="124" pos:column="7"/></cpp:directive> <name pos:line="124" pos:column="8">DEBUG<pos:position pos:line="124" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="125" pos:column="9">OCIErrorGet<pos:position pos:line="125" pos:column="20"/></name><argument_list pos:line="125" pos:column="20">(<argument><expr><name><name pos:line="125" pos:column="21">ret<pos:position pos:line="125" pos:column="24"/></name><operator pos:line="125" pos:column="24">-&gt;<pos:position pos:line="125" pos:column="29"/></operator><name pos:line="125" pos:column="26">err<pos:position pos:line="125" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="31">1<pos:position pos:line="125" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="125" pos:column="34">NULL<pos:position pos:line="125" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="40">&amp;<pos:position pos:line="125" pos:column="45"/></operator><name pos:line="125" pos:column="41">errorcode<pos:position pos:line="125" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="52">ret<pos:position pos:line="125" pos:column="55"/></name><operator pos:line="125" pos:column="55">-&gt;<pos:position pos:line="125" pos:column="60"/></operator><name pos:line="125" pos:column="57">buf<pos:position pos:line="125" pos:column="60"/></name></name></expr></argument>,
                    <argument><expr><sizeof pos:line="126" pos:column="21">sizeof<argument_list pos:line="126" pos:column="27">(<argument><expr><name><name pos:line="126" pos:column="28">ret<pos:position pos:line="126" pos:column="31"/></name><operator pos:line="126" pos:column="31">-&gt;<pos:position pos:line="126" pos:column="36"/></operator><name pos:line="126" pos:column="33">buf<pos:position pos:line="126" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="126" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="126" pos:column="54"/></name></expr></argument>)<pos:position pos:line="126" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="127" pos:column="9">printf<pos:position pos:line="127" pos:column="15"/></name><argument_list pos:line="127" pos:column="15">(<argument><expr><literal type="string" pos:line="127" pos:column="16">"OPEN ERROR: %s\n"<pos:position pos:line="127" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="36">ret<pos:position pos:line="127" pos:column="39"/></name><operator pos:line="127" pos:column="39">-&gt;<pos:position pos:line="127" pos:column="44"/></operator><name pos:line="127" pos:column="41">buf<pos:position pos:line="127" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="46"/></expr_stmt>
        <break pos:line="128" pos:column="9">break;<pos:position pos:line="128" pos:column="15"/></break>
<cpp:else pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">else<pos:position pos:line="129" pos:column="6"/></cpp:directive></cpp:else>
        <if pos:line="130" pos:column="9">if <condition pos:line="130" pos:column="12">(<expr><name pos:line="130" pos:column="13">error<pos:position pos:line="130" pos:column="18"/></name></expr>)<pos:position pos:line="130" pos:column="19"/></condition><then pos:line="130" pos:column="19"> <block pos:line="130" pos:column="20">{
            <expr_stmt><expr><operator pos:line="131" pos:column="13">*<pos:position pos:line="131" pos:column="14"/></operator><name pos:line="131" pos:column="14">error<pos:position pos:line="131" pos:column="19"/></name> <operator pos:line="131" pos:column="20">=<pos:position pos:line="131" pos:column="21"/></operator> <call><name pos:line="131" pos:column="22">apr_pcalloc<pos:position pos:line="131" pos:column="33"/></name><argument_list pos:line="131" pos:column="33">(<argument><expr><name pos:line="131" pos:column="34">pool<pos:position pos:line="131" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="40">ERR_BUF_SIZE<pos:position pos:line="131" pos:column="52"/></name></expr></argument>)<pos:position pos:line="131" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="132" pos:column="13">OCIErrorGet<pos:position pos:line="132" pos:column="24"/></name><argument_list pos:line="132" pos:column="24">(<argument><expr><name><name pos:line="132" pos:column="25">ret<pos:position pos:line="132" pos:column="28"/></name><operator pos:line="132" pos:column="28">-&gt;<pos:position pos:line="132" pos:column="33"/></operator><name pos:line="132" pos:column="30">err<pos:position pos:line="132" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="132" pos:column="35">1<pos:position pos:line="132" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="132" pos:column="38">NULL<pos:position pos:line="132" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="132" pos:column="44">&amp;<pos:position pos:line="132" pos:column="49"/></operator><name pos:line="132" pos:column="45">errorcode<pos:position pos:line="132" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="132" pos:column="56">(<pos:position pos:line="132" pos:column="57"/></operator><name pos:line="132" pos:column="57">unsigned<pos:position pos:line="132" pos:column="65"/></name> <name pos:line="132" pos:column="66">char<pos:position pos:line="132" pos:column="70"/></name><operator pos:line="132" pos:column="70">*<pos:position pos:line="132" pos:column="71"/></operator><operator pos:line="132" pos:column="71">)<pos:position pos:line="132" pos:column="72"/></operator><operator pos:line="132" pos:column="72">(<pos:position pos:line="132" pos:column="73"/></operator><operator pos:line="132" pos:column="73">*<pos:position pos:line="132" pos:column="74"/></operator><name pos:line="132" pos:column="74">error<pos:position pos:line="132" pos:column="79"/></name><operator pos:line="132" pos:column="79">)<pos:position pos:line="132" pos:column="80"/></operator></expr></argument>,
                        <argument><expr><name pos:line="133" pos:column="25">ERR_BUF_SIZE<pos:position pos:line="133" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="133" pos:column="54"/></name></expr></argument>)<pos:position pos:line="133" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="134" pos:column="10"/></block></then></if>
        <return pos:line="135" pos:column="9">return <expr><name pos:line="135" pos:column="16">NULL<pos:position pos:line="135" pos:column="20"/></name></expr>;<pos:position pos:line="135" pos:column="21"/></return>
<cpp:endif pos:line="136" pos:column="1">#<cpp:directive pos:line="136" pos:column="2">endif<pos:position pos:line="136" pos:column="7"/></cpp:directive></cpp:endif>
    <case pos:line="137" pos:column="5">case <expr><name pos:line="137" pos:column="10">OCI_SUCCESS<pos:position pos:line="137" pos:column="21"/></name></expr>:<pos:position pos:line="137" pos:column="22"/></case>
        <break pos:line="138" pos:column="9">break;<pos:position pos:line="138" pos:column="15"/></break>
    }<pos:position pos:line="139" pos:column="6"/></block></switch>
<cpp:else pos:line="140" pos:column="1">#<cpp:directive pos:line="140" pos:column="2">else<pos:position pos:line="140" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name><name pos:line="141" pos:column="5">ret<pos:position pos:line="141" pos:column="8"/></name><operator pos:line="141" pos:column="8">-&gt;<pos:position pos:line="141" pos:column="13"/></operator><name pos:line="141" pos:column="10">status<pos:position pos:line="141" pos:column="16"/></name></name> <operator pos:line="141" pos:column="17">=<pos:position pos:line="141" pos:column="18"/></operator> <call><name pos:line="141" pos:column="19">OCIServerAttach<pos:position pos:line="141" pos:column="34"/></name><argument_list pos:line="141" pos:column="34">(<argument><expr><name><name pos:line="141" pos:column="35">ret<pos:position pos:line="141" pos:column="38"/></name><operator pos:line="141" pos:column="38">-&gt;<pos:position pos:line="141" pos:column="43"/></operator><name pos:line="141" pos:column="40">svr<pos:position pos:line="141" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="141" pos:column="45">ret<pos:position pos:line="141" pos:column="48"/></name><operator pos:line="141" pos:column="48">-&gt;<pos:position pos:line="141" pos:column="53"/></operator><name pos:line="141" pos:column="50">err<pos:position pos:line="141" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="141" pos:column="55">(<pos:position pos:line="141" pos:column="56"/></operator><name pos:line="141" pos:column="56">text<pos:position pos:line="141" pos:column="60"/></name><operator pos:line="141" pos:column="60">*<pos:position pos:line="141" pos:column="61"/></operator><operator pos:line="141" pos:column="61">)<pos:position pos:line="141" pos:column="62"/></operator> <name><name pos:line="141" pos:column="63">fields<pos:position pos:line="141" pos:column="69"/></name><index pos:line="141" pos:column="69">[<expr><literal type="number" pos:line="141" pos:column="70">3<pos:position pos:line="141" pos:column="71"/></literal></expr>]<pos:position pos:line="141" pos:column="72"/></index></name><operator pos:line="141" pos:column="72">.<pos:position pos:line="141" pos:column="73"/></operator><name pos:line="141" pos:column="73">value<pos:position pos:line="141" pos:column="78"/></name></expr></argument>,
                                  <argument><expr><call><name pos:line="142" pos:column="35">strlen<pos:position pos:line="142" pos:column="41"/></name><argument_list pos:line="142" pos:column="41">(<argument><expr><name><name pos:line="142" pos:column="42">fields<pos:position pos:line="142" pos:column="48"/></name><index pos:line="142" pos:column="48">[<expr><literal type="number" pos:line="142" pos:column="49">3<pos:position pos:line="142" pos:column="50"/></literal></expr>]<pos:position pos:line="142" pos:column="51"/></index></name><operator pos:line="142" pos:column="51">.<pos:position pos:line="142" pos:column="52"/></operator><name pos:line="142" pos:column="52">value<pos:position pos:line="142" pos:column="57"/></name></expr></argument>)<pos:position pos:line="142" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="142" pos:column="60">OCI_DEFAULT<pos:position pos:line="142" pos:column="71"/></name></expr></argument>)<pos:position pos:line="142" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="73"/></expr_stmt>
    <switch pos:line="143" pos:column="5">switch <condition pos:line="143" pos:column="12">(<expr><name><name pos:line="143" pos:column="13">ret<pos:position pos:line="143" pos:column="16"/></name><operator pos:line="143" pos:column="16">-&gt;<pos:position pos:line="143" pos:column="21"/></operator><name pos:line="143" pos:column="18">status<pos:position pos:line="143" pos:column="24"/></name></name></expr>)<pos:position pos:line="143" pos:column="25"/></condition> <block pos:line="143" pos:column="26">{
    <default pos:line="144" pos:column="5">default:<pos:position pos:line="144" pos:column="13"/></default>
<cpp:ifdef pos:line="145" pos:column="1">#<cpp:directive pos:line="145" pos:column="2">ifdef<pos:position pos:line="145" pos:column="7"/></cpp:directive> <name pos:line="145" pos:column="8">DEBUG<pos:position pos:line="145" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="146" pos:column="9">OCIErrorGet<pos:position pos:line="146" pos:column="20"/></name><argument_list pos:line="146" pos:column="20">(<argument><expr><name><name pos:line="146" pos:column="21">ret<pos:position pos:line="146" pos:column="24"/></name><operator pos:line="146" pos:column="24">-&gt;<pos:position pos:line="146" pos:column="29"/></operator><name pos:line="146" pos:column="26">err<pos:position pos:line="146" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="146" pos:column="31">1<pos:position pos:line="146" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="146" pos:column="34">NULL<pos:position pos:line="146" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="146" pos:column="40">&amp;<pos:position pos:line="146" pos:column="45"/></operator><name pos:line="146" pos:column="41">errorcode<pos:position pos:line="146" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="146" pos:column="52">ret<pos:position pos:line="146" pos:column="55"/></name><operator pos:line="146" pos:column="55">-&gt;<pos:position pos:line="146" pos:column="60"/></operator><name pos:line="146" pos:column="57">buf<pos:position pos:line="146" pos:column="60"/></name></name></expr></argument>,
                    <argument><expr><sizeof pos:line="147" pos:column="21">sizeof<argument_list pos:line="147" pos:column="27">(<argument><expr><name><name pos:line="147" pos:column="28">ret<pos:position pos:line="147" pos:column="31"/></name><operator pos:line="147" pos:column="31">-&gt;<pos:position pos:line="147" pos:column="36"/></operator><name pos:line="147" pos:column="33">buf<pos:position pos:line="147" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="147" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="147" pos:column="54"/></name></expr></argument>)<pos:position pos:line="147" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="148" pos:column="9">printf<pos:position pos:line="148" pos:column="15"/></name><argument_list pos:line="148" pos:column="15">(<argument><expr><literal type="string" pos:line="148" pos:column="16">"OPEN ERROR %d (server attach): %s\n"<pos:position pos:line="148" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="148" pos:column="55">ret<pos:position pos:line="148" pos:column="58"/></name><operator pos:line="148" pos:column="58">-&gt;<pos:position pos:line="148" pos:column="63"/></operator><name pos:line="148" pos:column="60">status<pos:position pos:line="148" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="148" pos:column="68">ret<pos:position pos:line="148" pos:column="71"/></name><operator pos:line="148" pos:column="71">-&gt;<pos:position pos:line="148" pos:column="76"/></operator><name pos:line="148" pos:column="73">buf<pos:position pos:line="148" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="148" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="78"/></expr_stmt>
        <break pos:line="149" pos:column="9">break;<pos:position pos:line="149" pos:column="15"/></break>
<cpp:else pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">else<pos:position pos:line="150" pos:column="6"/></cpp:directive></cpp:else>
        <if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><name pos:line="151" pos:column="13">error<pos:position pos:line="151" pos:column="18"/></name></expr>)<pos:position pos:line="151" pos:column="19"/></condition><then pos:line="151" pos:column="19"> <block pos:line="151" pos:column="20">{
            <expr_stmt><expr><operator pos:line="152" pos:column="13">*<pos:position pos:line="152" pos:column="14"/></operator><name pos:line="152" pos:column="14">error<pos:position pos:line="152" pos:column="19"/></name> <operator pos:line="152" pos:column="20">=<pos:position pos:line="152" pos:column="21"/></operator> <call><name pos:line="152" pos:column="22">apr_pcalloc<pos:position pos:line="152" pos:column="33"/></name><argument_list pos:line="152" pos:column="33">(<argument><expr><name pos:line="152" pos:column="34">pool<pos:position pos:line="152" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="40">ERR_BUF_SIZE<pos:position pos:line="152" pos:column="52"/></name></expr></argument>)<pos:position pos:line="152" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="153" pos:column="13">OCIErrorGet<pos:position pos:line="153" pos:column="24"/></name><argument_list pos:line="153" pos:column="24">(<argument><expr><name><name pos:line="153" pos:column="25">ret<pos:position pos:line="153" pos:column="28"/></name><operator pos:line="153" pos:column="28">-&gt;<pos:position pos:line="153" pos:column="33"/></operator><name pos:line="153" pos:column="30">err<pos:position pos:line="153" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="153" pos:column="35">1<pos:position pos:line="153" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="38">NULL<pos:position pos:line="153" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="153" pos:column="44">&amp;<pos:position pos:line="153" pos:column="49"/></operator><name pos:line="153" pos:column="45">errorcode<pos:position pos:line="153" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="153" pos:column="56">(<pos:position pos:line="153" pos:column="57"/></operator><name pos:line="153" pos:column="57">unsigned<pos:position pos:line="153" pos:column="65"/></name> <name pos:line="153" pos:column="66">char<pos:position pos:line="153" pos:column="70"/></name><operator pos:line="153" pos:column="70">*<pos:position pos:line="153" pos:column="71"/></operator><operator pos:line="153" pos:column="71">)<pos:position pos:line="153" pos:column="72"/></operator><operator pos:line="153" pos:column="72">(<pos:position pos:line="153" pos:column="73"/></operator><operator pos:line="153" pos:column="73">*<pos:position pos:line="153" pos:column="74"/></operator><name pos:line="153" pos:column="74">error<pos:position pos:line="153" pos:column="79"/></name><operator pos:line="153" pos:column="79">)<pos:position pos:line="153" pos:column="80"/></operator></expr></argument>,
                        <argument><expr><name pos:line="154" pos:column="25">ERR_BUF_SIZE<pos:position pos:line="154" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="154" pos:column="54"/></name></expr></argument>)<pos:position pos:line="154" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="155" pos:column="10"/></block></then></if>
        <return pos:line="156" pos:column="9">return <expr><name pos:line="156" pos:column="16">NULL<pos:position pos:line="156" pos:column="20"/></name></expr>;<pos:position pos:line="156" pos:column="21"/></return>
<cpp:endif pos:line="157" pos:column="1">#<cpp:directive pos:line="157" pos:column="2">endif<pos:position pos:line="157" pos:column="7"/></cpp:directive></cpp:endif>
    <case pos:line="158" pos:column="5">case <expr><name pos:line="158" pos:column="10">OCI_SUCCESS<pos:position pos:line="158" pos:column="21"/></name></expr>:<pos:position pos:line="158" pos:column="22"/></case>
        <break pos:line="159" pos:column="9">break;<pos:position pos:line="159" pos:column="15"/></break>
    }<pos:position pos:line="160" pos:column="6"/></block></switch>
    <expr_stmt><expr><name><name pos:line="161" pos:column="5">ret<pos:position pos:line="161" pos:column="8"/></name><operator pos:line="161" pos:column="8">-&gt;<pos:position pos:line="161" pos:column="13"/></operator><name pos:line="161" pos:column="10">status<pos:position pos:line="161" pos:column="16"/></name></name> <operator pos:line="161" pos:column="17">=<pos:position pos:line="161" pos:column="18"/></operator> <call><name pos:line="161" pos:column="19">OCIAttrSet<pos:position pos:line="161" pos:column="29"/></name><argument_list pos:line="161" pos:column="29">(<argument><expr><name><name pos:line="161" pos:column="30">ret<pos:position pos:line="161" pos:column="33"/></name><operator pos:line="161" pos:column="33">-&gt;<pos:position pos:line="161" pos:column="38"/></operator><name pos:line="161" pos:column="35">svc<pos:position pos:line="161" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="40">OCI_HTYPE_SVCCTX<pos:position pos:line="161" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="161" pos:column="58">ret<pos:position pos:line="161" pos:column="61"/></name><operator pos:line="161" pos:column="61">-&gt;<pos:position pos:line="161" pos:column="66"/></operator><name pos:line="161" pos:column="63">svr<pos:position pos:line="161" pos:column="66"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="161" pos:column="68">0<pos:position pos:line="161" pos:column="69"/></literal></expr></argument>,
                        <argument><expr><name pos:line="162" pos:column="25">OCI_ATTR_SERVER<pos:position pos:line="162" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="162" pos:column="42">ret<pos:position pos:line="162" pos:column="45"/></name><operator pos:line="162" pos:column="45">-&gt;<pos:position pos:line="162" pos:column="50"/></operator><name pos:line="162" pos:column="47">err<pos:position pos:line="162" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="162" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="52"/></expr_stmt>
    <switch pos:line="163" pos:column="5">switch <condition pos:line="163" pos:column="12">(<expr><name><name pos:line="163" pos:column="13">ret<pos:position pos:line="163" pos:column="16"/></name><operator pos:line="163" pos:column="16">-&gt;<pos:position pos:line="163" pos:column="21"/></operator><name pos:line="163" pos:column="18">status<pos:position pos:line="163" pos:column="24"/></name></name></expr>)<pos:position pos:line="163" pos:column="25"/></condition> <block pos:line="163" pos:column="26">{
    <default pos:line="164" pos:column="5">default:<pos:position pos:line="164" pos:column="13"/></default>
<cpp:ifdef pos:line="165" pos:column="1">#<cpp:directive pos:line="165" pos:column="2">ifdef<pos:position pos:line="165" pos:column="7"/></cpp:directive> <name pos:line="165" pos:column="8">DEBUG<pos:position pos:line="165" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="166" pos:column="9">OCIErrorGet<pos:position pos:line="166" pos:column="20"/></name><argument_list pos:line="166" pos:column="20">(<argument><expr><name><name pos:line="166" pos:column="21">ret<pos:position pos:line="166" pos:column="24"/></name><operator pos:line="166" pos:column="24">-&gt;<pos:position pos:line="166" pos:column="29"/></operator><name pos:line="166" pos:column="26">err<pos:position pos:line="166" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="166" pos:column="31">1<pos:position pos:line="166" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="166" pos:column="34">NULL<pos:position pos:line="166" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="166" pos:column="40">&amp;<pos:position pos:line="166" pos:column="45"/></operator><name pos:line="166" pos:column="41">errorcode<pos:position pos:line="166" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="166" pos:column="52">ret<pos:position pos:line="166" pos:column="55"/></name><operator pos:line="166" pos:column="55">-&gt;<pos:position pos:line="166" pos:column="60"/></operator><name pos:line="166" pos:column="57">buf<pos:position pos:line="166" pos:column="60"/></name></name></expr></argument>,
                    <argument><expr><sizeof pos:line="167" pos:column="21">sizeof<argument_list pos:line="167" pos:column="27">(<argument><expr><name><name pos:line="167" pos:column="28">ret<pos:position pos:line="167" pos:column="31"/></name><operator pos:line="167" pos:column="31">-&gt;<pos:position pos:line="167" pos:column="36"/></operator><name pos:line="167" pos:column="33">buf<pos:position pos:line="167" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="167" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="167" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="167" pos:column="54"/></name></expr></argument>)<pos:position pos:line="167" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="168" pos:column="9">printf<pos:position pos:line="168" pos:column="15"/></name><argument_list pos:line="168" pos:column="15">(<argument><expr><literal type="string" pos:line="168" pos:column="16">"OPEN ERROR %d (attr set): %s\n"<pos:position pos:line="168" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="168" pos:column="50">ret<pos:position pos:line="168" pos:column="53"/></name><operator pos:line="168" pos:column="53">-&gt;<pos:position pos:line="168" pos:column="58"/></operator><name pos:line="168" pos:column="55">status<pos:position pos:line="168" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="168" pos:column="63">ret<pos:position pos:line="168" pos:column="66"/></name><operator pos:line="168" pos:column="66">-&gt;<pos:position pos:line="168" pos:column="71"/></operator><name pos:line="168" pos:column="68">buf<pos:position pos:line="168" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="168" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="73"/></expr_stmt>
        <break pos:line="169" pos:column="9">break;<pos:position pos:line="169" pos:column="15"/></break>
<cpp:else pos:line="170" pos:column="1">#<cpp:directive pos:line="170" pos:column="2">else<pos:position pos:line="170" pos:column="6"/></cpp:directive></cpp:else>
        <if pos:line="171" pos:column="9">if <condition pos:line="171" pos:column="12">(<expr><name pos:line="171" pos:column="13">error<pos:position pos:line="171" pos:column="18"/></name></expr>)<pos:position pos:line="171" pos:column="19"/></condition><then pos:line="171" pos:column="19"> <block pos:line="171" pos:column="20">{
            <expr_stmt><expr><operator pos:line="172" pos:column="13">*<pos:position pos:line="172" pos:column="14"/></operator><name pos:line="172" pos:column="14">error<pos:position pos:line="172" pos:column="19"/></name> <operator pos:line="172" pos:column="20">=<pos:position pos:line="172" pos:column="21"/></operator> <call><name pos:line="172" pos:column="22">apr_pcalloc<pos:position pos:line="172" pos:column="33"/></name><argument_list pos:line="172" pos:column="33">(<argument><expr><name pos:line="172" pos:column="34">pool<pos:position pos:line="172" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="40">ERR_BUF_SIZE<pos:position pos:line="172" pos:column="52"/></name></expr></argument>)<pos:position pos:line="172" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="173" pos:column="13">OCIErrorGet<pos:position pos:line="173" pos:column="24"/></name><argument_list pos:line="173" pos:column="24">(<argument><expr><name><name pos:line="173" pos:column="25">ret<pos:position pos:line="173" pos:column="28"/></name><operator pos:line="173" pos:column="28">-&gt;<pos:position pos:line="173" pos:column="33"/></operator><name pos:line="173" pos:column="30">err<pos:position pos:line="173" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="173" pos:column="35">1<pos:position pos:line="173" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="173" pos:column="38">NULL<pos:position pos:line="173" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="173" pos:column="44">&amp;<pos:position pos:line="173" pos:column="49"/></operator><name pos:line="173" pos:column="45">errorcode<pos:position pos:line="173" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="173" pos:column="56">(<pos:position pos:line="173" pos:column="57"/></operator><name pos:line="173" pos:column="57">unsigned<pos:position pos:line="173" pos:column="65"/></name> <name pos:line="173" pos:column="66">char<pos:position pos:line="173" pos:column="70"/></name><operator pos:line="173" pos:column="70">*<pos:position pos:line="173" pos:column="71"/></operator><operator pos:line="173" pos:column="71">)<pos:position pos:line="173" pos:column="72"/></operator><operator pos:line="173" pos:column="72">(<pos:position pos:line="173" pos:column="73"/></operator><operator pos:line="173" pos:column="73">*<pos:position pos:line="173" pos:column="74"/></operator><name pos:line="173" pos:column="74">error<pos:position pos:line="173" pos:column="79"/></name><operator pos:line="173" pos:column="79">)<pos:position pos:line="173" pos:column="80"/></operator></expr></argument>,
                        <argument><expr><name pos:line="174" pos:column="25">ERR_BUF_SIZE<pos:position pos:line="174" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="174" pos:column="54"/></name></expr></argument>)<pos:position pos:line="174" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="175" pos:column="10"/></block></then></if>
        <return pos:line="176" pos:column="9">return <expr><name pos:line="176" pos:column="16">NULL<pos:position pos:line="176" pos:column="20"/></name></expr>;<pos:position pos:line="176" pos:column="21"/></return>
<cpp:endif pos:line="177" pos:column="1">#<cpp:directive pos:line="177" pos:column="2">endif<pos:position pos:line="177" pos:column="7"/></cpp:directive></cpp:endif>
    <case pos:line="178" pos:column="5">case <expr><name pos:line="178" pos:column="10">OCI_SUCCESS<pos:position pos:line="178" pos:column="21"/></name></expr>:<pos:position pos:line="178" pos:column="22"/></case>
        <break pos:line="179" pos:column="9">break;<pos:position pos:line="179" pos:column="15"/></break>
    }<pos:position pos:line="180" pos:column="6"/></block></switch>
    <expr_stmt><expr><name><name pos:line="181" pos:column="5">ret<pos:position pos:line="181" pos:column="8"/></name><operator pos:line="181" pos:column="8">-&gt;<pos:position pos:line="181" pos:column="13"/></operator><name pos:line="181" pos:column="10">status<pos:position pos:line="181" pos:column="16"/></name></name> <operator pos:line="181" pos:column="17">=<pos:position pos:line="181" pos:column="18"/></operator> <call><name pos:line="181" pos:column="19">OCIHandleAlloc<pos:position pos:line="181" pos:column="33"/></name><argument_list pos:line="181" pos:column="33">(<argument><expr><name pos:line="181" pos:column="34">dbd_oracle_env<pos:position pos:line="181" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="181" pos:column="50">(<pos:position pos:line="181" pos:column="51"/></operator><name pos:line="181" pos:column="51">dvoid<pos:position pos:line="181" pos:column="56"/></name><operator pos:line="181" pos:column="56">*<pos:position pos:line="181" pos:column="57"/></operator><operator pos:line="181" pos:column="57">*<pos:position pos:line="181" pos:column="58"/></operator><operator pos:line="181" pos:column="58">)<pos:position pos:line="181" pos:column="59"/></operator><operator pos:line="181" pos:column="59">&amp;<pos:position pos:line="181" pos:column="64"/></operator><name><name pos:line="181" pos:column="60">ret<pos:position pos:line="181" pos:column="63"/></name><operator pos:line="181" pos:column="63">-&gt;<pos:position pos:line="181" pos:column="68"/></operator><name pos:line="181" pos:column="65">auth<pos:position pos:line="181" pos:column="69"/></name></name></expr></argument>,
                            <argument><expr><name pos:line="182" pos:column="29">OCI_HTYPE_SESSION<pos:position pos:line="182" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="182" pos:column="48">0<pos:position pos:line="182" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="182" pos:column="51">NULL<pos:position pos:line="182" pos:column="55"/></name></expr></argument>)<pos:position pos:line="182" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="57"/></expr_stmt>
    <switch pos:line="183" pos:column="5">switch <condition pos:line="183" pos:column="12">(<expr><name><name pos:line="183" pos:column="13">ret<pos:position pos:line="183" pos:column="16"/></name><operator pos:line="183" pos:column="16">-&gt;<pos:position pos:line="183" pos:column="21"/></operator><name pos:line="183" pos:column="18">status<pos:position pos:line="183" pos:column="24"/></name></name></expr>)<pos:position pos:line="183" pos:column="25"/></condition> <block pos:line="183" pos:column="26">{
    <default pos:line="184" pos:column="5">default:<pos:position pos:line="184" pos:column="13"/></default>
<cpp:ifdef pos:line="185" pos:column="1">#<cpp:directive pos:line="185" pos:column="2">ifdef<pos:position pos:line="185" pos:column="7"/></cpp:directive> <name pos:line="185" pos:column="8">DEBUG<pos:position pos:line="185" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="186" pos:column="9">OCIErrorGet<pos:position pos:line="186" pos:column="20"/></name><argument_list pos:line="186" pos:column="20">(<argument><expr><name><name pos:line="186" pos:column="21">ret<pos:position pos:line="186" pos:column="24"/></name><operator pos:line="186" pos:column="24">-&gt;<pos:position pos:line="186" pos:column="29"/></operator><name pos:line="186" pos:column="26">err<pos:position pos:line="186" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="186" pos:column="31">1<pos:position pos:line="186" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="186" pos:column="34">NULL<pos:position pos:line="186" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="186" pos:column="40">&amp;<pos:position pos:line="186" pos:column="45"/></operator><name pos:line="186" pos:column="41">errorcode<pos:position pos:line="186" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="186" pos:column="52">ret<pos:position pos:line="186" pos:column="55"/></name><operator pos:line="186" pos:column="55">-&gt;<pos:position pos:line="186" pos:column="60"/></operator><name pos:line="186" pos:column="57">buf<pos:position pos:line="186" pos:column="60"/></name></name></expr></argument>,
                    <argument><expr><sizeof pos:line="187" pos:column="21">sizeof<argument_list pos:line="187" pos:column="27">(<argument><expr><name><name pos:line="187" pos:column="28">ret<pos:position pos:line="187" pos:column="31"/></name><operator pos:line="187" pos:column="31">-&gt;<pos:position pos:line="187" pos:column="36"/></operator><name pos:line="187" pos:column="33">buf<pos:position pos:line="187" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="187" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="187" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="187" pos:column="54"/></name></expr></argument>)<pos:position pos:line="187" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="188" pos:column="9">printf<pos:position pos:line="188" pos:column="15"/></name><argument_list pos:line="188" pos:column="15">(<argument><expr><literal type="string" pos:line="188" pos:column="16">"OPEN ERROR %d (alloc auth): %s\n"<pos:position pos:line="188" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="188" pos:column="52">ret<pos:position pos:line="188" pos:column="55"/></name><operator pos:line="188" pos:column="55">-&gt;<pos:position pos:line="188" pos:column="60"/></operator><name pos:line="188" pos:column="57">status<pos:position pos:line="188" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="188" pos:column="65">ret<pos:position pos:line="188" pos:column="68"/></name><operator pos:line="188" pos:column="68">-&gt;<pos:position pos:line="188" pos:column="73"/></operator><name pos:line="188" pos:column="70">buf<pos:position pos:line="188" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="188" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="75"/></expr_stmt>
        <break pos:line="189" pos:column="9">break;<pos:position pos:line="189" pos:column="15"/></break>
<cpp:else pos:line="190" pos:column="1">#<cpp:directive pos:line="190" pos:column="2">else<pos:position pos:line="190" pos:column="6"/></cpp:directive></cpp:else>
        <if pos:line="191" pos:column="9">if <condition pos:line="191" pos:column="12">(<expr><name pos:line="191" pos:column="13">error<pos:position pos:line="191" pos:column="18"/></name></expr>)<pos:position pos:line="191" pos:column="19"/></condition><then pos:line="191" pos:column="19"> <block pos:line="191" pos:column="20">{
            <expr_stmt><expr><operator pos:line="192" pos:column="13">*<pos:position pos:line="192" pos:column="14"/></operator><name pos:line="192" pos:column="14">error<pos:position pos:line="192" pos:column="19"/></name> <operator pos:line="192" pos:column="20">=<pos:position pos:line="192" pos:column="21"/></operator> <call><name pos:line="192" pos:column="22">apr_pcalloc<pos:position pos:line="192" pos:column="33"/></name><argument_list pos:line="192" pos:column="33">(<argument><expr><name pos:line="192" pos:column="34">pool<pos:position pos:line="192" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="40">ERR_BUF_SIZE<pos:position pos:line="192" pos:column="52"/></name></expr></argument>)<pos:position pos:line="192" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="193" pos:column="13">OCIErrorGet<pos:position pos:line="193" pos:column="24"/></name><argument_list pos:line="193" pos:column="24">(<argument><expr><name><name pos:line="193" pos:column="25">ret<pos:position pos:line="193" pos:column="28"/></name><operator pos:line="193" pos:column="28">-&gt;<pos:position pos:line="193" pos:column="33"/></operator><name pos:line="193" pos:column="30">err<pos:position pos:line="193" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="193" pos:column="35">1<pos:position pos:line="193" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="193" pos:column="38">NULL<pos:position pos:line="193" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="193" pos:column="44">&amp;<pos:position pos:line="193" pos:column="49"/></operator><name pos:line="193" pos:column="45">errorcode<pos:position pos:line="193" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="193" pos:column="56">(<pos:position pos:line="193" pos:column="57"/></operator><name pos:line="193" pos:column="57">unsigned<pos:position pos:line="193" pos:column="65"/></name> <name pos:line="193" pos:column="66">char<pos:position pos:line="193" pos:column="70"/></name><operator pos:line="193" pos:column="70">*<pos:position pos:line="193" pos:column="71"/></operator><operator pos:line="193" pos:column="71">)<pos:position pos:line="193" pos:column="72"/></operator><operator pos:line="193" pos:column="72">(<pos:position pos:line="193" pos:column="73"/></operator><operator pos:line="193" pos:column="73">*<pos:position pos:line="193" pos:column="74"/></operator><name pos:line="193" pos:column="74">error<pos:position pos:line="193" pos:column="79"/></name><operator pos:line="193" pos:column="79">)<pos:position pos:line="193" pos:column="80"/></operator></expr></argument>,
                        <argument><expr><name pos:line="194" pos:column="25">ERR_BUF_SIZE<pos:position pos:line="194" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="194" pos:column="54"/></name></expr></argument>)<pos:position pos:line="194" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="195" pos:column="10"/></block></then></if>
        <return pos:line="196" pos:column="9">return <expr><name pos:line="196" pos:column="16">NULL<pos:position pos:line="196" pos:column="20"/></name></expr>;<pos:position pos:line="196" pos:column="21"/></return>
<cpp:endif pos:line="197" pos:column="1">#<cpp:directive pos:line="197" pos:column="2">endif<pos:position pos:line="197" pos:column="7"/></cpp:directive></cpp:endif>
    <case pos:line="198" pos:column="5">case <expr><name pos:line="198" pos:column="10">OCI_SUCCESS<pos:position pos:line="198" pos:column="21"/></name></expr>:<pos:position pos:line="198" pos:column="22"/></case>
        <break pos:line="199" pos:column="9">break;<pos:position pos:line="199" pos:column="15"/></break>
    }<pos:position pos:line="200" pos:column="6"/></block></switch>
    <expr_stmt><expr><name><name pos:line="201" pos:column="5">ret<pos:position pos:line="201" pos:column="8"/></name><operator pos:line="201" pos:column="8">-&gt;<pos:position pos:line="201" pos:column="13"/></operator><name pos:line="201" pos:column="10">status<pos:position pos:line="201" pos:column="16"/></name></name> <operator pos:line="201" pos:column="17">=<pos:position pos:line="201" pos:column="18"/></operator> <call><name pos:line="201" pos:column="19">OCIAttrSet<pos:position pos:line="201" pos:column="29"/></name><argument_list pos:line="201" pos:column="29">(<argument><expr><name><name pos:line="201" pos:column="30">ret<pos:position pos:line="201" pos:column="33"/></name><operator pos:line="201" pos:column="33">-&gt;<pos:position pos:line="201" pos:column="38"/></operator><name pos:line="201" pos:column="35">auth<pos:position pos:line="201" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="41">OCI_HTYPE_SESSION<pos:position pos:line="201" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="201" pos:column="60">fields<pos:position pos:line="201" pos:column="66"/></name><index pos:line="201" pos:column="66">[<expr><literal type="number" pos:line="201" pos:column="67">0<pos:position pos:line="201" pos:column="68"/></literal></expr>]<pos:position pos:line="201" pos:column="69"/></index></name><operator pos:line="201" pos:column="69">.<pos:position pos:line="201" pos:column="70"/></operator><name pos:line="201" pos:column="70">value<pos:position pos:line="201" pos:column="75"/></name></expr></argument>,
                        <argument><expr><call><name pos:line="202" pos:column="25">strlen<pos:position pos:line="202" pos:column="31"/></name><argument_list pos:line="202" pos:column="31">(<argument><expr><name><name pos:line="202" pos:column="32">fields<pos:position pos:line="202" pos:column="38"/></name><index pos:line="202" pos:column="38">[<expr><literal type="number" pos:line="202" pos:column="39">0<pos:position pos:line="202" pos:column="40"/></literal></expr>]<pos:position pos:line="202" pos:column="41"/></index></name><operator pos:line="202" pos:column="41">.<pos:position pos:line="202" pos:column="42"/></operator><name pos:line="202" pos:column="42">value<pos:position pos:line="202" pos:column="47"/></name></expr></argument>)<pos:position pos:line="202" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="202" pos:column="50">OCI_ATTR_USERNAME<pos:position pos:line="202" pos:column="67"/></name></expr></argument>, <argument><expr><name><name pos:line="202" pos:column="69">ret<pos:position pos:line="202" pos:column="72"/></name><operator pos:line="202" pos:column="72">-&gt;<pos:position pos:line="202" pos:column="77"/></operator><name pos:line="202" pos:column="74">err<pos:position pos:line="202" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="202" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="79"/></expr_stmt>
    <switch pos:line="203" pos:column="5">switch <condition pos:line="203" pos:column="12">(<expr><name><name pos:line="203" pos:column="13">ret<pos:position pos:line="203" pos:column="16"/></name><operator pos:line="203" pos:column="16">-&gt;<pos:position pos:line="203" pos:column="21"/></operator><name pos:line="203" pos:column="18">status<pos:position pos:line="203" pos:column="24"/></name></name></expr>)<pos:position pos:line="203" pos:column="25"/></condition> <block pos:line="203" pos:column="26">{
    <default pos:line="204" pos:column="5">default:<pos:position pos:line="204" pos:column="13"/></default>
<cpp:ifdef pos:line="205" pos:column="1">#<cpp:directive pos:line="205" pos:column="2">ifdef<pos:position pos:line="205" pos:column="7"/></cpp:directive> <name pos:line="205" pos:column="8">DEBUG<pos:position pos:line="205" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="206" pos:column="9">OCIErrorGet<pos:position pos:line="206" pos:column="20"/></name><argument_list pos:line="206" pos:column="20">(<argument><expr><name><name pos:line="206" pos:column="21">ret<pos:position pos:line="206" pos:column="24"/></name><operator pos:line="206" pos:column="24">-&gt;<pos:position pos:line="206" pos:column="29"/></operator><name pos:line="206" pos:column="26">err<pos:position pos:line="206" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="206" pos:column="31">1<pos:position pos:line="206" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="206" pos:column="34">NULL<pos:position pos:line="206" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="206" pos:column="40">&amp;<pos:position pos:line="206" pos:column="45"/></operator><name pos:line="206" pos:column="41">errorcode<pos:position pos:line="206" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="206" pos:column="52">ret<pos:position pos:line="206" pos:column="55"/></name><operator pos:line="206" pos:column="55">-&gt;<pos:position pos:line="206" pos:column="60"/></operator><name pos:line="206" pos:column="57">buf<pos:position pos:line="206" pos:column="60"/></name></name></expr></argument>,
                    <argument><expr><sizeof pos:line="207" pos:column="21">sizeof<argument_list pos:line="207" pos:column="27">(<argument><expr><name><name pos:line="207" pos:column="28">ret<pos:position pos:line="207" pos:column="31"/></name><operator pos:line="207" pos:column="31">-&gt;<pos:position pos:line="207" pos:column="36"/></operator><name pos:line="207" pos:column="33">buf<pos:position pos:line="207" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="207" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="207" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="207" pos:column="54"/></name></expr></argument>)<pos:position pos:line="207" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="208" pos:column="9">printf<pos:position pos:line="208" pos:column="15"/></name><argument_list pos:line="208" pos:column="15">(<argument><expr><literal type="string" pos:line="208" pos:column="16">"OPEN ERROR %d (attr username): %s\n"<pos:position pos:line="208" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="208" pos:column="55">ret<pos:position pos:line="208" pos:column="58"/></name><operator pos:line="208" pos:column="58">-&gt;<pos:position pos:line="208" pos:column="63"/></operator><name pos:line="208" pos:column="60">status<pos:position pos:line="208" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="208" pos:column="68">ret<pos:position pos:line="208" pos:column="71"/></name><operator pos:line="208" pos:column="71">-&gt;<pos:position pos:line="208" pos:column="76"/></operator><name pos:line="208" pos:column="73">buf<pos:position pos:line="208" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="208" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="78"/></expr_stmt>
        <break pos:line="209" pos:column="9">break;<pos:position pos:line="209" pos:column="15"/></break>
<cpp:else pos:line="210" pos:column="1">#<cpp:directive pos:line="210" pos:column="2">else<pos:position pos:line="210" pos:column="6"/></cpp:directive></cpp:else>
        <if pos:line="211" pos:column="9">if <condition pos:line="211" pos:column="12">(<expr><name pos:line="211" pos:column="13">error<pos:position pos:line="211" pos:column="18"/></name></expr>)<pos:position pos:line="211" pos:column="19"/></condition><then pos:line="211" pos:column="19"> <block pos:line="211" pos:column="20">{
            <expr_stmt><expr><operator pos:line="212" pos:column="13">*<pos:position pos:line="212" pos:column="14"/></operator><name pos:line="212" pos:column="14">error<pos:position pos:line="212" pos:column="19"/></name> <operator pos:line="212" pos:column="20">=<pos:position pos:line="212" pos:column="21"/></operator> <call><name pos:line="212" pos:column="22">apr_pcalloc<pos:position pos:line="212" pos:column="33"/></name><argument_list pos:line="212" pos:column="33">(<argument><expr><name pos:line="212" pos:column="34">pool<pos:position pos:line="212" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="40">ERR_BUF_SIZE<pos:position pos:line="212" pos:column="52"/></name></expr></argument>)<pos:position pos:line="212" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="213" pos:column="13">OCIErrorGet<pos:position pos:line="213" pos:column="24"/></name><argument_list pos:line="213" pos:column="24">(<argument><expr><name><name pos:line="213" pos:column="25">ret<pos:position pos:line="213" pos:column="28"/></name><operator pos:line="213" pos:column="28">-&gt;<pos:position pos:line="213" pos:column="33"/></operator><name pos:line="213" pos:column="30">err<pos:position pos:line="213" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="213" pos:column="35">1<pos:position pos:line="213" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="213" pos:column="38">NULL<pos:position pos:line="213" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="213" pos:column="44">&amp;<pos:position pos:line="213" pos:column="49"/></operator><name pos:line="213" pos:column="45">errorcode<pos:position pos:line="213" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="213" pos:column="56">(<pos:position pos:line="213" pos:column="57"/></operator><name pos:line="213" pos:column="57">unsigned<pos:position pos:line="213" pos:column="65"/></name> <name pos:line="213" pos:column="66">char<pos:position pos:line="213" pos:column="70"/></name><operator pos:line="213" pos:column="70">*<pos:position pos:line="213" pos:column="71"/></operator><operator pos:line="213" pos:column="71">)<pos:position pos:line="213" pos:column="72"/></operator><operator pos:line="213" pos:column="72">(<pos:position pos:line="213" pos:column="73"/></operator><operator pos:line="213" pos:column="73">*<pos:position pos:line="213" pos:column="74"/></operator><name pos:line="213" pos:column="74">error<pos:position pos:line="213" pos:column="79"/></name><operator pos:line="213" pos:column="79">)<pos:position pos:line="213" pos:column="80"/></operator></expr></argument>,
                        <argument><expr><name pos:line="214" pos:column="25">ERR_BUF_SIZE<pos:position pos:line="214" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="214" pos:column="54"/></name></expr></argument>)<pos:position pos:line="214" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="215" pos:column="10"/></block></then></if>
        <return pos:line="216" pos:column="9">return <expr><name pos:line="216" pos:column="16">NULL<pos:position pos:line="216" pos:column="20"/></name></expr>;<pos:position pos:line="216" pos:column="21"/></return>
<cpp:endif pos:line="217" pos:column="1">#<cpp:directive pos:line="217" pos:column="2">endif<pos:position pos:line="217" pos:column="7"/></cpp:directive></cpp:endif>
    <case pos:line="218" pos:column="5">case <expr><name pos:line="218" pos:column="10">OCI_SUCCESS<pos:position pos:line="218" pos:column="21"/></name></expr>:<pos:position pos:line="218" pos:column="22"/></case>
        <break pos:line="219" pos:column="9">break;<pos:position pos:line="219" pos:column="15"/></break>
    }<pos:position pos:line="220" pos:column="6"/></block></switch>
    <expr_stmt><expr><name><name pos:line="221" pos:column="5">ret<pos:position pos:line="221" pos:column="8"/></name><operator pos:line="221" pos:column="8">-&gt;<pos:position pos:line="221" pos:column="13"/></operator><name pos:line="221" pos:column="10">status<pos:position pos:line="221" pos:column="16"/></name></name> <operator pos:line="221" pos:column="17">=<pos:position pos:line="221" pos:column="18"/></operator> <call><name pos:line="221" pos:column="19">OCIAttrSet<pos:position pos:line="221" pos:column="29"/></name><argument_list pos:line="221" pos:column="29">(<argument><expr><name><name pos:line="221" pos:column="30">ret<pos:position pos:line="221" pos:column="33"/></name><operator pos:line="221" pos:column="33">-&gt;<pos:position pos:line="221" pos:column="38"/></operator><name pos:line="221" pos:column="35">auth<pos:position pos:line="221" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="221" pos:column="41">OCI_HTYPE_SESSION<pos:position pos:line="221" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="221" pos:column="60">fields<pos:position pos:line="221" pos:column="66"/></name><index pos:line="221" pos:column="66">[<expr><literal type="number" pos:line="221" pos:column="67">1<pos:position pos:line="221" pos:column="68"/></literal></expr>]<pos:position pos:line="221" pos:column="69"/></index></name><operator pos:line="221" pos:column="69">.<pos:position pos:line="221" pos:column="70"/></operator><name pos:line="221" pos:column="70">value<pos:position pos:line="221" pos:column="75"/></name></expr></argument>,
                        <argument><expr><call><name pos:line="222" pos:column="25">strlen<pos:position pos:line="222" pos:column="31"/></name><argument_list pos:line="222" pos:column="31">(<argument><expr><name><name pos:line="222" pos:column="32">fields<pos:position pos:line="222" pos:column="38"/></name><index pos:line="222" pos:column="38">[<expr><literal type="number" pos:line="222" pos:column="39">1<pos:position pos:line="222" pos:column="40"/></literal></expr>]<pos:position pos:line="222" pos:column="41"/></index></name><operator pos:line="222" pos:column="41">.<pos:position pos:line="222" pos:column="42"/></operator><name pos:line="222" pos:column="42">value<pos:position pos:line="222" pos:column="47"/></name></expr></argument>)<pos:position pos:line="222" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="222" pos:column="50">OCI_ATTR_PASSWORD<pos:position pos:line="222" pos:column="67"/></name></expr></argument>, <argument><expr><name><name pos:line="222" pos:column="69">ret<pos:position pos:line="222" pos:column="72"/></name><operator pos:line="222" pos:column="72">-&gt;<pos:position pos:line="222" pos:column="77"/></operator><name pos:line="222" pos:column="74">err<pos:position pos:line="222" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="222" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="79"/></expr_stmt>
    <switch pos:line="223" pos:column="5">switch <condition pos:line="223" pos:column="12">(<expr><name><name pos:line="223" pos:column="13">ret<pos:position pos:line="223" pos:column="16"/></name><operator pos:line="223" pos:column="16">-&gt;<pos:position pos:line="223" pos:column="21"/></operator><name pos:line="223" pos:column="18">status<pos:position pos:line="223" pos:column="24"/></name></name></expr>)<pos:position pos:line="223" pos:column="25"/></condition> <block pos:line="223" pos:column="26">{
    <default pos:line="224" pos:column="5">default:<pos:position pos:line="224" pos:column="13"/></default>
<cpp:ifdef pos:line="225" pos:column="1">#<cpp:directive pos:line="225" pos:column="2">ifdef<pos:position pos:line="225" pos:column="7"/></cpp:directive> <name pos:line="225" pos:column="8">DEBUG<pos:position pos:line="225" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="226" pos:column="9">OCIErrorGet<pos:position pos:line="226" pos:column="20"/></name><argument_list pos:line="226" pos:column="20">(<argument><expr><name><name pos:line="226" pos:column="21">ret<pos:position pos:line="226" pos:column="24"/></name><operator pos:line="226" pos:column="24">-&gt;<pos:position pos:line="226" pos:column="29"/></operator><name pos:line="226" pos:column="26">err<pos:position pos:line="226" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="226" pos:column="31">1<pos:position pos:line="226" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="226" pos:column="34">NULL<pos:position pos:line="226" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="226" pos:column="40">&amp;<pos:position pos:line="226" pos:column="45"/></operator><name pos:line="226" pos:column="41">errorcode<pos:position pos:line="226" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="226" pos:column="52">ret<pos:position pos:line="226" pos:column="55"/></name><operator pos:line="226" pos:column="55">-&gt;<pos:position pos:line="226" pos:column="60"/></operator><name pos:line="226" pos:column="57">buf<pos:position pos:line="226" pos:column="60"/></name></name></expr></argument>,
                    <argument><expr><sizeof pos:line="227" pos:column="21">sizeof<argument_list pos:line="227" pos:column="27">(<argument><expr><name><name pos:line="227" pos:column="28">ret<pos:position pos:line="227" pos:column="31"/></name><operator pos:line="227" pos:column="31">-&gt;<pos:position pos:line="227" pos:column="36"/></operator><name pos:line="227" pos:column="33">buf<pos:position pos:line="227" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="227" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="227" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="227" pos:column="54"/></name></expr></argument>)<pos:position pos:line="227" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="228" pos:column="9">printf<pos:position pos:line="228" pos:column="15"/></name><argument_list pos:line="228" pos:column="15">(<argument><expr><literal type="string" pos:line="228" pos:column="16">"OPEN ERROR %d (attr password): %s\n"<pos:position pos:line="228" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="228" pos:column="55">ret<pos:position pos:line="228" pos:column="58"/></name><operator pos:line="228" pos:column="58">-&gt;<pos:position pos:line="228" pos:column="63"/></operator><name pos:line="228" pos:column="60">status<pos:position pos:line="228" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="228" pos:column="68">ret<pos:position pos:line="228" pos:column="71"/></name><operator pos:line="228" pos:column="71">-&gt;<pos:position pos:line="228" pos:column="76"/></operator><name pos:line="228" pos:column="73">buf<pos:position pos:line="228" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="228" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="78"/></expr_stmt>
        <break pos:line="229" pos:column="9">break;<pos:position pos:line="229" pos:column="15"/></break>
<cpp:else pos:line="230" pos:column="1">#<cpp:directive pos:line="230" pos:column="2">else<pos:position pos:line="230" pos:column="6"/></cpp:directive></cpp:else>
        <if pos:line="231" pos:column="9">if <condition pos:line="231" pos:column="12">(<expr><name pos:line="231" pos:column="13">error<pos:position pos:line="231" pos:column="18"/></name></expr>)<pos:position pos:line="231" pos:column="19"/></condition><then pos:line="231" pos:column="19"> <block pos:line="231" pos:column="20">{
            <expr_stmt><expr><operator pos:line="232" pos:column="13">*<pos:position pos:line="232" pos:column="14"/></operator><name pos:line="232" pos:column="14">error<pos:position pos:line="232" pos:column="19"/></name> <operator pos:line="232" pos:column="20">=<pos:position pos:line="232" pos:column="21"/></operator> <call><name pos:line="232" pos:column="22">apr_pcalloc<pos:position pos:line="232" pos:column="33"/></name><argument_list pos:line="232" pos:column="33">(<argument><expr><name pos:line="232" pos:column="34">pool<pos:position pos:line="232" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="232" pos:column="40">ERR_BUF_SIZE<pos:position pos:line="232" pos:column="52"/></name></expr></argument>)<pos:position pos:line="232" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="233" pos:column="13">OCIErrorGet<pos:position pos:line="233" pos:column="24"/></name><argument_list pos:line="233" pos:column="24">(<argument><expr><name><name pos:line="233" pos:column="25">ret<pos:position pos:line="233" pos:column="28"/></name><operator pos:line="233" pos:column="28">-&gt;<pos:position pos:line="233" pos:column="33"/></operator><name pos:line="233" pos:column="30">err<pos:position pos:line="233" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="233" pos:column="35">1<pos:position pos:line="233" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="233" pos:column="38">NULL<pos:position pos:line="233" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="233" pos:column="44">&amp;<pos:position pos:line="233" pos:column="49"/></operator><name pos:line="233" pos:column="45">errorcode<pos:position pos:line="233" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="233" pos:column="56">(<pos:position pos:line="233" pos:column="57"/></operator><name pos:line="233" pos:column="57">unsigned<pos:position pos:line="233" pos:column="65"/></name> <name pos:line="233" pos:column="66">char<pos:position pos:line="233" pos:column="70"/></name><operator pos:line="233" pos:column="70">*<pos:position pos:line="233" pos:column="71"/></operator><operator pos:line="233" pos:column="71">)<pos:position pos:line="233" pos:column="72"/></operator><operator pos:line="233" pos:column="72">(<pos:position pos:line="233" pos:column="73"/></operator><operator pos:line="233" pos:column="73">*<pos:position pos:line="233" pos:column="74"/></operator><name pos:line="233" pos:column="74">error<pos:position pos:line="233" pos:column="79"/></name><operator pos:line="233" pos:column="79">)<pos:position pos:line="233" pos:column="80"/></operator></expr></argument>,
                        <argument><expr><name pos:line="234" pos:column="25">ERR_BUF_SIZE<pos:position pos:line="234" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="234" pos:column="54"/></name></expr></argument>)<pos:position pos:line="234" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="235" pos:column="10"/></block></then></if>
        <return pos:line="236" pos:column="9">return <expr><name pos:line="236" pos:column="16">NULL<pos:position pos:line="236" pos:column="20"/></name></expr>;<pos:position pos:line="236" pos:column="21"/></return>
<cpp:endif pos:line="237" pos:column="1">#<cpp:directive pos:line="237" pos:column="2">endif<pos:position pos:line="237" pos:column="7"/></cpp:directive></cpp:endif>
    <case pos:line="238" pos:column="5">case <expr><name pos:line="238" pos:column="10">OCI_SUCCESS<pos:position pos:line="238" pos:column="21"/></name></expr>:<pos:position pos:line="238" pos:column="22"/></case>
        <break pos:line="239" pos:column="9">break;<pos:position pos:line="239" pos:column="15"/></break>
    }<pos:position pos:line="240" pos:column="6"/></block></switch>
    <expr_stmt><expr><name><name pos:line="241" pos:column="5">ret<pos:position pos:line="241" pos:column="8"/></name><operator pos:line="241" pos:column="8">-&gt;<pos:position pos:line="241" pos:column="13"/></operator><name pos:line="241" pos:column="10">status<pos:position pos:line="241" pos:column="16"/></name></name> <operator pos:line="241" pos:column="17">=<pos:position pos:line="241" pos:column="18"/></operator> <call><name pos:line="241" pos:column="19">OCISessionBegin<pos:position pos:line="241" pos:column="34"/></name><argument_list pos:line="241" pos:column="34">(<argument><expr><name><name pos:line="241" pos:column="35">ret<pos:position pos:line="241" pos:column="38"/></name><operator pos:line="241" pos:column="38">-&gt;<pos:position pos:line="241" pos:column="43"/></operator><name pos:line="241" pos:column="40">svc<pos:position pos:line="241" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="241" pos:column="45">ret<pos:position pos:line="241" pos:column="48"/></name><operator pos:line="241" pos:column="48">-&gt;<pos:position pos:line="241" pos:column="53"/></operator><name pos:line="241" pos:column="50">err<pos:position pos:line="241" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="241" pos:column="55">ret<pos:position pos:line="241" pos:column="58"/></name><operator pos:line="241" pos:column="58">-&gt;<pos:position pos:line="241" pos:column="63"/></operator><name pos:line="241" pos:column="60">auth<pos:position pos:line="241" pos:column="64"/></name></name></expr></argument>,
                             <argument><expr><name pos:line="242" pos:column="30">OCI_CRED_RDBMS<pos:position pos:line="242" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="46">OCI_DEFAULT<pos:position pos:line="242" pos:column="57"/></name></expr></argument>)<pos:position pos:line="242" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="59"/></expr_stmt>
    <switch pos:line="243" pos:column="5">switch <condition pos:line="243" pos:column="12">(<expr><name><name pos:line="243" pos:column="13">ret<pos:position pos:line="243" pos:column="16"/></name><operator pos:line="243" pos:column="16">-&gt;<pos:position pos:line="243" pos:column="21"/></operator><name pos:line="243" pos:column="18">status<pos:position pos:line="243" pos:column="24"/></name></name></expr>)<pos:position pos:line="243" pos:column="25"/></condition> <block pos:line="243" pos:column="26">{
    <default pos:line="244" pos:column="5">default:<pos:position pos:line="244" pos:column="13"/></default>
<cpp:ifdef pos:line="245" pos:column="1">#<cpp:directive pos:line="245" pos:column="2">ifdef<pos:position pos:line="245" pos:column="7"/></cpp:directive> <name pos:line="245" pos:column="8">DEBUG<pos:position pos:line="245" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="246" pos:column="9">OCIErrorGet<pos:position pos:line="246" pos:column="20"/></name><argument_list pos:line="246" pos:column="20">(<argument><expr><name><name pos:line="246" pos:column="21">ret<pos:position pos:line="246" pos:column="24"/></name><operator pos:line="246" pos:column="24">-&gt;<pos:position pos:line="246" pos:column="29"/></operator><name pos:line="246" pos:column="26">err<pos:position pos:line="246" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="246" pos:column="31">1<pos:position pos:line="246" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="246" pos:column="34">NULL<pos:position pos:line="246" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="246" pos:column="40">&amp;<pos:position pos:line="246" pos:column="45"/></operator><name pos:line="246" pos:column="41">errorcode<pos:position pos:line="246" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="246" pos:column="52">ret<pos:position pos:line="246" pos:column="55"/></name><operator pos:line="246" pos:column="55">-&gt;<pos:position pos:line="246" pos:column="60"/></operator><name pos:line="246" pos:column="57">buf<pos:position pos:line="246" pos:column="60"/></name></name></expr></argument>,
                    <argument><expr><sizeof pos:line="247" pos:column="21">sizeof<argument_list pos:line="247" pos:column="27">(<argument><expr><name><name pos:line="247" pos:column="28">ret<pos:position pos:line="247" pos:column="31"/></name><operator pos:line="247" pos:column="31">-&gt;<pos:position pos:line="247" pos:column="36"/></operator><name pos:line="247" pos:column="33">buf<pos:position pos:line="247" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="247" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="247" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="247" pos:column="54"/></name></expr></argument>)<pos:position pos:line="247" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="248" pos:column="9">printf<pos:position pos:line="248" pos:column="15"/></name><argument_list pos:line="248" pos:column="15">(<argument><expr><literal type="string" pos:line="248" pos:column="16">"OPEN ERROR %d (session begin): %s\n"<pos:position pos:line="248" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="248" pos:column="55">ret<pos:position pos:line="248" pos:column="58"/></name><operator pos:line="248" pos:column="58">-&gt;<pos:position pos:line="248" pos:column="63"/></operator><name pos:line="248" pos:column="60">status<pos:position pos:line="248" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="248" pos:column="68">ret<pos:position pos:line="248" pos:column="71"/></name><operator pos:line="248" pos:column="71">-&gt;<pos:position pos:line="248" pos:column="76"/></operator><name pos:line="248" pos:column="73">buf<pos:position pos:line="248" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="248" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="78"/></expr_stmt>
        <break pos:line="249" pos:column="9">break;<pos:position pos:line="249" pos:column="15"/></break>
<cpp:else pos:line="250" pos:column="1">#<cpp:directive pos:line="250" pos:column="2">else<pos:position pos:line="250" pos:column="6"/></cpp:directive></cpp:else>
        <if pos:line="251" pos:column="9">if <condition pos:line="251" pos:column="12">(<expr><name pos:line="251" pos:column="13">error<pos:position pos:line="251" pos:column="18"/></name></expr>)<pos:position pos:line="251" pos:column="19"/></condition><then pos:line="251" pos:column="19"> <block pos:line="251" pos:column="20">{
            <expr_stmt><expr><operator pos:line="252" pos:column="13">*<pos:position pos:line="252" pos:column="14"/></operator><name pos:line="252" pos:column="14">error<pos:position pos:line="252" pos:column="19"/></name> <operator pos:line="252" pos:column="20">=<pos:position pos:line="252" pos:column="21"/></operator> <call><name pos:line="252" pos:column="22">apr_pcalloc<pos:position pos:line="252" pos:column="33"/></name><argument_list pos:line="252" pos:column="33">(<argument><expr><name pos:line="252" pos:column="34">pool<pos:position pos:line="252" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="252" pos:column="40">ERR_BUF_SIZE<pos:position pos:line="252" pos:column="52"/></name></expr></argument>)<pos:position pos:line="252" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="253" pos:column="13">OCIErrorGet<pos:position pos:line="253" pos:column="24"/></name><argument_list pos:line="253" pos:column="24">(<argument><expr><name><name pos:line="253" pos:column="25">ret<pos:position pos:line="253" pos:column="28"/></name><operator pos:line="253" pos:column="28">-&gt;<pos:position pos:line="253" pos:column="33"/></operator><name pos:line="253" pos:column="30">err<pos:position pos:line="253" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="253" pos:column="35">1<pos:position pos:line="253" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="253" pos:column="38">NULL<pos:position pos:line="253" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="253" pos:column="44">&amp;<pos:position pos:line="253" pos:column="49"/></operator><name pos:line="253" pos:column="45">errorcode<pos:position pos:line="253" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="253" pos:column="56">(<pos:position pos:line="253" pos:column="57"/></operator><name pos:line="253" pos:column="57">unsigned<pos:position pos:line="253" pos:column="65"/></name> <name pos:line="253" pos:column="66">char<pos:position pos:line="253" pos:column="70"/></name><operator pos:line="253" pos:column="70">*<pos:position pos:line="253" pos:column="71"/></operator><operator pos:line="253" pos:column="71">)<pos:position pos:line="253" pos:column="72"/></operator><operator pos:line="253" pos:column="72">(<pos:position pos:line="253" pos:column="73"/></operator><operator pos:line="253" pos:column="73">*<pos:position pos:line="253" pos:column="74"/></operator><name pos:line="253" pos:column="74">error<pos:position pos:line="253" pos:column="79"/></name><operator pos:line="253" pos:column="79">)<pos:position pos:line="253" pos:column="80"/></operator></expr></argument>,
                        <argument><expr><name pos:line="254" pos:column="25">ERR_BUF_SIZE<pos:position pos:line="254" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="254" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="254" pos:column="54"/></name></expr></argument>)<pos:position pos:line="254" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="255" pos:column="10"/></block></then></if>
        <return pos:line="256" pos:column="9">return <expr><name pos:line="256" pos:column="16">NULL<pos:position pos:line="256" pos:column="20"/></name></expr>;<pos:position pos:line="256" pos:column="21"/></return>
<cpp:endif pos:line="257" pos:column="1">#<cpp:directive pos:line="257" pos:column="2">endif<pos:position pos:line="257" pos:column="7"/></cpp:directive></cpp:endif>
    <case pos:line="258" pos:column="5">case <expr><name pos:line="258" pos:column="10">OCI_SUCCESS<pos:position pos:line="258" pos:column="21"/></name></expr>:<pos:position pos:line="258" pos:column="22"/></case>
        <break pos:line="259" pos:column="9">break;<pos:position pos:line="259" pos:column="15"/></break>
    }<pos:position pos:line="260" pos:column="6"/></block></switch>
    <expr_stmt><expr><name><name pos:line="261" pos:column="5">ret<pos:position pos:line="261" pos:column="8"/></name><operator pos:line="261" pos:column="8">-&gt;<pos:position pos:line="261" pos:column="13"/></operator><name pos:line="261" pos:column="10">status<pos:position pos:line="261" pos:column="16"/></name></name> <operator pos:line="261" pos:column="17">=<pos:position pos:line="261" pos:column="18"/></operator> <call><name pos:line="261" pos:column="19">OCIAttrSet<pos:position pos:line="261" pos:column="29"/></name><argument_list pos:line="261" pos:column="29">(<argument><expr><name><name pos:line="261" pos:column="30">ret<pos:position pos:line="261" pos:column="33"/></name><operator pos:line="261" pos:column="33">-&gt;<pos:position pos:line="261" pos:column="38"/></operator><name pos:line="261" pos:column="35">svc<pos:position pos:line="261" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="40">OCI_HTYPE_SVCCTX<pos:position pos:line="261" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="261" pos:column="58">ret<pos:position pos:line="261" pos:column="61"/></name><operator pos:line="261" pos:column="61">-&gt;<pos:position pos:line="261" pos:column="66"/></operator><name pos:line="261" pos:column="63">auth<pos:position pos:line="261" pos:column="67"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="261" pos:column="69">0<pos:position pos:line="261" pos:column="70"/></literal></expr></argument>,
                        <argument><expr><name pos:line="262" pos:column="25">OCI_ATTR_SESSION<pos:position pos:line="262" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="262" pos:column="43">ret<pos:position pos:line="262" pos:column="46"/></name><operator pos:line="262" pos:column="46">-&gt;<pos:position pos:line="262" pos:column="51"/></operator><name pos:line="262" pos:column="48">err<pos:position pos:line="262" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="262" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="53"/></expr_stmt>
    <switch pos:line="263" pos:column="5">switch <condition pos:line="263" pos:column="12">(<expr><name><name pos:line="263" pos:column="13">ret<pos:position pos:line="263" pos:column="16"/></name><operator pos:line="263" pos:column="16">-&gt;<pos:position pos:line="263" pos:column="21"/></operator><name pos:line="263" pos:column="18">status<pos:position pos:line="263" pos:column="24"/></name></name></expr>)<pos:position pos:line="263" pos:column="25"/></condition> <block pos:line="263" pos:column="26">{
    <default pos:line="264" pos:column="5">default:<pos:position pos:line="264" pos:column="13"/></default>
<cpp:ifdef pos:line="265" pos:column="1">#<cpp:directive pos:line="265" pos:column="2">ifdef<pos:position pos:line="265" pos:column="7"/></cpp:directive> <name pos:line="265" pos:column="8">DEBUG<pos:position pos:line="265" pos:column="13"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="266" pos:column="9">OCIErrorGet<pos:position pos:line="266" pos:column="20"/></name><argument_list pos:line="266" pos:column="20">(<argument><expr><name><name pos:line="266" pos:column="21">ret<pos:position pos:line="266" pos:column="24"/></name><operator pos:line="266" pos:column="24">-&gt;<pos:position pos:line="266" pos:column="29"/></operator><name pos:line="266" pos:column="26">err<pos:position pos:line="266" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="266" pos:column="31">1<pos:position pos:line="266" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="266" pos:column="34">NULL<pos:position pos:line="266" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="266" pos:column="40">&amp;<pos:position pos:line="266" pos:column="45"/></operator><name pos:line="266" pos:column="41">errorcode<pos:position pos:line="266" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="266" pos:column="52">ret<pos:position pos:line="266" pos:column="55"/></name><operator pos:line="266" pos:column="55">-&gt;<pos:position pos:line="266" pos:column="60"/></operator><name pos:line="266" pos:column="57">buf<pos:position pos:line="266" pos:column="60"/></name></name></expr></argument>,
                    <argument><expr><sizeof pos:line="267" pos:column="21">sizeof<argument_list pos:line="267" pos:column="27">(<argument><expr><name><name pos:line="267" pos:column="28">ret<pos:position pos:line="267" pos:column="31"/></name><operator pos:line="267" pos:column="31">-&gt;<pos:position pos:line="267" pos:column="36"/></operator><name pos:line="267" pos:column="33">buf<pos:position pos:line="267" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="267" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="267" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="267" pos:column="54"/></name></expr></argument>)<pos:position pos:line="267" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="268" pos:column="9">printf<pos:position pos:line="268" pos:column="15"/></name><argument_list pos:line="268" pos:column="15">(<argument><expr><literal type="string" pos:line="268" pos:column="16">"OPEN ERROR %d (attr session): %s\n"<pos:position pos:line="268" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="268" pos:column="54">ret<pos:position pos:line="268" pos:column="57"/></name><operator pos:line="268" pos:column="57">-&gt;<pos:position pos:line="268" pos:column="62"/></operator><name pos:line="268" pos:column="59">status<pos:position pos:line="268" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="268" pos:column="67">ret<pos:position pos:line="268" pos:column="70"/></name><operator pos:line="268" pos:column="70">-&gt;<pos:position pos:line="268" pos:column="75"/></operator><name pos:line="268" pos:column="72">buf<pos:position pos:line="268" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="268" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="77"/></expr_stmt>
<cpp:else pos:line="269" pos:column="1">#<cpp:directive pos:line="269" pos:column="2">else<pos:position pos:line="269" pos:column="6"/></cpp:directive></cpp:else>
        <if pos:line="270" pos:column="9">if <condition pos:line="270" pos:column="12">(<expr><name pos:line="270" pos:column="13">error<pos:position pos:line="270" pos:column="18"/></name></expr>)<pos:position pos:line="270" pos:column="19"/></condition><then pos:line="270" pos:column="19"> <block pos:line="270" pos:column="20">{
            <expr_stmt><expr><operator pos:line="271" pos:column="13">*<pos:position pos:line="271" pos:column="14"/></operator><name pos:line="271" pos:column="14">error<pos:position pos:line="271" pos:column="19"/></name> <operator pos:line="271" pos:column="20">=<pos:position pos:line="271" pos:column="21"/></operator> <call><name pos:line="271" pos:column="22">apr_pcalloc<pos:position pos:line="271" pos:column="33"/></name><argument_list pos:line="271" pos:column="33">(<argument><expr><name pos:line="271" pos:column="34">pool<pos:position pos:line="271" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="271" pos:column="40">ERR_BUF_SIZE<pos:position pos:line="271" pos:column="52"/></name></expr></argument>)<pos:position pos:line="271" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="272" pos:column="13">OCIErrorGet<pos:position pos:line="272" pos:column="24"/></name><argument_list pos:line="272" pos:column="24">(<argument><expr><name><name pos:line="272" pos:column="25">ret<pos:position pos:line="272" pos:column="28"/></name><operator pos:line="272" pos:column="28">-&gt;<pos:position pos:line="272" pos:column="33"/></operator><name pos:line="272" pos:column="30">err<pos:position pos:line="272" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="272" pos:column="35">1<pos:position pos:line="272" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="272" pos:column="38">NULL<pos:position pos:line="272" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="272" pos:column="44">&amp;<pos:position pos:line="272" pos:column="49"/></operator><name pos:line="272" pos:column="45">errorcode<pos:position pos:line="272" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="272" pos:column="56">(<pos:position pos:line="272" pos:column="57"/></operator><name pos:line="272" pos:column="57">unsigned<pos:position pos:line="272" pos:column="65"/></name> <name pos:line="272" pos:column="66">char<pos:position pos:line="272" pos:column="70"/></name><operator pos:line="272" pos:column="70">*<pos:position pos:line="272" pos:column="71"/></operator><operator pos:line="272" pos:column="71">)<pos:position pos:line="272" pos:column="72"/></operator><operator pos:line="272" pos:column="72">(<pos:position pos:line="272" pos:column="73"/></operator><operator pos:line="272" pos:column="73">*<pos:position pos:line="272" pos:column="74"/></operator><name pos:line="272" pos:column="74">error<pos:position pos:line="272" pos:column="79"/></name><operator pos:line="272" pos:column="79">)<pos:position pos:line="272" pos:column="80"/></operator></expr></argument>,
                        <argument><expr><name pos:line="273" pos:column="25">ERR_BUF_SIZE<pos:position pos:line="273" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="273" pos:column="39">OCI_HTYPE_ERROR<pos:position pos:line="273" pos:column="54"/></name></expr></argument>)<pos:position pos:line="273" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="274" pos:column="10"/></block></then></if>
        <return pos:line="275" pos:column="9">return <expr><name pos:line="275" pos:column="16">NULL<pos:position pos:line="275" pos:column="20"/></name></expr>;<pos:position pos:line="275" pos:column="21"/></return>
<cpp:endif pos:line="276" pos:column="1">#<cpp:directive pos:line="276" pos:column="2">endif<pos:position pos:line="276" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="277" pos:column="9">break;<pos:position pos:line="277" pos:column="15"/></break>
    <case pos:line="278" pos:column="5">case <expr><name pos:line="278" pos:column="10">OCI_SUCCESS<pos:position pos:line="278" pos:column="21"/></name></expr>:<pos:position pos:line="278" pos:column="22"/></case>
        <break pos:line="279" pos:column="9">break;<pos:position pos:line="279" pos:column="15"/></break>
    }<pos:position pos:line="280" pos:column="6"/></block></switch>
<cpp:endif pos:line="281" pos:column="1">#<cpp:directive pos:line="281" pos:column="2">endif<pos:position pos:line="281" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="283" pos:column="5">if<condition pos:line="283" pos:column="7">(<expr><call><name pos:line="283" pos:column="8">dbd_oracle_prepare<pos:position pos:line="283" pos:column="26"/></name><argument_list pos:line="283" pos:column="26">(<argument><expr><name pos:line="283" pos:column="27">pool<pos:position pos:line="283" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="33">ret<pos:position pos:line="283" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="38">CHECK_CONN_QUERY<pos:position pos:line="283" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="56">NULL<pos:position pos:line="283" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="283" pos:column="62">0<pos:position pos:line="283" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="283" pos:column="65">0<pos:position pos:line="283" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="283" pos:column="68">NULL<pos:position pos:line="283" pos:column="72"/></name></expr></argument>,
                          <argument><expr><operator pos:line="284" pos:column="27">&amp;<pos:position pos:line="284" pos:column="32"/></operator><name><name pos:line="284" pos:column="28">ret<pos:position pos:line="284" pos:column="31"/></name><operator pos:line="284" pos:column="31">-&gt;<pos:position pos:line="284" pos:column="36"/></operator><name pos:line="284" pos:column="33">check_conn_stmt<pos:position pos:line="284" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="284" pos:column="49"/></argument_list></call> <operator pos:line="284" pos:column="50">!=<pos:position pos:line="284" pos:column="52"/></operator> <literal type="number" pos:line="284" pos:column="53">0<pos:position pos:line="284" pos:column="54"/></literal></expr>)<pos:position pos:line="284" pos:column="55"/></condition><then pos:line="284" pos:column="55"> <block pos:line="284" pos:column="56">{
        <return pos:line="285" pos:column="9">return <expr><name pos:line="285" pos:column="16">NULL<pos:position pos:line="285" pos:column="20"/></name></expr>;<pos:position pos:line="285" pos:column="21"/></return>
    }<pos:position pos:line="286" pos:column="6"/></block></then></if>

    <return pos:line="288" pos:column="5">return <expr><name pos:line="288" pos:column="12">ret<pos:position pos:line="288" pos:column="15"/></name></expr>;<pos:position pos:line="288" pos:column="16"/></return>
}<pos:position pos:line="289" pos:column="2"/></block></function></unit>

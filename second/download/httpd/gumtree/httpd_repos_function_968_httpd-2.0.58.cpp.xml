<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_968_httpd-2.0.58.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">cmd_rewritecond_parseflagfield<pos:position pos:line="1" pos:column="50"/></name><parameter_list pos:line="1" pos:column="50">(<parameter><decl><type><name pos:line="1" pos:column="51">apr_pool_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">p<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
                                                  <parameter><decl><type><name pos:line="2" pos:column="51">rewritecond_entry<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type><name pos:line="2" pos:column="70">cfg<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>,
                                                  <parameter><decl><type><name pos:line="3" pos:column="51">char<pos:position pos:line="3" pos:column="55"/></name> <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier></type><name pos:line="3" pos:column="57">str<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="61"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">cp<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">cp1<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">cp2<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">cp3<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">key<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">val<pos:position pos:line="10" pos:column="14"/></name></decl>;<pos:position pos:line="10" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">err<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">str<pos:position pos:line="13" pos:column="12"/></name><index pos:line="13" pos:column="12">[<expr><literal type="number" pos:line="13" pos:column="13">0<pos:position pos:line="13" pos:column="14"/></literal></expr>]<pos:position pos:line="13" pos:column="15"/></index></name> <operator pos:line="13" pos:column="16">!=<pos:position pos:line="13" pos:column="18"/></operator> <literal type="char" pos:line="13" pos:column="19">'['<pos:position pos:line="13" pos:column="22"/></literal> <operator pos:line="13" pos:column="23">||<pos:position pos:line="13" pos:column="25"/></operator> <name><name pos:line="13" pos:column="26">str<pos:position pos:line="13" pos:column="29"/></name><index pos:line="13" pos:column="29">[<expr><call><name pos:line="13" pos:column="30">strlen<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">str<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call><operator pos:line="13" pos:column="41">-<pos:position pos:line="13" pos:column="42"/></operator><literal type="number" pos:line="13" pos:column="42">1<pos:position pos:line="13" pos:column="43"/></literal></expr>]<pos:position pos:line="13" pos:column="44"/></index></name> <operator pos:line="13" pos:column="45">!=<pos:position pos:line="13" pos:column="47"/></operator> <literal type="char" pos:line="13" pos:column="48">']'<pos:position pos:line="13" pos:column="51"/></literal></expr>)<pos:position pos:line="13" pos:column="52"/></condition><then pos:line="13" pos:column="52"> <block pos:line="13" pos:column="53">{
        <return pos:line="14" pos:column="9">return <expr><literal type="string" pos:line="14" pos:column="16">"RewriteCond: bad flag delimiters"<pos:position pos:line="14" pos:column="50"/></literal></expr>;<pos:position pos:line="14" pos:column="51"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">cp<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <name pos:line="17" pos:column="10">str<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">+<pos:position pos:line="17" pos:column="14"/></operator><literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal></expr>;<pos:position pos:line="17" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">str<pos:position pos:line="18" pos:column="8"/></name><index pos:line="18" pos:column="8">[<expr><call><name pos:line="18" pos:column="9">strlen<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">str<pos:position pos:line="18" pos:column="19"/></name></expr></argument>)<pos:position pos:line="18" pos:column="20"/></argument_list></call><operator pos:line="18" pos:column="20">-<pos:position pos:line="18" pos:column="21"/></operator><literal type="number" pos:line="18" pos:column="21">1<pos:position pos:line="18" pos:column="22"/></literal></expr>]<pos:position pos:line="18" pos:column="23"/></index></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <literal type="char" pos:line="18" pos:column="26">','<pos:position pos:line="18" pos:column="29"/></literal></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt> <comment type="block" pos:line="18" pos:column="31">/* for simpler parsing */</comment>
    <for pos:line="19" pos:column="5">for <control pos:line="19" pos:column="9">( <init pos:line="19" pos:column="11">;<pos:position pos:line="19" pos:column="12"/></init> <condition><expr><operator pos:line="19" pos:column="13">*<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">cp<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">!=<pos:position pos:line="19" pos:column="19"/></operator> <literal type="char" pos:line="19" pos:column="20">'\0'<pos:position pos:line="19" pos:column="24"/></literal></expr>;<pos:position pos:line="19" pos:column="25"/></condition> <incr/>)<pos:position pos:line="19" pos:column="27"/></control> <block pos:line="19" pos:column="28">{
        <comment type="block" pos:line="20" pos:column="9">/* skip whitespaces */</comment>
        <for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">( <init pos:line="21" pos:column="15">;<pos:position pos:line="21" pos:column="16"/></init> <condition><expr><operator pos:line="21" pos:column="17">(<pos:position pos:line="21" pos:column="18"/></operator><operator pos:line="21" pos:column="18">*<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">cp<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">==<pos:position pos:line="21" pos:column="24"/></operator> <literal type="char" pos:line="21" pos:column="25">' '<pos:position pos:line="21" pos:column="28"/></literal> <operator pos:line="21" pos:column="29">||<pos:position pos:line="21" pos:column="31"/></operator> <operator pos:line="21" pos:column="32">*<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="33">cp<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">==<pos:position pos:line="21" pos:column="38"/></operator> <literal type="char" pos:line="21" pos:column="39">'\t'<pos:position pos:line="21" pos:column="43"/></literal><operator pos:line="21" pos:column="43">)<pos:position pos:line="21" pos:column="44"/></operator> <operator pos:line="21" pos:column="45">&amp;&amp;<pos:position pos:line="21" pos:column="55"/></operator> <operator pos:line="21" pos:column="48">*<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="49">cp<pos:position pos:line="21" pos:column="51"/></name> <operator pos:line="21" pos:column="52">!=<pos:position pos:line="21" pos:column="54"/></operator> <literal type="char" pos:line="21" pos:column="55">'\0'<pos:position pos:line="21" pos:column="59"/></literal></expr>;<pos:position pos:line="21" pos:column="60"/></condition> <incr><expr><name pos:line="21" pos:column="61">cp<pos:position pos:line="21" pos:column="63"/></name><operator pos:line="21" pos:column="63">++<pos:position pos:line="21" pos:column="65"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="66"/></control>
            <block type="pseudo"><empty_stmt pos:line="22" pos:column="13">;<pos:position pos:line="22" pos:column="14"/></empty_stmt></block></for>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">*<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">cp<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">==<pos:position pos:line="23" pos:column="19"/></operator> <literal type="char" pos:line="23" pos:column="20">'\0'<pos:position pos:line="23" pos:column="24"/></literal></expr>)<pos:position pos:line="23" pos:column="25"/></condition><then pos:line="23" pos:column="25"> <block pos:line="23" pos:column="26">{
            <break pos:line="24" pos:column="13">break;<pos:position pos:line="24" pos:column="19"/></break>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="26" pos:column="9">cp1<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <name pos:line="26" pos:column="15">cp<pos:position pos:line="26" pos:column="17"/></name></expr>;<pos:position pos:line="26" pos:column="18"/></expr_stmt>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">(<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">cp2<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <call><name pos:line="27" pos:column="20">strchr<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><name pos:line="27" pos:column="27">cp<pos:position pos:line="27" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="27" pos:column="31">','<pos:position pos:line="27" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call><operator pos:line="27" pos:column="35">)<pos:position pos:line="27" pos:column="36"/></operator> <operator pos:line="27" pos:column="37">!=<pos:position pos:line="27" pos:column="39"/></operator> <name pos:line="27" pos:column="40">NULL<pos:position pos:line="27" pos:column="44"/></name></expr>)<pos:position pos:line="27" pos:column="45"/></condition><then pos:line="27" pos:column="45"> <block pos:line="27" pos:column="46">{
            <expr_stmt><expr><name pos:line="28" pos:column="13">cp<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <name pos:line="28" pos:column="18">cp2<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">+<pos:position pos:line="28" pos:column="22"/></operator><literal type="number" pos:line="28" pos:column="22">1<pos:position pos:line="28" pos:column="23"/></literal></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
            <for pos:line="29" pos:column="13">for <control pos:line="29" pos:column="17">( <init pos:line="29" pos:column="19">;<pos:position pos:line="29" pos:column="20"/></init> <condition><expr><operator pos:line="29" pos:column="21">(<pos:position pos:line="29" pos:column="22"/></operator><operator pos:line="29" pos:column="22">*<pos:position pos:line="29" pos:column="23"/></operator><operator pos:line="29" pos:column="23">(<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">cp2<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-<pos:position pos:line="29" pos:column="28"/></operator><literal type="number" pos:line="29" pos:column="28">1<pos:position pos:line="29" pos:column="29"/></literal><operator pos:line="29" pos:column="29">)<pos:position pos:line="29" pos:column="30"/></operator> <operator pos:line="29" pos:column="31">==<pos:position pos:line="29" pos:column="33"/></operator> <literal type="char" pos:line="29" pos:column="34">' '<pos:position pos:line="29" pos:column="37"/></literal> <operator pos:line="29" pos:column="38">||<pos:position pos:line="29" pos:column="40"/></operator> <operator pos:line="29" pos:column="41">*<pos:position pos:line="29" pos:column="42"/></operator><operator pos:line="29" pos:column="42">(<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="43">cp2<pos:position pos:line="29" pos:column="46"/></name><operator pos:line="29" pos:column="46">-<pos:position pos:line="29" pos:column="47"/></operator><literal type="number" pos:line="29" pos:column="47">1<pos:position pos:line="29" pos:column="48"/></literal><operator pos:line="29" pos:column="48">)<pos:position pos:line="29" pos:column="49"/></operator> <operator pos:line="29" pos:column="50">==<pos:position pos:line="29" pos:column="52"/></operator> <literal type="char" pos:line="29" pos:column="53">'\t'<pos:position pos:line="29" pos:column="57"/></literal><operator pos:line="29" pos:column="57">)<pos:position pos:line="29" pos:column="58"/></operator></expr>;<pos:position pos:line="29" pos:column="59"/></condition> <incr><expr><name pos:line="29" pos:column="60">cp2<pos:position pos:line="29" pos:column="63"/></name><operator pos:line="29" pos:column="63">--<pos:position pos:line="29" pos:column="65"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="66"/></control>
                <block type="pseudo"><empty_stmt pos:line="30" pos:column="17">;<pos:position pos:line="30" pos:column="18"/></empty_stmt></block></for>
            <expr_stmt><expr><operator pos:line="31" pos:column="13">*<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">cp2<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <literal type="char" pos:line="31" pos:column="20">'\0'<pos:position pos:line="31" pos:column="24"/></literal></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><operator pos:line="32" pos:column="17">(<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">cp3<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <call><name pos:line="32" pos:column="24">strchr<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">cp1<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="32" pos:column="36">'='<pos:position pos:line="32" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call><operator pos:line="32" pos:column="40">)<pos:position pos:line="32" pos:column="41"/></operator> <operator pos:line="32" pos:column="42">!=<pos:position pos:line="32" pos:column="44"/></operator> <name pos:line="32" pos:column="45">NULL<pos:position pos:line="32" pos:column="49"/></name></expr>)<pos:position pos:line="32" pos:column="50"/></condition><then pos:line="32" pos:column="50"> <block pos:line="32" pos:column="51">{
                <expr_stmt><expr><operator pos:line="33" pos:column="17">*<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">cp3<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <literal type="char" pos:line="33" pos:column="24">'\0'<pos:position pos:line="33" pos:column="28"/></literal></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><name pos:line="34" pos:column="17">key<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <name pos:line="34" pos:column="23">cp1<pos:position pos:line="34" pos:column="26"/></name></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
                <expr_stmt><expr><name pos:line="35" pos:column="17">val<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <name pos:line="35" pos:column="23">cp3<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">+<pos:position pos:line="35" pos:column="27"/></operator><literal type="number" pos:line="35" pos:column="27">1<pos:position pos:line="35" pos:column="28"/></literal></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="36" pos:column="14"/></block></then>
            <else pos:line="37" pos:column="13">else <block pos:line="37" pos:column="18">{
                <expr_stmt><expr><name pos:line="38" pos:column="17">key<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="23">cp1<pos:position pos:line="38" pos:column="26"/></name></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
                <expr_stmt><expr><name pos:line="39" pos:column="17">val<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <literal type="string" pos:line="39" pos:column="23">""<pos:position pos:line="39" pos:column="25"/></literal></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="40" pos:column="14"/></block></else></if>
            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><operator pos:line="41" pos:column="17">(<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">err<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <call><name pos:line="41" pos:column="24">cmd_rewritecond_setflag<pos:position pos:line="41" pos:column="47"/></name><argument_list pos:line="41" pos:column="47">(<argument><expr><name pos:line="41" pos:column="48">p<pos:position pos:line="41" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="51">cfg<pos:position pos:line="41" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="56">key<pos:position pos:line="41" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="61">val<pos:position pos:line="41" pos:column="64"/></name></expr></argument>)<pos:position pos:line="41" pos:column="65"/></argument_list></call><operator pos:line="41" pos:column="65">)<pos:position pos:line="41" pos:column="66"/></operator> <operator pos:line="41" pos:column="67">!=<pos:position pos:line="41" pos:column="69"/></operator> <name pos:line="41" pos:column="70">NULL<pos:position pos:line="41" pos:column="74"/></name></expr>)<pos:position pos:line="41" pos:column="75"/></condition><then pos:line="41" pos:column="75"> <block pos:line="41" pos:column="76">{
                <return pos:line="42" pos:column="17">return <expr><name pos:line="42" pos:column="24">err<pos:position pos:line="42" pos:column="27"/></name></expr>;<pos:position pos:line="42" pos:column="28"/></return>
            }<pos:position pos:line="43" pos:column="14"/></block></then></if>
        }<pos:position pos:line="44" pos:column="10"/></block></then>
        <else pos:line="45" pos:column="9">else <block pos:line="45" pos:column="14">{
            <break pos:line="46" pos:column="13">break;<pos:position pos:line="46" pos:column="19"/></break>
        }<pos:position pos:line="47" pos:column="10"/></block></else></if>
    }<pos:position pos:line="48" pos:column="6"/></block></for>

    <return pos:line="50" pos:column="5">return <expr><name pos:line="50" pos:column="12">NULL<pos:position pos:line="50" pos:column="16"/></name></expr>;<pos:position pos:line="50" pos:column="17"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

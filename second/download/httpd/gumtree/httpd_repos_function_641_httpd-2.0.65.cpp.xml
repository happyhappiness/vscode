<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_641_httpd-2.0.65.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">table_delete<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">table_t<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type> <name pos:line="1" pos:column="28">table_p<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>,
                 <parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">void<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">key_buf<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">key_size<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
                 <parameter><decl><type><name pos:line="3" pos:column="18">void<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier><modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">data_buf_p<pos:position pos:line="3" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="37">int<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type><name pos:line="3" pos:column="42">data_size_p<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="54"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">bucket<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">int<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">ksize<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">char<pos:position pos:line="7" pos:column="18"/></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">data_copy_p<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">table_entry_t<pos:position pos:line="8" pos:column="18"/></name> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="20">entry_p<pos:position pos:line="8" pos:column="27"/></name></decl>, <modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="30">last_p<pos:position pos:line="8" pos:column="36"/></name></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">table_p<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">==<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">NULL<pos:position pos:line="10" pos:column="24"/></name></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">TABLE_ERROR_ARG_NULL<pos:position pos:line="11" pos:column="36"/></name></expr>;<pos:position pos:line="11" pos:column="37"/></return></block></then></if>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">table_p<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">ta_magic<pos:position pos:line="12" pos:column="26"/></name></name> <operator pos:line="12" pos:column="27">!=<pos:position pos:line="12" pos:column="29"/></operator> <name pos:line="12" pos:column="30">TABLE_MAGIC<pos:position pos:line="12" pos:column="41"/></name></expr>)<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42">
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">TABLE_ERROR_PNT<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></return></block></then></if>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">key_buf<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">==<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">NULL<pos:position pos:line="14" pos:column="24"/></name></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25">
        <block type="pseudo"><return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">TABLE_ERROR_ARG_NULL<pos:position pos:line="15" pos:column="36"/></name></expr>;<pos:position pos:line="15" pos:column="37"/></return></block></then></if>
    <comment type="block" pos:line="16" pos:column="5">/* get the key size */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">key_size<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">&lt;<pos:position pos:line="17" pos:column="22"/></operator> <literal type="number" pos:line="17" pos:column="20">0<pos:position pos:line="17" pos:column="21"/></literal></expr>)<pos:position pos:line="17" pos:column="22"/></condition><then pos:line="17" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="9">ksize<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <call><name pos:line="18" pos:column="17">strlen<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><operator pos:line="18" pos:column="24">(<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">char<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">*<pos:position pos:line="18" pos:column="31"/></operator><operator pos:line="18" pos:column="31">)<pos:position pos:line="18" pos:column="32"/></operator> <name pos:line="18" pos:column="33">key_buf<pos:position pos:line="18" pos:column="40"/></name></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call> <operator pos:line="18" pos:column="42">+<pos:position pos:line="18" pos:column="43"/></operator> <sizeof pos:line="18" pos:column="44">sizeof<argument_list pos:line="18" pos:column="50">(<argument><expr><name pos:line="18" pos:column="51">char<pos:position pos:line="18" pos:column="55"/></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></sizeof></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt></block></then>
    <else pos:line="19" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="9">ksize<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">key_size<pos:position pos:line="20" pos:column="25"/></name></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt></block></else></if>
    <comment type="block" pos:line="21" pos:column="5">/* find our bucket */</comment>
    <expr_stmt><expr><name pos:line="22" pos:column="5">bucket<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">hash<pos:position pos:line="22" pos:column="18"/></name><argument_list pos:line="22" pos:column="18">(<argument><expr><name pos:line="22" pos:column="19">key_buf<pos:position pos:line="22" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="28">ksize<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="35">0<pos:position pos:line="22" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call> <operator pos:line="22" pos:column="38">%<pos:position pos:line="22" pos:column="39"/></operator> <name><name pos:line="22" pos:column="40">table_p<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">-&gt;<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="49">ta_bucket_n<pos:position pos:line="22" pos:column="60"/></name></name></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt>

    <comment type="block" pos:line="24" pos:column="5">/* look for the entry in this bucket, only check keys of the same size */</comment>
    <for pos:line="25" pos:column="5">for <control pos:line="25" pos:column="9">(<init><expr><name pos:line="25" pos:column="10">last_p<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">NULL<pos:position pos:line="25" pos:column="23"/></name></expr><operator pos:line="25" pos:column="23">,<pos:position pos:line="25" pos:column="24"/></operator> <expr><name pos:line="25" pos:column="25">entry_p<pos:position pos:line="25" pos:column="32"/></name> <operator pos:line="25" pos:column="33">=<pos:position pos:line="25" pos:column="34"/></operator> <name><name pos:line="25" pos:column="35">table_p<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">-&gt;<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="44">ta_buckets<pos:position pos:line="25" pos:column="54"/></name><index pos:line="25" pos:column="54">[<expr><name pos:line="25" pos:column="55">bucket<pos:position pos:line="25" pos:column="61"/></name></expr>]<pos:position pos:line="25" pos:column="62"/></index></name></expr>;<pos:position pos:line="25" pos:column="63"/></init> <condition><expr><name pos:line="25" pos:column="64">entry_p<pos:position pos:line="25" pos:column="71"/></name> <operator pos:line="25" pos:column="72">!=<pos:position pos:line="25" pos:column="74"/></operator> <name pos:line="25" pos:column="75">NULL<pos:position pos:line="25" pos:column="79"/></name></expr>;<pos:position pos:line="25" pos:column="80"/></condition>
         <incr><expr><name pos:line="26" pos:column="10">last_p<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <name pos:line="26" pos:column="19">entry_p<pos:position pos:line="26" pos:column="26"/></name></expr><operator pos:line="26" pos:column="26">,<pos:position pos:line="26" pos:column="27"/></operator> <expr><name pos:line="26" pos:column="28">entry_p<pos:position pos:line="26" pos:column="35"/></name> <operator pos:line="26" pos:column="36">=<pos:position pos:line="26" pos:column="37"/></operator> <name><name pos:line="26" pos:column="38">entry_p<pos:position pos:line="26" pos:column="45"/></name><operator pos:line="26" pos:column="45">-&gt;<pos:position pos:line="26" pos:column="50"/></operator><name pos:line="26" pos:column="47">te_next_p<pos:position pos:line="26" pos:column="56"/></name></name></expr></incr>)<pos:position pos:line="26" pos:column="57"/></control> <block pos:line="26" pos:column="58">{
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name><name pos:line="27" pos:column="13">entry_p<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">te_key_size<pos:position pos:line="27" pos:column="33"/></name></name> <operator pos:line="27" pos:column="34">==<pos:position pos:line="27" pos:column="36"/></operator> <name pos:line="27" pos:column="37">ksize<pos:position pos:line="27" pos:column="42"/></name>
            <operator pos:line="28" pos:column="13">&amp;&amp;<pos:position pos:line="28" pos:column="23"/></operator> <call><name pos:line="28" pos:column="16">memcmp<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><call><name pos:line="28" pos:column="23">ENTRY_KEY_BUF<pos:position pos:line="28" pos:column="36"/></name><argument_list pos:line="28" pos:column="36">(<argument><expr><name pos:line="28" pos:column="37">entry_p<pos:position pos:line="28" pos:column="44"/></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="28" pos:column="47">key_buf<pos:position pos:line="28" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="56">ksize<pos:position pos:line="28" pos:column="61"/></name></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></call> <operator pos:line="28" pos:column="63">==<pos:position pos:line="28" pos:column="65"/></operator> <literal type="number" pos:line="28" pos:column="66">0<pos:position pos:line="28" pos:column="67"/></literal></expr>)<pos:position pos:line="28" pos:column="68"/></condition><then pos:line="28" pos:column="68">
            <block type="pseudo"><break pos:line="29" pos:column="13">break;<pos:position pos:line="29" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></for>

    <comment type="block" pos:line="32" pos:column="5">/* did we find it? */</comment>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">entry_p<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">==<pos:position pos:line="33" pos:column="19"/></operator> <name pos:line="33" pos:column="20">NULL<pos:position pos:line="33" pos:column="24"/></name></expr>)<pos:position pos:line="33" pos:column="25"/></condition><then pos:line="33" pos:column="25">
        <block type="pseudo"><return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">TABLE_ERROR_NOT_FOUND<pos:position pos:line="34" pos:column="37"/></name></expr>;<pos:position pos:line="34" pos:column="38"/></return></block></then></if>
    <comment type="block" pos:line="35" pos:column="5">/*
     * NOTE: we may want to adjust the linear counters here if the entry
     * we are deleting is the one we are pointing on or is ahead of the
     * one in the bucket list
     */</comment>

    <comment type="block" pos:line="41" pos:column="5">/* remove entry from the linked list */</comment>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">last_p<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">==<pos:position pos:line="42" pos:column="18"/></operator> <name pos:line="42" pos:column="19">NULL<pos:position pos:line="42" pos:column="23"/></name></expr>)<pos:position pos:line="42" pos:column="24"/></condition><then pos:line="42" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="43" pos:column="9">table_p<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">-&gt;<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="18">ta_buckets<pos:position pos:line="43" pos:column="28"/></name><index pos:line="43" pos:column="28">[<expr><name pos:line="43" pos:column="29">bucket<pos:position pos:line="43" pos:column="35"/></name></expr>]<pos:position pos:line="43" pos:column="36"/></index></name> <operator pos:line="43" pos:column="37">=<pos:position pos:line="43" pos:column="38"/></operator> <name><name pos:line="43" pos:column="39">entry_p<pos:position pos:line="43" pos:column="46"/></name><operator pos:line="43" pos:column="46">-&gt;<pos:position pos:line="43" pos:column="51"/></operator><name pos:line="43" pos:column="48">te_next_p<pos:position pos:line="43" pos:column="57"/></name></name></expr>;<pos:position pos:line="43" pos:column="58"/></expr_stmt></block></then>
    <else pos:line="44" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="45" pos:column="9">last_p<pos:position pos:line="45" pos:column="15"/></name><operator pos:line="45" pos:column="15">-&gt;<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="17">te_next_p<pos:position pos:line="45" pos:column="26"/></name></name> <operator pos:line="45" pos:column="27">=<pos:position pos:line="45" pos:column="28"/></operator> <name><name pos:line="45" pos:column="29">entry_p<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">-&gt;<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="38">te_next_p<pos:position pos:line="45" pos:column="47"/></name></name></expr>;<pos:position pos:line="45" pos:column="48"/></expr_stmt></block></else></if>
    <comment type="block" pos:line="46" pos:column="5">/* free entry */</comment>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">data_buf_p<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">!=<pos:position pos:line="47" pos:column="22"/></operator> <name pos:line="47" pos:column="23">NULL<pos:position pos:line="47" pos:column="27"/></name></expr>)<pos:position pos:line="47" pos:column="28"/></condition><then pos:line="47" pos:column="28"> <block pos:line="47" pos:column="29">{
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name><name pos:line="48" pos:column="13">entry_p<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">-&gt;<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="22">te_data_size<pos:position pos:line="48" pos:column="34"/></name></name> <operator pos:line="48" pos:column="35">==<pos:position pos:line="48" pos:column="37"/></operator> <literal type="number" pos:line="48" pos:column="38">0<pos:position pos:line="48" pos:column="39"/></literal></expr>)<pos:position pos:line="48" pos:column="40"/></condition><then pos:line="48" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="49" pos:column="13">*<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">data_buf_p<pos:position pos:line="49" pos:column="24"/></name> <operator pos:line="49" pos:column="25">=<pos:position pos:line="49" pos:column="26"/></operator> <name pos:line="49" pos:column="27">NULL<pos:position pos:line="49" pos:column="31"/></name></expr>;<pos:position pos:line="49" pos:column="32"/></expr_stmt></block></then>
        <else pos:line="50" pos:column="9">else <block pos:line="50" pos:column="14">{
            <comment type="block" pos:line="51" pos:column="13">/*
             * if we were storing it compacted, we now need to malloc some
             * space if the user wants the value after the delete.
             */</comment>
            <expr_stmt><expr><operator pos:line="55" pos:column="13">*<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="14">data_buf_p<pos:position pos:line="55" pos:column="24"/></name> <operator pos:line="55" pos:column="25">=<pos:position pos:line="55" pos:column="26"/></operator> <call><name><name pos:line="55" pos:column="27">table_p<pos:position pos:line="55" pos:column="34"/></name><operator pos:line="55" pos:column="34">-&gt;<pos:position pos:line="55" pos:column="39"/></operator><name pos:line="55" pos:column="36">ta_malloc<pos:position pos:line="55" pos:column="45"/></name></name><argument_list pos:line="55" pos:column="45">(<argument><expr><name><name pos:line="55" pos:column="46">table_p<pos:position pos:line="55" pos:column="53"/></name><operator pos:line="55" pos:column="53">-&gt;<pos:position pos:line="55" pos:column="58"/></operator><name pos:line="55" pos:column="55">opt_param<pos:position pos:line="55" pos:column="64"/></name></name></expr></argument>,
                                             <argument><expr><name><name pos:line="56" pos:column="46">entry_p<pos:position pos:line="56" pos:column="53"/></name><operator pos:line="56" pos:column="53">-&gt;<pos:position pos:line="56" pos:column="58"/></operator><name pos:line="56" pos:column="55">te_data_size<pos:position pos:line="56" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="69"/></expr_stmt>
            <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><operator pos:line="57" pos:column="17">*<pos:position pos:line="57" pos:column="18"/></operator><name pos:line="57" pos:column="18">data_buf_p<pos:position pos:line="57" pos:column="28"/></name> <operator pos:line="57" pos:column="29">==<pos:position pos:line="57" pos:column="31"/></operator> <name pos:line="57" pos:column="32">NULL<pos:position pos:line="57" pos:column="36"/></name></expr>)<pos:position pos:line="57" pos:column="37"/></condition><then pos:line="57" pos:column="37">
                <block type="pseudo"><return pos:line="58" pos:column="17">return <expr><name pos:line="58" pos:column="24">TABLE_ERROR_ALLOC<pos:position pos:line="58" pos:column="41"/></name></expr>;<pos:position pos:line="58" pos:column="42"/></return></block></then></if>
            <if pos:line="59" pos:column="13">if <condition pos:line="59" pos:column="16">(<expr><name><name pos:line="59" pos:column="17">table_p<pos:position pos:line="59" pos:column="24"/></name><operator pos:line="59" pos:column="24">-&gt;<pos:position pos:line="59" pos:column="29"/></operator><name pos:line="59" pos:column="26">ta_data_align<pos:position pos:line="59" pos:column="39"/></name></name> <operator pos:line="59" pos:column="40">==<pos:position pos:line="59" pos:column="42"/></operator> <literal type="number" pos:line="59" pos:column="43">0<pos:position pos:line="59" pos:column="44"/></literal></expr>)<pos:position pos:line="59" pos:column="45"/></condition><then pos:line="59" pos:column="45">
                <block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="17">data_copy_p<pos:position pos:line="60" pos:column="28"/></name> <operator pos:line="60" pos:column="29">=<pos:position pos:line="60" pos:column="30"/></operator> <call><name pos:line="60" pos:column="31">ENTRY_DATA_BUF<pos:position pos:line="60" pos:column="45"/></name><argument_list pos:line="60" pos:column="45">(<argument><expr><name pos:line="60" pos:column="46">table_p<pos:position pos:line="60" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="55">entry_p<pos:position pos:line="60" pos:column="62"/></name></expr></argument>)<pos:position pos:line="60" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="64"/></expr_stmt></block></then>
            <else pos:line="61" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="17">data_copy_p<pos:position pos:line="62" pos:column="28"/></name> <operator pos:line="62" pos:column="29">=<pos:position pos:line="62" pos:column="30"/></operator> <call><name pos:line="62" pos:column="31">entry_data_buf<pos:position pos:line="62" pos:column="45"/></name><argument_list pos:line="62" pos:column="45">(<argument><expr><name pos:line="62" pos:column="46">table_p<pos:position pos:line="62" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="55">entry_p<pos:position pos:line="62" pos:column="62"/></name></expr></argument>)<pos:position pos:line="62" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="64"/></expr_stmt></block></else></if>
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">memcpy<pos:position pos:line="63" pos:column="19"/></name><argument_list pos:line="63" pos:column="19">(<argument><expr><operator pos:line="63" pos:column="20">*<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="21">data_buf_p<pos:position pos:line="63" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="33">data_copy_p<pos:position pos:line="63" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="46">entry_p<pos:position pos:line="63" pos:column="53"/></name><operator pos:line="63" pos:column="53">-&gt;<pos:position pos:line="63" pos:column="58"/></operator><name pos:line="63" pos:column="55">te_data_size<pos:position pos:line="63" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="64" pos:column="10"/></block></else></if>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name pos:line="66" pos:column="9">data_size_p<pos:position pos:line="66" pos:column="20"/></name> <operator pos:line="66" pos:column="21">!=<pos:position pos:line="66" pos:column="23"/></operator> <name pos:line="66" pos:column="24">NULL<pos:position pos:line="66" pos:column="28"/></name></expr>)<pos:position pos:line="66" pos:column="29"/></condition><then pos:line="66" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="67" pos:column="9">*<pos:position pos:line="67" pos:column="10"/></operator><name pos:line="67" pos:column="10">data_size_p<pos:position pos:line="67" pos:column="21"/></name> <operator pos:line="67" pos:column="22">=<pos:position pos:line="67" pos:column="23"/></operator> <name><name pos:line="67" pos:column="24">entry_p<pos:position pos:line="67" pos:column="31"/></name><operator pos:line="67" pos:column="31">-&gt;<pos:position pos:line="67" pos:column="36"/></operator><name pos:line="67" pos:column="33">te_data_size<pos:position pos:line="67" pos:column="45"/></name></name></expr>;<pos:position pos:line="67" pos:column="46"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name><name pos:line="68" pos:column="5">table_p<pos:position pos:line="68" pos:column="12"/></name><operator pos:line="68" pos:column="12">-&gt;<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="14">ta_free<pos:position pos:line="68" pos:column="21"/></name></name><argument_list pos:line="68" pos:column="21">(<argument><expr><name><name pos:line="68" pos:column="22">table_p<pos:position pos:line="68" pos:column="29"/></name><operator pos:line="68" pos:column="29">-&gt;<pos:position pos:line="68" pos:column="34"/></operator><name pos:line="68" pos:column="31">opt_param<pos:position pos:line="68" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="42">entry_p<pos:position pos:line="68" pos:column="49"/></name></expr></argument>)<pos:position pos:line="68" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="69" pos:column="5">entry_p<pos:position pos:line="69" pos:column="12"/></name> <operator pos:line="69" pos:column="13">=<pos:position pos:line="69" pos:column="14"/></operator> <name pos:line="69" pos:column="15">NULL<pos:position pos:line="69" pos:column="19"/></name></expr>;<pos:position pos:line="69" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="71" pos:column="5">table_p<pos:position pos:line="71" pos:column="12"/></name><operator pos:line="71" pos:column="12">-&gt;<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="14">ta_entry_n<pos:position pos:line="71" pos:column="24"/></name></name><operator pos:line="71" pos:column="24">--<pos:position pos:line="71" pos:column="26"/></operator></expr>;<pos:position pos:line="71" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="73" pos:column="5">/* do we need auto-adjust down? */</comment>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><operator pos:line="74" pos:column="9">(<pos:position pos:line="74" pos:column="10"/></operator><name><name pos:line="74" pos:column="10">table_p<pos:position pos:line="74" pos:column="17"/></name><operator pos:line="74" pos:column="17">-&gt;<pos:position pos:line="74" pos:column="22"/></operator><name pos:line="74" pos:column="19">ta_flags<pos:position pos:line="74" pos:column="27"/></name></name> <operator pos:line="74" pos:column="28">&amp;<pos:position pos:line="74" pos:column="33"/></operator> <name pos:line="74" pos:column="30">TABLE_FLAG_AUTO_ADJUST<pos:position pos:line="74" pos:column="52"/></name><operator pos:line="74" pos:column="52">)<pos:position pos:line="74" pos:column="53"/></operator>
        <operator pos:line="75" pos:column="9">&amp;&amp;<pos:position pos:line="75" pos:column="19"/></operator> <operator pos:line="75" pos:column="12">(<pos:position pos:line="75" pos:column="13"/></operator><name><name pos:line="75" pos:column="13">table_p<pos:position pos:line="75" pos:column="20"/></name><operator pos:line="75" pos:column="20">-&gt;<pos:position pos:line="75" pos:column="25"/></operator><name pos:line="75" pos:column="22">ta_flags<pos:position pos:line="75" pos:column="30"/></name></name> <operator pos:line="75" pos:column="31">&amp;<pos:position pos:line="75" pos:column="36"/></operator> <name pos:line="75" pos:column="33">TABLE_FLAG_ADJUST_DOWN<pos:position pos:line="75" pos:column="55"/></name><operator pos:line="75" pos:column="55">)<pos:position pos:line="75" pos:column="56"/></operator>
        <operator pos:line="76" pos:column="9">&amp;&amp;<pos:position pos:line="76" pos:column="19"/></operator> <call><name pos:line="76" pos:column="12">SHOULD_TABLE_SHRINK<pos:position pos:line="76" pos:column="31"/></name><argument_list pos:line="76" pos:column="31">(<argument><expr><name pos:line="76" pos:column="32">table_p<pos:position pos:line="76" pos:column="39"/></name></expr></argument>)<pos:position pos:line="76" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="41"/></condition><then pos:line="76" pos:column="41">
        <block type="pseudo"><return pos:line="77" pos:column="9">return <expr><call><name pos:line="77" pos:column="16">table_adjust<pos:position pos:line="77" pos:column="28"/></name><argument_list pos:line="77" pos:column="28">(<argument><expr><name pos:line="77" pos:column="29">table_p<pos:position pos:line="77" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="38">table_p<pos:position pos:line="77" pos:column="45"/></name><operator pos:line="77" pos:column="45">-&gt;<pos:position pos:line="77" pos:column="50"/></operator><name pos:line="77" pos:column="47">ta_entry_n<pos:position pos:line="77" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="59"/></return></block></then></if>
    <return pos:line="78" pos:column="5">return <expr><name pos:line="78" pos:column="12">TABLE_ERROR_NONE<pos:position pos:line="78" pos:column="28"/></name></expr>;<pos:position pos:line="78" pos:column="29"/></return>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

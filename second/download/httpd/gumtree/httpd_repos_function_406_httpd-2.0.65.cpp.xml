<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_406_httpd-2.0.65.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">register_hooks<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">apr_pool_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">p<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">ap_hook_pre_config<pos:position pos:line="3" pos:column="23"/></name><argument_list pos:line="3" pos:column="23">(<argument><expr><name pos:line="3" pos:column="24">log_pre_config<pos:position pos:line="3" pos:column="38"/></name></expr></argument>,<argument><expr><name pos:line="3" pos:column="39">NULL<pos:position pos:line="3" pos:column="43"/></name></expr></argument>,<argument><expr><name pos:line="3" pos:column="44">NULL<pos:position pos:line="3" pos:column="48"/></name></expr></argument>,<argument><expr><name pos:line="3" pos:column="49">APR_HOOK_REALLY_FIRST<pos:position pos:line="3" pos:column="70"/></name></expr></argument>)<pos:position pos:line="3" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">ap_hook_child_init<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">(<argument><expr><name pos:line="4" pos:column="24">init_child<pos:position pos:line="4" pos:column="34"/></name></expr></argument>,<argument><expr><name pos:line="4" pos:column="35">NULL<pos:position pos:line="4" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="4" pos:column="40">NULL<pos:position pos:line="4" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="4" pos:column="45">APR_HOOK_MIDDLE<pos:position pos:line="4" pos:column="60"/></name></expr></argument>)<pos:position pos:line="4" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">ap_hook_open_logs<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">init_config_log<pos:position pos:line="5" pos:column="38"/></name></expr></argument>,<argument><expr><name pos:line="5" pos:column="39">NULL<pos:position pos:line="5" pos:column="43"/></name></expr></argument>,<argument><expr><name pos:line="5" pos:column="44">NULL<pos:position pos:line="5" pos:column="48"/></name></expr></argument>,<argument><expr><name pos:line="5" pos:column="49">APR_HOOK_MIDDLE<pos:position pos:line="5" pos:column="64"/></name></expr></argument>)<pos:position pos:line="5" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">ap_hook_log_transaction<pos:position pos:line="6" pos:column="28"/></name><argument_list pos:line="6" pos:column="28">(<argument><expr><name pos:line="6" pos:column="29">multi_log_transaction<pos:position pos:line="6" pos:column="50"/></name></expr></argument>,<argument><expr><name pos:line="6" pos:column="51">NULL<pos:position pos:line="6" pos:column="55"/></name></expr></argument>,<argument><expr><name pos:line="6" pos:column="56">NULL<pos:position pos:line="6" pos:column="60"/></name></expr></argument>,<argument><expr><name pos:line="6" pos:column="61">APR_HOOK_MIDDLE<pos:position pos:line="6" pos:column="76"/></name></expr></argument>)<pos:position pos:line="6" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="78"/></expr_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* Init log_hash before we register the optional function. It is 
     * possible for the optional function, ap_register_log_handler,
     * to be called before any other mod_log_config hooks are called.
     * As a policy, we should init everything required by an optional function
     * before calling APR_REGISTER_OPTIONAL_FN.
     */</comment> 
    <expr_stmt><expr><name pos:line="14" pos:column="5">log_hash<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <call><name pos:line="14" pos:column="16">apr_hash_make<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">p<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">APR_REGISTER_OPTIONAL_FN<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">ap_register_log_handler<pos:position pos:line="15" pos:column="53"/></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">APR_REGISTER_OPTIONAL_FN<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">ap_log_set_writer_init<pos:position pos:line="16" pos:column="52"/></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">APR_REGISTER_OPTIONAL_FN<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">ap_log_set_writer<pos:position pos:line="17" pos:column="47"/></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

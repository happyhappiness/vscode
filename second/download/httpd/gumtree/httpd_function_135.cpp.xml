<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_135.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ssl_scache_shmht_init<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">server_rec<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">s<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">apr_pool_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">p<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SSLModConfigRec<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">mc<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><call><name pos:line="3" pos:column="27">myModConfig<pos:position pos:line="3" pos:column="38"/></name><argument_list pos:line="3" pos:column="38">(<argument><expr><name pos:line="3" pos:column="39">s<pos:position pos:line="3" pos:column="40"/></name></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">table_t<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">ta<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">ta_errno<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">avail<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">n<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">rv<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/*
     * Create shared memory segment
     */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">mc<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">szSessionCacheDataFile<pos:position pos:line="13" pos:column="35"/></name></name> <operator pos:line="13" pos:column="36">==<pos:position pos:line="13" pos:column="38"/></operator> <name pos:line="13" pos:column="39">NULL<pos:position pos:line="13" pos:column="43"/></name></expr>)<pos:position pos:line="13" pos:column="44"/></condition><then pos:line="13" pos:column="44"> <block pos:line="13" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">ap_log_error<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">APLOG_MARK<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">APLOG_ERR<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="45">0<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="48">s<pos:position pos:line="14" pos:column="49"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="15" pos:column="22">"SSLSessionCache required"<pos:position pos:line="15" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">ssl_die<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">()<pos:position pos:line="16" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">rv<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">apr_shm_create<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><operator pos:line="19" pos:column="30">&amp;<pos:position pos:line="19" pos:column="35"/></operator><operator pos:line="19" pos:column="31">(<pos:position pos:line="19" pos:column="32"/></operator><name><name pos:line="19" pos:column="32">mc<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">-&gt;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="36">pSessionCacheDataMM<pos:position pos:line="19" pos:column="55"/></name></name><operator pos:line="19" pos:column="55">)<pos:position pos:line="19" pos:column="56"/></operator></expr></argument>, 
                   <argument><expr><name><name pos:line="20" pos:column="20">mc<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">-&gt;<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="24">nSessionCacheDataSize<pos:position pos:line="20" pos:column="45"/></name></name></expr></argument>, 
                   <argument><expr><name><name pos:line="21" pos:column="20">mc<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">-&gt;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="24">szSessionCacheDataFile<pos:position pos:line="21" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="48">mc<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">-&gt;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="52">pPool<pos:position pos:line="21" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call><operator pos:line="21" pos:column="58">)<pos:position pos:line="21" pos:column="59"/></operator> <operator pos:line="21" pos:column="60">!=<pos:position pos:line="21" pos:column="62"/></operator> <name pos:line="21" pos:column="63">APR_SUCCESS<pos:position pos:line="21" pos:column="74"/></name></expr>)<pos:position pos:line="21" pos:column="75"/></condition><then pos:line="21" pos:column="75"> <block pos:line="21" pos:column="76">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">ap_log_error<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">APLOG_MARK<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">APLOG_ERR<pos:position pos:line="22" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="45">rv<pos:position pos:line="22" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="49">s<pos:position pos:line="22" pos:column="50"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="23" pos:column="22">"Cannot allocate shared memory"<pos:position pos:line="23" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">ssl_die<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">()<pos:position pos:line="24" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">(<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">rv<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <call><name pos:line="27" pos:column="15">apr_rmm_init<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><operator pos:line="27" pos:column="28">&amp;<pos:position pos:line="27" pos:column="33"/></operator><operator pos:line="27" pos:column="29">(<pos:position pos:line="27" pos:column="30"/></operator><name><name pos:line="27" pos:column="30">mc<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">pSessionCacheDataRMM<pos:position pos:line="27" pos:column="54"/></name></name><operator pos:line="27" pos:column="54">)<pos:position pos:line="27" pos:column="55"/></operator></expr></argument>, <argument><expr><name pos:line="27" pos:column="57">NULL<pos:position pos:line="27" pos:column="61"/></name></expr></argument>,
                   <argument><expr><call><name pos:line="28" pos:column="20">apr_shm_baseaddr_get<pos:position pos:line="28" pos:column="40"/></name><argument_list pos:line="28" pos:column="40">(<argument><expr><name><name pos:line="28" pos:column="41">mc<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">-&gt;<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="45">pSessionCacheDataMM<pos:position pos:line="28" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr></argument>,
                   <argument><expr><name><name pos:line="29" pos:column="20">mc<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">nSessionCacheDataSize<pos:position pos:line="29" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="47">mc<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">-&gt;<pos:position pos:line="29" pos:column="54"/></operator><name pos:line="29" pos:column="51">pPool<pos:position pos:line="29" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call><operator pos:line="29" pos:column="57">)<pos:position pos:line="29" pos:column="58"/></operator> <operator pos:line="29" pos:column="59">!=<pos:position pos:line="29" pos:column="61"/></operator> <name pos:line="29" pos:column="62">APR_SUCCESS<pos:position pos:line="29" pos:column="73"/></name></expr>)<pos:position pos:line="29" pos:column="74"/></condition><then pos:line="29" pos:column="74"> <block pos:line="29" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">ap_log_error<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">APLOG_MARK<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="34">APLOG_ERR<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="45">rv<pos:position pos:line="30" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="49">s<pos:position pos:line="30" pos:column="50"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="31" pos:column="22">"Cannot initialize rmm"<pos:position pos:line="31" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">ssl_die<pos:position pos:line="32" pos:column="16"/></name><argument_list pos:line="32" pos:column="16">()<pos:position pos:line="32" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ap_log_error<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">(<argument><expr><name pos:line="34" pos:column="18">APLOG_MARK<pos:position pos:line="34" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="30">APLOG_ERR<pos:position pos:line="34" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="41">0<pos:position pos:line="34" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="44">s<pos:position pos:line="34" pos:column="45"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="35" pos:column="18">"initialize MM %p RMM %p"<pos:position pos:line="35" pos:column="43"/></literal></expr></argument>,
                 <argument><expr><name><name pos:line="36" pos:column="18">mc<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">-&gt;<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="22">pSessionCacheDataMM<pos:position pos:line="36" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="43">mc<pos:position pos:line="36" pos:column="45"/></name><operator pos:line="36" pos:column="45">-&gt;<pos:position pos:line="36" pos:column="50"/></operator><name pos:line="36" pos:column="47">pSessionCacheDataRMM<pos:position pos:line="36" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="69"/></expr_stmt>

    <comment type="block" pos:line="38" pos:column="5">/*
     * Create hash table in shared memory segment
     */</comment>
    <expr_stmt><expr><name pos:line="41" pos:column="5">avail<pos:position pos:line="41" pos:column="10"/></name> <operator pos:line="41" pos:column="11">=<pos:position pos:line="41" pos:column="12"/></operator> <name><name pos:line="41" pos:column="13">mc<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">-&gt;<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="17">nSessionCacheDataSize<pos:position pos:line="41" pos:column="38"/></name></name></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">n<pos:position pos:line="42" pos:column="6"/></name> <operator pos:line="42" pos:column="7">=<pos:position pos:line="42" pos:column="8"/></operator> <operator pos:line="42" pos:column="9">(<pos:position pos:line="42" pos:column="10"/></operator><name pos:line="42" pos:column="10">avail<pos:position pos:line="42" pos:column="15"/></name><operator pos:line="42" pos:column="15">/<pos:position pos:line="42" pos:column="16"/></operator><literal type="number" pos:line="42" pos:column="16">2<pos:position pos:line="42" pos:column="17"/></literal><operator pos:line="42" pos:column="17">)<pos:position pos:line="42" pos:column="18"/></operator> <operator pos:line="42" pos:column="19">/<pos:position pos:line="42" pos:column="20"/></operator> <literal type="number" pos:line="42" pos:column="21">1024<pos:position pos:line="42" pos:column="25"/></literal></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">n<pos:position pos:line="43" pos:column="6"/></name> <operator pos:line="43" pos:column="7">=<pos:position pos:line="43" pos:column="8"/></operator> <ternary><condition><expr><name pos:line="43" pos:column="9">n<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">&lt;<pos:position pos:line="43" pos:column="15"/></operator> <literal type="number" pos:line="43" pos:column="13">10<pos:position pos:line="43" pos:column="15"/></literal></expr> ?<pos:position pos:line="43" pos:column="17"/></condition><then pos:line="43" pos:column="17"> <expr><literal type="number" pos:line="43" pos:column="18">10<pos:position pos:line="43" pos:column="20"/></literal></expr> <pos:position pos:line="43" pos:column="21"/></then><else pos:line="43" pos:column="21">: <expr><name pos:line="43" pos:column="23">n<pos:position pos:line="43" pos:column="24"/></name></expr></else></ternary></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="45" pos:column="5">/*
     * Passing server_rec as opt_param to table_alloc so that we can do
     * logging if required ssl_util_table. Otherwise, mc is sufficient.
     */</comment> 
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><operator pos:line="49" pos:column="9">(<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">ta<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">=<pos:position pos:line="49" pos:column="14"/></operator> <call><name pos:line="49" pos:column="15">table_alloc<pos:position pos:line="49" pos:column="26"/></name><argument_list pos:line="49" pos:column="26">(<argument><expr><name pos:line="49" pos:column="27">n<pos:position pos:line="49" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="30">&amp;<pos:position pos:line="49" pos:column="35"/></operator><name pos:line="49" pos:column="31">ta_errno<pos:position pos:line="49" pos:column="39"/></name></expr></argument>, 
                          <argument><expr><name pos:line="50" pos:column="27">ssl_scache_shmht_malloc<pos:position pos:line="50" pos:column="50"/></name></expr></argument>,  
                          <argument><expr><name pos:line="51" pos:column="27">ssl_scache_shmht_calloc<pos:position pos:line="51" pos:column="50"/></name></expr></argument>, 
                          <argument><expr><name pos:line="52" pos:column="27">ssl_scache_shmht_realloc<pos:position pos:line="52" pos:column="51"/></name></expr></argument>, 
                          <argument><expr><name pos:line="53" pos:column="27">ssl_scache_shmht_free<pos:position pos:line="53" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="50">s<pos:position pos:line="53" pos:column="51"/></name></expr></argument> )<pos:position pos:line="53" pos:column="53"/></argument_list></call><operator pos:line="53" pos:column="53">)<pos:position pos:line="53" pos:column="54"/></operator> <operator pos:line="53" pos:column="55">==<pos:position pos:line="53" pos:column="57"/></operator> <name pos:line="53" pos:column="58">NULL<pos:position pos:line="53" pos:column="62"/></name></expr>)<pos:position pos:line="53" pos:column="63"/></condition><then pos:line="53" pos:column="63"> <block pos:line="53" pos:column="64">{
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">ap_log_error<pos:position pos:line="54" pos:column="21"/></name><argument_list pos:line="54" pos:column="21">(<argument><expr><name pos:line="54" pos:column="22">APLOG_MARK<pos:position pos:line="54" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="34">APLOG_ERR<pos:position pos:line="54" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="45">0<pos:position pos:line="54" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="48">s<pos:position pos:line="54" pos:column="49"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="55" pos:column="22">"Cannot allocate hash table in shared memory: %s"<pos:position pos:line="55" pos:column="71"/></literal></expr></argument>,
                     <argument><expr><call><name pos:line="56" pos:column="22">table_strerror<pos:position pos:line="56" pos:column="36"/></name><argument_list pos:line="56" pos:column="36">(<argument><expr><name pos:line="56" pos:column="37">ta_errno<pos:position pos:line="56" pos:column="45"/></name></expr></argument>)<pos:position pos:line="56" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">ssl_die<pos:position pos:line="57" pos:column="16"/></name><argument_list pos:line="57" pos:column="16">()<pos:position pos:line="57" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="60" pos:column="5">table_attr<pos:position pos:line="60" pos:column="15"/></name><argument_list pos:line="60" pos:column="15">(<argument><expr><name pos:line="60" pos:column="16">ta<pos:position pos:line="60" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="20">TABLE_FLAG_AUTO_ADJUST<pos:position pos:line="60" pos:column="42"/></name><operator pos:line="60" pos:column="42">|<pos:position pos:line="60" pos:column="43"/></operator><name pos:line="60" pos:column="43">TABLE_FLAG_ADJUST_DOWN<pos:position pos:line="60" pos:column="65"/></name></expr></argument>)<pos:position pos:line="60" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">table_set_data_alignment<pos:position pos:line="61" pos:column="29"/></name><argument_list pos:line="61" pos:column="29">(<argument><expr><name pos:line="61" pos:column="30">ta<pos:position pos:line="61" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="34">sizeof<argument_list pos:line="61" pos:column="40">(<argument><expr><name pos:line="61" pos:column="41">char<pos:position pos:line="61" pos:column="45"/></name> <operator pos:line="61" pos:column="46">*<pos:position pos:line="61" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="61" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">table_clear<pos:position pos:line="62" pos:column="16"/></name><argument_list pos:line="62" pos:column="16">(<argument><expr><name pos:line="62" pos:column="17">ta<pos:position pos:line="62" pos:column="19"/></name></expr></argument>)<pos:position pos:line="62" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="63" pos:column="5">mc<pos:position pos:line="63" pos:column="7"/></name><operator pos:line="63" pos:column="7">-&gt;<pos:position pos:line="63" pos:column="12"/></operator><name pos:line="63" pos:column="9">tSessionCacheDataTable<pos:position pos:line="63" pos:column="31"/></name></name> <operator pos:line="63" pos:column="32">=<pos:position pos:line="63" pos:column="33"/></operator> <name pos:line="63" pos:column="34">ta<pos:position pos:line="63" pos:column="36"/></name></expr>;<pos:position pos:line="63" pos:column="37"/></expr_stmt>

    <comment type="block" pos:line="65" pos:column="5">/*
     * Log the done work
     */</comment>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">ap_log_error<pos:position pos:line="68" pos:column="17"/></name><argument_list pos:line="68" pos:column="17">(<argument><expr><name pos:line="68" pos:column="18">APLOG_MARK<pos:position pos:line="68" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="30">APLOG_INFO<pos:position pos:line="68" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="42">0<pos:position pos:line="68" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="45">s<pos:position pos:line="68" pos:column="46"/></name></expr></argument>, 
                 <argument><expr><literal type="string" pos:line="69" pos:column="18">"Init: Created hash-table (%d buckets) "<pos:position pos:line="69" pos:column="58"/></literal>
                 <literal type="string" pos:line="70" pos:column="18">"in shared memory (%"<pos:position pos:line="70" pos:column="39"/></literal> <name pos:line="70" pos:column="40">APR_SIZE_T_FMT<pos:position pos:line="70" pos:column="54"/></name> 
                 <literal type="string" pos:line="71" pos:column="18">" bytes) for SSL session cache"<pos:position pos:line="71" pos:column="49"/></literal></expr></argument>,
                 <argument><expr><name pos:line="72" pos:column="18">n<pos:position pos:line="72" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="21">avail<pos:position pos:line="72" pos:column="26"/></name></expr></argument>)<pos:position pos:line="72" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="28"/></expr_stmt>
    <return pos:line="73" pos:column="5">return;<pos:position pos:line="73" pos:column="12"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

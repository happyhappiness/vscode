<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2236_httpd-2.2.22.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">include_config<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">cmd_parms<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">cmd<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">void<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">dummy<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
                                   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">name<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ap_directive_t<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">conftree<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name pos:line="4" pos:column="32">NULL<pos:position pos:line="4" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name><modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type> <name pos:line="5" pos:column="17">conffile<pos:position pos:line="5" pos:column="25"/></name></decl>, <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="28">error<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">recursion<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">void<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">data<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">apr_pool_userdata_get<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><operator pos:line="9" pos:column="27">&amp;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="28">data<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="34">"ap_include_sentinel"<pos:position pos:line="9" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="57">cmd<pos:position pos:line="9" pos:column="60"/></name><operator pos:line="9" pos:column="60">-&gt;<pos:position pos:line="9" pos:column="65"/></operator><name pos:line="9" pos:column="62">pool<pos:position pos:line="9" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">data<pos:position pos:line="10" pos:column="13"/></name></expr>)<pos:position pos:line="10" pos:column="14"/></condition><then pos:line="10" pos:column="14"> <block pos:line="10" pos:column="15">{
        <expr_stmt><expr><name pos:line="11" pos:column="9">recursion<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">data<pos:position pos:line="11" pos:column="25"/></name></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then>
    <else pos:line="13" pos:column="5">else <block pos:line="13" pos:column="10">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">data<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">recursion<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <call><name pos:line="14" pos:column="28">apr_palloc<pos:position pos:line="14" pos:column="38"/></name><argument_list pos:line="14" pos:column="38">(<argument><expr><name><name pos:line="14" pos:column="39">cmd<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-&gt;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="44">pool<pos:position pos:line="14" pos:column="48"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="50">sizeof<argument_list pos:line="14" pos:column="56">(<argument><expr><operator pos:line="14" pos:column="57">*<pos:position pos:line="14" pos:column="58"/></operator><name pos:line="14" pos:column="58">recursion<pos:position pos:line="14" pos:column="67"/></name></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">recursion<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">apr_pool_userdata_setn<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">data<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="38">"ap_include_sentinel"<pos:position pos:line="16" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="61">NULL<pos:position pos:line="16" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="67">cmd<pos:position pos:line="16" pos:column="70"/></name><operator pos:line="16" pos:column="70">-&gt;<pos:position pos:line="16" pos:column="75"/></operator><name pos:line="16" pos:column="72">pool<pos:position pos:line="16" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="78"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></else></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">++<pos:position pos:line="19" pos:column="11"/></operator><operator pos:line="19" pos:column="11">*<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">recursion<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">&gt;<pos:position pos:line="19" pos:column="26"/></operator> <name pos:line="19" pos:column="24">AP_MAX_INCLUDE_DEPTH<pos:position pos:line="19" pos:column="44"/></name></expr>)<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45"> <block pos:line="19" pos:column="46">{
        <expr_stmt><expr><operator pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">recursion<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <literal type="number" pos:line="20" pos:column="22">0<pos:position pos:line="20" pos:column="23"/></literal></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><call><name pos:line="21" pos:column="16">apr_psprintf<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name><name pos:line="21" pos:column="29">cmd<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">-&gt;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="34">pool<pos:position pos:line="21" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="40">"Exceeded maximum include depth of %u. "<pos:position pos:line="21" pos:column="80"/></literal>
                            <literal type="string" pos:line="22" pos:column="29">"You have probably a recursion somewhere."<pos:position pos:line="22" pos:column="71"/></literal></expr></argument>,
                            <argument><expr><name pos:line="23" pos:column="29">AP_MAX_INCLUDE_DEPTH<pos:position pos:line="23" pos:column="49"/></name></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="51"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="26" pos:column="5">conffile<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">ap_server_root_relative<pos:position pos:line="26" pos:column="39"/></name><argument_list pos:line="26" pos:column="39">(<argument><expr><name><name pos:line="26" pos:column="40">cmd<pos:position pos:line="26" pos:column="43"/></name><operator pos:line="26" pos:column="43">-&gt;<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="45">pool<pos:position pos:line="26" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="51">name<pos:position pos:line="26" pos:column="55"/></name></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="57"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">conffile<pos:position pos:line="27" pos:column="18"/></name></expr>)<pos:position pos:line="27" pos:column="19"/></condition><then pos:line="27" pos:column="19"> <block pos:line="27" pos:column="20">{
        <expr_stmt><expr><operator pos:line="28" pos:column="9">*<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">recursion<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <literal type="number" pos:line="28" pos:column="22">0<pos:position pos:line="28" pos:column="23"/></literal></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
        <return pos:line="29" pos:column="9">return <expr><call><name pos:line="29" pos:column="16">apr_pstrcat<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><name><name pos:line="29" pos:column="28">cmd<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">-&gt;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="33">pool<pos:position pos:line="29" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="39">"Invalid Include path "<pos:position pos:line="29" pos:column="62"/></literal></expr></argument>,
                           <argument><expr><name pos:line="30" pos:column="28">name<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="34">NULL<pos:position pos:line="30" pos:column="38"/></name></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="40"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="33" pos:column="5">error<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">=<pos:position pos:line="33" pos:column="12"/></operator> <call><name pos:line="33" pos:column="13">ap_process_resource_config<pos:position pos:line="33" pos:column="39"/></name><argument_list pos:line="33" pos:column="39">(<argument><expr><name><name pos:line="33" pos:column="40">cmd<pos:position pos:line="33" pos:column="43"/></name><operator pos:line="33" pos:column="43">-&gt;<pos:position pos:line="33" pos:column="48"/></operator><name pos:line="33" pos:column="45">server<pos:position pos:line="33" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="53">conffile<pos:position pos:line="33" pos:column="61"/></name></expr></argument>,
                                       <argument><expr><operator pos:line="34" pos:column="40">&amp;<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="41">conftree<pos:position pos:line="34" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="51">cmd<pos:position pos:line="34" pos:column="54"/></name><operator pos:line="34" pos:column="54">-&gt;<pos:position pos:line="34" pos:column="59"/></operator><name pos:line="34" pos:column="56">pool<pos:position pos:line="34" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="62">cmd<pos:position pos:line="34" pos:column="65"/></name><operator pos:line="34" pos:column="65">-&gt;<pos:position pos:line="34" pos:column="70"/></operator><name pos:line="34" pos:column="67">temp_pool<pos:position pos:line="34" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="78"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">error<pos:position pos:line="35" pos:column="14"/></name></expr>)<pos:position pos:line="35" pos:column="15"/></condition><then pos:line="35" pos:column="15"> <block pos:line="35" pos:column="16">{
        <expr_stmt><expr><operator pos:line="36" pos:column="9">*<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">recursion<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <literal type="number" pos:line="36" pos:column="22">0<pos:position pos:line="36" pos:column="23"/></literal></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">error<pos:position pos:line="37" pos:column="21"/></name></expr>;<pos:position pos:line="37" pos:column="22"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="40" pos:column="5">*<pos:position pos:line="40" pos:column="6"/></operator><operator pos:line="40" pos:column="6">(<pos:position pos:line="40" pos:column="7"/></operator><name pos:line="40" pos:column="7">ap_directive_t<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">*<pos:position pos:line="40" pos:column="23"/></operator><operator pos:line="40" pos:column="23">*<pos:position pos:line="40" pos:column="24"/></operator><operator pos:line="40" pos:column="24">)<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="25">dummy<pos:position pos:line="40" pos:column="30"/></name> <operator pos:line="40" pos:column="31">=<pos:position pos:line="40" pos:column="32"/></operator> <name pos:line="40" pos:column="33">conftree<pos:position pos:line="40" pos:column="41"/></name></expr>;<pos:position pos:line="40" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="42" pos:column="5">/* recursion level done */</comment>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><operator pos:line="43" pos:column="9">*<pos:position pos:line="43" pos:column="10"/></operator><name pos:line="43" pos:column="10">recursion<pos:position pos:line="43" pos:column="19"/></name></expr>)<pos:position pos:line="43" pos:column="20"/></condition><then pos:line="43" pos:column="20"> <block pos:line="43" pos:column="21">{
        <expr_stmt><expr><operator pos:line="44" pos:column="9">--<pos:position pos:line="44" pos:column="11"/></operator><operator pos:line="44" pos:column="11">*<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="12">recursion<pos:position pos:line="44" pos:column="21"/></name></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">NULL<pos:position pos:line="47" pos:column="16"/></name></expr>;<pos:position pos:line="47" pos:column="17"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

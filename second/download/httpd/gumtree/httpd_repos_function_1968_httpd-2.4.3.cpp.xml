<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1968_httpd-2.4.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">sed_compile<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">sed_commands_t<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">commands<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">sed_comp_args<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">compargs<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                  <parameter><decl><type><name pos:line="2" pos:column="19">char<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">ep<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">endbuf<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">seof<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">c<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">eof<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><name pos:line="5" pos:column="15">seof<pos:position pos:line="5" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">lastep<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">cclcnt<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">bracket<pos:position pos:line="8" pos:column="17"/></name><index pos:line="8" pos:column="17">[<expr><name pos:line="8" pos:column="18">NBRA<pos:position pos:line="8" pos:column="22"/></name></expr>]<pos:position pos:line="8" pos:column="23"/></index></name></decl>, <modifier pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="26">bracketp<pos:position pos:line="8" pos:column="34"/></name></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">closed<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">neg<pos:position pos:line="10" pos:column="12"/></name></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">lc<pos:position pos:line="11" pos:column="11"/></name></decl>;<pos:position pos:line="11" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">i<pos:position pos:line="12" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="12">cflg<pos:position pos:line="12" pos:column="16"/></name></decl>;<pos:position pos:line="12" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">iflag<pos:position pos:line="13" pos:column="14"/></name></decl>;<pos:position pos:line="13" pos:column="15"/></decl_stmt> <comment type="block" pos:line="13" pos:column="16">/* used for non-ascii characters in brackets */</comment>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">sp<pos:position pos:line="14" pos:column="13"/></name> <init pos:line="14" pos:column="14">= <expr><name><name pos:line="14" pos:column="16">commands<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">cp<pos:position pos:line="14" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">regerrno<pos:position pos:line="15" pos:column="17"/></name> <init pos:line="15" pos:column="18">= <expr><literal type="number" pos:line="15" pos:column="20">0<pos:position pos:line="15" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">lastep<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <literal type="number" pos:line="17" pos:column="14">0<pos:position pos:line="17" pos:column="15"/></literal></expr>;<pos:position pos:line="17" pos:column="16"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">c<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">GETC<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">()<pos:position pos:line="18" pos:column="20"/></argument_list></call><operator pos:line="18" pos:column="20">)<pos:position pos:line="18" pos:column="21"/></operator> <operator pos:line="18" pos:column="22">==<pos:position pos:line="18" pos:column="24"/></operator> <name pos:line="18" pos:column="25">eof<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">||<pos:position pos:line="18" pos:column="31"/></operator> <name pos:line="18" pos:column="32">c<pos:position pos:line="18" pos:column="33"/></name> <operator pos:line="18" pos:column="34">==<pos:position pos:line="18" pos:column="36"/></operator> <literal type="char" pos:line="18" pos:column="37">'\n'<pos:position pos:line="18" pos:column="41"/></literal></expr>)<pos:position pos:line="18" pos:column="42"/></condition><then pos:line="18" pos:column="42"> <block pos:line="18" pos:column="43">{
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">c<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">==<pos:position pos:line="19" pos:column="17"/></operator> <literal type="char" pos:line="19" pos:column="18">'\n'<pos:position pos:line="19" pos:column="22"/></literal></expr>)<pos:position pos:line="19" pos:column="23"/></condition><then pos:line="19" pos:column="23"> <block pos:line="19" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">UNGETC<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">c<pos:position pos:line="20" pos:column="21"/></name></expr></argument>)<pos:position pos:line="20" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">commands<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">cp<pos:position pos:line="22" pos:column="21"/></name></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">sp<pos:position pos:line="22" pos:column="26"/></name></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
        <goto pos:line="23" pos:column="9">goto <name pos:line="23" pos:column="14">out<pos:position pos:line="23" pos:column="17"/></name>;<pos:position pos:line="23" pos:column="18"/></goto>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="25" pos:column="5">bracketp<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <name pos:line="25" pos:column="16">bracket<pos:position pos:line="25" pos:column="23"/></name></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">compargs<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">-&gt;<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="15">circf<pos:position pos:line="26" pos:column="20"/></name></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <name pos:line="26" pos:column="23">closed<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">=<pos:position pos:line="26" pos:column="31"/></operator> <name><name pos:line="26" pos:column="32">compargs<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">-&gt;<pos:position pos:line="26" pos:column="45"/></operator><name pos:line="26" pos:column="42">nbra<pos:position pos:line="26" pos:column="46"/></name></name> <operator pos:line="26" pos:column="47">=<pos:position pos:line="26" pos:column="48"/></operator> <literal type="number" pos:line="26" pos:column="49">0<pos:position pos:line="26" pos:column="50"/></literal></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">c<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">==<pos:position pos:line="27" pos:column="13"/></operator> <literal type="char" pos:line="27" pos:column="14">'^'<pos:position pos:line="27" pos:column="17"/></literal></expr>)<pos:position pos:line="27" pos:column="18"/></condition><then pos:line="27" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="28" pos:column="9">compargs<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">circf<pos:position pos:line="28" pos:column="24"/></name></name><operator pos:line="28" pos:column="24">++<pos:position pos:line="28" pos:column="26"/></operator></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt></block></then>
    <else pos:line="29" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="9">UNGETC<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><name pos:line="30" pos:column="16">c<pos:position pos:line="30" pos:column="17"/></name></expr></argument>)<pos:position pos:line="30" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="19"/></expr_stmt></block></else></if>
    <while pos:line="31" pos:column="5">while <condition pos:line="31" pos:column="11">(<expr><literal type="number" pos:line="31" pos:column="12">1<pos:position pos:line="31" pos:column="13"/></literal></expr>)<pos:position pos:line="31" pos:column="14"/></condition> <block pos:line="31" pos:column="15">{
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">ep<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">&gt;=<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="19">endbuf<pos:position pos:line="32" pos:column="25"/></name></expr>)<pos:position pos:line="32" pos:column="26"/></condition><then pos:line="32" pos:column="26">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="13">SEDCOMPILE_ERROR<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><literal type="number" pos:line="33" pos:column="30">50<pos:position pos:line="33" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="34" pos:column="9">c<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <call><name pos:line="34" pos:column="13">GETC<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">()<pos:position pos:line="34" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="20"/></expr_stmt>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">c<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">!=<pos:position pos:line="35" pos:column="17"/></operator> <literal type="char" pos:line="35" pos:column="18">'*'<pos:position pos:line="35" pos:column="21"/></literal> <operator pos:line="35" pos:column="22">&amp;&amp;<pos:position pos:line="35" pos:column="32"/></operator> <operator pos:line="35" pos:column="25">(<pos:position pos:line="35" pos:column="26"/></operator><operator pos:line="35" pos:column="26">(<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">c<pos:position pos:line="35" pos:column="28"/></name> <operator pos:line="35" pos:column="29">!=<pos:position pos:line="35" pos:column="31"/></operator> <literal type="char" pos:line="35" pos:column="32">'\\'<pos:position pos:line="35" pos:column="36"/></literal><operator pos:line="35" pos:column="36">)<pos:position pos:line="35" pos:column="37"/></operator> <operator pos:line="35" pos:column="38">||<pos:position pos:line="35" pos:column="40"/></operator> <operator pos:line="35" pos:column="41">(<pos:position pos:line="35" pos:column="42"/></operator><call><name pos:line="35" pos:column="42">PEEKC<pos:position pos:line="35" pos:column="47"/></name><argument_list pos:line="35" pos:column="47">()<pos:position pos:line="35" pos:column="49"/></argument_list></call> <operator pos:line="35" pos:column="50">!=<pos:position pos:line="35" pos:column="52"/></operator> <literal type="char" pos:line="35" pos:column="53">'{'<pos:position pos:line="35" pos:column="56"/></literal><operator pos:line="35" pos:column="56">)<pos:position pos:line="35" pos:column="57"/></operator><operator pos:line="35" pos:column="57">)<pos:position pos:line="35" pos:column="58"/></operator></expr>)<pos:position pos:line="35" pos:column="59"/></condition><then pos:line="35" pos:column="59">
            <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="13">lastep<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">ep<pos:position pos:line="36" pos:column="24"/></name></expr>;<pos:position pos:line="36" pos:column="25"/></expr_stmt></block></then></if>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">c<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">==<pos:position pos:line="37" pos:column="17"/></operator> <name pos:line="37" pos:column="18">eof<pos:position pos:line="37" pos:column="21"/></name></expr>)<pos:position pos:line="37" pos:column="22"/></condition><then pos:line="37" pos:column="22"> <block pos:line="37" pos:column="23">{
            <expr_stmt><expr><operator pos:line="38" pos:column="13">*<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">ep<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">++<pos:position pos:line="38" pos:column="18"/></operator> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <name pos:line="38" pos:column="21">CCEOF<pos:position pos:line="38" pos:column="26"/></name></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
            <if pos:line="39" pos:column="13">if <condition pos:line="39" pos:column="16">(<expr><name pos:line="39" pos:column="17">bracketp<pos:position pos:line="39" pos:column="25"/></name> <operator pos:line="39" pos:column="26">!=<pos:position pos:line="39" pos:column="28"/></operator> <name pos:line="39" pos:column="29">bracket<pos:position pos:line="39" pos:column="36"/></name></expr>)<pos:position pos:line="39" pos:column="37"/></condition><then pos:line="39" pos:column="37">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="17">SEDCOMPILE_ERROR<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><literal type="number" pos:line="40" pos:column="34">42<pos:position pos:line="40" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name><name pos:line="41" pos:column="13">commands<pos:position pos:line="41" pos:column="21"/></name><operator pos:line="41" pos:column="21">-&gt;<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="23">cp<pos:position pos:line="41" pos:column="25"/></name></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <name pos:line="41" pos:column="28">sp<pos:position pos:line="41" pos:column="30"/></name></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt>
            <goto pos:line="42" pos:column="13">goto <name pos:line="42" pos:column="18">out<pos:position pos:line="42" pos:column="21"/></name>;<pos:position pos:line="42" pos:column="22"/></goto>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>
        <switch pos:line="44" pos:column="9">switch <condition pos:line="44" pos:column="16">(<expr><name pos:line="44" pos:column="17">c<pos:position pos:line="44" pos:column="18"/></name></expr>)<pos:position pos:line="44" pos:column="19"/></condition> <block pos:line="44" pos:column="20">{

        <case pos:line="46" pos:column="9">case <expr><literal type="char" pos:line="46" pos:column="14">'.'<pos:position pos:line="46" pos:column="17"/></literal></expr>:<pos:position pos:line="46" pos:column="18"/></case>
            <expr_stmt><expr><operator pos:line="47" pos:column="13">*<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">ep<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">++<pos:position pos:line="47" pos:column="18"/></operator> <operator pos:line="47" pos:column="19">=<pos:position pos:line="47" pos:column="20"/></operator> <name pos:line="47" pos:column="21">CDOT<pos:position pos:line="47" pos:column="25"/></name></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt>
            <continue pos:line="48" pos:column="13">continue;<pos:position pos:line="48" pos:column="22"/></continue>

        <case pos:line="50" pos:column="9">case <expr><literal type="char" pos:line="50" pos:column="14">'\n'<pos:position pos:line="50" pos:column="18"/></literal></expr>:<pos:position pos:line="50" pos:column="19"/></case>
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">SEDCOMPILE_ERROR<pos:position pos:line="51" pos:column="29"/></name><argument_list pos:line="51" pos:column="29">(<argument><expr><literal type="number" pos:line="51" pos:column="30">36<pos:position pos:line="51" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="52" pos:column="13">commands<pos:position pos:line="52" pos:column="21"/></name><operator pos:line="52" pos:column="21">-&gt;<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="23">cp<pos:position pos:line="52" pos:column="25"/></name></name> <operator pos:line="52" pos:column="26">=<pos:position pos:line="52" pos:column="27"/></operator> <name pos:line="52" pos:column="28">sp<pos:position pos:line="52" pos:column="30"/></name></expr>;<pos:position pos:line="52" pos:column="31"/></expr_stmt>
            <goto pos:line="53" pos:column="13">goto <name pos:line="53" pos:column="18">out<pos:position pos:line="53" pos:column="21"/></name>;<pos:position pos:line="53" pos:column="22"/></goto>
        <case pos:line="54" pos:column="9">case <expr><literal type="char" pos:line="54" pos:column="14">'*'<pos:position pos:line="54" pos:column="17"/></literal></expr>:<pos:position pos:line="54" pos:column="18"/></case>
            <if pos:line="55" pos:column="13">if <condition pos:line="55" pos:column="16">(<expr><name pos:line="55" pos:column="17">lastep<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">==<pos:position pos:line="55" pos:column="26"/></operator> <literal type="number" pos:line="55" pos:column="27">0<pos:position pos:line="55" pos:column="28"/></literal> <operator pos:line="55" pos:column="29">||<pos:position pos:line="55" pos:column="31"/></operator> <operator pos:line="55" pos:column="32">*<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="33">lastep<pos:position pos:line="55" pos:column="39"/></name> <operator pos:line="55" pos:column="40">==<pos:position pos:line="55" pos:column="42"/></operator> <name pos:line="55" pos:column="43">CBRA<pos:position pos:line="55" pos:column="47"/></name> <operator pos:line="55" pos:column="48">||<pos:position pos:line="55" pos:column="50"/></operator> <operator pos:line="55" pos:column="51">*<pos:position pos:line="55" pos:column="52"/></operator><name pos:line="55" pos:column="52">lastep<pos:position pos:line="55" pos:column="58"/></name> <operator pos:line="55" pos:column="59">==<pos:position pos:line="55" pos:column="61"/></operator> <name pos:line="55" pos:column="62">CKET<pos:position pos:line="55" pos:column="66"/></name></expr>)<pos:position pos:line="55" pos:column="67"/></condition><then pos:line="55" pos:column="67">
                <block type="pseudo"><goto pos:line="56" pos:column="17">goto <name pos:line="56" pos:column="22">defchar<pos:position pos:line="56" pos:column="29"/></name>;<pos:position pos:line="56" pos:column="30"/></goto></block></then></if>
            <expr_stmt><expr><operator pos:line="57" pos:column="13">*<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">lastep<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">|=<pos:position pos:line="57" pos:column="23"/></operator> <name pos:line="57" pos:column="24">STAR<pos:position pos:line="57" pos:column="28"/></name></expr>;<pos:position pos:line="57" pos:column="29"/></expr_stmt>
            <continue pos:line="58" pos:column="13">continue;<pos:position pos:line="58" pos:column="22"/></continue>

        <case pos:line="60" pos:column="9">case <expr><literal type="char" pos:line="60" pos:column="14">'$'<pos:position pos:line="60" pos:column="17"/></literal></expr>:<pos:position pos:line="60" pos:column="18"/></case>
            <if pos:line="61" pos:column="13">if <condition pos:line="61" pos:column="16">(<expr><call><name pos:line="61" pos:column="17">PEEKC<pos:position pos:line="61" pos:column="22"/></name><argument_list pos:line="61" pos:column="22">()<pos:position pos:line="61" pos:column="24"/></argument_list></call> <operator pos:line="61" pos:column="25">!=<pos:position pos:line="61" pos:column="27"/></operator> <name pos:line="61" pos:column="28">eof<pos:position pos:line="61" pos:column="31"/></name> <operator pos:line="61" pos:column="32">&amp;&amp;<pos:position pos:line="61" pos:column="42"/></operator> <call><name pos:line="61" pos:column="35">PEEKC<pos:position pos:line="61" pos:column="40"/></name><argument_list pos:line="61" pos:column="40">()<pos:position pos:line="61" pos:column="42"/></argument_list></call> <operator pos:line="61" pos:column="43">!=<pos:position pos:line="61" pos:column="45"/></operator> <literal type="char" pos:line="61" pos:column="46">'\n'<pos:position pos:line="61" pos:column="50"/></literal></expr>)<pos:position pos:line="61" pos:column="51"/></condition><then pos:line="61" pos:column="51">
                <block type="pseudo"><goto pos:line="62" pos:column="17">goto <name pos:line="62" pos:column="22">defchar<pos:position pos:line="62" pos:column="29"/></name>;<pos:position pos:line="62" pos:column="30"/></goto></block></then></if>
            <expr_stmt><expr><operator pos:line="63" pos:column="13">*<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="14">ep<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">++<pos:position pos:line="63" pos:column="18"/></operator> <operator pos:line="63" pos:column="19">=<pos:position pos:line="63" pos:column="20"/></operator> <name pos:line="63" pos:column="21">CDOL<pos:position pos:line="63" pos:column="25"/></name></expr>;<pos:position pos:line="63" pos:column="26"/></expr_stmt>
            <continue pos:line="64" pos:column="13">continue;<pos:position pos:line="64" pos:column="22"/></continue>

        <case pos:line="66" pos:column="9">case <expr><literal type="char" pos:line="66" pos:column="14">'['<pos:position pos:line="66" pos:column="17"/></literal></expr>:<pos:position pos:line="66" pos:column="18"/></case>
            <if pos:line="67" pos:column="13">if <condition pos:line="67" pos:column="16">(<expr><operator pos:line="67" pos:column="17">&amp;<pos:position pos:line="67" pos:column="22"/></operator><name><name pos:line="67" pos:column="18">ep<pos:position pos:line="67" pos:column="20"/></name><index pos:line="67" pos:column="20">[<expr><literal type="number" pos:line="67" pos:column="21">17<pos:position pos:line="67" pos:column="23"/></literal></expr>]<pos:position pos:line="67" pos:column="24"/></index></name> <operator pos:line="67" pos:column="25">&gt;=<pos:position pos:line="67" pos:column="30"/></operator> <name pos:line="67" pos:column="28">endbuf<pos:position pos:line="67" pos:column="34"/></name></expr>)<pos:position pos:line="67" pos:column="35"/></condition><then pos:line="67" pos:column="35">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="17">SEDCOMPILE_ERROR<pos:position pos:line="68" pos:column="33"/></name><argument_list pos:line="68" pos:column="33">(<argument><expr><literal type="number" pos:line="68" pos:column="34">50<pos:position pos:line="68" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="38"/></expr_stmt></block></then></if>

            <expr_stmt><expr><operator pos:line="70" pos:column="13">*<pos:position pos:line="70" pos:column="14"/></operator><name pos:line="70" pos:column="14">ep<pos:position pos:line="70" pos:column="16"/></name><operator pos:line="70" pos:column="16">++<pos:position pos:line="70" pos:column="18"/></operator> <operator pos:line="70" pos:column="19">=<pos:position pos:line="70" pos:column="20"/></operator> <name pos:line="70" pos:column="21">CCL<pos:position pos:line="70" pos:column="24"/></name></expr>;<pos:position pos:line="70" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name pos:line="71" pos:column="13">lc<pos:position pos:line="71" pos:column="15"/></name> <operator pos:line="71" pos:column="16">=<pos:position pos:line="71" pos:column="17"/></operator> <literal type="number" pos:line="71" pos:column="18">0<pos:position pos:line="71" pos:column="19"/></literal></expr>;<pos:position pos:line="71" pos:column="20"/></expr_stmt>
            <for pos:line="72" pos:column="13">for <control pos:line="72" pos:column="17">(<init><expr><name pos:line="72" pos:column="18">i<pos:position pos:line="72" pos:column="19"/></name> <operator pos:line="72" pos:column="20">=<pos:position pos:line="72" pos:column="21"/></operator> <literal type="number" pos:line="72" pos:column="22">0<pos:position pos:line="72" pos:column="23"/></literal></expr>;<pos:position pos:line="72" pos:column="24"/></init> <condition><expr><name pos:line="72" pos:column="25">i<pos:position pos:line="72" pos:column="26"/></name> <operator pos:line="72" pos:column="27">&lt;<pos:position pos:line="72" pos:column="31"/></operator> <literal type="number" pos:line="72" pos:column="29">16<pos:position pos:line="72" pos:column="31"/></literal></expr>;<pos:position pos:line="72" pos:column="32"/></condition> <incr><expr><name pos:line="72" pos:column="33">i<pos:position pos:line="72" pos:column="34"/></name><operator pos:line="72" pos:column="34">++<pos:position pos:line="72" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="72" pos:column="37"/></control>
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="73" pos:column="17">ep<pos:position pos:line="73" pos:column="19"/></name><index pos:line="73" pos:column="19">[<expr><name pos:line="73" pos:column="20">i<pos:position pos:line="73" pos:column="21"/></name></expr>]<pos:position pos:line="73" pos:column="22"/></index></name> <operator pos:line="73" pos:column="23">=<pos:position pos:line="73" pos:column="24"/></operator> <literal type="number" pos:line="73" pos:column="25">0<pos:position pos:line="73" pos:column="26"/></literal></expr>;<pos:position pos:line="73" pos:column="27"/></expr_stmt></block></for>

            <expr_stmt><expr><name pos:line="75" pos:column="13">neg<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">=<pos:position pos:line="75" pos:column="18"/></operator> <literal type="number" pos:line="75" pos:column="19">0<pos:position pos:line="75" pos:column="20"/></literal></expr>;<pos:position pos:line="75" pos:column="21"/></expr_stmt>
            <if pos:line="76" pos:column="13">if <condition pos:line="76" pos:column="16">(<expr><operator pos:line="76" pos:column="17">(<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="18">c<pos:position pos:line="76" pos:column="19"/></name> <operator pos:line="76" pos:column="20">=<pos:position pos:line="76" pos:column="21"/></operator> <call><name pos:line="76" pos:column="22">GETC<pos:position pos:line="76" pos:column="26"/></name><argument_list pos:line="76" pos:column="26">()<pos:position pos:line="76" pos:column="28"/></argument_list></call><operator pos:line="76" pos:column="28">)<pos:position pos:line="76" pos:column="29"/></operator> <operator pos:line="76" pos:column="30">==<pos:position pos:line="76" pos:column="32"/></operator> <literal type="char" pos:line="76" pos:column="33">'^'<pos:position pos:line="76" pos:column="36"/></literal></expr>)<pos:position pos:line="76" pos:column="37"/></condition><then pos:line="76" pos:column="37"> <block pos:line="76" pos:column="38">{
                <expr_stmt><expr><name pos:line="77" pos:column="17">neg<pos:position pos:line="77" pos:column="20"/></name> <operator pos:line="77" pos:column="21">=<pos:position pos:line="77" pos:column="22"/></operator> <literal type="number" pos:line="77" pos:column="23">1<pos:position pos:line="77" pos:column="24"/></literal></expr>;<pos:position pos:line="77" pos:column="25"/></expr_stmt>
                <expr_stmt><expr><name pos:line="78" pos:column="17">c<pos:position pos:line="78" pos:column="18"/></name> <operator pos:line="78" pos:column="19">=<pos:position pos:line="78" pos:column="20"/></operator> <call><name pos:line="78" pos:column="21">GETC<pos:position pos:line="78" pos:column="25"/></name><argument_list pos:line="78" pos:column="25">()<pos:position pos:line="78" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="79" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="80" pos:column="13">iflag<pos:position pos:line="80" pos:column="18"/></name> <operator pos:line="80" pos:column="19">=<pos:position pos:line="80" pos:column="20"/></operator> <literal type="number" pos:line="80" pos:column="21">1<pos:position pos:line="80" pos:column="22"/></literal></expr>;<pos:position pos:line="80" pos:column="23"/></expr_stmt>
            <do pos:line="81" pos:column="13">do <block pos:line="81" pos:column="16">{
                <expr_stmt><expr><name pos:line="82" pos:column="17">c<pos:position pos:line="82" pos:column="18"/></name> <operator pos:line="82" pos:column="19">&amp;=<pos:position pos:line="82" pos:column="25"/></operator> <literal type="number" pos:line="82" pos:column="22">0377<pos:position pos:line="82" pos:column="26"/></literal></expr>;<pos:position pos:line="82" pos:column="27"/></expr_stmt>
                <if pos:line="83" pos:column="17">if <condition pos:line="83" pos:column="20">(<expr><name pos:line="83" pos:column="21">c<pos:position pos:line="83" pos:column="22"/></name> <operator pos:line="83" pos:column="23">==<pos:position pos:line="83" pos:column="25"/></operator> <literal type="char" pos:line="83" pos:column="26">'\0'<pos:position pos:line="83" pos:column="30"/></literal> <operator pos:line="83" pos:column="31">||<pos:position pos:line="83" pos:column="33"/></operator> <name pos:line="83" pos:column="34">c<pos:position pos:line="83" pos:column="35"/></name> <operator pos:line="83" pos:column="36">==<pos:position pos:line="83" pos:column="38"/></operator> <literal type="char" pos:line="83" pos:column="39">'\n'<pos:position pos:line="83" pos:column="43"/></literal></expr>)<pos:position pos:line="83" pos:column="44"/></condition><then pos:line="83" pos:column="44">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="84" pos:column="21">SEDCOMPILE_ERROR<pos:position pos:line="84" pos:column="37"/></name><argument_list pos:line="84" pos:column="37">(<argument><expr><literal type="number" pos:line="84" pos:column="38">49<pos:position pos:line="84" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="42"/></expr_stmt></block></then></if>
                <if pos:line="85" pos:column="17">if <condition pos:line="85" pos:column="20">(<expr><operator pos:line="85" pos:column="21">(<pos:position pos:line="85" pos:column="22"/></operator><name pos:line="85" pos:column="22">c<pos:position pos:line="85" pos:column="23"/></name> <operator pos:line="85" pos:column="24">&amp;<pos:position pos:line="85" pos:column="29"/></operator> <literal type="number" pos:line="85" pos:column="26">0200<pos:position pos:line="85" pos:column="30"/></literal><operator pos:line="85" pos:column="30">)<pos:position pos:line="85" pos:column="31"/></operator> <operator pos:line="85" pos:column="32">&amp;&amp;<pos:position pos:line="85" pos:column="42"/></operator> <name pos:line="85" pos:column="35">iflag<pos:position pos:line="85" pos:column="40"/></name></expr>)<pos:position pos:line="85" pos:column="41"/></condition><then pos:line="85" pos:column="41"> <block pos:line="85" pos:column="42">{
                    <expr_stmt><expr><name pos:line="86" pos:column="21">iflag<pos:position pos:line="86" pos:column="26"/></name> <operator pos:line="86" pos:column="27">=<pos:position pos:line="86" pos:column="28"/></operator> <literal type="number" pos:line="86" pos:column="29">0<pos:position pos:line="86" pos:column="30"/></literal></expr>;<pos:position pos:line="86" pos:column="31"/></expr_stmt>
                    <if pos:line="87" pos:column="21">if <condition pos:line="87" pos:column="24">(<expr><operator pos:line="87" pos:column="25">&amp;<pos:position pos:line="87" pos:column="30"/></operator><name><name pos:line="87" pos:column="26">ep<pos:position pos:line="87" pos:column="28"/></name><index pos:line="87" pos:column="28">[<expr><literal type="number" pos:line="87" pos:column="29">32<pos:position pos:line="87" pos:column="31"/></literal></expr>]<pos:position pos:line="87" pos:column="32"/></index></name> <operator pos:line="87" pos:column="33">&gt;=<pos:position pos:line="87" pos:column="38"/></operator> <name pos:line="87" pos:column="36">endbuf<pos:position pos:line="87" pos:column="42"/></name></expr>)<pos:position pos:line="87" pos:column="43"/></condition><then pos:line="87" pos:column="43">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="25">SEDCOMPILE_ERROR<pos:position pos:line="88" pos:column="41"/></name><argument_list pos:line="88" pos:column="41">(<argument><expr><literal type="number" pos:line="88" pos:column="42">50<pos:position pos:line="88" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="46"/></expr_stmt></block></then></if>
                    <expr_stmt><expr><name><name pos:line="89" pos:column="21">ep<pos:position pos:line="89" pos:column="23"/></name><index pos:line="89" pos:column="23">[<expr><operator pos:line="89" pos:column="24">-<pos:position pos:line="89" pos:column="25"/></operator><literal type="number" pos:line="89" pos:column="25">1<pos:position pos:line="89" pos:column="26"/></literal></expr>]<pos:position pos:line="89" pos:column="27"/></index></name> <operator pos:line="89" pos:column="28">=<pos:position pos:line="89" pos:column="29"/></operator> <name pos:line="89" pos:column="30">CXCL<pos:position pos:line="89" pos:column="34"/></name></expr>;<pos:position pos:line="89" pos:column="35"/></expr_stmt>
                    <for pos:line="90" pos:column="21">for <control pos:line="90" pos:column="25">(<init><expr><name pos:line="90" pos:column="26">i<pos:position pos:line="90" pos:column="27"/></name> <operator pos:line="90" pos:column="28">=<pos:position pos:line="90" pos:column="29"/></operator> <literal type="number" pos:line="90" pos:column="30">16<pos:position pos:line="90" pos:column="32"/></literal></expr>;<pos:position pos:line="90" pos:column="33"/></init> <condition><expr><name pos:line="90" pos:column="34">i<pos:position pos:line="90" pos:column="35"/></name> <operator pos:line="90" pos:column="36">&lt;<pos:position pos:line="90" pos:column="40"/></operator> <literal type="number" pos:line="90" pos:column="38">32<pos:position pos:line="90" pos:column="40"/></literal></expr>;<pos:position pos:line="90" pos:column="41"/></condition> <incr><expr><name pos:line="90" pos:column="42">i<pos:position pos:line="90" pos:column="43"/></name><operator pos:line="90" pos:column="43">++<pos:position pos:line="90" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="90" pos:column="46"/></control>
                        <block type="pseudo"><expr_stmt><expr><name><name pos:line="91" pos:column="25">ep<pos:position pos:line="91" pos:column="27"/></name><index pos:line="91" pos:column="27">[<expr><name pos:line="91" pos:column="28">i<pos:position pos:line="91" pos:column="29"/></name></expr>]<pos:position pos:line="91" pos:column="30"/></index></name> <operator pos:line="91" pos:column="31">=<pos:position pos:line="91" pos:column="32"/></operator> <literal type="number" pos:line="91" pos:column="33">0<pos:position pos:line="91" pos:column="34"/></literal></expr>;<pos:position pos:line="91" pos:column="35"/></expr_stmt></block></for>
                }<pos:position pos:line="92" pos:column="18"/></block></then></if>
                <if pos:line="93" pos:column="17">if <condition pos:line="93" pos:column="20">(<expr><name pos:line="93" pos:column="21">c<pos:position pos:line="93" pos:column="22"/></name> <operator pos:line="93" pos:column="23">==<pos:position pos:line="93" pos:column="25"/></operator> <literal type="char" pos:line="93" pos:column="26">'-'<pos:position pos:line="93" pos:column="29"/></literal> <operator pos:line="93" pos:column="30">&amp;&amp;<pos:position pos:line="93" pos:column="40"/></operator> <name pos:line="93" pos:column="33">lc<pos:position pos:line="93" pos:column="35"/></name> <operator pos:line="93" pos:column="36">!=<pos:position pos:line="93" pos:column="38"/></operator> <literal type="number" pos:line="93" pos:column="39">0<pos:position pos:line="93" pos:column="40"/></literal></expr>)<pos:position pos:line="93" pos:column="41"/></condition><then pos:line="93" pos:column="41"> <block pos:line="93" pos:column="42">{
                    <if pos:line="94" pos:column="21">if <condition pos:line="94" pos:column="24">(<expr><operator pos:line="94" pos:column="25">(<pos:position pos:line="94" pos:column="26"/></operator><name pos:line="94" pos:column="26">c<pos:position pos:line="94" pos:column="27"/></name> <operator pos:line="94" pos:column="28">=<pos:position pos:line="94" pos:column="29"/></operator> <call><name pos:line="94" pos:column="30">GETC<pos:position pos:line="94" pos:column="34"/></name><argument_list pos:line="94" pos:column="34">()<pos:position pos:line="94" pos:column="36"/></argument_list></call><operator pos:line="94" pos:column="36">)<pos:position pos:line="94" pos:column="37"/></operator> <operator pos:line="94" pos:column="38">==<pos:position pos:line="94" pos:column="40"/></operator> <literal type="char" pos:line="94" pos:column="41">']'<pos:position pos:line="94" pos:column="44"/></literal></expr>)<pos:position pos:line="94" pos:column="45"/></condition><then pos:line="94" pos:column="45"> <block pos:line="94" pos:column="46">{
                        <expr_stmt><expr><call><name pos:line="95" pos:column="25">PLACE<pos:position pos:line="95" pos:column="30"/></name><argument_list pos:line="95" pos:column="30">(<argument><expr><literal type="char" pos:line="95" pos:column="31">'-'<pos:position pos:line="95" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="36"/></expr_stmt>
                        <break pos:line="96" pos:column="25">break;<pos:position pos:line="96" pos:column="31"/></break>
                    }<pos:position pos:line="97" pos:column="22"/></block></then></if>
                    <if pos:line="98" pos:column="21">if <condition pos:line="98" pos:column="24">(<expr><operator pos:line="98" pos:column="25">(<pos:position pos:line="98" pos:column="26"/></operator><name pos:line="98" pos:column="26">c<pos:position pos:line="98" pos:column="27"/></name> <operator pos:line="98" pos:column="28">&amp;<pos:position pos:line="98" pos:column="33"/></operator> <literal type="number" pos:line="98" pos:column="30">0200<pos:position pos:line="98" pos:column="34"/></literal><operator pos:line="98" pos:column="34">)<pos:position pos:line="98" pos:column="35"/></operator> <operator pos:line="98" pos:column="36">&amp;&amp;<pos:position pos:line="98" pos:column="46"/></operator> <name pos:line="98" pos:column="39">iflag<pos:position pos:line="98" pos:column="44"/></name></expr>)<pos:position pos:line="98" pos:column="45"/></condition><then pos:line="98" pos:column="45"> <block pos:line="98" pos:column="46">{
                        <expr_stmt><expr><name pos:line="99" pos:column="25">iflag<pos:position pos:line="99" pos:column="30"/></name> <operator pos:line="99" pos:column="31">=<pos:position pos:line="99" pos:column="32"/></operator> <literal type="number" pos:line="99" pos:column="33">0<pos:position pos:line="99" pos:column="34"/></literal></expr>;<pos:position pos:line="99" pos:column="35"/></expr_stmt>
                        <if pos:line="100" pos:column="25">if <condition pos:line="100" pos:column="28">(<expr><operator pos:line="100" pos:column="29">&amp;<pos:position pos:line="100" pos:column="34"/></operator><name><name pos:line="100" pos:column="30">ep<pos:position pos:line="100" pos:column="32"/></name><index pos:line="100" pos:column="32">[<expr><literal type="number" pos:line="100" pos:column="33">32<pos:position pos:line="100" pos:column="35"/></literal></expr>]<pos:position pos:line="100" pos:column="36"/></index></name> <operator pos:line="100" pos:column="37">&gt;=<pos:position pos:line="100" pos:column="42"/></operator> <name pos:line="100" pos:column="40">endbuf<pos:position pos:line="100" pos:column="46"/></name></expr>)<pos:position pos:line="100" pos:column="47"/></condition><then pos:line="100" pos:column="47">
                            <block type="pseudo"><expr_stmt><expr><call><name pos:line="101" pos:column="29">SEDCOMPILE_ERROR<pos:position pos:line="101" pos:column="45"/></name><argument_list pos:line="101" pos:column="45">(<argument><expr><literal type="number" pos:line="101" pos:column="46">50<pos:position pos:line="101" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="50"/></expr_stmt></block></then></if>
                        <expr_stmt><expr><name><name pos:line="102" pos:column="25">ep<pos:position pos:line="102" pos:column="27"/></name><index pos:line="102" pos:column="27">[<expr><operator pos:line="102" pos:column="28">-<pos:position pos:line="102" pos:column="29"/></operator><literal type="number" pos:line="102" pos:column="29">1<pos:position pos:line="102" pos:column="30"/></literal></expr>]<pos:position pos:line="102" pos:column="31"/></index></name> <operator pos:line="102" pos:column="32">=<pos:position pos:line="102" pos:column="33"/></operator> <name pos:line="102" pos:column="34">CXCL<pos:position pos:line="102" pos:column="38"/></name></expr>;<pos:position pos:line="102" pos:column="39"/></expr_stmt>
                        <for pos:line="103" pos:column="25">for <control pos:line="103" pos:column="29">(<init><expr><name pos:line="103" pos:column="30">i<pos:position pos:line="103" pos:column="31"/></name> <operator pos:line="103" pos:column="32">=<pos:position pos:line="103" pos:column="33"/></operator> <literal type="number" pos:line="103" pos:column="34">16<pos:position pos:line="103" pos:column="36"/></literal></expr>;<pos:position pos:line="103" pos:column="37"/></init> <condition><expr><name pos:line="103" pos:column="38">i<pos:position pos:line="103" pos:column="39"/></name> <operator pos:line="103" pos:column="40">&lt;<pos:position pos:line="103" pos:column="44"/></operator> <literal type="number" pos:line="103" pos:column="42">32<pos:position pos:line="103" pos:column="44"/></literal></expr>;<pos:position pos:line="103" pos:column="45"/></condition> <incr><expr><name pos:line="103" pos:column="46">i<pos:position pos:line="103" pos:column="47"/></name><operator pos:line="103" pos:column="47">++<pos:position pos:line="103" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="103" pos:column="50"/></control>
                            <block type="pseudo"><expr_stmt><expr><name><name pos:line="104" pos:column="29">ep<pos:position pos:line="104" pos:column="31"/></name><index pos:line="104" pos:column="31">[<expr><name pos:line="104" pos:column="32">i<pos:position pos:line="104" pos:column="33"/></name></expr>]<pos:position pos:line="104" pos:column="34"/></index></name> <operator pos:line="104" pos:column="35">=<pos:position pos:line="104" pos:column="36"/></operator> <literal type="number" pos:line="104" pos:column="37">0<pos:position pos:line="104" pos:column="38"/></literal></expr>;<pos:position pos:line="104" pos:column="39"/></expr_stmt></block></for>
                    }<pos:position pos:line="105" pos:column="22"/></block></then></if>
                    <while pos:line="106" pos:column="21">while <condition pos:line="106" pos:column="27">(<expr><name pos:line="106" pos:column="28">lc<pos:position pos:line="106" pos:column="30"/></name> <operator pos:line="106" pos:column="31">&lt;<pos:position pos:line="106" pos:column="35"/></operator> <name pos:line="106" pos:column="33">c<pos:position pos:line="106" pos:column="34"/></name></expr>)<pos:position pos:line="106" pos:column="35"/></condition> <block pos:line="106" pos:column="36">{
                        <expr_stmt><expr><call><name pos:line="107" pos:column="25">PLACE<pos:position pos:line="107" pos:column="30"/></name><argument_list pos:line="107" pos:column="30">(<argument><expr><name pos:line="107" pos:column="31">lc<pos:position pos:line="107" pos:column="33"/></name></expr></argument>)<pos:position pos:line="107" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="35"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="108" pos:column="25">lc<pos:position pos:line="108" pos:column="27"/></name><operator pos:line="108" pos:column="27">++<pos:position pos:line="108" pos:column="29"/></operator></expr>;<pos:position pos:line="108" pos:column="30"/></expr_stmt>
                    }<pos:position pos:line="109" pos:column="22"/></block></while>
                }<pos:position pos:line="110" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="111" pos:column="17">lc<pos:position pos:line="111" pos:column="19"/></name> <operator pos:line="111" pos:column="20">=<pos:position pos:line="111" pos:column="21"/></operator> <name pos:line="111" pos:column="22">c<pos:position pos:line="111" pos:column="23"/></name></expr>;<pos:position pos:line="111" pos:column="24"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="112" pos:column="17">PLACE<pos:position pos:line="112" pos:column="22"/></name><argument_list pos:line="112" pos:column="22">(<argument><expr><name pos:line="112" pos:column="23">c<pos:position pos:line="112" pos:column="24"/></name></expr></argument>)<pos:position pos:line="112" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="113" pos:column="14"/></block> while <condition pos:line="113" pos:column="21">(<expr><operator pos:line="113" pos:column="22">(<pos:position pos:line="113" pos:column="23"/></operator><name pos:line="113" pos:column="23">c<pos:position pos:line="113" pos:column="24"/></name> <operator pos:line="113" pos:column="25">=<pos:position pos:line="113" pos:column="26"/></operator> <call><name pos:line="113" pos:column="27">GETC<pos:position pos:line="113" pos:column="31"/></name><argument_list pos:line="113" pos:column="31">()<pos:position pos:line="113" pos:column="33"/></argument_list></call><operator pos:line="113" pos:column="33">)<pos:position pos:line="113" pos:column="34"/></operator> <operator pos:line="113" pos:column="35">!=<pos:position pos:line="113" pos:column="37"/></operator> <literal type="char" pos:line="113" pos:column="38">']'<pos:position pos:line="113" pos:column="41"/></literal></expr>)<pos:position pos:line="113" pos:column="42"/></condition>;<pos:position pos:line="113" pos:column="43"/></do>

            <if pos:line="115" pos:column="13">if <condition pos:line="115" pos:column="16">(<expr><name pos:line="115" pos:column="17">iflag<pos:position pos:line="115" pos:column="22"/></name></expr>)<pos:position pos:line="115" pos:column="23"/></condition><then pos:line="115" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><name pos:line="116" pos:column="17">iflag<pos:position pos:line="116" pos:column="22"/></name> <operator pos:line="116" pos:column="23">=<pos:position pos:line="116" pos:column="24"/></operator> <literal type="number" pos:line="116" pos:column="25">16<pos:position pos:line="116" pos:column="27"/></literal></expr>;<pos:position pos:line="116" pos:column="28"/></expr_stmt></block></then>
            <else pos:line="117" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="118" pos:column="17">iflag<pos:position pos:line="118" pos:column="22"/></name> <operator pos:line="118" pos:column="23">=<pos:position pos:line="118" pos:column="24"/></operator> <literal type="number" pos:line="118" pos:column="25">32<pos:position pos:line="118" pos:column="27"/></literal></expr>;<pos:position pos:line="118" pos:column="28"/></expr_stmt></block></else></if>

            <if pos:line="120" pos:column="13">if <condition pos:line="120" pos:column="16">(<expr><name pos:line="120" pos:column="17">neg<pos:position pos:line="120" pos:column="20"/></name></expr>)<pos:position pos:line="120" pos:column="21"/></condition><then pos:line="120" pos:column="21"> <block pos:line="120" pos:column="22">{
                <if pos:line="121" pos:column="17">if <condition pos:line="121" pos:column="20">(<expr><name pos:line="121" pos:column="21">iflag<pos:position pos:line="121" pos:column="26"/></name> <operator pos:line="121" pos:column="27">==<pos:position pos:line="121" pos:column="29"/></operator> <literal type="number" pos:line="121" pos:column="30">32<pos:position pos:line="121" pos:column="32"/></literal></expr>)<pos:position pos:line="121" pos:column="33"/></condition><then pos:line="121" pos:column="33"> <block pos:line="121" pos:column="34">{
                    <for pos:line="122" pos:column="21">for <control pos:line="122" pos:column="25">(<init><expr><name pos:line="122" pos:column="26">cclcnt<pos:position pos:line="122" pos:column="32"/></name> <operator pos:line="122" pos:column="33">=<pos:position pos:line="122" pos:column="34"/></operator> <literal type="number" pos:line="122" pos:column="35">0<pos:position pos:line="122" pos:column="36"/></literal></expr>;<pos:position pos:line="122" pos:column="37"/></init> <condition><expr><name pos:line="122" pos:column="38">cclcnt<pos:position pos:line="122" pos:column="44"/></name> <operator pos:line="122" pos:column="45">&lt;<pos:position pos:line="122" pos:column="49"/></operator> <name pos:line="122" pos:column="47">iflag<pos:position pos:line="122" pos:column="52"/></name></expr>;<pos:position pos:line="122" pos:column="53"/></condition>
                        <incr><expr><name pos:line="123" pos:column="25">cclcnt<pos:position pos:line="123" pos:column="31"/></name><operator pos:line="123" pos:column="31">++<pos:position pos:line="123" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="123" pos:column="34"/></control>
                        <block type="pseudo"><expr_stmt><expr><name><name pos:line="124" pos:column="25">ep<pos:position pos:line="124" pos:column="27"/></name><index pos:line="124" pos:column="27">[<expr><name pos:line="124" pos:column="28">cclcnt<pos:position pos:line="124" pos:column="34"/></name></expr>]<pos:position pos:line="124" pos:column="35"/></index></name> <operator pos:line="124" pos:column="36">^=<pos:position pos:line="124" pos:column="38"/></operator> <literal type="number" pos:line="124" pos:column="39">0377<pos:position pos:line="124" pos:column="43"/></literal></expr>;<pos:position pos:line="124" pos:column="44"/></expr_stmt></block></for>
                    <expr_stmt><expr><name><name pos:line="125" pos:column="21">ep<pos:position pos:line="125" pos:column="23"/></name><index pos:line="125" pos:column="23">[<expr><literal type="number" pos:line="125" pos:column="24">0<pos:position pos:line="125" pos:column="25"/></literal></expr>]<pos:position pos:line="125" pos:column="26"/></index></name> <operator pos:line="125" pos:column="27">&amp;=<pos:position pos:line="125" pos:column="33"/></operator> <literal type="number" pos:line="125" pos:column="30">0376<pos:position pos:line="125" pos:column="34"/></literal></expr>;<pos:position pos:line="125" pos:column="35"/></expr_stmt>
                }<pos:position pos:line="126" pos:column="18"/></block></then> <else pos:line="126" pos:column="19">else <block pos:line="126" pos:column="24">{
                    <expr_stmt><expr><name><name pos:line="127" pos:column="21">ep<pos:position pos:line="127" pos:column="23"/></name><index pos:line="127" pos:column="23">[<expr><operator pos:line="127" pos:column="24">-<pos:position pos:line="127" pos:column="25"/></operator><literal type="number" pos:line="127" pos:column="25">1<pos:position pos:line="127" pos:column="26"/></literal></expr>]<pos:position pos:line="127" pos:column="27"/></index></name> <operator pos:line="127" pos:column="28">=<pos:position pos:line="127" pos:column="29"/></operator> <name pos:line="127" pos:column="30">NCCL<pos:position pos:line="127" pos:column="34"/></name></expr>;<pos:position pos:line="127" pos:column="35"/></expr_stmt>
                    <comment type="block" pos:line="128" pos:column="21">/* make nulls match so test fails */</comment>
                    <expr_stmt><expr><name><name pos:line="129" pos:column="21">ep<pos:position pos:line="129" pos:column="23"/></name><index pos:line="129" pos:column="23">[<expr><literal type="number" pos:line="129" pos:column="24">0<pos:position pos:line="129" pos:column="25"/></literal></expr>]<pos:position pos:line="129" pos:column="26"/></index></name> <operator pos:line="129" pos:column="27">|=<pos:position pos:line="129" pos:column="29"/></operator> <literal type="number" pos:line="129" pos:column="30">01<pos:position pos:line="129" pos:column="32"/></literal></expr>;<pos:position pos:line="129" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="130" pos:column="18"/></block></else></if>
            }<pos:position pos:line="131" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="133" pos:column="13">ep<pos:position pos:line="133" pos:column="15"/></name> <operator pos:line="133" pos:column="16">+=<pos:position pos:line="133" pos:column="18"/></operator> <name pos:line="133" pos:column="19">iflag<pos:position pos:line="133" pos:column="24"/></name></expr>;<pos:position pos:line="133" pos:column="25"/></expr_stmt>

            <continue pos:line="135" pos:column="13">continue;<pos:position pos:line="135" pos:column="22"/></continue>

        <case pos:line="137" pos:column="9">case <expr><literal type="char" pos:line="137" pos:column="14">'\\'<pos:position pos:line="137" pos:column="18"/></literal></expr>:<pos:position pos:line="137" pos:column="19"/></case>
            <switch pos:line="138" pos:column="13">switch <condition pos:line="138" pos:column="20">(<expr><name pos:line="138" pos:column="21">c<pos:position pos:line="138" pos:column="22"/></name> <operator pos:line="138" pos:column="23">=<pos:position pos:line="138" pos:column="24"/></operator> <call><name pos:line="138" pos:column="25">GETC<pos:position pos:line="138" pos:column="29"/></name><argument_list pos:line="138" pos:column="29">()<pos:position pos:line="138" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="138" pos:column="32"/></condition> <block pos:line="138" pos:column="33">{

            <case pos:line="140" pos:column="13">case <expr><literal type="char" pos:line="140" pos:column="18">'('<pos:position pos:line="140" pos:column="21"/></literal></expr>:<pos:position pos:line="140" pos:column="22"/></case>
                <if pos:line="141" pos:column="17">if <condition pos:line="141" pos:column="20">(<expr><name><name pos:line="141" pos:column="21">compargs<pos:position pos:line="141" pos:column="29"/></name><operator pos:line="141" pos:column="29">-&gt;<pos:position pos:line="141" pos:column="34"/></operator><name pos:line="141" pos:column="31">nbra<pos:position pos:line="141" pos:column="35"/></name></name> <operator pos:line="141" pos:column="36">&gt;=<pos:position pos:line="141" pos:column="41"/></operator> <name pos:line="141" pos:column="39">NBRA<pos:position pos:line="141" pos:column="43"/></name></expr>)<pos:position pos:line="141" pos:column="44"/></condition><then pos:line="141" pos:column="44">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="142" pos:column="21">SEDCOMPILE_ERROR<pos:position pos:line="142" pos:column="37"/></name><argument_list pos:line="142" pos:column="37">(<argument><expr><literal type="number" pos:line="142" pos:column="38">43<pos:position pos:line="142" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="42"/></expr_stmt></block></then></if>
                <expr_stmt><expr><operator pos:line="143" pos:column="17">*<pos:position pos:line="143" pos:column="18"/></operator><name pos:line="143" pos:column="18">bracketp<pos:position pos:line="143" pos:column="26"/></name><operator pos:line="143" pos:column="26">++<pos:position pos:line="143" pos:column="28"/></operator> <operator pos:line="143" pos:column="29">=<pos:position pos:line="143" pos:column="30"/></operator> <name><name pos:line="143" pos:column="31">compargs<pos:position pos:line="143" pos:column="39"/></name><operator pos:line="143" pos:column="39">-&gt;<pos:position pos:line="143" pos:column="44"/></operator><name pos:line="143" pos:column="41">nbra<pos:position pos:line="143" pos:column="45"/></name></name></expr>;<pos:position pos:line="143" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="144" pos:column="17">*<pos:position pos:line="144" pos:column="18"/></operator><name pos:line="144" pos:column="18">ep<pos:position pos:line="144" pos:column="20"/></name><operator pos:line="144" pos:column="20">++<pos:position pos:line="144" pos:column="22"/></operator> <operator pos:line="144" pos:column="23">=<pos:position pos:line="144" pos:column="24"/></operator> <name pos:line="144" pos:column="25">CBRA<pos:position pos:line="144" pos:column="29"/></name></expr>;<pos:position pos:line="144" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="145" pos:column="17">*<pos:position pos:line="145" pos:column="18"/></operator><name pos:line="145" pos:column="18">ep<pos:position pos:line="145" pos:column="20"/></name><operator pos:line="145" pos:column="20">++<pos:position pos:line="145" pos:column="22"/></operator> <operator pos:line="145" pos:column="23">=<pos:position pos:line="145" pos:column="24"/></operator> <name><name pos:line="145" pos:column="25">compargs<pos:position pos:line="145" pos:column="33"/></name><operator pos:line="145" pos:column="33">-&gt;<pos:position pos:line="145" pos:column="38"/></operator><name pos:line="145" pos:column="35">nbra<pos:position pos:line="145" pos:column="39"/></name></name><operator pos:line="145" pos:column="39">++<pos:position pos:line="145" pos:column="41"/></operator></expr>;<pos:position pos:line="145" pos:column="42"/></expr_stmt>
                <continue pos:line="146" pos:column="17">continue;<pos:position pos:line="146" pos:column="26"/></continue>

            <case pos:line="148" pos:column="13">case <expr><literal type="char" pos:line="148" pos:column="18">')'<pos:position pos:line="148" pos:column="21"/></literal></expr>:<pos:position pos:line="148" pos:column="22"/></case>
                <if pos:line="149" pos:column="17">if <condition pos:line="149" pos:column="20">(<expr><name pos:line="149" pos:column="21">bracketp<pos:position pos:line="149" pos:column="29"/></name> <operator pos:line="149" pos:column="30">&lt;=<pos:position pos:line="149" pos:column="35"/></operator> <name pos:line="149" pos:column="33">bracket<pos:position pos:line="149" pos:column="40"/></name></expr>)<pos:position pos:line="149" pos:column="41"/></condition><then pos:line="149" pos:column="41">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="150" pos:column="21">SEDCOMPILE_ERROR<pos:position pos:line="150" pos:column="37"/></name><argument_list pos:line="150" pos:column="37">(<argument><expr><literal type="number" pos:line="150" pos:column="38">42<pos:position pos:line="150" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="42"/></expr_stmt></block></then></if>
                <expr_stmt><expr><operator pos:line="151" pos:column="17">*<pos:position pos:line="151" pos:column="18"/></operator><name pos:line="151" pos:column="18">ep<pos:position pos:line="151" pos:column="20"/></name><operator pos:line="151" pos:column="20">++<pos:position pos:line="151" pos:column="22"/></operator> <operator pos:line="151" pos:column="23">=<pos:position pos:line="151" pos:column="24"/></operator> <name pos:line="151" pos:column="25">CKET<pos:position pos:line="151" pos:column="29"/></name></expr>;<pos:position pos:line="151" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="152" pos:column="17">*<pos:position pos:line="152" pos:column="18"/></operator><name pos:line="152" pos:column="18">ep<pos:position pos:line="152" pos:column="20"/></name><operator pos:line="152" pos:column="20">++<pos:position pos:line="152" pos:column="22"/></operator> <operator pos:line="152" pos:column="23">=<pos:position pos:line="152" pos:column="24"/></operator> <operator pos:line="152" pos:column="25">*<pos:position pos:line="152" pos:column="26"/></operator><operator pos:line="152" pos:column="26">--<pos:position pos:line="152" pos:column="28"/></operator><name pos:line="152" pos:column="28">bracketp<pos:position pos:line="152" pos:column="36"/></name></expr>;<pos:position pos:line="152" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><name pos:line="153" pos:column="17">closed<pos:position pos:line="153" pos:column="23"/></name><operator pos:line="153" pos:column="23">++<pos:position pos:line="153" pos:column="25"/></operator></expr>;<pos:position pos:line="153" pos:column="26"/></expr_stmt>
                <continue pos:line="154" pos:column="17">continue;<pos:position pos:line="154" pos:column="26"/></continue>

            <case pos:line="156" pos:column="13">case <expr><literal type="char" pos:line="156" pos:column="18">'{'<pos:position pos:line="156" pos:column="21"/></literal></expr>:<pos:position pos:line="156" pos:column="22"/></case>
                <if pos:line="157" pos:column="17">if <condition pos:line="157" pos:column="20">(<expr><name pos:line="157" pos:column="21">lastep<pos:position pos:line="157" pos:column="27"/></name> <operator pos:line="157" pos:column="28">==<pos:position pos:line="157" pos:column="30"/></operator> <operator pos:line="157" pos:column="31">(<pos:position pos:line="157" pos:column="32"/></operator><name pos:line="157" pos:column="32">char<pos:position pos:line="157" pos:column="36"/></name> <operator pos:line="157" pos:column="37">*<pos:position pos:line="157" pos:column="38"/></operator><operator pos:line="157" pos:column="38">)<pos:position pos:line="157" pos:column="39"/></operator> <literal type="number" pos:line="157" pos:column="40">0<pos:position pos:line="157" pos:column="41"/></literal></expr>)<pos:position pos:line="157" pos:column="42"/></condition><then pos:line="157" pos:column="42">
                    <block type="pseudo"><goto pos:line="158" pos:column="21">goto <name pos:line="158" pos:column="26">defchar<pos:position pos:line="158" pos:column="33"/></name>;<pos:position pos:line="158" pos:column="34"/></goto></block></then></if>
                <expr_stmt><expr><operator pos:line="159" pos:column="17">*<pos:position pos:line="159" pos:column="18"/></operator><name pos:line="159" pos:column="18">lastep<pos:position pos:line="159" pos:column="24"/></name> <operator pos:line="159" pos:column="25">|=<pos:position pos:line="159" pos:column="27"/></operator> <name pos:line="159" pos:column="28">RNGE<pos:position pos:line="159" pos:column="32"/></name></expr>;<pos:position pos:line="159" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name pos:line="160" pos:column="17">cflg<pos:position pos:line="160" pos:column="21"/></name> <operator pos:line="160" pos:column="22">=<pos:position pos:line="160" pos:column="23"/></operator> <literal type="number" pos:line="160" pos:column="24">0<pos:position pos:line="160" pos:column="25"/></literal></expr>;<pos:position pos:line="160" pos:column="26"/></expr_stmt>
            <label><name pos:line="161" pos:column="13">nlim<pos:position pos:line="161" pos:column="17"/></name>:<pos:position pos:line="161" pos:column="18"/></label>
                <expr_stmt><expr><name pos:line="162" pos:column="17">c<pos:position pos:line="162" pos:column="18"/></name> <operator pos:line="162" pos:column="19">=<pos:position pos:line="162" pos:column="20"/></operator> <call><name pos:line="162" pos:column="21">GETC<pos:position pos:line="162" pos:column="25"/></name><argument_list pos:line="162" pos:column="25">()<pos:position pos:line="162" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><name pos:line="163" pos:column="17">i<pos:position pos:line="163" pos:column="18"/></name> <operator pos:line="163" pos:column="19">=<pos:position pos:line="163" pos:column="20"/></operator> <literal type="number" pos:line="163" pos:column="21">0<pos:position pos:line="163" pos:column="22"/></literal></expr>;<pos:position pos:line="163" pos:column="23"/></expr_stmt>
                <do pos:line="164" pos:column="17">do <block pos:line="164" pos:column="20">{
                    <if pos:line="165" pos:column="21">if <condition pos:line="165" pos:column="24">(<expr><literal type="char" pos:line="165" pos:column="25">'0'<pos:position pos:line="165" pos:column="28"/></literal> <operator pos:line="165" pos:column="29">&lt;=<pos:position pos:line="165" pos:column="34"/></operator> <name pos:line="165" pos:column="32">c<pos:position pos:line="165" pos:column="33"/></name> <operator pos:line="165" pos:column="34">&amp;&amp;<pos:position pos:line="165" pos:column="44"/></operator> <name pos:line="165" pos:column="37">c<pos:position pos:line="165" pos:column="38"/></name> <operator pos:line="165" pos:column="39">&lt;=<pos:position pos:line="165" pos:column="44"/></operator> <literal type="char" pos:line="165" pos:column="42">'9'<pos:position pos:line="165" pos:column="45"/></literal></expr>)<pos:position pos:line="165" pos:column="46"/></condition><then pos:line="165" pos:column="46">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="166" pos:column="25">i<pos:position pos:line="166" pos:column="26"/></name> <operator pos:line="166" pos:column="27">=<pos:position pos:line="166" pos:column="28"/></operator> <literal type="number" pos:line="166" pos:column="29">10<pos:position pos:line="166" pos:column="31"/></literal> <operator pos:line="166" pos:column="32">*<pos:position pos:line="166" pos:column="33"/></operator> <name pos:line="166" pos:column="34">i<pos:position pos:line="166" pos:column="35"/></name> <operator pos:line="166" pos:column="36">+<pos:position pos:line="166" pos:column="37"/></operator> <name pos:line="166" pos:column="38">c<pos:position pos:line="166" pos:column="39"/></name> <operator pos:line="166" pos:column="40">-<pos:position pos:line="166" pos:column="41"/></operator> <literal type="char" pos:line="166" pos:column="42">'0'<pos:position pos:line="166" pos:column="45"/></literal></expr>;<pos:position pos:line="166" pos:column="46"/></expr_stmt></block></then>
                    <else pos:line="167" pos:column="21">else
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="168" pos:column="25">SEDCOMPILE_ERROR<pos:position pos:line="168" pos:column="41"/></name><argument_list pos:line="168" pos:column="41">(<argument><expr><literal type="number" pos:line="168" pos:column="42">16<pos:position pos:line="168" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="46"/></expr_stmt></block></else></if>
                }<pos:position pos:line="169" pos:column="18"/></block> while <condition pos:line="169" pos:column="25">(<expr><operator pos:line="169" pos:column="26">(<pos:position pos:line="169" pos:column="27"/></operator><operator pos:line="169" pos:column="27">(<pos:position pos:line="169" pos:column="28"/></operator><name pos:line="169" pos:column="28">c<pos:position pos:line="169" pos:column="29"/></name> <operator pos:line="169" pos:column="30">=<pos:position pos:line="169" pos:column="31"/></operator> <call><name pos:line="169" pos:column="32">GETC<pos:position pos:line="169" pos:column="36"/></name><argument_list pos:line="169" pos:column="36">()<pos:position pos:line="169" pos:column="38"/></argument_list></call><operator pos:line="169" pos:column="38">)<pos:position pos:line="169" pos:column="39"/></operator> <operator pos:line="169" pos:column="40">!=<pos:position pos:line="169" pos:column="42"/></operator> <literal type="char" pos:line="169" pos:column="43">'\\'<pos:position pos:line="169" pos:column="47"/></literal><operator pos:line="169" pos:column="47">)<pos:position pos:line="169" pos:column="48"/></operator> <operator pos:line="169" pos:column="49">&amp;&amp;<pos:position pos:line="169" pos:column="59"/></operator> <operator pos:line="169" pos:column="52">(<pos:position pos:line="169" pos:column="53"/></operator><name pos:line="169" pos:column="53">c<pos:position pos:line="169" pos:column="54"/></name> <operator pos:line="169" pos:column="55">!=<pos:position pos:line="169" pos:column="57"/></operator> <literal type="char" pos:line="169" pos:column="58">','<pos:position pos:line="169" pos:column="61"/></literal><operator pos:line="169" pos:column="61">)<pos:position pos:line="169" pos:column="62"/></operator></expr>)<pos:position pos:line="169" pos:column="63"/></condition>;<pos:position pos:line="169" pos:column="64"/></do>
                <if pos:line="170" pos:column="17">if <condition pos:line="170" pos:column="20">(<expr><name pos:line="170" pos:column="21">i<pos:position pos:line="170" pos:column="22"/></name> <operator pos:line="170" pos:column="23">&gt;=<pos:position pos:line="170" pos:column="28"/></operator> <literal type="number" pos:line="170" pos:column="26">255<pos:position pos:line="170" pos:column="29"/></literal></expr>)<pos:position pos:line="170" pos:column="30"/></condition><then pos:line="170" pos:column="30">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="171" pos:column="21">SEDCOMPILE_ERROR<pos:position pos:line="171" pos:column="37"/></name><argument_list pos:line="171" pos:column="37">(<argument><expr><literal type="number" pos:line="171" pos:column="38">11<pos:position pos:line="171" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="171" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="42"/></expr_stmt></block></then></if>
                <expr_stmt><expr><operator pos:line="172" pos:column="17">*<pos:position pos:line="172" pos:column="18"/></operator><name pos:line="172" pos:column="18">ep<pos:position pos:line="172" pos:column="20"/></name><operator pos:line="172" pos:column="20">++<pos:position pos:line="172" pos:column="22"/></operator> <operator pos:line="172" pos:column="23">=<pos:position pos:line="172" pos:column="24"/></operator> <name pos:line="172" pos:column="25">i<pos:position pos:line="172" pos:column="26"/></name></expr>;<pos:position pos:line="172" pos:column="27"/></expr_stmt>
                <if pos:line="173" pos:column="17">if <condition pos:line="173" pos:column="20">(<expr><name pos:line="173" pos:column="21">c<pos:position pos:line="173" pos:column="22"/></name> <operator pos:line="173" pos:column="23">==<pos:position pos:line="173" pos:column="25"/></operator> <literal type="char" pos:line="173" pos:column="26">','<pos:position pos:line="173" pos:column="29"/></literal></expr>)<pos:position pos:line="173" pos:column="30"/></condition><then pos:line="173" pos:column="30"> <block pos:line="173" pos:column="31">{
                    <if pos:line="174" pos:column="21">if <condition pos:line="174" pos:column="24">(<expr><name pos:line="174" pos:column="25">cflg<pos:position pos:line="174" pos:column="29"/></name><operator pos:line="174" pos:column="29">++<pos:position pos:line="174" pos:column="31"/></operator></expr>)<pos:position pos:line="174" pos:column="32"/></condition><then pos:line="174" pos:column="32">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="175" pos:column="25">SEDCOMPILE_ERROR<pos:position pos:line="175" pos:column="41"/></name><argument_list pos:line="175" pos:column="41">(<argument><expr><literal type="number" pos:line="175" pos:column="42">44<pos:position pos:line="175" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="46"/></expr_stmt></block></then></if>
                    <if pos:line="176" pos:column="21">if <condition pos:line="176" pos:column="24">(<expr><operator pos:line="176" pos:column="25">(<pos:position pos:line="176" pos:column="26"/></operator><name pos:line="176" pos:column="26">c<pos:position pos:line="176" pos:column="27"/></name> <operator pos:line="176" pos:column="28">=<pos:position pos:line="176" pos:column="29"/></operator> <call><name pos:line="176" pos:column="30">GETC<pos:position pos:line="176" pos:column="34"/></name><argument_list pos:line="176" pos:column="34">()<pos:position pos:line="176" pos:column="36"/></argument_list></call><operator pos:line="176" pos:column="36">)<pos:position pos:line="176" pos:column="37"/></operator> <operator pos:line="176" pos:column="38">==<pos:position pos:line="176" pos:column="40"/></operator> <literal type="char" pos:line="176" pos:column="41">'\\'<pos:position pos:line="176" pos:column="45"/></literal></expr>)<pos:position pos:line="176" pos:column="46"/></condition><then pos:line="176" pos:column="46">
                        <block type="pseudo"><expr_stmt><expr><operator pos:line="177" pos:column="25">*<pos:position pos:line="177" pos:column="26"/></operator><name pos:line="177" pos:column="26">ep<pos:position pos:line="177" pos:column="28"/></name><operator pos:line="177" pos:column="28">++<pos:position pos:line="177" pos:column="30"/></operator> <operator pos:line="177" pos:column="31">=<pos:position pos:line="177" pos:column="32"/></operator> <operator pos:line="177" pos:column="33">(<pos:position pos:line="177" pos:column="34"/></operator><name pos:line="177" pos:column="34">char<pos:position pos:line="177" pos:column="38"/></name><operator pos:line="177" pos:column="38">)<pos:position pos:line="177" pos:column="39"/></operator> <literal type="number" pos:line="177" pos:column="40">255<pos:position pos:line="177" pos:column="43"/></literal></expr>;<pos:position pos:line="177" pos:column="44"/></expr_stmt></block></then>
                    <else pos:line="178" pos:column="21">else <block pos:line="178" pos:column="26">{
                        <expr_stmt><expr><call><name pos:line="179" pos:column="25">UNGETC<pos:position pos:line="179" pos:column="31"/></name><argument_list pos:line="179" pos:column="31">(<argument><expr><name pos:line="179" pos:column="32">c<pos:position pos:line="179" pos:column="33"/></name></expr></argument>)<pos:position pos:line="179" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="35"/></expr_stmt>
                        <goto pos:line="180" pos:column="25">goto <name pos:line="180" pos:column="30">nlim<pos:position pos:line="180" pos:column="34"/></name>;<pos:position pos:line="180" pos:column="35"/></goto>
                        <comment type="block" pos:line="181" pos:column="25">/* get 2'nd number */</comment>
                    }<pos:position pos:line="182" pos:column="22"/></block></else></if>
                }<pos:position pos:line="183" pos:column="18"/></block></then></if>
                <if pos:line="184" pos:column="17">if <condition pos:line="184" pos:column="20">(<expr><call><name pos:line="184" pos:column="21">GETC<pos:position pos:line="184" pos:column="25"/></name><argument_list pos:line="184" pos:column="25">()<pos:position pos:line="184" pos:column="27"/></argument_list></call> <operator pos:line="184" pos:column="28">!=<pos:position pos:line="184" pos:column="30"/></operator> <literal type="char" pos:line="184" pos:column="31">'}'<pos:position pos:line="184" pos:column="34"/></literal></expr>)<pos:position pos:line="184" pos:column="35"/></condition><then pos:line="184" pos:column="35">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="185" pos:column="21">SEDCOMPILE_ERROR<pos:position pos:line="185" pos:column="37"/></name><argument_list pos:line="185" pos:column="37">(<argument><expr><literal type="number" pos:line="185" pos:column="38">45<pos:position pos:line="185" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="42"/></expr_stmt></block></then></if>
                <if pos:line="186" pos:column="17">if <condition pos:line="186" pos:column="20">(<expr><operator pos:line="186" pos:column="21">!<pos:position pos:line="186" pos:column="22"/></operator><name pos:line="186" pos:column="22">cflg<pos:position pos:line="186" pos:column="26"/></name></expr>)<pos:position pos:line="186" pos:column="27"/></condition><then pos:line="186" pos:column="27">    <comment type="block" pos:line="186" pos:column="31">/* one number */</comment>
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="187" pos:column="21">*<pos:position pos:line="187" pos:column="22"/></operator><name pos:line="187" pos:column="22">ep<pos:position pos:line="187" pos:column="24"/></name><operator pos:line="187" pos:column="24">++<pos:position pos:line="187" pos:column="26"/></operator> <operator pos:line="187" pos:column="27">=<pos:position pos:line="187" pos:column="28"/></operator> <name pos:line="187" pos:column="29">i<pos:position pos:line="187" pos:column="30"/></name></expr>;<pos:position pos:line="187" pos:column="31"/></expr_stmt></block></then>
                <elseif pos:line="188" pos:column="17">else <if pos:line="188" pos:column="22">if <condition pos:line="188" pos:column="25">(<expr><operator pos:line="188" pos:column="26">(<pos:position pos:line="188" pos:column="27"/></operator><name><name pos:line="188" pos:column="27">ep<pos:position pos:line="188" pos:column="29"/></name><index pos:line="188" pos:column="29">[<expr><operator pos:line="188" pos:column="30">-<pos:position pos:line="188" pos:column="31"/></operator><literal type="number" pos:line="188" pos:column="31">1<pos:position pos:line="188" pos:column="32"/></literal></expr>]<pos:position pos:line="188" pos:column="33"/></index></name> <operator pos:line="188" pos:column="34">&amp;<pos:position pos:line="188" pos:column="39"/></operator> <literal type="number" pos:line="188" pos:column="36">0377<pos:position pos:line="188" pos:column="40"/></literal><operator pos:line="188" pos:column="40">)<pos:position pos:line="188" pos:column="41"/></operator> <operator pos:line="188" pos:column="42">&lt;<pos:position pos:line="188" pos:column="46"/></operator> <operator pos:line="188" pos:column="44">(<pos:position pos:line="188" pos:column="45"/></operator><name><name pos:line="188" pos:column="45">ep<pos:position pos:line="188" pos:column="47"/></name><index pos:line="188" pos:column="47">[<expr><operator pos:line="188" pos:column="48">-<pos:position pos:line="188" pos:column="49"/></operator><literal type="number" pos:line="188" pos:column="49">2<pos:position pos:line="188" pos:column="50"/></literal></expr>]<pos:position pos:line="188" pos:column="51"/></index></name> <operator pos:line="188" pos:column="52">&amp;<pos:position pos:line="188" pos:column="57"/></operator> <literal type="number" pos:line="188" pos:column="54">0377<pos:position pos:line="188" pos:column="58"/></literal><operator pos:line="188" pos:column="58">)<pos:position pos:line="188" pos:column="59"/></operator></expr>)<pos:position pos:line="188" pos:column="60"/></condition><then pos:line="188" pos:column="60">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="189" pos:column="21">SEDCOMPILE_ERROR<pos:position pos:line="189" pos:column="37"/></name><argument_list pos:line="189" pos:column="37">(<argument><expr><literal type="number" pos:line="189" pos:column="38">46<pos:position pos:line="189" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="189" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="42"/></expr_stmt></block></then></if></elseif></if>
                <continue pos:line="190" pos:column="17">continue;<pos:position pos:line="190" pos:column="26"/></continue>

            <case pos:line="192" pos:column="13">case <expr><literal type="char" pos:line="192" pos:column="18">'\n'<pos:position pos:line="192" pos:column="22"/></literal></expr>:<pos:position pos:line="192" pos:column="23"/></case>
                <expr_stmt><expr><call><name pos:line="193" pos:column="17">SEDCOMPILE_ERROR<pos:position pos:line="193" pos:column="33"/></name><argument_list pos:line="193" pos:column="33">(<argument><expr><literal type="number" pos:line="193" pos:column="34">36<pos:position pos:line="193" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="38"/></expr_stmt>

            <case pos:line="195" pos:column="13">case <expr><literal type="char" pos:line="195" pos:column="18">'n'<pos:position pos:line="195" pos:column="21"/></literal></expr>:<pos:position pos:line="195" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="196" pos:column="17">c<pos:position pos:line="196" pos:column="18"/></name> <operator pos:line="196" pos:column="19">=<pos:position pos:line="196" pos:column="20"/></operator> <literal type="char" pos:line="196" pos:column="21">'\n'<pos:position pos:line="196" pos:column="25"/></literal></expr>;<pos:position pos:line="196" pos:column="26"/></expr_stmt>
                <goto pos:line="197" pos:column="17">goto <name pos:line="197" pos:column="22">defchar<pos:position pos:line="197" pos:column="29"/></name>;<pos:position pos:line="197" pos:column="30"/></goto>

            <default pos:line="199" pos:column="13">default:<pos:position pos:line="199" pos:column="21"/></default>
                <if pos:line="200" pos:column="17">if <condition pos:line="200" pos:column="20">(<expr><name pos:line="200" pos:column="21">c<pos:position pos:line="200" pos:column="22"/></name> <operator pos:line="200" pos:column="23">&gt;=<pos:position pos:line="200" pos:column="28"/></operator> <literal type="char" pos:line="200" pos:column="26">'1'<pos:position pos:line="200" pos:column="29"/></literal> <operator pos:line="200" pos:column="30">&amp;&amp;<pos:position pos:line="200" pos:column="40"/></operator> <name pos:line="200" pos:column="33">c<pos:position pos:line="200" pos:column="34"/></name> <operator pos:line="200" pos:column="35">&lt;=<pos:position pos:line="200" pos:column="40"/></operator> <literal type="char" pos:line="200" pos:column="38">'9'<pos:position pos:line="200" pos:column="41"/></literal></expr>)<pos:position pos:line="200" pos:column="42"/></condition><then pos:line="200" pos:column="42"> <block pos:line="200" pos:column="43">{
                    <if pos:line="201" pos:column="21">if <condition pos:line="201" pos:column="24">(<expr><operator pos:line="201" pos:column="25">(<pos:position pos:line="201" pos:column="26"/></operator><name pos:line="201" pos:column="26">c<pos:position pos:line="201" pos:column="27"/></name> <operator pos:line="201" pos:column="28">-=<pos:position pos:line="201" pos:column="30"/></operator> <literal type="char" pos:line="201" pos:column="31">'1'<pos:position pos:line="201" pos:column="34"/></literal><operator pos:line="201" pos:column="34">)<pos:position pos:line="201" pos:column="35"/></operator> <operator pos:line="201" pos:column="36">&gt;=<pos:position pos:line="201" pos:column="41"/></operator> <name pos:line="201" pos:column="39">closed<pos:position pos:line="201" pos:column="45"/></name></expr>)<pos:position pos:line="201" pos:column="46"/></condition><then pos:line="201" pos:column="46">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="202" pos:column="25">SEDCOMPILE_ERROR<pos:position pos:line="202" pos:column="41"/></name><argument_list pos:line="202" pos:column="41">(<argument><expr><literal type="number" pos:line="202" pos:column="42">25<pos:position pos:line="202" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="46"/></expr_stmt></block></then></if>
                    <expr_stmt><expr><operator pos:line="203" pos:column="21">*<pos:position pos:line="203" pos:column="22"/></operator><name pos:line="203" pos:column="22">ep<pos:position pos:line="203" pos:column="24"/></name><operator pos:line="203" pos:column="24">++<pos:position pos:line="203" pos:column="26"/></operator> <operator pos:line="203" pos:column="27">=<pos:position pos:line="203" pos:column="28"/></operator> <name pos:line="203" pos:column="29">CBACK<pos:position pos:line="203" pos:column="34"/></name></expr>;<pos:position pos:line="203" pos:column="35"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="204" pos:column="21">*<pos:position pos:line="204" pos:column="22"/></operator><name pos:line="204" pos:column="22">ep<pos:position pos:line="204" pos:column="24"/></name><operator pos:line="204" pos:column="24">++<pos:position pos:line="204" pos:column="26"/></operator> <operator pos:line="204" pos:column="27">=<pos:position pos:line="204" pos:column="28"/></operator> <name pos:line="204" pos:column="29">c<pos:position pos:line="204" pos:column="30"/></name></expr>;<pos:position pos:line="204" pos:column="31"/></expr_stmt>
                    <continue pos:line="205" pos:column="21">continue;<pos:position pos:line="205" pos:column="30"/></continue>
                }<pos:position pos:line="206" pos:column="18"/></block></then></if>
            }<pos:position pos:line="207" pos:column="14"/></block></switch>
    <comment type="block" pos:line="208" pos:column="5">/* Drop through to default to use \ to turn off special chars */</comment>

        <label><name pos:line="210" pos:column="9">defchar<pos:position pos:line="210" pos:column="16"/></name>:<pos:position pos:line="210" pos:column="17"/></label>
        <default pos:line="211" pos:column="9">default:<pos:position pos:line="211" pos:column="17"/></default>
            <expr_stmt><expr><name pos:line="212" pos:column="13">lastep<pos:position pos:line="212" pos:column="19"/></name> <operator pos:line="212" pos:column="20">=<pos:position pos:line="212" pos:column="21"/></operator> <name pos:line="212" pos:column="22">ep<pos:position pos:line="212" pos:column="24"/></name></expr>;<pos:position pos:line="212" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="213" pos:column="13">*<pos:position pos:line="213" pos:column="14"/></operator><name pos:line="213" pos:column="14">ep<pos:position pos:line="213" pos:column="16"/></name><operator pos:line="213" pos:column="16">++<pos:position pos:line="213" pos:column="18"/></operator> <operator pos:line="213" pos:column="19">=<pos:position pos:line="213" pos:column="20"/></operator> <name pos:line="213" pos:column="21">CCHR<pos:position pos:line="213" pos:column="25"/></name></expr>;<pos:position pos:line="213" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="214" pos:column="13">*<pos:position pos:line="214" pos:column="14"/></operator><name pos:line="214" pos:column="14">ep<pos:position pos:line="214" pos:column="16"/></name><operator pos:line="214" pos:column="16">++<pos:position pos:line="214" pos:column="18"/></operator> <operator pos:line="214" pos:column="19">=<pos:position pos:line="214" pos:column="20"/></operator> <name pos:line="214" pos:column="21">c<pos:position pos:line="214" pos:column="22"/></name></expr>;<pos:position pos:line="214" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="215" pos:column="10"/></block></switch>
    }<pos:position pos:line="216" pos:column="6"/></block></while>
<label><name pos:line="217" pos:column="1">out<pos:position pos:line="217" pos:column="4"/></name>:<pos:position pos:line="217" pos:column="5"/></label>
    <if pos:line="218" pos:column="5">if <condition pos:line="218" pos:column="8">(<expr><name pos:line="218" pos:column="9">regerrno<pos:position pos:line="218" pos:column="17"/></name></expr>)<pos:position pos:line="218" pos:column="18"/></condition><then pos:line="218" pos:column="18"> <block pos:line="218" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="219" pos:column="9">regerr<pos:position pos:line="219" pos:column="15"/></name><argument_list pos:line="219" pos:column="15">(<argument><expr><name pos:line="219" pos:column="16">commands<pos:position pos:line="219" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="26">regerrno<pos:position pos:line="219" pos:column="34"/></name></expr></argument>)<pos:position pos:line="219" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="36"/></expr_stmt>
        <return pos:line="220" pos:column="9">return <expr><operator pos:line="220" pos:column="16">(<pos:position pos:line="220" pos:column="17"/></operator><name pos:line="220" pos:column="17">char<pos:position pos:line="220" pos:column="21"/></name><operator pos:line="220" pos:column="21">*<pos:position pos:line="220" pos:column="22"/></operator><operator pos:line="220" pos:column="22">)<pos:position pos:line="220" pos:column="23"/></operator> <name pos:line="220" pos:column="24">NULL<pos:position pos:line="220" pos:column="28"/></name></expr>;<pos:position pos:line="220" pos:column="29"/></return>
    }<pos:position pos:line="221" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="222" pos:column="5">/* XXX : Basant : what extra */</comment>
    <comment type="block" pos:line="223" pos:column="5">/* int reglength = (int)(ep - expbuf); */</comment>
    <return pos:line="224" pos:column="5">return <expr><name pos:line="224" pos:column="12">ep<pos:position pos:line="224" pos:column="14"/></name></expr>;<pos:position pos:line="224" pos:column="15"/></return>
}<pos:position pos:line="225" pos:column="2"/></block></function></unit>

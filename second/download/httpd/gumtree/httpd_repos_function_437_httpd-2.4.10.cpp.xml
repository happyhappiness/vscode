<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_437_httpd-2.4.10.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">parse_log_item<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">apr_pool_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">p<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">log_format_item<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">it<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="65">const<pos:position pos:line="1" pos:column="70"/></specifier> <name pos:line="1" pos:column="71">char<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier><modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">sa<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">s<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><operator pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></operator><name pos:line="3" pos:column="22">sa<pos:position pos:line="3" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ap_log_handler<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">handler<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">s<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">!=<pos:position pos:line="6" pos:column="14"/></operator> <literal type="char" pos:line="6" pos:column="15">'%'<pos:position pos:line="6" pos:column="18"/></literal></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19"> <block pos:line="6" pos:column="20">{
        <return pos:line="7" pos:column="9">return <expr><call><name pos:line="7" pos:column="16">parse_log_misc_string<pos:position pos:line="7" pos:column="37"/></name><argument_list pos:line="7" pos:column="37">(<argument><expr><name pos:line="7" pos:column="38">p<pos:position pos:line="7" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="41">it<pos:position pos:line="7" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="45">sa<pos:position pos:line="7" pos:column="47"/></name></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="49"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="10" pos:column="5">++<pos:position pos:line="10" pos:column="7"/></operator><name pos:line="10" pos:column="7">s<pos:position pos:line="10" pos:column="8"/></name></expr>;<pos:position pos:line="10" pos:column="9"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">it<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">-&gt;<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="9">condition_sense<pos:position pos:line="11" pos:column="24"/></name></name> <operator pos:line="11" pos:column="25">=<pos:position pos:line="11" pos:column="26"/></operator> <literal type="number" pos:line="11" pos:column="27">0<pos:position pos:line="11" pos:column="28"/></literal></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">it<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">conditions<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">NULL<pos:position pos:line="12" pos:column="26"/></name></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">s<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">==<pos:position pos:line="14" pos:column="14"/></operator> <literal type="char" pos:line="14" pos:column="15">'%'<pos:position pos:line="14" pos:column="18"/></literal></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19"> <block pos:line="14" pos:column="20">{
        <expr_stmt><expr><name><name pos:line="15" pos:column="9">it<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">arg<pos:position pos:line="15" pos:column="16"/></name></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <literal type="string" pos:line="15" pos:column="19">"%"<pos:position pos:line="15" pos:column="22"/></literal></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">it<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">func<pos:position pos:line="16" pos:column="17"/></name></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">constant_item<pos:position pos:line="16" pos:column="33"/></name></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="17" pos:column="9">*<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">sa<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <operator pos:line="17" pos:column="15">++<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">s<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>

        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">NULL<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="22" pos:column="5">it<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">-&gt;<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="9">want_orig<pos:position pos:line="22" pos:column="18"/></name></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <operator pos:line="22" pos:column="21">-<pos:position pos:line="22" pos:column="22"/></operator><literal type="number" pos:line="22" pos:column="22">1<pos:position pos:line="22" pos:column="23"/></literal></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">it<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">arg<pos:position pos:line="23" pos:column="12"/></name></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <literal type="string" pos:line="23" pos:column="15">""<pos:position pos:line="23" pos:column="17"/></literal></expr>;<pos:position pos:line="23" pos:column="18"/></expr_stmt>               <comment type="block" pos:line="23" pos:column="33">/* For safety's sake... */</comment>

    <while pos:line="25" pos:column="5">while <condition pos:line="25" pos:column="11">(<expr><operator pos:line="25" pos:column="12">*<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">s<pos:position pos:line="25" pos:column="14"/></name></expr>)<pos:position pos:line="25" pos:column="15"/></condition> <block pos:line="25" pos:column="16">{
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">int<pos:position pos:line="26" pos:column="12"/></name></type> <name pos:line="26" pos:column="13">i<pos:position pos:line="26" pos:column="14"/></name></decl>;<pos:position pos:line="26" pos:column="15"/></decl_stmt>

        <switch pos:line="28" pos:column="9">switch <condition pos:line="28" pos:column="16">(<expr><operator pos:line="28" pos:column="17">*<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">s<pos:position pos:line="28" pos:column="19"/></name></expr>)<pos:position pos:line="28" pos:column="20"/></condition> <block pos:line="28" pos:column="21">{
        <case pos:line="29" pos:column="9">case <expr><literal type="char" pos:line="29" pos:column="14">'!'<pos:position pos:line="29" pos:column="17"/></literal></expr>:<pos:position pos:line="29" pos:column="18"/></case>
            <expr_stmt><expr><operator pos:line="30" pos:column="13">++<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">s<pos:position pos:line="30" pos:column="16"/></name></expr>;<pos:position pos:line="30" pos:column="17"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">it<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">-&gt;<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="17">condition_sense<pos:position pos:line="31" pos:column="32"/></name></name> <operator pos:line="31" pos:column="33">=<pos:position pos:line="31" pos:column="34"/></operator> <operator pos:line="31" pos:column="35">!<pos:position pos:line="31" pos:column="36"/></operator><name><name pos:line="31" pos:column="36">it<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">-&gt;<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="40">condition_sense<pos:position pos:line="31" pos:column="55"/></name></name></expr>;<pos:position pos:line="31" pos:column="56"/></expr_stmt>
            <break pos:line="32" pos:column="13">break;<pos:position pos:line="32" pos:column="19"/></break>

        <case pos:line="34" pos:column="9">case <expr><literal type="char" pos:line="34" pos:column="14">'&lt;'<pos:position pos:line="34" pos:column="20"/></literal></expr>:<pos:position pos:line="34" pos:column="18"/></case>
            <expr_stmt><expr><operator pos:line="35" pos:column="13">++<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">s<pos:position pos:line="35" pos:column="16"/></name></expr>;<pos:position pos:line="35" pos:column="17"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="36" pos:column="13">it<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">want_orig<pos:position pos:line="36" pos:column="26"/></name></name> <operator pos:line="36" pos:column="27">=<pos:position pos:line="36" pos:column="28"/></operator> <literal type="number" pos:line="36" pos:column="29">1<pos:position pos:line="36" pos:column="30"/></literal></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
            <break pos:line="37" pos:column="13">break;<pos:position pos:line="37" pos:column="19"/></break>

        <case pos:line="39" pos:column="9">case <expr><literal type="char" pos:line="39" pos:column="14">'&gt;'<pos:position pos:line="39" pos:column="20"/></literal></expr>:<pos:position pos:line="39" pos:column="18"/></case>
            <expr_stmt><expr><operator pos:line="40" pos:column="13">++<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">s<pos:position pos:line="40" pos:column="16"/></name></expr>;<pos:position pos:line="40" pos:column="17"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="41" pos:column="13">it<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">-&gt;<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="17">want_orig<pos:position pos:line="41" pos:column="26"/></name></name> <operator pos:line="41" pos:column="27">=<pos:position pos:line="41" pos:column="28"/></operator> <literal type="number" pos:line="41" pos:column="29">0<pos:position pos:line="41" pos:column="30"/></literal></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt>
            <break pos:line="42" pos:column="13">break;<pos:position pos:line="42" pos:column="19"/></break>

        <case pos:line="44" pos:column="9">case <expr><literal type="char" pos:line="44" pos:column="14">','<pos:position pos:line="44" pos:column="17"/></literal></expr>:<pos:position pos:line="44" pos:column="18"/></case>
            <expr_stmt><expr><operator pos:line="45" pos:column="13">++<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="15">s<pos:position pos:line="45" pos:column="16"/></name></expr>;<pos:position pos:line="45" pos:column="17"/></expr_stmt>
            <break pos:line="46" pos:column="13">break;<pos:position pos:line="46" pos:column="19"/></break>

        <case pos:line="48" pos:column="9">case <expr><literal type="char" pos:line="48" pos:column="14">'{'<pos:position pos:line="48" pos:column="17"/></literal></expr>:<pos:position pos:line="48" pos:column="18"/></case>
            <expr_stmt><expr><operator pos:line="49" pos:column="13">++<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="15">s<pos:position pos:line="49" pos:column="16"/></name></expr>;<pos:position pos:line="49" pos:column="17"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="50" pos:column="13">it<pos:position pos:line="50" pos:column="15"/></name><operator pos:line="50" pos:column="15">-&gt;<pos:position pos:line="50" pos:column="20"/></operator><name pos:line="50" pos:column="17">arg<pos:position pos:line="50" pos:column="20"/></name></name> <operator pos:line="50" pos:column="21">=<pos:position pos:line="50" pos:column="22"/></operator> <call><name pos:line="50" pos:column="23">ap_getword<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">(<argument><expr><name pos:line="50" pos:column="34">p<pos:position pos:line="50" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="37">&amp;<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="38">s<pos:position pos:line="50" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="50" pos:column="41">'}'<pos:position pos:line="50" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="46"/></expr_stmt>
            <break pos:line="51" pos:column="13">break;<pos:position pos:line="51" pos:column="19"/></break>

        <case pos:line="53" pos:column="9">case <expr><literal type="char" pos:line="53" pos:column="14">'0'<pos:position pos:line="53" pos:column="17"/></literal></expr>:<pos:position pos:line="53" pos:column="18"/></case>
        <case pos:line="54" pos:column="9">case <expr><literal type="char" pos:line="54" pos:column="14">'1'<pos:position pos:line="54" pos:column="17"/></literal></expr>:<pos:position pos:line="54" pos:column="18"/></case>
        <case pos:line="55" pos:column="9">case <expr><literal type="char" pos:line="55" pos:column="14">'2'<pos:position pos:line="55" pos:column="17"/></literal></expr>:<pos:position pos:line="55" pos:column="18"/></case>
        <case pos:line="56" pos:column="9">case <expr><literal type="char" pos:line="56" pos:column="14">'3'<pos:position pos:line="56" pos:column="17"/></literal></expr>:<pos:position pos:line="56" pos:column="18"/></case>
        <case pos:line="57" pos:column="9">case <expr><literal type="char" pos:line="57" pos:column="14">'4'<pos:position pos:line="57" pos:column="17"/></literal></expr>:<pos:position pos:line="57" pos:column="18"/></case>
        <case pos:line="58" pos:column="9">case <expr><literal type="char" pos:line="58" pos:column="14">'5'<pos:position pos:line="58" pos:column="17"/></literal></expr>:<pos:position pos:line="58" pos:column="18"/></case>
        <case pos:line="59" pos:column="9">case <expr><literal type="char" pos:line="59" pos:column="14">'6'<pos:position pos:line="59" pos:column="17"/></literal></expr>:<pos:position pos:line="59" pos:column="18"/></case>
        <case pos:line="60" pos:column="9">case <expr><literal type="char" pos:line="60" pos:column="14">'7'<pos:position pos:line="60" pos:column="17"/></literal></expr>:<pos:position pos:line="60" pos:column="18"/></case>
        <case pos:line="61" pos:column="9">case <expr><literal type="char" pos:line="61" pos:column="14">'8'<pos:position pos:line="61" pos:column="17"/></literal></expr>:<pos:position pos:line="61" pos:column="18"/></case>
        <case pos:line="62" pos:column="9">case <expr><literal type="char" pos:line="62" pos:column="14">'9'<pos:position pos:line="62" pos:column="17"/></literal></expr>:<pos:position pos:line="62" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="63" pos:column="13">i<pos:position pos:line="63" pos:column="14"/></name> <operator pos:line="63" pos:column="15">=<pos:position pos:line="63" pos:column="16"/></operator> <operator pos:line="63" pos:column="17">*<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="18">s<pos:position pos:line="63" pos:column="19"/></name> <operator pos:line="63" pos:column="20">-<pos:position pos:line="63" pos:column="21"/></operator> <literal type="char" pos:line="63" pos:column="22">'0'<pos:position pos:line="63" pos:column="25"/></literal></expr>;<pos:position pos:line="63" pos:column="26"/></expr_stmt>
            <while pos:line="64" pos:column="13">while <condition pos:line="64" pos:column="19">(<expr><call><name pos:line="64" pos:column="20">apr_isdigit<pos:position pos:line="64" pos:column="31"/></name><argument_list pos:line="64" pos:column="31">(<argument><expr><operator pos:line="64" pos:column="32">*<pos:position pos:line="64" pos:column="33"/></operator><operator pos:line="64" pos:column="33">++<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="35">s<pos:position pos:line="64" pos:column="36"/></name></expr></argument>)<pos:position pos:line="64" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="38"/></condition> <block pos:line="64" pos:column="39">{
                <expr_stmt><expr><name pos:line="65" pos:column="17">i<pos:position pos:line="65" pos:column="18"/></name> <operator pos:line="65" pos:column="19">=<pos:position pos:line="65" pos:column="20"/></operator> <name pos:line="65" pos:column="21">i<pos:position pos:line="65" pos:column="22"/></name> <operator pos:line="65" pos:column="23">*<pos:position pos:line="65" pos:column="24"/></operator> <literal type="number" pos:line="65" pos:column="25">10<pos:position pos:line="65" pos:column="27"/></literal> <operator pos:line="65" pos:column="28">+<pos:position pos:line="65" pos:column="29"/></operator> <operator pos:line="65" pos:column="30">(<pos:position pos:line="65" pos:column="31"/></operator><operator pos:line="65" pos:column="31">*<pos:position pos:line="65" pos:column="32"/></operator><name pos:line="65" pos:column="32">s<pos:position pos:line="65" pos:column="33"/></name><operator pos:line="65" pos:column="33">)<pos:position pos:line="65" pos:column="34"/></operator> <operator pos:line="65" pos:column="35">-<pos:position pos:line="65" pos:column="36"/></operator> <literal type="char" pos:line="65" pos:column="37">'0'<pos:position pos:line="65" pos:column="40"/></literal></expr>;<pos:position pos:line="65" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="66" pos:column="14"/></block></while>
            <if pos:line="67" pos:column="13">if <condition pos:line="67" pos:column="16">(<expr><operator pos:line="67" pos:column="17">!<pos:position pos:line="67" pos:column="18"/></operator><name><name pos:line="67" pos:column="18">it<pos:position pos:line="67" pos:column="20"/></name><operator pos:line="67" pos:column="20">-&gt;<pos:position pos:line="67" pos:column="25"/></operator><name pos:line="67" pos:column="22">conditions<pos:position pos:line="67" pos:column="32"/></name></name></expr>)<pos:position pos:line="67" pos:column="33"/></condition><then pos:line="67" pos:column="33"> <block pos:line="67" pos:column="34">{
                <expr_stmt><expr><name><name pos:line="68" pos:column="17">it<pos:position pos:line="68" pos:column="19"/></name><operator pos:line="68" pos:column="19">-&gt;<pos:position pos:line="68" pos:column="24"/></operator><name pos:line="68" pos:column="21">conditions<pos:position pos:line="68" pos:column="31"/></name></name> <operator pos:line="68" pos:column="32">=<pos:position pos:line="68" pos:column="33"/></operator> <call><name pos:line="68" pos:column="34">apr_array_make<pos:position pos:line="68" pos:column="48"/></name><argument_list pos:line="68" pos:column="48">(<argument><expr><name pos:line="68" pos:column="49">p<pos:position pos:line="68" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="52">4<pos:position pos:line="68" pos:column="53"/></literal></expr></argument>, <argument><expr><sizeof pos:line="68" pos:column="55">sizeof<argument_list pos:line="68" pos:column="61">(<argument><expr><name pos:line="68" pos:column="62">int<pos:position pos:line="68" pos:column="65"/></name></expr></argument>)<pos:position pos:line="68" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="68" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="69" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="70" pos:column="13">*<pos:position pos:line="70" pos:column="14"/></operator><operator pos:line="70" pos:column="14">(<pos:position pos:line="70" pos:column="15"/></operator><name pos:line="70" pos:column="15">int<pos:position pos:line="70" pos:column="18"/></name> <operator pos:line="70" pos:column="19">*<pos:position pos:line="70" pos:column="20"/></operator><operator pos:line="70" pos:column="20">)<pos:position pos:line="70" pos:column="21"/></operator> <call><name pos:line="70" pos:column="22">apr_array_push<pos:position pos:line="70" pos:column="36"/></name><argument_list pos:line="70" pos:column="36">(<argument><expr><name><name pos:line="70" pos:column="37">it<pos:position pos:line="70" pos:column="39"/></name><operator pos:line="70" pos:column="39">-&gt;<pos:position pos:line="70" pos:column="44"/></operator><name pos:line="70" pos:column="41">conditions<pos:position pos:line="70" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="52"/></argument_list></call> <operator pos:line="70" pos:column="53">=<pos:position pos:line="70" pos:column="54"/></operator> <name pos:line="70" pos:column="55">i<pos:position pos:line="70" pos:column="56"/></name></expr>;<pos:position pos:line="70" pos:column="57"/></expr_stmt>
            <break pos:line="71" pos:column="13">break;<pos:position pos:line="71" pos:column="19"/></break>

        <default pos:line="73" pos:column="9">default:<pos:position pos:line="73" pos:column="17"/></default>
            <expr_stmt><expr><name pos:line="74" pos:column="13">handler<pos:position pos:line="74" pos:column="20"/></name> <operator pos:line="74" pos:column="21">=<pos:position pos:line="74" pos:column="22"/></operator> <operator pos:line="74" pos:column="23">(<pos:position pos:line="74" pos:column="24"/></operator><name pos:line="74" pos:column="24">ap_log_handler<pos:position pos:line="74" pos:column="38"/></name> <operator pos:line="74" pos:column="39">*<pos:position pos:line="74" pos:column="40"/></operator><operator pos:line="74" pos:column="40">)<pos:position pos:line="74" pos:column="41"/></operator><call><name pos:line="74" pos:column="41">apr_hash_get<pos:position pos:line="74" pos:column="53"/></name><argument_list pos:line="74" pos:column="53">(<argument><expr><name pos:line="74" pos:column="54">log_hash<pos:position pos:line="74" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="64">s<pos:position pos:line="74" pos:column="65"/></name><operator pos:line="74" pos:column="65">++<pos:position pos:line="74" pos:column="67"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="69">1<pos:position pos:line="74" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="72"/></expr_stmt>
            <if pos:line="75" pos:column="13">if <condition pos:line="75" pos:column="16">(<expr><operator pos:line="75" pos:column="17">!<pos:position pos:line="75" pos:column="18"/></operator><name pos:line="75" pos:column="18">handler<pos:position pos:line="75" pos:column="25"/></name></expr>)<pos:position pos:line="75" pos:column="26"/></condition><then pos:line="75" pos:column="26"> <block pos:line="75" pos:column="27">{
                <decl_stmt><decl><type><name pos:line="76" pos:column="17">char<pos:position pos:line="76" pos:column="21"/></name></type> <name><name pos:line="76" pos:column="22">dummy<pos:position pos:line="76" pos:column="27"/></name><index pos:line="76" pos:column="27">[<expr><literal type="number" pos:line="76" pos:column="28">2<pos:position pos:line="76" pos:column="29"/></literal></expr>]<pos:position pos:line="76" pos:column="30"/></index></name></decl>;<pos:position pos:line="76" pos:column="31"/></decl_stmt>

                <expr_stmt><expr><name><name pos:line="78" pos:column="17">dummy<pos:position pos:line="78" pos:column="22"/></name><index pos:line="78" pos:column="22">[<expr><literal type="number" pos:line="78" pos:column="23">0<pos:position pos:line="78" pos:column="24"/></literal></expr>]<pos:position pos:line="78" pos:column="25"/></index></name> <operator pos:line="78" pos:column="26">=<pos:position pos:line="78" pos:column="27"/></operator> <name><name pos:line="78" pos:column="28">s<pos:position pos:line="78" pos:column="29"/></name><index pos:line="78" pos:column="29">[<expr><operator pos:line="78" pos:column="30">-<pos:position pos:line="78" pos:column="31"/></operator><literal type="number" pos:line="78" pos:column="31">1<pos:position pos:line="78" pos:column="32"/></literal></expr>]<pos:position pos:line="78" pos:column="33"/></index></name></expr>;<pos:position pos:line="78" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="79" pos:column="17">dummy<pos:position pos:line="79" pos:column="22"/></name><index pos:line="79" pos:column="22">[<expr><literal type="number" pos:line="79" pos:column="23">1<pos:position pos:line="79" pos:column="24"/></literal></expr>]<pos:position pos:line="79" pos:column="25"/></index></name> <operator pos:line="79" pos:column="26">=<pos:position pos:line="79" pos:column="27"/></operator> <literal type="char" pos:line="79" pos:column="28">'\0'<pos:position pos:line="79" pos:column="32"/></literal></expr>;<pos:position pos:line="79" pos:column="33"/></expr_stmt>
                <return pos:line="80" pos:column="17">return <expr><call><name pos:line="80" pos:column="24">apr_pstrcat<pos:position pos:line="80" pos:column="35"/></name><argument_list pos:line="80" pos:column="35">(<argument><expr><name pos:line="80" pos:column="36">p<pos:position pos:line="80" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="39">"Unrecognized LogFormat directive %"<pos:position pos:line="80" pos:column="75"/></literal></expr></argument>,
                               <argument><expr><name pos:line="81" pos:column="32">dummy<pos:position pos:line="81" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="39">NULL<pos:position pos:line="81" pos:column="43"/></name></expr></argument>)<pos:position pos:line="81" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="45"/></return>
            }<pos:position pos:line="82" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="83" pos:column="13">it<pos:position pos:line="83" pos:column="15"/></name><operator pos:line="83" pos:column="15">-&gt;<pos:position pos:line="83" pos:column="20"/></operator><name pos:line="83" pos:column="17">func<pos:position pos:line="83" pos:column="21"/></name></name> <operator pos:line="83" pos:column="22">=<pos:position pos:line="83" pos:column="23"/></operator> <name><name pos:line="83" pos:column="24">handler<pos:position pos:line="83" pos:column="31"/></name><operator pos:line="83" pos:column="31">-&gt;<pos:position pos:line="83" pos:column="36"/></operator><name pos:line="83" pos:column="33">func<pos:position pos:line="83" pos:column="37"/></name></name></expr>;<pos:position pos:line="83" pos:column="38"/></expr_stmt>
            <if pos:line="84" pos:column="13">if <condition pos:line="84" pos:column="16">(<expr><name><name pos:line="84" pos:column="17">it<pos:position pos:line="84" pos:column="19"/></name><operator pos:line="84" pos:column="19">-&gt;<pos:position pos:line="84" pos:column="24"/></operator><name pos:line="84" pos:column="21">want_orig<pos:position pos:line="84" pos:column="30"/></name></name> <operator pos:line="84" pos:column="31">==<pos:position pos:line="84" pos:column="33"/></operator> <operator pos:line="84" pos:column="34">-<pos:position pos:line="84" pos:column="35"/></operator><literal type="number" pos:line="84" pos:column="35">1<pos:position pos:line="84" pos:column="36"/></literal></expr>)<pos:position pos:line="84" pos:column="37"/></condition><then pos:line="84" pos:column="37"> <block pos:line="84" pos:column="38">{
                <expr_stmt><expr><name><name pos:line="85" pos:column="17">it<pos:position pos:line="85" pos:column="19"/></name><operator pos:line="85" pos:column="19">-&gt;<pos:position pos:line="85" pos:column="24"/></operator><name pos:line="85" pos:column="21">want_orig<pos:position pos:line="85" pos:column="30"/></name></name> <operator pos:line="85" pos:column="31">=<pos:position pos:line="85" pos:column="32"/></operator> <name><name pos:line="85" pos:column="33">handler<pos:position pos:line="85" pos:column="40"/></name><operator pos:line="85" pos:column="40">-&gt;<pos:position pos:line="85" pos:column="45"/></operator><name pos:line="85" pos:column="42">want_orig_default<pos:position pos:line="85" pos:column="59"/></name></name></expr>;<pos:position pos:line="85" pos:column="60"/></expr_stmt>
            }<pos:position pos:line="86" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="87" pos:column="13">*<pos:position pos:line="87" pos:column="14"/></operator><name pos:line="87" pos:column="14">sa<pos:position pos:line="87" pos:column="16"/></name> <operator pos:line="87" pos:column="17">=<pos:position pos:line="87" pos:column="18"/></operator> <name pos:line="87" pos:column="19">s<pos:position pos:line="87" pos:column="20"/></name></expr>;<pos:position pos:line="87" pos:column="21"/></expr_stmt>
            <return pos:line="88" pos:column="13">return <expr><name pos:line="88" pos:column="20">NULL<pos:position pos:line="88" pos:column="24"/></name></expr>;<pos:position pos:line="88" pos:column="25"/></return>
        }<pos:position pos:line="89" pos:column="10"/></block></switch>
    }<pos:position pos:line="90" pos:column="6"/></block></while>

    <return pos:line="92" pos:column="5">return <expr><literal type="string" pos:line="92" pos:column="12">"Ran off end of LogFormat parsing args to some directive"<pos:position pos:line="92" pos:column="69"/></literal></expr>;<pos:position pos:line="92" pos:column="70"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

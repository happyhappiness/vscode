<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_972_httpd-2.4.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">lua_db_prepared_select<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">lua_State<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">L<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="block" pos:line="3" pos:column="5">/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/</comment>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">lua_db_prepared_statement<pos:position pos:line="4" pos:column="30"/></name>  <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier></type><name pos:line="4" pos:column="33">st<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><literal type="number" pos:line="4" pos:column="38">0<pos:position pos:line="4" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">apr_status_t<pos:position pos:line="5" pos:column="17"/></name></type>     <name pos:line="5" pos:column="22">rc<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><literal type="number" pos:line="5" pos:column="27">0<pos:position pos:line="5" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name>       <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier><modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">vars<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type>              <name pos:line="7" pos:column="22">x<pos:position pos:line="7" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="25">have<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
    <comment type="block" pos:line="8" pos:column="5">/*~~~~~~~~~~~~~~~~~~~~~~~*/</comment>
    
    <comment type="block" pos:line="10" pos:column="5">/* Fetch the prepared statement and the vars passed */</comment>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">luaL_checktype<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">L<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="23">1<pos:position pos:line="11" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="26">LUA_TTABLE<pos:position pos:line="11" pos:column="36"/></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">lua_rawgeti<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">L<pos:position pos:line="12" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="20">1<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="23">0<pos:position pos:line="12" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">luaL_checktype<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">L<pos:position pos:line="13" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="23">-<pos:position pos:line="13" pos:column="24"/></operator><literal type="number" pos:line="13" pos:column="24">1<pos:position pos:line="13" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="27">LUA_TUSERDATA<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">st<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <operator pos:line="14" pos:column="10">(<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">lua_db_prepared_statement<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">*<pos:position pos:line="14" pos:column="37"/></operator><operator pos:line="14" pos:column="37">)<pos:position pos:line="14" pos:column="38"/></operator> <call><name pos:line="14" pos:column="39">lua_topointer<pos:position pos:line="14" pos:column="52"/></name><argument_list pos:line="14" pos:column="52">(<argument><expr><name pos:line="14" pos:column="53">L<pos:position pos:line="14" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="56">-<pos:position pos:line="14" pos:column="57"/></operator><literal type="number" pos:line="14" pos:column="57">1<pos:position pos:line="14" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt>
    
    <comment type="block" pos:line="16" pos:column="5">/* Check if we got enough variables passed on to us.
     * This, of course, only works for prepared statements made through lua. */</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">have<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <call><name pos:line="18" pos:column="12">lua_gettop<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">L<pos:position pos:line="18" pos:column="24"/></name></expr></argument>)<pos:position pos:line="18" pos:column="25"/></argument_list></call> <operator pos:line="18" pos:column="26">-<pos:position pos:line="18" pos:column="27"/></operator> <literal type="number" pos:line="18" pos:column="28">2<pos:position pos:line="18" pos:column="29"/></literal></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name><name pos:line="19" pos:column="9">st<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">variables<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">!=<pos:position pos:line="19" pos:column="25"/></operator> <operator pos:line="19" pos:column="26">-<pos:position pos:line="19" pos:column="27"/></operator><literal type="number" pos:line="19" pos:column="27">1<pos:position pos:line="19" pos:column="28"/></literal> <operator pos:line="19" pos:column="29">&amp;&amp;<pos:position pos:line="19" pos:column="39"/></operator> <name pos:line="19" pos:column="32">have<pos:position pos:line="19" pos:column="36"/></name> <operator pos:line="19" pos:column="37">&lt;<pos:position pos:line="19" pos:column="41"/></operator> <name><name pos:line="19" pos:column="39">st<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">-&gt;<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="43">variables<pos:position pos:line="19" pos:column="52"/></name></name></expr> )<pos:position pos:line="19" pos:column="54"/></condition><then pos:line="19" pos:column="54"> <block pos:line="19" pos:column="55">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">lua_pushboolean<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">L<pos:position pos:line="20" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="28">0<pos:position pos:line="20" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">lua_pushfstring<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">L<pos:position pos:line="21" pos:column="26"/></name></expr></argument>, 
                <argument><expr><literal type="string" pos:line="22" pos:column="17">"Error in executing prepared statement: Expected %d arguments, got %d."<pos:position pos:line="22" pos:column="88"/></literal></expr></argument>, 
                <argument><expr><name><name pos:line="23" pos:column="17">st<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-&gt;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="21">variables<pos:position pos:line="23" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="32">have<pos:position pos:line="23" pos:column="36"/></name></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
        <return pos:line="24" pos:column="9">return <expr><literal type="number" pos:line="24" pos:column="16">2<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="26" pos:column="5">vars<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <call><name pos:line="26" pos:column="12">apr_pcalloc<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><name><name pos:line="26" pos:column="24">st<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">db<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">-&gt;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="32">pool<pos:position pos:line="26" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="38">have<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">*<pos:position pos:line="26" pos:column="43"/></operator><sizeof pos:line="26" pos:column="43">sizeof<argument_list pos:line="26" pos:column="49">(<argument><expr><name pos:line="26" pos:column="50">char<pos:position pos:line="26" pos:column="54"/></name> <operator pos:line="26" pos:column="55">*<pos:position pos:line="26" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="59"/></expr_stmt>
    <for pos:line="27" pos:column="5">for <control pos:line="27" pos:column="9">(<init><expr><name pos:line="27" pos:column="10">x<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <literal type="number" pos:line="27" pos:column="14">0<pos:position pos:line="27" pos:column="15"/></literal></expr>;<pos:position pos:line="27" pos:column="16"/></init> <condition><expr><name pos:line="27" pos:column="17">x<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">&lt;<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="21">have<pos:position pos:line="27" pos:column="25"/></name></expr>;<pos:position pos:line="27" pos:column="26"/></condition> <incr><expr><name pos:line="27" pos:column="27">x<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">++<pos:position pos:line="27" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="31"/></control> <block pos:line="27" pos:column="32">{
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">vars<pos:position pos:line="28" pos:column="13"/></name><index pos:line="28" pos:column="13">[<expr><name pos:line="28" pos:column="14">x<pos:position pos:line="28" pos:column="15"/></name></expr>]<pos:position pos:line="28" pos:column="16"/></index></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <call><name pos:line="28" pos:column="19">lua_tostring<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">L<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="35">x<pos:position pos:line="28" pos:column="36"/></name> <operator pos:line="28" pos:column="37">+<pos:position pos:line="28" pos:column="38"/></operator> <literal type="number" pos:line="28" pos:column="39">2<pos:position pos:line="28" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></for>

    <comment type="block" pos:line="31" pos:column="5">/* Fire off the query */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name><name pos:line="32" pos:column="9">st<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">-&gt;<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="13">db<pos:position pos:line="32" pos:column="15"/></name></name> <operator pos:line="32" pos:column="16">&amp;&amp;<pos:position pos:line="32" pos:column="26"/></operator> <name><name pos:line="32" pos:column="19">st<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">-&gt;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="23">db<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">alive<pos:position pos:line="32" pos:column="32"/></name></name></expr>)<pos:position pos:line="32" pos:column="33"/></condition><then pos:line="32" pos:column="33"> <block pos:line="32" pos:column="34">{

        <comment type="block" pos:line="34" pos:column="9">/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/</comment>
        <decl_stmt><decl><type><name pos:line="35" pos:column="9">int<pos:position pos:line="35" pos:column="12"/></name></type> <name pos:line="35" pos:column="13">cols<pos:position pos:line="35" pos:column="17"/></name></decl>;<pos:position pos:line="35" pos:column="18"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">apr_dbd_results_t<pos:position pos:line="36" pos:column="26"/></name>   <modifier pos:line="36" pos:column="29">*<pos:position pos:line="36" pos:column="30"/></modifier></type><name pos:line="36" pos:column="30">results<pos:position pos:line="36" pos:column="37"/></name> <init pos:line="36" pos:column="38">= <expr><literal type="number" pos:line="36" pos:column="40">0<pos:position pos:line="36" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="36" pos:column="42"/></decl_stmt>
        <comment type="block" pos:line="37" pos:column="9">/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/</comment>

        <expr_stmt><expr><name pos:line="39" pos:column="9">rc<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <call><name pos:line="39" pos:column="14">apr_dbd_pselect<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><name><name pos:line="39" pos:column="30">st<pos:position pos:line="39" pos:column="32"/></name><operator pos:line="39" pos:column="32">-&gt;<pos:position pos:line="39" pos:column="37"/></operator><name pos:line="39" pos:column="34">db<pos:position pos:line="39" pos:column="36"/></name><operator pos:line="39" pos:column="36">-&gt;<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="38">driver<pos:position pos:line="39" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="46">st<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">-&gt;<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="50">db<pos:position pos:line="39" pos:column="52"/></name><operator pos:line="39" pos:column="52">-&gt;<pos:position pos:line="39" pos:column="57"/></operator><name pos:line="39" pos:column="54">pool<pos:position pos:line="39" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="60">st<pos:position pos:line="39" pos:column="62"/></name><operator pos:line="39" pos:column="62">-&gt;<pos:position pos:line="39" pos:column="67"/></operator><name pos:line="39" pos:column="64">db<pos:position pos:line="39" pos:column="66"/></name><operator pos:line="39" pos:column="66">-&gt;<pos:position pos:line="39" pos:column="71"/></operator><name pos:line="39" pos:column="68">handle<pos:position pos:line="39" pos:column="74"/></name></name></expr></argument>,
                                <argument><expr><operator pos:line="40" pos:column="33">&amp;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="34">results<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="43">st<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">-&gt;<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="47">statement<pos:position pos:line="40" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="58">0<pos:position pos:line="40" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="61">have<pos:position pos:line="40" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="67">vars<pos:position pos:line="40" pos:column="71"/></name></expr></argument>)<pos:position pos:line="40" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="73"/></expr_stmt>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">rc<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">==<pos:position pos:line="41" pos:column="18"/></operator> <name pos:line="41" pos:column="19">APR_SUCCESS<pos:position pos:line="41" pos:column="30"/></name></expr>)<pos:position pos:line="41" pos:column="31"/></condition><then pos:line="41" pos:column="31"> <block pos:line="41" pos:column="32">{

            <comment type="block" pos:line="43" pos:column="13">/*~~~~~~~~~~~~~~~~~~~~~*/</comment>
            <decl_stmt><decl><type><name pos:line="44" pos:column="13">lua_db_result_set<pos:position pos:line="44" pos:column="30"/></name> <modifier pos:line="44" pos:column="31">*<pos:position pos:line="44" pos:column="32"/></modifier></type><name pos:line="44" pos:column="32">resultset<pos:position pos:line="44" pos:column="41"/></name></decl>;<pos:position pos:line="44" pos:column="42"/></decl_stmt>
            <comment type="block" pos:line="45" pos:column="13">/*~~~~~~~~~~~~~~~~~~~~~*/</comment>

            <expr_stmt><expr><name pos:line="47" pos:column="13">cols<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">=<pos:position pos:line="47" pos:column="19"/></operator> <call><name pos:line="47" pos:column="20">apr_dbd_num_cols<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><name><name pos:line="47" pos:column="37">st<pos:position pos:line="47" pos:column="39"/></name><operator pos:line="47" pos:column="39">-&gt;<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="41">db<pos:position pos:line="47" pos:column="43"/></name><operator pos:line="47" pos:column="43">-&gt;<pos:position pos:line="47" pos:column="48"/></operator><name pos:line="47" pos:column="45">driver<pos:position pos:line="47" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="53">results<pos:position pos:line="47" pos:column="60"/></name></expr></argument>)<pos:position pos:line="47" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">lua_newtable<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">L<pos:position pos:line="48" pos:column="27"/></name></expr></argument>)<pos:position pos:line="48" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name pos:line="49" pos:column="13">resultset<pos:position pos:line="49" pos:column="22"/></name> <operator pos:line="49" pos:column="23">=<pos:position pos:line="49" pos:column="24"/></operator> <call><name pos:line="49" pos:column="25">lua_newuserdata<pos:position pos:line="49" pos:column="40"/></name><argument_list pos:line="49" pos:column="40">(<argument><expr><name pos:line="49" pos:column="41">L<pos:position pos:line="49" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="44">sizeof<argument_list pos:line="49" pos:column="50">(<argument><expr><name pos:line="49" pos:column="51">lua_db_result_set<pos:position pos:line="49" pos:column="68"/></name></expr></argument>)<pos:position pos:line="49" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="50" pos:column="13">resultset<pos:position pos:line="50" pos:column="22"/></name><operator pos:line="50" pos:column="22">-&gt;<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="24">cols<pos:position pos:line="50" pos:column="28"/></name></name> <operator pos:line="50" pos:column="29">=<pos:position pos:line="50" pos:column="30"/></operator> <name pos:line="50" pos:column="31">cols<pos:position pos:line="50" pos:column="35"/></name></expr>;<pos:position pos:line="50" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="51" pos:column="13">resultset<pos:position pos:line="51" pos:column="22"/></name><operator pos:line="51" pos:column="22">-&gt;<pos:position pos:line="51" pos:column="27"/></operator><name pos:line="51" pos:column="24">driver<pos:position pos:line="51" pos:column="30"/></name></name> <operator pos:line="51" pos:column="31">=<pos:position pos:line="51" pos:column="32"/></operator> <name><name pos:line="51" pos:column="33">st<pos:position pos:line="51" pos:column="35"/></name><operator pos:line="51" pos:column="35">-&gt;<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="37">db<pos:position pos:line="51" pos:column="39"/></name><operator pos:line="51" pos:column="39">-&gt;<pos:position pos:line="51" pos:column="44"/></operator><name pos:line="51" pos:column="41">driver<pos:position pos:line="51" pos:column="47"/></name></name></expr>;<pos:position pos:line="51" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="52" pos:column="13">resultset<pos:position pos:line="52" pos:column="22"/></name><operator pos:line="52" pos:column="22">-&gt;<pos:position pos:line="52" pos:column="27"/></operator><name pos:line="52" pos:column="24">pool<pos:position pos:line="52" pos:column="28"/></name></name> <operator pos:line="52" pos:column="29">=<pos:position pos:line="52" pos:column="30"/></operator> <name><name pos:line="52" pos:column="31">st<pos:position pos:line="52" pos:column="33"/></name><operator pos:line="52" pos:column="33">-&gt;<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="35">db<pos:position pos:line="52" pos:column="37"/></name><operator pos:line="52" pos:column="37">-&gt;<pos:position pos:line="52" pos:column="42"/></operator><name pos:line="52" pos:column="39">pool<pos:position pos:line="52" pos:column="43"/></name></name></expr>;<pos:position pos:line="52" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="53" pos:column="13">resultset<pos:position pos:line="53" pos:column="22"/></name><operator pos:line="53" pos:column="22">-&gt;<pos:position pos:line="53" pos:column="27"/></operator><name pos:line="53" pos:column="24">rows<pos:position pos:line="53" pos:column="28"/></name></name> <operator pos:line="53" pos:column="29">=<pos:position pos:line="53" pos:column="30"/></operator> <call><name pos:line="53" pos:column="31">apr_dbd_num_tuples<pos:position pos:line="53" pos:column="49"/></name><argument_list pos:line="53" pos:column="49">(<argument><expr><name><name pos:line="53" pos:column="50">st<pos:position pos:line="53" pos:column="52"/></name><operator pos:line="53" pos:column="52">-&gt;<pos:position pos:line="53" pos:column="57"/></operator><name pos:line="53" pos:column="54">db<pos:position pos:line="53" pos:column="56"/></name><operator pos:line="53" pos:column="56">-&gt;<pos:position pos:line="53" pos:column="61"/></operator><name pos:line="53" pos:column="58">driver<pos:position pos:line="53" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="66">results<pos:position pos:line="53" pos:column="73"/></name></expr></argument>)<pos:position pos:line="53" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="54" pos:column="13">resultset<pos:position pos:line="54" pos:column="22"/></name><operator pos:line="54" pos:column="22">-&gt;<pos:position pos:line="54" pos:column="27"/></operator><name pos:line="54" pos:column="24">results<pos:position pos:line="54" pos:column="31"/></name></name> <operator pos:line="54" pos:column="32">=<pos:position pos:line="54" pos:column="33"/></operator> <name pos:line="54" pos:column="34">results<pos:position pos:line="54" pos:column="41"/></name></expr>;<pos:position pos:line="54" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">luaL_newmetatable<pos:position pos:line="55" pos:column="30"/></name><argument_list pos:line="55" pos:column="30">(<argument><expr><name pos:line="55" pos:column="31">L<pos:position pos:line="55" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="34">"lua_apr.dbselect"<pos:position pos:line="55" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">lua_pushliteral<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">(<argument><expr><name pos:line="56" pos:column="29">L<pos:position pos:line="56" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="32">"__call"<pos:position pos:line="56" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">lua_pushcfunction<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><name pos:line="57" pos:column="31">L<pos:position pos:line="57" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="34">lua_db_get_row<pos:position pos:line="57" pos:column="48"/></name></expr></argument>)<pos:position pos:line="57" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">lua_rawset<pos:position pos:line="58" pos:column="23"/></name><argument_list pos:line="58" pos:column="23">(<argument><expr><name pos:line="58" pos:column="24">L<pos:position pos:line="58" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="27">-<pos:position pos:line="58" pos:column="28"/></operator><literal type="number" pos:line="58" pos:column="28">3<pos:position pos:line="58" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">lua_setmetatable<pos:position pos:line="59" pos:column="29"/></name><argument_list pos:line="59" pos:column="29">(<argument><expr><name pos:line="59" pos:column="30">L<pos:position pos:line="59" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="33">-<pos:position pos:line="59" pos:column="34"/></operator><literal type="number" pos:line="59" pos:column="34">3<pos:position pos:line="59" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">lua_rawseti<pos:position pos:line="60" pos:column="24"/></name><argument_list pos:line="60" pos:column="24">(<argument><expr><name pos:line="60" pos:column="25">L<pos:position pos:line="60" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="28">-<pos:position pos:line="60" pos:column="29"/></operator><literal type="number" pos:line="60" pos:column="29">2<pos:position pos:line="60" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="32">0<pos:position pos:line="60" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="35"/></expr_stmt>
            <return pos:line="61" pos:column="13">return <expr><literal type="number" pos:line="61" pos:column="20">1<pos:position pos:line="61" pos:column="21"/></literal></expr>;<pos:position pos:line="61" pos:column="22"/></return>
            
        }<pos:position pos:line="63" pos:column="10"/></block></then>
        <else pos:line="64" pos:column="9">else <block pos:line="64" pos:column="14">{

            <comment type="block" pos:line="66" pos:column="13">/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/</comment>
            <decl_stmt><decl><type><specifier pos:line="67" pos:column="13">const<pos:position pos:line="67" pos:column="18"/></specifier> <name pos:line="67" pos:column="19">char<pos:position pos:line="67" pos:column="23"/></name>  <modifier pos:line="67" pos:column="25">*<pos:position pos:line="67" pos:column="26"/></modifier></type><name pos:line="67" pos:column="26">err<pos:position pos:line="67" pos:column="29"/></name> <init pos:line="67" pos:column="30">= <expr><call><name pos:line="67" pos:column="32">apr_dbd_error<pos:position pos:line="67" pos:column="45"/></name><argument_list pos:line="67" pos:column="45">(<argument><expr><name><name pos:line="67" pos:column="46">st<pos:position pos:line="67" pos:column="48"/></name><operator pos:line="67" pos:column="48">-&gt;<pos:position pos:line="67" pos:column="53"/></operator><name pos:line="67" pos:column="50">db<pos:position pos:line="67" pos:column="52"/></name><operator pos:line="67" pos:column="52">-&gt;<pos:position pos:line="67" pos:column="57"/></operator><name pos:line="67" pos:column="54">driver<pos:position pos:line="67" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="62">st<pos:position pos:line="67" pos:column="64"/></name><operator pos:line="67" pos:column="64">-&gt;<pos:position pos:line="67" pos:column="69"/></operator><name pos:line="67" pos:column="66">db<pos:position pos:line="67" pos:column="68"/></name><operator pos:line="67" pos:column="68">-&gt;<pos:position pos:line="67" pos:column="73"/></operator><name pos:line="67" pos:column="70">handle<pos:position pos:line="67" pos:column="76"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="78">rc<pos:position pos:line="67" pos:column="80"/></name></expr></argument>)<pos:position pos:line="67" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="67" pos:column="82"/></decl_stmt>
            <comment type="block" pos:line="68" pos:column="13">/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/</comment>

            <expr_stmt><expr><call><name pos:line="70" pos:column="13">lua_pushnil<pos:position pos:line="70" pos:column="24"/></name><argument_list pos:line="70" pos:column="24">(<argument><expr><name pos:line="70" pos:column="25">L<pos:position pos:line="70" pos:column="26"/></name></expr></argument>)<pos:position pos:line="70" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="28"/></expr_stmt>
            <if pos:line="71" pos:column="13">if <condition pos:line="71" pos:column="16">(<expr><name pos:line="71" pos:column="17">err<pos:position pos:line="71" pos:column="20"/></name></expr>)<pos:position pos:line="71" pos:column="21"/></condition><then pos:line="71" pos:column="21"> <block pos:line="71" pos:column="22">{
                <expr_stmt><expr><call><name pos:line="72" pos:column="17">lua_pushstring<pos:position pos:line="72" pos:column="31"/></name><argument_list pos:line="72" pos:column="31">(<argument><expr><name pos:line="72" pos:column="32">L<pos:position pos:line="72" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="35">err<pos:position pos:line="72" pos:column="38"/></name></expr></argument>)<pos:position pos:line="72" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="40"/></expr_stmt>
                <return pos:line="73" pos:column="17">return <expr><literal type="number" pos:line="73" pos:column="24">2<pos:position pos:line="73" pos:column="25"/></literal></expr>;<pos:position pos:line="73" pos:column="26"/></return>
            }<pos:position pos:line="74" pos:column="14"/></block></then></if>
            <return pos:line="75" pos:column="13">return <expr><literal type="number" pos:line="75" pos:column="20">1<pos:position pos:line="75" pos:column="21"/></literal></expr>;<pos:position pos:line="75" pos:column="22"/></return>
        }<pos:position pos:line="76" pos:column="10"/></block></else></if>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="79" pos:column="5">lua_pushboolean<pos:position pos:line="79" pos:column="20"/></name><argument_list pos:line="79" pos:column="20">(<argument><expr><name pos:line="79" pos:column="21">L<pos:position pos:line="79" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="24">0<pos:position pos:line="79" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">lua_pushliteral<pos:position pos:line="80" pos:column="20"/></name><argument_list pos:line="80" pos:column="20">(<argument><expr><name pos:line="80" pos:column="21">L<pos:position pos:line="80" pos:column="22"/></name></expr></argument>, 
            <argument><expr><literal type="string" pos:line="81" pos:column="13">"Database connection seems to be closed, please reacquire it."<pos:position pos:line="81" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="77"/></expr_stmt>
    <return pos:line="82" pos:column="5">return <expr><operator pos:line="82" pos:column="12">(<pos:position pos:line="82" pos:column="13"/></operator><literal type="number" pos:line="82" pos:column="13">2<pos:position pos:line="82" pos:column="14"/></literal><operator pos:line="82" pos:column="14">)<pos:position pos:line="82" pos:column="15"/></operator></expr>;<pos:position pos:line="82" pos:column="16"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

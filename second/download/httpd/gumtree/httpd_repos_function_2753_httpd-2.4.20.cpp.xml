<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2753_httpd-2.4.20.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">normalise<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">unsigned<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">int<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">flags<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">str<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">p<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">flags<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">&amp;<pos:position pos:line="4" pos:column="20"/></operator> <name pos:line="4" pos:column="17">NORM_LC<pos:position pos:line="4" pos:column="24"/></name></expr>)<pos:position pos:line="4" pos:column="25"/></condition><then pos:line="4" pos:column="25">
        <block type="pseudo"><for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">p<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <name pos:line="5" pos:column="18">str<pos:position pos:line="5" pos:column="21"/></name></expr>;<pos:position pos:line="5" pos:column="22"/></init> <condition><expr><operator pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">p<pos:position pos:line="5" pos:column="25"/></name></expr>;<pos:position pos:line="5" pos:column="26"/></condition> <incr><expr><operator pos:line="5" pos:column="27">++<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">p<pos:position pos:line="5" pos:column="30"/></name></expr></incr>)<pos:position pos:line="5" pos:column="31"/></control>
            <block type="pseudo"><if pos:line="6" pos:column="13">if <condition pos:line="6" pos:column="16">(<expr><call><name pos:line="6" pos:column="17">isupper<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><operator pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">p<pos:position pos:line="6" pos:column="27"/></name></expr></argument>)<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="29"/></condition><then pos:line="6" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">p<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <call><name pos:line="7" pos:column="22">tolower<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><operator pos:line="7" pos:column="30">*<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="31">p<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt></block></then></if></block></for></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">flags<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">&amp;<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="17">NORM_MSSLASH<pos:position pos:line="9" pos:column="29"/></name></expr>)<pos:position pos:line="9" pos:column="30"/></condition><then pos:line="9" pos:column="30">
        <block type="pseudo"><for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">p<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <call><name pos:line="10" pos:column="18">ap_strchr<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">str<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="33">'\\'<pos:position pos:line="10" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></init> <condition><expr><name pos:line="10" pos:column="40">p<pos:position pos:line="10" pos:column="41"/></name></expr>;<pos:position pos:line="10" pos:column="42"/></condition> <incr><expr><name pos:line="10" pos:column="43">p<pos:position pos:line="10" pos:column="44"/></name> <operator pos:line="10" pos:column="45">=<pos:position pos:line="10" pos:column="46"/></operator> <call><name pos:line="10" pos:column="47">ap_strchr<pos:position pos:line="10" pos:column="56"/></name><argument_list pos:line="10" pos:column="56">(<argument><expr><name pos:line="10" pos:column="57">p<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">+<pos:position pos:line="10" pos:column="59"/></operator><literal type="number" pos:line="10" pos:column="59">1<pos:position pos:line="10" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="62">'\\'<pos:position pos:line="10" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr></incr>)<pos:position pos:line="10" pos:column="68"/></control>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="11" pos:column="13">*<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">p<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="char" pos:line="11" pos:column="18">'/'<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt></block></for></block></then></if>

}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

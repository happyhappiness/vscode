<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3008_httpd-2.3.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name> <name pos:line="1" pos:column="21">__stdcall<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">worker_main<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">void<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">thread_num_val<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="3" pos:column="5">static<pos:position pos:line="3" pos:column="11"/></specifier> <type><name pos:line="3" pos:column="12">int<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">requests_this_child<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><literal type="number" pos:line="3" pos:column="38">0<pos:position pos:line="3" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">winnt_conn_ctx_t<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">context<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name pos:line="4" pos:column="33">NULL<pos:position pos:line="4" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">thread_num<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><operator pos:line="5" pos:column="22">(<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="23">int<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">)<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="27">thread_num_val<pos:position pos:line="5" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">ap_sb_handle_t<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">sbh<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_bucket<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">e<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">rc<pos:position pos:line="8" pos:column="11"/></name></decl>;<pos:position pos:line="8" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">conn_rec<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">c<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_int32_t<pos:position pos:line="10" pos:column="16"/></name></type> <name pos:line="10" pos:column="17">disconnected<pos:position pos:line="10" pos:column="29"/></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>

    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><literal type="number" pos:line="12" pos:column="12">1<pos:position pos:line="12" pos:column="13"/></literal></expr>)<pos:position pos:line="12" pos:column="14"/></condition> <block pos:line="12" pos:column="15">{

        <expr_stmt><expr><call><name pos:line="14" pos:column="9">ap_update_child_status_from_indexes<pos:position pos:line="14" pos:column="44"/></name><argument_list pos:line="14" pos:column="44">(<argument><expr><literal type="number" pos:line="14" pos:column="45">0<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="48">thread_num<pos:position pos:line="14" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="60">SERVER_READY<pos:position pos:line="14" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="74">NULL<pos:position pos:line="14" pos:column="78"/></name></expr></argument>)<pos:position pos:line="14" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="80"/></expr_stmt>

        <comment type="block" pos:line="16" pos:column="9">/* Grab a connection off the network */</comment>
        <expr_stmt><expr><name pos:line="17" pos:column="9">context<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <call><name pos:line="17" pos:column="19">winnt_get_connection<pos:position pos:line="17" pos:column="39"/></name><argument_list pos:line="17" pos:column="39">(<argument><expr><name pos:line="17" pos:column="40">context<pos:position pos:line="17" pos:column="47"/></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">context<pos:position pos:line="19" pos:column="21"/></name></expr>)<pos:position pos:line="19" pos:column="22"/></condition><then pos:line="19" pos:column="22"> <block pos:line="19" pos:column="23">{
            <comment type="block" pos:line="20" pos:column="13">/* Time for the thread to exit */</comment>
            <break pos:line="21" pos:column="13">break;<pos:position pos:line="21" pos:column="19"/></break>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="24" pos:column="9">/* Have we hit MaxRequestsPerChild connections? */</comment>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">ap_max_requests_per_child<pos:position pos:line="25" pos:column="38"/></name></expr>)<pos:position pos:line="25" pos:column="39"/></condition><then pos:line="25" pos:column="39"> <block pos:line="25" pos:column="40">{
            <expr_stmt><expr><name pos:line="26" pos:column="13">requests_this_child<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">++<pos:position pos:line="26" pos:column="34"/></operator></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">(<expr><name pos:line="27" pos:column="17">requests_this_child<pos:position pos:line="27" pos:column="36"/></name> <operator pos:line="27" pos:column="37">&gt;<pos:position pos:line="27" pos:column="41"/></operator> <name pos:line="27" pos:column="39">ap_max_requests_per_child<pos:position pos:line="27" pos:column="64"/></name></expr>)<pos:position pos:line="27" pos:column="65"/></condition><then pos:line="27" pos:column="65"> <block pos:line="27" pos:column="66">{
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">SetEvent<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">max_requests_per_child_event<pos:position pos:line="28" pos:column="54"/></name></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="29" pos:column="14"/></block></then></if>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="32" pos:column="9">e<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <name><name pos:line="32" pos:column="13">context<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">overlapped<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">.<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="33">Pointer<pos:position pos:line="32" pos:column="40"/></name></name></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="34" pos:column="9">ap_create_sb_handle<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><operator pos:line="34" pos:column="29">&amp;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="30">sbh<pos:position pos:line="34" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="35">context<pos:position pos:line="34" pos:column="42"/></name><operator pos:line="34" pos:column="42">-&gt;<pos:position pos:line="34" pos:column="47"/></operator><name pos:line="34" pos:column="44">ptrans<pos:position pos:line="34" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="52">0<pos:position pos:line="34" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="55">thread_num<pos:position pos:line="34" pos:column="65"/></name></expr></argument>)<pos:position pos:line="34" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">c<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <call><name pos:line="35" pos:column="13">ap_run_create_connection<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><name><name pos:line="35" pos:column="38">context<pos:position pos:line="35" pos:column="45"/></name><operator pos:line="35" pos:column="45">-&gt;<pos:position pos:line="35" pos:column="50"/></operator><name pos:line="35" pos:column="47">ptrans<pos:position pos:line="35" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="55">ap_server_conf<pos:position pos:line="35" pos:column="69"/></name></expr></argument>,
                                     <argument><expr><name><name pos:line="36" pos:column="38">context<pos:position pos:line="36" pos:column="45"/></name><operator pos:line="36" pos:column="45">-&gt;<pos:position pos:line="36" pos:column="50"/></operator><name pos:line="36" pos:column="47">sock<pos:position pos:line="36" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="53">thread_num<pos:position pos:line="36" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="65">sbh<pos:position pos:line="36" pos:column="68"/></name></expr></argument>,
                                     <argument><expr><name><name pos:line="37" pos:column="38">context<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">-&gt;<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="47">ba<pos:position pos:line="37" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>

        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><operator pos:line="39" pos:column="13">!<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">c<pos:position pos:line="39" pos:column="15"/></name></expr>)<pos:position pos:line="39" pos:column="16"/></condition><then pos:line="39" pos:column="16">
        <block pos:line="40" pos:column="9">{
            <comment type="block" pos:line="41" pos:column="13">/* ap_run_create_connection closes the socket on failure */</comment>
            <expr_stmt><expr><name><name pos:line="42" pos:column="13">context<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">-&gt;<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="22">accept_socket<pos:position pos:line="42" pos:column="35"/></name></name> <operator pos:line="42" pos:column="36">=<pos:position pos:line="42" pos:column="37"/></operator> <name pos:line="42" pos:column="38">INVALID_SOCKET<pos:position pos:line="42" pos:column="52"/></name></expr>;<pos:position pos:line="42" pos:column="53"/></expr_stmt>
            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><name pos:line="43" pos:column="17">e<pos:position pos:line="43" pos:column="18"/></name></expr>)<pos:position pos:line="43" pos:column="19"/></condition><then pos:line="43" pos:column="19">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="17">apr_bucket_free<pos:position pos:line="44" pos:column="32"/></name><argument_list pos:line="44" pos:column="32">(<argument><expr><name pos:line="44" pos:column="33">e<pos:position pos:line="44" pos:column="34"/></name></expr></argument>)<pos:position pos:line="44" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt></block></then></if>
            <continue pos:line="45" pos:column="13">continue;<pos:position pos:line="45" pos:column="22"/></continue>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="48" pos:column="9">/* follow ap_process_connection(c, context-&gt;sock) logic
         * as it left us no chance to reinject our first data bucket.
         */</comment>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">ap_update_vhost_given_ip<pos:position pos:line="51" pos:column="33"/></name><argument_list pos:line="51" pos:column="33">(<argument><expr><name pos:line="51" pos:column="34">c<pos:position pos:line="51" pos:column="35"/></name></expr></argument>)<pos:position pos:line="51" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="37"/></expr_stmt>

        <expr_stmt><expr><name pos:line="53" pos:column="9">rc<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <call><name pos:line="53" pos:column="14">ap_run_pre_connection<pos:position pos:line="53" pos:column="35"/></name><argument_list pos:line="53" pos:column="35">(<argument><expr><name pos:line="53" pos:column="36">c<pos:position pos:line="53" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="39">context<pos:position pos:line="53" pos:column="46"/></name><operator pos:line="53" pos:column="46">-&gt;<pos:position pos:line="53" pos:column="51"/></operator><name pos:line="53" pos:column="48">sock<pos:position pos:line="53" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="54"/></expr_stmt>
        <if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name pos:line="54" pos:column="13">rc<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">!=<pos:position pos:line="54" pos:column="18"/></operator> <name pos:line="54" pos:column="19">OK<pos:position pos:line="54" pos:column="21"/></name> <operator pos:line="54" pos:column="22">&amp;&amp;<pos:position pos:line="54" pos:column="32"/></operator> <name pos:line="54" pos:column="25">rc<pos:position pos:line="54" pos:column="27"/></name> <operator pos:line="54" pos:column="28">!=<pos:position pos:line="54" pos:column="30"/></operator> <name pos:line="54" pos:column="31">DONE<pos:position pos:line="54" pos:column="35"/></name></expr>)<pos:position pos:line="54" pos:column="36"/></condition><then pos:line="54" pos:column="36"> <block pos:line="54" pos:column="37">{
            <expr_stmt><expr><name><name pos:line="55" pos:column="13">c<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">-&gt;<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="16">aborted<pos:position pos:line="55" pos:column="23"/></name></name> <operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator> <literal type="number" pos:line="55" pos:column="26">1<pos:position pos:line="55" pos:column="27"/></literal></expr>;<pos:position pos:line="55" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if>

        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name pos:line="58" pos:column="13">e<pos:position pos:line="58" pos:column="14"/></name> <operator pos:line="58" pos:column="15">&amp;&amp;<pos:position pos:line="58" pos:column="25"/></operator> <name><name pos:line="58" pos:column="18">c<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">-&gt;<pos:position pos:line="58" pos:column="24"/></operator><name pos:line="58" pos:column="21">aborted<pos:position pos:line="58" pos:column="28"/></name></name></expr>)<pos:position pos:line="58" pos:column="29"/></condition><then pos:line="58" pos:column="29">
        <block pos:line="59" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">apr_bucket_free<pos:position pos:line="60" pos:column="28"/></name><argument_list pos:line="60" pos:column="28">(<argument><expr><name pos:line="60" pos:column="29">e<pos:position pos:line="60" pos:column="30"/></name></expr></argument>)<pos:position pos:line="60" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></then>
        <elseif pos:line="62" pos:column="9">else <if pos:line="62" pos:column="14">if <condition pos:line="62" pos:column="17">(<expr><name pos:line="62" pos:column="18">e<pos:position pos:line="62" pos:column="19"/></name></expr>)<pos:position pos:line="62" pos:column="20"/></condition><then pos:line="62" pos:column="20">
        <block pos:line="63" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="64" pos:column="13">core_ctx_t<pos:position pos:line="64" pos:column="23"/></name> <modifier pos:line="64" pos:column="24">*<pos:position pos:line="64" pos:column="25"/></modifier></type><name pos:line="64" pos:column="25">ctx<pos:position pos:line="64" pos:column="28"/></name></decl>;<pos:position pos:line="64" pos:column="29"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="65" pos:column="13">core_net_rec<pos:position pos:line="65" pos:column="25"/></name> <modifier pos:line="65" pos:column="26">*<pos:position pos:line="65" pos:column="27"/></modifier></type><name pos:line="65" pos:column="27">net<pos:position pos:line="65" pos:column="30"/></name></decl>;<pos:position pos:line="65" pos:column="31"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="66" pos:column="13">ap_filter_t<pos:position pos:line="66" pos:column="24"/></name> <modifier pos:line="66" pos:column="25">*<pos:position pos:line="66" pos:column="26"/></modifier></type><name pos:line="66" pos:column="26">filt<pos:position pos:line="66" pos:column="30"/></name></decl>;<pos:position pos:line="66" pos:column="31"/></decl_stmt>

            <expr_stmt><expr><name pos:line="68" pos:column="13">filt<pos:position pos:line="68" pos:column="17"/></name> <operator pos:line="68" pos:column="18">=<pos:position pos:line="68" pos:column="19"/></operator> <name><name pos:line="68" pos:column="20">c<pos:position pos:line="68" pos:column="21"/></name><operator pos:line="68" pos:column="21">-&gt;<pos:position pos:line="68" pos:column="26"/></operator><name pos:line="68" pos:column="23">input_filters<pos:position pos:line="68" pos:column="36"/></name></name></expr>;<pos:position pos:line="68" pos:column="37"/></expr_stmt>
            <while pos:line="69" pos:column="13">while <condition pos:line="69" pos:column="19">(<expr><operator pos:line="69" pos:column="20">(<pos:position pos:line="69" pos:column="21"/></operator><call><name pos:line="69" pos:column="21">strcmp<pos:position pos:line="69" pos:column="27"/></name><argument_list pos:line="69" pos:column="27">(<argument><expr><name><name pos:line="69" pos:column="28">filt<pos:position pos:line="69" pos:column="32"/></name><operator pos:line="69" pos:column="32">-&gt;<pos:position pos:line="69" pos:column="37"/></operator><name pos:line="69" pos:column="34">frec<pos:position pos:line="69" pos:column="38"/></name><operator pos:line="69" pos:column="38">-&gt;<pos:position pos:line="69" pos:column="43"/></operator><name pos:line="69" pos:column="40">name<pos:position pos:line="69" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="46">"core_in"<pos:position pos:line="69" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="56"/></argument_list></call> <operator pos:line="69" pos:column="57">!=<pos:position pos:line="69" pos:column="59"/></operator> <literal type="number" pos:line="69" pos:column="60">0<pos:position pos:line="69" pos:column="61"/></literal><operator pos:line="69" pos:column="61">)<pos:position pos:line="69" pos:column="62"/></operator> <operator pos:line="69" pos:column="63">&amp;&amp;<pos:position pos:line="69" pos:column="73"/></operator> <name><name pos:line="69" pos:column="66">filt<pos:position pos:line="69" pos:column="70"/></name><operator pos:line="69" pos:column="70">-&gt;<pos:position pos:line="69" pos:column="75"/></operator><name pos:line="69" pos:column="72">next<pos:position pos:line="69" pos:column="76"/></name></name></expr>)<pos:position pos:line="69" pos:column="77"/></condition>
                <block type="pseudo"><expr_stmt><expr><name pos:line="70" pos:column="17">filt<pos:position pos:line="70" pos:column="21"/></name> <operator pos:line="70" pos:column="22">=<pos:position pos:line="70" pos:column="23"/></operator> <name><name pos:line="70" pos:column="24">filt<pos:position pos:line="70" pos:column="28"/></name><operator pos:line="70" pos:column="28">-&gt;<pos:position pos:line="70" pos:column="33"/></operator><name pos:line="70" pos:column="30">next<pos:position pos:line="70" pos:column="34"/></name></name></expr>;<pos:position pos:line="70" pos:column="35"/></expr_stmt></block></while>
            <expr_stmt><expr><name pos:line="71" pos:column="13">net<pos:position pos:line="71" pos:column="16"/></name> <operator pos:line="71" pos:column="17">=<pos:position pos:line="71" pos:column="18"/></operator> <name><name pos:line="71" pos:column="19">filt<pos:position pos:line="71" pos:column="23"/></name><operator pos:line="71" pos:column="23">-&gt;<pos:position pos:line="71" pos:column="28"/></operator><name pos:line="71" pos:column="25">ctx<pos:position pos:line="71" pos:column="28"/></name></name></expr>;<pos:position pos:line="71" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name pos:line="72" pos:column="13">ctx<pos:position pos:line="72" pos:column="16"/></name> <operator pos:line="72" pos:column="17">=<pos:position pos:line="72" pos:column="18"/></operator> <name><name pos:line="72" pos:column="19">net<pos:position pos:line="72" pos:column="22"/></name><operator pos:line="72" pos:column="22">-&gt;<pos:position pos:line="72" pos:column="27"/></operator><name pos:line="72" pos:column="24">in_ctx<pos:position pos:line="72" pos:column="30"/></name></name></expr>;<pos:position pos:line="72" pos:column="31"/></expr_stmt>

            <if pos:line="74" pos:column="13">if <condition pos:line="74" pos:column="16">(<expr><name><name pos:line="74" pos:column="17">net<pos:position pos:line="74" pos:column="20"/></name><operator pos:line="74" pos:column="20">-&gt;<pos:position pos:line="74" pos:column="25"/></operator><name pos:line="74" pos:column="22">in_ctx<pos:position pos:line="74" pos:column="28"/></name></name></expr>)<pos:position pos:line="74" pos:column="29"/></condition><then pos:line="74" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="17">ctx<pos:position pos:line="75" pos:column="20"/></name> <operator pos:line="75" pos:column="21">=<pos:position pos:line="75" pos:column="22"/></operator> <name><name pos:line="75" pos:column="23">net<pos:position pos:line="75" pos:column="26"/></name><operator pos:line="75" pos:column="26">-&gt;<pos:position pos:line="75" pos:column="31"/></operator><name pos:line="75" pos:column="28">in_ctx<pos:position pos:line="75" pos:column="34"/></name></name></expr>;<pos:position pos:line="75" pos:column="35"/></expr_stmt></block></then>
            <else pos:line="76" pos:column="13">else
            <block pos:line="77" pos:column="13">{
                <expr_stmt><expr><name pos:line="78" pos:column="17">ctx<pos:position pos:line="78" pos:column="20"/></name> <operator pos:line="78" pos:column="21">=<pos:position pos:line="78" pos:column="22"/></operator> <call><name pos:line="78" pos:column="23">apr_pcalloc<pos:position pos:line="78" pos:column="34"/></name><argument_list pos:line="78" pos:column="34">(<argument><expr><name><name pos:line="78" pos:column="35">c<pos:position pos:line="78" pos:column="36"/></name><operator pos:line="78" pos:column="36">-&gt;<pos:position pos:line="78" pos:column="41"/></operator><name pos:line="78" pos:column="38">pool<pos:position pos:line="78" pos:column="42"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="78" pos:column="44">sizeof<argument_list pos:line="78" pos:column="50">(<argument><expr><operator pos:line="78" pos:column="51">*<pos:position pos:line="78" pos:column="52"/></operator><name pos:line="78" pos:column="52">ctx<pos:position pos:line="78" pos:column="55"/></name></expr></argument>)<pos:position pos:line="78" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="78" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="79" pos:column="17">ctx<pos:position pos:line="79" pos:column="20"/></name><operator pos:line="79" pos:column="20">-&gt;<pos:position pos:line="79" pos:column="25"/></operator><name pos:line="79" pos:column="22">b<pos:position pos:line="79" pos:column="23"/></name></name> <operator pos:line="79" pos:column="24">=<pos:position pos:line="79" pos:column="25"/></operator> <call><name pos:line="79" pos:column="26">apr_brigade_create<pos:position pos:line="79" pos:column="44"/></name><argument_list pos:line="79" pos:column="44">(<argument><expr><name><name pos:line="79" pos:column="45">c<pos:position pos:line="79" pos:column="46"/></name><operator pos:line="79" pos:column="46">-&gt;<pos:position pos:line="79" pos:column="51"/></operator><name pos:line="79" pos:column="48">pool<pos:position pos:line="79" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="54">c<pos:position pos:line="79" pos:column="55"/></name><operator pos:line="79" pos:column="55">-&gt;<pos:position pos:line="79" pos:column="60"/></operator><name pos:line="79" pos:column="57">bucket_alloc<pos:position pos:line="79" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="71"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="80" pos:column="17">ctx<pos:position pos:line="80" pos:column="20"/></name><operator pos:line="80" pos:column="20">-&gt;<pos:position pos:line="80" pos:column="25"/></operator><name pos:line="80" pos:column="22">tmpbb<pos:position pos:line="80" pos:column="27"/></name></name> <operator pos:line="80" pos:column="28">=<pos:position pos:line="80" pos:column="29"/></operator> <call><name pos:line="80" pos:column="30">apr_brigade_create<pos:position pos:line="80" pos:column="48"/></name><argument_list pos:line="80" pos:column="48">(<argument><expr><name><name pos:line="80" pos:column="49">c<pos:position pos:line="80" pos:column="50"/></name><operator pos:line="80" pos:column="50">-&gt;<pos:position pos:line="80" pos:column="55"/></operator><name pos:line="80" pos:column="52">pool<pos:position pos:line="80" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="58">c<pos:position pos:line="80" pos:column="59"/></name><operator pos:line="80" pos:column="59">-&gt;<pos:position pos:line="80" pos:column="64"/></operator><name pos:line="80" pos:column="61">bucket_alloc<pos:position pos:line="80" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="75"/></expr_stmt>

                <comment type="block" pos:line="82" pos:column="17">/* seed the brigade with AcceptEx read heap bucket */</comment>
                <expr_stmt><expr><name pos:line="83" pos:column="17">e<pos:position pos:line="83" pos:column="18"/></name> <operator pos:line="83" pos:column="19">=<pos:position pos:line="83" pos:column="20"/></operator> <name><name pos:line="83" pos:column="21">context<pos:position pos:line="83" pos:column="28"/></name><operator pos:line="83" pos:column="28">-&gt;<pos:position pos:line="83" pos:column="33"/></operator><name pos:line="83" pos:column="30">overlapped<pos:position pos:line="83" pos:column="40"/></name><operator pos:line="83" pos:column="40">.<pos:position pos:line="83" pos:column="41"/></operator><name pos:line="83" pos:column="41">Pointer<pos:position pos:line="83" pos:column="48"/></name></name></expr>;<pos:position pos:line="83" pos:column="49"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="84" pos:column="17">APR_BRIGADE_INSERT_HEAD<pos:position pos:line="84" pos:column="40"/></name><argument_list pos:line="84" pos:column="40">(<argument><expr><name><name pos:line="84" pos:column="41">ctx<pos:position pos:line="84" pos:column="44"/></name><operator pos:line="84" pos:column="44">-&gt;<pos:position pos:line="84" pos:column="49"/></operator><name pos:line="84" pos:column="46">b<pos:position pos:line="84" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="49">e<pos:position pos:line="84" pos:column="50"/></name></expr></argument>)<pos:position pos:line="84" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="52"/></expr_stmt>

                <comment type="block" pos:line="86" pos:column="17">/* also seed the brigade with the client socket. */</comment>
                <expr_stmt><expr><name pos:line="87" pos:column="17">e<pos:position pos:line="87" pos:column="18"/></name> <operator pos:line="87" pos:column="19">=<pos:position pos:line="87" pos:column="20"/></operator> <call><name pos:line="87" pos:column="21">apr_bucket_socket_create<pos:position pos:line="87" pos:column="45"/></name><argument_list pos:line="87" pos:column="45">(<argument><expr><name><name pos:line="87" pos:column="46">net<pos:position pos:line="87" pos:column="49"/></name><operator pos:line="87" pos:column="49">-&gt;<pos:position pos:line="87" pos:column="54"/></operator><name pos:line="87" pos:column="51">client_socket<pos:position pos:line="87" pos:column="64"/></name></name></expr></argument>,
                                             <argument><expr><name><name pos:line="88" pos:column="46">c<pos:position pos:line="88" pos:column="47"/></name><operator pos:line="88" pos:column="47">-&gt;<pos:position pos:line="88" pos:column="52"/></operator><name pos:line="88" pos:column="49">bucket_alloc<pos:position pos:line="88" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="89" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="89" pos:column="40"/></name><argument_list pos:line="89" pos:column="40">(<argument><expr><name><name pos:line="89" pos:column="41">ctx<pos:position pos:line="89" pos:column="44"/></name><operator pos:line="89" pos:column="44">-&gt;<pos:position pos:line="89" pos:column="49"/></operator><name pos:line="89" pos:column="46">b<pos:position pos:line="89" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="49">e<pos:position pos:line="89" pos:column="50"/></name></expr></argument>)<pos:position pos:line="89" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="52"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="90" pos:column="17">net<pos:position pos:line="90" pos:column="20"/></name><operator pos:line="90" pos:column="20">-&gt;<pos:position pos:line="90" pos:column="25"/></operator><name pos:line="90" pos:column="22">in_ctx<pos:position pos:line="90" pos:column="28"/></name></name> <operator pos:line="90" pos:column="29">=<pos:position pos:line="90" pos:column="30"/></operator> <name pos:line="90" pos:column="31">ctx<pos:position pos:line="90" pos:column="34"/></name></expr>;<pos:position pos:line="90" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="91" pos:column="14"/></block></else></if>
        }<pos:position pos:line="92" pos:column="10"/></block></then></if></elseif></if>

        <if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><operator pos:line="94" pos:column="13">!<pos:position pos:line="94" pos:column="14"/></operator><name><name pos:line="94" pos:column="14">c<pos:position pos:line="94" pos:column="15"/></name><operator pos:line="94" pos:column="15">-&gt;<pos:position pos:line="94" pos:column="20"/></operator><name pos:line="94" pos:column="17">aborted<pos:position pos:line="94" pos:column="24"/></name></name></expr>)<pos:position pos:line="94" pos:column="25"/></condition><then pos:line="94" pos:column="25">
        <block pos:line="95" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="96" pos:column="13">ap_run_process_connection<pos:position pos:line="96" pos:column="38"/></name><argument_list pos:line="96" pos:column="38">(<argument><expr><name pos:line="96" pos:column="39">c<pos:position pos:line="96" pos:column="40"/></name></expr></argument>)<pos:position pos:line="96" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="42"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="98" pos:column="13">apr_socket_opt_get<pos:position pos:line="98" pos:column="31"/></name><argument_list pos:line="98" pos:column="31">(<argument><expr><name><name pos:line="98" pos:column="32">context<pos:position pos:line="98" pos:column="39"/></name><operator pos:line="98" pos:column="39">-&gt;<pos:position pos:line="98" pos:column="44"/></operator><name pos:line="98" pos:column="41">sock<pos:position pos:line="98" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="47">APR_SO_DISCONNECTED<pos:position pos:line="98" pos:column="66"/></name></expr></argument>,
                               <argument><expr><operator pos:line="99" pos:column="32">&amp;<pos:position pos:line="99" pos:column="37"/></operator><name pos:line="99" pos:column="33">disconnected<pos:position pos:line="99" pos:column="45"/></name></expr></argument>)<pos:position pos:line="99" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="47"/></expr_stmt>

            <if pos:line="101" pos:column="13">if <condition pos:line="101" pos:column="16">(<expr><operator pos:line="101" pos:column="17">!<pos:position pos:line="101" pos:column="18"/></operator><name pos:line="101" pos:column="18">disconnected<pos:position pos:line="101" pos:column="30"/></name></expr>)<pos:position pos:line="101" pos:column="31"/></condition><then pos:line="101" pos:column="31"> <block pos:line="101" pos:column="32">{
                <expr_stmt><expr><name><name pos:line="102" pos:column="17">context<pos:position pos:line="102" pos:column="24"/></name><operator pos:line="102" pos:column="24">-&gt;<pos:position pos:line="102" pos:column="29"/></operator><name pos:line="102" pos:column="26">accept_socket<pos:position pos:line="102" pos:column="39"/></name></name> <operator pos:line="102" pos:column="40">=<pos:position pos:line="102" pos:column="41"/></operator> <name pos:line="102" pos:column="42">INVALID_SOCKET<pos:position pos:line="102" pos:column="56"/></name></expr>;<pos:position pos:line="102" pos:column="57"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="103" pos:column="17">ap_lingering_close<pos:position pos:line="103" pos:column="35"/></name><argument_list pos:line="103" pos:column="35">(<argument><expr><name pos:line="103" pos:column="36">c<pos:position pos:line="103" pos:column="37"/></name></expr></argument>)<pos:position pos:line="103" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="104" pos:column="14"/></block></then></if>
        }<pos:position pos:line="105" pos:column="10"/></block></then></if>
    }<pos:position pos:line="106" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="108" pos:column="5">ap_update_child_status_from_indexes<pos:position pos:line="108" pos:column="40"/></name><argument_list pos:line="108" pos:column="40">(<argument><expr><literal type="number" pos:line="108" pos:column="41">0<pos:position pos:line="108" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="108" pos:column="44">thread_num<pos:position pos:line="108" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="56">SERVER_DEAD<pos:position pos:line="108" pos:column="67"/></name></expr></argument>,
                                        <argument><expr><operator pos:line="109" pos:column="41">(<pos:position pos:line="109" pos:column="42"/></operator><name pos:line="109" pos:column="42">request_rec<pos:position pos:line="109" pos:column="53"/></name> <operator pos:line="109" pos:column="54">*<pos:position pos:line="109" pos:column="55"/></operator><operator pos:line="109" pos:column="55">)<pos:position pos:line="109" pos:column="56"/></operator> <name pos:line="109" pos:column="57">NULL<pos:position pos:line="109" pos:column="61"/></name></expr></argument>)<pos:position pos:line="109" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="63"/></expr_stmt>

    <return pos:line="111" pos:column="5">return <expr><literal type="number" pos:line="111" pos:column="12">0<pos:position pos:line="111" pos:column="13"/></literal></expr>;<pos:position pos:line="111" pos:column="14"/></return>
}<pos:position pos:line="112" pos:column="2"/></block></function></unit>

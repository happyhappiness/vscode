<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2988_httpd-2.0.43.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">looks_like_ip<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">ipstr<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><call><name pos:line="3" pos:column="9">strchr<pos:position pos:line="3" pos:column="15"/></name><argument_list pos:line="3" pos:column="15">(<argument><expr><name pos:line="3" pos:column="16">ipstr<pos:position pos:line="3" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="3" pos:column="23">':'<pos:position pos:line="3" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="28"/></condition><then pos:line="3" pos:column="28"> <block pos:line="3" pos:column="29">{
        <comment type="block" pos:line="4" pos:column="9">/* definitely not a hostname; assume it is intended to be an IPv6 address */</comment>
        <return pos:line="5" pos:column="9">return <expr><literal type="number" pos:line="5" pos:column="16">1<pos:position pos:line="5" pos:column="17"/></literal></expr>;<pos:position pos:line="5" pos:column="18"/></return>
    }<pos:position pos:line="6" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="8" pos:column="5">/* simple IPv4 address string check */</comment>
    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><operator pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">ipstr<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">==<pos:position pos:line="9" pos:column="22"/></operator> <literal type="char" pos:line="9" pos:column="23">'.'<pos:position pos:line="9" pos:column="26"/></literal><operator pos:line="9" pos:column="26">)<pos:position pos:line="9" pos:column="27"/></operator> <operator pos:line="9" pos:column="28">||<pos:position pos:line="9" pos:column="30"/></operator> <call><name pos:line="9" pos:column="31">apr_isdigit<pos:position pos:line="9" pos:column="42"/></name><argument_list pos:line="9" pos:column="42">(<argument><expr><operator pos:line="9" pos:column="43">*<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="44">ipstr<pos:position pos:line="9" pos:column="49"/></name></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="51"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">ipstr<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">++<pos:position pos:line="10" pos:column="16"/></operator></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt></block></while>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">*<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">ipstr<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">==<pos:position pos:line="11" pos:column="22"/></operator> <literal type="char" pos:line="11" pos:column="23">'\0'<pos:position pos:line="11" pos:column="27"/></literal><operator pos:line="11" pos:column="27">)<pos:position pos:line="11" pos:column="28"/></operator></expr>;<pos:position pos:line="11" pos:column="29"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

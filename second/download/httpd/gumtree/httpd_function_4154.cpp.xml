<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_4154.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">ajp_msg_create<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">apr_pool_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">pool<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">apr_size_t<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">size<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">ajp_msg_t<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier><modifier pos:line="1" pos:column="75">*<pos:position pos:line="1" pos:column="76"/></modifier></type><name pos:line="1" pos:column="76">rmsg<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ajp_msg_t<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">msg<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><operator pos:line="3" pos:column="22">(<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="23">ajp_msg_t<pos:position pos:line="3" pos:column="32"/></name> <operator pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></operator><operator pos:line="3" pos:column="34">)<pos:position pos:line="3" pos:column="35"/></operator><call><name pos:line="3" pos:column="35">apr_pcalloc<pos:position pos:line="3" pos:column="46"/></name><argument_list pos:line="3" pos:column="46">(<argument><expr><name pos:line="3" pos:column="47">pool<pos:position pos:line="3" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="53">sizeof<argument_list pos:line="3" pos:column="59">(<argument><expr><name pos:line="3" pos:column="60">ajp_msg_t<pos:position pos:line="3" pos:column="69"/></name></expr></argument>)<pos:position pos:line="3" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="72"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">msg<pos:position pos:line="5" pos:column="13"/></name></expr>)<pos:position pos:line="5" pos:column="14"/></condition><then pos:line="5" pos:column="14"> <block pos:line="5" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">ap_log_error<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">APLOG_MARK<pos:position pos:line="6" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="34">APLOG_ERR<pos:position pos:line="6" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="45">0<pos:position pos:line="6" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="48">NULL<pos:position pos:line="6" pos:column="52"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="7" pos:column="23">"ajp_msg_create(): can't allocate AJP message memory"<pos:position pos:line="7" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="78"/></expr_stmt>
        <return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">APR_ENOPOOL<pos:position pos:line="8" pos:column="27"/></name></expr>;<pos:position pos:line="8" pos:column="28"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="11" pos:column="5">msg<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">-&gt;<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="10">server_side<pos:position pos:line="11" pos:column="21"/></name></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="13" pos:column="5">msg<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">-&gt;<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="10">buf<pos:position pos:line="13" pos:column="13"/></name></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <operator pos:line="13" pos:column="16">(<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">apr_byte_t<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></operator><operator pos:line="13" pos:column="29">)<pos:position pos:line="13" pos:column="30"/></operator><call><name pos:line="13" pos:column="30">apr_palloc<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">(<argument><expr><name pos:line="13" pos:column="41">pool<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="47">size<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="15" pos:column="5">/* XXX: This should never happen
     * In case if the OS cannont allocate 8K of data
     * we are in serious trouble
     * No need to check the alloc return value, cause the
     * core dump is probably the best solution anyhow.
     */</comment>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">msg<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">buf<pos:position pos:line="21" pos:column="17"/></name></name> <operator pos:line="21" pos:column="18">==<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">NULL<pos:position pos:line="21" pos:column="25"/></name></expr>)<pos:position pos:line="21" pos:column="26"/></condition><then pos:line="21" pos:column="26"> <block pos:line="21" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">ap_log_error<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">APLOG_MARK<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">APLOG_ERR<pos:position pos:line="22" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="45">0<pos:position pos:line="22" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="48">NULL<pos:position pos:line="22" pos:column="52"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="23" pos:column="23">"ajp_msg_create(): can't allocate AJP message memory"<pos:position pos:line="23" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="78"/></expr_stmt>
        <return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">APR_ENOPOOL<pos:position pos:line="24" pos:column="27"/></name></expr>;<pos:position pos:line="24" pos:column="28"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="27" pos:column="5">msg<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">-&gt;<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="10">len<pos:position pos:line="27" pos:column="13"/></name></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">msg<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">-&gt;<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="10">header_len<pos:position pos:line="28" pos:column="20"/></name></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <name pos:line="28" pos:column="23">AJP_HEADER_LEN<pos:position pos:line="28" pos:column="37"/></name></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">msg<pos:position pos:line="29" pos:column="8"/></name><operator pos:line="29" pos:column="8">-&gt;<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="10">max_size<pos:position pos:line="29" pos:column="18"/></name></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">size<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="30" pos:column="5">*<pos:position pos:line="30" pos:column="6"/></operator><name pos:line="30" pos:column="6">rmsg<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <name pos:line="30" pos:column="13">msg<pos:position pos:line="30" pos:column="16"/></name></expr>;<pos:position pos:line="30" pos:column="17"/></expr_stmt>

    <return pos:line="32" pos:column="5">return <expr><name pos:line="32" pos:column="12">APR_SUCCESS<pos:position pos:line="32" pos:column="23"/></name></expr>;<pos:position pos:line="32" pos:column="24"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

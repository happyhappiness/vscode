<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1790_httpd-2.0.44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ap_listen_open<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">apr_pool_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">pool<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">apr_port_t<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">port<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ap_listen_rec<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">lr<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ap_listen_rec<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">next<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">num_open<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* Don't allocate a default listener.  If we need to listen to a
     * port, then the user needs to have a Listen directive in their
     * config file.
     */</comment>
    <expr_stmt><expr><name pos:line="11" pos:column="5">num_open<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></expr_stmt>
    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init><expr><name pos:line="12" pos:column="10">lr<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">ap_listeners<pos:position pos:line="12" pos:column="27"/></name></expr>;<pos:position pos:line="12" pos:column="28"/></init> <condition><expr><name pos:line="12" pos:column="29">lr<pos:position pos:line="12" pos:column="31"/></name></expr>;<pos:position pos:line="12" pos:column="32"/></condition> <incr><expr><name pos:line="12" pos:column="33">lr<pos:position pos:line="12" pos:column="35"/></name> <operator pos:line="12" pos:column="36">=<pos:position pos:line="12" pos:column="37"/></operator> <name><name pos:line="12" pos:column="38">lr<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">-&gt;<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="42">next<pos:position pos:line="12" pos:column="46"/></name></name></expr></incr>)<pos:position pos:line="12" pos:column="47"/></control> <block pos:line="12" pos:column="48">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">lr<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">active<pos:position pos:line="13" pos:column="23"/></name></name></expr>)<pos:position pos:line="13" pos:column="24"/></condition><then pos:line="13" pos:column="24"> <block pos:line="13" pos:column="25">{
            <expr_stmt><expr><operator pos:line="14" pos:column="13">++<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">num_open<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then>
        <else pos:line="16" pos:column="9">else <block pos:line="16" pos:column="14">{
            <if pos:line="17" pos:column="13">if <condition pos:line="17" pos:column="16">(<expr><call><name pos:line="17" pos:column="17">make_sock<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">pool<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="33">lr<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call> <operator pos:line="17" pos:column="37">==<pos:position pos:line="17" pos:column="39"/></operator> <name pos:line="17" pos:column="40">APR_SUCCESS<pos:position pos:line="17" pos:column="51"/></name></expr>)<pos:position pos:line="17" pos:column="52"/></condition><then pos:line="17" pos:column="52"> <block pos:line="17" pos:column="53">{
                <expr_stmt><expr><operator pos:line="18" pos:column="17">++<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">num_open<pos:position pos:line="18" pos:column="27"/></name></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="19" pos:column="17">lr<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">active<pos:position pos:line="19" pos:column="27"/></name></name> <operator pos:line="19" pos:column="28">=<pos:position pos:line="19" pos:column="29"/></operator> <literal type="number" pos:line="19" pos:column="30">1<pos:position pos:line="19" pos:column="31"/></literal></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="20" pos:column="14"/></block></then>
            <else pos:line="21" pos:column="13">else <block pos:line="21" pos:column="18">{
                <comment type="block" pos:line="22" pos:column="17">/* fatal error */</comment>
                <return pos:line="23" pos:column="17">return <expr><operator pos:line="23" pos:column="24">-<pos:position pos:line="23" pos:column="25"/></operator><literal type="number" pos:line="23" pos:column="25">1<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></return>
            }<pos:position pos:line="24" pos:column="14"/></block></else></if>
        }<pos:position pos:line="25" pos:column="10"/></block></else></if>
    }<pos:position pos:line="26" pos:column="6"/></block></for>

    <comment type="block" pos:line="28" pos:column="5">/* close the old listeners */</comment>
    <for pos:line="29" pos:column="5">for <control pos:line="29" pos:column="9">(<init><expr><name pos:line="29" pos:column="10">lr<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">=<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">old_listeners<pos:position pos:line="29" pos:column="28"/></name></expr>;<pos:position pos:line="29" pos:column="29"/></init> <condition><expr><name pos:line="29" pos:column="30">lr<pos:position pos:line="29" pos:column="32"/></name></expr>;<pos:position pos:line="29" pos:column="33"/></condition> <incr><expr><name pos:line="29" pos:column="34">lr<pos:position pos:line="29" pos:column="36"/></name> <operator pos:line="29" pos:column="37">=<pos:position pos:line="29" pos:column="38"/></operator> <name pos:line="29" pos:column="39">next<pos:position pos:line="29" pos:column="43"/></name></expr></incr>)<pos:position pos:line="29" pos:column="44"/></control> <block pos:line="29" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">apr_socket_close<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name><name pos:line="30" pos:column="26">lr<pos:position pos:line="30" pos:column="28"/></name><operator pos:line="30" pos:column="28">-&gt;<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="30">sd<pos:position pos:line="30" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">lr<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">-&gt;<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="13">active<pos:position pos:line="31" pos:column="19"/></name></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <literal type="number" pos:line="31" pos:column="22">0<pos:position pos:line="31" pos:column="23"/></literal></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="32" pos:column="9">next<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <name><name pos:line="32" pos:column="16">lr<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">-&gt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">next<pos:position pos:line="32" pos:column="24"/></name></name></expr>;<pos:position pos:line="32" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></for>
    <expr_stmt><expr><name pos:line="34" pos:column="5">old_listeners<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">NULL<pos:position pos:line="34" pos:column="25"/></name></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="36" pos:column="30"/></name><argument_list pos:line="36" pos:column="30">(<argument><expr><name pos:line="36" pos:column="31">pool<pos:position pos:line="36" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="37">NULL<pos:position pos:line="36" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="43">apr_pool_cleanup_null<pos:position pos:line="36" pos:column="64"/></name></expr></argument>,
                              <argument><expr><name pos:line="37" pos:column="31">close_listeners_on_exec<pos:position pos:line="37" pos:column="54"/></name></expr></argument>)<pos:position pos:line="37" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="56"/></expr_stmt>

    <return pos:line="39" pos:column="5">return <expr><ternary><condition><expr><name pos:line="39" pos:column="12">num_open<pos:position pos:line="39" pos:column="20"/></name></expr> ?<pos:position pos:line="39" pos:column="22"/></condition><then pos:line="39" pos:column="22"> <expr><literal type="number" pos:line="39" pos:column="23">0<pos:position pos:line="39" pos:column="24"/></literal></expr> <pos:position pos:line="39" pos:column="25"/></then><else pos:line="39" pos:column="25">: <expr><operator pos:line="39" pos:column="27">-<pos:position pos:line="39" pos:column="28"/></operator><literal type="number" pos:line="39" pos:column="28">1<pos:position pos:line="39" pos:column="29"/></literal></expr></else></ternary></expr>;<pos:position pos:line="39" pos:column="30"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

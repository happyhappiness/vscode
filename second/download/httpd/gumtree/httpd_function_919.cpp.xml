<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_919.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">ssl_scache_shmcb_status<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">server_rec<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">s<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">apr_pool_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">p<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
                            <parameter><function_decl><type><name pos:line="2" pos:column="29">void<pos:position pos:line="2" pos:column="33"/></name></type> (<modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier><name pos:line="2" pos:column="36">func<pos:position pos:line="2" pos:column="40"/></name>) <parameter_list pos:line="2" pos:column="42">(<parameter><decl><type><name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">void<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list></function_decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">void<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">arg<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SSLModConfigRec<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">mc<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><call><name pos:line="4" pos:column="27">myModConfig<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><name pos:line="4" pos:column="39">s<pos:position pos:line="4" pos:column="40"/></name></expr></argument>)<pos:position pos:line="4" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SHMCBHeader<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">header<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SHMCBQueue<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">queue<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">SHMCBCache<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">cache<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">SHMCBIndex<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">idx<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">void<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">shm_segment<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">unsigned<pos:position pos:line="10" pos:column="13"/></name> <name pos:line="10" pos:column="14">int<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">loop<pos:position pos:line="10" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="24">total<pos:position pos:line="10" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="31">cache_total<pos:position pos:line="10" pos:column="42"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="44">non_empty_divisions<pos:position pos:line="10" pos:column="63"/></name></decl>;<pos:position pos:line="10" pos:column="64"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">index_pct<pos:position pos:line="11" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="20">cache_pct<pos:position pos:line="11" pos:column="29"/></name></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">double<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">expiry_total<pos:position pos:line="12" pos:column="24"/></name></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">time_t<pos:position pos:line="13" pos:column="11"/></name></type> <name pos:line="13" pos:column="12">average_expiry<pos:position pos:line="13" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="13" pos:column="28">now<pos:position pos:line="13" pos:column="31"/></name></decl>, <decl><type ref="prev"/><name pos:line="13" pos:column="33">max_expiry<pos:position pos:line="13" pos:column="43"/></name></decl>, <decl><type ref="prev"/><name pos:line="13" pos:column="45">min_expiry<pos:position pos:line="13" pos:column="55"/></name></decl>, <decl><type ref="prev"/><name pos:line="13" pos:column="57">idxexpiry<pos:position pos:line="13" pos:column="66"/></name></decl>;<pos:position pos:line="13" pos:column="67"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">ap_log_error<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><name pos:line="15" pos:column="18">APLOG_MARK<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="30">APLOG_DEBUG<pos:position pos:line="15" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="43">0<pos:position pos:line="15" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="46">s<pos:position pos:line="15" pos:column="47"/></name></expr></argument>, 
                 <argument><expr><literal type="string" pos:line="16" pos:column="18">"inside ssl_scache_shmcb_status"<pos:position pos:line="16" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="52"/></expr_stmt>

    <comment type="block" pos:line="18" pos:column="5">/* We've kludged our pointer into the other cache's member variable. */</comment>
    <expr_stmt><expr><name pos:line="19" pos:column="5">shm_segment<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <operator pos:line="19" pos:column="19">(<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="20">void<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">*<pos:position pos:line="19" pos:column="26"/></operator><operator pos:line="19" pos:column="26">)<pos:position pos:line="19" pos:column="27"/></operator> <name><name pos:line="19" pos:column="28">mc<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">-&gt;<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="32">tSessionCacheDataTable<pos:position pos:line="19" pos:column="54"/></name></name></expr>;<pos:position pos:line="19" pos:column="55"/></expr_stmt>

    <comment type="block" pos:line="21" pos:column="5">/* Get the header structure. */</comment>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">shmcb_get_header<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">shm_segment<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="35">&amp;<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="36">header<pos:position pos:line="22" pos:column="42"/></name></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">total<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <name pos:line="23" pos:column="13">cache_total<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <name pos:line="23" pos:column="27">non_empty_divisions<pos:position pos:line="23" pos:column="46"/></name> <operator pos:line="23" pos:column="47">=<pos:position pos:line="23" pos:column="48"/></operator> <literal type="number" pos:line="23" pos:column="49">0<pos:position pos:line="23" pos:column="50"/></literal></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">average_expiry<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">max_expiry<pos:position pos:line="24" pos:column="32"/></name> <operator pos:line="24" pos:column="33">=<pos:position pos:line="24" pos:column="34"/></operator> <name pos:line="24" pos:column="35">min_expiry<pos:position pos:line="24" pos:column="45"/></name> <operator pos:line="24" pos:column="46">=<pos:position pos:line="24" pos:column="47"/></operator> <literal type="number" pos:line="24" pos:column="48">0<pos:position pos:line="24" pos:column="49"/></literal></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">expiry_total<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <literal type="number" pos:line="25" pos:column="20">0<pos:position pos:line="25" pos:column="21"/></literal></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="27" pos:column="5">/* It may seem strange to grab "now" at this point, but in theory
     * we should never have a negative threshold but grabbing "now" after
     * the loop (which performs expiries) could allow that chance. */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">now<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator> <call><name pos:line="30" pos:column="11">time<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><name pos:line="30" pos:column="16">NULL<pos:position pos:line="30" pos:column="20"/></name></expr></argument>)<pos:position pos:line="30" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="22"/></expr_stmt>
    <for pos:line="31" pos:column="5">for <control pos:line="31" pos:column="9">(<init><expr><name pos:line="31" pos:column="10">loop<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <literal type="number" pos:line="31" pos:column="17">0<pos:position pos:line="31" pos:column="18"/></literal></expr>;<pos:position pos:line="31" pos:column="19"/></init> <condition><expr><name pos:line="31" pos:column="20">loop<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">&lt;=<pos:position pos:line="31" pos:column="30"/></operator> <name><name pos:line="31" pos:column="28">header<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">division_mask<pos:position pos:line="31" pos:column="49"/></name></name></expr>;<pos:position pos:line="31" pos:column="50"/></condition> <incr><expr><name pos:line="31" pos:column="51">loop<pos:position pos:line="31" pos:column="55"/></name><operator pos:line="31" pos:column="55">++<pos:position pos:line="31" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="58"/></control> <block pos:line="31" pos:column="59">{
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><call><name pos:line="32" pos:column="13">shmcb_get_division<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">header<pos:position pos:line="32" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="40">&amp;<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="41">queue<pos:position pos:line="32" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="48">&amp;<pos:position pos:line="32" pos:column="53"/></operator><name pos:line="32" pos:column="49">cache<pos:position pos:line="32" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="56">loop<pos:position pos:line="32" pos:column="60"/></name></expr></argument>)<pos:position pos:line="32" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="62"/></condition><then pos:line="32" pos:column="62"> <block pos:line="32" pos:column="63">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">shmcb_expire_division<pos:position pos:line="33" pos:column="34"/></name><argument_list pos:line="33" pos:column="34">(<argument><expr><name pos:line="33" pos:column="35">s<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="38">&amp;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="39">queue<pos:position pos:line="33" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="46">&amp;<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="47">cache<pos:position pos:line="33" pos:column="52"/></name></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name pos:line="34" pos:column="13">total<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">+=<pos:position pos:line="34" pos:column="21"/></operator> <call><name pos:line="34" pos:column="22">shmcb_get_safe_uint<pos:position pos:line="34" pos:column="41"/></name><argument_list pos:line="34" pos:column="41">(<argument><expr><name><name pos:line="34" pos:column="42">queue<pos:position pos:line="34" pos:column="47"/></name><operator pos:line="34" pos:column="47">.<pos:position pos:line="34" pos:column="48"/></operator><name pos:line="34" pos:column="48">pos_count<pos:position pos:line="34" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name pos:line="35" pos:column="13">cache_total<pos:position pos:line="35" pos:column="24"/></name> <operator pos:line="35" pos:column="25">+=<pos:position pos:line="35" pos:column="27"/></operator> <call><name pos:line="35" pos:column="28">shmcb_get_safe_uint<pos:position pos:line="35" pos:column="47"/></name><argument_list pos:line="35" pos:column="47">(<argument><expr><name><name pos:line="35" pos:column="48">cache<pos:position pos:line="35" pos:column="53"/></name><operator pos:line="35" pos:column="53">.<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="54">pos_count<pos:position pos:line="35" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt>
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><call><name pos:line="36" pos:column="17">shmcb_get_safe_uint<pos:position pos:line="36" pos:column="36"/></name><argument_list pos:line="36" pos:column="36">(<argument><expr><name><name pos:line="36" pos:column="37">queue<pos:position pos:line="36" pos:column="42"/></name><operator pos:line="36" pos:column="42">.<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="43">pos_count<pos:position pos:line="36" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call> <operator pos:line="36" pos:column="54">&gt;<pos:position pos:line="36" pos:column="58"/></operator> <literal type="number" pos:line="36" pos:column="56">0<pos:position pos:line="36" pos:column="57"/></literal></expr>)<pos:position pos:line="36" pos:column="58"/></condition><then pos:line="36" pos:column="58"> <block pos:line="36" pos:column="59">{
                <expr_stmt><expr><name pos:line="37" pos:column="17">idx<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">=<pos:position pos:line="37" pos:column="22"/></operator> <call><name pos:line="37" pos:column="23">shmcb_get_index<pos:position pos:line="37" pos:column="38"/></name><argument_list pos:line="37" pos:column="38">(<argument><expr><operator pos:line="37" pos:column="39">&amp;<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="40">queue<pos:position pos:line="37" pos:column="45"/></name></expr></argument>,
                                     <argument><expr><call><name pos:line="38" pos:column="38">shmcb_get_safe_uint<pos:position pos:line="38" pos:column="57"/></name><argument_list pos:line="38" pos:column="57">(<argument><expr><name><name pos:line="38" pos:column="58">queue<pos:position pos:line="38" pos:column="63"/></name><operator pos:line="38" pos:column="63">.<pos:position pos:line="38" pos:column="64"/></operator><name pos:line="38" pos:column="64">first_pos<pos:position pos:line="38" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="76"/></expr_stmt>
                <expr_stmt><expr><name pos:line="39" pos:column="17">non_empty_divisions<pos:position pos:line="39" pos:column="36"/></name><operator pos:line="39" pos:column="36">++<pos:position pos:line="39" pos:column="38"/></operator></expr>;<pos:position pos:line="39" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name pos:line="40" pos:column="17">idxexpiry<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">=<pos:position pos:line="40" pos:column="28"/></operator> <call><name pos:line="40" pos:column="29">shmcb_get_safe_time<pos:position pos:line="40" pos:column="48"/></name><argument_list pos:line="40" pos:column="48">(<argument><expr><operator pos:line="40" pos:column="49">&amp;<pos:position pos:line="40" pos:column="54"/></operator><operator pos:line="40" pos:column="50">(<pos:position pos:line="40" pos:column="51"/></operator><name><name pos:line="40" pos:column="51">idx<pos:position pos:line="40" pos:column="54"/></name><operator pos:line="40" pos:column="54">-&gt;<pos:position pos:line="40" pos:column="59"/></operator><name pos:line="40" pos:column="56">expires<pos:position pos:line="40" pos:column="63"/></name></name><operator pos:line="40" pos:column="63">)<pos:position pos:line="40" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="40" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="66"/></expr_stmt>
                <expr_stmt><expr><name pos:line="41" pos:column="17">expiry_total<pos:position pos:line="41" pos:column="29"/></name> <operator pos:line="41" pos:column="30">+=<pos:position pos:line="41" pos:column="32"/></operator> <operator pos:line="41" pos:column="33">(<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="34">double<pos:position pos:line="41" pos:column="40"/></name><operator pos:line="41" pos:column="40">)<pos:position pos:line="41" pos:column="41"/></operator> <name pos:line="41" pos:column="42">idxexpiry<pos:position pos:line="41" pos:column="51"/></name></expr>;<pos:position pos:line="41" pos:column="52"/></expr_stmt>
                <expr_stmt><expr><name pos:line="42" pos:column="17">max_expiry<pos:position pos:line="42" pos:column="27"/></name> <operator pos:line="42" pos:column="28">=<pos:position pos:line="42" pos:column="29"/></operator> <operator pos:line="42" pos:column="30">(<pos:position pos:line="42" pos:column="31"/></operator><ternary><condition><expr><name pos:line="42" pos:column="31">idxexpiry<pos:position pos:line="42" pos:column="40"/></name> <operator pos:line="42" pos:column="41">&gt;<pos:position pos:line="42" pos:column="45"/></operator> <name pos:line="42" pos:column="43">max_expiry<pos:position pos:line="42" pos:column="53"/></name></expr> ?<pos:position pos:line="42" pos:column="55"/></condition><then pos:line="42" pos:column="55"> <expr><name pos:line="42" pos:column="56">idxexpiry<pos:position pos:line="42" pos:column="65"/></name></expr> <pos:position pos:line="42" pos:column="66"/></then><else pos:line="42" pos:column="66">:
                              <expr><name pos:line="43" pos:column="31">max_expiry<pos:position pos:line="43" pos:column="41"/></name></expr></else></ternary><operator pos:line="43" pos:column="41">)<pos:position pos:line="43" pos:column="42"/></operator></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>
                <if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">min_expiry<pos:position pos:line="44" pos:column="31"/></name> <operator pos:line="44" pos:column="32">==<pos:position pos:line="44" pos:column="34"/></operator> <literal type="number" pos:line="44" pos:column="35">0<pos:position pos:line="44" pos:column="36"/></literal></expr>)<pos:position pos:line="44" pos:column="37"/></condition><then pos:line="44" pos:column="37">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="21">min_expiry<pos:position pos:line="45" pos:column="31"/></name> <operator pos:line="45" pos:column="32">=<pos:position pos:line="45" pos:column="33"/></operator> <name pos:line="45" pos:column="34">idxexpiry<pos:position pos:line="45" pos:column="43"/></name></expr>;<pos:position pos:line="45" pos:column="44"/></expr_stmt></block></then>
                <else pos:line="46" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="21">min_expiry<pos:position pos:line="47" pos:column="31"/></name> <operator pos:line="47" pos:column="32">=<pos:position pos:line="47" pos:column="33"/></operator> <operator pos:line="47" pos:column="34">(<pos:position pos:line="47" pos:column="35"/></operator><ternary><condition><expr><name pos:line="47" pos:column="35">idxexpiry<pos:position pos:line="47" pos:column="44"/></name> <operator pos:line="47" pos:column="45">&lt;<pos:position pos:line="47" pos:column="49"/></operator> <name pos:line="47" pos:column="47">min_expiry<pos:position pos:line="47" pos:column="57"/></name></expr> ?<pos:position pos:line="47" pos:column="59"/></condition><then pos:line="47" pos:column="59"> <expr><name pos:line="47" pos:column="60">idxexpiry<pos:position pos:line="47" pos:column="69"/></name></expr> <pos:position pos:line="47" pos:column="70"/></then><else pos:line="47" pos:column="70">:
                                  <expr><name pos:line="48" pos:column="35">min_expiry<pos:position pos:line="48" pos:column="45"/></name></expr></else></ternary><operator pos:line="48" pos:column="45">)<pos:position pos:line="48" pos:column="46"/></operator></expr>;<pos:position pos:line="48" pos:column="47"/></expr_stmt></block></else></if>
            }<pos:position pos:line="49" pos:column="14"/></block></then></if>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>
    }<pos:position pos:line="51" pos:column="6"/></block></for>
    <expr_stmt><expr><name pos:line="52" pos:column="5">index_pct<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <operator pos:line="52" pos:column="17">(<pos:position pos:line="52" pos:column="18"/></operator><literal type="number" pos:line="52" pos:column="18">100<pos:position pos:line="52" pos:column="21"/></literal> <operator pos:line="52" pos:column="22">*<pos:position pos:line="52" pos:column="23"/></operator> <name pos:line="52" pos:column="24">total<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">)<pos:position pos:line="52" pos:column="30"/></operator> <operator pos:line="52" pos:column="31">/<pos:position pos:line="52" pos:column="32"/></operator> <operator pos:line="52" pos:column="33">(<pos:position pos:line="52" pos:column="34"/></operator><name><name pos:line="52" pos:column="34">header<pos:position pos:line="52" pos:column="40"/></name><operator pos:line="52" pos:column="40">-&gt;<pos:position pos:line="52" pos:column="45"/></operator><name pos:line="52" pos:column="42">index_num<pos:position pos:line="52" pos:column="51"/></name></name> <operator pos:line="52" pos:column="52">*<pos:position pos:line="52" pos:column="53"/></operator> <operator pos:line="52" pos:column="54">(<pos:position pos:line="52" pos:column="55"/></operator><name><name pos:line="52" pos:column="55">header<pos:position pos:line="52" pos:column="61"/></name><operator pos:line="52" pos:column="61">-&gt;<pos:position pos:line="52" pos:column="66"/></operator><name pos:line="52" pos:column="63">division_mask<pos:position pos:line="52" pos:column="76"/></name></name> <operator pos:line="52" pos:column="77">+<pos:position pos:line="52" pos:column="78"/></operator> <literal type="number" pos:line="52" pos:column="79">1<pos:position pos:line="52" pos:column="80"/></literal><operator pos:line="52" pos:column="80">)<pos:position pos:line="52" pos:column="81"/></operator><operator pos:line="52" pos:column="81">)<pos:position pos:line="52" pos:column="82"/></operator></expr>;<pos:position pos:line="52" pos:column="83"/></expr_stmt>
    <expr_stmt><expr><name pos:line="53" pos:column="5">cache_pct<pos:position pos:line="53" pos:column="14"/></name> <operator pos:line="53" pos:column="15">=<pos:position pos:line="53" pos:column="16"/></operator> <operator pos:line="53" pos:column="17">(<pos:position pos:line="53" pos:column="18"/></operator><literal type="number" pos:line="53" pos:column="18">100<pos:position pos:line="53" pos:column="21"/></literal> <operator pos:line="53" pos:column="22">*<pos:position pos:line="53" pos:column="23"/></operator> <name pos:line="53" pos:column="24">cache_total<pos:position pos:line="53" pos:column="35"/></name><operator pos:line="53" pos:column="35">)<pos:position pos:line="53" pos:column="36"/></operator> <operator pos:line="53" pos:column="37">/<pos:position pos:line="53" pos:column="38"/></operator> <operator pos:line="53" pos:column="39">(<pos:position pos:line="53" pos:column="40"/></operator><name><name pos:line="53" pos:column="40">header<pos:position pos:line="53" pos:column="46"/></name><operator pos:line="53" pos:column="46">-&gt;<pos:position pos:line="53" pos:column="51"/></operator><name pos:line="53" pos:column="48">cache_data_size<pos:position pos:line="53" pos:column="63"/></name></name> <operator pos:line="53" pos:column="64">*<pos:position pos:line="53" pos:column="65"/></operator> <operator pos:line="53" pos:column="66">(<pos:position pos:line="53" pos:column="67"/></operator><name><name pos:line="53" pos:column="67">header<pos:position pos:line="53" pos:column="73"/></name><operator pos:line="53" pos:column="73">-&gt;<pos:position pos:line="53" pos:column="78"/></operator><name pos:line="53" pos:column="75">division_mask<pos:position pos:line="53" pos:column="88"/></name></name> <operator pos:line="53" pos:column="89">+<pos:position pos:line="53" pos:column="90"/></operator> <literal type="number" pos:line="53" pos:column="91">1<pos:position pos:line="53" pos:column="92"/></literal><operator pos:line="53" pos:column="92">)<pos:position pos:line="53" pos:column="93"/></operator><operator pos:line="53" pos:column="93">)<pos:position pos:line="53" pos:column="94"/></operator></expr>;<pos:position pos:line="53" pos:column="95"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">func<pos:position pos:line="54" pos:column="9"/></name><argument_list pos:line="54" pos:column="9">(<argument><expr><call><name pos:line="54" pos:column="10">apr_psprintf<pos:position pos:line="54" pos:column="22"/></name><argument_list pos:line="54" pos:column="22">(<argument><expr><name pos:line="54" pos:column="23">p<pos:position pos:line="54" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="26">"cache type: &lt;b&gt;SHMCB&lt;/b&gt;, shared memory: &lt;b&gt;%d&lt;/b&gt; "<pos:position pos:line="54" pos:column="103"/></literal>
                     <literal type="string" pos:line="55" pos:column="22">"bytes, current sessions: &lt;b&gt;%d&lt;/b&gt;&lt;br&gt;"<pos:position pos:line="55" pos:column="80"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="56" pos:column="22">mc<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">-&gt;<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="26">nSessionCacheDataSize<pos:position pos:line="56" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="49">total<pos:position pos:line="56" pos:column="54"/></name></expr></argument>)<pos:position pos:line="56" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="56" pos:column="57">arg<pos:position pos:line="56" pos:column="60"/></name></expr></argument>)<pos:position pos:line="56" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">func<pos:position pos:line="57" pos:column="9"/></name><argument_list pos:line="57" pos:column="9">(<argument><expr><call><name pos:line="57" pos:column="10">apr_psprintf<pos:position pos:line="57" pos:column="22"/></name><argument_list pos:line="57" pos:column="22">(<argument><expr><name pos:line="57" pos:column="23">p<pos:position pos:line="57" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="26">"sub-caches: &lt;b&gt;%d&lt;/b&gt;, indexes per sub-cache: "<pos:position pos:line="57" pos:column="86"/></literal>
                     <literal type="string" pos:line="58" pos:column="22">"&lt;b&gt;%d&lt;/b&gt;&lt;br&gt;"<pos:position pos:line="58" pos:column="55"/></literal></expr></argument>, <argument><expr><operator pos:line="58" pos:column="39">(<pos:position pos:line="58" pos:column="40"/></operator><name pos:line="58" pos:column="40">int<pos:position pos:line="58" pos:column="43"/></name><operator pos:line="58" pos:column="43">)<pos:position pos:line="58" pos:column="44"/></operator> <name><name pos:line="58" pos:column="45">header<pos:position pos:line="58" pos:column="51"/></name><operator pos:line="58" pos:column="51">-&gt;<pos:position pos:line="58" pos:column="56"/></operator><name pos:line="58" pos:column="53">division_mask<pos:position pos:line="58" pos:column="66"/></name></name> <operator pos:line="58" pos:column="67">+<pos:position pos:line="58" pos:column="68"/></operator> <literal type="number" pos:line="58" pos:column="69">1<pos:position pos:line="58" pos:column="70"/></literal></expr></argument>,
                     <argument><expr><operator pos:line="59" pos:column="22">(<pos:position pos:line="59" pos:column="23"/></operator><name pos:line="59" pos:column="23">int<pos:position pos:line="59" pos:column="26"/></name><operator pos:line="59" pos:column="26">)<pos:position pos:line="59" pos:column="27"/></operator> <name><name pos:line="59" pos:column="28">header<pos:position pos:line="59" pos:column="34"/></name><operator pos:line="59" pos:column="34">-&gt;<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="36">index_num<pos:position pos:line="59" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="59" pos:column="48">arg<pos:position pos:line="59" pos:column="51"/></name></expr></argument>)<pos:position pos:line="59" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="53"/></expr_stmt>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name pos:line="60" pos:column="9">non_empty_divisions<pos:position pos:line="60" pos:column="28"/></name> <operator pos:line="60" pos:column="29">!=<pos:position pos:line="60" pos:column="31"/></operator> <literal type="number" pos:line="60" pos:column="32">0<pos:position pos:line="60" pos:column="33"/></literal></expr>)<pos:position pos:line="60" pos:column="34"/></condition><then pos:line="60" pos:column="34"> <block pos:line="60" pos:column="35">{
        <expr_stmt><expr><name pos:line="61" pos:column="9">average_expiry<pos:position pos:line="61" pos:column="23"/></name> <operator pos:line="61" pos:column="24">=<pos:position pos:line="61" pos:column="25"/></operator> <call pos:line="61" pos:column="26">(<name pos:line="61" pos:column="27">time_t<pos:position pos:line="61" pos:column="33"/></name>)<argument_list pos:line="61" pos:column="34">(<argument><expr><name pos:line="61" pos:column="35">expiry_total<pos:position pos:line="61" pos:column="47"/></name> <operator pos:line="61" pos:column="48">/<pos:position pos:line="61" pos:column="49"/></operator> <operator pos:line="61" pos:column="50">(<pos:position pos:line="61" pos:column="51"/></operator><name pos:line="61" pos:column="51">double<pos:position pos:line="61" pos:column="57"/></name><operator pos:line="61" pos:column="57">)<pos:position pos:line="61" pos:column="58"/></operator><name pos:line="61" pos:column="58">non_empty_divisions<pos:position pos:line="61" pos:column="77"/></name></expr></argument>)<pos:position pos:line="61" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">func<pos:position pos:line="62" pos:column="13"/></name><argument_list pos:line="62" pos:column="13">(<argument><expr><call><name pos:line="62" pos:column="14">apr_psprintf<pos:position pos:line="62" pos:column="26"/></name><argument_list pos:line="62" pos:column="26">(<argument><expr><name pos:line="62" pos:column="27">p<pos:position pos:line="62" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="30">"time left on oldest entries' SSL sessions: "<pos:position pos:line="62" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="62" pos:column="78">arg<pos:position pos:line="62" pos:column="81"/></name></expr></argument>)<pos:position pos:line="62" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="83"/></expr_stmt>
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">now<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">&lt;<pos:position pos:line="63" pos:column="21"/></operator> <name pos:line="63" pos:column="19">average_expiry<pos:position pos:line="63" pos:column="33"/></name></expr>)<pos:position pos:line="63" pos:column="34"/></condition><then pos:line="63" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="13">func<pos:position pos:line="64" pos:column="17"/></name><argument_list pos:line="64" pos:column="17">(<argument><expr><call><name pos:line="64" pos:column="18">apr_psprintf<pos:position pos:line="64" pos:column="30"/></name><argument_list pos:line="64" pos:column="30">(<argument><expr><name pos:line="64" pos:column="31">p<pos:position pos:line="64" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="34">"avg: &lt;b&gt;%d&lt;/b&gt; seconds, (range: %d...%d)&lt;br&gt;"<pos:position pos:line="64" pos:column="98"/></literal></expr></argument>,
                            <argument><expr><call pos:line="65" pos:column="29">(<name pos:line="65" pos:column="30">int<pos:position pos:line="65" pos:column="33"/></name>)<argument_list pos:line="65" pos:column="34">(<argument><expr><name pos:line="65" pos:column="35">average_expiry<pos:position pos:line="65" pos:column="49"/></name> <operator pos:line="65" pos:column="50">-<pos:position pos:line="65" pos:column="51"/></operator> <name pos:line="65" pos:column="52">now<pos:position pos:line="65" pos:column="55"/></name></expr></argument>)<pos:position pos:line="65" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><call pos:line="65" pos:column="58">(<name pos:line="65" pos:column="59">int<pos:position pos:line="65" pos:column="62"/></name>) <argument_list pos:line="65" pos:column="64">(<argument><expr><name pos:line="65" pos:column="65">min_expiry<pos:position pos:line="65" pos:column="75"/></name> <operator pos:line="65" pos:column="76">-<pos:position pos:line="65" pos:column="77"/></operator> <name pos:line="65" pos:column="78">now<pos:position pos:line="65" pos:column="81"/></name></expr></argument>)<pos:position pos:line="65" pos:column="82"/></argument_list></call></expr></argument>,
                            <argument><expr><call pos:line="66" pos:column="29">(<name pos:line="66" pos:column="30">int<pos:position pos:line="66" pos:column="33"/></name>)<argument_list pos:line="66" pos:column="34">(<argument><expr><name pos:line="66" pos:column="35">max_expiry<pos:position pos:line="66" pos:column="45"/></name> <operator pos:line="66" pos:column="46">-<pos:position pos:line="66" pos:column="47"/></operator> <name pos:line="66" pos:column="48">now<pos:position pos:line="66" pos:column="51"/></name></expr></argument>)<pos:position pos:line="66" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="66" pos:column="55">arg<pos:position pos:line="66" pos:column="58"/></name></expr></argument>)<pos:position pos:line="66" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="60"/></expr_stmt></block></then>
        <else pos:line="67" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="13">func<pos:position pos:line="68" pos:column="17"/></name><argument_list pos:line="68" pos:column="17">(<argument><expr><call><name pos:line="68" pos:column="18">apr_psprintf<pos:position pos:line="68" pos:column="30"/></name><argument_list pos:line="68" pos:column="30">(<argument><expr><name pos:line="68" pos:column="31">p<pos:position pos:line="68" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="34">"expiry threshold: &lt;b&gt;Calculation Error!&lt;/b&gt;"<pos:position pos:line="68" pos:column="91"/></literal> 
                             <literal type="string" pos:line="69" pos:column="30">"&lt;br&gt;"<pos:position pos:line="69" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="69" pos:column="39">arg<pos:position pos:line="69" pos:column="42"/></name></expr></argument>)<pos:position pos:line="69" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="44"/></expr_stmt></block></else></if>

    }<pos:position pos:line="71" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">func<pos:position pos:line="72" pos:column="9"/></name><argument_list pos:line="72" pos:column="9">(<argument><expr><call><name pos:line="72" pos:column="10">apr_psprintf<pos:position pos:line="72" pos:column="22"/></name><argument_list pos:line="72" pos:column="22">(<argument><expr><name pos:line="72" pos:column="23">p<pos:position pos:line="72" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="26">"index usage: &lt;b&gt;%d%%&lt;/b&gt;, cache usage: &lt;b&gt;%d%%&lt;/b&gt;"<pos:position pos:line="72" pos:column="102"/></literal>
                     <literal type="string" pos:line="73" pos:column="22">"&lt;br&gt;"<pos:position pos:line="73" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="30">index_pct<pos:position pos:line="73" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="41">cache_pct<pos:position pos:line="73" pos:column="50"/></name></expr></argument>)<pos:position pos:line="73" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="73" pos:column="53">arg<pos:position pos:line="73" pos:column="56"/></name></expr></argument>)<pos:position pos:line="73" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">func<pos:position pos:line="74" pos:column="9"/></name><argument_list pos:line="74" pos:column="9">(<argument><expr><call><name pos:line="74" pos:column="10">apr_psprintf<pos:position pos:line="74" pos:column="22"/></name><argument_list pos:line="74" pos:column="22">(<argument><expr><name pos:line="74" pos:column="23">p<pos:position pos:line="74" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="26">"total sessions stored since starting: &lt;b&gt;%lu&lt;/b&gt;&lt;br&gt;"<pos:position pos:line="74" pos:column="98"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="75" pos:column="22">header<pos:position pos:line="75" pos:column="28"/></name><operator pos:line="75" pos:column="28">-&gt;<pos:position pos:line="75" pos:column="33"/></operator><name pos:line="75" pos:column="30">num_stores<pos:position pos:line="75" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="75" pos:column="43">arg<pos:position pos:line="75" pos:column="46"/></name></expr></argument>)<pos:position pos:line="75" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">func<pos:position pos:line="76" pos:column="9"/></name><argument_list pos:line="76" pos:column="9">(<argument><expr><call><name pos:line="76" pos:column="10">apr_psprintf<pos:position pos:line="76" pos:column="22"/></name><argument_list pos:line="76" pos:column="22">(<argument><expr><name pos:line="76" pos:column="23">p<pos:position pos:line="76" pos:column="24"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="76" pos:column="25">"total sessions expired since starting: &lt;b&gt;%lu&lt;/b&gt;&lt;br&gt;"<pos:position pos:line="76" pos:column="98"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="77" pos:column="22">header<pos:position pos:line="77" pos:column="28"/></name><operator pos:line="77" pos:column="28">-&gt;<pos:position pos:line="77" pos:column="33"/></operator><name pos:line="77" pos:column="30">num_expiries<pos:position pos:line="77" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="77" pos:column="45">arg<pos:position pos:line="77" pos:column="48"/></name></expr></argument>)<pos:position pos:line="77" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">func<pos:position pos:line="78" pos:column="9"/></name><argument_list pos:line="78" pos:column="9">(<argument><expr><call><name pos:line="78" pos:column="10">apr_psprintf<pos:position pos:line="78" pos:column="22"/></name><argument_list pos:line="78" pos:column="22">(<argument><expr><name pos:line="78" pos:column="23">p<pos:position pos:line="78" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="26">"total (pre-expiry) sessions scrolled out of the "<pos:position pos:line="78" pos:column="76"/></literal>
                     <literal type="string" pos:line="79" pos:column="22">"cache: &lt;b&gt;%lu&lt;/b&gt;&lt;br&gt;"<pos:position pos:line="79" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="47">header<pos:position pos:line="79" pos:column="53"/></name><operator pos:line="79" pos:column="53">-&gt;<pos:position pos:line="79" pos:column="58"/></operator><name pos:line="79" pos:column="55">num_scrolled<pos:position pos:line="79" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="79" pos:column="70">arg<pos:position pos:line="79" pos:column="73"/></name></expr></argument>)<pos:position pos:line="79" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="80" pos:column="5">func<pos:position pos:line="80" pos:column="9"/></name><argument_list pos:line="80" pos:column="9">(<argument><expr><call><name pos:line="80" pos:column="10">apr_psprintf<pos:position pos:line="80" pos:column="22"/></name><argument_list pos:line="80" pos:column="22">(<argument><expr><name pos:line="80" pos:column="23">p<pos:position pos:line="80" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="26">"total retrieves since starting: &lt;b&gt;%lu&lt;/b&gt; hit, "<pos:position pos:line="80" pos:column="88"/></literal>
                     <literal type="string" pos:line="81" pos:column="22">"&lt;b&gt;%lu&lt;/b&gt; miss&lt;br&gt;"<pos:position pos:line="81" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="45">header<pos:position pos:line="81" pos:column="51"/></name><operator pos:line="81" pos:column="51">-&gt;<pos:position pos:line="81" pos:column="56"/></operator><name pos:line="81" pos:column="53">num_retrieves_hit<pos:position pos:line="81" pos:column="70"/></name></name></expr></argument>,
                     <argument><expr><name><name pos:line="82" pos:column="22">header<pos:position pos:line="82" pos:column="28"/></name><operator pos:line="82" pos:column="28">-&gt;<pos:position pos:line="82" pos:column="33"/></operator><name pos:line="82" pos:column="30">num_retrieves_miss<pos:position pos:line="82" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="82" pos:column="51">arg<pos:position pos:line="82" pos:column="54"/></name></expr></argument>)<pos:position pos:line="82" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">func<pos:position pos:line="83" pos:column="9"/></name><argument_list pos:line="83" pos:column="9">(<argument><expr><call><name pos:line="83" pos:column="10">apr_psprintf<pos:position pos:line="83" pos:column="22"/></name><argument_list pos:line="83" pos:column="22">(<argument><expr><name pos:line="83" pos:column="23">p<pos:position pos:line="83" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="26">"total removes since starting: &lt;b&gt;%lu&lt;/b&gt; hit, "<pos:position pos:line="83" pos:column="86"/></literal>
                     <literal type="string" pos:line="84" pos:column="22">"&lt;b&gt;%lu&lt;/b&gt; miss&lt;br&gt;"<pos:position pos:line="84" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="45">header<pos:position pos:line="84" pos:column="51"/></name><operator pos:line="84" pos:column="51">-&gt;<pos:position pos:line="84" pos:column="56"/></operator><name pos:line="84" pos:column="53">num_removes_hit<pos:position pos:line="84" pos:column="68"/></name></name></expr></argument>,
                     <argument><expr><name><name pos:line="85" pos:column="22">header<pos:position pos:line="85" pos:column="28"/></name><operator pos:line="85" pos:column="28">-&gt;<pos:position pos:line="85" pos:column="33"/></operator><name pos:line="85" pos:column="30">num_removes_miss<pos:position pos:line="85" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="85" pos:column="49">arg<pos:position pos:line="85" pos:column="52"/></name></expr></argument>)<pos:position pos:line="85" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="86" pos:column="5">ap_log_error<pos:position pos:line="86" pos:column="17"/></name><argument_list pos:line="86" pos:column="17">(<argument><expr><name pos:line="86" pos:column="18">APLOG_MARK<pos:position pos:line="86" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="30">APLOG_DEBUG<pos:position pos:line="86" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="43">0<pos:position pos:line="86" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="86" pos:column="46">s<pos:position pos:line="86" pos:column="47"/></name></expr></argument>, 
                 <argument><expr><literal type="string" pos:line="87" pos:column="18">"leaving shmcb_status"<pos:position pos:line="87" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="42"/></expr_stmt>
    <return pos:line="88" pos:column="5">return;<pos:position pos:line="88" pos:column="12"/></return>
}<pos:position pos:line="89" pos:column="2"/></block></function></unit>

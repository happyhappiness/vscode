<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3264_httpd-2.2.11.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">check_sbcs<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">apr_xlate_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">convset<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">inbuf<pos:position pos:line="3" pos:column="15"/></name><index pos:line="3" pos:column="15">[<expr><literal type="number" pos:line="3" pos:column="16">256<pos:position pos:line="3" pos:column="19"/></literal></expr>]<pos:position pos:line="3" pos:column="20"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="3" pos:column="22">outbuf<pos:position pos:line="3" pos:column="28"/></name><index pos:line="3" pos:column="28">[<expr><literal type="number" pos:line="3" pos:column="29">256<pos:position pos:line="3" pos:column="32"/></literal></expr>]<pos:position pos:line="3" pos:column="33"/></index></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">inbufptr<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name pos:line="4" pos:column="22">inbuf<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">outbufptr<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">outbuf<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">inbytes_left<pos:position pos:line="6" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="30">outbytes_left<pos:position pos:line="6" pos:column="43"/></name></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">translated<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_status_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">rv<pos:position pos:line="9" pos:column="20"/></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>

    <for pos:line="11" pos:column="5">for <control pos:line="11" pos:column="9">(<init><expr><name pos:line="11" pos:column="10">i<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <literal type="number" pos:line="11" pos:column="14">0<pos:position pos:line="11" pos:column="15"/></literal></expr>;<pos:position pos:line="11" pos:column="16"/></init> <condition><expr><name pos:line="11" pos:column="17">i<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">&lt;<pos:position pos:line="11" pos:column="23"/></operator> <sizeof pos:line="11" pos:column="21">sizeof<argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">inbuf<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></sizeof></expr>;<pos:position pos:line="11" pos:column="35"/></condition> <incr><expr><name pos:line="11" pos:column="36">i<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">++<pos:position pos:line="11" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="40"/></control> <block pos:line="11" pos:column="41">{
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">inbuf<pos:position pos:line="12" pos:column="14"/></name><index pos:line="12" pos:column="14">[<expr><name pos:line="12" pos:column="15">i<pos:position pos:line="12" pos:column="16"/></name></expr>]<pos:position pos:line="12" pos:column="17"/></index></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">i<pos:position pos:line="12" pos:column="21"/></name></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="15" pos:column="5">inbytes_left<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">outbytes_left<pos:position pos:line="15" pos:column="33"/></name> <operator pos:line="15" pos:column="34">=<pos:position pos:line="15" pos:column="35"/></operator> <sizeof pos:line="15" pos:column="36">sizeof<argument_list pos:line="15" pos:column="42">(<argument><expr><name pos:line="15" pos:column="43">inbuf<pos:position pos:line="15" pos:column="48"/></name></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></sizeof></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">rv<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <call><name pos:line="16" pos:column="10">apr_iconv<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name><name pos:line="16" pos:column="20">convset<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">-&gt;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="29">ich<pos:position pos:line="16" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="34">(<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="35">ICONV_INBUF_TYPE<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">)<pos:position pos:line="16" pos:column="52"/></operator><operator pos:line="16" pos:column="52">&amp;<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="53">inbufptr<pos:position pos:line="16" pos:column="61"/></name></expr></argument>,
                   <argument><expr><operator pos:line="17" pos:column="20">&amp;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="21">inbytes_left<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="35">&amp;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="36">outbufptr<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="47">&amp;<pos:position pos:line="17" pos:column="52"/></operator><name pos:line="17" pos:column="48">outbytes_left<pos:position pos:line="17" pos:column="61"/></name></expr></argument>,
                   <argument><expr><operator pos:line="18" pos:column="20">&amp;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="21">translated<pos:position pos:line="18" pos:column="31"/></name></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">(<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">rv<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">==<pos:position pos:line="20" pos:column="15"/></operator> <name pos:line="20" pos:column="16">APR_SUCCESS<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">)<pos:position pos:line="20" pos:column="28"/></operator>
        <operator pos:line="21" pos:column="9">&amp;&amp;<pos:position pos:line="21" pos:column="19"/></operator> <operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">translated<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">!=<pos:position pos:line="21" pos:column="26"/></operator> <operator pos:line="21" pos:column="27">(<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">apr_size_t<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">)<pos:position pos:line="21" pos:column="39"/></operator><operator pos:line="21" pos:column="39">-<pos:position pos:line="21" pos:column="40"/></operator><literal type="number" pos:line="21" pos:column="40">1<pos:position pos:line="21" pos:column="41"/></literal><operator pos:line="21" pos:column="41">)<pos:position pos:line="21" pos:column="42"/></operator>
        <operator pos:line="22" pos:column="9">&amp;&amp;<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="12">inbytes_left<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">==<pos:position pos:line="22" pos:column="27"/></operator> <literal type="number" pos:line="22" pos:column="28">0<pos:position pos:line="22" pos:column="29"/></literal>
        <operator pos:line="23" pos:column="9">&amp;&amp;<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="12">outbytes_left<pos:position pos:line="23" pos:column="25"/></name> <operator pos:line="23" pos:column="26">==<pos:position pos:line="23" pos:column="28"/></operator> <literal type="number" pos:line="23" pos:column="29">0<pos:position pos:line="23" pos:column="30"/></literal></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31"> <block pos:line="23" pos:column="32">{
        <comment type="block" pos:line="24" pos:column="9">/* hurray... this is simple translation; save the table,
         * close the iconv descriptor
         */</comment>

        <expr_stmt><expr><name><name pos:line="28" pos:column="9">convset<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">sbcs_table<pos:position pos:line="28" pos:column="28"/></name></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <call><name pos:line="28" pos:column="31">apr_palloc<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">(<argument><expr><name><name pos:line="28" pos:column="42">convset<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">-&gt;<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="51">pool<pos:position pos:line="28" pos:column="55"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="57">sizeof<argument_list pos:line="28" pos:column="63">(<argument><expr><name pos:line="28" pos:column="64">outbuf<pos:position pos:line="28" pos:column="70"/></name></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">memcpy<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><name><name pos:line="29" pos:column="16">convset<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">-&gt;<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="25">sbcs_table<pos:position pos:line="29" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="37">outbuf<pos:position pos:line="29" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="45">sizeof<argument_list pos:line="29" pos:column="51">(<argument><expr><name pos:line="29" pos:column="52">outbuf<pos:position pos:line="29" pos:column="58"/></name></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">apr_iconv_close<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name><name pos:line="30" pos:column="25">convset<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">-&gt;<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="34">ich<pos:position pos:line="30" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="39">convset<pos:position pos:line="30" pos:column="46"/></name><operator pos:line="30" pos:column="46">-&gt;<pos:position pos:line="30" pos:column="51"/></operator><name pos:line="30" pos:column="48">pool<pos:position pos:line="30" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">convset<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">-&gt;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="18">ich<pos:position pos:line="31" pos:column="21"/></name></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <operator pos:line="31" pos:column="24">(<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">apr_iconv_t<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">)<pos:position pos:line="31" pos:column="37"/></operator><operator pos:line="31" pos:column="37">-<pos:position pos:line="31" pos:column="38"/></operator><literal type="number" pos:line="31" pos:column="38">1<pos:position pos:line="31" pos:column="39"/></literal></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>

        <comment type="block" pos:line="33" pos:column="9">/* TODO: add the table to the cache */</comment>
    }<pos:position pos:line="34" pos:column="6"/></block></then>
    <else pos:line="35" pos:column="5">else <block pos:line="35" pos:column="10">{
        <comment type="block" pos:line="36" pos:column="9">/* reset the iconv descriptor, since it's now in an undefined
         * state. */</comment>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">apr_iconv_close<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name><name pos:line="38" pos:column="25">convset<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">-&gt;<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="34">ich<pos:position pos:line="38" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="39">convset<pos:position pos:line="38" pos:column="46"/></name><operator pos:line="38" pos:column="46">-&gt;<pos:position pos:line="38" pos:column="51"/></operator><name pos:line="38" pos:column="48">pool<pos:position pos:line="38" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name pos:line="39" pos:column="9">rv<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <call><name pos:line="39" pos:column="14">apr_iconv_open<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><name><name pos:line="39" pos:column="29">convset<pos:position pos:line="39" pos:column="36"/></name><operator pos:line="39" pos:column="36">-&gt;<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="38">topage<pos:position pos:line="39" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="46">convset<pos:position pos:line="39" pos:column="53"/></name><operator pos:line="39" pos:column="53">-&gt;<pos:position pos:line="39" pos:column="58"/></operator><name pos:line="39" pos:column="55">frompage<pos:position pos:line="39" pos:column="63"/></name></name></expr></argument>, 
                            <argument><expr><name><name pos:line="40" pos:column="29">convset<pos:position pos:line="40" pos:column="36"/></name><operator pos:line="40" pos:column="36">-&gt;<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="38">pool<pos:position pos:line="40" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="44">&amp;<pos:position pos:line="40" pos:column="49"/></operator><name><name pos:line="40" pos:column="45">convset<pos:position pos:line="40" pos:column="52"/></name><operator pos:line="40" pos:column="52">-&gt;<pos:position pos:line="40" pos:column="57"/></operator><name pos:line="40" pos:column="54">ich<pos:position pos:line="40" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></else></if>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_239_httpd-2.0.64.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">dav_error<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type> <name pos:line="1" pos:column="20">dav_propdb_open<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">apr_pool_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">pool<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>,
                                   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">dav_resource<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">resource<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="66">int<pos:position pos:line="2" pos:column="69"/></name></type> <name pos:line="2" pos:column="70">ro<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>,
                                   <parameter><decl><type><name pos:line="3" pos:column="36">dav_db<pos:position pos:line="3" pos:column="42"/></name> <modifier pos:line="3" pos:column="43">*<pos:position pos:line="3" pos:column="44"/></modifier><modifier pos:line="3" pos:column="44">*<pos:position pos:line="3" pos:column="45"/></modifier></type><name pos:line="3" pos:column="45">pdb<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="49"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">dav_db<pos:position pos:line="5" pos:column="11"/></name> <modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier></type><name pos:line="5" pos:column="13">db<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">dav_error<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">err<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_datum_t<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">key<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_datum_t<pos:position pos:line="8" pos:column="16"/></name></type> <name pos:line="8" pos:column="17">value<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><block pos:line="8" pos:column="25">{ <expr><literal type="number" pos:line="8" pos:column="27">0<pos:position pos:line="8" pos:column="28"/></literal></expr> }<pos:position pos:line="8" pos:column="30"/></block></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="10" pos:column="5">*<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">pdb<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <name pos:line="10" pos:column="12">NULL<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/*
    ** Return if an error occurred, or there is no database.
    **
    ** NOTE: db could be NULL if we attempted to open a readonly
    **       database that doesn't exist. If we require read/write
    **       access, then a database was created and opened.
    */</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">err<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <call><name pos:line="19" pos:column="16">dav_dbm_open<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">pool<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="35">resource<pos:position pos:line="19" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="45">ro<pos:position pos:line="19" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="49">&amp;<pos:position pos:line="19" pos:column="54"/></operator><name pos:line="19" pos:column="50">db<pos:position pos:line="19" pos:column="52"/></name></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call><operator pos:line="19" pos:column="53">)<pos:position pos:line="19" pos:column="54"/></operator> <operator pos:line="19" pos:column="55">!=<pos:position pos:line="19" pos:column="57"/></operator> <name pos:line="19" pos:column="58">NULL<pos:position pos:line="19" pos:column="62"/></name>
        <operator pos:line="20" pos:column="9">||<pos:position pos:line="20" pos:column="11"/></operator> <name pos:line="20" pos:column="12">db<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">==<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">NULL<pos:position pos:line="20" pos:column="22"/></name></expr>)<pos:position pos:line="20" pos:column="23"/></condition><then pos:line="20" pos:column="23">
        <block type="pseudo"><return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">err<pos:position pos:line="21" pos:column="19"/></name></expr>;<pos:position pos:line="21" pos:column="20"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="23" pos:column="5">db<pos:position pos:line="23" pos:column="7"/></name><operator pos:line="23" pos:column="7">-&gt;<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="9">uri_index<pos:position pos:line="23" pos:column="18"/></name></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <call><name pos:line="23" pos:column="21">apr_hash_make<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><name pos:line="23" pos:column="35">pool<pos:position pos:line="23" pos:column="39"/></name></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="25" pos:column="5">key<pos:position pos:line="25" pos:column="8"/></name><operator pos:line="25" pos:column="8">.<pos:position pos:line="25" pos:column="9"/></operator><name pos:line="25" pos:column="9">dptr<pos:position pos:line="25" pos:column="13"/></name></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <name pos:line="25" pos:column="16">DAV_GDBM_NS_KEY<pos:position pos:line="25" pos:column="31"/></name></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">key<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">.<pos:position pos:line="26" pos:column="9"/></operator><name pos:line="26" pos:column="9">dsize<pos:position pos:line="26" pos:column="14"/></name></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="17">DAV_GDBM_NS_KEY_LEN<pos:position pos:line="26" pos:column="36"/></name></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">(<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">err<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">dav_dbm_fetch<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">db<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="34">key<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="39">&amp;<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="40">value<pos:position pos:line="27" pos:column="45"/></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call><operator pos:line="27" pos:column="46">)<pos:position pos:line="27" pos:column="47"/></operator> <operator pos:line="27" pos:column="48">!=<pos:position pos:line="27" pos:column="50"/></operator> <name pos:line="27" pos:column="51">NULL<pos:position pos:line="27" pos:column="55"/></name></expr>)<pos:position pos:line="27" pos:column="56"/></condition><then pos:line="27" pos:column="56"> <block pos:line="27" pos:column="57">{
        <comment type="block" pos:line="28" pos:column="9">/* ### push a higher-level description? */</comment>
        <return pos:line="29" pos:column="9">return <expr><name pos:line="29" pos:column="16">err<pos:position pos:line="29" pos:column="19"/></name></expr>;<pos:position pos:line="29" pos:column="20"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name><name pos:line="32" pos:column="9">value<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">.<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">dptr<pos:position pos:line="32" pos:column="19"/></name></name> <operator pos:line="32" pos:column="20">==<pos:position pos:line="32" pos:column="22"/></operator> <name pos:line="32" pos:column="23">NULL<pos:position pos:line="32" pos:column="27"/></name></expr>)<pos:position pos:line="32" pos:column="28"/></condition><then pos:line="32" pos:column="28"> <block pos:line="32" pos:column="29">{
        <decl_stmt><decl><type><name pos:line="33" pos:column="9">dav_propdb_metadata<pos:position pos:line="33" pos:column="28"/></name></type> <name pos:line="33" pos:column="29">m<pos:position pos:line="33" pos:column="30"/></name> <init pos:line="33" pos:column="31">= <expr><block pos:line="33" pos:column="33">{
            <expr><name pos:line="34" pos:column="13">DAV_DBVSN_MAJOR<pos:position pos:line="34" pos:column="28"/></name></expr>, <expr><name pos:line="34" pos:column="30">DAV_DBVSN_MINOR<pos:position pos:line="34" pos:column="45"/></name></expr>, <expr><literal type="number" pos:line="34" pos:column="47">0<pos:position pos:line="34" pos:column="48"/></literal></expr>
        }<pos:position pos:line="35" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="35" pos:column="11"/></decl_stmt>

        <comment type="block" pos:line="37" pos:column="9">/*
        ** If there is no METADATA key, then the database may be
        ** from versions 0.9.0 .. 0.9.4 (which would be incompatible).
        ** These can be identified by the presence of an NS_TABLE entry.
        */</comment>
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">key<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">.<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="13">dptr<pos:position pos:line="42" pos:column="17"/></name></name> <operator pos:line="42" pos:column="18">=<pos:position pos:line="42" pos:column="19"/></operator> <literal type="string" pos:line="42" pos:column="20">"NS_TABLE"<pos:position pos:line="42" pos:column="30"/></literal></expr>;<pos:position pos:line="42" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="43" pos:column="9">key<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">.<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="13">dsize<pos:position pos:line="43" pos:column="18"/></name></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <literal type="number" pos:line="43" pos:column="21">8<pos:position pos:line="43" pos:column="22"/></literal></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><call><name pos:line="44" pos:column="13">dav_dbm_exists<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><name pos:line="44" pos:column="28">db<pos:position pos:line="44" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="32">key<pos:position pos:line="44" pos:column="35"/></name></expr></argument>)<pos:position pos:line="44" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="37"/></condition><then pos:line="44" pos:column="37"> <block pos:line="44" pos:column="38">{
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">dav_dbm_close<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">(<argument><expr><name pos:line="45" pos:column="27">db<pos:position pos:line="45" pos:column="29"/></name></expr></argument>)<pos:position pos:line="45" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="31"/></expr_stmt>

            <comment type="block" pos:line="47" pos:column="13">/* call it a major version error */</comment>
            <return pos:line="48" pos:column="13">return <expr><call><name pos:line="48" pos:column="20">dav_new_error<pos:position pos:line="48" pos:column="33"/></name><argument_list pos:line="48" pos:column="33">(<argument><expr><name pos:line="48" pos:column="34">pool<pos:position pos:line="48" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="40">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="48" pos:column="66"/></name></expr></argument>,
                                 <argument><expr><name pos:line="49" pos:column="34">DAV_ERR_PROP_BAD_MAJOR<pos:position pos:line="49" pos:column="56"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="50" pos:column="34">"Prop database has the wrong major "<pos:position pos:line="50" pos:column="70"/></literal>
                                 <literal type="string" pos:line="51" pos:column="34">"version number and cannot be used."<pos:position pos:line="51" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="72"/></return>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="54" pos:column="9">/* initialize a new metadata structure */</comment>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">dav_set_bufsize<pos:position pos:line="55" pos:column="24"/></name><argument_list pos:line="55" pos:column="24">(<argument><expr><name pos:line="55" pos:column="25">pool<pos:position pos:line="55" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="31">&amp;<pos:position pos:line="55" pos:column="36"/></operator><name><name pos:line="55" pos:column="32">db<pos:position pos:line="55" pos:column="34"/></name><operator pos:line="55" pos:column="34">-&gt;<pos:position pos:line="55" pos:column="39"/></operator><name pos:line="55" pos:column="36">ns_table<pos:position pos:line="55" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="46">sizeof<argument_list pos:line="55" pos:column="52">(<argument><expr><name pos:line="55" pos:column="53">m<pos:position pos:line="55" pos:column="54"/></name></expr></argument>)<pos:position pos:line="55" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">memcpy<pos:position pos:line="56" pos:column="15"/></name><argument_list pos:line="56" pos:column="15">(<argument><expr><name><name pos:line="56" pos:column="16">db<pos:position pos:line="56" pos:column="18"/></name><operator pos:line="56" pos:column="18">-&gt;<pos:position pos:line="56" pos:column="23"/></operator><name pos:line="56" pos:column="20">ns_table<pos:position pos:line="56" pos:column="28"/></name><operator pos:line="56" pos:column="28">.<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="29">buf<pos:position pos:line="56" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="34">&amp;<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="35">m<pos:position pos:line="56" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="38">sizeof<argument_list pos:line="56" pos:column="44">(<argument><expr><name pos:line="56" pos:column="45">m<pos:position pos:line="56" pos:column="46"/></name></expr></argument>)<pos:position pos:line="56" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="56" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then>
    <else pos:line="58" pos:column="5">else <block pos:line="58" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="59" pos:column="9">dav_propdb_metadata<pos:position pos:line="59" pos:column="28"/></name></type> <name pos:line="59" pos:column="29">m<pos:position pos:line="59" pos:column="30"/></name></decl>;<pos:position pos:line="59" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="60" pos:column="9">int<pos:position pos:line="60" pos:column="12"/></name></type> <name pos:line="60" pos:column="13">ns<pos:position pos:line="60" pos:column="15"/></name></decl>;<pos:position pos:line="60" pos:column="16"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="61" pos:column="9">const<pos:position pos:line="61" pos:column="14"/></specifier> <name pos:line="61" pos:column="15">char<pos:position pos:line="61" pos:column="19"/></name> <modifier pos:line="61" pos:column="20">*<pos:position pos:line="61" pos:column="21"/></modifier></type><name pos:line="61" pos:column="21">uri<pos:position pos:line="61" pos:column="24"/></name></decl>;<pos:position pos:line="61" pos:column="25"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="63" pos:column="9">dav_set_bufsize<pos:position pos:line="63" pos:column="24"/></name><argument_list pos:line="63" pos:column="24">(<argument><expr><name pos:line="63" pos:column="25">pool<pos:position pos:line="63" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="31">&amp;<pos:position pos:line="63" pos:column="36"/></operator><name><name pos:line="63" pos:column="32">db<pos:position pos:line="63" pos:column="34"/></name><operator pos:line="63" pos:column="34">-&gt;<pos:position pos:line="63" pos:column="39"/></operator><name pos:line="63" pos:column="36">ns_table<pos:position pos:line="63" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="46">value<pos:position pos:line="63" pos:column="51"/></name><operator pos:line="63" pos:column="51">.<pos:position pos:line="63" pos:column="52"/></operator><name pos:line="63" pos:column="52">dsize<pos:position pos:line="63" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">memcpy<pos:position pos:line="64" pos:column="15"/></name><argument_list pos:line="64" pos:column="15">(<argument><expr><name><name pos:line="64" pos:column="16">db<pos:position pos:line="64" pos:column="18"/></name><operator pos:line="64" pos:column="18">-&gt;<pos:position pos:line="64" pos:column="23"/></operator><name pos:line="64" pos:column="20">ns_table<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">.<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="29">buf<pos:position pos:line="64" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="34">value<pos:position pos:line="64" pos:column="39"/></name><operator pos:line="64" pos:column="39">.<pos:position pos:line="64" pos:column="40"/></operator><name pos:line="64" pos:column="40">dptr<pos:position pos:line="64" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="46">value<pos:position pos:line="64" pos:column="51"/></name><operator pos:line="64" pos:column="51">.<pos:position pos:line="64" pos:column="52"/></operator><name pos:line="64" pos:column="52">dsize<pos:position pos:line="64" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="59"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="66" pos:column="9">memcpy<pos:position pos:line="66" pos:column="15"/></name><argument_list pos:line="66" pos:column="15">(<argument><expr><operator pos:line="66" pos:column="16">&amp;<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="17">m<pos:position pos:line="66" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="20">value<pos:position pos:line="66" pos:column="25"/></name><operator pos:line="66" pos:column="25">.<pos:position pos:line="66" pos:column="26"/></operator><name pos:line="66" pos:column="26">dptr<pos:position pos:line="66" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="32">sizeof<argument_list pos:line="66" pos:column="38">(<argument><expr><name pos:line="66" pos:column="39">m<pos:position pos:line="66" pos:column="40"/></name></expr></argument>)<pos:position pos:line="66" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="43"/></expr_stmt>
        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name><name pos:line="67" pos:column="13">m<pos:position pos:line="67" pos:column="14"/></name><operator pos:line="67" pos:column="14">.<pos:position pos:line="67" pos:column="15"/></operator><name pos:line="67" pos:column="15">major<pos:position pos:line="67" pos:column="20"/></name></name> <operator pos:line="67" pos:column="21">!=<pos:position pos:line="67" pos:column="23"/></operator> <name pos:line="67" pos:column="24">DAV_DBVSN_MAJOR<pos:position pos:line="67" pos:column="39"/></name></expr>)<pos:position pos:line="67" pos:column="40"/></condition><then pos:line="67" pos:column="40"> <block pos:line="67" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">dav_dbm_close<pos:position pos:line="68" pos:column="26"/></name><argument_list pos:line="68" pos:column="26">(<argument><expr><name pos:line="68" pos:column="27">db<pos:position pos:line="68" pos:column="29"/></name></expr></argument>)<pos:position pos:line="68" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="31"/></expr_stmt>

            <return pos:line="70" pos:column="13">return <expr><call><name pos:line="70" pos:column="20">dav_new_error<pos:position pos:line="70" pos:column="33"/></name><argument_list pos:line="70" pos:column="33">(<argument><expr><name pos:line="70" pos:column="34">pool<pos:position pos:line="70" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="40">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="70" pos:column="66"/></name></expr></argument>,
                                 <argument><expr><name pos:line="71" pos:column="34">DAV_ERR_PROP_BAD_MAJOR<pos:position pos:line="71" pos:column="56"/></name></expr></argument>,
                                 <argument><expr><literal type="string" pos:line="72" pos:column="34">"Prop database has the wrong major "<pos:position pos:line="72" pos:column="70"/></literal>
                                 <literal type="string" pos:line="73" pos:column="34">"version number and cannot be used."<pos:position pos:line="73" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="72"/></return>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="75" pos:column="9">db<pos:position pos:line="75" pos:column="11"/></name><operator pos:line="75" pos:column="11">-&gt;<pos:position pos:line="75" pos:column="16"/></operator><name pos:line="75" pos:column="13">version<pos:position pos:line="75" pos:column="20"/></name></name> <operator pos:line="75" pos:column="21">=<pos:position pos:line="75" pos:column="22"/></operator> <name><name pos:line="75" pos:column="23">m<pos:position pos:line="75" pos:column="24"/></name><operator pos:line="75" pos:column="24">.<pos:position pos:line="75" pos:column="25"/></operator><name pos:line="75" pos:column="25">minor<pos:position pos:line="75" pos:column="30"/></name></name></expr>;<pos:position pos:line="75" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="76" pos:column="9">db<pos:position pos:line="76" pos:column="11"/></name><operator pos:line="76" pos:column="11">-&gt;<pos:position pos:line="76" pos:column="16"/></operator><name pos:line="76" pos:column="13">ns_count<pos:position pos:line="76" pos:column="21"/></name></name> <operator pos:line="76" pos:column="22">=<pos:position pos:line="76" pos:column="23"/></operator> <call><name pos:line="76" pos:column="24">ntohs<pos:position pos:line="76" pos:column="29"/></name><argument_list pos:line="76" pos:column="29">(<argument><expr><name><name pos:line="76" pos:column="30">m<pos:position pos:line="76" pos:column="31"/></name><operator pos:line="76" pos:column="31">.<pos:position pos:line="76" pos:column="32"/></operator><name pos:line="76" pos:column="32">ns_count<pos:position pos:line="76" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="42"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="78" pos:column="9">dav_dbm_freedatum<pos:position pos:line="78" pos:column="26"/></name><argument_list pos:line="78" pos:column="26">(<argument><expr><name pos:line="78" pos:column="27">db<pos:position pos:line="78" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="31">value<pos:position pos:line="78" pos:column="36"/></name></expr></argument>)<pos:position pos:line="78" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="38"/></expr_stmt>

        <comment type="block" pos:line="80" pos:column="9">/* create db-&gt;uri_index */</comment>
        <for pos:line="81" pos:column="9">for <control pos:line="81" pos:column="13">(<init><expr><name pos:line="81" pos:column="14">ns<pos:position pos:line="81" pos:column="16"/></name> <operator pos:line="81" pos:column="17">=<pos:position pos:line="81" pos:column="18"/></operator> <literal type="number" pos:line="81" pos:column="19">0<pos:position pos:line="81" pos:column="20"/></literal></expr><operator pos:line="81" pos:column="20">,<pos:position pos:line="81" pos:column="21"/></operator> <expr><name pos:line="81" pos:column="22">uri<pos:position pos:line="81" pos:column="25"/></name> <operator pos:line="81" pos:column="26">=<pos:position pos:line="81" pos:column="27"/></operator> <name><name pos:line="81" pos:column="28">db<pos:position pos:line="81" pos:column="30"/></name><operator pos:line="81" pos:column="30">-&gt;<pos:position pos:line="81" pos:column="35"/></operator><name pos:line="81" pos:column="32">ns_table<pos:position pos:line="81" pos:column="40"/></name><operator pos:line="81" pos:column="40">.<pos:position pos:line="81" pos:column="41"/></operator><name pos:line="81" pos:column="41">buf<pos:position pos:line="81" pos:column="44"/></name></name> <operator pos:line="81" pos:column="45">+<pos:position pos:line="81" pos:column="46"/></operator> <sizeof pos:line="81" pos:column="47">sizeof<argument_list pos:line="81" pos:column="53">(<argument><expr><name pos:line="81" pos:column="54">dav_propdb_metadata<pos:position pos:line="81" pos:column="73"/></name></expr></argument>)<pos:position pos:line="81" pos:column="74"/></argument_list></sizeof></expr>;<pos:position pos:line="81" pos:column="75"/></init>
             <condition><expr><name pos:line="82" pos:column="14">ns<pos:position pos:line="82" pos:column="16"/></name><operator pos:line="82" pos:column="16">++<pos:position pos:line="82" pos:column="18"/></operator> <operator pos:line="82" pos:column="19">&lt;<pos:position pos:line="82" pos:column="23"/></operator> <name><name pos:line="82" pos:column="21">db<pos:position pos:line="82" pos:column="23"/></name><operator pos:line="82" pos:column="23">-&gt;<pos:position pos:line="82" pos:column="28"/></operator><name pos:line="82" pos:column="25">ns_count<pos:position pos:line="82" pos:column="33"/></name></name></expr>;<pos:position pos:line="82" pos:column="34"/></condition>
             <incr><expr><name pos:line="83" pos:column="14">uri<pos:position pos:line="83" pos:column="17"/></name> <operator pos:line="83" pos:column="18">+=<pos:position pos:line="83" pos:column="20"/></operator> <call><name pos:line="83" pos:column="21">strlen<pos:position pos:line="83" pos:column="27"/></name><argument_list pos:line="83" pos:column="27">(<argument><expr><name pos:line="83" pos:column="28">uri<pos:position pos:line="83" pos:column="31"/></name></expr></argument>)<pos:position pos:line="83" pos:column="32"/></argument_list></call> <operator pos:line="83" pos:column="33">+<pos:position pos:line="83" pos:column="34"/></operator> <literal type="number" pos:line="83" pos:column="35">1<pos:position pos:line="83" pos:column="36"/></literal></expr></incr>)<pos:position pos:line="83" pos:column="37"/></control> <block pos:line="83" pos:column="38">{

            <comment type="block" pos:line="85" pos:column="13">/* we must copy the key, in case ns_table.buf moves */</comment>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">apr_hash_set<pos:position pos:line="86" pos:column="25"/></name><argument_list pos:line="86" pos:column="25">(<argument><expr><name><name pos:line="86" pos:column="26">db<pos:position pos:line="86" pos:column="28"/></name><operator pos:line="86" pos:column="28">-&gt;<pos:position pos:line="86" pos:column="33"/></operator><name pos:line="86" pos:column="30">uri_index<pos:position pos:line="86" pos:column="39"/></name></name></expr></argument>,
                         <argument><expr><call><name pos:line="87" pos:column="26">apr_pstrdup<pos:position pos:line="87" pos:column="37"/></name><argument_list pos:line="87" pos:column="37">(<argument><expr><name pos:line="87" pos:column="38">pool<pos:position pos:line="87" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="44">uri<pos:position pos:line="87" pos:column="47"/></name></expr></argument>)<pos:position pos:line="87" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="87" pos:column="50">APR_HASH_KEY_STRING<pos:position pos:line="87" pos:column="69"/></name></expr></argument>,
                         <argument><expr><operator pos:line="88" pos:column="26">(<pos:position pos:line="88" pos:column="27"/></operator><name pos:line="88" pos:column="27">void<pos:position pos:line="88" pos:column="31"/></name> <operator pos:line="88" pos:column="32">*<pos:position pos:line="88" pos:column="33"/></operator><operator pos:line="88" pos:column="33">)<pos:position pos:line="88" pos:column="34"/></operator><name pos:line="88" pos:column="34">ns<pos:position pos:line="88" pos:column="36"/></name></expr></argument>)<pos:position pos:line="88" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="89" pos:column="10"/></block></for>
    }<pos:position pos:line="90" pos:column="6"/></block></else></if>

    <expr_stmt><expr><operator pos:line="92" pos:column="5">*<pos:position pos:line="92" pos:column="6"/></operator><name pos:line="92" pos:column="6">pdb<pos:position pos:line="92" pos:column="9"/></name> <operator pos:line="92" pos:column="10">=<pos:position pos:line="92" pos:column="11"/></operator> <name pos:line="92" pos:column="12">db<pos:position pos:line="92" pos:column="14"/></name></expr>;<pos:position pos:line="92" pos:column="15"/></expr_stmt>
    <return pos:line="93" pos:column="5">return <expr><name pos:line="93" pos:column="12">NULL<pos:position pos:line="93" pos:column="16"/></name></expr>;<pos:position pos:line="93" pos:column="17"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3562_httpd-2.2.16.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">apr_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">apr_filepath_list_split_impl<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">apr_array_header_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier><modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">pathelts<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                                          <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">liststr<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
                                          <parameter><decl><type><name pos:line="3" pos:column="43">char<pos:position pos:line="3" pos:column="47"/></name></type> <name pos:line="3" pos:column="48">separator<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>,
                                          <parameter><decl><type><name pos:line="4" pos:column="43">apr_pool_t<pos:position pos:line="4" pos:column="53"/></name> <modifier pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></modifier></type><name pos:line="4" pos:column="55">p<pos:position pos:line="4" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="57"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">path<pos:position pos:line="6" pos:column="15"/></name></decl>, <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="18">part<pos:position pos:line="6" pos:column="22"/></name></decl>, <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="25">ptr<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">separator_string<pos:position pos:line="7" pos:column="26"/></name><index pos:line="7" pos:column="26">[<expr><literal type="number" pos:line="7" pos:column="27">2<pos:position pos:line="7" pos:column="28"/></literal></expr>]<pos:position pos:line="7" pos:column="29"/></index></name> <init pos:line="7" pos:column="30">= <expr><block pos:line="7" pos:column="32">{ <expr><literal type="char" pos:line="7" pos:column="34">'\0'<pos:position pos:line="7" pos:column="38"/></literal></expr>, <expr><literal type="char" pos:line="7" pos:column="40">'\0'<pos:position pos:line="7" pos:column="44"/></literal></expr> }<pos:position pos:line="7" pos:column="46"/></block></expr></init></decl>;<pos:position pos:line="7" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_array_header_t<pos:position pos:line="8" pos:column="23"/></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">elts<pos:position pos:line="8" pos:column="29"/></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">nelts<pos:position pos:line="9" pos:column="14"/></name></decl>;<pos:position pos:line="9" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="11" pos:column="5">separator_string<pos:position pos:line="11" pos:column="21"/></name><index pos:line="11" pos:column="21">[<expr><literal type="number" pos:line="11" pos:column="22">0<pos:position pos:line="11" pos:column="23"/></literal></expr>]<pos:position pos:line="11" pos:column="24"/></index></name> <operator pos:line="11" pos:column="25">=<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">separator<pos:position pos:line="11" pos:column="36"/></name></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>
    <comment type="block" pos:line="12" pos:column="5">/* Count the number of path elements. We know there'll be at least
       one even if path is an empty string. */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">path<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <call><name pos:line="14" pos:column="12">apr_pstrdup<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">p<pos:position pos:line="14" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="27">liststr<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
    <for pos:line="15" pos:column="5">for <control pos:line="15" pos:column="9">(<init><expr><name pos:line="15" pos:column="10">nelts<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr><operator pos:line="15" pos:column="19">,<pos:position pos:line="15" pos:column="20"/></operator> <expr><name pos:line="15" pos:column="21">ptr<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <name pos:line="15" pos:column="27">path<pos:position pos:line="15" pos:column="31"/></name></expr>;<pos:position pos:line="15" pos:column="32"/></init> <condition><expr><name pos:line="15" pos:column="33">ptr<pos:position pos:line="15" pos:column="36"/></name> <operator pos:line="15" pos:column="37">!=<pos:position pos:line="15" pos:column="39"/></operator> <name pos:line="15" pos:column="40">NULL<pos:position pos:line="15" pos:column="44"/></name></expr>;<pos:position pos:line="15" pos:column="45"/></condition> <incr><expr><operator pos:line="15" pos:column="46">++<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="48">nelts<pos:position pos:line="15" pos:column="53"/></name></expr></incr>)<pos:position pos:line="15" pos:column="54"/></control>
    <block pos:line="16" pos:column="5">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">ptr<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">strchr<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">ptr<pos:position pos:line="17" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="27">separator<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">ptr<pos:position pos:line="18" pos:column="16"/></name></expr>)<pos:position pos:line="18" pos:column="17"/></condition><then pos:line="18" pos:column="17">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="19" pos:column="13">++<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">ptr<pos:position pos:line="19" pos:column="18"/></name></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></for>

    <comment type="block" pos:line="22" pos:column="5">/* Split the path into the array. */</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">elts<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <call><name pos:line="23" pos:column="12">apr_array_make<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">p<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="30">nelts<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="37">sizeof<argument_list pos:line="23" pos:column="43">(<argument><expr><name pos:line="23" pos:column="44">char<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">*<pos:position pos:line="23" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>
    <while pos:line="24" pos:column="5">while <condition pos:line="24" pos:column="11">(<expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">part<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <call><name pos:line="24" pos:column="20">apr_strtok<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><name pos:line="24" pos:column="31">path<pos:position pos:line="24" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="37">separator_string<pos:position pos:line="24" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="55">&amp;<pos:position pos:line="24" pos:column="60"/></operator><name pos:line="24" pos:column="56">ptr<pos:position pos:line="24" pos:column="59"/></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call><operator pos:line="24" pos:column="60">)<pos:position pos:line="24" pos:column="61"/></operator> <operator pos:line="24" pos:column="62">!=<pos:position pos:line="24" pos:column="64"/></operator> <name pos:line="24" pos:column="65">NULL<pos:position pos:line="24" pos:column="69"/></name></expr>)<pos:position pos:line="24" pos:column="70"/></condition>
    <block pos:line="25" pos:column="5">{
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">*<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">part<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">==<pos:position pos:line="26" pos:column="21"/></operator> <literal type="char" pos:line="26" pos:column="22">'\0'<pos:position pos:line="26" pos:column="26"/></literal></expr>)<pos:position pos:line="26" pos:column="27"/></condition><then pos:line="26" pos:column="27">      <comment type="block" pos:line="26" pos:column="33">/* Ignore empty path components. */</comment>
            <block type="pseudo"><continue pos:line="27" pos:column="13">continue;<pos:position pos:line="27" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><operator pos:line="29" pos:column="9">*<pos:position pos:line="29" pos:column="10"/></operator><operator pos:line="29" pos:column="10">(<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="11">char<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">*<pos:position pos:line="29" pos:column="16"/></operator><operator pos:line="29" pos:column="16">*<pos:position pos:line="29" pos:column="17"/></operator><operator pos:line="29" pos:column="17">)<pos:position pos:line="29" pos:column="18"/></operator><call><name pos:line="29" pos:column="18">apr_array_push<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">elts<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call> <operator pos:line="29" pos:column="39">=<pos:position pos:line="29" pos:column="40"/></operator> <name pos:line="29" pos:column="41">part<pos:position pos:line="29" pos:column="45"/></name></expr>;<pos:position pos:line="29" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="30" pos:column="9">path<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <name pos:line="30" pos:column="16">NULL<pos:position pos:line="30" pos:column="20"/></name></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>            <comment type="block" pos:line="30" pos:column="33">/* For the next call to apr_strtok */</comment>
    }<pos:position pos:line="31" pos:column="6"/></block></while>

    <expr_stmt><expr><operator pos:line="33" pos:column="5">*<pos:position pos:line="33" pos:column="6"/></operator><name pos:line="33" pos:column="6">pathelts<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">=<pos:position pos:line="33" pos:column="16"/></operator> <name pos:line="33" pos:column="17">elts<pos:position pos:line="33" pos:column="21"/></name></expr>;<pos:position pos:line="33" pos:column="22"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><name pos:line="34" pos:column="12">APR_SUCCESS<pos:position pos:line="34" pos:column="23"/></name></expr>;<pos:position pos:line="34" pos:column="24"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_1797_httpd-2.4.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">copy_brigade_range<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">apr_bucket_brigade<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">bb<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="2" pos:column="40">apr_bucket_brigade<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">bbout<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="3" pos:column="40">apr_off_t<pos:position pos:line="3" pos:column="49"/></name></type> <name pos:line="3" pos:column="50">start<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="4" pos:column="40">apr_off_t<pos:position pos:line="4" pos:column="49"/></name></type> <name pos:line="4" pos:column="50">end<pos:position pos:line="4" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="54"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">apr_bucket<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">first<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><name pos:line="6" pos:column="25">NULL<pos:position pos:line="6" pos:column="29"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="32">last<pos:position pos:line="6" pos:column="36"/></name> <init pos:line="6" pos:column="37">= <expr><name pos:line="6" pos:column="39">NULL<pos:position pos:line="6" pos:column="43"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="45">*<pos:position pos:line="6" pos:column="46"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="46">out_first<pos:position pos:line="6" pos:column="55"/></name> <init pos:line="6" pos:column="56">= <expr><name pos:line="6" pos:column="58">NULL<pos:position pos:line="6" pos:column="62"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="64">*<pos:position pos:line="6" pos:column="65"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="65">e<pos:position pos:line="6" pos:column="66"/></name></decl>;<pos:position pos:line="6" pos:column="67"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_uint64_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">pos<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="27">off_first<pos:position pos:line="7" pos:column="36"/></name> <init pos:line="7" pos:column="37">= <expr><literal type="number" pos:line="7" pos:column="39">0<pos:position pos:line="7" pos:column="40"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="42">off_last<pos:position pos:line="7" pos:column="50"/></name> <init pos:line="7" pos:column="51">= <expr><literal type="number" pos:line="7" pos:column="53">0<pos:position pos:line="7" pos:column="54"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">apr_status_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">rv<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">apr_uint64_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">start64<pos:position pos:line="9" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="27">end64<pos:position pos:line="9" pos:column="32"/></name></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">apr_off_t<pos:position pos:line="10" pos:column="14"/></name></type> <name pos:line="10" pos:column="15">pofft<pos:position pos:line="10" pos:column="20"/></name> <init pos:line="10" pos:column="21">= <expr><literal type="number" pos:line="10" pos:column="23">0<pos:position pos:line="10" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/*
     * Once we know that start and end are &gt;= 0 convert everything to apr_uint64_t.
     * See the comments in apr_brigade_partition why.
     * In short apr_off_t (for values &gt;= 0)and apr_size_t fit into apr_uint64_t.
     */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">start64<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <operator pos:line="17" pos:column="15">(<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">apr_uint64_t<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">)<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="29">start<pos:position pos:line="17" pos:column="34"/></name></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">end64<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <operator pos:line="18" pos:column="13">(<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">apr_uint64_t<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">)<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">end<pos:position pos:line="18" pos:column="30"/></name></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">start<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">&lt;<pos:position pos:line="20" pos:column="19"/></operator> <literal type="number" pos:line="20" pos:column="17">0<pos:position pos:line="20" pos:column="18"/></literal> <operator pos:line="20" pos:column="19">||<pos:position pos:line="20" pos:column="21"/></operator> <name><name pos:line="20" pos:column="22">end<pos:position pos:line="20" pos:column="25"/></name> <argument_list type="generic" pos:line="20" pos:column="26">&lt; <argument><expr><literal type="number" pos:line="20" pos:column="28">0<pos:position pos:line="20" pos:column="29"/></literal> <operator pos:line="20" pos:column="30">||<pos:position pos:line="20" pos:column="32"/></operator> <name pos:line="20" pos:column="33">start64<pos:position pos:line="20" pos:column="40"/></name></expr></argument> &gt;<pos:position pos:line="20" pos:column="45"/></argument_list></name> <name pos:line="20" pos:column="43">end64<pos:position pos:line="20" pos:column="48"/></name></expr>)<pos:position pos:line="20" pos:column="49"/></condition><then pos:line="20" pos:column="49">
        <block type="pseudo"><return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">APR_EINVAL<pos:position pos:line="21" pos:column="26"/></name></expr>;<pos:position pos:line="21" pos:column="27"/></return></block></then></if>

    <for pos:line="23" pos:column="5">for <control pos:line="23" pos:column="9">(<init><expr><name pos:line="23" pos:column="10">e<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">APR_BRIGADE_FIRST<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><name pos:line="23" pos:column="32">bb<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="36"/></init>
         <condition><expr><name pos:line="24" pos:column="10">e<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">!=<pos:position pos:line="24" pos:column="14"/></operator> <call><name pos:line="24" pos:column="15">APR_BRIGADE_SENTINEL<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><name pos:line="24" pos:column="36">bb<pos:position pos:line="24" pos:column="38"/></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="40"/></condition>
         <incr><expr><name pos:line="25" pos:column="10">e<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">APR_BUCKET_NEXT<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">e<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr></incr>)<pos:position pos:line="25" pos:column="33"/></control>
    <block pos:line="26" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">apr_uint64_t<pos:position pos:line="27" pos:column="21"/></name></type> <name pos:line="27" pos:column="22">elen64<pos:position pos:line="27" pos:column="28"/></name></decl>;<pos:position pos:line="27" pos:column="29"/></decl_stmt>
        <comment type="block" pos:line="28" pos:column="9">/* we know that no bucket has undefined length (-1) */</comment>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">AP_DEBUG_ASSERT<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name><name pos:line="29" pos:column="25">e<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">-&gt;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="28">length<pos:position pos:line="29" pos:column="34"/></name></name> <operator pos:line="29" pos:column="35">!=<pos:position pos:line="29" pos:column="37"/></operator> <call pos:line="29" pos:column="38">(<name pos:line="29" pos:column="39">apr_size_t<pos:position pos:line="29" pos:column="49"/></name>)<argument_list pos:line="29" pos:column="50">(<argument><expr><operator pos:line="29" pos:column="51">-<pos:position pos:line="29" pos:column="52"/></operator><literal type="number" pos:line="29" pos:column="52">1<pos:position pos:line="29" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><name pos:line="30" pos:column="9">elen64<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <operator pos:line="30" pos:column="18">(<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="19">apr_uint64_t<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">)<pos:position pos:line="30" pos:column="32"/></operator><name><name pos:line="30" pos:column="32">e<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">-&gt;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="35">length<pos:position pos:line="30" pos:column="41"/></name></name></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">first<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">&amp;&amp;<pos:position pos:line="31" pos:column="30"/></operator> <operator pos:line="31" pos:column="23">(<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="24">elen64<pos:position pos:line="31" pos:column="30"/></name> <operator pos:line="31" pos:column="31">+<pos:position pos:line="31" pos:column="32"/></operator> <name pos:line="31" pos:column="33">pos<pos:position pos:line="31" pos:column="36"/></name> <operator pos:line="31" pos:column="37">&gt;<pos:position pos:line="31" pos:column="41"/></operator> <name pos:line="31" pos:column="39">start64<pos:position pos:line="31" pos:column="46"/></name><operator pos:line="31" pos:column="46">)<pos:position pos:line="31" pos:column="47"/></operator></expr>)<pos:position pos:line="31" pos:column="48"/></condition><then pos:line="31" pos:column="48"> <block pos:line="31" pos:column="49">{
            <expr_stmt><expr><name pos:line="32" pos:column="13">first<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator> <name pos:line="32" pos:column="21">e<pos:position pos:line="32" pos:column="22"/></name></expr>;<pos:position pos:line="32" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="33" pos:column="13">off_first<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="25">pos<pos:position pos:line="33" pos:column="28"/></name></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">elen64<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">+<pos:position pos:line="35" pos:column="21"/></operator> <name pos:line="35" pos:column="22">pos<pos:position pos:line="35" pos:column="25"/></name> <operator pos:line="35" pos:column="26">&gt;<pos:position pos:line="35" pos:column="30"/></operator> <name pos:line="35" pos:column="28">end64<pos:position pos:line="35" pos:column="33"/></name></expr>)<pos:position pos:line="35" pos:column="34"/></condition><then pos:line="35" pos:column="34"> <block pos:line="35" pos:column="35">{
            <expr_stmt><expr><name pos:line="36" pos:column="13">last<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <name pos:line="36" pos:column="20">e<pos:position pos:line="36" pos:column="21"/></name></expr>;<pos:position pos:line="36" pos:column="22"/></expr_stmt>
            <expr_stmt><expr><name pos:line="37" pos:column="13">off_last<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="24">pos<pos:position pos:line="37" pos:column="27"/></name></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
            <break pos:line="38" pos:column="13">break;<pos:position pos:line="38" pos:column="19"/></break>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="40" pos:column="9">pos<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">+=<pos:position pos:line="40" pos:column="15"/></operator> <name pos:line="40" pos:column="16">elen64<pos:position pos:line="40" pos:column="22"/></name></expr>;<pos:position pos:line="40" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></for>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><operator pos:line="42" pos:column="9">!<pos:position pos:line="42" pos:column="10"/></operator><name pos:line="42" pos:column="10">first<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">||<pos:position pos:line="42" pos:column="18"/></operator> <operator pos:line="42" pos:column="19">!<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">last<pos:position pos:line="42" pos:column="24"/></name></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25">
        <block type="pseudo"><return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">APR_EINVAL<pos:position pos:line="43" pos:column="26"/></name></expr>;<pos:position pos:line="43" pos:column="27"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="45" pos:column="5">e<pos:position pos:line="45" pos:column="6"/></name> <operator pos:line="45" pos:column="7">=<pos:position pos:line="45" pos:column="8"/></operator> <name pos:line="45" pos:column="9">first<pos:position pos:line="45" pos:column="14"/></name></expr>;<pos:position pos:line="45" pos:column="15"/></expr_stmt>
    <while pos:line="46" pos:column="5">while <condition pos:line="46" pos:column="11">(<expr><literal type="number" pos:line="46" pos:column="12">1<pos:position pos:line="46" pos:column="13"/></literal></expr>)<pos:position pos:line="46" pos:column="14"/></condition>
    <block pos:line="47" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="48" pos:column="9">apr_bucket<pos:position pos:line="48" pos:column="19"/></name> <modifier pos:line="48" pos:column="20">*<pos:position pos:line="48" pos:column="21"/></modifier></type><name pos:line="48" pos:column="21">copy<pos:position pos:line="48" pos:column="25"/></name></decl>;<pos:position pos:line="48" pos:column="26"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">AP_DEBUG_ASSERT<pos:position pos:line="49" pos:column="24"/></name><argument_list pos:line="49" pos:column="24">(<argument><expr><name pos:line="49" pos:column="25">e<pos:position pos:line="49" pos:column="26"/></name> <operator pos:line="49" pos:column="27">!=<pos:position pos:line="49" pos:column="29"/></operator> <call><name pos:line="49" pos:column="30">APR_BRIGADE_SENTINEL<pos:position pos:line="49" pos:column="50"/></name><argument_list pos:line="49" pos:column="50">(<argument><expr><name pos:line="49" pos:column="51">bb<pos:position pos:line="49" pos:column="53"/></name></expr></argument>)<pos:position pos:line="49" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><name pos:line="50" pos:column="9">rv<pos:position pos:line="50" pos:column="11"/></name> <operator pos:line="50" pos:column="12">=<pos:position pos:line="50" pos:column="13"/></operator> <call><name pos:line="50" pos:column="14">apr_bucket_copy<pos:position pos:line="50" pos:column="29"/></name><argument_list pos:line="50" pos:column="29">(<argument><expr><name pos:line="50" pos:column="30">e<pos:position pos:line="50" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="33">&amp;<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="34">copy<pos:position pos:line="50" pos:column="38"/></name></expr></argument>)<pos:position pos:line="50" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="40"/></expr_stmt>
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">rv<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">!=<pos:position pos:line="51" pos:column="18"/></operator> <name pos:line="51" pos:column="19">APR_SUCCESS<pos:position pos:line="51" pos:column="30"/></name></expr>)<pos:position pos:line="51" pos:column="31"/></condition><then pos:line="51" pos:column="31"> <block pos:line="51" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">apr_brigade_cleanup<pos:position pos:line="52" pos:column="32"/></name><argument_list pos:line="52" pos:column="32">(<argument><expr><name pos:line="52" pos:column="33">bbout<pos:position pos:line="52" pos:column="38"/></name></expr></argument>)<pos:position pos:line="52" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt>
            <return pos:line="53" pos:column="13">return <expr><name pos:line="53" pos:column="20">rv<pos:position pos:line="53" pos:column="22"/></name></expr>;<pos:position pos:line="53" pos:column="23"/></return>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="56" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="56" pos:column="32"/></name><argument_list pos:line="56" pos:column="32">(<argument><expr><name pos:line="56" pos:column="33">bbout<pos:position pos:line="56" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="40">copy<pos:position pos:line="56" pos:column="44"/></name></expr></argument>)<pos:position pos:line="56" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="46"/></expr_stmt>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">e<pos:position pos:line="57" pos:column="14"/></name> <operator pos:line="57" pos:column="15">==<pos:position pos:line="57" pos:column="17"/></operator> <name pos:line="57" pos:column="18">first<pos:position pos:line="57" pos:column="23"/></name></expr>)<pos:position pos:line="57" pos:column="24"/></condition><then pos:line="57" pos:column="24"> <block pos:line="57" pos:column="25">{
            <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><name pos:line="58" pos:column="17">off_first<pos:position pos:line="58" pos:column="26"/></name> <operator pos:line="58" pos:column="27">!=<pos:position pos:line="58" pos:column="29"/></operator> <name pos:line="58" pos:column="30">start64<pos:position pos:line="58" pos:column="37"/></name></expr>)<pos:position pos:line="58" pos:column="38"/></condition><then pos:line="58" pos:column="38"> <block pos:line="58" pos:column="39">{
                <expr_stmt><expr><name pos:line="59" pos:column="17">rv<pos:position pos:line="59" pos:column="19"/></name> <operator pos:line="59" pos:column="20">=<pos:position pos:line="59" pos:column="21"/></operator> <call><name pos:line="59" pos:column="22">apr_bucket_split<pos:position pos:line="59" pos:column="38"/></name><argument_list pos:line="59" pos:column="38">(<argument><expr><name pos:line="59" pos:column="39">copy<pos:position pos:line="59" pos:column="43"/></name></expr></argument>, <argument><expr><call pos:line="59" pos:column="45">(<name pos:line="59" pos:column="46">apr_size_t<pos:position pos:line="59" pos:column="56"/></name>)<argument_list pos:line="59" pos:column="57">(<argument><expr><name pos:line="59" pos:column="58">start64<pos:position pos:line="59" pos:column="65"/></name> <operator pos:line="59" pos:column="66">-<pos:position pos:line="59" pos:column="67"/></operator> <name pos:line="59" pos:column="68">off_first<pos:position pos:line="59" pos:column="77"/></name></expr></argument>)<pos:position pos:line="59" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="80"/></expr_stmt>
                <if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name pos:line="60" pos:column="21">rv<pos:position pos:line="60" pos:column="23"/></name> <operator pos:line="60" pos:column="24">!=<pos:position pos:line="60" pos:column="26"/></operator> <name pos:line="60" pos:column="27">APR_SUCCESS<pos:position pos:line="60" pos:column="38"/></name></expr>)<pos:position pos:line="60" pos:column="39"/></condition><then pos:line="60" pos:column="39"> <block pos:line="60" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="61" pos:column="21">apr_brigade_cleanup<pos:position pos:line="61" pos:column="40"/></name><argument_list pos:line="61" pos:column="40">(<argument><expr><name pos:line="61" pos:column="41">bbout<pos:position pos:line="61" pos:column="46"/></name></expr></argument>)<pos:position pos:line="61" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="48"/></expr_stmt>
                    <return pos:line="62" pos:column="21">return <expr><name pos:line="62" pos:column="28">rv<pos:position pos:line="62" pos:column="30"/></name></expr>;<pos:position pos:line="62" pos:column="31"/></return>
                }<pos:position pos:line="63" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="64" pos:column="17">out_first<pos:position pos:line="64" pos:column="26"/></name> <operator pos:line="64" pos:column="27">=<pos:position pos:line="64" pos:column="28"/></operator> <call><name pos:line="64" pos:column="29">APR_BUCKET_NEXT<pos:position pos:line="64" pos:column="44"/></name><argument_list pos:line="64" pos:column="44">(<argument><expr><name pos:line="64" pos:column="45">copy<pos:position pos:line="64" pos:column="49"/></name></expr></argument>)<pos:position pos:line="64" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="65" pos:column="17">APR_BUCKET_REMOVE<pos:position pos:line="65" pos:column="34"/></name><argument_list pos:line="65" pos:column="34">(<argument><expr><name pos:line="65" pos:column="35">copy<pos:position pos:line="65" pos:column="39"/></name></expr></argument>)<pos:position pos:line="65" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="66" pos:column="17">apr_bucket_destroy<pos:position pos:line="66" pos:column="35"/></name><argument_list pos:line="66" pos:column="35">(<argument><expr><name pos:line="66" pos:column="36">copy<pos:position pos:line="66" pos:column="40"/></name></expr></argument>)<pos:position pos:line="66" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="67" pos:column="14"/></block></then>
            <else pos:line="68" pos:column="13">else <block pos:line="68" pos:column="18">{
                <expr_stmt><expr><name pos:line="69" pos:column="17">out_first<pos:position pos:line="69" pos:column="26"/></name> <operator pos:line="69" pos:column="27">=<pos:position pos:line="69" pos:column="28"/></operator> <name pos:line="69" pos:column="29">copy<pos:position pos:line="69" pos:column="33"/></name></expr>;<pos:position pos:line="69" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="70" pos:column="14"/></block></else></if>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if>
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name pos:line="72" pos:column="13">e<pos:position pos:line="72" pos:column="14"/></name> <operator pos:line="72" pos:column="15">==<pos:position pos:line="72" pos:column="17"/></operator> <name pos:line="72" pos:column="18">last<pos:position pos:line="72" pos:column="22"/></name></expr>)<pos:position pos:line="72" pos:column="23"/></condition><then pos:line="72" pos:column="23"> <block pos:line="72" pos:column="24">{
            <if pos:line="73" pos:column="13">if <condition pos:line="73" pos:column="16">(<expr><name pos:line="73" pos:column="17">e<pos:position pos:line="73" pos:column="18"/></name> <operator pos:line="73" pos:column="19">==<pos:position pos:line="73" pos:column="21"/></operator> <name pos:line="73" pos:column="22">first<pos:position pos:line="73" pos:column="27"/></name></expr>)<pos:position pos:line="73" pos:column="28"/></condition><then pos:line="73" pos:column="28"> <block pos:line="73" pos:column="29">{
                <expr_stmt><expr><name pos:line="74" pos:column="17">off_last<pos:position pos:line="74" pos:column="25"/></name> <operator pos:line="74" pos:column="26">+=<pos:position pos:line="74" pos:column="28"/></operator> <name pos:line="74" pos:column="29">start64<pos:position pos:line="74" pos:column="36"/></name> <operator pos:line="74" pos:column="37">-<pos:position pos:line="74" pos:column="38"/></operator> <name pos:line="74" pos:column="39">off_first<pos:position pos:line="74" pos:column="48"/></name></expr>;<pos:position pos:line="74" pos:column="49"/></expr_stmt>
                <expr_stmt><expr><name pos:line="75" pos:column="17">copy<pos:position pos:line="75" pos:column="21"/></name> <operator pos:line="75" pos:column="22">=<pos:position pos:line="75" pos:column="23"/></operator> <name pos:line="75" pos:column="24">out_first<pos:position pos:line="75" pos:column="33"/></name></expr>;<pos:position pos:line="75" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="76" pos:column="14"/></block></then></if>
            <if pos:line="77" pos:column="13">if <condition pos:line="77" pos:column="16">(<expr><name pos:line="77" pos:column="17">end64<pos:position pos:line="77" pos:column="22"/></name> <operator pos:line="77" pos:column="23">-<pos:position pos:line="77" pos:column="24"/></operator> <name pos:line="77" pos:column="25">off_last<pos:position pos:line="77" pos:column="33"/></name> <operator pos:line="77" pos:column="34">!=<pos:position pos:line="77" pos:column="36"/></operator> <operator pos:line="77" pos:column="37">(<pos:position pos:line="77" pos:column="38"/></operator><name pos:line="77" pos:column="38">apr_uint64_t<pos:position pos:line="77" pos:column="50"/></name><operator pos:line="77" pos:column="50">)<pos:position pos:line="77" pos:column="51"/></operator><name><name pos:line="77" pos:column="51">e<pos:position pos:line="77" pos:column="52"/></name><operator pos:line="77" pos:column="52">-&gt;<pos:position pos:line="77" pos:column="57"/></operator><name pos:line="77" pos:column="54">length<pos:position pos:line="77" pos:column="60"/></name></name></expr>)<pos:position pos:line="77" pos:column="61"/></condition><then pos:line="77" pos:column="61"> <block pos:line="77" pos:column="62">{
                <expr_stmt><expr><name pos:line="78" pos:column="17">rv<pos:position pos:line="78" pos:column="19"/></name> <operator pos:line="78" pos:column="20">=<pos:position pos:line="78" pos:column="21"/></operator> <call><name pos:line="78" pos:column="22">apr_bucket_split<pos:position pos:line="78" pos:column="38"/></name><argument_list pos:line="78" pos:column="38">(<argument><expr><name pos:line="78" pos:column="39">copy<pos:position pos:line="78" pos:column="43"/></name></expr></argument>, <argument><expr><call pos:line="78" pos:column="45">(<name pos:line="78" pos:column="46">apr_size_t<pos:position pos:line="78" pos:column="56"/></name>)<argument_list pos:line="78" pos:column="57">(<argument><expr><name pos:line="78" pos:column="58">end64<pos:position pos:line="78" pos:column="63"/></name> <operator pos:line="78" pos:column="64">+<pos:position pos:line="78" pos:column="65"/></operator> <literal type="number" pos:line="78" pos:column="66">1<pos:position pos:line="78" pos:column="67"/></literal> <operator pos:line="78" pos:column="68">-<pos:position pos:line="78" pos:column="69"/></operator> <name pos:line="78" pos:column="70">off_last<pos:position pos:line="78" pos:column="78"/></name></expr></argument>)<pos:position pos:line="78" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="81"/></expr_stmt>
                <if pos:line="79" pos:column="17">if <condition pos:line="79" pos:column="20">(<expr><name pos:line="79" pos:column="21">rv<pos:position pos:line="79" pos:column="23"/></name> <operator pos:line="79" pos:column="24">!=<pos:position pos:line="79" pos:column="26"/></operator> <name pos:line="79" pos:column="27">APR_SUCCESS<pos:position pos:line="79" pos:column="38"/></name></expr>)<pos:position pos:line="79" pos:column="39"/></condition><then pos:line="79" pos:column="39"> <block pos:line="79" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="80" pos:column="21">apr_brigade_cleanup<pos:position pos:line="80" pos:column="40"/></name><argument_list pos:line="80" pos:column="40">(<argument><expr><name pos:line="80" pos:column="41">bbout<pos:position pos:line="80" pos:column="46"/></name></expr></argument>)<pos:position pos:line="80" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="48"/></expr_stmt>
                    <return pos:line="81" pos:column="21">return <expr><name pos:line="81" pos:column="28">rv<pos:position pos:line="81" pos:column="30"/></name></expr>;<pos:position pos:line="81" pos:column="31"/></return>
                }<pos:position pos:line="82" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="83" pos:column="17">copy<pos:position pos:line="83" pos:column="21"/></name> <operator pos:line="83" pos:column="22">=<pos:position pos:line="83" pos:column="23"/></operator> <call><name pos:line="83" pos:column="24">APR_BUCKET_NEXT<pos:position pos:line="83" pos:column="39"/></name><argument_list pos:line="83" pos:column="39">(<argument><expr><name pos:line="83" pos:column="40">copy<pos:position pos:line="83" pos:column="44"/></name></expr></argument>)<pos:position pos:line="83" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="46"/></expr_stmt>
                <if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><name pos:line="84" pos:column="21">copy<pos:position pos:line="84" pos:column="25"/></name> <operator pos:line="84" pos:column="26">!=<pos:position pos:line="84" pos:column="28"/></operator> <call><name pos:line="84" pos:column="29">APR_BRIGADE_SENTINEL<pos:position pos:line="84" pos:column="49"/></name><argument_list pos:line="84" pos:column="49">(<argument><expr><name pos:line="84" pos:column="50">bbout<pos:position pos:line="84" pos:column="55"/></name></expr></argument>)<pos:position pos:line="84" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="57"/></condition><then pos:line="84" pos:column="57"> <block pos:line="84" pos:column="58">{
                    <expr_stmt><expr><call><name pos:line="85" pos:column="21">APR_BUCKET_REMOVE<pos:position pos:line="85" pos:column="38"/></name><argument_list pos:line="85" pos:column="38">(<argument><expr><name pos:line="85" pos:column="39">copy<pos:position pos:line="85" pos:column="43"/></name></expr></argument>)<pos:position pos:line="85" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="45"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="86" pos:column="21">apr_bucket_destroy<pos:position pos:line="86" pos:column="39"/></name><argument_list pos:line="86" pos:column="39">(<argument><expr><name pos:line="86" pos:column="40">copy<pos:position pos:line="86" pos:column="44"/></name></expr></argument>)<pos:position pos:line="86" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="46"/></expr_stmt>
                }<pos:position pos:line="87" pos:column="18"/></block></then></if>
            }<pos:position pos:line="88" pos:column="14"/></block></then></if>
            <break pos:line="89" pos:column="13">break;<pos:position pos:line="89" pos:column="19"/></break>
        }<pos:position pos:line="90" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="91" pos:column="9">e<pos:position pos:line="91" pos:column="10"/></name> <operator pos:line="91" pos:column="11">=<pos:position pos:line="91" pos:column="12"/></operator> <call><name pos:line="91" pos:column="13">APR_BUCKET_NEXT<pos:position pos:line="91" pos:column="28"/></name><argument_list pos:line="91" pos:column="28">(<argument><expr><name pos:line="91" pos:column="29">e<pos:position pos:line="91" pos:column="30"/></name></expr></argument>)<pos:position pos:line="91" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="94" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="94" pos:column="20"/></name><argument_list pos:line="94" pos:column="20">(<argument><expr><name pos:line="94" pos:column="21">APR_SUCCESS<pos:position pos:line="94" pos:column="32"/></name> <operator pos:line="94" pos:column="33">==<pos:position pos:line="94" pos:column="35"/></operator> <call><name pos:line="94" pos:column="36">apr_brigade_length<pos:position pos:line="94" pos:column="54"/></name><argument_list pos:line="94" pos:column="54">(<argument><expr><name pos:line="94" pos:column="55">bbout<pos:position pos:line="94" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="62">1<pos:position pos:line="94" pos:column="63"/></literal></expr></argument>, <argument><expr><operator pos:line="94" pos:column="65">&amp;<pos:position pos:line="94" pos:column="70"/></operator><name pos:line="94" pos:column="66">pofft<pos:position pos:line="94" pos:column="71"/></name></expr></argument>)<pos:position pos:line="94" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><name pos:line="95" pos:column="5">pos<pos:position pos:line="95" pos:column="8"/></name> <operator pos:line="95" pos:column="9">=<pos:position pos:line="95" pos:column="10"/></operator> <operator pos:line="95" pos:column="11">(<pos:position pos:line="95" pos:column="12"/></operator><name pos:line="95" pos:column="12">apr_uint64_t<pos:position pos:line="95" pos:column="24"/></name><operator pos:line="95" pos:column="24">)<pos:position pos:line="95" pos:column="25"/></operator><name pos:line="95" pos:column="25">pofft<pos:position pos:line="95" pos:column="30"/></name></expr>;<pos:position pos:line="95" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="96" pos:column="5">AP_DEBUG_ASSERT<pos:position pos:line="96" pos:column="20"/></name><argument_list pos:line="96" pos:column="20">(<argument><expr><name pos:line="96" pos:column="21">pos<pos:position pos:line="96" pos:column="24"/></name> <operator pos:line="96" pos:column="25">==<pos:position pos:line="96" pos:column="27"/></operator> <name pos:line="96" pos:column="28">end64<pos:position pos:line="96" pos:column="33"/></name> <operator pos:line="96" pos:column="34">-<pos:position pos:line="96" pos:column="35"/></operator> <name pos:line="96" pos:column="36">start64<pos:position pos:line="96" pos:column="43"/></name> <operator pos:line="96" pos:column="44">+<pos:position pos:line="96" pos:column="45"/></operator> <literal type="number" pos:line="96" pos:column="46">1<pos:position pos:line="96" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="49"/></expr_stmt>
    <return pos:line="97" pos:column="5">return <expr><name pos:line="97" pos:column="12">APR_SUCCESS<pos:position pos:line="97" pos:column="23"/></name></expr>;<pos:position pos:line="97" pos:column="24"/></return>
}<pos:position pos:line="98" pos:column="2"/></block></function></unit>

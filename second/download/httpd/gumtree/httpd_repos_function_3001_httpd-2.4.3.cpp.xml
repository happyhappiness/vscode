<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3001_httpd-2.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">ap_cfg_getline_core<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">buf<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">apr_size_t<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">bufsize<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="2" pos:column="41">ap_configfile_t<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">cfp<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">apr_status_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">rc<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* If a "get string" function is defined, use it */</comment>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">cfp<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">-&gt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">getstr<pos:position pos:line="6" pos:column="20"/></name></name> <operator pos:line="6" pos:column="21">!=<pos:position pos:line="6" pos:column="23"/></operator> <name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr>)<pos:position pos:line="6" pos:column="29"/></condition><then pos:line="6" pos:column="29"> <block pos:line="6" pos:column="30">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">cp<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">cbuf<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><name pos:line="8" pos:column="22">buf<pos:position pos:line="8" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">apr_size_t<pos:position pos:line="9" pos:column="19"/></name></type> <name pos:line="9" pos:column="20">cbufsize<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><name pos:line="9" pos:column="31">bufsize<pos:position pos:line="9" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>

        <while pos:line="11" pos:column="9">while <condition pos:line="11" pos:column="15">(<expr><literal type="number" pos:line="11" pos:column="16">1<pos:position pos:line="11" pos:column="17"/></literal></expr>)<pos:position pos:line="11" pos:column="18"/></condition> <block pos:line="11" pos:column="19">{
            <expr_stmt><expr><operator pos:line="12" pos:column="13">++<pos:position pos:line="12" pos:column="15"/></operator><name><name pos:line="12" pos:column="15">cfp<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">line_number<pos:position pos:line="12" pos:column="31"/></name></name></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><name pos:line="13" pos:column="13">rc<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name><name pos:line="13" pos:column="18">cfp<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">getstr<pos:position pos:line="13" pos:column="29"/></name></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">cbuf<pos:position pos:line="13" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="36">cbufsize<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="46">cfp<pos:position pos:line="13" pos:column="49"/></name><operator pos:line="13" pos:column="49">-&gt;<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="51">param<pos:position pos:line="13" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt>
            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><name pos:line="14" pos:column="17">rc<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">==<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">APR_EOF<pos:position pos:line="14" pos:column="30"/></name></expr>)<pos:position pos:line="14" pos:column="31"/></condition><then pos:line="14" pos:column="31"> <block pos:line="14" pos:column="32">{
                <if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">cbuf<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">!=<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="29">buf<pos:position pos:line="15" pos:column="32"/></name></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33"> <block pos:line="15" pos:column="34">{
                    <expr_stmt><expr><operator pos:line="16" pos:column="21">*<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">cbuf<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">=<pos:position pos:line="16" pos:column="28"/></operator> <literal type="char" pos:line="16" pos:column="29">'\0'<pos:position pos:line="16" pos:column="33"/></literal></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
                    <break pos:line="17" pos:column="21">break;<pos:position pos:line="17" pos:column="27"/></break>
                }<pos:position pos:line="18" pos:column="18"/></block></then>
                <else pos:line="19" pos:column="17">else <block pos:line="19" pos:column="22">{
                    <return pos:line="20" pos:column="21">return <expr><name pos:line="20" pos:column="28">APR_EOF<pos:position pos:line="20" pos:column="35"/></name></expr>;<pos:position pos:line="20" pos:column="36"/></return>
                }<pos:position pos:line="21" pos:column="18"/></block></else></if>
            }<pos:position pos:line="22" pos:column="14"/></block></then></if>
            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><name pos:line="23" pos:column="17">rc<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">!=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">APR_SUCCESS<pos:position pos:line="23" pos:column="34"/></name></expr>)<pos:position pos:line="23" pos:column="35"/></condition><then pos:line="23" pos:column="35"> <block pos:line="23" pos:column="36">{
                <return pos:line="24" pos:column="17">return <expr><name pos:line="24" pos:column="24">rc<pos:position pos:line="24" pos:column="26"/></name></expr>;<pos:position pos:line="24" pos:column="27"/></return>
            }<pos:position pos:line="25" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="27" pos:column="13">/*
             *  check for line continuation,
             *  i.e. match [^\\]\\[\r]\n only
             */</comment>
            <expr_stmt><expr><name pos:line="31" pos:column="13">cp<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">cbuf<pos:position pos:line="31" pos:column="22"/></name></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="32" pos:column="13">cp<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">+=<pos:position pos:line="32" pos:column="18"/></operator> <call><name pos:line="32" pos:column="19">strlen<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">cp<pos:position pos:line="32" pos:column="28"/></name></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><name pos:line="33" pos:column="17">cp<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">&gt;<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="22">cbuf<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">&amp;&amp;<pos:position pos:line="33" pos:column="37"/></operator> <name><name pos:line="33" pos:column="30">cp<pos:position pos:line="33" pos:column="32"/></name><index pos:line="33" pos:column="32">[<expr><operator pos:line="33" pos:column="33">-<pos:position pos:line="33" pos:column="34"/></operator><literal type="number" pos:line="33" pos:column="34">1<pos:position pos:line="33" pos:column="35"/></literal></expr>]<pos:position pos:line="33" pos:column="36"/></index></name> <operator pos:line="33" pos:column="37">==<pos:position pos:line="33" pos:column="39"/></operator> <name pos:line="33" pos:column="40">LF<pos:position pos:line="33" pos:column="42"/></name></expr>)<pos:position pos:line="33" pos:column="43"/></condition><then pos:line="33" pos:column="43"> <block pos:line="33" pos:column="44">{
                <expr_stmt><expr><name pos:line="34" pos:column="17">cp<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">--<pos:position pos:line="34" pos:column="21"/></operator></expr>;<pos:position pos:line="34" pos:column="22"/></expr_stmt>
                <if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">cp<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">&gt;<pos:position pos:line="35" pos:column="28"/></operator> <name pos:line="35" pos:column="26">cbuf<pos:position pos:line="35" pos:column="30"/></name> <operator pos:line="35" pos:column="31">&amp;&amp;<pos:position pos:line="35" pos:column="41"/></operator> <name><name pos:line="35" pos:column="34">cp<pos:position pos:line="35" pos:column="36"/></name><index pos:line="35" pos:column="36">[<expr><operator pos:line="35" pos:column="37">-<pos:position pos:line="35" pos:column="38"/></operator><literal type="number" pos:line="35" pos:column="38">1<pos:position pos:line="35" pos:column="39"/></literal></expr>]<pos:position pos:line="35" pos:column="40"/></index></name> <operator pos:line="35" pos:column="41">==<pos:position pos:line="35" pos:column="43"/></operator> <name pos:line="35" pos:column="44">CR<pos:position pos:line="35" pos:column="46"/></name></expr>)<pos:position pos:line="35" pos:column="47"/></condition><then pos:line="35" pos:column="47">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="21">cp<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">--<pos:position pos:line="36" pos:column="25"/></operator></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt></block></then></if>
                <if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">cp<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">&gt;<pos:position pos:line="37" pos:column="28"/></operator> <name pos:line="37" pos:column="26">cbuf<pos:position pos:line="37" pos:column="30"/></name> <operator pos:line="37" pos:column="31">&amp;&amp;<pos:position pos:line="37" pos:column="41"/></operator> <name><name pos:line="37" pos:column="34">cp<pos:position pos:line="37" pos:column="36"/></name><index pos:line="37" pos:column="36">[<expr><operator pos:line="37" pos:column="37">-<pos:position pos:line="37" pos:column="38"/></operator><literal type="number" pos:line="37" pos:column="38">1<pos:position pos:line="37" pos:column="39"/></literal></expr>]<pos:position pos:line="37" pos:column="40"/></index></name> <operator pos:line="37" pos:column="41">==<pos:position pos:line="37" pos:column="43"/></operator> <literal type="char" pos:line="37" pos:column="44">'\\'<pos:position pos:line="37" pos:column="48"/></literal></expr>)<pos:position pos:line="37" pos:column="49"/></condition><then pos:line="37" pos:column="49"> <block pos:line="37" pos:column="50">{
                    <expr_stmt><expr><name pos:line="38" pos:column="21">cp<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">--<pos:position pos:line="38" pos:column="25"/></operator></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>
                    <comment type="block" pos:line="39" pos:column="21">/*
                     * line continuation requested -
                     * then remove backslash and continue
                     */</comment>
                    <expr_stmt><expr><name pos:line="43" pos:column="21">cbufsize<pos:position pos:line="43" pos:column="29"/></name> <operator pos:line="43" pos:column="30">-=<pos:position pos:line="43" pos:column="32"/></operator> <operator pos:line="43" pos:column="33">(<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="34">cp<pos:position pos:line="43" pos:column="36"/></name><operator pos:line="43" pos:column="36">-<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="37">cbuf<pos:position pos:line="43" pos:column="41"/></name><operator pos:line="43" pos:column="41">)<pos:position pos:line="43" pos:column="42"/></operator></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="44" pos:column="21">cbuf<pos:position pos:line="44" pos:column="25"/></name> <operator pos:line="44" pos:column="26">=<pos:position pos:line="44" pos:column="27"/></operator> <name pos:line="44" pos:column="28">cp<pos:position pos:line="44" pos:column="30"/></name></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>
                    <continue pos:line="45" pos:column="21">continue;<pos:position pos:line="45" pos:column="30"/></continue>
                }<pos:position pos:line="46" pos:column="18"/></block></then></if>
            }<pos:position pos:line="47" pos:column="14"/></block></then>
            <elseif pos:line="48" pos:column="13">else <if pos:line="48" pos:column="18">if <condition pos:line="48" pos:column="21">(<expr><name pos:line="48" pos:column="22">cp<pos:position pos:line="48" pos:column="24"/></name> <operator pos:line="48" pos:column="25">-<pos:position pos:line="48" pos:column="26"/></operator> <name pos:line="48" pos:column="27">buf<pos:position pos:line="48" pos:column="30"/></name> <operator pos:line="48" pos:column="31">&gt;=<pos:position pos:line="48" pos:column="36"/></operator> <name pos:line="48" pos:column="34">bufsize<pos:position pos:line="48" pos:column="41"/></name> <operator pos:line="48" pos:column="42">-<pos:position pos:line="48" pos:column="43"/></operator> <literal type="number" pos:line="48" pos:column="44">1<pos:position pos:line="48" pos:column="45"/></literal></expr>)<pos:position pos:line="48" pos:column="46"/></condition><then pos:line="48" pos:column="46"> <block pos:line="48" pos:column="47">{
                <return pos:line="49" pos:column="17">return <expr><name pos:line="49" pos:column="24">APR_ENOSPC<pos:position pos:line="49" pos:column="34"/></name></expr>;<pos:position pos:line="49" pos:column="35"/></return>
            }<pos:position pos:line="50" pos:column="14"/></block></then></if></elseif></if>
            <break pos:line="51" pos:column="13">break;<pos:position pos:line="51" pos:column="19"/></break>
        }<pos:position pos:line="52" pos:column="10"/></block></while>
    }<pos:position pos:line="53" pos:column="6"/></block></then> <else pos:line="53" pos:column="7">else <block pos:line="53" pos:column="12">{
        <comment type="block" pos:line="54" pos:column="9">/* No "get string" function defined; read character by character */</comment>
        <decl_stmt><decl><type><name pos:line="55" pos:column="9">apr_size_t<pos:position pos:line="55" pos:column="19"/></name></type> <name pos:line="55" pos:column="20">i<pos:position pos:line="55" pos:column="21"/></name> <init pos:line="55" pos:column="22">= <expr><literal type="number" pos:line="55" pos:column="24">0<pos:position pos:line="55" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="55" pos:column="26"/></decl_stmt>

        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">bufsize<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">&lt;<pos:position pos:line="57" pos:column="25"/></operator> <literal type="number" pos:line="57" pos:column="23">2<pos:position pos:line="57" pos:column="24"/></literal></expr>)<pos:position pos:line="57" pos:column="25"/></condition><then pos:line="57" pos:column="25"> <block pos:line="57" pos:column="26">{
            <comment type="block" pos:line="58" pos:column="13">/* too small, assume caller is crazy */</comment>
            <return pos:line="59" pos:column="13">return <expr><name pos:line="59" pos:column="20">APR_EINVAL<pos:position pos:line="59" pos:column="30"/></name></expr>;<pos:position pos:line="59" pos:column="31"/></return>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">buf<pos:position pos:line="61" pos:column="12"/></name><index pos:line="61" pos:column="12">[<expr><literal type="number" pos:line="61" pos:column="13">0<pos:position pos:line="61" pos:column="14"/></literal></expr>]<pos:position pos:line="61" pos:column="15"/></index></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <literal type="char" pos:line="61" pos:column="18">'\0'<pos:position pos:line="61" pos:column="22"/></literal></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt>

        <while pos:line="63" pos:column="9">while <condition pos:line="63" pos:column="15">(<expr><literal type="number" pos:line="63" pos:column="16">1<pos:position pos:line="63" pos:column="17"/></literal></expr>)<pos:position pos:line="63" pos:column="18"/></condition> <block pos:line="63" pos:column="19">{
            <decl_stmt><decl><type><name pos:line="64" pos:column="13">char<pos:position pos:line="64" pos:column="17"/></name></type> <name pos:line="64" pos:column="18">c<pos:position pos:line="64" pos:column="19"/></name></decl>;<pos:position pos:line="64" pos:column="20"/></decl_stmt>
            <expr_stmt><expr><name pos:line="65" pos:column="13">rc<pos:position pos:line="65" pos:column="15"/></name> <operator pos:line="65" pos:column="16">=<pos:position pos:line="65" pos:column="17"/></operator> <call><name><name pos:line="65" pos:column="18">cfp<pos:position pos:line="65" pos:column="21"/></name><operator pos:line="65" pos:column="21">-&gt;<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="23">getch<pos:position pos:line="65" pos:column="28"/></name></name><argument_list pos:line="65" pos:column="28">(<argument><expr><operator pos:line="65" pos:column="29">&amp;<pos:position pos:line="65" pos:column="34"/></operator><name pos:line="65" pos:column="30">c<pos:position pos:line="65" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="33">cfp<pos:position pos:line="65" pos:column="36"/></name><operator pos:line="65" pos:column="36">-&gt;<pos:position pos:line="65" pos:column="41"/></operator><name pos:line="65" pos:column="38">param<pos:position pos:line="65" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="45"/></expr_stmt>
            <if pos:line="66" pos:column="13">if <condition pos:line="66" pos:column="16">(<expr><name pos:line="66" pos:column="17">rc<pos:position pos:line="66" pos:column="19"/></name> <operator pos:line="66" pos:column="20">==<pos:position pos:line="66" pos:column="22"/></operator> <name pos:line="66" pos:column="23">APR_EOF<pos:position pos:line="66" pos:column="30"/></name></expr>)<pos:position pos:line="66" pos:column="31"/></condition><then pos:line="66" pos:column="31"> <block pos:line="66" pos:column="32">{
                <if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><name pos:line="67" pos:column="21">i<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">&gt;<pos:position pos:line="67" pos:column="27"/></operator> <literal type="number" pos:line="67" pos:column="25">0<pos:position pos:line="67" pos:column="26"/></literal></expr>)<pos:position pos:line="67" pos:column="27"/></condition><then pos:line="67" pos:column="27">
                    <block type="pseudo"><break pos:line="68" pos:column="21">break;<pos:position pos:line="68" pos:column="27"/></break></block></then>
                <else pos:line="69" pos:column="17">else
                    <block type="pseudo"><return pos:line="70" pos:column="21">return <expr><name pos:line="70" pos:column="28">APR_EOF<pos:position pos:line="70" pos:column="35"/></name></expr>;<pos:position pos:line="70" pos:column="36"/></return></block></else></if>
            }<pos:position pos:line="71" pos:column="14"/></block></then></if>
            <if pos:line="72" pos:column="13">if <condition pos:line="72" pos:column="16">(<expr><name pos:line="72" pos:column="17">rc<pos:position pos:line="72" pos:column="19"/></name> <operator pos:line="72" pos:column="20">!=<pos:position pos:line="72" pos:column="22"/></operator> <name pos:line="72" pos:column="23">APR_SUCCESS<pos:position pos:line="72" pos:column="34"/></name></expr>)<pos:position pos:line="72" pos:column="35"/></condition><then pos:line="72" pos:column="35">
                <block type="pseudo"><return pos:line="73" pos:column="17">return <expr><name pos:line="73" pos:column="24">rc<pos:position pos:line="73" pos:column="26"/></name></expr>;<pos:position pos:line="73" pos:column="27"/></return></block></then></if>
            <if pos:line="74" pos:column="13">if <condition pos:line="74" pos:column="16">(<expr><name pos:line="74" pos:column="17">c<pos:position pos:line="74" pos:column="18"/></name> <operator pos:line="74" pos:column="19">==<pos:position pos:line="74" pos:column="21"/></operator> <name pos:line="74" pos:column="22">LF<pos:position pos:line="74" pos:column="24"/></name></expr>)<pos:position pos:line="74" pos:column="25"/></condition><then pos:line="74" pos:column="25"> <block pos:line="74" pos:column="26">{
                <expr_stmt><expr><operator pos:line="75" pos:column="17">++<pos:position pos:line="75" pos:column="19"/></operator><name><name pos:line="75" pos:column="19">cfp<pos:position pos:line="75" pos:column="22"/></name><operator pos:line="75" pos:column="22">-&gt;<pos:position pos:line="75" pos:column="27"/></operator><name pos:line="75" pos:column="24">line_number<pos:position pos:line="75" pos:column="35"/></name></name></expr>;<pos:position pos:line="75" pos:column="36"/></expr_stmt>
                <comment type="block" pos:line="76" pos:column="17">/* check for line continuation */</comment>
                <if pos:line="77" pos:column="17">if <condition pos:line="77" pos:column="20">(<expr><name pos:line="77" pos:column="21">i<pos:position pos:line="77" pos:column="22"/></name> <operator pos:line="77" pos:column="23">&gt;<pos:position pos:line="77" pos:column="27"/></operator> <literal type="number" pos:line="77" pos:column="25">0<pos:position pos:line="77" pos:column="26"/></literal> <operator pos:line="77" pos:column="27">&amp;&amp;<pos:position pos:line="77" pos:column="37"/></operator> <name><name pos:line="77" pos:column="30">buf<pos:position pos:line="77" pos:column="33"/></name><index pos:line="77" pos:column="33">[<expr><name pos:line="77" pos:column="34">i<pos:position pos:line="77" pos:column="35"/></name><operator pos:line="77" pos:column="35">-<pos:position pos:line="77" pos:column="36"/></operator><literal type="number" pos:line="77" pos:column="36">1<pos:position pos:line="77" pos:column="37"/></literal></expr>]<pos:position pos:line="77" pos:column="38"/></index></name> <operator pos:line="77" pos:column="39">==<pos:position pos:line="77" pos:column="41"/></operator> <literal type="char" pos:line="77" pos:column="42">'\\'<pos:position pos:line="77" pos:column="46"/></literal></expr>)<pos:position pos:line="77" pos:column="47"/></condition><then pos:line="77" pos:column="47"> <block pos:line="77" pos:column="48">{
                    <expr_stmt><expr><name pos:line="78" pos:column="21">i<pos:position pos:line="78" pos:column="22"/></name><operator pos:line="78" pos:column="22">--<pos:position pos:line="78" pos:column="24"/></operator></expr>;<pos:position pos:line="78" pos:column="25"/></expr_stmt>
                    <continue pos:line="79" pos:column="21">continue;<pos:position pos:line="79" pos:column="30"/></continue>
                }<pos:position pos:line="80" pos:column="18"/></block></then>
                <else pos:line="81" pos:column="17">else <block pos:line="81" pos:column="22">{
                    <break pos:line="82" pos:column="21">break;<pos:position pos:line="82" pos:column="27"/></break>
                }<pos:position pos:line="83" pos:column="18"/></block></else></if>
            }<pos:position pos:line="84" pos:column="14"/></block></then>
            <elseif pos:line="85" pos:column="13">else <if pos:line="85" pos:column="18">if <condition pos:line="85" pos:column="21">(<expr><name pos:line="85" pos:column="22">i<pos:position pos:line="85" pos:column="23"/></name> <operator pos:line="85" pos:column="24">&gt;=<pos:position pos:line="85" pos:column="29"/></operator> <name pos:line="85" pos:column="27">bufsize<pos:position pos:line="85" pos:column="34"/></name> <operator pos:line="85" pos:column="35">-<pos:position pos:line="85" pos:column="36"/></operator> <literal type="number" pos:line="85" pos:column="37">2<pos:position pos:line="85" pos:column="38"/></literal></expr>)<pos:position pos:line="85" pos:column="39"/></condition><then pos:line="85" pos:column="39"> <block pos:line="85" pos:column="40">{
                <return pos:line="86" pos:column="17">return <expr><name pos:line="86" pos:column="24">APR_ENOSPC<pos:position pos:line="86" pos:column="34"/></name></expr>;<pos:position pos:line="86" pos:column="35"/></return>
            }<pos:position pos:line="87" pos:column="14"/></block></then></if></elseif></if>
            <expr_stmt><expr><name><name pos:line="88" pos:column="13">buf<pos:position pos:line="88" pos:column="16"/></name><index pos:line="88" pos:column="16">[<expr><name pos:line="88" pos:column="17">i<pos:position pos:line="88" pos:column="18"/></name></expr>]<pos:position pos:line="88" pos:column="19"/></index></name> <operator pos:line="88" pos:column="20">=<pos:position pos:line="88" pos:column="21"/></operator> <name pos:line="88" pos:column="22">c<pos:position pos:line="88" pos:column="23"/></name></expr>;<pos:position pos:line="88" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="89" pos:column="13">++<pos:position pos:line="89" pos:column="15"/></operator><name pos:line="89" pos:column="15">i<pos:position pos:line="89" pos:column="16"/></name></expr>;<pos:position pos:line="89" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="90" pos:column="10"/></block></while>
        <expr_stmt><expr><name><name pos:line="91" pos:column="9">buf<pos:position pos:line="91" pos:column="12"/></name><index pos:line="91" pos:column="12">[<expr><name pos:line="91" pos:column="13">i<pos:position pos:line="91" pos:column="14"/></name></expr>]<pos:position pos:line="91" pos:column="15"/></index></name> <operator pos:line="91" pos:column="16">=<pos:position pos:line="91" pos:column="17"/></operator> <literal type="char" pos:line="91" pos:column="18">'\0'<pos:position pos:line="91" pos:column="22"/></literal></expr>;<pos:position pos:line="91" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></else></if>
    <return pos:line="93" pos:column="5">return <expr><name pos:line="93" pos:column="12">APR_SUCCESS<pos:position pos:line="93" pos:column="23"/></name></expr>;<pos:position pos:line="93" pos:column="24"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

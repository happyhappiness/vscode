<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_145_httpd-2.2.17.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BOOL<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">RunRedirectedConsole<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">LPTSTR<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">szCmdLine<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">DWORD<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">dwThreadId<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HANDLE<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">hProc<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">STARTUPINFO<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">stInfo<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">BOOL<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">bResult<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">memset<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><operator pos:line="8" pos:column="12">&amp;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="13">stInfo<pos:position pos:line="8" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="21">0<pos:position pos:line="8" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="24">sizeof<argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">stInfo<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">stInfo<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">.<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">cb<pos:position pos:line="9" pos:column="14"/></name></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <sizeof pos:line="9" pos:column="17">sizeof<argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">stInfo<pos:position pos:line="9" pos:column="30"/></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></sizeof></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">stInfo<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">.<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">dwFlags<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">STARTF_USESTDHANDLES<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">|<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="43">STARTF_USESHOWWINDOW<pos:position pos:line="10" pos:column="63"/></name></expr>;<pos:position pos:line="10" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">stInfo<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">.<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">wShowWindow<pos:position pos:line="11" pos:column="23"/></name></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">SW_HIDE<pos:position pos:line="11" pos:column="33"/></name></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">hProc<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">GetCurrentProcess<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">()<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><call><name pos:line="15" pos:column="10">CreatePipe<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><operator pos:line="15" pos:column="21">&amp;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="22">g_hpipeInRead<pos:position pos:line="15" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="37">&amp;<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="38">g_hpipeInWrite<pos:position pos:line="15" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="54">NULL<pos:position pos:line="15" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="60">MAX_PATH<pos:position pos:line="15" pos:column="68"/></name></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="70"/></condition><then pos:line="15" pos:column="70"> <block pos:line="15" pos:column="71">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">ErrorMessage<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name pos:line="16" pos:column="22">NULL<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="28">TRUE<pos:position pos:line="16" pos:column="32"/></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><call><name pos:line="18" pos:column="10">CreatePipe<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><operator pos:line="18" pos:column="21">&amp;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="22">g_hpipeOutRead<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="38">&amp;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="39">g_hpipeOutWrite<pos:position pos:line="18" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="56">NULL<pos:position pos:line="18" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="62">MAX_PATH<pos:position pos:line="18" pos:column="70"/></name><operator pos:line="18" pos:column="70">*<pos:position pos:line="18" pos:column="71"/></operator><literal type="number" pos:line="18" pos:column="71">8<pos:position pos:line="18" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="74"/></condition><then pos:line="18" pos:column="74"> <block pos:line="18" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">ErrorMessage<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">NULL<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="28">TRUE<pos:position pos:line="19" pos:column="32"/></name></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">DuplicateHandle<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">hProc<pos:position pos:line="21" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="28">g_hpipeInRead<pos:position pos:line="21" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="43">hProc<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="50">&amp;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="51">g_hpipeInRead<pos:position pos:line="21" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="66">0<pos:position pos:line="21" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="69">TRUE<pos:position pos:line="21" pos:column="73"/></name></expr></argument>,
                    <argument><expr><name pos:line="22" pos:column="21">DUPLICATE_CLOSE_SOURCE<pos:position pos:line="22" pos:column="43"/></name><operator pos:line="22" pos:column="43">|<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="44">DUPLICATE_SAME_ACCESS<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">DuplicateHandle<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">hProc<pos:position pos:line="23" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="28">g_hpipeOutWrite<pos:position pos:line="23" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="45">hProc<pos:position pos:line="23" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="52">&amp;<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="53">g_hpipeOutWrite<pos:position pos:line="23" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="70">0<pos:position pos:line="23" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="73">TRUE<pos:position pos:line="23" pos:column="77"/></name></expr></argument>,
                    <argument><expr><name pos:line="24" pos:column="21">DUPLICATE_CLOSE_SOURCE<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">|<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="44">DUPLICATE_SAME_ACCESS<pos:position pos:line="24" pos:column="65"/></name></expr></argument>)<pos:position pos:line="24" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">DuplicateHandle<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">hProc<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="28">g_hpipeOutWrite<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="45">hProc<pos:position pos:line="25" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="52">&amp;<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="53">g_hpipeStdError<pos:position pos:line="25" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="70">0<pos:position pos:line="25" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="73">TRUE<pos:position pos:line="25" pos:column="77"/></name></expr></argument>,
                    <argument><expr><name pos:line="26" pos:column="21">DUPLICATE_SAME_ACCESS<pos:position pos:line="26" pos:column="42"/></name></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">g_hpipeInRead<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">&amp;&amp;<pos:position pos:line="27" pos:column="34"/></operator> <operator pos:line="27" pos:column="27">!<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="28">g_hpipeOutWrite<pos:position pos:line="27" pos:column="43"/></name> <operator pos:line="27" pos:column="44">&amp;&amp;<pos:position pos:line="27" pos:column="54"/></operator> <operator pos:line="27" pos:column="47">!<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="48">g_hpipeStdError<pos:position pos:line="27" pos:column="63"/></name></expr>)<pos:position pos:line="27" pos:column="64"/></condition><then pos:line="27" pos:column="64"> <block pos:line="27" pos:column="65">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">ErrorMessage<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name pos:line="28" pos:column="22">NULL<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="28">TRUE<pos:position pos:line="28" pos:column="32"/></name></expr></argument>)<pos:position pos:line="28" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">stInfo<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">.<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="12">hStdInput<pos:position pos:line="30" pos:column="21"/></name></name>  <operator pos:line="30" pos:column="23">=<pos:position pos:line="30" pos:column="24"/></operator> <name pos:line="30" pos:column="25">g_hpipeInRead<pos:position pos:line="30" pos:column="38"/></name></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">stInfo<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">.<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">hStdOutput<pos:position pos:line="31" pos:column="22"/></name></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <name pos:line="31" pos:column="25">g_hpipeOutWrite<pos:position pos:line="31" pos:column="40"/></name></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">stInfo<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">.<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">hStdError<pos:position pos:line="32" pos:column="21"/></name></name>  <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <name pos:line="32" pos:column="25">g_hpipeStdError<pos:position pos:line="32" pos:column="40"/></name></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name pos:line="34" pos:column="5">bResult<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <call><name pos:line="34" pos:column="15">CreateProcess<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><name pos:line="34" pos:column="29">NULL<pos:position pos:line="34" pos:column="33"/></name></expr></argument>,
        <argument><expr><name pos:line="35" pos:column="9">szCmdLine<pos:position pos:line="35" pos:column="18"/></name></expr></argument>,
        <argument><expr><name pos:line="36" pos:column="9">NULL<pos:position pos:line="36" pos:column="13"/></name></expr></argument>,
        <argument><expr><name pos:line="37" pos:column="9">NULL<pos:position pos:line="37" pos:column="13"/></name></expr></argument>,
        <argument><expr><name pos:line="38" pos:column="9">TRUE<pos:position pos:line="38" pos:column="13"/></name></expr></argument>,
        <argument><expr><name pos:line="39" pos:column="9">CREATE_SUSPENDED<pos:position pos:line="39" pos:column="25"/></name></expr></argument>,
        <argument><expr><name pos:line="40" pos:column="9">NULL<pos:position pos:line="40" pos:column="13"/></name></expr></argument>,
        <argument><expr><name pos:line="41" pos:column="9">NULL<pos:position pos:line="41" pos:column="13"/></name></expr></argument>,
        <argument><expr><operator pos:line="42" pos:column="9">&amp;<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="10">stInfo<pos:position pos:line="42" pos:column="16"/></name></expr></argument>,
        <argument><expr><operator pos:line="43" pos:column="9">&amp;<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="10">g_lpRedirectProc<pos:position pos:line="43" pos:column="26"/></name></expr></argument>)<pos:position pos:line="43" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>


    <expr_stmt><expr><call><name pos:line="46" pos:column="5">CloseHandle<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">(<argument><expr><name pos:line="46" pos:column="17">g_hpipeInRead<pos:position pos:line="46" pos:column="30"/></name></expr></argument>)<pos:position pos:line="46" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">CloseHandle<pos:position pos:line="47" pos:column="16"/></name><argument_list pos:line="47" pos:column="16">(<argument><expr><name pos:line="47" pos:column="17">g_hpipeOutWrite<pos:position pos:line="47" pos:column="32"/></name></expr></argument>)<pos:position pos:line="47" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">CloseHandle<pos:position pos:line="48" pos:column="16"/></name><argument_list pos:line="48" pos:column="16">(<argument><expr><name pos:line="48" pos:column="17">g_hpipeStdError<pos:position pos:line="48" pos:column="32"/></name></expr></argument>)<pos:position pos:line="48" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="34"/></expr_stmt>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><operator pos:line="50" pos:column="9">!<pos:position pos:line="50" pos:column="10"/></operator><name pos:line="50" pos:column="10">bResult<pos:position pos:line="50" pos:column="17"/></name></expr>)<pos:position pos:line="50" pos:column="18"/></condition><then pos:line="50" pos:column="18">
    <block pos:line="51" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">CloseHandle<pos:position pos:line="52" pos:column="20"/></name><argument_list pos:line="52" pos:column="20">(<argument><expr><name pos:line="52" pos:column="21">g_hpipeInWrite<pos:position pos:line="52" pos:column="35"/></name></expr></argument>)<pos:position pos:line="52" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">CloseHandle<pos:position pos:line="53" pos:column="20"/></name><argument_list pos:line="53" pos:column="20">(<argument><expr><name pos:line="53" pos:column="21">g_hpipeOutRead<pos:position pos:line="53" pos:column="35"/></name></expr></argument>)<pos:position pos:line="53" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">CloseHandle<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><name pos:line="54" pos:column="21">g_hpipeStdError<pos:position pos:line="54" pos:column="36"/></name></expr></argument>)<pos:position pos:line="54" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="38"/></expr_stmt>
        <return pos:line="55" pos:column="9">return <expr><name pos:line="55" pos:column="16">FALSE<pos:position pos:line="55" pos:column="21"/></name></expr>;<pos:position pos:line="55" pos:column="22"/></return>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="58" pos:column="5">CloseHandle<pos:position pos:line="58" pos:column="16"/></name><argument_list pos:line="58" pos:column="16">(<argument><expr><call><name pos:line="58" pos:column="17">CreateThread<pos:position pos:line="58" pos:column="29"/></name><argument_list pos:line="58" pos:column="29">(<argument><expr><name pos:line="58" pos:column="30">NULL<pos:position pos:line="58" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="36">0<pos:position pos:line="58" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="39">ConsoleOutputThread<pos:position pos:line="58" pos:column="58"/></name></expr></argument>,
                             <argument><expr><literal type="number" pos:line="59" pos:column="30">0<pos:position pos:line="59" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="33">0<pos:position pos:line="59" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="59" pos:column="36">&amp;<pos:position pos:line="59" pos:column="41"/></operator><name pos:line="59" pos:column="37">dwThreadId<pos:position pos:line="59" pos:column="47"/></name></expr></argument>)<pos:position pos:line="59" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">ResumeThread<pos:position pos:line="60" pos:column="17"/></name><argument_list pos:line="60" pos:column="17">(<argument><expr><name><name pos:line="60" pos:column="18">g_lpRedirectProc<pos:position pos:line="60" pos:column="34"/></name><operator pos:line="60" pos:column="34">.<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="35">hThread<pos:position pos:line="60" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">CloseHandle<pos:position pos:line="61" pos:column="16"/></name><argument_list pos:line="61" pos:column="16">(<argument><expr><call><name pos:line="61" pos:column="17">CreateThread<pos:position pos:line="61" pos:column="29"/></name><argument_list pos:line="61" pos:column="29">(<argument><expr><name pos:line="61" pos:column="30">NULL<pos:position pos:line="61" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="36">0<pos:position pos:line="61" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="39">ConsoleWaitingThread<pos:position pos:line="61" pos:column="59"/></name></expr></argument>,
                             <argument><expr><literal type="number" pos:line="62" pos:column="30">0<pos:position pos:line="62" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="33">0<pos:position pos:line="62" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="62" pos:column="36">&amp;<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="37">dwThreadId<pos:position pos:line="62" pos:column="47"/></name></expr></argument>)<pos:position pos:line="62" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="50"/></expr_stmt>

    <return pos:line="64" pos:column="5">return <expr><name pos:line="64" pos:column="12">TRUE<pos:position pos:line="64" pos:column="16"/></name></expr>;<pos:position pos:line="64" pos:column="17"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

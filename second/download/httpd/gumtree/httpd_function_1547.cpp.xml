<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_function_1547.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">apr_status_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">deflate_in_filter<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">ap_filter_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">f<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="2" pos:column="39">apr_bucket_brigade<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">bb<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="3" pos:column="39">ap_input_mode_t<pos:position pos:line="3" pos:column="54"/></name></type> <name pos:line="3" pos:column="55">mode<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="4" pos:column="39">apr_read_type_e<pos:position pos:line="4" pos:column="54"/></name></type> <name pos:line="4" pos:column="55">block<pos:position pos:line="4" pos:column="60"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="5" pos:column="39">apr_off_t<pos:position pos:line="5" pos:column="48"/></name></type> <name pos:line="5" pos:column="49">readbytes<pos:position pos:line="5" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="59"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">apr_bucket<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">bkt<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">request_rec<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">r<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><name><name pos:line="8" pos:column="22">f<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">r<pos:position pos:line="8" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">deflate_ctx<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">ctx<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><name><name pos:line="9" pos:column="24">f<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">ctx<pos:position pos:line="9" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">zRC<pos:position pos:line="10" pos:column="12"/></name></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">apr_status_t<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">rv<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">deflate_filter_config<pos:position pos:line="12" pos:column="26"/></name> <modifier pos:line="12" pos:column="27">*<pos:position pos:line="12" pos:column="28"/></modifier></type><name pos:line="12" pos:column="28">c<pos:position pos:line="12" pos:column="29"/></name></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">deflate_dirconf_t<pos:position pos:line="13" pos:column="22"/></name> <modifier pos:line="13" pos:column="23">*<pos:position pos:line="13" pos:column="24"/></modifier></type><name pos:line="13" pos:column="24">dc<pos:position pos:line="13" pos:column="26"/></name></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">apr_off_t<pos:position pos:line="14" pos:column="14"/></name></type> <name pos:line="14" pos:column="15">inflate_limit<pos:position pos:line="14" pos:column="28"/></name></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* just get out of the way of things we don't want. */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">mode<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">!=<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">AP_MODE_READBYTES<pos:position pos:line="17" pos:column="34"/></name></expr>)<pos:position pos:line="17" pos:column="35"/></condition><then pos:line="17" pos:column="35"> <block pos:line="17" pos:column="36">{
        <return pos:line="18" pos:column="9">return <expr><call><name pos:line="18" pos:column="16">ap_get_brigade<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name><name pos:line="18" pos:column="31">f<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">next<pos:position pos:line="18" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">bb<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">mode<pos:position pos:line="18" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="50">block<pos:position pos:line="18" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="57">readbytes<pos:position pos:line="18" pos:column="66"/></name></expr></argument>)<pos:position pos:line="18" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="68"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="21" pos:column="5">c<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <call><name pos:line="21" pos:column="9">ap_get_module_config<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name><name pos:line="21" pos:column="30">r<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">server<pos:position pos:line="21" pos:column="39"/></name><operator pos:line="21" pos:column="39">-&gt;<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="41">module_config<pos:position pos:line="21" pos:column="54"/></name></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="56">&amp;<pos:position pos:line="21" pos:column="61"/></operator><name pos:line="21" pos:column="57">deflate_module<pos:position pos:line="21" pos:column="71"/></name></expr></argument>)<pos:position pos:line="21" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">dc<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <call><name pos:line="22" pos:column="10">ap_get_module_config<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name><name pos:line="22" pos:column="31">r<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">per_dir_config<pos:position pos:line="22" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="50">&amp;<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="51">deflate_module<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">ctx<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">||<pos:position pos:line="24" pos:column="16"/></operator> <name><name pos:line="24" pos:column="17">ctx<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">-&gt;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="22">header_len<pos:position pos:line="24" pos:column="32"/></name></name> <operator pos:line="24" pos:column="33">&lt;<pos:position pos:line="24" pos:column="37"/></operator> <sizeof pos:line="24" pos:column="35">sizeof<argument_list pos:line="24" pos:column="41">(<argument><expr><name><name pos:line="24" pos:column="42">ctx<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">-&gt;<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="47">header<pos:position pos:line="24" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></sizeof></expr>)<pos:position pos:line="24" pos:column="55"/></condition><then pos:line="24" pos:column="55"> <block pos:line="24" pos:column="56">{
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">apr_size_t<pos:position pos:line="25" pos:column="19"/></name></type> <name pos:line="25" pos:column="20">len<pos:position pos:line="25" pos:column="23"/></name></decl>;<pos:position pos:line="25" pos:column="24"/></decl_stmt>

        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">ctx<pos:position pos:line="27" pos:column="17"/></name></expr>)<pos:position pos:line="27" pos:column="18"/></condition><then pos:line="27" pos:column="18"> <block pos:line="27" pos:column="19">{
            <comment type="block" pos:line="28" pos:column="13">/* only work on main request/no subrequests */</comment>
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><operator pos:line="29" pos:column="17">!<pos:position pos:line="29" pos:column="18"/></operator><call><name pos:line="29" pos:column="18">ap_is_initial_req<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">r<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="39"/></condition><then pos:line="29" pos:column="39"> <block pos:line="29" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="30" pos:column="17">ap_remove_input_filter<pos:position pos:line="30" pos:column="39"/></name><argument_list pos:line="30" pos:column="39">(<argument><expr><name pos:line="30" pos:column="40">f<pos:position pos:line="30" pos:column="41"/></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
                <return pos:line="31" pos:column="17">return <expr><call><name pos:line="31" pos:column="24">ap_get_brigade<pos:position pos:line="31" pos:column="38"/></name><argument_list pos:line="31" pos:column="38">(<argument><expr><name><name pos:line="31" pos:column="39">f<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">-&gt;<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="42">next<pos:position pos:line="31" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="48">bb<pos:position pos:line="31" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="52">mode<pos:position pos:line="31" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="58">block<pos:position pos:line="31" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="65">readbytes<pos:position pos:line="31" pos:column="74"/></name></expr></argument>)<pos:position pos:line="31" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="76"/></return>
            }<pos:position pos:line="32" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="34" pos:column="13">/* We can't operate on Content-Ranges */</comment>
            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><call><name pos:line="35" pos:column="17">apr_table_get<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><name><name pos:line="35" pos:column="31">r<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">-&gt;<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="34">headers_in<pos:position pos:line="35" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="46">"Content-Range"<pos:position pos:line="35" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="62"/></argument_list></call> <operator pos:line="35" pos:column="63">!=<pos:position pos:line="35" pos:column="65"/></operator> <name pos:line="35" pos:column="66">NULL<pos:position pos:line="35" pos:column="70"/></name></expr>)<pos:position pos:line="35" pos:column="71"/></condition><then pos:line="35" pos:column="71"> <block pos:line="35" pos:column="72">{
                <expr_stmt><expr><call><name pos:line="36" pos:column="17">ap_remove_input_filter<pos:position pos:line="36" pos:column="39"/></name><argument_list pos:line="36" pos:column="39">(<argument><expr><name pos:line="36" pos:column="40">f<pos:position pos:line="36" pos:column="41"/></name></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt>
                <return pos:line="37" pos:column="17">return <expr><call><name pos:line="37" pos:column="24">ap_get_brigade<pos:position pos:line="37" pos:column="38"/></name><argument_list pos:line="37" pos:column="38">(<argument><expr><name><name pos:line="37" pos:column="39">f<pos:position pos:line="37" pos:column="40"/></name><operator pos:line="37" pos:column="40">-&gt;<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="42">next<pos:position pos:line="37" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="48">bb<pos:position pos:line="37" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="52">mode<pos:position pos:line="37" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="58">block<pos:position pos:line="37" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="65">readbytes<pos:position pos:line="37" pos:column="74"/></name></expr></argument>)<pos:position pos:line="37" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="76"/></return>
            }<pos:position pos:line="38" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="40" pos:column="13">/* Check whether request body is gzipped.
             *
             * If it is, we're transforming the contents, invalidating
             * some request headers including Content-Encoding.
             *
             * If not, we just remove ourself.
             */</comment>
            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><call><name pos:line="47" pos:column="17">check_gzip<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><name pos:line="47" pos:column="28">r<pos:position pos:line="47" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="31">r<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">-&gt;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="34">headers_in<pos:position pos:line="47" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="46">NULL<pos:position pos:line="47" pos:column="50"/></name></expr></argument>)<pos:position pos:line="47" pos:column="51"/></argument_list></call> <operator pos:line="47" pos:column="52">==<pos:position pos:line="47" pos:column="54"/></operator> <literal type="number" pos:line="47" pos:column="55">0<pos:position pos:line="47" pos:column="56"/></literal></expr>)<pos:position pos:line="47" pos:column="57"/></condition><then pos:line="47" pos:column="57"> <block pos:line="47" pos:column="58">{
                <expr_stmt><expr><call><name pos:line="48" pos:column="17">ap_remove_input_filter<pos:position pos:line="48" pos:column="39"/></name><argument_list pos:line="48" pos:column="39">(<argument><expr><name pos:line="48" pos:column="40">f<pos:position pos:line="48" pos:column="41"/></name></expr></argument>)<pos:position pos:line="48" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="43"/></expr_stmt>
                <return pos:line="49" pos:column="17">return <expr><call><name pos:line="49" pos:column="24">ap_get_brigade<pos:position pos:line="49" pos:column="38"/></name><argument_list pos:line="49" pos:column="38">(<argument><expr><name><name pos:line="49" pos:column="39">f<pos:position pos:line="49" pos:column="40"/></name><operator pos:line="49" pos:column="40">-&gt;<pos:position pos:line="49" pos:column="45"/></operator><name pos:line="49" pos:column="42">next<pos:position pos:line="49" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="48">bb<pos:position pos:line="49" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="52">mode<pos:position pos:line="49" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="58">block<pos:position pos:line="49" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="65">readbytes<pos:position pos:line="49" pos:column="74"/></name></expr></argument>)<pos:position pos:line="49" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="76"/></return>
            }<pos:position pos:line="50" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name><name pos:line="52" pos:column="13">f<pos:position pos:line="52" pos:column="14"/></name><operator pos:line="52" pos:column="14">-&gt;<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="16">ctx<pos:position pos:line="52" pos:column="19"/></name></name> <operator pos:line="52" pos:column="20">=<pos:position pos:line="52" pos:column="21"/></operator> <name pos:line="52" pos:column="22">ctx<pos:position pos:line="52" pos:column="25"/></name> <operator pos:line="52" pos:column="26">=<pos:position pos:line="52" pos:column="27"/></operator> <call><name pos:line="52" pos:column="28">apr_pcalloc<pos:position pos:line="52" pos:column="39"/></name><argument_list pos:line="52" pos:column="39">(<argument><expr><name><name pos:line="52" pos:column="40">f<pos:position pos:line="52" pos:column="41"/></name><operator pos:line="52" pos:column="41">-&gt;<pos:position pos:line="52" pos:column="46"/></operator><name pos:line="52" pos:column="43">r<pos:position pos:line="52" pos:column="44"/></name><operator pos:line="52" pos:column="44">-&gt;<pos:position pos:line="52" pos:column="49"/></operator><name pos:line="52" pos:column="46">pool<pos:position pos:line="52" pos:column="50"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="52">sizeof<argument_list pos:line="52" pos:column="58">(<argument><expr><operator pos:line="52" pos:column="59">*<pos:position pos:line="52" pos:column="60"/></operator><name pos:line="52" pos:column="60">ctx<pos:position pos:line="52" pos:column="63"/></name></expr></argument>)<pos:position pos:line="52" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="52" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="53" pos:column="13">ctx<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">-&gt;<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="18">bb<pos:position pos:line="53" pos:column="20"/></name></name> <operator pos:line="53" pos:column="21">=<pos:position pos:line="53" pos:column="22"/></operator> <call><name pos:line="53" pos:column="23">apr_brigade_create<pos:position pos:line="53" pos:column="41"/></name><argument_list pos:line="53" pos:column="41">(<argument><expr><name><name pos:line="53" pos:column="42">r<pos:position pos:line="53" pos:column="43"/></name><operator pos:line="53" pos:column="43">-&gt;<pos:position pos:line="53" pos:column="48"/></operator><name pos:line="53" pos:column="45">pool<pos:position pos:line="53" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="51">f<pos:position pos:line="53" pos:column="52"/></name><operator pos:line="53" pos:column="52">-&gt;<pos:position pos:line="53" pos:column="57"/></operator><name pos:line="53" pos:column="54">c<pos:position pos:line="53" pos:column="55"/></name><operator pos:line="53" pos:column="55">-&gt;<pos:position pos:line="53" pos:column="60"/></operator><name pos:line="53" pos:column="57">bucket_alloc<pos:position pos:line="53" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="54" pos:column="13">ctx<pos:position pos:line="54" pos:column="16"/></name><operator pos:line="54" pos:column="16">-&gt;<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="18">proc_bb<pos:position pos:line="54" pos:column="25"/></name></name> <operator pos:line="54" pos:column="26">=<pos:position pos:line="54" pos:column="27"/></operator> <call><name pos:line="54" pos:column="28">apr_brigade_create<pos:position pos:line="54" pos:column="46"/></name><argument_list pos:line="54" pos:column="46">(<argument><expr><name><name pos:line="54" pos:column="47">r<pos:position pos:line="54" pos:column="48"/></name><operator pos:line="54" pos:column="48">-&gt;<pos:position pos:line="54" pos:column="53"/></operator><name pos:line="54" pos:column="50">pool<pos:position pos:line="54" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="56">f<pos:position pos:line="54" pos:column="57"/></name><operator pos:line="54" pos:column="57">-&gt;<pos:position pos:line="54" pos:column="62"/></operator><name pos:line="54" pos:column="59">c<pos:position pos:line="54" pos:column="60"/></name><operator pos:line="54" pos:column="60">-&gt;<pos:position pos:line="54" pos:column="65"/></operator><name pos:line="54" pos:column="62">bucket_alloc<pos:position pos:line="54" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="55" pos:column="13">ctx<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">-&gt;<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="18">buffer<pos:position pos:line="55" pos:column="24"/></name></name> <operator pos:line="55" pos:column="25">=<pos:position pos:line="55" pos:column="26"/></operator> <call><name pos:line="55" pos:column="27">apr_palloc<pos:position pos:line="55" pos:column="37"/></name><argument_list pos:line="55" pos:column="37">(<argument><expr><name><name pos:line="55" pos:column="38">r<pos:position pos:line="55" pos:column="39"/></name><operator pos:line="55" pos:column="39">-&gt;<pos:position pos:line="55" pos:column="44"/></operator><name pos:line="55" pos:column="41">pool<pos:position pos:line="55" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="47">c<pos:position pos:line="55" pos:column="48"/></name><operator pos:line="55" pos:column="48">-&gt;<pos:position pos:line="55" pos:column="53"/></operator><name pos:line="55" pos:column="50">bufferSize<pos:position pos:line="55" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if>

        <do pos:line="58" pos:column="9">do <block pos:line="58" pos:column="12">{
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">apr_brigade_cleanup<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><name><name pos:line="59" pos:column="33">ctx<pos:position pos:line="59" pos:column="36"/></name><operator pos:line="59" pos:column="36">-&gt;<pos:position pos:line="59" pos:column="41"/></operator><name pos:line="59" pos:column="38">bb<pos:position pos:line="59" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="42"/></expr_stmt>

            <expr_stmt><expr><name pos:line="61" pos:column="13">len<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <sizeof pos:line="61" pos:column="19">sizeof<argument_list pos:line="61" pos:column="25">(<argument><expr><name><name pos:line="61" pos:column="26">ctx<pos:position pos:line="61" pos:column="29"/></name><operator pos:line="61" pos:column="29">-&gt;<pos:position pos:line="61" pos:column="34"/></operator><name pos:line="61" pos:column="31">header<pos:position pos:line="61" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="38"/></argument_list></sizeof> <operator pos:line="61" pos:column="39">-<pos:position pos:line="61" pos:column="40"/></operator> <name><name pos:line="61" pos:column="41">ctx<pos:position pos:line="61" pos:column="44"/></name><operator pos:line="61" pos:column="44">-&gt;<pos:position pos:line="61" pos:column="49"/></operator><name pos:line="61" pos:column="46">header_len<pos:position pos:line="61" pos:column="56"/></name></name></expr>;<pos:position pos:line="61" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><name pos:line="62" pos:column="13">rv<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <call><name pos:line="62" pos:column="18">ap_get_brigade<pos:position pos:line="62" pos:column="32"/></name><argument_list pos:line="62" pos:column="32">(<argument><expr><name><name pos:line="62" pos:column="33">f<pos:position pos:line="62" pos:column="34"/></name><operator pos:line="62" pos:column="34">-&gt;<pos:position pos:line="62" pos:column="39"/></operator><name pos:line="62" pos:column="36">next<pos:position pos:line="62" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="42">ctx<pos:position pos:line="62" pos:column="45"/></name><operator pos:line="62" pos:column="45">-&gt;<pos:position pos:line="62" pos:column="50"/></operator><name pos:line="62" pos:column="47">bb<pos:position pos:line="62" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="51">AP_MODE_READBYTES<pos:position pos:line="62" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="70">block<pos:position pos:line="62" pos:column="75"/></name></expr></argument>,
                                <argument><expr><name pos:line="63" pos:column="33">len<pos:position pos:line="63" pos:column="36"/></name></expr></argument>)<pos:position pos:line="63" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="38"/></expr_stmt>

            <comment type="block" pos:line="65" pos:column="13">/* ap_get_brigade may return success with an empty brigade for
             * a non-blocking read which would block (an empty brigade for
             * a blocking read is an issue which is simply forwarded here).
             */</comment>
            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><name pos:line="69" pos:column="17">rv<pos:position pos:line="69" pos:column="19"/></name> <operator pos:line="69" pos:column="20">!=<pos:position pos:line="69" pos:column="22"/></operator> <name pos:line="69" pos:column="23">APR_SUCCESS<pos:position pos:line="69" pos:column="34"/></name> <operator pos:line="69" pos:column="35">||<pos:position pos:line="69" pos:column="37"/></operator> <call><name pos:line="69" pos:column="38">APR_BRIGADE_EMPTY<pos:position pos:line="69" pos:column="55"/></name><argument_list pos:line="69" pos:column="55">(<argument><expr><name><name pos:line="69" pos:column="56">ctx<pos:position pos:line="69" pos:column="59"/></name><operator pos:line="69" pos:column="59">-&gt;<pos:position pos:line="69" pos:column="64"/></operator><name pos:line="69" pos:column="61">bb<pos:position pos:line="69" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="65"/></condition><then pos:line="69" pos:column="65"> <block pos:line="69" pos:column="66">{
                <return pos:line="70" pos:column="17">return <expr><name pos:line="70" pos:column="24">rv<pos:position pos:line="70" pos:column="26"/></name></expr>;<pos:position pos:line="70" pos:column="27"/></return>
            }<pos:position pos:line="71" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="73" pos:column="13">/* zero length body? step aside */</comment>
            <expr_stmt><expr><name pos:line="74" pos:column="13">bkt<pos:position pos:line="74" pos:column="16"/></name> <operator pos:line="74" pos:column="17">=<pos:position pos:line="74" pos:column="18"/></operator> <call><name pos:line="74" pos:column="19">APR_BRIGADE_FIRST<pos:position pos:line="74" pos:column="36"/></name><argument_list pos:line="74" pos:column="36">(<argument><expr><name><name pos:line="74" pos:column="37">ctx<pos:position pos:line="74" pos:column="40"/></name><operator pos:line="74" pos:column="40">-&gt;<pos:position pos:line="74" pos:column="45"/></operator><name pos:line="74" pos:column="42">bb<pos:position pos:line="74" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="46"/></expr_stmt>
            <if pos:line="75" pos:column="13">if <condition pos:line="75" pos:column="16">(<expr><call><name pos:line="75" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="75" pos:column="34"/></name><argument_list pos:line="75" pos:column="34">(<argument><expr><name pos:line="75" pos:column="35">bkt<pos:position pos:line="75" pos:column="38"/></name></expr></argument>)<pos:position pos:line="75" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="40"/></condition><then pos:line="75" pos:column="40"> <block pos:line="75" pos:column="41">{
                <if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><name><name pos:line="76" pos:column="21">ctx<pos:position pos:line="76" pos:column="24"/></name><operator pos:line="76" pos:column="24">-&gt;<pos:position pos:line="76" pos:column="29"/></operator><name pos:line="76" pos:column="26">header_len<pos:position pos:line="76" pos:column="36"/></name></name></expr>)<pos:position pos:line="76" pos:column="37"/></condition><then pos:line="76" pos:column="37"> <block pos:line="76" pos:column="38">{
                    <comment type="block" pos:line="77" pos:column="21">/* If the header was (partially) read it's an error, this
                     * is not a gzip Content-Encoding, as claimed.
                     */</comment>
                    <expr_stmt><expr><call><name pos:line="80" pos:column="21">ap_log_rerror<pos:position pos:line="80" pos:column="34"/></name><argument_list pos:line="80" pos:column="34">(<argument><expr><name pos:line="80" pos:column="35">APLOG_MARK<pos:position pos:line="80" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="47">APLOG_ERR<pos:position pos:line="80" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="58">0<pos:position pos:line="80" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="61">r<pos:position pos:line="80" pos:column="62"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="81" pos:column="35">"Encountered premature end-of-stream while "<pos:position pos:line="81" pos:column="79"/></literal>
                                  <literal type="string" pos:line="82" pos:column="35">"reading inflate header"<pos:position pos:line="82" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="61"/></expr_stmt>
                    <return pos:line="83" pos:column="21">return <expr><name pos:line="83" pos:column="28">APR_EGENERAL<pos:position pos:line="83" pos:column="40"/></name></expr>;<pos:position pos:line="83" pos:column="41"/></return>
                }<pos:position pos:line="84" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="85" pos:column="17">APR_BUCKET_REMOVE<pos:position pos:line="85" pos:column="34"/></name><argument_list pos:line="85" pos:column="34">(<argument><expr><name pos:line="85" pos:column="35">bkt<pos:position pos:line="85" pos:column="38"/></name></expr></argument>)<pos:position pos:line="85" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="86" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="86" pos:column="40"/></name><argument_list pos:line="86" pos:column="40">(<argument><expr><name pos:line="86" pos:column="41">bb<pos:position pos:line="86" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="45">bkt<pos:position pos:line="86" pos:column="48"/></name></expr></argument>)<pos:position pos:line="86" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="50"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="87" pos:column="17">ap_remove_input_filter<pos:position pos:line="87" pos:column="39"/></name><argument_list pos:line="87" pos:column="39">(<argument><expr><name pos:line="87" pos:column="40">f<pos:position pos:line="87" pos:column="41"/></name></expr></argument>)<pos:position pos:line="87" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="43"/></expr_stmt>
                <return pos:line="88" pos:column="17">return <expr><name pos:line="88" pos:column="24">APR_SUCCESS<pos:position pos:line="88" pos:column="35"/></name></expr>;<pos:position pos:line="88" pos:column="36"/></return>
            }<pos:position pos:line="89" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="91" pos:column="13">rv<pos:position pos:line="91" pos:column="15"/></name> <operator pos:line="91" pos:column="16">=<pos:position pos:line="91" pos:column="17"/></operator> <call><name pos:line="91" pos:column="18">apr_brigade_flatten<pos:position pos:line="91" pos:column="37"/></name><argument_list pos:line="91" pos:column="37">(<argument><expr><name><name pos:line="91" pos:column="38">ctx<pos:position pos:line="91" pos:column="41"/></name><operator pos:line="91" pos:column="41">-&gt;<pos:position pos:line="91" pos:column="46"/></operator><name pos:line="91" pos:column="43">bb<pos:position pos:line="91" pos:column="45"/></name></name></expr></argument>,
                                     <argument><expr><name><name pos:line="92" pos:column="38">ctx<pos:position pos:line="92" pos:column="41"/></name><operator pos:line="92" pos:column="41">-&gt;<pos:position pos:line="92" pos:column="46"/></operator><name pos:line="92" pos:column="43">header<pos:position pos:line="92" pos:column="49"/></name></name> <operator pos:line="92" pos:column="50">+<pos:position pos:line="92" pos:column="51"/></operator> <name><name pos:line="92" pos:column="52">ctx<pos:position pos:line="92" pos:column="55"/></name><operator pos:line="92" pos:column="55">-&gt;<pos:position pos:line="92" pos:column="60"/></operator><name pos:line="92" pos:column="57">header_len<pos:position pos:line="92" pos:column="67"/></name></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="69">&amp;<pos:position pos:line="92" pos:column="74"/></operator><name pos:line="92" pos:column="70">len<pos:position pos:line="92" pos:column="73"/></name></expr></argument>)<pos:position pos:line="92" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="75"/></expr_stmt>
            <if pos:line="93" pos:column="13">if <condition pos:line="93" pos:column="16">(<expr><name pos:line="93" pos:column="17">rv<pos:position pos:line="93" pos:column="19"/></name> <operator pos:line="93" pos:column="20">!=<pos:position pos:line="93" pos:column="22"/></operator> <name pos:line="93" pos:column="23">APR_SUCCESS<pos:position pos:line="93" pos:column="34"/></name></expr>)<pos:position pos:line="93" pos:column="35"/></condition><then pos:line="93" pos:column="35"> <block pos:line="93" pos:column="36">{
                <return pos:line="94" pos:column="17">return <expr><name pos:line="94" pos:column="24">rv<pos:position pos:line="94" pos:column="26"/></name></expr>;<pos:position pos:line="94" pos:column="27"/></return>
            }<pos:position pos:line="95" pos:column="14"/></block></then></if>
            <if pos:line="96" pos:column="13">if <condition pos:line="96" pos:column="16">(<expr><name pos:line="96" pos:column="17">len<pos:position pos:line="96" pos:column="20"/></name> <operator pos:line="96" pos:column="21">&amp;&amp;<pos:position pos:line="96" pos:column="31"/></operator> <operator pos:line="96" pos:column="24">!<pos:position pos:line="96" pos:column="25"/></operator><name><name pos:line="96" pos:column="25">ctx<pos:position pos:line="96" pos:column="28"/></name><operator pos:line="96" pos:column="28">-&gt;<pos:position pos:line="96" pos:column="33"/></operator><name pos:line="96" pos:column="30">header_len<pos:position pos:line="96" pos:column="40"/></name></name></expr>)<pos:position pos:line="96" pos:column="41"/></condition><then pos:line="96" pos:column="41"> <block pos:line="96" pos:column="42">{
                <expr_stmt><expr><call><name pos:line="97" pos:column="17">apr_table_unset<pos:position pos:line="97" pos:column="32"/></name><argument_list pos:line="97" pos:column="32">(<argument><expr><name><name pos:line="97" pos:column="33">r<pos:position pos:line="97" pos:column="34"/></name><operator pos:line="97" pos:column="34">-&gt;<pos:position pos:line="97" pos:column="39"/></operator><name pos:line="97" pos:column="36">headers_in<pos:position pos:line="97" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="48">"Content-Length"<pos:position pos:line="97" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="66"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="98" pos:column="17">apr_table_unset<pos:position pos:line="98" pos:column="32"/></name><argument_list pos:line="98" pos:column="32">(<argument><expr><name><name pos:line="98" pos:column="33">r<pos:position pos:line="98" pos:column="34"/></name><operator pos:line="98" pos:column="34">-&gt;<pos:position pos:line="98" pos:column="39"/></operator><name pos:line="98" pos:column="36">headers_in<pos:position pos:line="98" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="48">"Content-MD5"<pos:position pos:line="98" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="63"/></expr_stmt>
            }<pos:position pos:line="99" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="100" pos:column="13">ctx<pos:position pos:line="100" pos:column="16"/></name><operator pos:line="100" pos:column="16">-&gt;<pos:position pos:line="100" pos:column="21"/></operator><name pos:line="100" pos:column="18">header_len<pos:position pos:line="100" pos:column="28"/></name></name> <operator pos:line="100" pos:column="29">+=<pos:position pos:line="100" pos:column="31"/></operator> <name pos:line="100" pos:column="32">len<pos:position pos:line="100" pos:column="35"/></name></expr>;<pos:position pos:line="100" pos:column="36"/></expr_stmt>

        }<pos:position pos:line="102" pos:column="10"/></block> while <condition pos:line="102" pos:column="17">(<expr><name><name pos:line="102" pos:column="18">ctx<pos:position pos:line="102" pos:column="21"/></name><operator pos:line="102" pos:column="21">-&gt;<pos:position pos:line="102" pos:column="26"/></operator><name pos:line="102" pos:column="23">header_len<pos:position pos:line="102" pos:column="33"/></name></name> <operator pos:line="102" pos:column="34">&lt;<pos:position pos:line="102" pos:column="38"/></operator> <sizeof pos:line="102" pos:column="36">sizeof<argument_list pos:line="102" pos:column="42">(<argument><expr><name><name pos:line="102" pos:column="43">ctx<pos:position pos:line="102" pos:column="46"/></name><operator pos:line="102" pos:column="46">-&gt;<pos:position pos:line="102" pos:column="51"/></operator><name pos:line="102" pos:column="48">header<pos:position pos:line="102" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="55"/></argument_list></sizeof></expr>)<pos:position pos:line="102" pos:column="56"/></condition>;<pos:position pos:line="102" pos:column="57"/></do>

        <comment type="block" pos:line="104" pos:column="9">/* We didn't get the magic bytes. */</comment>
        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name><name pos:line="105" pos:column="13">ctx<pos:position pos:line="105" pos:column="16"/></name><operator pos:line="105" pos:column="16">-&gt;<pos:position pos:line="105" pos:column="21"/></operator><name pos:line="105" pos:column="18">header<pos:position pos:line="105" pos:column="24"/></name><index pos:line="105" pos:column="24">[<expr><literal type="number" pos:line="105" pos:column="25">0<pos:position pos:line="105" pos:column="26"/></literal></expr>]<pos:position pos:line="105" pos:column="27"/></index></name> <operator pos:line="105" pos:column="28">!=<pos:position pos:line="105" pos:column="30"/></operator> <name><name pos:line="105" pos:column="31">deflate_magic<pos:position pos:line="105" pos:column="44"/></name><index pos:line="105" pos:column="44">[<expr><literal type="number" pos:line="105" pos:column="45">0<pos:position pos:line="105" pos:column="46"/></literal></expr>]<pos:position pos:line="105" pos:column="47"/></index></name> <operator pos:line="105" pos:column="48">||<pos:position pos:line="105" pos:column="50"/></operator>
            <name><name pos:line="106" pos:column="13">ctx<pos:position pos:line="106" pos:column="16"/></name><operator pos:line="106" pos:column="16">-&gt;<pos:position pos:line="106" pos:column="21"/></operator><name pos:line="106" pos:column="18">header<pos:position pos:line="106" pos:column="24"/></name><index pos:line="106" pos:column="24">[<expr><literal type="number" pos:line="106" pos:column="25">1<pos:position pos:line="106" pos:column="26"/></literal></expr>]<pos:position pos:line="106" pos:column="27"/></index></name> <operator pos:line="106" pos:column="28">!=<pos:position pos:line="106" pos:column="30"/></operator> <name><name pos:line="106" pos:column="31">deflate_magic<pos:position pos:line="106" pos:column="44"/></name><index pos:line="106" pos:column="44">[<expr><literal type="number" pos:line="106" pos:column="45">1<pos:position pos:line="106" pos:column="46"/></literal></expr>]<pos:position pos:line="106" pos:column="47"/></index></name></expr>)<pos:position pos:line="106" pos:column="48"/></condition><then pos:line="106" pos:column="48"> <block pos:line="106" pos:column="49">{
            <expr_stmt><expr><call><name pos:line="107" pos:column="13">ap_log_rerror<pos:position pos:line="107" pos:column="26"/></name><argument_list pos:line="107" pos:column="26">(<argument><expr><name pos:line="107" pos:column="27">APLOG_MARK<pos:position pos:line="107" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="39">APLOG_WARNING<pos:position pos:line="107" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="54">0<pos:position pos:line="107" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="57">r<pos:position pos:line="107" pos:column="58"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="108" pos:column="27">"Zlib: Invalid header"<pos:position pos:line="108" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="51"/></expr_stmt>
            <return pos:line="109" pos:column="13">return <expr><name pos:line="109" pos:column="20">APR_EGENERAL<pos:position pos:line="109" pos:column="32"/></name></expr>;<pos:position pos:line="109" pos:column="33"/></return>
        }<pos:position pos:line="110" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="112" pos:column="9">ctx<pos:position pos:line="112" pos:column="12"/></name><operator pos:line="112" pos:column="12">-&gt;<pos:position pos:line="112" pos:column="17"/></operator><name pos:line="112" pos:column="14">zlib_flags<pos:position pos:line="112" pos:column="24"/></name></name> <operator pos:line="112" pos:column="25">=<pos:position pos:line="112" pos:column="26"/></operator> <name><name pos:line="112" pos:column="27">ctx<pos:position pos:line="112" pos:column="30"/></name><operator pos:line="112" pos:column="30">-&gt;<pos:position pos:line="112" pos:column="35"/></operator><name pos:line="112" pos:column="32">header<pos:position pos:line="112" pos:column="38"/></name><index pos:line="112" pos:column="38">[<expr><literal type="number" pos:line="112" pos:column="39">3<pos:position pos:line="112" pos:column="40"/></literal></expr>]<pos:position pos:line="112" pos:column="41"/></index></name></expr>;<pos:position pos:line="112" pos:column="42"/></expr_stmt>
        <if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><operator pos:line="113" pos:column="13">(<pos:position pos:line="113" pos:column="14"/></operator><name><name pos:line="113" pos:column="14">ctx<pos:position pos:line="113" pos:column="17"/></name><operator pos:line="113" pos:column="17">-&gt;<pos:position pos:line="113" pos:column="22"/></operator><name pos:line="113" pos:column="19">zlib_flags<pos:position pos:line="113" pos:column="29"/></name></name> <operator pos:line="113" pos:column="30">&amp;<pos:position pos:line="113" pos:column="35"/></operator> <name pos:line="113" pos:column="32">RESERVED<pos:position pos:line="113" pos:column="40"/></name><operator pos:line="113" pos:column="40">)<pos:position pos:line="113" pos:column="41"/></operator></expr>)<pos:position pos:line="113" pos:column="42"/></condition><then pos:line="113" pos:column="42"> <block pos:line="113" pos:column="43">{
            <expr_stmt><expr><call><name pos:line="114" pos:column="13">ap_log_rerror<pos:position pos:line="114" pos:column="26"/></name><argument_list pos:line="114" pos:column="26">(<argument><expr><name pos:line="114" pos:column="27">APLOG_MARK<pos:position pos:line="114" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="39">APLOG_WARNING<pos:position pos:line="114" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="54">0<pos:position pos:line="114" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="57">r<pos:position pos:line="114" pos:column="58"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="115" pos:column="27">"Zlib: Invalid flags %02x"<pos:position pos:line="115" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="55">ctx<pos:position pos:line="115" pos:column="58"/></name><operator pos:line="115" pos:column="58">-&gt;<pos:position pos:line="115" pos:column="63"/></operator><name pos:line="115" pos:column="60">zlib_flags<pos:position pos:line="115" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="72"/></expr_stmt>
            <return pos:line="116" pos:column="13">return <expr><name pos:line="116" pos:column="20">APR_EGENERAL<pos:position pos:line="116" pos:column="32"/></name></expr>;<pos:position pos:line="116" pos:column="33"/></return>
        }<pos:position pos:line="117" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="119" pos:column="9">zRC<pos:position pos:line="119" pos:column="12"/></name> <operator pos:line="119" pos:column="13">=<pos:position pos:line="119" pos:column="14"/></operator> <call><name pos:line="119" pos:column="15">inflateInit2<pos:position pos:line="119" pos:column="27"/></name><argument_list pos:line="119" pos:column="27">(<argument><expr><operator pos:line="119" pos:column="28">&amp;<pos:position pos:line="119" pos:column="33"/></operator><name><name pos:line="119" pos:column="29">ctx<pos:position pos:line="119" pos:column="32"/></name><operator pos:line="119" pos:column="32">-&gt;<pos:position pos:line="119" pos:column="37"/></operator><name pos:line="119" pos:column="34">stream<pos:position pos:line="119" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="42">c<pos:position pos:line="119" pos:column="43"/></name><operator pos:line="119" pos:column="43">-&gt;<pos:position pos:line="119" pos:column="48"/></operator><name pos:line="119" pos:column="45">windowSize<pos:position pos:line="119" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="119" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="57"/></expr_stmt>

        <if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><name pos:line="121" pos:column="13">zRC<pos:position pos:line="121" pos:column="16"/></name> <operator pos:line="121" pos:column="17">!=<pos:position pos:line="121" pos:column="19"/></operator> <name pos:line="121" pos:column="20">Z_OK<pos:position pos:line="121" pos:column="24"/></name></expr>)<pos:position pos:line="121" pos:column="25"/></condition><then pos:line="121" pos:column="25"> <block pos:line="121" pos:column="26">{
            <expr_stmt><expr><name><name pos:line="122" pos:column="13">f<pos:position pos:line="122" pos:column="14"/></name><operator pos:line="122" pos:column="14">-&gt;<pos:position pos:line="122" pos:column="19"/></operator><name pos:line="122" pos:column="16">ctx<pos:position pos:line="122" pos:column="19"/></name></name> <operator pos:line="122" pos:column="20">=<pos:position pos:line="122" pos:column="21"/></operator> <name pos:line="122" pos:column="22">NULL<pos:position pos:line="122" pos:column="26"/></name></expr>;<pos:position pos:line="122" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="123" pos:column="13">inflateEnd<pos:position pos:line="123" pos:column="23"/></name><argument_list pos:line="123" pos:column="23">(<argument><expr><operator pos:line="123" pos:column="24">&amp;<pos:position pos:line="123" pos:column="29"/></operator><name><name pos:line="123" pos:column="25">ctx<pos:position pos:line="123" pos:column="28"/></name><operator pos:line="123" pos:column="28">-&gt;<pos:position pos:line="123" pos:column="33"/></operator><name pos:line="123" pos:column="30">stream<pos:position pos:line="123" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="123" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="124" pos:column="13">ap_log_rerror<pos:position pos:line="124" pos:column="26"/></name><argument_list pos:line="124" pos:column="26">(<argument><expr><name pos:line="124" pos:column="27">APLOG_MARK<pos:position pos:line="124" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="39">APLOG_ERR<pos:position pos:line="124" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="124" pos:column="50">0<pos:position pos:line="124" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="124" pos:column="53">r<pos:position pos:line="124" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="125" pos:column="27">"unable to init Zlib: "<pos:position pos:line="125" pos:column="50"/></literal>
                          <literal type="string" pos:line="126" pos:column="27">"inflateInit2 returned %d: URL %s"<pos:position pos:line="126" pos:column="61"/></literal></expr></argument>,
                          <argument><expr><name pos:line="127" pos:column="27">zRC<pos:position pos:line="127" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="32">r<pos:position pos:line="127" pos:column="33"/></name><operator pos:line="127" pos:column="33">-&gt;<pos:position pos:line="127" pos:column="38"/></operator><name pos:line="127" pos:column="35">uri<pos:position pos:line="127" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="128" pos:column="13">ap_remove_input_filter<pos:position pos:line="128" pos:column="35"/></name><argument_list pos:line="128" pos:column="35">(<argument><expr><name pos:line="128" pos:column="36">f<pos:position pos:line="128" pos:column="37"/></name></expr></argument>)<pos:position pos:line="128" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="39"/></expr_stmt>
            <return pos:line="129" pos:column="13">return <expr><call><name pos:line="129" pos:column="20">ap_get_brigade<pos:position pos:line="129" pos:column="34"/></name><argument_list pos:line="129" pos:column="34">(<argument><expr><name><name pos:line="129" pos:column="35">f<pos:position pos:line="129" pos:column="36"/></name><operator pos:line="129" pos:column="36">-&gt;<pos:position pos:line="129" pos:column="41"/></operator><name pos:line="129" pos:column="38">next<pos:position pos:line="129" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="44">bb<pos:position pos:line="129" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="48">mode<pos:position pos:line="129" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="54">block<pos:position pos:line="129" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="61">readbytes<pos:position pos:line="129" pos:column="70"/></name></expr></argument>)<pos:position pos:line="129" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="72"/></return>
        }<pos:position pos:line="130" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="132" pos:column="9">/* initialize deflate output buffer */</comment>
        <expr_stmt><expr><name><name pos:line="133" pos:column="9">ctx<pos:position pos:line="133" pos:column="12"/></name><operator pos:line="133" pos:column="12">-&gt;<pos:position pos:line="133" pos:column="17"/></operator><name pos:line="133" pos:column="14">stream<pos:position pos:line="133" pos:column="20"/></name><operator pos:line="133" pos:column="20">.<pos:position pos:line="133" pos:column="21"/></operator><name pos:line="133" pos:column="21">next_out<pos:position pos:line="133" pos:column="29"/></name></name> <operator pos:line="133" pos:column="30">=<pos:position pos:line="133" pos:column="31"/></operator> <name><name pos:line="133" pos:column="32">ctx<pos:position pos:line="133" pos:column="35"/></name><operator pos:line="133" pos:column="35">-&gt;<pos:position pos:line="133" pos:column="40"/></operator><name pos:line="133" pos:column="37">buffer<pos:position pos:line="133" pos:column="43"/></name></name></expr>;<pos:position pos:line="133" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="134" pos:column="9">ctx<pos:position pos:line="134" pos:column="12"/></name><operator pos:line="134" pos:column="12">-&gt;<pos:position pos:line="134" pos:column="17"/></operator><name pos:line="134" pos:column="14">stream<pos:position pos:line="134" pos:column="20"/></name><operator pos:line="134" pos:column="20">.<pos:position pos:line="134" pos:column="21"/></operator><name pos:line="134" pos:column="21">avail_out<pos:position pos:line="134" pos:column="30"/></name></name> <operator pos:line="134" pos:column="31">=<pos:position pos:line="134" pos:column="32"/></operator> <name><name pos:line="134" pos:column="33">c<pos:position pos:line="134" pos:column="34"/></name><operator pos:line="134" pos:column="34">-&gt;<pos:position pos:line="134" pos:column="39"/></operator><name pos:line="134" pos:column="36">bufferSize<pos:position pos:line="134" pos:column="46"/></name></name></expr>;<pos:position pos:line="134" pos:column="47"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="136" pos:column="9">apr_brigade_cleanup<pos:position pos:line="136" pos:column="28"/></name><argument_list pos:line="136" pos:column="28">(<argument><expr><name><name pos:line="136" pos:column="29">ctx<pos:position pos:line="136" pos:column="32"/></name><operator pos:line="136" pos:column="32">-&gt;<pos:position pos:line="136" pos:column="37"/></operator><name pos:line="136" pos:column="34">bb<pos:position pos:line="136" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="137" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="139" pos:column="5">inflate_limit<pos:position pos:line="139" pos:column="18"/></name> <operator pos:line="139" pos:column="19">=<pos:position pos:line="139" pos:column="20"/></operator> <name><name pos:line="139" pos:column="21">dc<pos:position pos:line="139" pos:column="23"/></name><operator pos:line="139" pos:column="23">-&gt;<pos:position pos:line="139" pos:column="28"/></operator><name pos:line="139" pos:column="25">inflate_limit<pos:position pos:line="139" pos:column="38"/></name></name></expr>;<pos:position pos:line="139" pos:column="39"/></expr_stmt> 
    <if pos:line="140" pos:column="5">if <condition pos:line="140" pos:column="8">(<expr><name pos:line="140" pos:column="9">inflate_limit<pos:position pos:line="140" pos:column="22"/></name> <operator pos:line="140" pos:column="23">==<pos:position pos:line="140" pos:column="25"/></operator> <literal type="number" pos:line="140" pos:column="26">0<pos:position pos:line="140" pos:column="27"/></literal></expr>)<pos:position pos:line="140" pos:column="28"/></condition><then pos:line="140" pos:column="28"> <block pos:line="140" pos:column="29">{ 
        <comment type="block" pos:line="141" pos:column="9">/* The core is checking the deflated body, we'll check the inflated */</comment>
        <expr_stmt><expr><name pos:line="142" pos:column="9">inflate_limit<pos:position pos:line="142" pos:column="22"/></name> <operator pos:line="142" pos:column="23">=<pos:position pos:line="142" pos:column="24"/></operator> <call><name pos:line="142" pos:column="25">ap_get_limit_req_body<pos:position pos:line="142" pos:column="46"/></name><argument_list pos:line="142" pos:column="46">(<argument><expr><name><name pos:line="142" pos:column="47">f<pos:position pos:line="142" pos:column="48"/></name><operator pos:line="142" pos:column="48">-&gt;<pos:position pos:line="142" pos:column="53"/></operator><name pos:line="142" pos:column="50">r<pos:position pos:line="142" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="143" pos:column="6"/></block></then></if>

    <if pos:line="145" pos:column="5">if <condition pos:line="145" pos:column="8">(<expr><call><name pos:line="145" pos:column="9">APR_BRIGADE_EMPTY<pos:position pos:line="145" pos:column="26"/></name><argument_list pos:line="145" pos:column="26">(<argument><expr><name><name pos:line="145" pos:column="27">ctx<pos:position pos:line="145" pos:column="30"/></name><operator pos:line="145" pos:column="30">-&gt;<pos:position pos:line="145" pos:column="35"/></operator><name pos:line="145" pos:column="32">proc_bb<pos:position pos:line="145" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="145" pos:column="41"/></condition><then pos:line="145" pos:column="41"> <block pos:line="145" pos:column="42">{
        <expr_stmt><expr><name pos:line="146" pos:column="9">rv<pos:position pos:line="146" pos:column="11"/></name> <operator pos:line="146" pos:column="12">=<pos:position pos:line="146" pos:column="13"/></operator> <call><name pos:line="146" pos:column="14">ap_get_brigade<pos:position pos:line="146" pos:column="28"/></name><argument_list pos:line="146" pos:column="28">(<argument><expr><name><name pos:line="146" pos:column="29">f<pos:position pos:line="146" pos:column="30"/></name><operator pos:line="146" pos:column="30">-&gt;<pos:position pos:line="146" pos:column="35"/></operator><name pos:line="146" pos:column="32">next<pos:position pos:line="146" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="146" pos:column="38">ctx<pos:position pos:line="146" pos:column="41"/></name><operator pos:line="146" pos:column="41">-&gt;<pos:position pos:line="146" pos:column="46"/></operator><name pos:line="146" pos:column="43">bb<pos:position pos:line="146" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="47">mode<pos:position pos:line="146" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="53">block<pos:position pos:line="146" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="60">readbytes<pos:position pos:line="146" pos:column="69"/></name></expr></argument>)<pos:position pos:line="146" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="71"/></expr_stmt>

        <comment type="block" pos:line="148" pos:column="9">/* Don't terminate on EAGAIN (or success with an empty brigade in
         * non-blocking mode), just return focus.
         */</comment>
        <if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><name pos:line="151" pos:column="13">block<pos:position pos:line="151" pos:column="18"/></name> <operator pos:line="151" pos:column="19">==<pos:position pos:line="151" pos:column="21"/></operator> <name pos:line="151" pos:column="22">APR_NONBLOCK_READ<pos:position pos:line="151" pos:column="39"/></name>
                <operator pos:line="152" pos:column="17">&amp;&amp;<pos:position pos:line="152" pos:column="27"/></operator> <operator pos:line="152" pos:column="20">(<pos:position pos:line="152" pos:column="21"/></operator><call><name pos:line="152" pos:column="21">APR_STATUS_IS_EAGAIN<pos:position pos:line="152" pos:column="41"/></name><argument_list pos:line="152" pos:column="41">(<argument><expr><name pos:line="152" pos:column="42">rv<pos:position pos:line="152" pos:column="44"/></name></expr></argument>)<pos:position pos:line="152" pos:column="45"/></argument_list></call>
                    <operator pos:line="153" pos:column="21">||<pos:position pos:line="153" pos:column="23"/></operator> <operator pos:line="153" pos:column="24">(<pos:position pos:line="153" pos:column="25"/></operator><name pos:line="153" pos:column="25">rv<pos:position pos:line="153" pos:column="27"/></name> <operator pos:line="153" pos:column="28">==<pos:position pos:line="153" pos:column="30"/></operator> <name pos:line="153" pos:column="31">APR_SUCCESS<pos:position pos:line="153" pos:column="42"/></name> <operator pos:line="153" pos:column="43">&amp;&amp;<pos:position pos:line="153" pos:column="53"/></operator> <call><name pos:line="153" pos:column="46">APR_BRIGADE_EMPTY<pos:position pos:line="153" pos:column="63"/></name><argument_list pos:line="153" pos:column="63">(<argument><expr><name><name pos:line="153" pos:column="64">ctx<pos:position pos:line="153" pos:column="67"/></name><operator pos:line="153" pos:column="67">-&gt;<pos:position pos:line="153" pos:column="72"/></operator><name pos:line="153" pos:column="69">bb<pos:position pos:line="153" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="153" pos:column="72"/></argument_list></call><operator pos:line="153" pos:column="72">)<pos:position pos:line="153" pos:column="73"/></operator><operator pos:line="153" pos:column="73">)<pos:position pos:line="153" pos:column="74"/></operator></expr>)<pos:position pos:line="153" pos:column="75"/></condition><then pos:line="153" pos:column="75"> <block pos:line="153" pos:column="76">{
            <return pos:line="154" pos:column="13">return <expr><name pos:line="154" pos:column="20">rv<pos:position pos:line="154" pos:column="22"/></name></expr>;<pos:position pos:line="154" pos:column="23"/></return>
        }<pos:position pos:line="155" pos:column="10"/></block></then></if>
        <if pos:line="156" pos:column="9">if <condition pos:line="156" pos:column="12">(<expr><name pos:line="156" pos:column="13">rv<pos:position pos:line="156" pos:column="15"/></name> <operator pos:line="156" pos:column="16">!=<pos:position pos:line="156" pos:column="18"/></operator> <name pos:line="156" pos:column="19">APR_SUCCESS<pos:position pos:line="156" pos:column="30"/></name></expr>)<pos:position pos:line="156" pos:column="31"/></condition><then pos:line="156" pos:column="31"> <block pos:line="156" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="157" pos:column="13">inflateEnd<pos:position pos:line="157" pos:column="23"/></name><argument_list pos:line="157" pos:column="23">(<argument><expr><operator pos:line="157" pos:column="24">&amp;<pos:position pos:line="157" pos:column="29"/></operator><name><name pos:line="157" pos:column="25">ctx<pos:position pos:line="157" pos:column="28"/></name><operator pos:line="157" pos:column="28">-&gt;<pos:position pos:line="157" pos:column="33"/></operator><name pos:line="157" pos:column="30">stream<pos:position pos:line="157" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="157" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="38"/></expr_stmt>
            <return pos:line="158" pos:column="13">return <expr><name pos:line="158" pos:column="20">rv<pos:position pos:line="158" pos:column="22"/></name></expr>;<pos:position pos:line="158" pos:column="23"/></return>
        }<pos:position pos:line="159" pos:column="10"/></block></then></if>

        <for pos:line="161" pos:column="9">for <control pos:line="161" pos:column="13">(<init><expr><name pos:line="161" pos:column="14">bkt<pos:position pos:line="161" pos:column="17"/></name> <operator pos:line="161" pos:column="18">=<pos:position pos:line="161" pos:column="19"/></operator> <call><name pos:line="161" pos:column="20">APR_BRIGADE_FIRST<pos:position pos:line="161" pos:column="37"/></name><argument_list pos:line="161" pos:column="37">(<argument><expr><name><name pos:line="161" pos:column="38">ctx<pos:position pos:line="161" pos:column="41"/></name><operator pos:line="161" pos:column="41">-&gt;<pos:position pos:line="161" pos:column="46"/></operator><name pos:line="161" pos:column="43">bb<pos:position pos:line="161" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="161" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="47"/></init>
             <condition><expr><name pos:line="162" pos:column="14">bkt<pos:position pos:line="162" pos:column="17"/></name> <operator pos:line="162" pos:column="18">!=<pos:position pos:line="162" pos:column="20"/></operator> <call><name pos:line="162" pos:column="21">APR_BRIGADE_SENTINEL<pos:position pos:line="162" pos:column="41"/></name><argument_list pos:line="162" pos:column="41">(<argument><expr><name><name pos:line="162" pos:column="42">ctx<pos:position pos:line="162" pos:column="45"/></name><operator pos:line="162" pos:column="45">-&gt;<pos:position pos:line="162" pos:column="50"/></operator><name pos:line="162" pos:column="47">bb<pos:position pos:line="162" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="162" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="51"/></condition>
             <incr><expr><name pos:line="163" pos:column="14">bkt<pos:position pos:line="163" pos:column="17"/></name> <operator pos:line="163" pos:column="18">=<pos:position pos:line="163" pos:column="19"/></operator> <call><name pos:line="163" pos:column="20">APR_BUCKET_NEXT<pos:position pos:line="163" pos:column="35"/></name><argument_list pos:line="163" pos:column="35">(<argument><expr><name pos:line="163" pos:column="36">bkt<pos:position pos:line="163" pos:column="39"/></name></expr></argument>)<pos:position pos:line="163" pos:column="40"/></argument_list></call></expr></incr>)<pos:position pos:line="163" pos:column="41"/></control>
        <block pos:line="164" pos:column="9">{
            <decl_stmt><decl><type><specifier pos:line="165" pos:column="13">const<pos:position pos:line="165" pos:column="18"/></specifier> <name pos:line="165" pos:column="19">char<pos:position pos:line="165" pos:column="23"/></name> <modifier pos:line="165" pos:column="24">*<pos:position pos:line="165" pos:column="25"/></modifier></type><name pos:line="165" pos:column="25">data<pos:position pos:line="165" pos:column="29"/></name></decl>;<pos:position pos:line="165" pos:column="30"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="166" pos:column="13">apr_size_t<pos:position pos:line="166" pos:column="23"/></name></type> <name pos:line="166" pos:column="24">len<pos:position pos:line="166" pos:column="27"/></name></decl>;<pos:position pos:line="166" pos:column="28"/></decl_stmt>

            <comment type="block" pos:line="168" pos:column="13">/* If we actually see the EOS, that means we screwed up! */</comment>
            <if pos:line="169" pos:column="13">if <condition pos:line="169" pos:column="16">(<expr><call><name pos:line="169" pos:column="17">APR_BUCKET_IS_EOS<pos:position pos:line="169" pos:column="34"/></name><argument_list pos:line="169" pos:column="34">(<argument><expr><name pos:line="169" pos:column="35">bkt<pos:position pos:line="169" pos:column="38"/></name></expr></argument>)<pos:position pos:line="169" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="169" pos:column="40"/></condition><then pos:line="169" pos:column="40"> <block pos:line="169" pos:column="41">{
                <if pos:line="170" pos:column="17">if <condition pos:line="170" pos:column="20">(<expr><operator pos:line="170" pos:column="21">!<pos:position pos:line="170" pos:column="22"/></operator><name><name pos:line="170" pos:column="22">ctx<pos:position pos:line="170" pos:column="25"/></name><operator pos:line="170" pos:column="25">-&gt;<pos:position pos:line="170" pos:column="30"/></operator><name pos:line="170" pos:column="27">done<pos:position pos:line="170" pos:column="31"/></name></name></expr>)<pos:position pos:line="170" pos:column="32"/></condition><then pos:line="170" pos:column="32"> <block pos:line="170" pos:column="33">{
                    <expr_stmt><expr><call><name pos:line="171" pos:column="21">inflateEnd<pos:position pos:line="171" pos:column="31"/></name><argument_list pos:line="171" pos:column="31">(<argument><expr><operator pos:line="171" pos:column="32">&amp;<pos:position pos:line="171" pos:column="37"/></operator><name><name pos:line="171" pos:column="33">ctx<pos:position pos:line="171" pos:column="36"/></name><operator pos:line="171" pos:column="36">-&gt;<pos:position pos:line="171" pos:column="41"/></operator><name pos:line="171" pos:column="38">stream<pos:position pos:line="171" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="171" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="46"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="172" pos:column="21">ap_log_rerror<pos:position pos:line="172" pos:column="34"/></name><argument_list pos:line="172" pos:column="34">(<argument><expr><name pos:line="172" pos:column="35">APLOG_MARK<pos:position pos:line="172" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="47">APLOG_ERR<pos:position pos:line="172" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="172" pos:column="58">0<pos:position pos:line="172" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="172" pos:column="61">r<pos:position pos:line="172" pos:column="62"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="173" pos:column="35">"Encountered premature end-of-stream while inflating"<pos:position pos:line="173" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="173" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="90"/></expr_stmt>
                    <return pos:line="174" pos:column="21">return <expr><name pos:line="174" pos:column="28">APR_EGENERAL<pos:position pos:line="174" pos:column="40"/></name></expr>;<pos:position pos:line="174" pos:column="41"/></return>
                }<pos:position pos:line="175" pos:column="18"/></block></then></if>

                <comment type="block" pos:line="177" pos:column="17">/* Move everything to the returning brigade. */</comment>
                <expr_stmt><expr><call><name pos:line="178" pos:column="17">APR_BUCKET_REMOVE<pos:position pos:line="178" pos:column="34"/></name><argument_list pos:line="178" pos:column="34">(<argument><expr><name pos:line="178" pos:column="35">bkt<pos:position pos:line="178" pos:column="38"/></name></expr></argument>)<pos:position pos:line="178" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="179" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="179" pos:column="40"/></name><argument_list pos:line="179" pos:column="40">(<argument><expr><name><name pos:line="179" pos:column="41">ctx<pos:position pos:line="179" pos:column="44"/></name><operator pos:line="179" pos:column="44">-&gt;<pos:position pos:line="179" pos:column="49"/></operator><name pos:line="179" pos:column="46">proc_bb<pos:position pos:line="179" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="55">bkt<pos:position pos:line="179" pos:column="58"/></name></expr></argument>)<pos:position pos:line="179" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="60"/></expr_stmt>
                <break pos:line="180" pos:column="17">break;<pos:position pos:line="180" pos:column="23"/></break>
            }<pos:position pos:line="181" pos:column="14"/></block></then></if>

            <if pos:line="183" pos:column="13">if <condition pos:line="183" pos:column="16">(<expr><call><name pos:line="183" pos:column="17">APR_BUCKET_IS_FLUSH<pos:position pos:line="183" pos:column="36"/></name><argument_list pos:line="183" pos:column="36">(<argument><expr><name pos:line="183" pos:column="37">bkt<pos:position pos:line="183" pos:column="40"/></name></expr></argument>)<pos:position pos:line="183" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="183" pos:column="42"/></condition><then pos:line="183" pos:column="42"> <block pos:line="183" pos:column="43">{
                <decl_stmt><decl><type><name pos:line="184" pos:column="17">apr_bucket<pos:position pos:line="184" pos:column="27"/></name> <modifier pos:line="184" pos:column="28">*<pos:position pos:line="184" pos:column="29"/></modifier></type><name pos:line="184" pos:column="29">tmp_b<pos:position pos:line="184" pos:column="34"/></name></decl>;<pos:position pos:line="184" pos:column="35"/></decl_stmt>
                <expr_stmt><expr><name pos:line="185" pos:column="17">zRC<pos:position pos:line="185" pos:column="20"/></name> <operator pos:line="185" pos:column="21">=<pos:position pos:line="185" pos:column="22"/></operator> <call><name pos:line="185" pos:column="23">inflate<pos:position pos:line="185" pos:column="30"/></name><argument_list pos:line="185" pos:column="30">(<argument><expr><operator pos:line="185" pos:column="31">&amp;<pos:position pos:line="185" pos:column="36"/></operator><operator pos:line="185" pos:column="32">(<pos:position pos:line="185" pos:column="33"/></operator><name><name pos:line="185" pos:column="33">ctx<pos:position pos:line="185" pos:column="36"/></name><operator pos:line="185" pos:column="36">-&gt;<pos:position pos:line="185" pos:column="41"/></operator><name pos:line="185" pos:column="38">stream<pos:position pos:line="185" pos:column="44"/></name></name><operator pos:line="185" pos:column="44">)<pos:position pos:line="185" pos:column="45"/></operator></expr></argument>, <argument><expr><name pos:line="185" pos:column="47">Z_SYNC_FLUSH<pos:position pos:line="185" pos:column="59"/></name></expr></argument>)<pos:position pos:line="185" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="61"/></expr_stmt>
                <if pos:line="186" pos:column="17">if <condition pos:line="186" pos:column="20">(<expr><name pos:line="186" pos:column="21">zRC<pos:position pos:line="186" pos:column="24"/></name> <operator pos:line="186" pos:column="25">!=<pos:position pos:line="186" pos:column="27"/></operator> <name pos:line="186" pos:column="28">Z_OK<pos:position pos:line="186" pos:column="32"/></name></expr>)<pos:position pos:line="186" pos:column="33"/></condition><then pos:line="186" pos:column="33"> <block pos:line="186" pos:column="34">{
                    <expr_stmt><expr><call><name pos:line="187" pos:column="21">ap_log_rerror<pos:position pos:line="187" pos:column="34"/></name><argument_list pos:line="187" pos:column="34">(<argument><expr><name pos:line="187" pos:column="35">APLOG_MARK<pos:position pos:line="187" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="47">APLOG_WARNING<pos:position pos:line="187" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="187" pos:column="62">0<pos:position pos:line="187" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="187" pos:column="65">r<pos:position pos:line="187" pos:column="66"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="188" pos:column="35">"Zlib error %d inflating data (%s)"<pos:position pos:line="188" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="188" pos:column="72">zRC<pos:position pos:line="188" pos:column="75"/></name></expr></argument>,
                                  <argument><expr><name><name pos:line="189" pos:column="35">ctx<pos:position pos:line="189" pos:column="38"/></name><operator pos:line="189" pos:column="38">-&gt;<pos:position pos:line="189" pos:column="43"/></operator><name pos:line="189" pos:column="40">stream<pos:position pos:line="189" pos:column="46"/></name><operator pos:line="189" pos:column="46">.<pos:position pos:line="189" pos:column="47"/></operator><name pos:line="189" pos:column="47">msg<pos:position pos:line="189" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="189" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="52"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="190" pos:column="21">inflateEnd<pos:position pos:line="190" pos:column="31"/></name><argument_list pos:line="190" pos:column="31">(<argument><expr><operator pos:line="190" pos:column="32">&amp;<pos:position pos:line="190" pos:column="37"/></operator><name><name pos:line="190" pos:column="33">ctx<pos:position pos:line="190" pos:column="36"/></name><operator pos:line="190" pos:column="36">-&gt;<pos:position pos:line="190" pos:column="41"/></operator><name pos:line="190" pos:column="38">stream<pos:position pos:line="190" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="190" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="46"/></expr_stmt>
                    <return pos:line="191" pos:column="21">return <expr><name pos:line="191" pos:column="28">APR_EGENERAL<pos:position pos:line="191" pos:column="40"/></name></expr>;<pos:position pos:line="191" pos:column="41"/></return>
                }<pos:position pos:line="192" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name><name pos:line="194" pos:column="17">ctx<pos:position pos:line="194" pos:column="20"/></name><operator pos:line="194" pos:column="20">-&gt;<pos:position pos:line="194" pos:column="25"/></operator><name pos:line="194" pos:column="22">stream<pos:position pos:line="194" pos:column="28"/></name><operator pos:line="194" pos:column="28">.<pos:position pos:line="194" pos:column="29"/></operator><name pos:line="194" pos:column="29">next_out<pos:position pos:line="194" pos:column="37"/></name></name> <operator pos:line="194" pos:column="38">=<pos:position pos:line="194" pos:column="39"/></operator> <name><name pos:line="194" pos:column="40">ctx<pos:position pos:line="194" pos:column="43"/></name><operator pos:line="194" pos:column="43">-&gt;<pos:position pos:line="194" pos:column="48"/></operator><name pos:line="194" pos:column="45">buffer<pos:position pos:line="194" pos:column="51"/></name></name></expr>;<pos:position pos:line="194" pos:column="52"/></expr_stmt>
                <expr_stmt><expr><name pos:line="195" pos:column="17">len<pos:position pos:line="195" pos:column="20"/></name> <operator pos:line="195" pos:column="21">=<pos:position pos:line="195" pos:column="22"/></operator> <name><name pos:line="195" pos:column="23">c<pos:position pos:line="195" pos:column="24"/></name><operator pos:line="195" pos:column="24">-&gt;<pos:position pos:line="195" pos:column="29"/></operator><name pos:line="195" pos:column="26">bufferSize<pos:position pos:line="195" pos:column="36"/></name></name> <operator pos:line="195" pos:column="37">-<pos:position pos:line="195" pos:column="38"/></operator> <name><name pos:line="195" pos:column="39">ctx<pos:position pos:line="195" pos:column="42"/></name><operator pos:line="195" pos:column="42">-&gt;<pos:position pos:line="195" pos:column="47"/></operator><name pos:line="195" pos:column="44">stream<pos:position pos:line="195" pos:column="50"/></name><operator pos:line="195" pos:column="50">.<pos:position pos:line="195" pos:column="51"/></operator><name pos:line="195" pos:column="51">avail_out<pos:position pos:line="195" pos:column="60"/></name></name></expr>;<pos:position pos:line="195" pos:column="61"/></expr_stmt>
 
                <expr_stmt><expr><name><name pos:line="197" pos:column="17">ctx<pos:position pos:line="197" pos:column="20"/></name><operator pos:line="197" pos:column="20">-&gt;<pos:position pos:line="197" pos:column="25"/></operator><name pos:line="197" pos:column="22">inflate_total<pos:position pos:line="197" pos:column="35"/></name></name> <operator pos:line="197" pos:column="36">+=<pos:position pos:line="197" pos:column="38"/></operator> <name pos:line="197" pos:column="39">len<pos:position pos:line="197" pos:column="42"/></name></expr>;<pos:position pos:line="197" pos:column="43"/></expr_stmt>
                <if pos:line="198" pos:column="17">if <condition pos:line="198" pos:column="20">(<expr><name pos:line="198" pos:column="21">inflate_limit<pos:position pos:line="198" pos:column="34"/></name> <operator pos:line="198" pos:column="35">&amp;&amp;<pos:position pos:line="198" pos:column="45"/></operator> <name><name pos:line="198" pos:column="38">ctx<pos:position pos:line="198" pos:column="41"/></name><operator pos:line="198" pos:column="41">-&gt;<pos:position pos:line="198" pos:column="46"/></operator><name pos:line="198" pos:column="43">inflate_total<pos:position pos:line="198" pos:column="56"/></name></name> <operator pos:line="198" pos:column="57">&gt;<pos:position pos:line="198" pos:column="61"/></operator> <name pos:line="198" pos:column="59">inflate_limit<pos:position pos:line="198" pos:column="72"/></name></expr>)<pos:position pos:line="198" pos:column="73"/></condition><then pos:line="198" pos:column="73"> <block pos:line="198" pos:column="74">{ 
                    <expr_stmt><expr><call><name pos:line="199" pos:column="21">inflateEnd<pos:position pos:line="199" pos:column="31"/></name><argument_list pos:line="199" pos:column="31">(<argument><expr><operator pos:line="199" pos:column="32">&amp;<pos:position pos:line="199" pos:column="37"/></operator><name><name pos:line="199" pos:column="33">ctx<pos:position pos:line="199" pos:column="36"/></name><operator pos:line="199" pos:column="36">-&gt;<pos:position pos:line="199" pos:column="41"/></operator><name pos:line="199" pos:column="38">stream<pos:position pos:line="199" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="199" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="46"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="200" pos:column="21">ap_log_rerror<pos:position pos:line="200" pos:column="34"/></name><argument_list pos:line="200" pos:column="34">(<argument><expr><name pos:line="200" pos:column="35">APLOG_MARK<pos:position pos:line="200" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="200" pos:column="47">APLOG_WARNING<pos:position pos:line="200" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="200" pos:column="62">0<pos:position pos:line="200" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="200" pos:column="65">r<pos:position pos:line="200" pos:column="66"/></name></expr></argument>, 
                            <argument><expr><literal type="string" pos:line="201" pos:column="29">"Inflated content length of %"<pos:position pos:line="201" pos:column="59"/></literal> <name pos:line="201" pos:column="60">APR_OFF_T_FMT<pos:position pos:line="201" pos:column="73"/></name>
                            <literal type="string" pos:line="202" pos:column="29">" is larger than the configured limit"<pos:position pos:line="202" pos:column="67"/></literal>
                            <literal type="string" pos:line="203" pos:column="29">" of %"<pos:position pos:line="203" pos:column="36"/></literal> <name pos:line="203" pos:column="37">APR_OFF_T_FMT<pos:position pos:line="203" pos:column="50"/></name></expr></argument>, 
                            <argument><expr><name><name pos:line="204" pos:column="29">ctx<pos:position pos:line="204" pos:column="32"/></name><operator pos:line="204" pos:column="32">-&gt;<pos:position pos:line="204" pos:column="37"/></operator><name pos:line="204" pos:column="34">inflate_total<pos:position pos:line="204" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="49">inflate_limit<pos:position pos:line="204" pos:column="62"/></name></expr></argument>)<pos:position pos:line="204" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="64"/></expr_stmt>
                    <return pos:line="205" pos:column="21">return <expr><name pos:line="205" pos:column="28">APR_ENOSPC<pos:position pos:line="205" pos:column="38"/></name></expr>;<pos:position pos:line="205" pos:column="39"/></return>
                }<pos:position pos:line="206" pos:column="18"/></block></then></if>

                <expr_stmt><expr><name><name pos:line="208" pos:column="17">ctx<pos:position pos:line="208" pos:column="20"/></name><operator pos:line="208" pos:column="20">-&gt;<pos:position pos:line="208" pos:column="25"/></operator><name pos:line="208" pos:column="22">crc<pos:position pos:line="208" pos:column="25"/></name></name> <operator pos:line="208" pos:column="26">=<pos:position pos:line="208" pos:column="27"/></operator> <call><name pos:line="208" pos:column="28">crc32<pos:position pos:line="208" pos:column="33"/></name><argument_list pos:line="208" pos:column="33">(<argument><expr><name><name pos:line="208" pos:column="34">ctx<pos:position pos:line="208" pos:column="37"/></name><operator pos:line="208" pos:column="37">-&gt;<pos:position pos:line="208" pos:column="42"/></operator><name pos:line="208" pos:column="39">crc<pos:position pos:line="208" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="208" pos:column="44">(<pos:position pos:line="208" pos:column="45"/></operator><specifier pos:line="208" pos:column="45">const<pos:position pos:line="208" pos:column="50"/></specifier> <name pos:line="208" pos:column="51">Bytef<pos:position pos:line="208" pos:column="56"/></name> <operator pos:line="208" pos:column="57">*<pos:position pos:line="208" pos:column="58"/></operator><operator pos:line="208" pos:column="58">)<pos:position pos:line="208" pos:column="59"/></operator><name><name pos:line="208" pos:column="59">ctx<pos:position pos:line="208" pos:column="62"/></name><operator pos:line="208" pos:column="62">-&gt;<pos:position pos:line="208" pos:column="67"/></operator><name pos:line="208" pos:column="64">buffer<pos:position pos:line="208" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="72">len<pos:position pos:line="208" pos:column="75"/></name></expr></argument>)<pos:position pos:line="208" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="77"/></expr_stmt>
                <expr_stmt><expr><name pos:line="209" pos:column="17">tmp_b<pos:position pos:line="209" pos:column="22"/></name> <operator pos:line="209" pos:column="23">=<pos:position pos:line="209" pos:column="24"/></operator> <call><name pos:line="209" pos:column="25">apr_bucket_heap_create<pos:position pos:line="209" pos:column="47"/></name><argument_list pos:line="209" pos:column="47">(<argument><expr><operator pos:line="209" pos:column="48">(<pos:position pos:line="209" pos:column="49"/></operator><name pos:line="209" pos:column="49">char<pos:position pos:line="209" pos:column="53"/></name> <operator pos:line="209" pos:column="54">*<pos:position pos:line="209" pos:column="55"/></operator><operator pos:line="209" pos:column="55">)<pos:position pos:line="209" pos:column="56"/></operator><name><name pos:line="209" pos:column="56">ctx<pos:position pos:line="209" pos:column="59"/></name><operator pos:line="209" pos:column="59">-&gt;<pos:position pos:line="209" pos:column="64"/></operator><name pos:line="209" pos:column="61">buffer<pos:position pos:line="209" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="209" pos:column="69">len<pos:position pos:line="209" pos:column="72"/></name></expr></argument>,
                                                <argument><expr><name pos:line="210" pos:column="49">NULL<pos:position pos:line="210" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="210" pos:column="55">f<pos:position pos:line="210" pos:column="56"/></name><operator pos:line="210" pos:column="56">-&gt;<pos:position pos:line="210" pos:column="61"/></operator><name pos:line="210" pos:column="58">c<pos:position pos:line="210" pos:column="59"/></name><operator pos:line="210" pos:column="59">-&gt;<pos:position pos:line="210" pos:column="64"/></operator><name pos:line="210" pos:column="61">bucket_alloc<pos:position pos:line="210" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="210" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="75"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="211" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="211" pos:column="40"/></name><argument_list pos:line="211" pos:column="40">(<argument><expr><name><name pos:line="211" pos:column="41">ctx<pos:position pos:line="211" pos:column="44"/></name><operator pos:line="211" pos:column="44">-&gt;<pos:position pos:line="211" pos:column="49"/></operator><name pos:line="211" pos:column="46">proc_bb<pos:position pos:line="211" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="211" pos:column="55">tmp_b<pos:position pos:line="211" pos:column="60"/></name></expr></argument>)<pos:position pos:line="211" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="212" pos:column="17">ctx<pos:position pos:line="212" pos:column="20"/></name><operator pos:line="212" pos:column="20">-&gt;<pos:position pos:line="212" pos:column="25"/></operator><name pos:line="212" pos:column="22">stream<pos:position pos:line="212" pos:column="28"/></name><operator pos:line="212" pos:column="28">.<pos:position pos:line="212" pos:column="29"/></operator><name pos:line="212" pos:column="29">avail_out<pos:position pos:line="212" pos:column="38"/></name></name> <operator pos:line="212" pos:column="39">=<pos:position pos:line="212" pos:column="40"/></operator> <name><name pos:line="212" pos:column="41">c<pos:position pos:line="212" pos:column="42"/></name><operator pos:line="212" pos:column="42">-&gt;<pos:position pos:line="212" pos:column="47"/></operator><name pos:line="212" pos:column="44">bufferSize<pos:position pos:line="212" pos:column="54"/></name></name></expr>;<pos:position pos:line="212" pos:column="55"/></expr_stmt>

                <comment type="block" pos:line="214" pos:column="17">/* Flush everything so far in the returning brigade, but continue
                 * reading should EOS/more follow (don't lose them).
                 */</comment>
                <expr_stmt><expr><name pos:line="217" pos:column="17">tmp_b<pos:position pos:line="217" pos:column="22"/></name> <operator pos:line="217" pos:column="23">=<pos:position pos:line="217" pos:column="24"/></operator> <call><name pos:line="217" pos:column="25">APR_BUCKET_PREV<pos:position pos:line="217" pos:column="40"/></name><argument_list pos:line="217" pos:column="40">(<argument><expr><name pos:line="217" pos:column="41">bkt<pos:position pos:line="217" pos:column="44"/></name></expr></argument>)<pos:position pos:line="217" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="218" pos:column="17">APR_BUCKET_REMOVE<pos:position pos:line="218" pos:column="34"/></name><argument_list pos:line="218" pos:column="34">(<argument><expr><name pos:line="218" pos:column="35">bkt<pos:position pos:line="218" pos:column="38"/></name></expr></argument>)<pos:position pos:line="218" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="219" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="219" pos:column="40"/></name><argument_list pos:line="219" pos:column="40">(<argument><expr><name><name pos:line="219" pos:column="41">ctx<pos:position pos:line="219" pos:column="44"/></name><operator pos:line="219" pos:column="44">-&gt;<pos:position pos:line="219" pos:column="49"/></operator><name pos:line="219" pos:column="46">proc_bb<pos:position pos:line="219" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="55">bkt<pos:position pos:line="219" pos:column="58"/></name></expr></argument>)<pos:position pos:line="219" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="60"/></expr_stmt>
                <expr_stmt><expr><name pos:line="220" pos:column="17">bkt<pos:position pos:line="220" pos:column="20"/></name> <operator pos:line="220" pos:column="21">=<pos:position pos:line="220" pos:column="22"/></operator> <name pos:line="220" pos:column="23">tmp_b<pos:position pos:line="220" pos:column="28"/></name></expr>;<pos:position pos:line="220" pos:column="29"/></expr_stmt>
                <continue pos:line="221" pos:column="17">continue;<pos:position pos:line="221" pos:column="26"/></continue>
            }<pos:position pos:line="222" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="224" pos:column="13">/* sanity check - data after completed compressed body and before eos? */</comment>
            <if pos:line="225" pos:column="13">if <condition pos:line="225" pos:column="16">(<expr><name><name pos:line="225" pos:column="17">ctx<pos:position pos:line="225" pos:column="20"/></name><operator pos:line="225" pos:column="20">-&gt;<pos:position pos:line="225" pos:column="25"/></operator><name pos:line="225" pos:column="22">done<pos:position pos:line="225" pos:column="26"/></name></name></expr>)<pos:position pos:line="225" pos:column="27"/></condition><then pos:line="225" pos:column="27"> <block pos:line="225" pos:column="28">{
                <expr_stmt><expr><call><name pos:line="226" pos:column="17">ap_log_rerror<pos:position pos:line="226" pos:column="30"/></name><argument_list pos:line="226" pos:column="30">(<argument><expr><name pos:line="226" pos:column="31">APLOG_MARK<pos:position pos:line="226" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="43">APLOG_ERR<pos:position pos:line="226" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="226" pos:column="54">0<pos:position pos:line="226" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="226" pos:column="57">r<pos:position pos:line="226" pos:column="58"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="227" pos:column="31">"Encountered extra data after compressed data"<pos:position pos:line="227" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="227" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="79"/></expr_stmt>
                <return pos:line="228" pos:column="17">return <expr><name pos:line="228" pos:column="24">APR_EGENERAL<pos:position pos:line="228" pos:column="36"/></name></expr>;<pos:position pos:line="228" pos:column="37"/></return>
            }<pos:position pos:line="229" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="231" pos:column="13">/* read */</comment>
            <expr_stmt><expr><call><name pos:line="232" pos:column="13">apr_bucket_read<pos:position pos:line="232" pos:column="28"/></name><argument_list pos:line="232" pos:column="28">(<argument><expr><name pos:line="232" pos:column="29">bkt<pos:position pos:line="232" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="232" pos:column="34">&amp;<pos:position pos:line="232" pos:column="39"/></operator><name pos:line="232" pos:column="35">data<pos:position pos:line="232" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="232" pos:column="41">&amp;<pos:position pos:line="232" pos:column="46"/></operator><name pos:line="232" pos:column="42">len<pos:position pos:line="232" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="232" pos:column="47">APR_BLOCK_READ<pos:position pos:line="232" pos:column="61"/></name></expr></argument>)<pos:position pos:line="232" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="63"/></expr_stmt>
            <if pos:line="233" pos:column="13">if <condition pos:line="233" pos:column="16">(<expr><operator pos:line="233" pos:column="17">!<pos:position pos:line="233" pos:column="18"/></operator><name pos:line="233" pos:column="18">len<pos:position pos:line="233" pos:column="21"/></name></expr>)<pos:position pos:line="233" pos:column="22"/></condition><then pos:line="233" pos:column="22"> <block pos:line="233" pos:column="23">{
                <continue pos:line="234" pos:column="17">continue;<pos:position pos:line="234" pos:column="26"/></continue>
            }<pos:position pos:line="235" pos:column="14"/></block></then></if>
            <if pos:line="236" pos:column="13">if <condition pos:line="236" pos:column="16">(<expr><name pos:line="236" pos:column="17">len<pos:position pos:line="236" pos:column="20"/></name> <operator pos:line="236" pos:column="21">&gt;<pos:position pos:line="236" pos:column="25"/></operator> <name pos:line="236" pos:column="23">APR_INT32_MAX<pos:position pos:line="236" pos:column="36"/></name></expr>)<pos:position pos:line="236" pos:column="37"/></condition><then pos:line="236" pos:column="37"> <block pos:line="236" pos:column="38">{
                <expr_stmt><expr><call><name pos:line="237" pos:column="17">apr_bucket_split<pos:position pos:line="237" pos:column="33"/></name><argument_list pos:line="237" pos:column="33">(<argument><expr><name pos:line="237" pos:column="34">bkt<pos:position pos:line="237" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="39">APR_INT32_MAX<pos:position pos:line="237" pos:column="52"/></name></expr></argument>)<pos:position pos:line="237" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="238" pos:column="17">apr_bucket_read<pos:position pos:line="238" pos:column="32"/></name><argument_list pos:line="238" pos:column="32">(<argument><expr><name pos:line="238" pos:column="33">bkt<pos:position pos:line="238" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="238" pos:column="38">&amp;<pos:position pos:line="238" pos:column="43"/></operator><name pos:line="238" pos:column="39">data<pos:position pos:line="238" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="238" pos:column="45">&amp;<pos:position pos:line="238" pos:column="50"/></operator><name pos:line="238" pos:column="46">len<pos:position pos:line="238" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="51">APR_BLOCK_READ<pos:position pos:line="238" pos:column="65"/></name></expr></argument>)<pos:position pos:line="238" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="67"/></expr_stmt>
            }<pos:position pos:line="239" pos:column="14"/></block></then></if>

            <if pos:line="241" pos:column="13">if <condition pos:line="241" pos:column="16">(<expr><name><name pos:line="241" pos:column="17">ctx<pos:position pos:line="241" pos:column="20"/></name><operator pos:line="241" pos:column="20">-&gt;<pos:position pos:line="241" pos:column="25"/></operator><name pos:line="241" pos:column="22">zlib_flags<pos:position pos:line="241" pos:column="32"/></name></name></expr>)<pos:position pos:line="241" pos:column="33"/></condition><then pos:line="241" pos:column="33"> <block pos:line="241" pos:column="34">{
                <expr_stmt><expr><name pos:line="242" pos:column="17">rv<pos:position pos:line="242" pos:column="19"/></name> <operator pos:line="242" pos:column="20">=<pos:position pos:line="242" pos:column="21"/></operator> <call><name pos:line="242" pos:column="22">consume_zlib_flags<pos:position pos:line="242" pos:column="40"/></name><argument_list pos:line="242" pos:column="40">(<argument><expr><name pos:line="242" pos:column="41">ctx<pos:position pos:line="242" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="242" pos:column="46">&amp;<pos:position pos:line="242" pos:column="51"/></operator><name pos:line="242" pos:column="47">data<pos:position pos:line="242" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="242" pos:column="53">&amp;<pos:position pos:line="242" pos:column="58"/></operator><name pos:line="242" pos:column="54">len<pos:position pos:line="242" pos:column="57"/></name></expr></argument>)<pos:position pos:line="242" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="59"/></expr_stmt>
                <if pos:line="243" pos:column="17">if <condition pos:line="243" pos:column="20">(<expr><name pos:line="243" pos:column="21">rv<pos:position pos:line="243" pos:column="23"/></name> <operator pos:line="243" pos:column="24">==<pos:position pos:line="243" pos:column="26"/></operator> <name pos:line="243" pos:column="27">APR_SUCCESS<pos:position pos:line="243" pos:column="38"/></name></expr>)<pos:position pos:line="243" pos:column="39"/></condition><then pos:line="243" pos:column="39"> <block pos:line="243" pos:column="40">{
                    <expr_stmt><expr><name><name pos:line="244" pos:column="21">ctx<pos:position pos:line="244" pos:column="24"/></name><operator pos:line="244" pos:column="24">-&gt;<pos:position pos:line="244" pos:column="29"/></operator><name pos:line="244" pos:column="26">zlib_flags<pos:position pos:line="244" pos:column="36"/></name></name> <operator pos:line="244" pos:column="37">=<pos:position pos:line="244" pos:column="38"/></operator> <literal type="number" pos:line="244" pos:column="39">0<pos:position pos:line="244" pos:column="40"/></literal></expr>;<pos:position pos:line="244" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="245" pos:column="18"/></block></then></if>
                <if pos:line="246" pos:column="17">if <condition pos:line="246" pos:column="20">(<expr><operator pos:line="246" pos:column="21">!<pos:position pos:line="246" pos:column="22"/></operator><name pos:line="246" pos:column="22">len<pos:position pos:line="246" pos:column="25"/></name></expr>)<pos:position pos:line="246" pos:column="26"/></condition><then pos:line="246" pos:column="26"> <block pos:line="246" pos:column="27">{
                    <continue pos:line="247" pos:column="21">continue;<pos:position pos:line="247" pos:column="30"/></continue>
                }<pos:position pos:line="248" pos:column="18"/></block></then></if>
            }<pos:position pos:line="249" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="251" pos:column="13">/* pass through zlib inflate. */</comment>
            <expr_stmt><expr><name><name pos:line="252" pos:column="13">ctx<pos:position pos:line="252" pos:column="16"/></name><operator pos:line="252" pos:column="16">-&gt;<pos:position pos:line="252" pos:column="21"/></operator><name pos:line="252" pos:column="18">stream<pos:position pos:line="252" pos:column="24"/></name><operator pos:line="252" pos:column="24">.<pos:position pos:line="252" pos:column="25"/></operator><name pos:line="252" pos:column="25">next_in<pos:position pos:line="252" pos:column="32"/></name></name> <operator pos:line="252" pos:column="33">=<pos:position pos:line="252" pos:column="34"/></operator> <operator pos:line="252" pos:column="35">(<pos:position pos:line="252" pos:column="36"/></operator><name pos:line="252" pos:column="36">unsigned<pos:position pos:line="252" pos:column="44"/></name> <name pos:line="252" pos:column="45">char<pos:position pos:line="252" pos:column="49"/></name> <operator pos:line="252" pos:column="50">*<pos:position pos:line="252" pos:column="51"/></operator><operator pos:line="252" pos:column="51">)<pos:position pos:line="252" pos:column="52"/></operator><name pos:line="252" pos:column="52">data<pos:position pos:line="252" pos:column="56"/></name></expr>;<pos:position pos:line="252" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="253" pos:column="13">ctx<pos:position pos:line="253" pos:column="16"/></name><operator pos:line="253" pos:column="16">-&gt;<pos:position pos:line="253" pos:column="21"/></operator><name pos:line="253" pos:column="18">stream<pos:position pos:line="253" pos:column="24"/></name><operator pos:line="253" pos:column="24">.<pos:position pos:line="253" pos:column="25"/></operator><name pos:line="253" pos:column="25">avail_in<pos:position pos:line="253" pos:column="33"/></name></name> <operator pos:line="253" pos:column="34">=<pos:position pos:line="253" pos:column="35"/></operator> <operator pos:line="253" pos:column="36">(<pos:position pos:line="253" pos:column="37"/></operator><name pos:line="253" pos:column="37">int<pos:position pos:line="253" pos:column="40"/></name><operator pos:line="253" pos:column="40">)<pos:position pos:line="253" pos:column="41"/></operator><name pos:line="253" pos:column="41">len<pos:position pos:line="253" pos:column="44"/></name></expr>;<pos:position pos:line="253" pos:column="45"/></expr_stmt>

            <expr_stmt><expr><name pos:line="255" pos:column="13">zRC<pos:position pos:line="255" pos:column="16"/></name> <operator pos:line="255" pos:column="17">=<pos:position pos:line="255" pos:column="18"/></operator> <name pos:line="255" pos:column="19">Z_OK<pos:position pos:line="255" pos:column="23"/></name></expr>;<pos:position pos:line="255" pos:column="24"/></expr_stmt>

            <if pos:line="257" pos:column="13">if <condition pos:line="257" pos:column="16">(<expr><operator pos:line="257" pos:column="17">!<pos:position pos:line="257" pos:column="18"/></operator><name><name pos:line="257" pos:column="18">ctx<pos:position pos:line="257" pos:column="21"/></name><operator pos:line="257" pos:column="21">-&gt;<pos:position pos:line="257" pos:column="26"/></operator><name pos:line="257" pos:column="23">validation_buffer<pos:position pos:line="257" pos:column="40"/></name></name></expr>)<pos:position pos:line="257" pos:column="41"/></condition><then pos:line="257" pos:column="41"> <block pos:line="257" pos:column="42">{
                <while pos:line="258" pos:column="17">while <condition pos:line="258" pos:column="23">(<expr><name><name pos:line="258" pos:column="24">ctx<pos:position pos:line="258" pos:column="27"/></name><operator pos:line="258" pos:column="27">-&gt;<pos:position pos:line="258" pos:column="32"/></operator><name pos:line="258" pos:column="29">stream<pos:position pos:line="258" pos:column="35"/></name><operator pos:line="258" pos:column="35">.<pos:position pos:line="258" pos:column="36"/></operator><name pos:line="258" pos:column="36">avail_in<pos:position pos:line="258" pos:column="44"/></name></name> <operator pos:line="258" pos:column="45">!=<pos:position pos:line="258" pos:column="47"/></operator> <literal type="number" pos:line="258" pos:column="48">0<pos:position pos:line="258" pos:column="49"/></literal></expr>)<pos:position pos:line="258" pos:column="50"/></condition> <block pos:line="258" pos:column="51">{
                    <if pos:line="259" pos:column="21">if <condition pos:line="259" pos:column="24">(<expr><name><name pos:line="259" pos:column="25">ctx<pos:position pos:line="259" pos:column="28"/></name><operator pos:line="259" pos:column="28">-&gt;<pos:position pos:line="259" pos:column="33"/></operator><name pos:line="259" pos:column="30">stream<pos:position pos:line="259" pos:column="36"/></name><operator pos:line="259" pos:column="36">.<pos:position pos:line="259" pos:column="37"/></operator><name pos:line="259" pos:column="37">avail_out<pos:position pos:line="259" pos:column="46"/></name></name> <operator pos:line="259" pos:column="47">==<pos:position pos:line="259" pos:column="49"/></operator> <literal type="number" pos:line="259" pos:column="50">0<pos:position pos:line="259" pos:column="51"/></literal></expr>)<pos:position pos:line="259" pos:column="52"/></condition><then pos:line="259" pos:column="52"> <block pos:line="259" pos:column="53">{
                        <decl_stmt><decl><type><name pos:line="260" pos:column="25">apr_bucket<pos:position pos:line="260" pos:column="35"/></name> <modifier pos:line="260" pos:column="36">*<pos:position pos:line="260" pos:column="37"/></modifier></type><name pos:line="260" pos:column="37">tmp_heap<pos:position pos:line="260" pos:column="45"/></name></decl>;<pos:position pos:line="260" pos:column="46"/></decl_stmt>
                        <expr_stmt><expr><name><name pos:line="261" pos:column="25">ctx<pos:position pos:line="261" pos:column="28"/></name><operator pos:line="261" pos:column="28">-&gt;<pos:position pos:line="261" pos:column="33"/></operator><name pos:line="261" pos:column="30">stream<pos:position pos:line="261" pos:column="36"/></name><operator pos:line="261" pos:column="36">.<pos:position pos:line="261" pos:column="37"/></operator><name pos:line="261" pos:column="37">next_out<pos:position pos:line="261" pos:column="45"/></name></name> <operator pos:line="261" pos:column="46">=<pos:position pos:line="261" pos:column="47"/></operator> <name><name pos:line="261" pos:column="48">ctx<pos:position pos:line="261" pos:column="51"/></name><operator pos:line="261" pos:column="51">-&gt;<pos:position pos:line="261" pos:column="56"/></operator><name pos:line="261" pos:column="53">buffer<pos:position pos:line="261" pos:column="59"/></name></name></expr>;<pos:position pos:line="261" pos:column="60"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="262" pos:column="25">len<pos:position pos:line="262" pos:column="28"/></name> <operator pos:line="262" pos:column="29">=<pos:position pos:line="262" pos:column="30"/></operator> <name><name pos:line="262" pos:column="31">c<pos:position pos:line="262" pos:column="32"/></name><operator pos:line="262" pos:column="32">-&gt;<pos:position pos:line="262" pos:column="37"/></operator><name pos:line="262" pos:column="34">bufferSize<pos:position pos:line="262" pos:column="44"/></name></name> <operator pos:line="262" pos:column="45">-<pos:position pos:line="262" pos:column="46"/></operator> <name><name pos:line="262" pos:column="47">ctx<pos:position pos:line="262" pos:column="50"/></name><operator pos:line="262" pos:column="50">-&gt;<pos:position pos:line="262" pos:column="55"/></operator><name pos:line="262" pos:column="52">stream<pos:position pos:line="262" pos:column="58"/></name><operator pos:line="262" pos:column="58">.<pos:position pos:line="262" pos:column="59"/></operator><name pos:line="262" pos:column="59">avail_out<pos:position pos:line="262" pos:column="68"/></name></name></expr>;<pos:position pos:line="262" pos:column="69"/></expr_stmt>

                        <expr_stmt><expr><name><name pos:line="264" pos:column="25">ctx<pos:position pos:line="264" pos:column="28"/></name><operator pos:line="264" pos:column="28">-&gt;<pos:position pos:line="264" pos:column="33"/></operator><name pos:line="264" pos:column="30">inflate_total<pos:position pos:line="264" pos:column="43"/></name></name> <operator pos:line="264" pos:column="44">+=<pos:position pos:line="264" pos:column="46"/></operator> <name pos:line="264" pos:column="47">len<pos:position pos:line="264" pos:column="50"/></name></expr>;<pos:position pos:line="264" pos:column="51"/></expr_stmt>
                        <if pos:line="265" pos:column="25">if <condition pos:line="265" pos:column="28">(<expr><name pos:line="265" pos:column="29">inflate_limit<pos:position pos:line="265" pos:column="42"/></name> <operator pos:line="265" pos:column="43">&amp;&amp;<pos:position pos:line="265" pos:column="53"/></operator> <name><name pos:line="265" pos:column="46">ctx<pos:position pos:line="265" pos:column="49"/></name><operator pos:line="265" pos:column="49">-&gt;<pos:position pos:line="265" pos:column="54"/></operator><name pos:line="265" pos:column="51">inflate_total<pos:position pos:line="265" pos:column="64"/></name></name> <operator pos:line="265" pos:column="65">&gt;<pos:position pos:line="265" pos:column="69"/></operator> <name pos:line="265" pos:column="67">inflate_limit<pos:position pos:line="265" pos:column="80"/></name></expr>)<pos:position pos:line="265" pos:column="81"/></condition><then pos:line="265" pos:column="81"> <block pos:line="265" pos:column="82">{ 
                            <expr_stmt><expr><call><name pos:line="266" pos:column="29">inflateEnd<pos:position pos:line="266" pos:column="39"/></name><argument_list pos:line="266" pos:column="39">(<argument><expr><operator pos:line="266" pos:column="40">&amp;<pos:position pos:line="266" pos:column="45"/></operator><name><name pos:line="266" pos:column="41">ctx<pos:position pos:line="266" pos:column="44"/></name><operator pos:line="266" pos:column="44">-&gt;<pos:position pos:line="266" pos:column="49"/></operator><name pos:line="266" pos:column="46">stream<pos:position pos:line="266" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="266" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="54"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="267" pos:column="29">ap_log_rerror<pos:position pos:line="267" pos:column="42"/></name><argument_list pos:line="267" pos:column="42">(<argument><expr><name pos:line="267" pos:column="43">APLOG_MARK<pos:position pos:line="267" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="267" pos:column="55">APLOG_WARNING<pos:position pos:line="267" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="267" pos:column="70">0<pos:position pos:line="267" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="267" pos:column="73">r<pos:position pos:line="267" pos:column="74"/></name></expr></argument>,
                                    <argument><expr><literal type="string" pos:line="268" pos:column="37">"Inflated content length of %"<pos:position pos:line="268" pos:column="67"/></literal> <name pos:line="268" pos:column="68">APR_OFF_T_FMT<pos:position pos:line="268" pos:column="81"/></name>
                                    <literal type="string" pos:line="269" pos:column="37">" is larger than the configured limit"<pos:position pos:line="269" pos:column="75"/></literal>
                                    <literal type="string" pos:line="270" pos:column="37">" of %"<pos:position pos:line="270" pos:column="44"/></literal> <name pos:line="270" pos:column="45">APR_OFF_T_FMT<pos:position pos:line="270" pos:column="58"/></name></expr></argument>, 
                                    <argument><expr><name><name pos:line="271" pos:column="37">ctx<pos:position pos:line="271" pos:column="40"/></name><operator pos:line="271" pos:column="40">-&gt;<pos:position pos:line="271" pos:column="45"/></operator><name pos:line="271" pos:column="42">inflate_total<pos:position pos:line="271" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="271" pos:column="57">inflate_limit<pos:position pos:line="271" pos:column="70"/></name></expr></argument>)<pos:position pos:line="271" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="72"/></expr_stmt>
                            <return pos:line="272" pos:column="29">return <expr><name pos:line="272" pos:column="36">APR_ENOSPC<pos:position pos:line="272" pos:column="46"/></name></expr>;<pos:position pos:line="272" pos:column="47"/></return>
                        }<pos:position pos:line="273" pos:column="26"/></block></then></if>

                        <if pos:line="275" pos:column="25">if <condition pos:line="275" pos:column="28">(<expr><operator pos:line="275" pos:column="29">!<pos:position pos:line="275" pos:column="30"/></operator><call><name pos:line="275" pos:column="30">check_ratio<pos:position pos:line="275" pos:column="41"/></name><argument_list pos:line="275" pos:column="41">(<argument><expr><name pos:line="275" pos:column="42">r<pos:position pos:line="275" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="275" pos:column="45">ctx<pos:position pos:line="275" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="275" pos:column="50">dc<pos:position pos:line="275" pos:column="52"/></name></expr></argument>)<pos:position pos:line="275" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="275" pos:column="54"/></condition><then pos:line="275" pos:column="54"> <block pos:line="275" pos:column="55">{
                            <expr_stmt><expr><call><name pos:line="276" pos:column="29">inflateEnd<pos:position pos:line="276" pos:column="39"/></name><argument_list pos:line="276" pos:column="39">(<argument><expr><operator pos:line="276" pos:column="40">&amp;<pos:position pos:line="276" pos:column="45"/></operator><name><name pos:line="276" pos:column="41">ctx<pos:position pos:line="276" pos:column="44"/></name><operator pos:line="276" pos:column="44">-&gt;<pos:position pos:line="276" pos:column="49"/></operator><name pos:line="276" pos:column="46">stream<pos:position pos:line="276" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="276" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="54"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="277" pos:column="29">ap_log_rerror<pos:position pos:line="277" pos:column="42"/></name><argument_list pos:line="277" pos:column="42">(<argument><expr><name pos:line="277" pos:column="43">APLOG_MARK<pos:position pos:line="277" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="277" pos:column="55">APLOG_WARNING<pos:position pos:line="277" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="277" pos:column="70">0<pos:position pos:line="277" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="277" pos:column="73">r<pos:position pos:line="277" pos:column="74"/></name></expr></argument>, 
                                    <argument><expr><literal type="string" pos:line="278" pos:column="37">"Inflated content ratio is larger than the "<pos:position pos:line="278" pos:column="81"/></literal>
                                    <literal type="string" pos:line="279" pos:column="37">"configured limit %i by %i time(s)"<pos:position pos:line="279" pos:column="72"/></literal></expr></argument>,
                                    <argument><expr><name><name pos:line="280" pos:column="37">dc<pos:position pos:line="280" pos:column="39"/></name><operator pos:line="280" pos:column="39">-&gt;<pos:position pos:line="280" pos:column="44"/></operator><name pos:line="280" pos:column="41">ratio_limit<pos:position pos:line="280" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="280" pos:column="54">dc<pos:position pos:line="280" pos:column="56"/></name><operator pos:line="280" pos:column="56">-&gt;<pos:position pos:line="280" pos:column="61"/></operator><name pos:line="280" pos:column="58">ratio_burst<pos:position pos:line="280" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="280" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="280" pos:column="71"/></expr_stmt>
                            <return pos:line="281" pos:column="29">return <expr><name pos:line="281" pos:column="36">APR_EINVAL<pos:position pos:line="281" pos:column="46"/></name></expr>;<pos:position pos:line="281" pos:column="47"/></return>
                        }<pos:position pos:line="282" pos:column="26"/></block></then></if>

                        <expr_stmt><expr><name><name pos:line="284" pos:column="25">ctx<pos:position pos:line="284" pos:column="28"/></name><operator pos:line="284" pos:column="28">-&gt;<pos:position pos:line="284" pos:column="33"/></operator><name pos:line="284" pos:column="30">crc<pos:position pos:line="284" pos:column="33"/></name></name> <operator pos:line="284" pos:column="34">=<pos:position pos:line="284" pos:column="35"/></operator> <call><name pos:line="284" pos:column="36">crc32<pos:position pos:line="284" pos:column="41"/></name><argument_list pos:line="284" pos:column="41">(<argument><expr><name><name pos:line="284" pos:column="42">ctx<pos:position pos:line="284" pos:column="45"/></name><operator pos:line="284" pos:column="45">-&gt;<pos:position pos:line="284" pos:column="50"/></operator><name pos:line="284" pos:column="47">crc<pos:position pos:line="284" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="284" pos:column="52">(<pos:position pos:line="284" pos:column="53"/></operator><specifier pos:line="284" pos:column="53">const<pos:position pos:line="284" pos:column="58"/></specifier> <name pos:line="284" pos:column="59">Bytef<pos:position pos:line="284" pos:column="64"/></name> <operator pos:line="284" pos:column="65">*<pos:position pos:line="284" pos:column="66"/></operator><operator pos:line="284" pos:column="66">)<pos:position pos:line="284" pos:column="67"/></operator><name><name pos:line="284" pos:column="67">ctx<pos:position pos:line="284" pos:column="70"/></name><operator pos:line="284" pos:column="70">-&gt;<pos:position pos:line="284" pos:column="75"/></operator><name pos:line="284" pos:column="72">buffer<pos:position pos:line="284" pos:column="78"/></name></name></expr></argument>, <argument><expr><name pos:line="284" pos:column="80">len<pos:position pos:line="284" pos:column="83"/></name></expr></argument>)<pos:position pos:line="284" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="85"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="285" pos:column="25">tmp_heap<pos:position pos:line="285" pos:column="33"/></name> <operator pos:line="285" pos:column="34">=<pos:position pos:line="285" pos:column="35"/></operator> <call><name pos:line="285" pos:column="36">apr_bucket_heap_create<pos:position pos:line="285" pos:column="58"/></name><argument_list pos:line="285" pos:column="58">(<argument><expr><operator pos:line="285" pos:column="59">(<pos:position pos:line="285" pos:column="60"/></operator><name pos:line="285" pos:column="60">char<pos:position pos:line="285" pos:column="64"/></name> <operator pos:line="285" pos:column="65">*<pos:position pos:line="285" pos:column="66"/></operator><operator pos:line="285" pos:column="66">)<pos:position pos:line="285" pos:column="67"/></operator><name><name pos:line="285" pos:column="67">ctx<pos:position pos:line="285" pos:column="70"/></name><operator pos:line="285" pos:column="70">-&gt;<pos:position pos:line="285" pos:column="75"/></operator><name pos:line="285" pos:column="72">buffer<pos:position pos:line="285" pos:column="78"/></name></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="80">len<pos:position pos:line="285" pos:column="83"/></name></expr></argument>,
                                                          <argument><expr><name pos:line="286" pos:column="59">NULL<pos:position pos:line="286" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="286" pos:column="65">f<pos:position pos:line="286" pos:column="66"/></name><operator pos:line="286" pos:column="66">-&gt;<pos:position pos:line="286" pos:column="71"/></operator><name pos:line="286" pos:column="68">c<pos:position pos:line="286" pos:column="69"/></name><operator pos:line="286" pos:column="69">-&gt;<pos:position pos:line="286" pos:column="74"/></operator><name pos:line="286" pos:column="71">bucket_alloc<pos:position pos:line="286" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="286" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="85"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="287" pos:column="25">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="287" pos:column="48"/></name><argument_list pos:line="287" pos:column="48">(<argument><expr><name><name pos:line="287" pos:column="49">ctx<pos:position pos:line="287" pos:column="52"/></name><operator pos:line="287" pos:column="52">-&gt;<pos:position pos:line="287" pos:column="57"/></operator><name pos:line="287" pos:column="54">proc_bb<pos:position pos:line="287" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="287" pos:column="63">tmp_heap<pos:position pos:line="287" pos:column="71"/></name></expr></argument>)<pos:position pos:line="287" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="287" pos:column="73"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="288" pos:column="25">ctx<pos:position pos:line="288" pos:column="28"/></name><operator pos:line="288" pos:column="28">-&gt;<pos:position pos:line="288" pos:column="33"/></operator><name pos:line="288" pos:column="30">stream<pos:position pos:line="288" pos:column="36"/></name><operator pos:line="288" pos:column="36">.<pos:position pos:line="288" pos:column="37"/></operator><name pos:line="288" pos:column="37">avail_out<pos:position pos:line="288" pos:column="46"/></name></name> <operator pos:line="288" pos:column="47">=<pos:position pos:line="288" pos:column="48"/></operator> <name><name pos:line="288" pos:column="49">c<pos:position pos:line="288" pos:column="50"/></name><operator pos:line="288" pos:column="50">-&gt;<pos:position pos:line="288" pos:column="55"/></operator><name pos:line="288" pos:column="52">bufferSize<pos:position pos:line="288" pos:column="62"/></name></name></expr>;<pos:position pos:line="288" pos:column="63"/></expr_stmt>
                    }<pos:position pos:line="289" pos:column="22"/></block></then></if>

                    <expr_stmt><expr><name pos:line="291" pos:column="21">zRC<pos:position pos:line="291" pos:column="24"/></name> <operator pos:line="291" pos:column="25">=<pos:position pos:line="291" pos:column="26"/></operator> <call><name pos:line="291" pos:column="27">inflate<pos:position pos:line="291" pos:column="34"/></name><argument_list pos:line="291" pos:column="34">(<argument><expr><operator pos:line="291" pos:column="35">&amp;<pos:position pos:line="291" pos:column="40"/></operator><name><name pos:line="291" pos:column="36">ctx<pos:position pos:line="291" pos:column="39"/></name><operator pos:line="291" pos:column="39">-&gt;<pos:position pos:line="291" pos:column="44"/></operator><name pos:line="291" pos:column="41">stream<pos:position pos:line="291" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="291" pos:column="49">Z_NO_FLUSH<pos:position pos:line="291" pos:column="59"/></name></expr></argument>)<pos:position pos:line="291" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="61"/></expr_stmt>

                    <if pos:line="293" pos:column="21">if <condition pos:line="293" pos:column="24">(<expr><name pos:line="293" pos:column="25">zRC<pos:position pos:line="293" pos:column="28"/></name> <operator pos:line="293" pos:column="29">==<pos:position pos:line="293" pos:column="31"/></operator> <name pos:line="293" pos:column="32">Z_STREAM_END<pos:position pos:line="293" pos:column="44"/></name></expr>)<pos:position pos:line="293" pos:column="45"/></condition><then pos:line="293" pos:column="45"> <block pos:line="293" pos:column="46">{
                        <expr_stmt><expr><name><name pos:line="294" pos:column="25">ctx<pos:position pos:line="294" pos:column="28"/></name><operator pos:line="294" pos:column="28">-&gt;<pos:position pos:line="294" pos:column="33"/></operator><name pos:line="294" pos:column="30">validation_buffer<pos:position pos:line="294" pos:column="47"/></name></name> <operator pos:line="294" pos:column="48">=<pos:position pos:line="294" pos:column="49"/></operator> <call><name pos:line="294" pos:column="50">apr_pcalloc<pos:position pos:line="294" pos:column="61"/></name><argument_list pos:line="294" pos:column="61">(<argument><expr><name><name pos:line="294" pos:column="62">r<pos:position pos:line="294" pos:column="63"/></name><operator pos:line="294" pos:column="63">-&gt;<pos:position pos:line="294" pos:column="68"/></operator><name pos:line="294" pos:column="65">pool<pos:position pos:line="294" pos:column="69"/></name></name></expr></argument>,
                                                             <argument><expr><name pos:line="295" pos:column="62">VALIDATION_SIZE<pos:position pos:line="295" pos:column="77"/></name></expr></argument>)<pos:position pos:line="295" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="79"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="296" pos:column="25">ctx<pos:position pos:line="296" pos:column="28"/></name><operator pos:line="296" pos:column="28">-&gt;<pos:position pos:line="296" pos:column="33"/></operator><name pos:line="296" pos:column="30">validation_buffer_length<pos:position pos:line="296" pos:column="54"/></name></name> <operator pos:line="296" pos:column="55">=<pos:position pos:line="296" pos:column="56"/></operator> <literal type="number" pos:line="296" pos:column="57">0<pos:position pos:line="296" pos:column="58"/></literal></expr>;<pos:position pos:line="296" pos:column="59"/></expr_stmt>
                        <break pos:line="297" pos:column="25">break;<pos:position pos:line="297" pos:column="31"/></break>
                    }<pos:position pos:line="298" pos:column="22"/></block></then></if>

                    <if pos:line="300" pos:column="21">if <condition pos:line="300" pos:column="24">(<expr><name pos:line="300" pos:column="25">zRC<pos:position pos:line="300" pos:column="28"/></name> <operator pos:line="300" pos:column="29">!=<pos:position pos:line="300" pos:column="31"/></operator> <name pos:line="300" pos:column="32">Z_OK<pos:position pos:line="300" pos:column="36"/></name></expr>)<pos:position pos:line="300" pos:column="37"/></condition><then pos:line="300" pos:column="37"> <block pos:line="300" pos:column="38">{
                        <expr_stmt><expr><call><name pos:line="301" pos:column="25">ap_log_rerror<pos:position pos:line="301" pos:column="38"/></name><argument_list pos:line="301" pos:column="38">(<argument><expr><name pos:line="301" pos:column="39">APLOG_MARK<pos:position pos:line="301" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="301" pos:column="51">APLOG_WARNING<pos:position pos:line="301" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="301" pos:column="66">0<pos:position pos:line="301" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="301" pos:column="69">r<pos:position pos:line="301" pos:column="70"/></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="302" pos:column="39">"Zlib error %d inflating data (%s)"<pos:position pos:line="302" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="302" pos:column="76">zRC<pos:position pos:line="302" pos:column="79"/></name></expr></argument>,
                                      <argument><expr><name><name pos:line="303" pos:column="39">ctx<pos:position pos:line="303" pos:column="42"/></name><operator pos:line="303" pos:column="42">-&gt;<pos:position pos:line="303" pos:column="47"/></operator><name pos:line="303" pos:column="44">stream<pos:position pos:line="303" pos:column="50"/></name><operator pos:line="303" pos:column="50">.<pos:position pos:line="303" pos:column="51"/></operator><name pos:line="303" pos:column="51">msg<pos:position pos:line="303" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="303" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="56"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="304" pos:column="25">inflateEnd<pos:position pos:line="304" pos:column="35"/></name><argument_list pos:line="304" pos:column="35">(<argument><expr><operator pos:line="304" pos:column="36">&amp;<pos:position pos:line="304" pos:column="41"/></operator><name><name pos:line="304" pos:column="37">ctx<pos:position pos:line="304" pos:column="40"/></name><operator pos:line="304" pos:column="40">-&gt;<pos:position pos:line="304" pos:column="45"/></operator><name pos:line="304" pos:column="42">stream<pos:position pos:line="304" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="304" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="50"/></expr_stmt>
                        <return pos:line="305" pos:column="25">return <expr><name pos:line="305" pos:column="32">APR_EGENERAL<pos:position pos:line="305" pos:column="44"/></name></expr>;<pos:position pos:line="305" pos:column="45"/></return>
                    }<pos:position pos:line="306" pos:column="22"/></block></then></if>
                }<pos:position pos:line="307" pos:column="18"/></block></while>
            }<pos:position pos:line="308" pos:column="14"/></block></then></if>

            <if pos:line="310" pos:column="13">if <condition pos:line="310" pos:column="16">(<expr><name><name pos:line="310" pos:column="17">ctx<pos:position pos:line="310" pos:column="20"/></name><operator pos:line="310" pos:column="20">-&gt;<pos:position pos:line="310" pos:column="25"/></operator><name pos:line="310" pos:column="22">validation_buffer<pos:position pos:line="310" pos:column="39"/></name></name></expr>)<pos:position pos:line="310" pos:column="40"/></condition><then pos:line="310" pos:column="40"> <block pos:line="310" pos:column="41">{
                <decl_stmt><decl><type><name pos:line="311" pos:column="17">apr_bucket<pos:position pos:line="311" pos:column="27"/></name> <modifier pos:line="311" pos:column="28">*<pos:position pos:line="311" pos:column="29"/></modifier></type><name pos:line="311" pos:column="29">tmp_heap<pos:position pos:line="311" pos:column="37"/></name></decl>;<pos:position pos:line="311" pos:column="38"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="312" pos:column="17">apr_size_t<pos:position pos:line="312" pos:column="27"/></name></type> <name pos:line="312" pos:column="28">avail<pos:position pos:line="312" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="312" pos:column="35">valid<pos:position pos:line="312" pos:column="40"/></name></decl>;<pos:position pos:line="312" pos:column="41"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="313" pos:column="17">unsigned<pos:position pos:line="313" pos:column="25"/></name> <name pos:line="313" pos:column="26">char<pos:position pos:line="313" pos:column="30"/></name> <modifier pos:line="313" pos:column="31">*<pos:position pos:line="313" pos:column="32"/></modifier></type><name pos:line="313" pos:column="32">buf<pos:position pos:line="313" pos:column="35"/></name> <init pos:line="313" pos:column="36">= <expr><name><name pos:line="313" pos:column="38">ctx<pos:position pos:line="313" pos:column="41"/></name><operator pos:line="313" pos:column="41">-&gt;<pos:position pos:line="313" pos:column="46"/></operator><name pos:line="313" pos:column="43">validation_buffer<pos:position pos:line="313" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="313" pos:column="61"/></decl_stmt>

                <expr_stmt><expr><name pos:line="315" pos:column="17">avail<pos:position pos:line="315" pos:column="22"/></name> <operator pos:line="315" pos:column="23">=<pos:position pos:line="315" pos:column="24"/></operator> <name><name pos:line="315" pos:column="25">ctx<pos:position pos:line="315" pos:column="28"/></name><operator pos:line="315" pos:column="28">-&gt;<pos:position pos:line="315" pos:column="33"/></operator><name pos:line="315" pos:column="30">stream<pos:position pos:line="315" pos:column="36"/></name><operator pos:line="315" pos:column="36">.<pos:position pos:line="315" pos:column="37"/></operator><name pos:line="315" pos:column="37">avail_in<pos:position pos:line="315" pos:column="45"/></name></name></expr>;<pos:position pos:line="315" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><name pos:line="316" pos:column="17">valid<pos:position pos:line="316" pos:column="22"/></name> <operator pos:line="316" pos:column="23">=<pos:position pos:line="316" pos:column="24"/></operator> <operator pos:line="316" pos:column="25">(<pos:position pos:line="316" pos:column="26"/></operator><name pos:line="316" pos:column="26">apr_size_t<pos:position pos:line="316" pos:column="36"/></name><operator pos:line="316" pos:column="36">)<pos:position pos:line="316" pos:column="37"/></operator><name pos:line="316" pos:column="37">VALIDATION_SIZE<pos:position pos:line="316" pos:column="52"/></name> <operator pos:line="316" pos:column="53">-<pos:position pos:line="316" pos:column="54"/></operator>
                         <name><name pos:line="317" pos:column="26">ctx<pos:position pos:line="317" pos:column="29"/></name><operator pos:line="317" pos:column="29">-&gt;<pos:position pos:line="317" pos:column="34"/></operator><name pos:line="317" pos:column="31">validation_buffer_length<pos:position pos:line="317" pos:column="55"/></name></name></expr>;<pos:position pos:line="317" pos:column="56"/></expr_stmt>

                <comment type="block" pos:line="319" pos:column="17">/*
                 * We have inflated all data. Now try to capture the
                 * validation bytes. We may not have them all available
                 * right now, but capture what is there.
                 */</comment>
                <if pos:line="324" pos:column="17">if <condition pos:line="324" pos:column="20">(<expr><name pos:line="324" pos:column="21">avail<pos:position pos:line="324" pos:column="26"/></name> <operator pos:line="324" pos:column="27">&lt;<pos:position pos:line="324" pos:column="31"/></operator> <name pos:line="324" pos:column="29">valid<pos:position pos:line="324" pos:column="34"/></name></expr>)<pos:position pos:line="324" pos:column="35"/></condition><then pos:line="324" pos:column="35"> <block pos:line="324" pos:column="36">{
                    <expr_stmt><expr><call><name pos:line="325" pos:column="21">memcpy<pos:position pos:line="325" pos:column="27"/></name><argument_list pos:line="325" pos:column="27">(<argument><expr><name pos:line="325" pos:column="28">buf<pos:position pos:line="325" pos:column="31"/></name> <operator pos:line="325" pos:column="32">+<pos:position pos:line="325" pos:column="33"/></operator> <name><name pos:line="325" pos:column="34">ctx<pos:position pos:line="325" pos:column="37"/></name><operator pos:line="325" pos:column="37">-&gt;<pos:position pos:line="325" pos:column="42"/></operator><name pos:line="325" pos:column="39">validation_buffer_length<pos:position pos:line="325" pos:column="63"/></name></name></expr></argument>,
                           <argument><expr><name><name pos:line="326" pos:column="28">ctx<pos:position pos:line="326" pos:column="31"/></name><operator pos:line="326" pos:column="31">-&gt;<pos:position pos:line="326" pos:column="36"/></operator><name pos:line="326" pos:column="33">stream<pos:position pos:line="326" pos:column="39"/></name><operator pos:line="326" pos:column="39">.<pos:position pos:line="326" pos:column="40"/></operator><name pos:line="326" pos:column="40">next_in<pos:position pos:line="326" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="326" pos:column="49">avail<pos:position pos:line="326" pos:column="54"/></name></expr></argument>)<pos:position pos:line="326" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="56"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="327" pos:column="21">ctx<pos:position pos:line="327" pos:column="24"/></name><operator pos:line="327" pos:column="24">-&gt;<pos:position pos:line="327" pos:column="29"/></operator><name pos:line="327" pos:column="26">validation_buffer_length<pos:position pos:line="327" pos:column="50"/></name></name> <operator pos:line="327" pos:column="51">+=<pos:position pos:line="327" pos:column="53"/></operator> <name pos:line="327" pos:column="54">avail<pos:position pos:line="327" pos:column="59"/></name></expr>;<pos:position pos:line="327" pos:column="60"/></expr_stmt>
                    <continue pos:line="328" pos:column="21">continue;<pos:position pos:line="328" pos:column="30"/></continue>
                }<pos:position pos:line="329" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="330" pos:column="17">memcpy<pos:position pos:line="330" pos:column="23"/></name><argument_list pos:line="330" pos:column="23">(<argument><expr><name pos:line="330" pos:column="24">buf<pos:position pos:line="330" pos:column="27"/></name> <operator pos:line="330" pos:column="28">+<pos:position pos:line="330" pos:column="29"/></operator> <name><name pos:line="330" pos:column="30">ctx<pos:position pos:line="330" pos:column="33"/></name><operator pos:line="330" pos:column="33">-&gt;<pos:position pos:line="330" pos:column="38"/></operator><name pos:line="330" pos:column="35">validation_buffer_length<pos:position pos:line="330" pos:column="59"/></name></name></expr></argument>,
                       <argument><expr><name><name pos:line="331" pos:column="24">ctx<pos:position pos:line="331" pos:column="27"/></name><operator pos:line="331" pos:column="27">-&gt;<pos:position pos:line="331" pos:column="32"/></operator><name pos:line="331" pos:column="29">stream<pos:position pos:line="331" pos:column="35"/></name><operator pos:line="331" pos:column="35">.<pos:position pos:line="331" pos:column="36"/></operator><name pos:line="331" pos:column="36">next_in<pos:position pos:line="331" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="331" pos:column="45">valid<pos:position pos:line="331" pos:column="50"/></name></expr></argument>)<pos:position pos:line="331" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="331" pos:column="52"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="332" pos:column="17">ctx<pos:position pos:line="332" pos:column="20"/></name><operator pos:line="332" pos:column="20">-&gt;<pos:position pos:line="332" pos:column="25"/></operator><name pos:line="332" pos:column="22">validation_buffer_length<pos:position pos:line="332" pos:column="46"/></name></name> <operator pos:line="332" pos:column="47">+=<pos:position pos:line="332" pos:column="49"/></operator> <name pos:line="332" pos:column="50">valid<pos:position pos:line="332" pos:column="55"/></name></expr>;<pos:position pos:line="332" pos:column="56"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="334" pos:column="17">ap_log_rerror<pos:position pos:line="334" pos:column="30"/></name><argument_list pos:line="334" pos:column="30">(<argument><expr><name pos:line="334" pos:column="31">APLOG_MARK<pos:position pos:line="334" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="334" pos:column="43">APLOG_DEBUG<pos:position pos:line="334" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="334" pos:column="56">0<pos:position pos:line="334" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="334" pos:column="59">r<pos:position pos:line="334" pos:column="60"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="335" pos:column="31">"Zlib: Inflated %ld to %ld : URL %s"<pos:position pos:line="335" pos:column="67"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="336" pos:column="31">ctx<pos:position pos:line="336" pos:column="34"/></name><operator pos:line="336" pos:column="34">-&gt;<pos:position pos:line="336" pos:column="39"/></operator><name pos:line="336" pos:column="36">stream<pos:position pos:line="336" pos:column="42"/></name><operator pos:line="336" pos:column="42">.<pos:position pos:line="336" pos:column="43"/></operator><name pos:line="336" pos:column="43">total_in<pos:position pos:line="336" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="336" pos:column="53">ctx<pos:position pos:line="336" pos:column="56"/></name><operator pos:line="336" pos:column="56">-&gt;<pos:position pos:line="336" pos:column="61"/></operator><name pos:line="336" pos:column="58">stream<pos:position pos:line="336" pos:column="64"/></name><operator pos:line="336" pos:column="64">.<pos:position pos:line="336" pos:column="65"/></operator><name pos:line="336" pos:column="65">total_out<pos:position pos:line="336" pos:column="74"/></name></name></expr></argument>,
                              <argument><expr><name><name pos:line="337" pos:column="31">r<pos:position pos:line="337" pos:column="32"/></name><operator pos:line="337" pos:column="32">-&gt;<pos:position pos:line="337" pos:column="37"/></operator><name pos:line="337" pos:column="34">uri<pos:position pos:line="337" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="337" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="39"/></expr_stmt>

                <expr_stmt><expr><name pos:line="339" pos:column="17">len<pos:position pos:line="339" pos:column="20"/></name> <operator pos:line="339" pos:column="21">=<pos:position pos:line="339" pos:column="22"/></operator> <name><name pos:line="339" pos:column="23">c<pos:position pos:line="339" pos:column="24"/></name><operator pos:line="339" pos:column="24">-&gt;<pos:position pos:line="339" pos:column="29"/></operator><name pos:line="339" pos:column="26">bufferSize<pos:position pos:line="339" pos:column="36"/></name></name> <operator pos:line="339" pos:column="37">-<pos:position pos:line="339" pos:column="38"/></operator> <name><name pos:line="339" pos:column="39">ctx<pos:position pos:line="339" pos:column="42"/></name><operator pos:line="339" pos:column="42">-&gt;<pos:position pos:line="339" pos:column="47"/></operator><name pos:line="339" pos:column="44">stream<pos:position pos:line="339" pos:column="50"/></name><operator pos:line="339" pos:column="50">.<pos:position pos:line="339" pos:column="51"/></operator><name pos:line="339" pos:column="51">avail_out<pos:position pos:line="339" pos:column="60"/></name></name></expr>;<pos:position pos:line="339" pos:column="61"/></expr_stmt>

                <expr_stmt><expr><name><name pos:line="341" pos:column="17">ctx<pos:position pos:line="341" pos:column="20"/></name><operator pos:line="341" pos:column="20">-&gt;<pos:position pos:line="341" pos:column="25"/></operator><name pos:line="341" pos:column="22">crc<pos:position pos:line="341" pos:column="25"/></name></name> <operator pos:line="341" pos:column="26">=<pos:position pos:line="341" pos:column="27"/></operator> <call><name pos:line="341" pos:column="28">crc32<pos:position pos:line="341" pos:column="33"/></name><argument_list pos:line="341" pos:column="33">(<argument><expr><name><name pos:line="341" pos:column="34">ctx<pos:position pos:line="341" pos:column="37"/></name><operator pos:line="341" pos:column="37">-&gt;<pos:position pos:line="341" pos:column="42"/></operator><name pos:line="341" pos:column="39">crc<pos:position pos:line="341" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="341" pos:column="44">(<pos:position pos:line="341" pos:column="45"/></operator><specifier pos:line="341" pos:column="45">const<pos:position pos:line="341" pos:column="50"/></specifier> <name pos:line="341" pos:column="51">Bytef<pos:position pos:line="341" pos:column="56"/></name> <operator pos:line="341" pos:column="57">*<pos:position pos:line="341" pos:column="58"/></operator><operator pos:line="341" pos:column="58">)<pos:position pos:line="341" pos:column="59"/></operator><name><name pos:line="341" pos:column="59">ctx<pos:position pos:line="341" pos:column="62"/></name><operator pos:line="341" pos:column="62">-&gt;<pos:position pos:line="341" pos:column="67"/></operator><name pos:line="341" pos:column="64">buffer<pos:position pos:line="341" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="72">len<pos:position pos:line="341" pos:column="75"/></name></expr></argument>)<pos:position pos:line="341" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="341" pos:column="77"/></expr_stmt>
                <expr_stmt><expr><name pos:line="342" pos:column="17">tmp_heap<pos:position pos:line="342" pos:column="25"/></name> <operator pos:line="342" pos:column="26">=<pos:position pos:line="342" pos:column="27"/></operator> <call><name pos:line="342" pos:column="28">apr_bucket_heap_create<pos:position pos:line="342" pos:column="50"/></name><argument_list pos:line="342" pos:column="50">(<argument><expr><operator pos:line="342" pos:column="51">(<pos:position pos:line="342" pos:column="52"/></operator><name pos:line="342" pos:column="52">char<pos:position pos:line="342" pos:column="56"/></name> <operator pos:line="342" pos:column="57">*<pos:position pos:line="342" pos:column="58"/></operator><operator pos:line="342" pos:column="58">)<pos:position pos:line="342" pos:column="59"/></operator><name><name pos:line="342" pos:column="59">ctx<pos:position pos:line="342" pos:column="62"/></name><operator pos:line="342" pos:column="62">-&gt;<pos:position pos:line="342" pos:column="67"/></operator><name pos:line="342" pos:column="64">buffer<pos:position pos:line="342" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="342" pos:column="72">len<pos:position pos:line="342" pos:column="75"/></name></expr></argument>,
                                                  <argument><expr><name pos:line="343" pos:column="51">NULL<pos:position pos:line="343" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="343" pos:column="57">f<pos:position pos:line="343" pos:column="58"/></name><operator pos:line="343" pos:column="58">-&gt;<pos:position pos:line="343" pos:column="63"/></operator><name pos:line="343" pos:column="60">c<pos:position pos:line="343" pos:column="61"/></name><operator pos:line="343" pos:column="61">-&gt;<pos:position pos:line="343" pos:column="66"/></operator><name pos:line="343" pos:column="63">bucket_alloc<pos:position pos:line="343" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="343" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="343" pos:column="77"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="344" pos:column="17">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="344" pos:column="40"/></name><argument_list pos:line="344" pos:column="40">(<argument><expr><name><name pos:line="344" pos:column="41">ctx<pos:position pos:line="344" pos:column="44"/></name><operator pos:line="344" pos:column="44">-&gt;<pos:position pos:line="344" pos:column="49"/></operator><name pos:line="344" pos:column="46">proc_bb<pos:position pos:line="344" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="344" pos:column="55">tmp_heap<pos:position pos:line="344" pos:column="63"/></name></expr></argument>)<pos:position pos:line="344" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="344" pos:column="65"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="345" pos:column="17">ctx<pos:position pos:line="345" pos:column="20"/></name><operator pos:line="345" pos:column="20">-&gt;<pos:position pos:line="345" pos:column="25"/></operator><name pos:line="345" pos:column="22">stream<pos:position pos:line="345" pos:column="28"/></name><operator pos:line="345" pos:column="28">.<pos:position pos:line="345" pos:column="29"/></operator><name pos:line="345" pos:column="29">avail_out<pos:position pos:line="345" pos:column="38"/></name></name> <operator pos:line="345" pos:column="39">=<pos:position pos:line="345" pos:column="40"/></operator> <name><name pos:line="345" pos:column="41">c<pos:position pos:line="345" pos:column="42"/></name><operator pos:line="345" pos:column="42">-&gt;<pos:position pos:line="345" pos:column="47"/></operator><name pos:line="345" pos:column="44">bufferSize<pos:position pos:line="345" pos:column="54"/></name></name></expr>;<pos:position pos:line="345" pos:column="55"/></expr_stmt>

                <block pos:line="347" pos:column="17">{
                    <decl_stmt><decl><type><name pos:line="348" pos:column="21">unsigned<pos:position pos:line="348" pos:column="29"/></name> <name pos:line="348" pos:column="30">long<pos:position pos:line="348" pos:column="34"/></name></type> <name pos:line="348" pos:column="35">compCRC<pos:position pos:line="348" pos:column="42"/></name></decl>, <decl><type ref="prev"/><name pos:line="348" pos:column="44">compLen<pos:position pos:line="348" pos:column="51"/></name></decl>;<pos:position pos:line="348" pos:column="52"/></decl_stmt>
                    <expr_stmt><expr><name pos:line="349" pos:column="21">compCRC<pos:position pos:line="349" pos:column="28"/></name> <operator pos:line="349" pos:column="29">=<pos:position pos:line="349" pos:column="30"/></operator> <call><name pos:line="349" pos:column="31">getLong<pos:position pos:line="349" pos:column="38"/></name><argument_list pos:line="349" pos:column="38">(<argument><expr><name pos:line="349" pos:column="39">buf<pos:position pos:line="349" pos:column="42"/></name></expr></argument>)<pos:position pos:line="349" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="44"/></expr_stmt>
                    <if pos:line="350" pos:column="21">if <condition pos:line="350" pos:column="24">(<expr><name><name pos:line="350" pos:column="25">ctx<pos:position pos:line="350" pos:column="28"/></name><operator pos:line="350" pos:column="28">-&gt;<pos:position pos:line="350" pos:column="33"/></operator><name pos:line="350" pos:column="30">crc<pos:position pos:line="350" pos:column="33"/></name></name> <operator pos:line="350" pos:column="34">!=<pos:position pos:line="350" pos:column="36"/></operator> <name pos:line="350" pos:column="37">compCRC<pos:position pos:line="350" pos:column="44"/></name></expr>)<pos:position pos:line="350" pos:column="45"/></condition><then pos:line="350" pos:column="45"> <block pos:line="350" pos:column="46">{
                        <expr_stmt><expr><call><name pos:line="351" pos:column="25">inflateEnd<pos:position pos:line="351" pos:column="35"/></name><argument_list pos:line="351" pos:column="35">(<argument><expr><operator pos:line="351" pos:column="36">&amp;<pos:position pos:line="351" pos:column="41"/></operator><name><name pos:line="351" pos:column="37">ctx<pos:position pos:line="351" pos:column="40"/></name><operator pos:line="351" pos:column="40">-&gt;<pos:position pos:line="351" pos:column="45"/></operator><name pos:line="351" pos:column="42">stream<pos:position pos:line="351" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="351" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="50"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="352" pos:column="25">ap_log_rerror<pos:position pos:line="352" pos:column="38"/></name><argument_list pos:line="352" pos:column="38">(<argument><expr><name pos:line="352" pos:column="39">APLOG_MARK<pos:position pos:line="352" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="352" pos:column="51">APLOG_WARNING<pos:position pos:line="352" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="352" pos:column="66">0<pos:position pos:line="352" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="352" pos:column="69">r<pos:position pos:line="352" pos:column="70"/></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="353" pos:column="39">"Zlib: CRC error inflating data"<pos:position pos:line="353" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="353" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="73"/></expr_stmt>
                        <return pos:line="354" pos:column="25">return <expr><name pos:line="354" pos:column="32">APR_EGENERAL<pos:position pos:line="354" pos:column="44"/></name></expr>;<pos:position pos:line="354" pos:column="45"/></return>
                    }<pos:position pos:line="355" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name pos:line="356" pos:column="21">compLen<pos:position pos:line="356" pos:column="28"/></name> <operator pos:line="356" pos:column="29">=<pos:position pos:line="356" pos:column="30"/></operator> <call><name pos:line="356" pos:column="31">getLong<pos:position pos:line="356" pos:column="38"/></name><argument_list pos:line="356" pos:column="38">(<argument><expr><name pos:line="356" pos:column="39">buf<pos:position pos:line="356" pos:column="42"/></name> <operator pos:line="356" pos:column="43">+<pos:position pos:line="356" pos:column="44"/></operator> <name pos:line="356" pos:column="45">VALIDATION_SIZE<pos:position pos:line="356" pos:column="60"/></name> <operator pos:line="356" pos:column="61">/<pos:position pos:line="356" pos:column="62"/></operator> <literal type="number" pos:line="356" pos:column="63">2<pos:position pos:line="356" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="356" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="356" pos:column="66"/></expr_stmt>
                    <comment type="block" pos:line="357" pos:column="21">/* gzip stores original size only as 4 byte value */</comment>
                    <if pos:line="358" pos:column="21">if <condition pos:line="358" pos:column="24">(<expr><operator pos:line="358" pos:column="25">(<pos:position pos:line="358" pos:column="26"/></operator><name><name pos:line="358" pos:column="26">ctx<pos:position pos:line="358" pos:column="29"/></name><operator pos:line="358" pos:column="29">-&gt;<pos:position pos:line="358" pos:column="34"/></operator><name pos:line="358" pos:column="31">stream<pos:position pos:line="358" pos:column="37"/></name><operator pos:line="358" pos:column="37">.<pos:position pos:line="358" pos:column="38"/></operator><name pos:line="358" pos:column="38">total_out<pos:position pos:line="358" pos:column="47"/></name></name> <operator pos:line="358" pos:column="48">&amp;<pos:position pos:line="358" pos:column="53"/></operator> <literal type="number" pos:line="358" pos:column="50">0xFFFFFFFF<pos:position pos:line="358" pos:column="60"/></literal><operator pos:line="358" pos:column="60">)<pos:position pos:line="358" pos:column="61"/></operator> <operator pos:line="358" pos:column="62">!=<pos:position pos:line="358" pos:column="64"/></operator> <name pos:line="358" pos:column="65">compLen<pos:position pos:line="358" pos:column="72"/></name></expr>)<pos:position pos:line="358" pos:column="73"/></condition><then pos:line="358" pos:column="73"> <block pos:line="358" pos:column="74">{
                        <expr_stmt><expr><call><name pos:line="359" pos:column="25">inflateEnd<pos:position pos:line="359" pos:column="35"/></name><argument_list pos:line="359" pos:column="35">(<argument><expr><operator pos:line="359" pos:column="36">&amp;<pos:position pos:line="359" pos:column="41"/></operator><name><name pos:line="359" pos:column="37">ctx<pos:position pos:line="359" pos:column="40"/></name><operator pos:line="359" pos:column="40">-&gt;<pos:position pos:line="359" pos:column="45"/></operator><name pos:line="359" pos:column="42">stream<pos:position pos:line="359" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="359" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="359" pos:column="50"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="360" pos:column="25">ap_log_rerror<pos:position pos:line="360" pos:column="38"/></name><argument_list pos:line="360" pos:column="38">(<argument><expr><name pos:line="360" pos:column="39">APLOG_MARK<pos:position pos:line="360" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="360" pos:column="51">APLOG_WARNING<pos:position pos:line="360" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="360" pos:column="66">0<pos:position pos:line="360" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="360" pos:column="69">r<pos:position pos:line="360" pos:column="70"/></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="361" pos:column="39">"Zlib: Length %ld of inflated data does "<pos:position pos:line="361" pos:column="80"/></literal>
                                      <literal type="string" pos:line="362" pos:column="39">"not match expected value %ld"<pos:position pos:line="362" pos:column="69"/></literal></expr></argument>,
                                      <argument><expr><name><name pos:line="363" pos:column="39">ctx<pos:position pos:line="363" pos:column="42"/></name><operator pos:line="363" pos:column="42">-&gt;<pos:position pos:line="363" pos:column="47"/></operator><name pos:line="363" pos:column="44">stream<pos:position pos:line="363" pos:column="50"/></name><operator pos:line="363" pos:column="50">.<pos:position pos:line="363" pos:column="51"/></operator><name pos:line="363" pos:column="51">total_out<pos:position pos:line="363" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="363" pos:column="62">compLen<pos:position pos:line="363" pos:column="69"/></name></expr></argument>)<pos:position pos:line="363" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="363" pos:column="71"/></expr_stmt>
                        <return pos:line="364" pos:column="25">return <expr><name pos:line="364" pos:column="32">APR_EGENERAL<pos:position pos:line="364" pos:column="44"/></name></expr>;<pos:position pos:line="364" pos:column="45"/></return>
                    }<pos:position pos:line="365" pos:column="22"/></block></then></if>
                }<pos:position pos:line="366" pos:column="18"/></block>

                <expr_stmt><expr><call><name pos:line="368" pos:column="17">inflateEnd<pos:position pos:line="368" pos:column="27"/></name><argument_list pos:line="368" pos:column="27">(<argument><expr><operator pos:line="368" pos:column="28">&amp;<pos:position pos:line="368" pos:column="33"/></operator><name><name pos:line="368" pos:column="29">ctx<pos:position pos:line="368" pos:column="32"/></name><operator pos:line="368" pos:column="32">-&gt;<pos:position pos:line="368" pos:column="37"/></operator><name pos:line="368" pos:column="34">stream<pos:position pos:line="368" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="368" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="368" pos:column="42"/></expr_stmt>

                <expr_stmt><expr><name><name pos:line="370" pos:column="17">ctx<pos:position pos:line="370" pos:column="20"/></name><operator pos:line="370" pos:column="20">-&gt;<pos:position pos:line="370" pos:column="25"/></operator><name pos:line="370" pos:column="22">done<pos:position pos:line="370" pos:column="26"/></name></name> <operator pos:line="370" pos:column="27">=<pos:position pos:line="370" pos:column="28"/></operator> <literal type="number" pos:line="370" pos:column="29">1<pos:position pos:line="370" pos:column="30"/></literal></expr>;<pos:position pos:line="370" pos:column="31"/></expr_stmt>

                <comment type="block" pos:line="372" pos:column="17">/* Did we have trailing data behind the closing 8 bytes? */</comment>
                <if pos:line="373" pos:column="17">if <condition pos:line="373" pos:column="20">(<expr><name pos:line="373" pos:column="21">avail<pos:position pos:line="373" pos:column="26"/></name> <operator pos:line="373" pos:column="27">&gt;<pos:position pos:line="373" pos:column="31"/></operator> <name pos:line="373" pos:column="29">valid<pos:position pos:line="373" pos:column="34"/></name></expr>)<pos:position pos:line="373" pos:column="35"/></condition><then pos:line="373" pos:column="35"> <block pos:line="373" pos:column="36">{
                    <expr_stmt><expr><call><name pos:line="374" pos:column="21">ap_log_rerror<pos:position pos:line="374" pos:column="34"/></name><argument_list pos:line="374" pos:column="34">(<argument><expr><name pos:line="374" pos:column="35">APLOG_MARK<pos:position pos:line="374" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="374" pos:column="47">APLOG_ERR<pos:position pos:line="374" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="374" pos:column="58">0<pos:position pos:line="374" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="374" pos:column="61">r<pos:position pos:line="374" pos:column="62"/></name></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="375" pos:column="35">"Encountered extra data after compressed data"<pos:position pos:line="375" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="375" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="375" pos:column="83"/></expr_stmt>
                    <return pos:line="376" pos:column="21">return <expr><name pos:line="376" pos:column="28">APR_EGENERAL<pos:position pos:line="376" pos:column="40"/></name></expr>;<pos:position pos:line="376" pos:column="41"/></return>
                }<pos:position pos:line="377" pos:column="18"/></block></then></if>
            }<pos:position pos:line="378" pos:column="14"/></block></then></if>

        }<pos:position pos:line="380" pos:column="10"/></block></for>
        <expr_stmt><expr><call><name pos:line="381" pos:column="9">apr_brigade_cleanup<pos:position pos:line="381" pos:column="28"/></name><argument_list pos:line="381" pos:column="28">(<argument><expr><name><name pos:line="381" pos:column="29">ctx<pos:position pos:line="381" pos:column="32"/></name><operator pos:line="381" pos:column="32">-&gt;<pos:position pos:line="381" pos:column="37"/></operator><name pos:line="381" pos:column="34">bb<pos:position pos:line="381" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="381" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="381" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="382" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="384" pos:column="5">/* If we are about to return nothing for a 'blocking' read and we have
     * some data in our zlib buffer, flush it out so we can return something.
     */</comment>
    <if pos:line="387" pos:column="5">if <condition pos:line="387" pos:column="8">(<expr><name pos:line="387" pos:column="9">block<pos:position pos:line="387" pos:column="14"/></name> <operator pos:line="387" pos:column="15">==<pos:position pos:line="387" pos:column="17"/></operator> <name pos:line="387" pos:column="18">APR_BLOCK_READ<pos:position pos:line="387" pos:column="32"/></name> <operator pos:line="387" pos:column="33">&amp;&amp;<pos:position pos:line="387" pos:column="43"/></operator>
            <call><name pos:line="388" pos:column="13">APR_BRIGADE_EMPTY<pos:position pos:line="388" pos:column="30"/></name><argument_list pos:line="388" pos:column="30">(<argument><expr><name><name pos:line="388" pos:column="31">ctx<pos:position pos:line="388" pos:column="34"/></name><operator pos:line="388" pos:column="34">-&gt;<pos:position pos:line="388" pos:column="39"/></operator><name pos:line="388" pos:column="36">proc_bb<pos:position pos:line="388" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="388" pos:column="44"/></argument_list></call> <operator pos:line="388" pos:column="45">&amp;&amp;<pos:position pos:line="388" pos:column="55"/></operator>
            <name><name pos:line="389" pos:column="13">ctx<pos:position pos:line="389" pos:column="16"/></name><operator pos:line="389" pos:column="16">-&gt;<pos:position pos:line="389" pos:column="21"/></operator><name pos:line="389" pos:column="18">stream<pos:position pos:line="389" pos:column="24"/></name><operator pos:line="389" pos:column="24">.<pos:position pos:line="389" pos:column="25"/></operator><name pos:line="389" pos:column="25">avail_out<pos:position pos:line="389" pos:column="34"/></name></name> <operator pos:line="389" pos:column="35">&lt;<pos:position pos:line="389" pos:column="39"/></operator> <name><name pos:line="389" pos:column="37">c<pos:position pos:line="389" pos:column="38"/></name><operator pos:line="389" pos:column="38">-&gt;<pos:position pos:line="389" pos:column="43"/></operator><name pos:line="389" pos:column="40">bufferSize<pos:position pos:line="389" pos:column="50"/></name></name></expr>)<pos:position pos:line="389" pos:column="51"/></condition><then pos:line="389" pos:column="51"> <block pos:line="389" pos:column="52">{
        <decl_stmt><decl><type><name pos:line="390" pos:column="9">apr_bucket<pos:position pos:line="390" pos:column="19"/></name> <modifier pos:line="390" pos:column="20">*<pos:position pos:line="390" pos:column="21"/></modifier></type><name pos:line="390" pos:column="21">tmp_heap<pos:position pos:line="390" pos:column="29"/></name></decl>;<pos:position pos:line="390" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="391" pos:column="9">apr_size_t<pos:position pos:line="391" pos:column="19"/></name></type> <name pos:line="391" pos:column="20">len<pos:position pos:line="391" pos:column="23"/></name></decl>;<pos:position pos:line="391" pos:column="24"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="392" pos:column="9">ctx<pos:position pos:line="392" pos:column="12"/></name><operator pos:line="392" pos:column="12">-&gt;<pos:position pos:line="392" pos:column="17"/></operator><name pos:line="392" pos:column="14">stream<pos:position pos:line="392" pos:column="20"/></name><operator pos:line="392" pos:column="20">.<pos:position pos:line="392" pos:column="21"/></operator><name pos:line="392" pos:column="21">next_out<pos:position pos:line="392" pos:column="29"/></name></name> <operator pos:line="392" pos:column="30">=<pos:position pos:line="392" pos:column="31"/></operator> <name><name pos:line="392" pos:column="32">ctx<pos:position pos:line="392" pos:column="35"/></name><operator pos:line="392" pos:column="35">-&gt;<pos:position pos:line="392" pos:column="40"/></operator><name pos:line="392" pos:column="37">buffer<pos:position pos:line="392" pos:column="43"/></name></name></expr>;<pos:position pos:line="392" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name pos:line="393" pos:column="9">len<pos:position pos:line="393" pos:column="12"/></name> <operator pos:line="393" pos:column="13">=<pos:position pos:line="393" pos:column="14"/></operator> <name><name pos:line="393" pos:column="15">c<pos:position pos:line="393" pos:column="16"/></name><operator pos:line="393" pos:column="16">-&gt;<pos:position pos:line="393" pos:column="21"/></operator><name pos:line="393" pos:column="18">bufferSize<pos:position pos:line="393" pos:column="28"/></name></name> <operator pos:line="393" pos:column="29">-<pos:position pos:line="393" pos:column="30"/></operator> <name><name pos:line="393" pos:column="31">ctx<pos:position pos:line="393" pos:column="34"/></name><operator pos:line="393" pos:column="34">-&gt;<pos:position pos:line="393" pos:column="39"/></operator><name pos:line="393" pos:column="36">stream<pos:position pos:line="393" pos:column="42"/></name><operator pos:line="393" pos:column="42">.<pos:position pos:line="393" pos:column="43"/></operator><name pos:line="393" pos:column="43">avail_out<pos:position pos:line="393" pos:column="52"/></name></name></expr>;<pos:position pos:line="393" pos:column="53"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="395" pos:column="9">ctx<pos:position pos:line="395" pos:column="12"/></name><operator pos:line="395" pos:column="12">-&gt;<pos:position pos:line="395" pos:column="17"/></operator><name pos:line="395" pos:column="14">crc<pos:position pos:line="395" pos:column="17"/></name></name> <operator pos:line="395" pos:column="18">=<pos:position pos:line="395" pos:column="19"/></operator> <call><name pos:line="395" pos:column="20">crc32<pos:position pos:line="395" pos:column="25"/></name><argument_list pos:line="395" pos:column="25">(<argument><expr><name><name pos:line="395" pos:column="26">ctx<pos:position pos:line="395" pos:column="29"/></name><operator pos:line="395" pos:column="29">-&gt;<pos:position pos:line="395" pos:column="34"/></operator><name pos:line="395" pos:column="31">crc<pos:position pos:line="395" pos:column="34"/></name></name></expr></argument>, <argument><expr><operator pos:line="395" pos:column="36">(<pos:position pos:line="395" pos:column="37"/></operator><specifier pos:line="395" pos:column="37">const<pos:position pos:line="395" pos:column="42"/></specifier> <name pos:line="395" pos:column="43">Bytef<pos:position pos:line="395" pos:column="48"/></name> <operator pos:line="395" pos:column="49">*<pos:position pos:line="395" pos:column="50"/></operator><operator pos:line="395" pos:column="50">)<pos:position pos:line="395" pos:column="51"/></operator><name><name pos:line="395" pos:column="51">ctx<pos:position pos:line="395" pos:column="54"/></name><operator pos:line="395" pos:column="54">-&gt;<pos:position pos:line="395" pos:column="59"/></operator><name pos:line="395" pos:column="56">buffer<pos:position pos:line="395" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="395" pos:column="64">len<pos:position pos:line="395" pos:column="67"/></name></expr></argument>)<pos:position pos:line="395" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="395" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><name pos:line="396" pos:column="9">tmp_heap<pos:position pos:line="396" pos:column="17"/></name> <operator pos:line="396" pos:column="18">=<pos:position pos:line="396" pos:column="19"/></operator> <call><name pos:line="396" pos:column="20">apr_bucket_heap_create<pos:position pos:line="396" pos:column="42"/></name><argument_list pos:line="396" pos:column="42">(<argument><expr><operator pos:line="396" pos:column="43">(<pos:position pos:line="396" pos:column="44"/></operator><name pos:line="396" pos:column="44">char<pos:position pos:line="396" pos:column="48"/></name> <operator pos:line="396" pos:column="49">*<pos:position pos:line="396" pos:column="50"/></operator><operator pos:line="396" pos:column="50">)<pos:position pos:line="396" pos:column="51"/></operator><name><name pos:line="396" pos:column="51">ctx<pos:position pos:line="396" pos:column="54"/></name><operator pos:line="396" pos:column="54">-&gt;<pos:position pos:line="396" pos:column="59"/></operator><name pos:line="396" pos:column="56">buffer<pos:position pos:line="396" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="396" pos:column="64">len<pos:position pos:line="396" pos:column="67"/></name></expr></argument>,
                                          <argument><expr><name pos:line="397" pos:column="43">NULL<pos:position pos:line="397" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="397" pos:column="49">f<pos:position pos:line="397" pos:column="50"/></name><operator pos:line="397" pos:column="50">-&gt;<pos:position pos:line="397" pos:column="55"/></operator><name pos:line="397" pos:column="52">c<pos:position pos:line="397" pos:column="53"/></name><operator pos:line="397" pos:column="53">-&gt;<pos:position pos:line="397" pos:column="58"/></operator><name pos:line="397" pos:column="55">bucket_alloc<pos:position pos:line="397" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="397" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="398" pos:column="9">APR_BRIGADE_INSERT_TAIL<pos:position pos:line="398" pos:column="32"/></name><argument_list pos:line="398" pos:column="32">(<argument><expr><name><name pos:line="398" pos:column="33">ctx<pos:position pos:line="398" pos:column="36"/></name><operator pos:line="398" pos:column="36">-&gt;<pos:position pos:line="398" pos:column="41"/></operator><name pos:line="398" pos:column="38">proc_bb<pos:position pos:line="398" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="398" pos:column="47">tmp_heap<pos:position pos:line="398" pos:column="55"/></name></expr></argument>)<pos:position pos:line="398" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="398" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="399" pos:column="9">ctx<pos:position pos:line="399" pos:column="12"/></name><operator pos:line="399" pos:column="12">-&gt;<pos:position pos:line="399" pos:column="17"/></operator><name pos:line="399" pos:column="14">stream<pos:position pos:line="399" pos:column="20"/></name><operator pos:line="399" pos:column="20">.<pos:position pos:line="399" pos:column="21"/></operator><name pos:line="399" pos:column="21">avail_out<pos:position pos:line="399" pos:column="30"/></name></name> <operator pos:line="399" pos:column="31">=<pos:position pos:line="399" pos:column="32"/></operator> <name><name pos:line="399" pos:column="33">c<pos:position pos:line="399" pos:column="34"/></name><operator pos:line="399" pos:column="34">-&gt;<pos:position pos:line="399" pos:column="39"/></operator><name pos:line="399" pos:column="36">bufferSize<pos:position pos:line="399" pos:column="46"/></name></name></expr>;<pos:position pos:line="399" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="400" pos:column="6"/></block></then></if>

    <if pos:line="402" pos:column="5">if <condition pos:line="402" pos:column="8">(<expr><operator pos:line="402" pos:column="9">!<pos:position pos:line="402" pos:column="10"/></operator><call><name pos:line="402" pos:column="10">APR_BRIGADE_EMPTY<pos:position pos:line="402" pos:column="27"/></name><argument_list pos:line="402" pos:column="27">(<argument><expr><name><name pos:line="402" pos:column="28">ctx<pos:position pos:line="402" pos:column="31"/></name><operator pos:line="402" pos:column="31">-&gt;<pos:position pos:line="402" pos:column="36"/></operator><name pos:line="402" pos:column="33">proc_bb<pos:position pos:line="402" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="402" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="402" pos:column="42"/></condition><then pos:line="402" pos:column="42"> <block pos:line="402" pos:column="43">{
        <decl_stmt><decl><type><name pos:line="403" pos:column="9">apr_bucket_brigade<pos:position pos:line="403" pos:column="27"/></name> <modifier pos:line="403" pos:column="28">*<pos:position pos:line="403" pos:column="29"/></modifier></type><name pos:line="403" pos:column="29">newbb<pos:position pos:line="403" pos:column="34"/></name></decl>;<pos:position pos:line="403" pos:column="35"/></decl_stmt>

        <comment type="block" pos:line="405" pos:column="9">/* May return APR_INCOMPLETE which is fine by us. */</comment>
        <expr_stmt><expr><call><name pos:line="406" pos:column="9">apr_brigade_partition<pos:position pos:line="406" pos:column="30"/></name><argument_list pos:line="406" pos:column="30">(<argument><expr><name><name pos:line="406" pos:column="31">ctx<pos:position pos:line="406" pos:column="34"/></name><operator pos:line="406" pos:column="34">-&gt;<pos:position pos:line="406" pos:column="39"/></operator><name pos:line="406" pos:column="36">proc_bb<pos:position pos:line="406" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="406" pos:column="45">readbytes<pos:position pos:line="406" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="406" pos:column="56">&amp;<pos:position pos:line="406" pos:column="61"/></operator><name pos:line="406" pos:column="57">bkt<pos:position pos:line="406" pos:column="60"/></name></expr></argument>)<pos:position pos:line="406" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="406" pos:column="62"/></expr_stmt>

        <expr_stmt><expr><name pos:line="408" pos:column="9">newbb<pos:position pos:line="408" pos:column="14"/></name> <operator pos:line="408" pos:column="15">=<pos:position pos:line="408" pos:column="16"/></operator> <call><name pos:line="408" pos:column="17">apr_brigade_split<pos:position pos:line="408" pos:column="34"/></name><argument_list pos:line="408" pos:column="34">(<argument><expr><name><name pos:line="408" pos:column="35">ctx<pos:position pos:line="408" pos:column="38"/></name><operator pos:line="408" pos:column="38">-&gt;<pos:position pos:line="408" pos:column="43"/></operator><name pos:line="408" pos:column="40">proc_bb<pos:position pos:line="408" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="408" pos:column="49">bkt<pos:position pos:line="408" pos:column="52"/></name></expr></argument>)<pos:position pos:line="408" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="408" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="409" pos:column="9">APR_BRIGADE_CONCAT<pos:position pos:line="409" pos:column="27"/></name><argument_list pos:line="409" pos:column="27">(<argument><expr><name pos:line="409" pos:column="28">bb<pos:position pos:line="409" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="409" pos:column="32">ctx<pos:position pos:line="409" pos:column="35"/></name><operator pos:line="409" pos:column="35">-&gt;<pos:position pos:line="409" pos:column="40"/></operator><name pos:line="409" pos:column="37">proc_bb<pos:position pos:line="409" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="409" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="409" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="410" pos:column="9">APR_BRIGADE_CONCAT<pos:position pos:line="410" pos:column="27"/></name><argument_list pos:line="410" pos:column="27">(<argument><expr><name><name pos:line="410" pos:column="28">ctx<pos:position pos:line="410" pos:column="31"/></name><operator pos:line="410" pos:column="31">-&gt;<pos:position pos:line="410" pos:column="36"/></operator><name pos:line="410" pos:column="33">proc_bb<pos:position pos:line="410" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="410" pos:column="42">newbb<pos:position pos:line="410" pos:column="47"/></name></expr></argument>)<pos:position pos:line="410" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="410" pos:column="49"/></expr_stmt>
        <if pos:line="411" pos:column="9">if <condition pos:line="411" pos:column="12">(<expr><call><name pos:line="411" pos:column="13">APR_BUCKET_IS_EOS<pos:position pos:line="411" pos:column="30"/></name><argument_list pos:line="411" pos:column="30">(<argument><expr><call><name pos:line="411" pos:column="31">APR_BRIGADE_LAST<pos:position pos:line="411" pos:column="47"/></name><argument_list pos:line="411" pos:column="47">(<argument><expr><name pos:line="411" pos:column="48">bb<pos:position pos:line="411" pos:column="50"/></name></expr></argument>)<pos:position pos:line="411" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="411" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="411" pos:column="53"/></condition><then pos:line="411" pos:column="53"> <block pos:line="411" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="412" pos:column="13">ap_remove_input_filter<pos:position pos:line="412" pos:column="35"/></name><argument_list pos:line="412" pos:column="35">(<argument><expr><name pos:line="412" pos:column="36">f<pos:position pos:line="412" pos:column="37"/></name></expr></argument>)<pos:position pos:line="412" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="412" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="413" pos:column="10"/></block></then></if>
    }<pos:position pos:line="414" pos:column="6"/></block></then></if>

    <return pos:line="416" pos:column="5">return <expr><name pos:line="416" pos:column="12">APR_SUCCESS<pos:position pos:line="416" pos:column="23"/></name></expr>;<pos:position pos:line="416" pos:column="24"/></return>
}<pos:position pos:line="417" pos:column="2"/></block></function></unit>

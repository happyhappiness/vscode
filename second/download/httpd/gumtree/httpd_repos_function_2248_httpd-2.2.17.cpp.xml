<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2248_httpd-2.2.17.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">add_ct_output_filters<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">cmd_parms<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">cmd<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">void<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">conf_<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
                                         <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">arg<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="59">const<pos:position pos:line="2" pos:column="64"/></specifier> <name pos:line="2" pos:column="65">char<pos:position pos:line="2" pos:column="69"/></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">arg2<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">core_dir_config<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">conf<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><name pos:line="4" pos:column="29">conf_<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ap_filter_rec_t<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">old<pos:position pos:line="5" pos:column="25"/></name></decl>, <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier>new <init pos:line="5" pos:column="32">= <expr><name pos:line="5" pos:column="34">NULL<pos:position pos:line="5" pos:column="38"/></name></expr></init>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">filter_name<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="10">conf<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">ct_output_filters<pos:position pos:line="8" pos:column="33"/></name></name></expr>)<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34"> <block pos:line="8" pos:column="35">{
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">conf<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">ct_output_filters<pos:position pos:line="9" pos:column="32"/></name></name> <operator pos:line="9" pos:column="33">=<pos:position pos:line="9" pos:column="34"/></operator> <call><name pos:line="9" pos:column="35">apr_hash_make<pos:position pos:line="9" pos:column="48"/></name><argument_list pos:line="9" pos:column="48">(<argument><expr><name><name pos:line="9" pos:column="49">cmd<pos:position pos:line="9" pos:column="52"/></name><operator pos:line="9" pos:column="52">-&gt;<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="54">pool<pos:position pos:line="9" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name pos:line="10" pos:column="9">old<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <name pos:line="10" pos:column="15">NULL<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then>
    <else pos:line="12" pos:column="5">else <block pos:line="12" pos:column="10">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">old<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <operator pos:line="13" pos:column="15">(<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">ap_filter_rec_t<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">*<pos:position pos:line="13" pos:column="32"/></operator><operator pos:line="13" pos:column="32">)<pos:position pos:line="13" pos:column="33"/></operator> <call><name pos:line="13" pos:column="34">apr_hash_get<pos:position pos:line="13" pos:column="46"/></name><argument_list pos:line="13" pos:column="46">(<argument><expr><name><name pos:line="13" pos:column="47">conf<pos:position pos:line="13" pos:column="51"/></name><operator pos:line="13" pos:column="51">-&gt;<pos:position pos:line="13" pos:column="56"/></operator><name pos:line="13" pos:column="53">ct_output_filters<pos:position pos:line="13" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="72">arg2<pos:position pos:line="13" pos:column="76"/></name></expr></argument>,
                                              <argument><expr><name pos:line="14" pos:column="47">APR_HASH_KEY_STRING<pos:position pos:line="14" pos:column="66"/></name></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="68"/></expr_stmt>
        <comment type="block" pos:line="15" pos:column="9">/* find last entry */</comment>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">old<pos:position pos:line="16" pos:column="16"/></name></expr>)<pos:position pos:line="16" pos:column="17"/></condition><then pos:line="16" pos:column="17"> <block pos:line="16" pos:column="18">{
            <while pos:line="17" pos:column="13">while <condition pos:line="17" pos:column="19">(<expr><name><name pos:line="17" pos:column="20">old<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">-&gt;<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="25">next<pos:position pos:line="17" pos:column="29"/></name></name></expr>)<pos:position pos:line="17" pos:column="30"/></condition> <block pos:line="17" pos:column="31">{
                <expr_stmt><expr><name pos:line="18" pos:column="17">old<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <name><name pos:line="18" pos:column="23">old<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">-&gt;<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="28">next<pos:position pos:line="18" pos:column="32"/></name></name></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="19" pos:column="14"/></block></while>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></else></if>

    <while pos:line="23" pos:column="5">while <condition pos:line="23" pos:column="11">(<expr><operator pos:line="23" pos:column="12">*<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">arg<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">&amp;&amp;<pos:position pos:line="23" pos:column="27"/></operator>
           <operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">filter_name<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <call><name pos:line="24" pos:column="27">ap_getword<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name><name pos:line="24" pos:column="38">cmd<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">-&gt;<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="43">pool<pos:position pos:line="24" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="49">&amp;<pos:position pos:line="24" pos:column="54"/></operator><name pos:line="24" pos:column="50">arg<pos:position pos:line="24" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="55">';'<pos:position pos:line="24" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call><operator pos:line="24" pos:column="59">)<pos:position pos:line="24" pos:column="60"/></operator> <operator pos:line="24" pos:column="61">&amp;&amp;<pos:position pos:line="24" pos:column="71"/></operator>
           <call><name pos:line="25" pos:column="12">strcmp<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">(<argument><expr><name pos:line="25" pos:column="19">filter_name<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="32">""<pos:position pos:line="25" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="36"/></condition> <block pos:line="25" pos:column="37">{
        <expr_stmt><expr><operator pos:line="26" pos:column="9">new<pos:position pos:line="26" pos:column="12"/></operator> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <call><name pos:line="26" pos:column="15">apr_pcalloc<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name><name pos:line="26" pos:column="27">cmd<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">-&gt;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="32">pool<pos:position pos:line="26" pos:column="36"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="38">sizeof<argument_list pos:line="26" pos:column="44">(<argument><expr><name pos:line="26" pos:column="45">ap_filter_rec_t<pos:position pos:line="26" pos:column="60"/></name></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="27" pos:column="9">new<pos:position pos:line="27" pos:column="12"/></operator><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">name<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">filter_name<pos:position pos:line="27" pos:column="32"/></name></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>

        <comment type="block" pos:line="29" pos:column="9">/* We found something, so let's append it.  */</comment>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">old<pos:position pos:line="30" pos:column="16"/></name></expr>)<pos:position pos:line="30" pos:column="17"/></condition><then pos:line="30" pos:column="17"> <block pos:line="30" pos:column="18">{
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">old<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">-&gt;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="18">next<pos:position pos:line="31" pos:column="22"/></name></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <operator pos:line="31" pos:column="25">new<pos:position pos:line="31" pos:column="28"/></operator></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then>
        <else pos:line="33" pos:column="9">else <block pos:line="33" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">apr_hash_set<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name><name pos:line="34" pos:column="26">conf<pos:position pos:line="34" pos:column="30"/></name><operator pos:line="34" pos:column="30">-&gt;<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="32">ct_output_filters<pos:position pos:line="34" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="51">arg2<pos:position pos:line="34" pos:column="55"/></name></expr></argument>,
                         <argument><expr><name pos:line="35" pos:column="26">APR_HASH_KEY_STRING<pos:position pos:line="35" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="47">new<pos:position pos:line="35" pos:column="50"/></operator></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="37" pos:column="9">old<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <operator pos:line="37" pos:column="15">new<pos:position pos:line="37" pos:column="18"/></operator></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></while>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">!<pos:position pos:line="40" pos:column="10"/></operator><operator pos:line="40" pos:column="10">new<pos:position pos:line="40" pos:column="13"/></operator></expr>)<pos:position pos:line="40" pos:column="14"/></condition><then pos:line="40" pos:column="14"> <block pos:line="40" pos:column="15">{
        <return pos:line="41" pos:column="9">return <expr><literal type="string" pos:line="41" pos:column="16">"invalid filter name"<pos:position pos:line="41" pos:column="37"/></literal></expr>;<pos:position pos:line="41" pos:column="38"/></return>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <return pos:line="44" pos:column="5">return <expr><name pos:line="44" pos:column="12">NULL<pos:position pos:line="44" pos:column="16"/></name></expr>;<pos:position pos:line="44" pos:column="17"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_3250_httpd-2.2.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">PTRCALL<pos:position pos:line="1" pos:column="20"/></name></type>
<name pos:line="2" pos:column="1">ascii_toUtf8<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">ENCODING<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">enc<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>,
             <parameter><decl><type><specifier pos:line="3" pos:column="14">const<pos:position pos:line="3" pos:column="19"/></specifier> <name pos:line="3" pos:column="20">char<pos:position pos:line="3" pos:column="24"/></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier><modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">fromP<pos:position pos:line="3" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="34">const<pos:position pos:line="3" pos:column="39"/></specifier> <name pos:line="3" pos:column="40">char<pos:position pos:line="3" pos:column="44"/></name> <modifier pos:line="3" pos:column="45">*<pos:position pos:line="3" pos:column="46"/></modifier></type><name pos:line="3" pos:column="46">fromLim<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>,
             <parameter><decl><type><name pos:line="4" pos:column="14">char<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier><modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">toP<pos:position pos:line="4" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="26">const<pos:position pos:line="4" pos:column="31"/></specifier> <name pos:line="4" pos:column="32">char<pos:position pos:line="4" pos:column="36"/></name> <modifier pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></modifier></type><name pos:line="4" pos:column="38">toLim<pos:position pos:line="4" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="44"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <while pos:line="6" pos:column="3">while <condition pos:line="6" pos:column="9">(<expr><operator pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">fromP<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">!=<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">fromLim<pos:position pos:line="6" pos:column="27"/></name> <operator pos:line="6" pos:column="28">&amp;&amp;<pos:position pos:line="6" pos:column="38"/></operator> <operator pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="32">toP<pos:position pos:line="6" pos:column="35"/></name> <operator pos:line="6" pos:column="36">!=<pos:position pos:line="6" pos:column="38"/></operator> <name pos:line="6" pos:column="39">toLim<pos:position pos:line="6" pos:column="44"/></name></expr>)<pos:position pos:line="6" pos:column="45"/></condition>
    <block type="pseudo"><expr_stmt><expr><operator pos:line="7" pos:column="5">*<pos:position pos:line="7" pos:column="6"/></operator><operator pos:line="7" pos:column="6">(<pos:position pos:line="7" pos:column="7"/></operator><operator pos:line="7" pos:column="7">*<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">toP<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">)<pos:position pos:line="7" pos:column="12"/></operator><operator pos:line="7" pos:column="12">++<pos:position pos:line="7" pos:column="14"/></operator> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <operator pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></operator><operator pos:line="7" pos:column="18">(<pos:position pos:line="7" pos:column="19"/></operator><operator pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">fromP<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">)<pos:position pos:line="7" pos:column="26"/></operator><operator pos:line="7" pos:column="26">++<pos:position pos:line="7" pos:column="28"/></operator></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt></block></while>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/gumtree/httpd_repos_function_2916_httpd-2.2.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name></type> <name pos:line="2" pos:column="5">externalSubset1<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">PROLOG_STATE<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">state<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="3" pos:column="21">int<pos:position pos:line="3" pos:column="24"/></name></type> <name pos:line="3" pos:column="25">tok<pos:position pos:line="3" pos:column="28"/></name></decl></parameter>,
		    <parameter><decl><type><specifier pos:line="4" pos:column="21">const<pos:position pos:line="4" pos:column="26"/></specifier> <name pos:line="4" pos:column="27">char<pos:position pos:line="4" pos:column="31"/></name> <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier></type><name pos:line="4" pos:column="33">ptr<pos:position pos:line="4" pos:column="36"/></name></decl></parameter>,
		    <parameter><decl><type><specifier pos:line="5" pos:column="21">const<pos:position pos:line="5" pos:column="26"/></specifier> <name pos:line="5" pos:column="27">char<pos:position pos:line="5" pos:column="31"/></name> <modifier pos:line="5" pos:column="32">*<pos:position pos:line="5" pos:column="33"/></modifier></type><name pos:line="5" pos:column="33">end<pos:position pos:line="5" pos:column="36"/></name></decl></parameter>,
		    <parameter><decl><type><specifier pos:line="6" pos:column="21">const<pos:position pos:line="6" pos:column="26"/></specifier> <name pos:line="6" pos:column="27">ENCODING<pos:position pos:line="6" pos:column="35"/></name> <modifier pos:line="6" pos:column="36">*<pos:position pos:line="6" pos:column="37"/></modifier></type><name pos:line="6" pos:column="37">enc<pos:position pos:line="6" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="41"/></parameter_list>
<block pos:line="7" pos:column="1">{
  <switch pos:line="8" pos:column="3">switch <condition pos:line="8" pos:column="10">(<expr><name pos:line="8" pos:column="11">tok<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition> <block pos:line="8" pos:column="16">{
  <case pos:line="9" pos:column="3">case <expr><name pos:line="9" pos:column="8">XML_TOK_COND_SECT_OPEN<pos:position pos:line="9" pos:column="30"/></name></expr>:<pos:position pos:line="9" pos:column="31"/></case>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">state<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">handler<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">condSect0<pos:position pos:line="10" pos:column="31"/></name></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">XML_ROLE_NONE<pos:position pos:line="11" pos:column="25"/></name></expr>;<pos:position pos:line="11" pos:column="26"/></return>
  <case pos:line="12" pos:column="3">case <expr><name pos:line="12" pos:column="8">XML_TOK_COND_SECT_CLOSE<pos:position pos:line="12" pos:column="31"/></name></expr>:<pos:position pos:line="12" pos:column="32"/></case>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">state<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">includeLevel<pos:position pos:line="13" pos:column="28"/></name></name> <operator pos:line="13" pos:column="29">==<pos:position pos:line="13" pos:column="31"/></operator> <literal type="number" pos:line="13" pos:column="32">0<pos:position pos:line="13" pos:column="33"/></literal></expr>)<pos:position pos:line="13" pos:column="34"/></condition><then pos:line="13" pos:column="34">
      <block type="pseudo"><break pos:line="14" pos:column="7">break;<pos:position pos:line="14" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">state<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">includeLevel<pos:position pos:line="15" pos:column="24"/></name></name> <operator pos:line="15" pos:column="25">-=<pos:position pos:line="15" pos:column="27"/></operator> <literal type="number" pos:line="15" pos:column="28">1<pos:position pos:line="15" pos:column="29"/></literal></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">XML_ROLE_NONE<pos:position pos:line="16" pos:column="25"/></name></expr>;<pos:position pos:line="16" pos:column="26"/></return>
  <case pos:line="17" pos:column="3">case <expr><name pos:line="17" pos:column="8">XML_TOK_PROLOG_S<pos:position pos:line="17" pos:column="24"/></name></expr>:<pos:position pos:line="17" pos:column="25"/></case>
    <return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">XML_ROLE_NONE<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></return>
  <case pos:line="19" pos:column="3">case <expr><name pos:line="19" pos:column="8">XML_TOK_CLOSE_BRACKET<pos:position pos:line="19" pos:column="29"/></name></expr>:<pos:position pos:line="19" pos:column="30"/></case>
    <break pos:line="20" pos:column="5">break;<pos:position pos:line="20" pos:column="11"/></break>
  <case pos:line="21" pos:column="3">case <expr><name pos:line="21" pos:column="8">XML_TOK_NONE<pos:position pos:line="21" pos:column="20"/></name></expr>:<pos:position pos:line="21" pos:column="21"/></case>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name><name pos:line="22" pos:column="9">state<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">includeLevel<pos:position pos:line="22" pos:column="28"/></name></name></expr>)<pos:position pos:line="22" pos:column="29"/></condition><then pos:line="22" pos:column="29">
      <block type="pseudo"><break pos:line="23" pos:column="7">break;<pos:position pos:line="23" pos:column="13"/></break></block></then></if>
    <return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">XML_ROLE_NONE<pos:position pos:line="24" pos:column="25"/></name></expr>;<pos:position pos:line="24" pos:column="26"/></return>
  <default pos:line="25" pos:column="3">default:<pos:position pos:line="25" pos:column="11"/></default>
    <return pos:line="26" pos:column="5">return <expr><call><name pos:line="26" pos:column="12">internalSubset<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">state<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">tok<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="39">ptr<pos:position pos:line="26" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="44">end<pos:position pos:line="26" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="49">enc<pos:position pos:line="26" pos:column="52"/></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="54"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></switch>
  <return pos:line="28" pos:column="3">return <expr><call><name pos:line="28" pos:column="10">common<pos:position pos:line="28" pos:column="16"/></name><argument_list pos:line="28" pos:column="16">(<argument><expr><name pos:line="28" pos:column="17">state<pos:position pos:line="28" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="24">tok<pos:position pos:line="28" pos:column="27"/></name></expr></argument>)<pos:position pos:line="28" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="29"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>
